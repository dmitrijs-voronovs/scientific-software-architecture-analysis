quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Modifiability,"ol_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,double,double,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Jun 2 13:07:40",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction3Binding_double_double_double_double_.html:37996,Inherit,Inheritance,37996,root/html602/RooCFunction3Binding_double_double_double_double_.html,https://root.cern,https://root.cern/root/html602/RooCFunction3Binding_double_double_double_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ol_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,double,double,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Jun 2 15:28:53",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooCFunction3Binding_double_double_double_double_.html:37996,Inherit,Inheritance,37996,root/html604/RooCFunction3Binding_double_double_double_double_.html,https://root.cern,https://root.cern/root/html604/RooCFunction3Binding_double_double_double_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ol_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,double,int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction2Ref<VO,VI1,VI2> Streamer(TBuffer& b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction2Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. template <> void RooCFunction2Ref<Double_t,Double_t,Double_t> ShowMembers(TMemberInspector& insp, char* parent). » Last changed: Mon Dec 7 13:46:20 2009 » Last generated: 2009-12-07 13:46; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction2Binding_double_double_int_.html:34038,variab,variable,34038,root/html526/RooCFunction2Binding_double_double_int_.html,https://root.cern,https://root.cern/root/html526/RooCFunction2Binding_double_double_int_.html,1,['variab'],['variable']
Modifiability,"ol_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,int,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction2Ref<VO,VI1,VI2> Streamer(TBuffer& b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction2Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. template <> void RooCFunction2Ref<Double_t,Double_t,Double_t> ShowMembers(TMemberInspector& insp, char* parent). » Last changed: Mon Dec 7 13:46:21 2009 » Last generated: 2009-12-07 13:46; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction2Binding_double_int_double_.html:34038,variab,variable,34038,root/html526/RooCFunction2Binding_double_int_double_.html,https://root.cern,https://root.cern/root/html526/RooCFunction2Binding_double_int_double_.html,1,['variab'],['variable']
Modifiability,"ol_tSupportsSecondarySelect() const; UInt_tUnrefFirstPhysical(); virtual voidUpdateBoundingBox(); voidUpdateBoundingBoxesOfPhysicals(). protected:. voidPurgeDLRange(UInt_t base, Int_t size) const. private:. TGLLogicalShape&operator=(const TGLLogicalShape&). Data Members; public:. enum ELODAxes { kLODAxesNone; kLODAxesX; kLODAxesY; kLODAxesZ; kLODAxesAll; };. protected:. TGLBoundingBoxfBoundingBox! Shape's bounding box.; UInt_tfDLBase! display-list id base; Bool_tfDLCache! use display list caching; Int_tfDLSize! display-list size for different LODs; UShort_tfDLValid! display-list validity bit-field; TObject*fExternalObj! Also plays the role of ID.; TGLPhysicalShape*fFirstPhysical! first replica; Bool_tfOwnExtObj! External object is a fake; UInt_tfRef! physical instance ref counting; Bool_tfRefStrong! Strong ref (delete on 0 ref); not in scene; TGLScene*fScene! scene where object is stored (can be zero!); static Bool_tfgIgnoreSizeForCameraInterest. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TGLLogicalShape(); Destroy logical shape. void AddRef(TGLPhysicalShape* phys) const; Add reference to given physical shape. void SubRef(TGLPhysicalShape* phys) const; Remove reference to given physical shape, potentially deleting; *this* object when hitting zero ref-count (if fRefStrong is; true). void DestroyPhysicals(); Destroy all physicals attached to this logical. UInt_t UnrefFirstPhysical(); Unreference first physical in the list, returning its id and; making it fit for destruction somewhere else.; Returns 0 if there are no replicas attached. void UpdateBoundingBoxesOfPhysicals(); Update bounding-boxed of all dependent physicals. Bool_t SetDLCache(Bool_t cached); Modify capture of draws into display list cache kTRUE - capture,; kFALSE direct draw. Return kTRUE is state changed, kFALSE if not. Bool_t ShouldDLCache(const TGLRnrCtx& rnrCtx) const; Returns kTRUE if draws should be display list cached; kFALSE otherwise. Here we check",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGLLogicalShape.html:4679,Inherit,Inheritance,4679,root/html534/TGLLogicalShape.html,https://root.cern,https://root.cern/root/html534/TGLLogicalShape.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ol_tTEveElement::fCanEditMainColorAllow editing of main color.; Bool_tTEveElement::fCanEditMainTransAllow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; TEveElement::List_tTEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; TGCompositeFrame*fEmbedBuffer; TGTextButton*fEmptyButt; TEveCompositeFrame*TEveWindow::fEveFrame; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; TEveElement::sLTI_tTEveElement::fItems! Set of list-tree-items.; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; TEveElement::List_tTEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveProjectable::ProjList_tTEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tTEveWindow::fShowTitleBar; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveEleme",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveWindowSlot.html:20654,variab,variable,20654,root/html602/TEveWindowSlot.html,https://root.cern,https://root.cern/root/html602/TEveWindowSlot.html,4,['variab'],['variable']
Modifiability,"ol_tTEveElement::fDestructing!; TRefArray*TEveDigitSet::fDigitIdsArray holding references to external objects.; Bool_tTEveDigitSet::fDisableLigtingDisable lighting for rendering.; Bool_tTEveDigitSet::fEmitSignalsEmit signals on secondary-select.; TEveFrameBox*TEveDigitSet::fFramePointer to frame structure.; Bool_tTEveElement::fHighlighted!; set<int>TEveSecondarySelectable::fHighlightedSetHighlighted indices.; Bool_tTEveDigitSet::fHistoButtonsShow histogram buttons in object editor.; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; TEveDigitSet::DigitBase_t*TEveDigitSet::fLastDigit! The last / current digit added to collection.; Int_tTEveDigitSet::fLastIdx! The last / current idx added to collection.; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Bool_tTEveDigitSet::fOwnIdsFlag specifying if id-objects are owned by the TEveDigitSet.; TEveRGBAPalette*TEveDigitSet::fPalettePointer to signal-color palette.; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveChunkManagerTEveDigitSet::fPlexContainer of digit data.; TEveQuadSet::EQuadType_efQuadType; TEveDigitSet::ERenderMode_eTEveDigitSet::fRenderModeRender mode: as-is / line / filled.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; set<int>TEveSecon",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveQuadSet.html:26546,variab,variable,26546,root/html528/TEveQuadSet.html,https://root.cern,https://root.cern/root/html528/TEveQuadSet.html,1,['variab'],['variable']
Modifiability,"ol_tTEveElement::fPickable; Float_tTEveCaloViz::fPlotEtplot E or Et.; TEveProjectable*TEveProjected::fProjectablelink to original object; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveCaloViz::fScaleAbs; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; Bool_tTEveCaloViz::fValueIsColorInterpret signal value as RGBA color.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. private:. TEveProjection::EPType_efOldProjectionType. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveCalo2D(const char* n = ""TEveCalo2D"", const char* t = """"); Constructor. ~TEveCalo2D(); Destructor. void UpdateProjection(); This is virtual method from base-class TEveProjected. void SetProjection(TEveProjectionManager* proj, TEveProjectable* model); Set projection manager and model object. void BuildCellIdCache(); Build lists of drawn cell IDs. See TEveCalo2DGL::DirecDraw(). void CellSelectionChanged(); Sort slected cells in eta or phi bins for selection and highlight. void CellSelectionChangedInternal(TEveCaloData::vCellId_t& cells, vector<TEveCaloData::vCellId_t*>& cellLists); Sort slected cells in eta or phi bins. void SetScaleAbs(Bool_t ); Set absolute scale in projected calorimeter. Float_t GetValToHeight() const; Virtual function of TEveCaloViz.; Get transformation factor from E/Et to height. void ComputeBBox(); Fill bounding-box information of the base-class TAttBBox (virtual method).; If member 'TEveFrameBox* fFrame' is set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveCalo2D.html:23887,Inherit,Inheritance,23887,root/html532/TEveCalo2D.html,https://root.cern,https://root.cern/root/html532/TEveCalo2D.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ol_tTGCompositeFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGMainFrame::HandleKey(Event_t* event); virtual Bool_tTGMainFrame::HandleMotion(Event_t* event); virtual Bool_tTGMainFrame::HandleSelection(Event_t* event); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGMainFrame::HandleSelectionRequest(Event_t* event); virtual Bool_tHandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tIsCutEnabled(); Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; Bool_tIsScanRedirected(); virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTreeViewer.html:17172,Inherit,InheritsFrom,17172,root/html532/TTreeViewer.html,https://root.cern,https://root.cern/root/html532/TTreeViewer.html,4,['Inherit'],['InheritsFrom']
Modifiability,"ol_tTGFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tHandleKey(Event_t* event); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; Bool_tHasOwnFont() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGButton::IsDown() const; virtual Bool_tTGFrame::IsEditable() const; Bool_tTGWidget::IsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTGButton::IsExclusiveToggle() const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; virtual Bool_tTGButton::IsOn() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTGButton::IsToggleButton() const; Bool_tTObject::IsZombie() const; virtual voidLayout(); static voidTQObject::LoadRQ_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGTextButton.html:12131,Inherit,InheritsFrom,12131,root/html532/TGTextButton.html,https://root.cern,https://root.cern/root/html532/TGTextButton.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ol_tTGFrame::HandleDragLeave(TGFrame*); virtual Bool_tTGFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tHandleKey(Event_t* event); virtual Bool_tTGFrame::HandleMotion(Event_t*); virtual Bool_tTGFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; Bool_tHasOwnFont() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGButton::IsDown() const; virtual Bool_tTGFrame::IsEditable() const; Bool_tTGWidget::IsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTGButton::IsExclusiveToggle() const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; virtual Bool_tTGButton::IsOn() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; virtual Bool_tTGButton::IsToggleButton() const; Bool_tTObject::IsZombie() const; virtual voidLayout(); virtual voidTGWindow::LowerW",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGTextButton.html:11545,Inherit,InheritsFrom,11545,root/html602/TGTextButton.html,https://root.cern,https://root.cern/root/html602/TGTextButton.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ol_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGMainFrame::HandleKey(Event_t* event); virtual Bool_tTGMainFrame::HandleMotion(Event_t* event); virtual Bool_tTGMainFrame::HandleSelection(Event_t* event); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGMainFrame::HandleSelectionRequest(Event_t* event); virtual Bool_tHandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; Bool_tIsAutoSave() const; Bool_tIsBusy() const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; virtual voidT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSessionViewer.html:10737,Inherit,InheritsFrom,10737,root/html532/TSessionViewer.html,https://root.cern,https://root.cern/root/html532/TSessionViewer.html,4,['Inherit'],['InheritsFrom']
Modifiability,"ol_tTGLObject::SetModelCheckClass(TObject* obj, TClass* cls); voidTGLPlot3D::SetPainter(TGLPlotPainter* p). private:. TH3GL(const TH3GL&); TH3GL&operator=(const TH3GL&). Data Members; public:. enum TGLLogicalShape::ELODAxes { kLODAxesNone; kLODAxesX; kLODAxesY; kLODAxesZ; kLODAxesAll; };. protected:. TGLBoundingBoxTGLLogicalShape::fBoundingBox! Shape's bounding box.; TGLPlotCoordinatesTGLPlot3D::fCoord; UInt_tTGLLogicalShape::fDLBase! display-list id base; Bool_tTGLLogicalShape::fDLCache! use display list caching; Int_tTGLLogicalShape::fDLSize! display-list size for different LODs; UShort_tTGLLogicalShape::fDLValid! display-list validity bit-field; TObject*TGLLogicalShape::fExternalObj! Also plays the role of ID.; TGLPhysicalShape*TGLLogicalShape::fFirstPhysical! first replica; TH3*fMModel object dynamic-casted to TH3.; Bool_tTGLObject::fMultiColorAre multiple colors used for object rendering.; Bool_tTGLLogicalShape::fOwnExtObj! External object is a fake; TGLPlotPainter*TGLPlot3D::fPlotPainter; UInt_tTGLLogicalShape::fRef! physical instance ref counting; Bool_tTGLLogicalShape::fRefStrong! Strong ref (delete on 0 ref); not in scene; TGLScene*TGLLogicalShape::fScene! scene where object is stored (can be zero!); static Bool_tTGLLogicalShape::fgIgnoreSizeForCameraInterest. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TH3GL(); Constructor. TH3GL(TH3* h, TPolyMarker3D* pm); Constructor. ~TH3GL(); Destructor. Bool_t SetModel(TObject* obj, Option_t* opt = 0); Set model object. void SetBBox(); Set bounding box. void DirectDraw(TGLRnrCtx& rnrCtx) const; Render with OpenGL. TH3GL(const TH3GL& ). TH3GL& operator=(const TH3GL& ). » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id$ » Last generated: 2015-03-14 16:41; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TH3GL.html:4509,Inherit,Inheritance,4509,root/html534/TH3GL.html,https://root.cern,https://root.cern/root/html534/TH3GL.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ol_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; voidHideContainer(); virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; Bool_tTGWidget::IsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; Bool_tIsFixedSize() const; virtual Bool_tTObject::IsFolder() const; Bool_tIsHidden() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsUndocked() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameEle",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGDockableFrame.html:9581,Inherit,InheritsFrom,9581,root/html532/TGDockableFrame.html,https://root.cern,https://root.cern/root/html532/TGDockableFrame.html,4,['Inherit'],['InheritsFrom']
Modifiability,"ol_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; voidHideDaughters(); virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; Bool_tTGWidget::IsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; virtual voidTGCompositeFra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPconSection.html:9107,Inherit,InheritsFrom,9107,root/html532/TGeoPconSection.html,https://root.cern,https://root.cern/root/html532/TGeoPconSection.html,4,['Inherit'],['InheritsFrom']
Modifiability,"ol_tTGWindow::fNeedRedrawkTRUE if window needs to be redrawn; UInt_tTGFrame::fOptionsframe options; const TGWindow*TGWindow::fParentParent window; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TGTable*fTableTable that this frame belongs to; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tfX0X coordinate of the header frame ; Int_tTGFrame::fYframe y position; Int_tfY0Y coordinate of the header frame; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGTableHeaderFrame(const TGWindow* p, TGTable* table = 0, UInt_t w = 1, UInt_t h = 1, EHeaderType type = kColumnHeader, UInt_t option = 0); TGTableHeaderFrame constuctor. void DrawRegion(Int_t x, Int_t y, UInt_t w, UInt_t h); Draw a region of container in viewport. ~TGTableHeaderFrame(); {}. » Author: Roel Aaij 14/08/2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: Sat Mar 14 16:37:42 2015 » Last generated: 2015-03-14 16:37; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGTableHeaderFrame.html:19063,Inherit,Inheritance,19063,root/html534/TGTableHeaderFrame.html,https://root.cern,https://root.cern/root/html534/TGTableHeaderFrame.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ol_tTH1::Divide(const TH1* h1); virtual Bool_tTH1::Divide(TF1* f1, Double_t c1 = 1); virtual Bool_tTH1::Divide(const TH1* h1, const TH1* h2, Double_t c1 = 1, Double_t c2 = 1, Option_t* option = """")MENU ; virtual voidTH1::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual TH1*TH1::DrawCopy(Option_t* option = """", const char* name_postfix = ""_copy"") const; virtual TH1*TH1::DrawNormalized(Option_t* option = """", Double_t norm = 1) const; virtual voidTH1::DrawPanel()MENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTH1::Eval(TF1* f1, Option_t* option = """"); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTH1::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTH1::ExtendAxis(Double_t x, TAxis* axis); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TH1*TH1::FFT(TH1* h_output, Option_t* option); virtual Int_tFill(Double_t x); virtual Int_tFill(Double_t x, Double_t w); virtual Int_tFill(const char* name, Double_t w); virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTH1::FillN(Int_t ntimes, const Double_t* x, const Double_t* w, Int_t stride = 1); virtual voidTH1::FillN(Int_t, const Double_t*, const Double_t*, const Double_t*, Int_t); virtual voidTH1::FillRandom(const char* fname, Int_t ntimes = 5000); virtual voidTH1::FillRandom(TH1* h, Int_t ntimes = 5000); virtual Int_tTH1::FindBin(Double_t x, Double_t y = 0, Double_t z = 0); virtual Int_tTH1::FindFirstBinAbove(Double_t threshold = 0, Int_t axis = 1) const; virtual Int_tTH1::FindFixBin(Double_t x, Double_t y = 0, Double_t z = 0) const; virtual Int_tTH1::FindLastBinAbove(Double_t threshold = 0, Int_t axis = 1) const; virtual TObject*TH1::FindObject(const char* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH1K.html:3805,Extend,ExtendAxis,3805,root/html602/TH1K.html,https://root.cern,https://root.cern/root/html602/TH1K.html,2,['Extend'],['ExtendAxis']
Modifiability,"ol_tTH1::Divide(const TH1* h1); virtual Bool_tTH1::Divide(TF1* f1, Double_t c1 = 1); virtual Bool_tTH1::Divide(const TH1* h1, const TH1* h2, Double_t c1 = 1, Double_t c2 = 1, Option_t* option = """")MENU ; virtual voidTH1::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual TH1*TH1::DrawCopy(Option_t* option = """", const char* name_postfix = ""_copy"") const; virtual TH1*TH1::DrawNormalized(Option_t* option = """", Double_t norm = 1) const; virtual voidTH1::DrawPanel()MENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTH1::Eval(TF1* f1, Option_t* option = """"); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTH1::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTH1::ExtendAxis(Double_t x, TAxis* axis); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TH1*TH1::FFT(TH1* h_output, Option_t* option); virtual Int_tFill(Double_t x, Double_t y); virtual Int_tFill(Double_t x, Double_t y, Double_t w); virtual Int_tFill(Double_t x, const char* namey, Double_t w); virtual Int_tFill(const char* namex, Double_t y, Double_t w); virtual Int_tFill(const char* namex, const char* namey, Double_t w); virtual voidTNamed::FillBuffer(char*& buffer); virtual voidFillN(Int_t, const Double_t*, const Double_t*, Int_t); virtual voidFillN(Int_t ntimes, const Double_t* x, const Double_t* y, const Double_t* w, Int_t stride = 1); virtual voidFillRandom(const char* fname, Int_t ntimes = 5000); virtual voidFillRandom(TH1* h, Int_t ntimes = 5000); virtual Int_tTH1::FindBin(Double_t x, Double_t y = 0, Double_t z = 0); virtual Int_tFindFirstBinAbove(Double_t threshold = 0, Int_t axis = 1) const; virtual Int_tTH1::FindFixBin(Double_t x, Double_t y = 0, Doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH2.html:3434,Extend,ExtendAxis,3434,root/html602/TH2.html,https://root.cern,https://root.cern/root/html602/TH2.html,2,['Extend'],['ExtendAxis']
Modifiability,"ol_tTH1::Divide(const TH1* h1); virtual Bool_tTH1::Divide(TF1* f1, Double_t c1 = 1); virtual Bool_tTH1::Divide(const TH1* h1, const TH1* h2, Double_t c1 = 1, Double_t c2 = 1, Option_t* option = """")MENU ; virtual voidTH1::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual TH1*TH1::DrawCopy(Option_t* option = """", const char* name_postfix = ""_copy"") const; virtual TH1*TH1::DrawNormalized(Option_t* option = """", Double_t norm = 1) const; virtual voidTH1::DrawPanel()MENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTH1::Eval(TF1* f1, Option_t* option = """"); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTH1::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTH1::ExtendAxis(Double_t x, TAxis* axis); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TH1*TH1::FFT(TH1* h_output, Option_t* option); virtual Int_tFill(Double_t x, Double_t y, Double_t z); virtual Int_tFill(Double_t x, Double_t y, Double_t z, Double_t w); virtual Int_tFill(const char* namex, const char* namey, const char* namez, Double_t w); virtual Int_tFill(const char* namex, Double_t y, const char* namez, Double_t w); virtual Int_tFill(const char* namex, const char* namey, Double_t z, Double_t w); virtual Int_tFill(Double_t x, const char* namey, const char* namez, Double_t w); virtual Int_tFill(Double_t x, const char* namey, Double_t z, Double_t w); virtual Int_tFill(Double_t x, Double_t y, const char* namez, Double_t w); virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTH1::FillN(Int_t ntimes, const Double_t* x, const Double_t* w, Int_t stride = 1); virtual voidTH1::FillN(Int_t, const Double_t*, const Double_t*, const Double_t*, Int_t); virtual v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH3.html:3654,Extend,ExtendAxis,3654,root/html602/TH3.html,https://root.cern,https://root.cern/root/html602/TH3.html,2,['Extend'],['ExtendAxis']
Modifiability,"ol_tTH1::Divide(const TH1* h1); virtual Bool_tTH1::Divide(TF1* f1, Double_t c1 = 1); virtual Bool_tTH1::Divide(const TH1* h1, const TH1* h2, Double_t c1 = 1, Double_t c2 = 1, Option_t* option = """")MENU ; virtual voidTH1::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual TH1*TH1::DrawCopy(Option_t* option = """", const char* name_postfix = ""_copy"") const; virtual TH1*TH1::DrawNormalized(Option_t* option = """", Double_t norm = 1) const; virtual voidTH1::DrawPanel()MENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTH1::Eval(TF1* f1, Option_t* option = """"); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTH1::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTH1::ExtendAxis(Double_t x, TAxis* axis); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TH1*TH1::FFT(TH1* h_output, Option_t* option); virtual Int_tFill(Double_t); virtual Int_tFill(Double_t x, Double_t y); virtual Int_tFill(const char* name, Double_t w); virtual Int_tFill(Double_t x, Double_t y, Double_t w); virtual Int_tFill(Double_t, const char*, Double_t); virtual Int_tFill(const char*, Double_t, Double_t); virtual Int_tFill(const char*, const char*, Double_t); virtual voidTNamed::FillBuffer(char*& buffer); virtual voidFillN(Int_t, const Double_t*, const Double_t*, Int_t); virtual voidFillN(Int_t ntimes, const Double_t* x, const Double_t* y, const Double_t* w, Int_t stride = 1); virtual voidTH2::FillRandom(const char* fname, Int_t ntimes = 5000); virtual voidTH2::FillRandom(TH1* h, Int_t ntimes = 5000); virtual Int_tFindBin(Double_t x, Double_t y, Double_t z = 0); virtual Int_tTH2::FindFirstBinAbove(Double_t threshold = 0, Int_t axis = 1) const; virtual Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH2Poly.html:8256,Extend,ExtendAxis,8256,root/html602/TH2Poly.html,https://root.cern,https://root.cern/root/html602/TH2Poly.html,2,['Extend'],['ExtendAxis']
Modifiability,"ol_tTH1::Divide(const TH1* h1); virtual Bool_tTH1::Divide(TF1* f1, Double_t c1 = 1); virtual Bool_tTH1::Divide(const TH1* h1, const TH1* h2, Double_t c1 = 1, Double_t c2 = 1, Option_t* option = """")MENU ; virtual voidTH1::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual TH1*TH1::DrawCopy(Option_t* option = """", const char* name_postfix = ""_copy"") const; virtual TH1*TH1::DrawNormalized(Option_t* option = """", Double_t norm = 1) const; virtual voidTH1::DrawPanel()MENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTH1::Eval(TF1* f1, Option_t* option = """"); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTH1::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTH1::ExtendAxis(Double_t x, TAxis* axis); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TH1*TH1::FFT(TH1* h_output, Option_t* option); virtual Int_tTH1::Fill(Double_t x); virtual Int_tTH1::Fill(Double_t x, Double_t w); virtual Int_tTH1::Fill(const char* name, Double_t w); virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTH1::FillN(Int_t ntimes, const Double_t* x, const Double_t* w, Int_t stride = 1); virtual voidTH1::FillN(Int_t, const Double_t*, const Double_t*, const Double_t*, Int_t); virtual voidTH1::FillRandom(const char* fname, Int_t ntimes = 5000); virtual voidTH1::FillRandom(TH1* h, Int_t ntimes = 5000); virtual Int_tTH1::FindBin(Double_t x, Double_t y = 0, Double_t z = 0); virtual Int_tTH1::FindFirstBinAbove(Double_t threshold = 0, Int_t axis = 1) const; virtual Int_tTH1::FindFixBin(Double_t x, Double_t y = 0, Double_t z = 0) const; virtual Int_tTH1::FindLastBinAbove(Double_t threshold = 0, Int_t axis = 1) const; virtual TObject*TH1::FindObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH1C.html:3318,Extend,ExtendAxis,3318,root/html602/TH1C.html,https://root.cern,https://root.cern/root/html602/TH1C.html,10,['Extend'],['ExtendAxis']
Modifiability,"ol_tTH1::Divide(const TH1* h1); virtual Bool_tTH1::Divide(TF1* f1, Double_t c1 = 1); virtual Bool_tTH1::Divide(const TH1* h1, const TH1* h2, Double_t c1 = 1, Double_t c2 = 1, Option_t* option = """")MENU ; virtual voidTH1::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual TH1*TH1::DrawCopy(Option_t* option = """", const char* name_postfix = ""_copy"") const; virtual TH1*TH1::DrawNormalized(Option_t* option = """", Double_t norm = 1) const; virtual voidTH1::DrawPanel()MENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTH1::Eval(TF1* f1, Option_t* option = """"); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTH1::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTH1::ExtendAxis(Double_t x, TAxis* axis); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TH1*TH1::FFT(TH1* h_output, Option_t* option); virtual Int_tTH2::Fill(Double_t x, Double_t y); virtual Int_tTH2::Fill(Double_t x, Double_t y, Double_t w); virtual Int_tTH2::Fill(Double_t x, const char* namey, Double_t w); virtual Int_tTH2::Fill(const char* namex, Double_t y, Double_t w); virtual Int_tTH2::Fill(const char* namex, const char* namey, Double_t w); virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTH2::FillN(Int_t, const Double_t*, const Double_t*, Int_t); virtual voidTH2::FillN(Int_t ntimes, const Double_t* x, const Double_t* y, const Double_t* w, Int_t stride = 1); virtual voidTH2::FillRandom(const char* fname, Int_t ntimes = 5000); virtual voidTH2::FillRandom(TH1* h, Int_t ntimes = 5000); virtual Int_tTH1::FindBin(Double_t x, Double_t y = 0, Double_t z = 0); virtual Int_tTH2::FindFirstBinAbove(Double_t threshold = 0, Int_t axis = 1) const; virtual Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH2C.html:3298,Extend,ExtendAxis,3298,root/html602/TH2C.html,https://root.cern,https://root.cern/root/html602/TH2C.html,10,['Extend'],['ExtendAxis']
Modifiability,"ol_tTH1::Divide(const TH1* h1); virtual Bool_tTH1::Divide(TF1* f1, Double_t c1 = 1); virtual Bool_tTH1::Divide(const TH1* h1, const TH1* h2, Double_t c1 = 1, Double_t c2 = 1, Option_t* option = """")MENU ; virtual voidTH1::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual TH1*TH1::DrawCopy(Option_t* option = """", const char* name_postfix = ""_copy"") const; virtual TH1*TH1::DrawNormalized(Option_t* option = """", Double_t norm = 1) const; virtual voidTH1::DrawPanel()MENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTH1::Eval(TF1* f1, Option_t* option = """"); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTH1::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTH1::ExtendAxis(Double_t x, TAxis* axis); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TH1*TH1::FFT(TH1* h_output, Option_t* option); virtual Int_tTH3::Fill(Double_t x, Double_t y, Double_t z); virtual Int_tTH3::Fill(Double_t x, Double_t y, Double_t z, Double_t w); virtual Int_tTH3::Fill(const char* namex, const char* namey, const char* namez, Double_t w); virtual Int_tTH3::Fill(const char* namex, Double_t y, const char* namez, Double_t w); virtual Int_tTH3::Fill(const char* namex, const char* namey, Double_t z, Double_t w); virtual Int_tTH3::Fill(Double_t x, const char* namey, const char* namez, Double_t w); virtual Int_tTH3::Fill(Double_t x, const char* namey, Double_t z, Double_t w); virtual Int_tTH3::Fill(Double_t x, Double_t y, const char* namez, Double_t w); virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTH1::FillN(Int_t ntimes, const Double_t* x, const Double_t* w, Int_t stride = 1); virtual voidTH1::FillN(Int_t, const Double_t*, const Doubl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH3C.html:3298,Extend,ExtendAxis,3298,root/html602/TH3C.html,https://root.cern,https://root.cern/root/html602/TH3C.html,10,['Extend'],['ExtendAxis']
Modifiability,"ol_tTMVA::VariableTransformBase::IsNormalised() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; TMVA::MsgLogger&TMVA::VariableTransformBase::Log() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidMakeFunction(ostream& fout, const TString& fncName, Int_t part, UInt_t trCounter, Int_t cls); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::VariableIdentityTransform&operator=(const TMVA::VariableIdentityTransform&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual Bool_tPrepareTransformation(const vector<TMVA::Event*>&); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::VariableTransformBase::PrintTransformation(ostream&); virtual Int_tTObject::Read(const char* name); virtual voidReadFromXML(void* trfnode); virtual voidReadTransformationFromStream(istream&, const TString&); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMV",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableIdentityTransform.html:4414,Variab,VariableIdentityTransform,4414,root/html602/TMVA__VariableIdentityTransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableIdentityTransform.html,2,['Variab'],['VariableIdentityTransform']
Modifiability,"ol_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const Double_t*TGeoBBox::GetOrigin() const; const char*TGeoShape::GetPointerName() const; virtual Bool_tTGeoBBox::GetPointsOnFacet(Int_t index, Int_t npoints, Double_t* array) const; virtual Bool_tTGeoBBox::GetPointsOnSegments(Int_t npoints, Double_t* array) const; Double_tGetScale(Int_t i) const; TGeoXtru::ThreadData_t&GetThreadData() const; virtual const char*TNamed::GetTitle() const; static TGeoMatrix*TGeoShape::GetTransform(); virtual UInt_tTObject::GetUniqueID() const; Double_tGetX(Int_t i) const; Double_tGetXOffset(Int_t i) const; Double_tGetY(Int_t i) const; Double_tGetYOffset(Int_t i) const; Double_t*GetZ() const; Double_tGetZ(Int_t ipl) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual voidInspectShape() const; voidTObject::InvertBit(UInt_t f); voidTGeoShape::InvertShapeBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGeoShape::IsAssembly() const; static Bool_tTGeoShape::IsCloseToPhi(Double_t epsil, Double_t* point, Double_t c1, Double_t s1, Double_t c2, Double_t s2); virtual Bool_tTGeoShape::IsComposite() const; static Bool_tTGeoShape::IsCrossingSemiplane(Double_t* point, Double_t* dir, Double_t cphi, Double_t sphi, Double_t& snext, Double_t& rxy); virtual Bool_tTGeoBBox::IsCylType() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tTGeoShape::IsInPhiRange(Double_t* point, Double_t phi1, Double_t phi2); virtual Bool_tTGeoBBox::IsNullBox() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTGeoShape::IsReflected() const; Bool_tTGeoShape::IsRunTimeShape() const; static Bool_tTGeoShape::IsSameWithinTolerance(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoXtru.html:6824,Inherit,InheritsFrom,6824,root/html532/TGeoXtru.html,https://root.cern,https://root.cern/root/html532/TGeoXtru.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ol_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const Double_t*TGeoBBox::GetOrigin() const; const char*TGeoShape::GetPointerName() const; virtual Bool_tTGeoBBox::GetPointsOnFacet(Int_t index, Int_t npoints, Double_t* array) const; virtual Bool_tTGeoBBox::GetPointsOnSegments(Int_t npoints, Double_t* array) const; Double_tGetScale(Int_t i) const; TGeoXtru::ThreadData_t&GetThreadData() const; virtual const char*TNamed::GetTitle() const; static TGeoMatrix*TGeoShape::GetTransform(); virtual UInt_tTObject::GetUniqueID() const; Double_tGetX(Int_t i) const; Double_tGetXOffset(Int_t i) const; Double_tGetY(Int_t i) const; Double_tGetYOffset(Int_t i) const; Double_t*GetZ() const; Double_tGetZ(Int_t ipl) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual voidInspectShape() const; voidTObject::InvertBit(UInt_t f); voidTGeoShape::InvertShapeBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGeoShape::IsAssembly() const; static Bool_tTGeoShape::IsCloseToPhi(Double_t epsil, const Double_t* point, Double_t c1, Double_t s1, Double_t c2, Double_t s2); virtual Bool_tTGeoShape::IsComposite() const; static Bool_tTGeoShape::IsCrossingSemiplane(const Double_t* point, const Double_t* dir, Double_t cphi, Double_t sphi, Double_t& snext, Double_t& rxy); virtual Bool_tTGeoBBox::IsCylType() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tTGeoShape::IsInPhiRange(const Double_t* point, Double_t phi1, Double_t phi2); virtual Bool_tTGeoBBox::IsNullBox() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTGeoShape::IsReflected() const; Bool_tTGeoShape::IsRunTimeShape() const; static Bool_tTGeoShape",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoXtru.html:7469,Inherit,InheritsFrom,7469,root/html534/TGeoXtru.html,https://root.cern,https://root.cern/root/html534/TGeoXtru.html,3,['Inherit'],['InheritsFrom']
Modifiability,"ol_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. Int_tFindElement(ULong64_t hash, Long64_t key); voidFixCollisions(Int_t index); Bool_tHighWaterMark(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. Int_tfSize; TExMap::Assoc_t*fTable; Int_tfTally. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TExMap(Int_t mapSize = 100); Create a TExMap. TExMap(const TExMap& map); Copy constructor. TExMap& operator=(const TExMap& ); Assignement operator. ~TExMap(); Delete TExMap. void Add(ULong64_t hash, Long64_t key, Long64_t value); Add an (key,value) pair to the table. The key should be unique. void AddAt(UInt_t slot, ULong64_t hash, Long64_t key, Long64_t value); Add an (key,value) pair to the table. The key should be unique.; If the 'slot' is open, use it to store the value,; otherwise revert to Add(hash,key,value); This is usually used in conjuction with GetValue wiht 3 parameters:; if ((idx = (ULong64_t)fMap->GetValue(hash, key, slot)) != 0) {. } else {; fMap->AddAt(slot,hash,key,value);; }. Long64_t & operator()(ULong64_t hash, Long64_t key); Return a reference to the value belonging to the key with the; specified hash value. If the key does not exist it will be added.; NOTE: the reference will be invalidated an Expand() triggered b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TExMap.html:5965,Inherit,Inheritance,5965,root/html532/TExMap.html,https://root.cern,https://root.cern/root/html532/TExMap.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ol_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TCurlyArcEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor of CurlyArc GUI. ~TCurlyArcEditor(); Destructor of CurlyArc editor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Pick up the used curly arc attributes. void DoCenterXY(); Slot connected to set center . void DoRadius(); Slot connected to the radius setting. void DoPhimin(); Slot connected to the phimin setting. void DoPhimax(); Slot connected to the phimax setting. » Author: Ilka Antcheva, Otto Schaile 15/12/04 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/ged:$Id$ » Last generated: 2015-03-12 16:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TCurlyArcEditor.html:20075,Inherit,Inheritance,20075,root/html534/TCurlyArcEditor.html,https://root.cern,https://root.cern/root/html534/TCurlyArcEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ol_t_showPid; Bool_t_silentMode; vector<StreamConfig>_streams; stack<std::vector<StreamConfig> >_streamsSaved. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void cleanup(); Cleanup function called by atexit() handler installed by RooSentinel; to delete all global object upon program termination. RooMsgService(); Constructor. Defines names of message levels; and mapping of topic codes to topic names; Install default message streams. ~RooMsgService(); Destructor. Bool_t anyDebug(); Returns true if any debug level stream is active. RooWorkspace* debugWorkspace(). Int_t addStream(RooFit::MsgLevel level, const RooCmdArg& arg1 = RooCmdArg(), const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg(), const RooCmdArg& arg4 = RooCmdArg(), const RooCmdArg& arg5 = RooCmdArg(), const RooCmdArg& arg6 = RooCmdArg()); Add a message logging stream for message with given RooFit::MsgLevel or higher (i.e. more severe); This method accepts the following arguments to configure the stream. Output Style options. Prefix(Bool_t flag=kTRUE) -- Prefix all messages in this stream with Topic/Originator information. Filtering options. Topic(const char*) -- Restrict stream to messages on given topic; ObjectName(const char*) -- Restrict stream to messages from object with given name; ClassName(const char*) -- Restrict stream to messages from objects with given class name; BaseClassName(const char*)-- Restrict stream to messages from objects with given base class name; LabelName(const chat*) -- Restrict stream to messages from objects setAtrribute(const char*) tag with given name. Output redirection options. OutputFile(const char*) -- Send output to file with given name. Multiple streams can write to same file.; OutputStream(ostream&) -- Send output to given C++ stream. Multiple message streams can write to same c++ stream. The return value is the unique ID code of the defined stream. void deleteStream(Int_t id); Delete stream with given un",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooMsgService.html:8949,config,configure,8949,root/html528/RooMsgService.html,https://root.cern,https://root.cern/root/html528/RooMsgService.html,6,['config'],['configure']
Modifiability,"ol_tfDisableWriting! set to true in order to suppress writing to XML; TH1*fEffSefficiency histogram for rootfinder; vector<const std::vector<TMVA::Event*>*>fEventCollectionsif the method needs the complete event-collection, the transformed event coll. ist stored here.; TStringfFileDirunix sub-directory for weight files (default: ""weights""); Bool_tfHasMVAPdfsMVA Pdfs are created for this classifier; Bool_tfHelphelp flag; Bool_tfIgnoreNegWeightsInTrainingIf true, events with negative weights are not used in training; TStringfJobNamename of job -> user defined, appears in weight files; TMVA::PDF*fMVAPdfBbackground MVA PDF; TMVA::PDF*fMVAPdfSsignal MVA PDF; Double_tfMeanBmean (background); Double_tfMeanSmean (signal); TDirectory*fMethodBaseDirbase directory for the method; TStringfMethodNamename of the method (set in derived class); TMVA::Types::EMVAfMethodTypetype of method (set in derived class) ; Int_tfNbinsMVAPdfnumber of bins used in histogram that creates PDF; Bool_tfNormalisenormalise input variables; Int_tfNsmoothMVAPdfnumber of times a histogram is smoothed before creating the PDF; TStringfParentDirmethod parent name, like booster name; UInt_tfROOTTrainingVersionROOT version used for training; Double_tfRmsBRMS (background); Double_tfRmsSRMS (signal); Double_tfSignalReferenceCutminimum requirement on the MVA output to declare an event signal-like; TMVA::PDF*fSplBPDFs of MVA distribution (background); TMVA::TSpline1*fSplRefBhelper splines for RootFinder (background); TMVA::TSpline1*fSplRefShelper splines for RootFinder (signal); TMVA::PDF*fSplSPDFs of MVA distribution (signal); TMVA::PDF*fSplTrainBPDFs of training MVA distribution (background); TSpline*fSplTrainEffBvsSsplines for training signal eff. versus background eff.; TMVA::TSpline1*fSplTrainRefBhelper splines for RootFinder (background); TMVA::TSpline1*fSplTrainRefShelper splines for RootFinder (signal); TMVA::PDF*fSplTrainSPDFs of training MVA distribution (signal); TSpline*fSpleffBvsSsplines for signal e",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodBase.html:17332,variab,variables,17332,root/html528/TMVA__MethodBase.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodBase.html,1,['variab'],['variables']
Modifiability,"ol_tfIsMacroplugin is a macro and not a library; TFunction*fMethod!ctor method or global function; TStringfOriginorigin of plugin handler definition; TStringfPluginplugin library which should contain fClass; TStringfRegexpregular expression which must be matched in URI. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPluginHandler(const char* base, const char* regexp, const char* className, const char* pluginName, const char* ctor, const char* origin); Create a plugin handler. Called by TPluginManager. ~TPluginHandler(); Cleanup plugin handler object. Bool_t CanHandle(const char* base, const char* uri); Check if regular expression appears in the URI, if so return kTRUE.; If URI = 0 always return kTRUE. void SetupCallEnv(); Setup ctor or static method call environment. Int_t CheckPlugin() const; Check if the plugin library for this handler exits. Returns 0; when it exists and -1 in case the plugin does not exist. Int_t LoadPlugin(); Load the plugin library for this handler. Returns 0 on successful loading; and -1 in case the library does not exist or in case of error. Bool_t CheckForExecPlugin(Int_t nargs); Check that we can properly run ExecPlugin. void Print(Option_t* opt = """") const; Print info about the plugin handler. If option is ""a"" print; also the ctor's that will be used. TPluginHandler(); { }. TPluginHandler(const char* base, const char* regexp, const char* className, const char* pluginName, const char* ctor, const char* origin). TPluginHandler& operator=(const TPluginHandler& ). const char * GetBase() const; { return fBase; }. const char * GetRegexp() const; { return fRegexp; }. const char * GetPlugin() const; { return fPlugin; }. const char * GetCtor() const; { return fCtor; }. const char * GetOrigin() const; { return fOrigin; }. const char * GetClass() const; { return fClass; }. » Author: Fons Rademakers 26/1/2002 » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPluginHandler.html:10583,plugin,plugin,10583,root/html602/TPluginHandler.html,https://root.cern,https://root.cern/root/html602/TPluginHandler.html,4,['plugin'],['plugin']
Modifiability,"ol_tfTextChangedtrue if text has been changed; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static const TGFont*fgDefaultFont; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGGC*fgDefaultGC; static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGTextLBEntry(const TGWindow* p = 0, TGString* s = 0, Int_t id = -1, GContext_t norm = GetDefaultGC()(), FontStruct_t font = GetDefaultFontStruct(), UInt_t options = kHorizontalFrame, Pixel_t back = GetWhitePixel()); Create a text listbox entry. The TGString is adopted. ~TGTextLBEntry(); Delete text listbox entry. void DrawCopy(Handle_t id, Int_t x, Int_t y); Draw text listbox entry on window/pixmap. void DoRedraw(); Redraw text listbox entry. void SetText(TGString* new_text); Set or change text in text entry. FontStruct_t GetDefaultFontStruct(); Return default font structure in use for a text listbox entry. const TGGC & GetDefaultGC(); Return default graphics context in use for a text listbox entry. void SavePrimitive(ostream& out, Option_t* = """"); Save a list box entry widget as a C++ statement(s) on output stream out. void Update(TGLBEntry* e); { }. TGTextLBEntry(const TGTextLBEntry& ). TGTextLBEntry & operator=(const TGTextLBEntry&",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGTextLBEntry.html:18201,Inherit,Inheritance,18201,root/html532/TGTextLBEntry.html,https://root.cern,https://root.cern/root/html532/TGTextLBEntry.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ol_t GetDepthTest ();  ; REveChunkManager & GetLinePlex ();  ; REveChunkManager & GetMarkerPlex ();  ; virtual Bool_t GetRnrLines ();  ; virtual Bool_t GetRnrMarkers ();  ; TClass * ProjectedClass (const REveProjection *p) const override;  Return class of projected object. ;  ; virtual void SetDepthTest (Bool_t x);  ; void SetLine (int idx, const REveVector &p1, const REveVector &p2);  Set line vertices with given index. ;  ; void SetLine (int idx, Float_t x1, Float_t y1, Float_t z1, Float_t x2, Float_t y2, Float_t z2);  Set line vertices with given index. ;  ; void SetLineColor (Color_t col) override;  Set the line color. ;  ; virtual void SetRnrLines (Bool_t x);  ; virtual void SetRnrMarkers (Bool_t x);  ; Int_t WriteCoreJson (nlohmann::json &j, Int_t rnr_offset) override;  Fill core part of JSON representation. ;  ; void WriteVizParams (std::ostream &out, const TString &var) override;  Write visualization parameters. ;  ;  Public Member Functions inherited from ROOT::Experimental::REveElement;  REveElement (const REveElement &e);  Copy constructor. ;  ;  REveElement (const std::string &name="""", const std::string &title="""");  Default constructor. ;  ; virtual ~REveElement ();  Destructor. ;  ; virtual Bool_t AcceptElement (REveElement *el);  Check if el can be added to this element. ;  ; virtual void AddAunt (REveAunt *au);  Add el into the list aunts. ;  ; virtual void AddElement (REveElement *el);  Add el to the list of children. ;  ; virtual void AddStamp (UChar_t bits);  Add (bitwise or) given stamps to fChangeBits. ;  ; virtual void Annihilate ();  Optimized destruction without check of reference-count. ;  ; virtual void AnnihilateElements ();  Annihilate elements. ;  ; Bool_t ApplyVizTag (const TString &tag, const TString &fallback_tag="""");  Set the VizTag, find model-element from the VizDB and copy visualization-parameters from it. ;  ; virtual Bool_t CanEditElement () const;  ; virtual Bool_t CanEditMainColor () const;  ; virtual Bool_t CanEditMainTrans ()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveStraightLineSet.html:2440,inherit,inherited,2440,doc/master/classROOT_1_1Experimental_1_1REveStraightLineSet.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveStraightLineSet.html,1,['inherit'],['inherited']
Modifiability,"ol_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Int_t fNumber;  Color number identifier. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions; void Allocate ();  Make this color known to the graphics system. ;  . Static Private Member Functions; static Float_t HLStoRGB1 (Float_t rn1, Float_t rn2, Float_t huei);  Static method. Auxiliary to HLS2RGB(). ;  . Private Attributes; Float_t fAlpha;  Alpha (transparency) ;  ; Float_t fBlue;  Fraction of Blue. ;  ; Float_t fGreen;  Fraction of Green. ;  ; Float_t fHue;  Hue. ;  ; Float_t fLight;  Light. ;  ; Float_t fRed;  Fraction of Red. ;  ; Float_t fSaturation;  Saturation. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TColor.h>. Inheritance diagram for TColor:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTColor.html:42616,inherit,inherited,42616,doc/master/classTColor.html,https://root.cern,https://root.cern/doc/master/classTColor.html,1,['inherit'],['inherited']
Modifiability,"ol_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ;  Protected Member Functions inherited from RooAbsHiddenReal; RooAbsCategory & dummyBlindState () const;  Return reference to internal dummy RooCategory implementation blinding state switch. ;  ; double getValV (const RooArgSet *nset=nullptr) const override;  Return value of object. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that creates the actual integral object. ;  ; void fillTreeBranch (TTree &t) override;  Fill the tree branch that associated with this object with its current value. ;  ; void findInnerMostIntegration (const RooArgSet &all",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooUnblindCPAsymVar.html:49722,inherit,inherited,49722,doc/master/classRooUnblindCPAsymVar.html,https://root.cern,https://root.cern/doc/master/classRooUnblindCPAsymVar.html,1,['inherit'],['inherited']
Modifiability,"ol_t IsCompoundOpen () const;  ; void OpenCompound ();  ; TClass * ProjectedClass (const TEveProjection *p) const override;  Virtual from TEveProjectable, returns TEveCompoundProjected class. ;  ; void RemoveElementLocal (TEveElement *el) override;  Decompoundofy el, call base-class version. ;  ; void RemoveElementsLocal () override;  Decompoundofy children, call base-class version. ;  ; void SetMainColor (Color_t color) override;  SetMainColor for the compound. ;  ; void SetMainTransparency (Char_t t) override;  SetMainTransparency for the compound. ;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TEveElementList;  TEveElementList (const char *n=""TEveElementList"", const char *t="""", Bool_t doColor=kFALSE, Bool_t doTransparency=kFALSE);  Constructor. ;  ;  TEveElementList (const TEveElementList &e);  Copy constructor. ;  ;  ~TEveElementList () override;  ; Bool_t AcceptElement (TEveElement *el) override;  Check if TEveElement el is inherited from fChildClass. ;  ; TEveElementList * CloneElement () const override;  Clone the element via copy constructor. ;  ; TClass * GetChildClass () const;  ; const char * GetElementName () const override;  Virtual function for retrieving name of the element. ;  ; const char * GetElementTitle () const override;  Virtual function for retrieving title of the render-element. ;  ; TObject * GetObject (const TEveException &=""TEveElementList::GetObject "") const override;  Get a TObject associated with this render-element. ;  ; TClass * IsA () const override;  ; TClass * ProjectedClass (const TEveProjection *p) const override;  Virtual from TEveProjectable, returns TEveCompoundProjected class. ;  ; void SetChildClass (TClass *c);  ; void SetElementName (const char *name) override;  Virtual function for setting of name of an element. ;  ; void SetElementNameTitle (const char *name, const char *title) override;  Virtual function for setting of ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCompound.html:1951,inherit,inherited,1951,doc/master/classTEveCompound.html,https://root.cern,https://root.cern/doc/master/classTEveCompound.html,1,['inherit'],['inherited']
Modifiability,ol_t IsEnabled () const;  ; virtual void SetCommand (const char *command);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t WantFocus () const;  ; Int_t WidgetId () const;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static FontStruct_t GetDefaultFontStruct ();  Return default font structure. ;  ;  Static Public Member Functions inherited from TGButton; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetDefaultGC ();  Return default graphics context. ;  ; static const TGGC & GetHibckgndGC ();  Return graphics context for highlighted frame background. ;  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics context. ;  ; static Pixel_t GetWhitePixel ();  Get white pixel value. ;  ;  Static Public Member Functions inherited from TGWindow; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetCounter ();  Return global,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextButton.html:23564,inherit,inherited,23564,doc/master/classTGTextButton.html,https://root.cern,https://root.cern/doc/master/classTGTextButton.html,1,['inherit'],['inherited']
Modifiability,"ol_t IsInplace () const override;  ; void SetPoint (const Int_t *ipoint, Double_t re, Double_t) override;  Since multidimensional R2HC and HC2R transforms are not supported, third parameter is dummy. ;  ; void SetPoint (Int_t ipoint, Double_t re, Double_t im=0) override;  ; void SetPointComplex (Int_t, TComplex &) override;  ; void SetPoints (const Double_t *data) override;  Sets all points. ;  ; void SetPointsComplex (const Double_t *, const Double_t *) override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Transform () override;  Computes the transform, specified in Init() function. ;  ;  Public Member Functions inherited from TVirtualFFT;  TVirtualFFT ();  ; virtual ~TVirtualFFT ();  destructor ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFFTReal.html:4943,inherit,inherited,4943,doc/master/classTFFTReal.html,https://root.cern,https://root.cern/doc/master/classTFFTReal.html,1,['inherit'],['inherited']
Modifiability,"ol_t TransSolve (TMatrixDColumn &b) override;  Solve A^T x=b assuming the LU form of A^T is stored in fLU, but assume b has not been transformed. ;  ; Bool_t TransSolve (TVectorD &b) override;  Solve A^T x=b assuming the LU form of A^T is stored in fLU, but assume b has not been transformed. ;  ;  Public Member Functions inherited from TDecompBase;  TDecompBase ();  Default constructor. ;  ;  TDecompBase (const TDecompBase &another);  Copy constructor. ;  ;  ~TDecompBase () override;  ; virtual Double_t Condition ();  Matrix condition number. ;  ; Int_t GetColLwb () const;  ; Double_t GetCondition () const;  ; Double_t GetDet1 () const;  ; Double_t GetDet2 () const;  ; Int_t GetRowLwb () const;  ; Double_t GetTol () const;  ; virtual Bool_t MultiSolve (TMatrixD &B);  Solve set of equations with RHS in columns of B. ;  ; TDecompBase & operator= (const TDecompBase &source);  Assignment operator. ;  ; Double_t SetTol (Double_t tol);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDecompLU.html:4245,inherit,inherited,4245,doc/master/classTDecompLU.html,https://root.cern,https://root.cern/doc/master/classTDecompLU.html,1,['inherit'],['inherited']
Modifiability,"olation; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; TEveElement::List_tTEveElement::fParentsList of parents.; TEveTrack::vPathMark_tTEveTrack::fPathMarksTEveVector of known points along the track; Int_tTEveTrack::fPdgPDG code; Bool_tTEveElement::fPickable; TEveProjectable*TEveProjected::fProjectablelink to original object; TEveProjectable::ProjList_tTEveProjectable::fProjectedListreferences to projected instances.; TEveTrackPropagator*TEveTrack::fPropagatorPointer to shared render-style; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveLine::fRnrLine; Bool_tTEveLine::fRnrPoints; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; Bool_tTEveLine::fSmooth; TRefTEveElement::fSourceExternal object that is represented by this element.; TEvePointSelectorConsumer::ETreeVarType_eTEvePointSelectorConsumer::fSourceCSCoordinate-System of the source tree variables; Int_tTEveTrack::fStatusStatus-word, user-defined.; TStringTEvePointSet::fTitleTitle/tooltip of the TEvePointSet.; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveVectorDTEveTrack::fVStarting vertex; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static Bool_tTEveLine::fgDefaultSmooth; static TEveElement::EDestructTEveElement::kAnnihilate; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveTrackProjected.html:31278,variab,variables,31278,root/html602/TEveTrackProjected.html,https://root.cern,https://root.cern/root/html602/TEveTrackProjected.html,4,['variab'],['variables']
Modifiability,"olation; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; vector<TEvePathMarkT<double> >TEveTrack::fPathMarksTEveVector of known points along the track; Int_tTEveTrack::fPdgPDG code; Bool_tTEveElement::fPickable; TEveProjectable*TEveProjected::fProjectablelink to original object; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; TEveTrackPropagator*TEveTrack::fPropagatorPointer to shared render-style; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveLine::fRnrLine; Bool_tTEveLine::fRnrPoints; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; Bool_tTEveLine::fSmooth; TRefTEveElement::fSourceExternal object that is represented by this element.; TEvePointSelectorConsumer::ETreeVarType_eTEvePointSelectorConsumer::fSourceCSCoordinate-System of the source tree variables; Int_tTEveTrack::fStatusStatus-word, user-defined.; TStringTEvePointSet::fTitleTitle/tooltip of the TEvePointSet.; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveVectorDTEveTrack::fVStarting vertex; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static Bool_tTEveLine::fgDefaultSmooth. private:. TEveVector*fOrigPntsoriginal track points. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveTrackProjected(); Default constructor. void SetProjection(TEveProjectionManager* mng, TEveProjectable* model); This is virtual method from base-class TEveProjected. void SetDepthLocal(Float_t d); Set depth (z-c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveTrackProjected.html:30725,variab,variables,30725,root/html530/TEveTrackProjected.html,https://root.cern,https://root.cern/root/html530/TEveTrackProjected.html,5,['variab'],['variables']
Modifiability,"old::GetNpar() const; Int_tTUnfold::GetNr() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; voidTUnfold::GetOutput(TH1* output, const Int_t* binMap = 0) const; voidTUnfold::GetProbabilityMatrix(TH2* A, TUnfold::EHistMap histmap) const; Double_tTUnfold::GetRhoAvg() const; Double_tTUnfold::GetRhoI(TH1* rhoi, const Int_t* binMap = 0, TH2* invEmat = 0) const; voidTUnfold::GetRhoIJ(TH2* rhoij, const Int_t* binMap = 0) const; voidGetRhoItotal(TH1* rhoi, const Int_t* binMap = 0, TH2* invEmat = 0); Double_tTUnfold::GetRhoMax() const; Double_tTUnfold::GetTau() const; virtual const char*TObject::GetTitle() const; static const char*TUnfold::GetTUnfoldVersion(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TUnfoldSys.html:8141,Inherit,InheritsFrom,8141,root/html534/TUnfoldSys.html,https://root.cern,https://root.cern/root/html534/TUnfoldSys.html,1,['Inherit'],['InheritsFrom']
Modifiability,"old::GetNpar() const; Int_tTUnfold::GetNr() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; voidTUnfold::GetOutput(TH1* output, const Int_t* binMap = 0) const; voidTUnfold::GetProbabilityMatrix(TH2* A, TUnfold::EHistMap histmap) const; Double_tTUnfold::GetRhoAvg() const; Double_tTUnfold::GetRhoI(TH1* rhoi, const Int_t* binMap = 0, TH2* invEmat = 0) const; voidTUnfold::GetRhoIJ(TH2* rhoij, const Int_t* binMap = 0) const; voidGetRhoItotal(TH1* rhoi, const Int_t* binMap = 0, TH2* invEmat = 0); Double_tTUnfold::GetRhoMax() const; Double_tTUnfold::GetTau() const; virtual const char*TObject::GetTitle() const; static const char*TUnfold::GetTUnfoldVersion(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TUnfoldSys.html:7981,Inherit,InheritsFrom,7981,root/html602/TUnfoldSys.html,https://root.cern,https://root.cern/root/html602/TUnfoldSys.html,2,['Inherit'],['InheritsFrom']
Modifiability,"oldef=1, Int_t fondef=61, Float_t sizdef=1);  Save text attributes as C++ statement(s) on output stream out. ;  ; virtual void SetTextAlign (Short_t align=11);  Set the text alignment. ;  ; virtual void SetTextAngle (Float_t tangle=0);  Set the text angle. ;  ; virtual void SetTextAttributes ();  Invoke the DialogCanvas Text attributes. ;  ; virtual void SetTextColor (Color_t tcolor=1);  Set the text color. ;  ; virtual void SetTextColorAlpha (Color_t tcolor, Float_t talpha);  Set a transparent text color. ;  ; virtual void SetTextFont (Font_t tfont=62);  Set the text font. ;  ; virtual void SetTextSize (Float_t tsize=1);  Set the text size. ;  ; virtual void SetTextSizePixels (Int_t npixels);  Set the text size in pixel. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions;  TGLText (const TGLText &)=delete;  ; TGLText & operator= (const TGLText &)=delete;  . Private Attributes; Double_t fAngle1;  ; Double_t fAngle2;  ; Double_t fAngle3;  ; FTFont * fGLTextFont;  ; Double_t fX;  ; Double_t fY;  ; Double_t fZ;  . Additional Inherited Members;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . #include <TGLText.h>. Inheritance diagram for TGLText:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGLText() [1/3]. TGLText::TGLText ; (; const TGLText & ; ). privatedele",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLText.html:3394,inherit,inherited,3394,doc/master/classTGLText.html,https://root.cern,https://root.cern/doc/master/classTGLText.html,1,['inherit'],['inherited']
Modifiability,"ole objects in values ;  ; Version_t fClVersion {0};  custom structure for stl container reading ;  ; TStreamerElement * fElem {nullptr};  ; std::unique_ptr< TArrayIndexProducer > fIndx;  indent level ;  ; TStreamerInfo * fInfo {nullptr};  ; Bool_t fIsElemOwner {kFALSE};  ; Bool_t fIsObjStarted {kFALSE};  indicate that value is written ;  ; Bool_t fIsPostProcessed {kFALSE};  ; Bool_t fIsStreamerInfo {kFALSE};  element in streamer info ;  ; Int_t fLevel {0};  pointer on members counter, can be inherit from parent stack objects ;  ; int fMemberCnt {1};  raw values ;  ; int * fMemberPtr {nullptr};  count number of object members, normally _typename is first member ;  ; nlohmann::json * fNode {nullptr};  producer of ndim indexes ;  ; std::unique_ptr< StlRead > fStlRead;  JSON node, used for reading. ;  ; std::vector< std::string > fValues;  enable base64 coding when writing array ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTJSONStackObj.html:9966,inherit,inherited,9966,doc/master/classTJSONStackObj.html,https://root.cern,https://root.cern/doc/master/classTJSONStackObj.html,1,['inherit'],['inherited']
Modifiability,"olete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::MethodBase&operator=(const TMVA::MethodBase&); virtual map<TString,Double_t>OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidPrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; virtual voidProcessOptions(); voidProcessSetup(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidReadStateFromFile(); voidReadStateFromStream(istream& tf); voidReadStateFromStream(TFile& rf); voidReadStateFromXMLString(const char* xmlstr); virtual voidTObject::RecursiveRemove(TObject* obj); voidRerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidReset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidSetAnalysisType(TMVA::Types::EAnalysisType type); voidSetBaseDir(TDirectory* methodDir); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodBase.html:10273,Config,Configurable,10273,root/html602/TMVA__MethodBase.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodBase.html,2,['Config'],['Configurable']
Modifiability,"oll calls.; 467 * The timeouts depend on ""*_timeout_ms"" configuration values, but long; 468 * timeouts are split into timouts as small as SOCKET_TIMEOUT_QUANTUM.; 469 * This reduces the time required to stop the server. */; 470#if !defined(SOCKET_TIMEOUT_QUANTUM); 471#define SOCKET_TIMEOUT_QUANTUM (2000) /* in ms */; 472#endif; 473 ; 474/* Do not try to compress files smaller than this limit. */; 475#if !defined(MG_FILE_COMPRESSION_SIZE_LIMIT); 476#define MG_FILE_COMPRESSION_SIZE_LIMIT (1024) /* in bytes */; 477#endif; 478 ; 479#if !defined(PASSWORDS_FILE_NAME); 480#define PASSWORDS_FILE_NAME "".htpasswd""; 481#endif; 482 ; 483/* Initial buffer size for all CGI environment variables. In case there is; 484 * not enough space, another block is allocated. */; 485#if !defined(CGI_ENVIRONMENT_SIZE); 486#define CGI_ENVIRONMENT_SIZE (4096) /* in bytes */; 487#endif; 488 ; 489/* Maximum number of environment variables. */; 490#if !defined(MAX_CGI_ENVIR_VARS); 491#define MAX_CGI_ENVIR_VARS (256) /* in variables (count) */; 492#endif; 493 ; 494/* General purpose buffer size. */; 495#if !defined(MG_BUF_LEN) /* in bytes */; 496#define MG_BUF_LEN (1024 * 8); 497#endif; 498 ; 499 ; 500/********************************************************************/; 501 ; 502/* Helper makros */; 503#if !defined(ARRAY_SIZE); 504#define ARRAY_SIZE(array) (sizeof(array) / sizeof(array[0])); 505#endif; 506 ; 507#include <stdint.h>; 508 ; 509/* Standard defines */; 510#if !defined(INT64_MAX); 511#define INT64_MAX (9223372036854775807); 512#endif; 513 ; 514#define SHUTDOWN_RD (0); 515#define SHUTDOWN_WR (1); 516#define SHUTDOWN_BOTH (2); 517 ; 518mg_static_assert(MAX_WORKER_THREADS >= 1,; 519 ""worker threads must be a positive number"");; 520 ; 521mg_static_assert(sizeof(size_t) == 4 || sizeof(size_t) == 8,; 522 ""size_t data type size check"");; 523 ; 524 ; 525#if defined(_WIN32) /* WINDOWS include block */; 526#include <malloc.h> /* *alloc( */; 527#include <stdlib.h> /* *alloc( */; 528#include <time.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:17492,variab,variables,17492,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,2,['variab'],['variables']
Modifiability,"ollection is the address of a pointer to std::vector, std::list,; std::deque, std::set or std::multiset containing pointers to objects.; If the splitlevel is a value bigger than 100 (TTree::kSplitCollectionOfPointers); then the collection will be written in split mode, e.g. if it contains objects of; any types deriving from TTrack this function will sort the objects; based on their type and store them in separate branches in split; mode. ==> branch->SetAddress(Void *address); In case of dynamic structures changing with each entry for example, one must; redefine the branch address before filling the branch again.; This is done via the TBranch::SetAddress member function. ==> tree->Fill(); loops on all defined branches and for each branch invokes the Fill function. See also the class TNtuple (a simple Tree with branches of floats). Adding a Branch to an Existing Tree. You may want to add a branch to an existing tree. For example,; if one variable in the tree was computed with a certain algorithm,; you may want to try another algorithm and compare the results.; One solution is to add a new branch, fill it, and save the tree.; The code below adds a simple branch to an existing tree.; Note the kOverwrite option in the Write method, it overwrites the; existing tree. If it is not specified, two copies of the tree headers; are saved. void tree3AddBranch(){; TFile f(""tree3.root"", ""update"");. Float_t new_v;; TTree *t3 = (TTree*)f->Get(""t3"");; TBranch *newBranch = t3->Branch(""new_v"", &new_v, ""new_v/F"");. //read the number of entries in the t3; Long64_t nentries = t3->GetEntries();. for (Long64_t i = 0; i < nentries; i++){; new_v= gRandom->Gaus(0, 1);; newBranch->Fill();; }; // save only the new version of the tree; t3->Write("""", TObject::kOverwrite);; }; Adding a branch is often not possible because the tree is in a read-only; file and you do not have permission to save the modified tree with the; new branch. Even if you do have the permission, you risk losing the; original tre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTree.html:7245,variab,variable,7245,root/html532/TTree.html,https://root.cern,https://root.cern/root/html532/TTree.html,2,['variab'],['variable']
Modifiability,"ollection is the address of a pointer to std::vector, std::list,; std::deque, std::set or std::multiset containing pointers to objects.; If the splitlevel is a value bigger than 100 (TTree::kSplitCollectionOfPointers); then the collection will be written in split mode. Ie. if it contains objects of; any types deriving from TTrack this function will sort the objects; basing on their type and store them in separate branches in split; mode. ==> branch->SetAddress(Void *address); In case of dynamic structures changing with each entry for example, one must; redefine the branch address before filling the branch again.; This is done via the TBranch::SetAddress member function. ==> tree->Fill(); loops on all defined branches and for each branch invokes the Fill function. See also the class TNtuple (a simple Tree with branches of floats). Adding a Branch to an Existing Tree. You may want to add a branch to an existing tree. For example,; if one variable in the tree was computed with a certain algorithm,; you may want to try another algorithm and compare the results.; One solution is to add a new branch, fill it, and save the tree.; The code below adds a simple branch to an existing tree.; Note the kOverwrite option in the Write method, it overwrites the; existing tree. If it is not specified, two copies of the tree headers; are saved. void tree3AddBranch(){; TFile f(""tree3.root"", ""update"");. Float_t new_v;; TTree *t3 = (TTree*)f->Get(""t3"");; TBranch *newBranch = t3->Branch(""new_v"", &new_v, ""new_v/F"");. //read the number of entries in the t3; Long64_t nentries = t3->GetEntries();. for (Long64_t i = 0; i < nentries; i++){; new_v= gRandom->Gaus(0, 1);; newBranch->Fill();; }; // save only the new version of the tree; t3->Write("""", TObject::kOverwrite);; }; Adding a branch is often not possible because the tree is in a read-only; file and you do not have permission to save the modified tree with the; new branch. Even if you do have the permission, you risk losing the; original tre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTree.html:6856,variab,variable,6856,root/html528/TTree.html,https://root.cern,https://root.cern/root/html528/TTree.html,2,['variab'],['variable']
Modifiability,"ollection(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; virtual Int_tTSeqCollection::GetLast() const; virtual const char*TCollection::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; virtual TObject**GetObjectRef(const TObject*) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tTCollection::GetSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTCollection::GrowBy(Int_t delta) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTCollection::Hash() const; virtual Int_tTSeqCollection::IndexOf(const TObject* obj) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTCollection::IsArgNull(const char* where, const TObject* obj) const; virtual Bool_tTCollection::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCollection::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTCollection::IsOwner() const; virtual Bool_tTCollection::IsSortable() const; virtual Bool_tTSeqCollection::IsSorted() const; Bool_tTObject::IsZombie() const; virtual TObject*Last() const; Int_tTSeqCollection::LastIndex() const; virtual voidTCollection::ls(Option_t* option = """") const; virtual TIterator*MakeIterator(Bool_t dir = kIterForward) const; virtual TIterator*TCollection::MakeReverseIterator() const; voidTObject::MayNotUse(const char* method) const; Long64_tTSeqCollection::Merge(TCollection* list); virtual Bool_tTObject::Notify(); static Int_tTSeqCollection::ObjCompare(TObject* a, TObject*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TBtree.html:10759,Inherit,InheritsFrom,10759,root/html532/TBtree.html,https://root.cern,https://root.cern/root/html532/TBtree.html,4,['Inherit'],['InheritsFrom']
Modifiability,"ollection*GetDataSet(const char* dset, Int_t nact, Bool_t nx); Int_tGetDebug() const; TDirectory*GetDirProofBench() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; TStringGetNameStem() const; Long64_tGetNEvents() const; Int_tGetNTries() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TProofBenchRun::GetParList(); TPBReadType*GetReadType() const; virtual const char*TProofBenchRun::GetSelName(); Int_tGetStart() const; Int_tGetStep() const; Int_tGetStop() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofBenchRunDataRead.html:3372,Inherit,InheritsFrom,3372,root/html532/TProofBenchRunDataRead.html,https://root.cern,https://root.cern/root/html532/TProofBenchRunDataRead.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ollection*GetDataSet(const char* dset, Int_t nact, Bool_t nx); Int_tGetDebug() const; TDirectory*GetDirProofBench() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; TStringGetNameStem() const; Long64_tGetNEvents() const; Int_tGetNTries() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TProofBenchRun::GetParList(); TPBReadType*GetReadType() const; virtual const char*TProofBenchRun::GetSelName(); Int_tGetStart() const; Int_tGetStep() const; Int_tGetStop() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofBenchRunDataRead.html:3058,Inherit,InheritsFrom,3058,root/html602/TProofBenchRunDataRead.html,https://root.cern,https://root.cern/root/html602/TProofBenchRunDataRead.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. Int_t_arrSizeSize of the weight array; Bool_t*_binValid! Valid bins with current range definition; Double_t*_binv[_arrSize] Bin volume array ; TIterator*RooAbsData::_cacheIter! Iterator over cached variables; RooArgSetRooAbsData::_cachedVars! External variables cached with this data set; Int_t_curIndexCurrent index; Double_t_curSumW2Current sum of weights^2; Double_t_curVolumeVolume of bin enclosing current coordinate; Double_t_curWeightWeight associated with the current coordinate; Double_t_curWgtErrHiError on weight associated with the current coordinate; Double_t_curWgtErrLoError on weight associated with the current coordinate; TDirectory*RooDirItem::_dir! Associated directory; RooAbsDataStore*RooAbsData::_dstoreData storage implementation; Double_t*_errHi[_arrSize] High-side error on weight array; Double_t*_errLo[_arrSize] Low-side error on weight array; vector<Int_t>_idxMultMultiplier jump table for index calculation; TIterator*RooAbsData::_iterator! Iterator over dimension variables; list<const RooAbsBinning*>_lvbins! List of used binnings associated with lvalues; list<RooAbsLValue*>_lvvars! List of observables casted as RooAbsLValue; static Int_tRooPrintable::_nameLength; map<std::string,RooAbsData*>RooAbsData::_ownedComponentsOwned external components; vector<Double_t>*_pbinv! Partial bin volume array; RooCacheManager<std::vector<Double_t> >_pbinvCacheMgr! Cache manager for arrays of partial bin volumes; TIterator*_realIter! Iterator over realVars; RooArgSet_realVarsReal dimensions of the dataset ; Double_t*_sumw2[_arrSize] Sum of weights^2; RooArgSetRooAbsData::_varsDimensions of this data set; Double_t*_wgt[_arrSize] Weight array; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooDataHist(); Default constructor. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooDataHist.html:17218,variab,variables,17218,root/html530/RooDataHist.html,https://root.cern,https://root.cern/root/html530/RooDataHist.html,3,['variab'],['variables']
Modifiability,"ollectionProxy* cont, Int_t i, Int_t j, Int_t k, Int_t eoffset) const; doubleGetTypedValueSTLP<double>(TVirtualCollectionProxy* cont, Int_t i, Int_t j, Int_t k, Int_t eoffset) const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetValue(char* pointer, Int_t i, Int_t j, Int_t len) const; Double_tGetValueClones(TClonesArray* clones, Int_t i, Int_t j, Int_t k, Int_t eoffset) const; Double_tGetValueSTL(TVirtualCollectionProxy* cont, Int_t i, Int_t j, Int_t k, Int_t eoffset) const; Double_tGetValueSTLP(TVirtualCollectionProxy* cont, Int_t i, Int_t j, Int_t k, Int_t eoffset) const; TStreamerInfoActions::TActionSequence*GetWriteMemberWiseActions(Bool_t forCollection); TStreamerInfoActions::TActionSequence*GetWriteObjectWiseActions(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTVirtualStreamerInfo::IsBuilt() const; Bool_tTVirtualStreamerInfo::IsCompiled() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTVirtualStreamerInfo::IsOptimized() const; Int_tTVirtualStreamerInfo::IsRecovered() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; Bool_tMatchLegacyCheckSum(UInt_t checksum) const; voidTObject::MayNotUse(const char* method) const; virtual void*New(void* obj = 0); virtual void*NewArray(Long_t nElements, void* ary = 0); virtual TVirtualStreamerInfo*NewInfo(TClass* cl); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TStreamerInfo.html:6708,Inherit,InheritsFrom,6708,root/html602/TStreamerInfo.html,https://root.cern,https://root.cern/root/html602/TStreamerInfo.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ollectionStreamer. Small helper to save proxy environment in the event of; recursive calls. Function Members (Methods); public:. TCollectionClassStreamer(); virtual~TCollectionClassStreamer(); voidTCollectionStreamer::AdoptStreamer(TGenCollectionProxy* streamer); virtual TClassStreamer*Generate() const; virtual const TClass*TClassStreamer::GetOnFileClass() const; TGenCollectionProxy*GetXYZ(); virtual voidoperator()(TBuffer& buff, void* obj); virtual voidTClassStreamer::SetOnFileClass(const TClass* cl); virtual voidStream(TBuffer& b, void* obj, const TClass* onfileClass); voidTCollectionStreamer::Streamer(TBuffer& refBuffer, void* obj, int siz, TClass* onFileClass). protected:. TCollectionClassStreamer(const TCollectionClassStreamer& c); voidTCollectionStreamer::InvalidProxyError(); TCollectionClassStreamer&operator=(const TCollectionClassStreamer& rhs). Data Members; protected:. TClassRefTClassStreamer::fOnFileClass; TGenCollectionProxy*TCollectionStreamer::fStreamer/ Pointer to worker streamer. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TCollectionStreamer& operator=(const TCollectionClassStreamer& rhs). TCollectionClassStreamer(const TCollectionClassStreamer& c); Copy constructor. { }. TCollectionClassStreamer(); Initializing constructor. { }. virtual ~TCollectionClassStreamer(); Standard destructor. { }. void operator()(TBuffer& buff, void* obj); Streamer for I/O handling. { Streamer(buff,obj,0,fOnFileClass); }. void Stream(TBuffer& b, void* obj, const TClass* onfileClass). TClassStreamer * Generate() const; Virtual copy constructor. TGenCollectionProxy * GetXYZ(); { return TCollectionStreamer::fStreamer; }. » Author: Markus Frank 28/10/04 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/io:$Id$ » Last generated: 2015-09-08 17:03; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TCollectionClassStreamer.html:1346,Inherit,Inheritance,1346,root/html534/TCollectionClassStreamer.html,https://root.cern,https://root.cern/root/html534/TCollectionClassStreamer.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"olling flipping status of all AClean nodes to ADirty ;; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Bool_t_init; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; RooConvIntegrandBinding*_integrand! Binding of Convolution Integrand function; RooAbsIntegrator*_integrator! Numeric integrator of convolution integrand; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooRealProxy_origModelOriginal resolution model; RooRealProxy_origPdfOriginal input PDF; RooRealProxy_origVarOriginal convolution variable; RooArgSet_ownedClonedModelSetOwning set of cloned model components; RooArgSet_ownedClonedPdfSetOwning set of cloned PDF components; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooNumConvolution.html:34292,variab,variable,34292,root/html526/RooNumConvolution.html,https://root.cern,https://root.cern/root/html526/RooNumConvolution.html,2,['variab'],['variable']
Modifiability,"olling flipping status of all AClean nodes to ADirty ;; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Bool_t_init; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; RooConvIntegrandBinding*_integrand! Binding of Convolution Integrand function; RooAbsIntegrator*_integrator! Numeric integrator of convolution integrand; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooRealProxy_origModelOriginal resolution model; RooRealProxy_origPdfOriginal input PDF; RooRealProxy_origVarOriginal convolution variable; RooArgSet_ownedClonedModelSetOwning set of cloned model components; RooArgSet_ownedClonedPdfSetOwning set of cloned PDF components; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooNumConvolution.html:34959,variab,variable,34959,root/html530/RooNumConvolution.html,https://root.cern,https://root.cern/root/html530/RooNumConvolution.html,1,['variab'],['variable']
Modifiability,"olling flipping status of all AClean nodes to ADirty ;; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Bool_t_init; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; RooConvIntegrandBinding*_integrand! Binding of Convolution Integrand function; RooAbsIntegrator*_integrator! Numeric integrator of convolution integrand; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooRealProxy_origModelOriginal resolution model; RooRealProxy_origPdfOriginal input PDF; RooRealProxy_origVarOriginal convolution variable; RooArgSet_ownedClonedModelSetOwning set of cloned model components; RooArgSet_ownedClonedPdfSetOwning set of cloned PDF components; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooNumConvolution.html:35334,variab,variable,35334,root/html532/RooNumConvolution.html,https://root.cern,https://root.cern/root/html532/RooNumConvolution.html,2,['variab'],['variable']
Modifiability,"olling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; static RooRealVarSharedProperties_nullPropNull property; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; static Bool_t_printScientific; static Int_t_printSigDigits; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooRealVarSharedProperties*_sharedProp! Shared properties associated with this instance; static RooSharedPropertiesList_sharedPropListList of properties shared among clone sets ; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooRealVar.html:38632,config,configuration,38632,root/html530/RooRealVar.html,https://root.cern,https://root.cern/root/html530/RooRealVar.html,1,['config'],['configuration']
Modifiability,"ollows the mathematical notation of a product of the two matrices which describe the two consecutive rotations. Therefore, the second rotation should be placed first:; r = r2 * r1;; 17.3.7 Rotation of TVector3; The TRotation class provides an operator * which allows expressing a rotation of a TVector3 analog to the mathematical notation:; \[; \left|; \begin{array}{c}; x' \\; y' \\; z'; \end{array}; \right|; =; \left|; \begin{array}{ccc}; xx & xy & xz \\; yx & yy & yz \\; zx & zy & zz; \end{array}; \right|; \times; \left|; \begin{array}{c}; x \\; y \\; z; \end{array}; \right|; \]; TRotation r;; TVector3 v(1,1,1);; v = r * v;; You can also use the Transform() method or the operator *= of the TVector3 class:; TVector3 v;; TRotation r;; v.Transform(r);; 17.4 TLorentzVector; TLorentzVector is a general four-vector class, which can be used either for the description of position and time (x, y, z, t) or momentum and energy (px, py, pz, E).; 17.4.1 Declaration; TLorentzVector has been implemented as a set a TVector3 and a Double_t variable. By default, all components are initialized by zero.; TLorentzVector v1; // initialized by (0.,0.,0.,0.); TLorentzVector v2(1.,1.,1.,1.);; TLorentzVector v3(v1);; TLorentzVector v4(TVector3(1.,2.,3.),4.);; For backward compatibility there are two constructors from a Double_t and Float_t array.; 17.4.2 Access to Components; There are two sets of access functions to the components of a TLorentzVector: X(), Y(), Z(), T() and Px(), Py(), Pz() and E(). Both sets return the same values but the first set is more relevant for use where TLorentzVector describes a combination of position and time and the second set is more relevant where TLorentzVector describes momentum and energy:; Double_t xx =v.X();; ...; Double_t tt = v.T();; Double_t px = v.Px();; ...; Double_t ee = v.E();; The components of TLorentzVector can also accessed by index:; xx = v(0);orxx = v[0];; yy = v(1);yy = v[1];; zz = v(2);zz = v[2];; tt = v(3);tt = v[3];; You can use the Vect",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:866489,variab,variable,866489,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['variab'],['variable']
Modifiability,"olor (Color_t tcolor=1);  Set the text color. ;  ; virtual void SetTextColorAlpha (Color_t tcolor, Float_t talpha);  Set a transparent text color. ;  ; virtual void SetTextFont (Font_t tfont=62);  Set the text font. ;  ; virtual void SetTextSize (Float_t tsize=1);  Set the text size. ;  ; virtual void SetTextSizePixels (Int_t npixels);  Set the text size in pixel. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void GoBackward ();  static function , inspect previous object ;  ; static void GoForward ();  static function , inspect next object ;  ; static void Inspector (TObject *obj);  static function , interface to InspectObject. ;  ;  Static Public Member Functions inherited from TCanvas; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TCanvas * MakeDefCanvas ();  Static function to build a default canvas. ;  ; static Bool_t SaveAll (const std::vector< TPad * > &={}, const char *filename="""", Option_t *option="""");  Save provided pads/canvases into the image file(s) Filename can include printf argument for image number - like ""image%03d.png"". ;  ; static void SetFolder (Bool_t isfolder=kTRUE);  If isfolder=kTRUE, the canvas can be browsed like a folder by default a canvas is not browsable. ;  ; static Bool_t SupportAlpha ();  Static function returning ""true"" if transparency is supported. ;  ;  Static Public Member Functions inherited from TPad; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void DrawColorTable ();  Static function to Display Color Table in a pad. ;  ; static Int_t GetMaxPickDistance ();  Static function (see also T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTInspectCanvas.html:46616,inherit,inherited,46616,doc/master/classTInspectCanvas.html,https://root.cern,https://root.cern/doc/master/classTInspectCanvas.html,1,['inherit'],['inherited']
Modifiability,"olor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyName wid window const char font_name cursor keysym reg const char only_if_exist regb h Point_t winding char text const char depth char const char mxDefinition TGWin32VirtualXProxy.cxx:228; TH1.h; gPad#define gPadDefinition TVirtualPad.h:308; RooAddPdfEfficient implementation of a sum of PDFs of the form.Definition RooAddPdf.h:33; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::Printvoid Print(Option_t *options=nullptr) const overrideThis method must be overridden when a class wants to print itself.Definition RooPlot.h:138; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooPolynomialRooPolynomial implements a polynomial p.d.f of the form.Definition RooPolynomial.h:25; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::SaveRooCmdArg Save(bool flag=true)Definition RooGlobalFunc.cxx:649; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf203__ranges_8C.html:3733,variab,variable,3733,doc/master/rf203__ranges_8C.html,https://root.cern,https://root.cern/doc/master/rf203__ranges_8C.html,1,['variab'],['variable']
Modifiability,"olor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; TH2.h; TH3.h; TStyle.h; gPad#define gPadDefinition TVirtualPad.h:308; RooAbsPdfAbstract interface for all probability density functions.Definition RooAbsPdf.h:40; RooAbsPdf::generateRooFit::OwningPtr< RooDataSet > generate(const RooArgSet &whatVars, Int_t nEvents, const RooCmdArg &arg1, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={})See RooAbsPdf::generate(const RooArgSet&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,...Definition RooAbsPdf.h:57; RooAbsPdf::createProjectionvirtual RooAbsPdf * createProjection(const RooArgSet &iset)Return a p.d.f that represent a projection of this p.d.f integrated over given observables.Definition RooAbsPdf.cxx:2446; RooAbsReal::createHistogramTH1 * createHistogram(RooStringView varNameList, Int_t xbins=0, Int_t ybins=0, Int_t zbins=0) constCreate and fill a ROOT histogram TH1, TH2 or TH3 with the values of this function for the variables w...Definition RooAbsReal.cxx:1183; RooAddPdfEfficient implementation of a sum of PDFs of the form.Definition RooAddPdf.h:33; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooArgSetRooArgSet is a container object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCanvasThe Canvas class",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf608__fitresultaspdf_8C.html:6009,variab,variables,6009,doc/master/rf608__fitresultaspdf_8C.html,https://root.cern,https://root.cern/doc/master/rf608__fitresultaspdf_8C.html,1,['variab'],['variables']
Modifiability,"olor Palette for value -> color conversion; TImagePlugin base class for different image format handlers(plugins); TIndArray ; TIndexTable ""Index"" array for TTable object; TIndexTable::iterator ; TInetAddress Represents an Internet Protocol (IP) address; TInspectCanvas The canvas Inspector; TInspectorImp GUI independent inspector abc; TInterpreter ABC defining interface to generic interpreter; TIsAProxy ; TIter Iterator wrapper; TIterator Iterator abstract base class; TKDE One dimensional semi-parametric Kernel Density Estimation; TKDTree<int,double> KD tree; TKDTree<int,float> KD tree; TKDTreeBinning ; TKSocket General kerberized socket; TKey Header description of a logical record on file.; TKeyMapFile Utility class for browsing TMapFile objects.; TKeySQL a special TKey for SQL data base; TKeyXML a special TKey for XML files ; TLatex The Latex-style text processor class; TLeaf Leaf: description of a Branch data type; TLeafB A TLeaf for an 8 bit Integer data type.; TLeafC A TLeaf for a variable length string.; TLeafD A TLeaf for a 64 bit floating point data type.; TLeafElement A TLeaf for a general object derived from TObject.; TLeafF A TLeaf for a 32 bit floating point data type.; TLeafI A TLeaf for an Integer data type.; TLeafL A TLeaf for a 64 bit Integer data type.; TLeafO A TLeaf for an 8 bit Integer data type.; TLeafObject A TLeaf for a general object derived from TObject.; TLeafS A TLeaf for a 16 bit Integer data type.; TLegend Legend of markers/lines/boxes to represent obj's; TLegendEntry Storage class for one entry of a TLegend; TLibraryDocInfo documentation for a library; TLimit Class to compute 95% CL limits; TLimitDataSource input for TLimit routines; TLine A line segment; TLineEditor GUI for editing Line attributes; TLinearFitter fit a set of data points with a linear combination of functions; TLinearGradient Linear gradient fill.; TLinearMinimizer Implementation of the Minimizer interface using TLinearFitter ; TLink Link: hypertext link to an object; TL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ClassIndex.html:102663,variab,variable,102663,root/html534/ClassIndex.html,https://root.cern,https://root.cern/root/html534/ClassIndex.html,2,['variab'],['variable']
Modifiability,"olor() const; const QPolygon&GetNodes() const; intGetNumber() const; intGetType() const; intGetWidth() const; virtual TClass*IsA() const; TQtMarker&operator=(const TQtMarker&); TQtMarker&operator=(const TAttMarker&); voidSetColor(Color_t mcolor); voidSetMarker(int n, TPoint* xy, int type); voidSetMarkerAttributes(const TAttMarker& markerAttributes); voidSetPenAttributes(int type); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TQtMarker(const TQtMarker&); TQtMarker(const TAttMarker&); TQtMarker(int n = 0, TPoint* xy = 0, int type = 0). Data Members; private:. QPolygonfChainarray of the n chains to build a shaped marker; Color_tfCindexColor index of the marker;; intfLineOptionConnect the markers with the segments; intfLineWidthThe width of the line used to outline the markers; intfMarkerTypeType of the current marker; intfNumNodeNumber of chain in the marker shape. Class Charts. Inheritance Chart:. TQtMarker. Function documentation; TQtMarker(int n = 0, TPoint* xy = 0, int type = 0). ~TQtMarker(); {}. TQtMarker & operator=(const TAttMarker& ); Assign the TQtMarker from ROOT TAttMarker. TQtMarker(const TAttMarker& ); Create the TQtMarker from ROOT TAttMarker. void SetMarkerAttributes(const TAttMarker& markerAttributes); Map Qt marker attributes to ROOT TAttMaker parameters. void SetPenAttributes(int type); Pen attrbutes is 100000*LineFlag + 1000*width + ""marker style"". int GetNumber() const. {return fNumNode;}. const QPolygon & GetNodes() const. {return fChain;}. int GetType() const; {return fMarkerType;}. int GetWidth() const; { return fLineWidth;}. void SetMarker(int n, TPoint* xy, int type); *-* Did we have a chain ?. void DrawPolyMarker(QPainter& p, int n, TPoint* xy); Draw n markers with the current attributes at positions xy.; p : the external QPainter; n : number of markers to draw; xy : x,y coordinates of markers. TQtMarker & operator=(const TQtMarker& ). inline",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TQtMarker.html:1524,Inherit,Inheritance,1524,root/html602/TQtMarker.html,https://root.cern,https://root.cern/root/html602/TQtMarker.html,2,['Inherit'],['Inheritance']
Modifiability,"olor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TMaterial*TShape::GetMaterial() const; virtual const char*TNamed::GetName() const; virtual Int_tTPCON::GetNdiv() const; virtual Int_tTShape::GetNumber() const; virtual Int_tTPCON::GetNumberOfDivisions() const; virtual Int_tTPCON::GetNz() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Float_tTPCON::GetPhi1() const; virtual Float_t*TPCON::GetRmax() const; virtual Float_t*TPCON::GetRmin() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTShape::GetVisibility() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPGON.html:4100,Inherit,InheritsFrom,4100,root/html532/TPGON.html,https://root.cern,https://root.cern/root/html532/TPGON.html,2,['Inherit'],['InheritsFrom']
Modifiability,"olor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TMaterial*TShape::GetMaterial() const; virtual const char*TNamed::GetName() const; virtual Int_tTPCON::GetNdiv() const; virtual Int_tTShape::GetNumber() const; virtual Int_tTPCON::GetNumberOfDivisions() const; virtual Int_tTPCON::GetNz() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Float_tTPCON::GetPhi1() const; virtual Float_t*TPCON::GetRmax() const; virtual Float_t*TPCON::GetRmin() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTShape::GetVisibility() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPGON.html:3953,Inherit,InheritsFrom,3953,root/html602/TPGON.html,https://root.cern,https://root.cern/root/html602/TPGON.html,2,['Inherit'],['InheritsFrom']
Modifiability,"olor(Int_t color) Select line color by ROOT color code, default is blue . LineWidth(Int_t width) Select line with in pixels, default is 3 . FillStyle(Int_t style) Select fill style, default is not filled. If a filled style is selected, also use VLines() to add vertical downward lines at end of curve to ensure proper closure . FillColor(Int_t color) Select fill color by ROOT color code . Range(const char* name) Only draw curve in range defined by given name. Multiple comma-separated ranges can be given. An empty string """" or nullptr means to use the default range of the variable. . Range(double lo, double hi) Only draw curve in specified range . VLines() Add vertical lines to y=0 at end points of curve . Precision(double eps) Control precision of drawn curve w.r.t to scale of plot, default is 1e-3. A higher precision will result in more and more densely spaced curve points. A negative precision value will disable adaptive point spacing and restrict sampling to the grid point of points defined by the binning of the plotted observable (recommended for expensive functions such as profile likelihoods) . Invisible(bool flag) Add curve to frame, but do not display. Useful in combination AddTo() . VisualizeError(const RooFitResult& fitres, double Z=1, bool linearMethod=true) Visualize the uncertainty on the parameters, as given in fitres, at 'Z' sigma. The linear method is fast but may not be accurate in the presence of strong correlations (~>0.9) and at Z>2 due to linear and Gaussian approximations made. Intervals from the sampling method can be asymmetric, and may perform better in the presence of strong correlations, but may take (much) longer to calculate NoteTo include the uncertainty from the expected number of events, the Normalization() argument with ScaleType RooAbsReal::RelativeExpected has to be passed, e.g. pdf.plotOn(frame, VisualizeError(fitResult), Normalization(1.0, RooAbsReal::RelativeExpected));; RooAbsReal::RelativeExpected@ RelativeExpectedDefinition Roo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSimultaneous.html:96411,adapt,adaptive,96411,doc/master/classRooSimultaneous.html,https://root.cern,https://root.cern/doc/master/classRooSimultaneous.html,2,['adapt'],['adaptive']
Modifiability,"olor;  ; Bool_t fCanEditMainTrans;  ; Bool_t fCanEditMainTransparency;  ; UChar_t fChangeBits;  ; List_t fChildren;  ; TEveCompound * fCompound;  ; UChar_t fCSCBits;  ; Int_t fDenyDestroy;  Counter for top-level list-tree items that prevent automatic destruction. ;  ; Bool_t fDestroyOnZeroRefCnt;  Deny-destroy count. ;  ; Char_t fDestructing;  ; Bool_t fHighlighted;  ; Short_t fImpliedHighlighted;  ; Short_t fImpliedSelected;  ; sLTI_t fItems;  ; Color_t * fMainColorPtr;  ; TEveTrans * fMainTrans;  ; Char_t fMainTransparency;  ; Int_t fNumChildren;  ; Int_t fParentIgnoreCnt;  ; List_t fParents;  ; Bool_t fPickable;  ; Bool_t fRnrChildren;  ; Bool_t fRnrSelf;  ; Bool_t fSelected;  ; TRef fSource;  Set of list-tree-items. ;  ; Int_t fTopItemCnt;  Counter for parents that are ignored in ref-counting. ;  ; void * fUserData;  ; TEveElement * fVizModel;  ; TString fVizTag;  Element used as model from VizDB. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TEvePointSelectorConsumer; ETreeVarType_e fSourceCS;  . Private Member Functions;  TEvePointSetArray (const TEvePointSetArray &);  ; TEvePointSetArray & operator= (const TEvePointSetArray &);  . Friends; class TEvePointSetArrayEditor;  . Additional Inherited Members;  Public Types inherited from TEveElement; enum  EChangeBits { kCBColorSelection = (1ULL << ( 0 )); , kCBTransBBox = (1ULL << ( 1 )); , kCBObjProps = (1ULL << ( 2 )); , kCBVisibility = (1ULL << ( 3 )); };  ; typedef void(TEveElement::* ImplySelect_foo) ();  ; typedef List_t::const_iterator List_ci;  ; typedef List_t::iterator List_i;  ; typedef std::list< TEveElement * > List_t;  ; typedef void(TEveElement::* Select_foo) (Bool_t);  ; typedef Set_t::const_iterator Set_ci;  ; typedef Set_t::iterator Set_i;  ; typedef st",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEvePointSetArray.html:31996,inherit,inherited,31996,doc/master/classTEvePointSetArray.html,https://root.cern,https://root.cern/doc/master/classTEvePointSetArray.html,2,['inherit'],['inherited']
Modifiability,"olor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Private Member Functions;  TH2 (const TH2 &)=delete;  ; virtual Double_t Integral (Int_t binx1, Int_t binx2, Option_t *option="""") const;  Return integral of bin contents in range [binx1,binx2]. ;  ; virtual Double_t Integral (Option_t *option="""") const;  Return integral of bin contents. ;  ; virtual Double_t IntegralAndError (Int_t binx1, Int_t binx2, Double_t &err, Option_t *option="""") const;  Return integral of bin contents in range [binx1,binx2] and its error. ;  ; TH2 & operator= (const TH2 &)=delete;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2.html:53640,extend,extended,53640,doc/master/classTH2.html,https://root.cern,https://root.cern/doc/master/classTH2.html,1,['extend'],['extended']
Modifiability,"olor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Private Member Functions;  TH3 (const TH3 &)=delete;  ; virtual Double_t Integral (Int_t binx1, Int_t binx2, Option_t *option="""") const;  Return integral of bin contents in range [binx1,binx2]. ;  ; virtual Double_t Integral (Option_t *option="""") const;  Return integral of bin contents. ;  ; virtual Double_t IntegralAndError (Int_t binx1, Int_t binx2, Double_t &err, Option_t *option="""") const;  Return integral of bin contents in range [binx1,binx2] and its error. ;  ; TH3 & operator= (const TH3 &)=delete;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3.html:56893,extend,extended,56893,doc/master/classTH3.html,https://root.cern,https://root.cern/doc/master/classTH3.html,1,['extend'],['extended']
Modifiability,"olor;  Pad frame line color. ;  ; Style_t fFrameLineStyle;  Pad frame line style. ;  ; Width_t fFrameLineWidth;  Pad frame line width. ;  ; Float_t fLeftMargin;  LeftMargin. ;  ; Float_t fRightMargin;  RightMargin. ;  ; Float_t fTopMargin;  TopMargin. ;  ; Float_t fXfile;  X position where to draw the file name. ;  ; Float_t fXstat;  X position where to draw the statistics. ;  ; Float_t fYfile;  Y position where to draw the file name. ;  ; Float_t fYstat;  Y position where to draw the statistics. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  ;  Static Protected Attributes inherited from TPad; static Int_t fgMaxPickDistance = 5;  Maximum Pick Distance. ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TGroupButton.h>. Inheritance diagram for TGroupButton:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGroupButton() [1/3]. TGroupButton::TGroupButton ; (; const TGroupButton & ; ). privatedelete . ◆ TGroupButton() [2/3]. TGroupButton::TGroupButton ; (; ). GroupButton default constructor. ; Definition at line 46 of file TGroupButton.cxx. ◆ TGroupButton() [3/3]. TGroupButton::TGroupButton ; (; const char * ; groupname, . const char * ; title, . const char * ; method, . Double_t ; x1, . Double_t ; y1, . Double_t ; x2, . Double_t ; y2 . ). GroupButton normal constructor. ; Definition at line 54 of file TGroupButton.cxx. ◆ ~TGroupButton(). TGroupButton::~TGroupButton ; (; ). override . Gro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGroupButton.html:53469,inherit,inherited,53469,doc/master/classTGroupButton.html,https://root.cern,https://root.cern/doc/master/classTGroupButton.html,1,['inherit'],['inherited']
Modifiability,"olorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; virtual void SetMarkerSize (Size_t msize=1);  Set the marker size. ;  ; virtual void SetMarkerStyle (Style_t mstyle=1);  Set the marker style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooPlotable; TObject * crossCast ();  Return cast of RooPlotable as TObject. ;  ; const char * getYAxisLabel () const;  ; double getYAxisMax () const;  ; double getYAxisMin () const;  ; TClass * IsA () const override;  ; void printMultiline (std::ostream &os, Int_t contents, bool verbose=false, TString indent="""") const override;  Print detailed information. ;  ; void setYAxisLabel (const char *label);  ; void setYAxisLimits (double ymin, double ymax);  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void updateYAxisLimits (double y);  ;  Public Member Functions inherited from RooPrintable;  RooPrintable ();  ; virtual ~RooPrintable ();  ; virtual Int_t defaultPrintContents (Option_t *opt) const;  Default choice of contents to be printed (name and value) ;  ; virtual StyleOption defaultPrintStyle (Option_t *opt) const;  ; virtual void printAddress (std::ostream &os) const;  Print class name of object. ;  ; virtual void printArgs (std::ostream &os) const;  Interface for printing of object arguments. ;  ; virtual void printExtras (std::ostream &os) const;  Interface to print extras of object. ;  ; virtual void printStream (std::ostream &os, Int_t contents, StyleOption style, TString indent="""") const;  Print description of object on ostream, printing contents set by contents integer, which is interpreted as an OR of 'enum ContentsOptions' values and in the style given by 'enum StyleOption'. ;  ; virtual void printTree (std::ostream &os, TString indent="""") const;  Interface for tree structure printing of object. ;  ; virtual void printValue (std::ostream &os) const;  Interface to print",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCurve.html:29782,inherit,inherited,29782,doc/master/classRooCurve.html,https://root.cern,https://root.cern/doc/master/classRooCurve.html,3,['inherit'],['inherited']
Modifiability,"olorGradient::ECoordinateModeTColorGradient::kObjectBoundingMode; static TObject::(anonymous)TObject::kOverwrite; static TColorGradient::ECoordinateModeTColorGradient::kPadMode; static TRadialGradient::EGradientTypekSimple; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; Int_tTColor::fNumberColor number identifier; TStringTNamed::fTitleobject title. private:. TColorGradient::PointfEnd; Double_tfR1; Double_tfR2; TColorGradient::PointfStart; TRadialGradient::EGradientTypefType. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TColor. ←; TColorGradient. ←; TRadialGradient. Function documentation; TRadialGradient(). TRadialGradient(Color_t newColor, UInt_t nPoints, const Double_t* points, const Color_t* colorIndices, TColorGradient::ECoordinateMode mode = kObjectBoundingMode). TRadialGradient(Color_t newColor, UInt_t nPoints, const Double_t* points, const Double_t* colors, TColorGradient::ECoordinateMode mode = kObjectBoundingMode). void SetStartEndR1R2(const TColorGradient::Point& p1, Double_t r1, const TColorGradient::Point& p2, Double_t r2). const TColorGradient::Point & GetStart() const. Double_t GetR1() const. const TColorGradient::Point & GetEnd() const. Double_t GetR2() const. void SetRadialGradient(const TColorGradient::Point& center, Double_t radius). const TColorGradient::Point & GetCenter() const. Double_t GetRadius() const. TRadialGradient(); With C++11 we'll use inherited constructors!!!. TRadialGradient(Color_t newColor, UInt_t nPoints, const Double_t* points, const Color_t* colorIndices, TColorGradient::ECoordinateMode mode = kObjectBoundingMode). EGradientType GetGradientType() const. » Last changed: root/base:$Id$ » Last generated: 2015-06-02 16:31; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TRadialGradient.html:12056,inherit,inherited,12056,root/html604/TRadialGradient.html,https://root.cern,https://root.cern/root/html604/TRadialGradient.html,2,['inherit'],['inherited']
Modifiability,"olorGradient::ECoordinateModeTColorGradient::kObjectBoundingMode; static TObject::(anonymous)TObject::kOverwrite; static TColorGradient::ECoordinateModeTColorGradient::kPadMode; static TRadialGradient::EGradientTypekSimple; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; Int_tTColor::fNumberColor number identifier; TStringTNamed::fTitleobject title. private:. TColorGradient::PointfEnd; Double_tfR1; Double_tfR2; TColorGradient::PointfStart; TRadialGradient::EGradientTypefType. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TColor. ←; TColorGradient. ←; TRadialGradient. Function documentation; TRadialGradient(). TRadialGradient(Color_t newColor, UInt_t nPoints, const Double_t* points, const Color_t* colorIndices, TColorGradient::ECoordinateMode mode = kObjectBoundingMode). TRadialGradient(Color_t newColor, UInt_t nPoints, const Double_t* points, const Double_t* colors, TColorGradient::ECoordinateMode mode = kObjectBoundingMode). void SetStartEndR1R2(const TColorGradient::Point& p1, Double_t r1, const TColorGradient::Point& p2, Double_t r2). const TColorGradient::Point & GetStart() const. Double_t GetR1() const. const TColorGradient::Point & GetEnd() const. Double_t GetR2() const. void SetRadialGradient(const TColorGradient::Point& center, Double_t radius). const TColorGradient::Point & GetCenter() const. Double_t GetRadius() const. TRadialGradient(); With C++11 we'll use inherited constructors!!!. TRadialGradient(Color_t newColor, UInt_t nPoints, const Double_t* points, const Color_t* colorIndices, TColorGradient::ECoordinateMode mode = kObjectBoundingMode). EGradientType GetGradientType() const. » Last changed: root/base:$Id$ » Last generated: 2015-06-30 15:29; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRadialGradient.html:12056,inherit,inherited,12056,root/html602/TRadialGradient.html,https://root.cern,https://root.cern/root/html602/TRadialGradient.html,2,['inherit'],['inherited']
Modifiability,"olorSet; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static TEveElement::EDestructTEveElement::kAnnihilate; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBImplySelectAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBTakeAnyParentAsMaster; static TEveElement::EDestructTEveElement::kNone; static TEveElement::EDestructTEveElement::kStandard. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveProjectionAxes(TEveProjectionManager* m, Bool_t useColorSet = kTRUE); Constructor. ~TEveProjectionAxes(); Destructor. void Paint(Option_t* option = """"); Paint this object. Only direct rendering is supported. void ComputeBBox(); Virtual from TAttBBox; fill bounding-box information. const TGPicture* GetListTreeIcon(Bool_t open = kFALSE); Return TEveProjectionAxes icon. TEveProjectionAxes(const TEveProjectionAxes& ). TEveProjectionAxes& operator=(const TEveProjectionAxes& ). TEveProjectionManager* GetManager(); { return fManager; }. void SetLabMode(TEveProjectionAxes::ELabMode x); { fLabMode = x; }. ELabMode GetLabMode() const; { return fLabMode;}. void SetAxesMode(TEveProjectionAxes::EAxesMode x); { fAxesMode = x; }. EAxesMode GetAxesMode() const; { return fAxesMode; }. void SetDrawCenter(Bool_t x); { fDrawCenter = x; }. Bool_t GetDrawCenter() const; { return fDrawCenter; }. void SetDrawOrigin(Bool_t x); { fDrawOrigin = x; }. Bool_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveProjectionAxes.html:23137,Inherit,Inheritance,23137,root/html602/TEveProjectionAxes.html,https://root.cern,https://root.cern/root/html602/TEveProjectionAxes.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"olorSet; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element.; static TEveElement::EDestructTEveElement::kAnnihilate; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainColorToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBApplyMainTransparencyToMatchingChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBImplySelectAllChildren; static TEveElement::ECompoundSelectionColorBitsTEveElement::kCSCBTakeAnyParentAsMaster; static TEveElement::EDestructTEveElement::kNone; static TEveElement::EDestructTEveElement::kStandard. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveViewerList(const char* n = ""TEveViewerList"", const char* t = """"); Constructor. ~TEveViewerList(); Destructor. void AddElement(TEveElement* el); Call base-class implementation.; If compund is open and compound of the new element is not set,; the el's compound is set to this. void RemoveElementLocal(TEveElement* el); Decompoundofy el, call base-class version. void RemoveElementsLocal(); Decompoundofy children, call base-class version. void Connect(); Connect to TGLViewer class-signals. void Disconnect(); Disconnect from TGLViewer class-signals. void RepaintChangedViewers(Bool_t resetCameras, Bool_t dropLogicals); Repaint viewers that are tagged as changed. void RepaintAllViewers(Bool_t resetCameras, Bool_t dropLogicals); Repaint all viewers. void DeleteAnnotations(); Delete annotations from all viewers. void SceneDestructing(TEveScene* scene); Callback done from a TEveScene destructor allowing proper; removal of the scene from affect",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveViewerList.html:21307,Inherit,Inheritance,21307,root/html602/TEveViewerList.html,https://root.cern,https://root.cern/root/html602/TEveViewerList.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"olorToMatchingChildren ();  ; void CSCApplyMainTransparencyToAllChildren ();  ; void CSCApplyMainTransparencyToMatchingChildren ();  ; void CSCImplySelectAllChildren ();  ; void CSCTakeMotherAsMaster ();  ; void DecDenyDestroy ();  Decreases the deny-destroy count of the element. ;  ; void DecImpliedSelected ();  ; virtual void Destroy ();  Destroy this element. ;  ; virtual void DestroyElements ();  Destroy all children of this element. ;  ; virtual void DestroyMainTrans ();  Destroy the main transformation matrix, it will always be taken as identity. ;  ; virtual void DestroyOrWarn ();  Destroy this element. Prints a warning if deny-destroy is in force. ;  ; void DisableListElements (Bool_t rnr_self=kFALSE, Bool_t rnr_children=kFALSE);  Disable rendering of children and their list contents. ;  ; void EnableListElements (Bool_t rnr_self=kTRUE, Bool_t rnr_children=kTRUE);  Enable rendering of children and their list contents. ;  ; virtual void ExportToInterpreter (const char *var_name);  Export render-element to CINT with variable name var_name. ;  ; virtual void FillExtraSelectionData (nlohmann::json &, const std::set< int > &) const;  ; virtual void FillImpliedSelectedSet (Set_t &impSelSet, const std::set< int > &);  Populate set impSelSet with derived / dependant elements. ;  ; REveElement * FindChild (const TString &name, const TClass *cls=nullptr);  Find the first child with given name. ;  ; REveElement * FindChild (TPRegexp &regexp, const TClass *cls=nullptr);  Find the first child whose name matches regexp. ;  ; Int_t FindChildren (List_t &matches, const TString &name, const TClass *cls=nullptr);  Find all children with given name and append them to matches list. ;  ; Int_t FindChildren (List_t &matches, TPRegexp &regexp, const TClass *cls=nullptr);  Find all children whose name matches regexp and append them to matches list. ;  ; REveElement * FirstChild () const;  Returns the first child element or 0 if the list is empty. ;  ; UChar_t GetChangeBits () const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveLine.html:6926,variab,variable,6926,doc/master/classROOT_1_1Experimental_1_1REveLine.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveLine.html,5,['variab'],['variable']
Modifiability,"olor_t >::size_type SizeType_t;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TColor; Int_t fNumber;  Color number identifier. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TColorGradient.h>. Inheritance diagram for TLinearGradient:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TLinearGradient(). TLinearGradient::TLinearGradient ; (; ). inline . Definition at line 102 of file TColorGradient.h. Member Function Documentation. ◆ Class(). static TClass * TLinearGradient::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TLinearGradient::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TLinearGradient::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 113 of file TColorGradient.h. ◆ DeclFileName(). static const char * TLinearGradient::DeclFileName ; (; ). inlinestatic . Ret",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLinearGradient.html:21440,inherit,inherited,21440,doc/master/classTLinearGradient.html,https://root.cern,https://root.cern/doc/master/classTLinearGradient.html,1,['inherit'],['inherited']
Modifiability,"olor_t color, Bool_t tops);  Paint the pad border. ;  ; void PaintBorderPS (Double_t xl, Double_t yl, Double_t xt, Double_t yt, Int_t bmode, Int_t bsize, Int_t dark, Int_t light) override;  Paint a frame border with Postscript. ;  ; void PaintDate ();  Paint the current date and time if the option Date is set on via gStyle->SetOptDate() Paint the current file name if the option File is set on via gStyle->SetOptFile() ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitives in this pad on the C++ source file out. ;  ; void SetBatch (Bool_t batch=kTRUE) override;  Set pad in batch mode. ;  ;  Protected Member Functions inherited from TVirtualPad; void * GetSender () override;  true when resizing the pad ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; Bool_t fAbsCoord;  Use absolute coordinates. ;  ; Double_t fAbsHNDC;  Absolute Height of pad along Y in NDC. ;  ; Double_t fAbsPixeltoXk;  Conversion coefficient for absolute pixel to X World. ;  ; Double_t fAbsPixeltoYk;  Conversion coefficient for absolute pixel to Y World. ;  ; Double_t fAbsWNDC;  Absolute Width of pad along X in NDC. ;  ; Double_t fAbsXlowNDC;  Absolute X top left corner of pad in NDC [0,1]. ;  ; Double_t fAbsYlowNDC;  Absolute Y top left corner of pad in NDC [0,1]. ;  ; Double_t fAspectRatio;  ratio of w/h in case of fixed ratio ;  ; Short_t fBorderMode;  Bordermode (-1=down, 0 = no border, 1=up) ;  ; Short_t fBorderSize;  pad bordersize in pixels ;  ; TCanvas * fCanvas {nullptr};  ! Pointer to mother canvas ;  ; Int_t fCGnx;  ! Size of the collide grid along x ;  ; Int_t fCGny;  ! Size of the collide grid along y ;  ; std::vector< Bool_t > fCollideGrid;  ! Grid used to find ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPad.html:43410,inherit,inherited,43410,doc/master/classTPad.html,https://root.cern,https://root.cern/doc/master/classTPad.html,1,['inherit'],['inherited']
Modifiability,"olor_t color, Bool_t tops);  Paint the pad border. ;  ; void PaintBorderPS (Double_t xl, Double_t yl, Double_t xt, Double_t yt, Int_t bmode, Int_t bsize, Int_t dark, Int_t light) override;  Paint a frame border with Postscript. ;  ; void PaintDate ();  Paint the current date and time if the option Date is set on via gStyle->SetOptDate() Paint the current file name if the option File is set on via gStyle->SetOptFile() ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitives in this pad on the C++ source file out. ;  ; void SetBatch (Bool_t batch=kTRUE) override;  Set pad in batch mode. ;  ;  Protected Member Functions inherited from TVirtualPad; void * GetSender () override;  true when resizing the pad ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; Bool_t fBatch;  ! True when in batchmode ;  ; Int_t fCanvasID;  ! Canvas identifier ;  ; TCanvasImp * fCanvasImp;  ! Window system specific canvas implementation ;  ; TAttCanvas fCatt;  Canvas attributes. ;  ; UInt_t fCh;  Height of the canvas along Y (pixels) ;  ; TObject * fClickSelected;  ! Currently click-selected object ;  ; TPad * fClickSelectedPad;  ! Pad containing currently click-selected object ;  ; TContextMenu * fContextMenu;  ! Context menu pointer ;  ; UInt_t fCw;  Width of the canvas along X (pixels) ;  ; TString fDISPLAY;  Name of destination screen. ;  ; Int_t fDoubleBuffer;  Double buffer flag (0=off, 1=on) ;  ; Bool_t fDrawn;  ! Set to True when the Draw method is called ;  ; Int_t fEvent;  ! Type of current or last handled event ;  ; Int_t fEventX;  ! Last X mouse position in canvas ;  ; Int_t fEventY;  ! Last Y mouse position in canvas ;  ; Color_t fHighLightColor;  Highlight ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTCanvas.html:52080,inherit,inherited,52080,doc/v632/classTCanvas.html,https://root.cern,https://root.cern/doc/v632/classTCanvas.html,2,['inherit'],['inherited']
Modifiability,"olor_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; virtual void Sizeof3D () const;  Set total size of this 3D object (used by X3D interface). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox;  TAttBBox ();  ; virtual ~TAttBBox ();  ; Float_t * AssertBBox ();  ; Float_t * GetBBox ();  ; Bool_t GetBBoxOK () const;  ; TAttBBox & operator= (const TAttBBox &tab);  ; void ResetBBox ();  ; void SetupBBoxCube (Float_t extent, Float_t x, Float_t y, Float_t z);  Setup bounding box as cube with given extent and center position. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TEvePointSelectorConsumer;  TEvePointSelectorConsumer (ETreeVarType_e cs=kTVT_XYZ);  ; virtual ~TEvePointSelectorConsumer ();  ; ETreeVarType_e GetSourceCS () const;  ; void SetSourceCS (ETreeVarType_e cs);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TEveProjectable;  TEveProjectable ();  Constructor. ;  ; virtual ~TEveProjectable ();  Destructor. ;  ; virtual void AddProjected (TEveProjected *p);  ; virtual void AddProjectedsToSet (std::set< TEveElement * > &set);  Add the projected elements to the set, dyn-casting them to TEveElement. ;  ; virtual void AnnihilateProjecteds ();  Optimized destroy of projected elements with condition there is only one parent for projected element. ;  ; ProjList_i BeginProjecteds ();  ; virtual void ClearProjectedList ();  ; ProjList_i EndProjecteds ();  ; virtual Bool_t HasProjecteds () const;  ; virtual void PropagateMainColor (Color_t color, Color_t old_color);  Set main color of projecteds if their color is the same as old_color. ;  ; virtual void PropagateMainTransparency (Char_t t, Char_t old_t);  Set main tra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveLine.html:32992,inherit,inherited,32992,doc/master/classTEveLine.html,https://root.cern,https://root.cern/doc/master/classTEveLine.html,12,['inherit'],['inherited']
Modifiability,"olor_t GetFillColor () const;  Return the fill area color. ;  ; virtual Style_t GetFillStyle () const;  Return the fill area style. ;  ; virtual TClass * IsA () const;  ; virtual Bool_t IsTransparent () const;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttMarker;  TAttMarker ();  TAttMarker default constructor. ;  ;  TAttMarker (Color_t color, Style_t style, Size_t msize);  TAttMarker normal constructor. ;  ; virtual ~TAttMarker ();  TAttMarker destructor. ;  ; void Copy (TAttMarker &attmarker) const;  Copy this marker attributes to a new TAttMarker. ;  ; virtual Color_t GetMarkerColor () const;  Return the marker color. ;  ; virtual Size_t GetMarkerSize () const;  Return the marker size. ;  ; virtual Style_t GetMarkerStyle () const;  Return the marker style. ;  ; virtual TClass * IsA () const;  ; virtual void Modify ();  Change current marker attributes if necessary. ;  ; virtual void ResetAttMarker (Option_t *toption="""");  Reset this marker attributes to the default values. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarker",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNLLVar_1_1xRooHypoSpace.html:12164,inherit,inherited,12164,doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNLLVar_1_1xRooHypoSpace.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNLLVar_1_1xRooHypoSpace.html,1,['inherit'],['inherited']
Modifiability,"olor_t GetLineColor () const override;  ; Style_t GetLineStyle () const override;  ; Width_t GetLineWidth () const override;  ; Short_t GetTextAlign () const override;  ; Float_t GetTextAngle () const override;  ; Color_t GetTextColor () const override;  ; Font_t GetTextFont () const override;  ; Float_t GetTextMagnitude () const override;  ; Float_t GetTextSize () const override;  ; TClass * IsA () const override;  ; Bool_t IsTransparent () const override;  ; void SaveImage (TVirtualPad *, const char *, Int_t) const override;  Produce image from WebPadPainter. ;  ; void SelectDrawable (Int_t) override;  ; void SetFillColor (Color_t fcolor) override;  ; void SetFillStyle (Style_t fstyle) override;  ; void SetLineColor (Color_t lcolor) override;  ; void SetLineStyle (Style_t lstyle) override;  ; void SetLineWidth (Width_t lwidth) override;  ; void SetOpacity (Int_t percent) override;  ; void SetPainting (TWebPainting *p);  ; void SetTextAlign (Short_t align) override;  ; void SetTextAngle (Float_t tangle) override;  ; void SetTextColor (Color_t tcolor) override;  ; void SetTextFont (Font_t tfont) override;  ; void SetTextSize (Float_t tsize) override;  ; void SetTextSizePixels (Int_t npixels) override;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TVirtualPadPainter; virtual ~TVirtualPadPainter ();  Virtual dtor. ;  ; virtual void InitPainter ();  Empty definition. ;  ; virtual void InvalidateCS ();  Empty definition. ;  ; virtual void LockPainter ();  Empty definition. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebPadPainter.html:4141,inherit,inherited,4141,doc/master/classTWebPadPainter.html,https://root.cern,https://root.cern/doc/master/classTWebPadPainter.html,1,['inherit'],['inherited']
Modifiability,"olor_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Private Member Functions;  TNtupleD (const TNtupleD &)=delete;  ; TNtupleD & operator= (const TNtupleD &)=delete;  . Additional Inherited Members;  Public Types inherited from TTree; enum  { kSplitCollectionOfPointers = 100; };  ; enum  ESetBranchAddressStatus { ;   kMissingBranch = -5; , kInternalError = -4; , kMissingCompiledCollectionProxy = -3; , kMismatch = -2; , ;   kClassMismatch = -1; , kMatch = 0; , kMatchConversion = 1; , kMatchConversionCollection = 2; , ;   kMakeClass = 3; , kVoidPtr = 4; , kNoCheck = 5; , kNeedEnableDecomposedObj = (1ULL << ( 29 )); , ;   kNeedDisableDecomposedObj = (1ULL << ( 30 )); , kDecomposedObjMask = kNeedEnableDecomposedObj | kNeedDisableDecomposedObj. };  ; enum  EStatusBits { kForceRead = (1ULL << ( 11 )); , kCircular = (1ULL << ( 12 )); , kOnlyFlushAtCluster = (1ULL << ( 14 )); , kEntriesReshuffled = (1ULL << ( 19 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Attributes inherited from TTree; static constexpr Long64_t kMaxEntries = TVirtualTreePlayer::kMaxEntries;  ;  Protected Types inherited from TTree; enum  ELockStatusBits { ;   kFindBranch = (1ULL << ( 0 )); , kFindLeaf = (1ULL << ( 1 )); , kGetAlias = (1ULL << ( 2 )); , kGetBranch = (1ULL << ( 3 )); , ;   kGetEntry = (1ULL << ( 4 )); , kGetEntryWit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNtupleD.html:47938,inherit,inherited,47938,doc/master/classTNtupleD.html,https://root.cern,https://root.cern/doc/master/classTNtupleD.html,1,['inherit'],['inherited']
Modifiability,olume ; Definition at line 179 of file MethodPDERS.h. ◆ fDeltaFrac. Float_t TMVA::MethodPDERS::fDeltaFrac. private . fraction of RMS ; Definition at line 185 of file MethodPDERS.h. ◆ fFcnCall. Int_t TMVA::MethodPDERS::fFcnCall. protected . Definition at line 113 of file MethodPDERS.h. ◆ fGaussSigma. Double_t TMVA::MethodPDERS::fGaussSigma. private . size of Gauss in adaptive volume ; Definition at line 186 of file MethodPDERS.h. ◆ fGaussSigmaNorm. Double_t TMVA::MethodPDERS::fGaussSigmaNorm. private . size of Gauss in adaptive volume (normalised to dimensions) ; Definition at line 187 of file MethodPDERS.h. ◆ fHelpVolume. Volume* TMVA::MethodPDERS::fHelpVolume. protected . Definition at line 112 of file MethodPDERS.h. ◆ fInitializedVolumeEle. Bool_t TMVA::MethodPDERS::fInitializedVolumeEle. private . is volume element initialized ? ; Definition at line 197 of file MethodPDERS.h. ◆ fInitialScale. Float_t TMVA::MethodPDERS::fInitialScale. private . initial scale for adaptive volume ; Definition at line 195 of file MethodPDERS.h. ◆ fKernelEstimator. enum TMVA::MethodPDERS::EKernelEstimator TMVA::MethodPDERS::fKernelEstimator. private . ◆ fKernelString. TString TMVA::MethodPDERS::fKernelString. private . Definition at line 149 of file MethodPDERS.h. ◆ fkNNMax. Int_t TMVA::MethodPDERS::fkNNMax. private . max number of events in kNN tree ; Definition at line 200 of file MethodPDERS.h. ◆ fkNNMin. Int_t TMVA::MethodPDERS::fkNNMin. private . min number of events in kNN tree ; Definition at line 199 of file MethodPDERS.h. ◆ fMax_distance. Double_t TMVA::MethodPDERS::fMax_distance. private . maximum distance ; Definition at line 202 of file MethodPDERS.h. ◆ fMaxVIterations. Float_t TMVA::MethodPDERS::fMaxVIterations. private . maximum number of iterations to adapt volume size ; Definition at line 194 of file MethodPDERS.h. ◆ fNEventsMax. Float_t TMVA::MethodPDERS::fNEventsMax. private . maximum number of events in adaptive volume ; Definition at line 193 of file MethodPDERS.h.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodPDERS.html:45769,adapt,adaptive,45769,doc/master/classTMVA_1_1MethodPDERS.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodPDERS.html,1,['adapt'],['adaptive']
Modifiability,"olume spanned by this hist function. ; Return the total volume spanned by the observables of the RooDataHist.; In 1-d, this is e.g. the range spanned on the x-axis. ; Definition at line 274 of file RooHistFunc.cxx. ◆ translate(). void RooHistFunc::translate ; (; RooFit::Detail::CodeSquashContext & ; ctx); const. overridevirtual . This function defines a translation for each RooAbsReal based object that can be used to express the class as simple C++ code. ; The function adds the code represented by each class as an std::string (that is later concatenated with code strings from translate calls) to form the C++ code that AD tools can understand. Any class that wants to support AD, has to implement this function.; Parameters. [in]ctxAn object to manage auxiliary information for code-squashing. Also takes the code string that this class outputs into the squashed code through the 'addToCodeBody' function. . Reimplemented from RooAbsArg.; Definition at line 193 of file RooHistFunc.cxx. ◆ variables(). RooArgSet const & RooHistFunc::variables ; (; ); const. inline . Definition at line 106 of file RooHistFunc.h. Friends And Related Symbol Documentation. ◆ RooAbsCachedReal. friend class RooAbsCachedReal. friend . Definition at line 115 of file RooHistFunc.h. Member Data Documentation. ◆ _cdfBoundaries. bool RooHistFunc::_cdfBoundaries = false. protected . Use boundary conditions for CDFs. ; Definition at line 125 of file RooHistFunc.h. ◆ _codeReg. RooAICRegistry RooHistFunc::_codeReg. mutableprotected . ! Auxiliary class keeping tracking of analytical integration code ; Definition at line 123 of file RooHistFunc.h. ◆ _dataHist. RooDataHist* RooHistFunc::_dataHist = nullptr. protected . Unowned pointer to underlying histogram. ; Definition at line 121 of file RooHistFunc.h. ◆ _depList. RooSetProxy RooHistFunc::_depList. protected . List of observables mapped onto histogram observables. ; Definition at line 120 of file RooHistFunc.h. ◆ _histObsList. RooArgSet RooHistFunc::_histOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooHistFunc.html:74571,variab,variables,74571,doc/master/classRooHistFunc.html,https://root.cern,https://root.cern/doc/master/classRooHistFunc.html,1,['variab'],['variables']
Modifiability,"olume; TObject * fField;  pointer to TGeoManager owning this volume ;  ; TGeoPatternFinder * fFinder;  dummy medium ;  ; TGeoExtension * fFWExtension;  Transient user-defined extension to volumes. ;  ; TGeoManager * fGeoManager;  ; TGeoMedium * fMedium;  ; TObjArray * fNodes;  ; Int_t fNtotal;  ; Int_t fNumber;  option - if any ;  ; TString fOption;  just a hook for now ;  ; Int_t fRefCount;  ; TGeoShape * fShape;  ; Char_t fTransparency;  ; TGeoExtension * fUserExtension;  ; TGeoVoxelFinder * fVoxels;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TGeoAtt; UInt_t fGeoAtt;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Static Protected Attributes inherited from TGeoVolume; static TGeoMedium * fgDummyMedium = nullptr;  . #include <TGeoVolume.h>. Inheritance diagram for TGeoVolumeMulti:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoVolumeMulti() [1/3]. TGeoVolumeMulti::TGeoVolumeMulti ; (; const TGeoVolumeMulti & ; ). privatedelete . ◆ TGeoVolumeMulti() [2/3]. TGeoVolumeMulti::TGeoVolumeMulti ; (; ). dummy constructor ; Definition at line 2545 of file TGeoVolume.cxx. ◆ TGeoVolumeMulti() [3/3]. TGeoVolumeMulti::TGeoVolumeMulti ; (; const char * ; name, . TGeoMedium * ; med = nullptr . ). default constructor ; Definition at line 2561 of file TGeoVolume.cxx. ◆ ~TGeoVolumeMulti(). TGeoVolumeMulti::~TGeoVolumeMulti ; (; ). override . Destructor. ; Definition at line 2581 of file TGeoVolume.cxx. Member Function Documentation. ◆ AddNode(). TGeoNode * TGeoVolumeMulti::AddNode ; (; TGeoVolume * ; vol, . Int_t ; copy_no, . TGeoMatrix * ; mat, . Option_t * ; option",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoVolumeMulti.html:38030,inherit,inherited,38030,doc/master/classTGeoVolumeMulti.html,https://root.cern,https://root.cern/doc/master/classTGeoVolumeMulti.html,1,['inherit'],['inherited']
Modifiability,"olumns);  Shrink the columns of the TGTable by ncolumns. ;  ; virtual void ShrinkRows (UInt_t nrows);  Shrink the rows of the TGTable by nrows. ;  ; virtual void UpdateHeaders (EHeaderType type);  Update the labels of the headers of the given type. ;  ; virtual void UpdateRangeFrame ();  Update the range shown in the range frame. ;  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; Bool_t fAllData;  Is the data bigger than the table. ;  ; TGCanvas * fCanvas;  Canvas that will contains the cells. ;  ; UInt_t fCellHeight;  Default cell width. ;  ; UInt_t fCellWidth;  Default cell width. ;  ; TObjArray * fColumnHeaders;  Array of column headers. ;  ; TTableRange * fCurrentRange;  Range of data currently loaded. ;  ; TTableRange * fDataRange;  Full range of the data set. ;  ; TTableRange * f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTable.html:36756,inherit,inherited,36756,doc/master/classTGTable.html,https://root.cern,https://root.cern/doc/master/classTGTable.html,3,['inherit'],['inherited']
Modifiability,"olumns);  Shrink the columns of the TGTable by ncolumns. ;  ; virtual void ShrinkRows (UInt_t nrows);  Shrink the rows of the TGTable by nrows. ;  ; virtual void UpdateHeaders (EHeaderType type);  Update the labels of the headers of the given type. ;  ; virtual void UpdateRangeFrame ();  Update the range shown in the range frame. ;  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGSimpleTable.html:32889,inherit,inherited,32889,doc/master/classTGSimpleTable.html,https://root.cern,https://root.cern/doc/master/classTGSimpleTable.html,3,['inherit'],['inherited']
Modifiability,"oly(const TSplinePoly3& other). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Double_tTSplinePoly::fXabscissa; Double_tTSplinePoly::fYconstant term. private:. Double_tfBfirst order expansion coefficient : fB*1! is the first derivative at x; Double_tfCsecond order expansion coefficient : fC*2! is the second derivative at x; Double_tfDthird order expansion coefficient : fD*3! is the third derivative at x. Class Charts. Inheritance Chart:. TObject. ←; TSplinePoly. ←; TSplinePoly3. Function documentation; TSplinePoly3 & operator=(const TSplinePoly3& other); assignment operator. void CopyPoly(const TSplinePoly3& other); utility called by the copy constructors and = operator. inline TSplinePoly3(const TSplinePoly3& other). Double_t Eval(Double_t x) const. TSplinePoly3(); {}. TSplinePoly3(Double_t x, Double_t y, Double_t b, Double_t c, Double_t d); {}. Double_t & B(); {return fB;}. Double_t & C(); {return fC;}. Double_t Derivative(Double_t x) const. » Author: Federico Carminati 28/02/2000 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-06-02 16:33; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TSplinePoly3.html:6385,Inherit,Inheritance,6385,root/html604/TSplinePoly3.html,https://root.cern,https://root.cern/root/html604/TSplinePoly3.html,1,['Inherit'],['Inheritance']
Modifiability,"oly(const TSplinePoly3& other). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Double_tTSplinePoly::fXabscissa; Double_tTSplinePoly::fYconstant term. private:. Double_tfBfirst order expansion coefficient : fB*1! is the first derivative at x; Double_tfCsecond order expansion coefficient : fC*2! is the second derivative at x; Double_tfDthird order expansion coefficient : fD*3! is the third derivative at x. Class Charts. Inheritance Chart:. TObject. ←; TSplinePoly. ←; TSplinePoly3. Function documentation; TSplinePoly3 & operator=(const TSplinePoly3& other); assignment operator. void CopyPoly(const TSplinePoly3& other); utility called by the copy constructors and = operator. inline TSplinePoly3(const TSplinePoly3& other). Double_t Eval(Double_t x) const. TSplinePoly3(); {}. TSplinePoly3(Double_t x, Double_t y, Double_t b, Double_t c, Double_t d); {}. Double_t & B(); {return fB;}. Double_t & C(); {return fC;}. Double_t Derivative(Double_t x) const. » Author: Federico Carminati 28/02/2000 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-06-30 15:30; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSplinePoly3.html:6385,Inherit,Inheritance,6385,root/html602/TSplinePoly3.html,https://root.cern,https://root.cern/root/html602/TSplinePoly3.html,1,['Inherit'],['Inheritance']
Modifiability,"oly::X(); Double_t&TSplinePoly::Y(). protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. voidCopyPoly(TSplinePoly5 const& other). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Double_tTSplinePoly::fXabscissa; Double_tTSplinePoly::fYconstant term. private:. Double_tfBfirst order expansion coefficient : fB*1! is the first derivative at x; Double_tfCsecond order expansion coefficient : fC*2! is the second derivative at x; Double_tfDthird order expansion coefficient : fD*3! is the third derivative at x; Double_tfEfourth order expansion coefficient : fE*4! is the fourth derivative at x; Double_tfFfifth order expansion coefficient : fF*5! is the fifth derivative at x. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSplinePoly5 & operator=(TSplinePoly5 const& other); assignment operator. void CopyPoly(TSplinePoly5 const& other); utility called by the copy constructors and = operator. inline TSplinePoly5(TSplinePoly5 const& other). Double_t Eval(Double_t x) const. Double_t & B(); {return fB;}. Double_t & C(); {return fC;}. Double_t Derivative(Double_t x) const. TSplinePoly5(); {}. TSplinePoly5(Double_t x, Double_t y, Double_t b, Double_t c, Double_t d, Double_t e, Double_t f); {}. Double_t & E(); {return fE;}. Double_t & F(); {return fF;}. » Author: Federico Carminati 28/02/2000 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id: TSpline.h 34074 2010-06-23 09:08:49Z brun $ » Last generated: 2011-11-03 20:23; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSplinePoly5.html:6092,Inherit,Inheritance,6092,root/html532/TSplinePoly5.html,https://root.cern,https://root.cern/root/html532/TSplinePoly5.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ol ; markov, . Int_t ; averWindow . ). One-dimensional high-resolution peak search function. ; This function searches for peaks in source spectrum. It is based on deconvolution method. First the background is removed (if desired), then Markov smoothed spectrum is calculated (if desired), then the response function is generated according to given sigma and deconvolution is carried out. The order of peaks is arranged according to their heights in the spectrum after background elimination. The highest peak is the first in the list. On success it returns number of found peaks.; Parameters:. source: pointer to the vector of source spectrum.; destVector: pointer to the vector of resulting deconvolved spectrum.; ssize: length of source spectrum.; sigma: sigma of searched peaks, for details we refer to manual.; threshold: threshold value in % for selected peaks, peaks with amplitude less than threshold*highest_peak/100 are ignored, see manual.; backgroundRemove: logical variable, set if the removal of background before deconvolution is desired.; deconIterations-number of iterations in deconvolution operation.; markov: logical variable, if it is true, first the source spectrum is replaced by new spectrum calculated using Markov chains method.; averWindow: averaging window of searched peaks, for details we refer to manual (applies only for Markov method). Peaks searching:; The goal of this function is to identify automatically the peaks in spectrum with the presence of the continuous background and statistical fluctuations - noise.; The common problems connected with correct peak identification are:. non-sensitivity to noise, i.e., only statistically relevant peaks should be identified.; non-sensitivity of the algorithm to continuous background.; ability to identify peaks close to the edges of the spectrum region. Usually peak finders fail to detect them.; resolution, decomposition of Double_tts and multiplets. The algorithm should be able to recognise close positioned peaks.;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrum.html:56871,variab,variable,56871,doc/master/classTSpectrum.html,https://root.cern,https://root.cern/doc/master/classTSpectrum.html,1,['variab'],['variable']
Modifiability,"ol GetCandleChart ();  ; Long64_t GetCurrentFirst ();  ; Long64_t GetCurrentN ();  ; TParallelCoordSelect * GetCurrentSelection ();  Return the selection currently being edited. ;  ; bool GetCurveDisplay () const;  ; Int_t GetDotsSpacing () const;  ; TEntryList * GetEntryList (bool sel=true);  Get the whole entry list or one for a selection. ;  ; bool GetGlobalLogScale ();  ; Double_t GetGlobalMax ();  return the global maximum. ;  ; Double_t GetGlobalMin ();  return the global minimum. ;  ; bool GetGlobalScale ();  ; Color_t GetLineColor ();  ; Width_t GetLineWidth ();  ; Int_t GetNbins ();  get the binning of the histograms. ;  ; Long64_t GetNentries ();  ; UInt_t GetNvar ();  ; TParallelCoordSelect * GetSelection (const char *title);  Get a selection from its title. ;  ; TList * GetSelectList ();  ; TTree * GetTree ();  return the tree if fTree is defined. ;  ; Double_t * GetVariable (const char *var);  Get the variables values from its title. ;  ; Double_t * GetVariable (Int_t i);  Get the variables values from its index. ;  ; TList * GetVarList ();  ; bool GetVertDisplay () const;  ; Int_t GetWeightCut () const;  ; TClass * IsA () const override;  ; void Paint (Option_t *options="""") override;  Paint the parallel coordinates graph. ;  ; bool RemoveVariable (const char *var);  Delete the variable ""vartitle"" from the graph. ;  ; void RemoveVariable (TParallelCoordVar *var);  Delete a variable from the graph. ;  ; void ResetTree ();  Reset the tree entry list to the initial one.. ;  ; void SaveEntryLists (const char *filename="""", bool overwrite=false);  Save the entry lists in a root file ""filename.root"". ;  ; void SavePrimitive (std::ostream &out, Option_t *options) override;  Save the TParallelCoord in a macro. ;  ; void SaveTree (const char *filename="""", bool overwrite=false);  Save the tree in a file if fTreeFileName == """". ;  ; void SetAxisHistogramBinning (Int_t n=100);  Set the same histogram axis binning for all axis. ;  ; void SetAxisHistogramHeight (Double",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParallelCoord.html:9362,variab,variables,9362,doc/master/classTParallelCoord.html,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html,1,['variab'],['variables']
Modifiability,"ol SetXaxis (const char *name, const char *title, int nbins, double low, double high);  ; bool SetXaxis (const char *title, int nbins, const double *bins);  ; bool SetXaxis (const char *title, int nbins, double low, double high);  ; bool SetXaxis (const RooAbsBinning &binning);  ; bool SetXaxis (int nbins, const double *bins);  ; bool SetXaxis (int nbins, double low, double high);  ; bool SetXaxis (TAxis *ax);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; std::shared_ptr< TStyle > style (TObject *initObject=nullptr, bool autoCreate=true) const;  ; xRooNode variations () const;  ; xRooNode vars () const;  List of variables (observables and parameters) of this node. ;  ; xRooNode Vary (const xRooNode &child);  ; RooWorkspace * ws () const;  The RooWorkspace this node belong to, if any. ;  ; template<typename T > ; T * xget () const;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode.html:8386,inherit,inherited,8386,doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode.html,1,['inherit'],['inherited']
Modifiability,"ol _ownBoundLo = true;  Does the lower bound coincide with a bin boundary. ;  ; double _xhi = 0.0;  Upper bound. ;  ; double _xlo = 0.0;  Lower bound. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooBinning.h>. Inheritance diagram for RooBinning:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooBinning() [1/4]. RooBinning::RooBinning ; (; double ; xlo = -RooNumber::infinity(), . double ; xhi = RooNumber::infinity(), . const char * ; name = nullptr . ). Constructor for an initially empty binning defining the range [xlo,xhi]. ; Definition at line 50 of file RooBinning.cxx. ◆ RooBinning() [2/4]. RooBinning::RooBinning ; (; Int_t ; nBins, . double ; xlo, . double ; xhi, . const char * ; na",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBinning.html:18165,inherit,inherited,18165,doc/master/classRooBinning.html,https://root.cern,https://root.cern/doc/master/classRooBinning.html,1,['inherit'],['inherited']
Modifiability,"ol forceAnalyticalInt (const RooAbsArg &dep) const override;  Force RooRealIntegral to relegate integration of all observables to internal logic. ;  ; Int_t getAnalyticalIntegralWN (RooArgSet &allVars, RooArgSet &analVars, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Mark all requested variables as internally integrated. ;  ; void initGenerator (Int_t) override;  Interface for one-time initialization to setup the generator for the specified code. ;  ; TClass * IsA () const override;  ; void printMetaArgs (std::ostream &os) const override;  Customized printing of arguments of a RooRealIntegral to more intuitively reflect the contents of the integration operation. ;  ; bool selfNormalized () const override;  Shows if a PDF is self-normalized, which means that no attempt is made to add a normalization term. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsPdf;  RooAbsPdf ();  Default constructor. ;  ;  RooAbsPdf (const char *name, const char *title, double minVal, double maxVal);  Constructor with name, title, and plot range. ;  ;  RooAbsPdf (const char *name, const char *title=nullptr);  Constructor with name and title only. ;  ;  ~RooAbsPdf () override;  Destructor. ;  ; virtual RooAbsGenContext * autoGenContext (const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool verbose=false, bool autoBinned=true, const char *binnedTag="""") const;  ; virtual RooAbsGenContext * binnedGenContext (const RooArgSet &vars, bool verbose=false) const;  Return a binned generator context. ;  ; bool canBeExtended () const;  If true, PDF can provide extended likelihood term. ;  ; RooFit::OwningPtr< RooAbsReal > createCdf (const RooArgSet &iset, const RooArgSet &nset=RooArgSet());  Create a cumulative distribution function of this p.d.f in terms of the observables listed in ise",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classxRooProjectedPdf.html:2868,inherit,inherited,2868,doc/master/classxRooProjectedPdf.html,https://root.cern,https://root.cern/doc/master/classxRooProjectedPdf.html,2,['inherit'],['inherited']
Modifiability,"om ROOT::Internal::TTreeReaderValueBase; virtual ~TTreeReaderValueBase ();  Unregister from tree reader, cleanup. ;  ; void * GetAddress ();  Returns the memory address of the object being read. ;  ; const char * GetBranchName () const;  ; TLeaf * GetLeaf ();  If we are reading a leaf, return the corresponding TLeaf. ;  ; virtual EReadStatus GetReadStatus () const;  ; ESetupStatus GetSetupStatus () const;  Return this TTreeReaderValue's setup status. ;  ; bool IsValid () const;  Return true if the branch was setup and read correctly. ;  ; EReadStatus ProxyRead ();  ; EReadStatus ProxyReadDefaultImpl ();  ; template<BranchProxyRead_t Func> ; ROOT::Internal::TTreeReaderValueBase::EReadStatus ProxyReadTemplate ();  Try to read the value from the TBranchProxy, returns the status of the read. ;  . Protected Member Functions; const char * GetDerivedTypeName () const override;  Get the template argument as a string. ;  ;  Protected Member Functions inherited from ROOT::Internal::TTreeReaderValueBase;  TTreeReaderValueBase (const TTreeReaderValueBase &);  Copy-construct. ;  ;  TTreeReaderValueBase (TTreeReader *reader, const char *branchname, TDictionary *dict, bool opaqueRead=false);  Construct a tree value reader and register it with the reader object. ;  ; virtual void CreateProxy ();  Create the proxy object for our branch. ;  ; void ErrorAboutMissingProxyIfNeeded ();  ; Detail::TBranchProxy * GetProxy () const;  ; void MarkTreeReaderUnavailable ();  ; void NotifyNewTree (TTree *newTree);  The TTreeReader has switched to a new TTree. Update the leaf. ;  ; TTreeReaderValueBase & operator= (const TTreeReaderValueBase &);  Copy-assign. ;  ; void RegisterWithTreeReader ();  Register with tree reader. ;  ; TBranch * SearchBranchWithCompositeName (TLeaf *&myleaf, TDictionary *&branchActualType, std::string &err);  Search a branch the name of which contains a ""."". ;  . Additional Inherited Members;  Protected Types inherited from ROOT::Internal::TTreeReaderValueBase; typedef ER",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeReaderValue.html:2983,inherit,inherited,2983,doc/master/classTTreeReaderValue.html,https://root.cern,https://root.cern/doc/master/classTTreeReaderValue.html,1,['inherit'],['inherited']
Modifiability,"om RooAbsData; RooArgSet _cachedVars;  ! External variables cached with this data set ;  ; std::unique_ptr< RooAbsDataStore > _dstore;  Data storage implementation. ;  ; std::unique_ptr< RooArgSet > _globalObservables;  Snapshot of global observables. ;  ; const TNamed * _namePtr = nullptr;  ! De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; std::map< std::string, RooAbsData * > _ownedComponents;  Owned external components. ;  ; RooArgSet _vars;  Dimensions of this data set. ;  ; StorageType storageType;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from RooDirItem; TDirectory * _dir {nullptr};  ! Associated directory ;  . Private Member Functions; void _adjustBinning (RooRealVar &theirVar, const TAxis &axis, RooRealVar *ourVar, Int_t *offset);  Helper doing the actual work of adjustBinning(). ;  ; VarInfo const & getVarInfo ();  Return reference to VarInfo struct with cached histogram variable information that is frequently used for histogram weights retrieval. ;  ; void initializeAsymErrArrays () const;  ; void interpolateLinear (double *output, std::span< const double > xVals, bool correctForBinSize, bool cdfBoundaries);  A vectorized version of interpolateDim for boundary safe linear interpolation of one dimensional histograms. ;  ; void interpolateQuadratic (double *output, std::span< const double > xVals, bool correctForBinSize, bool cdfBoundaries);  A vectorized version of interpolateDim for boundary safe quadratic interpolation of one dimensional histograms. ;  ; void registerWeightArraysToDataStore () const;  Hand over pointers to our weight arrays to the data store implementation. ;  ; double weightInterpolated (const RooArgSet &bin, int intOrder, bool correctForBinSize, bool cdfBoundaries);  Return the weight at given coordinates with interpolation. ;  . Static Private Member Functions; static std::unique_ptr< RooAbsDataStore > makeDefaultDataStor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDataHist.html:40354,variab,variable,40354,doc/master/classRooDataHist.html,https://root.cern,https://root.cern/doc/master/classRooDataHist.html,1,['variab'],['variable']
Modifiability,"om RooAbsPdf.; Definition at line 63 of file RooExtendedTerm.cxx. ◆ DeclFileName(). static const char * RooExtendedTerm::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 42 of file RooExtendedTerm.h. ◆ evaluate(). double RooExtendedTerm::evaluate ; (; ); const. inlineoverridevirtual . Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ; Implements RooAbsReal.; Definition at line 30 of file RooExtendedTerm.h. ◆ expectedEvents(). double RooExtendedTerm::expectedEvents ; (; const RooArgSet * ; nset); const. overridevirtual . Return number of expected events, in other words the value of the associated n parameter. ; Return number of expected events from associated event count variable. ; Reimplemented from RooAbsPdf.; Definition at line 58 of file RooExtendedTerm.cxx. ◆ extendMode(). ExtendMode RooExtendedTerm::extendMode ; (; ); const. inlineoverridevirtual . Returns ability of PDF to provide extended likelihood terms. ; Possible answers are in the enumerator RooAbsPdf::ExtendMode. This default implementation always returns CanNotBeExtended. ; Reimplemented from RooAbsPdf.; Definition at line 32 of file RooExtendedTerm.h. ◆ IsA(). TClass * RooExtendedTerm::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooAbsPdf.; Definition at line 42 of file RooExtendedTerm.h. ◆ Streamer(). void RooExtendedTerm::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from RooAbsPdf. ◆ StreamerNVirtual(). void RooExtendedTerm::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 42 of file RooExtendedTerm.h. Member Data Documentation. ◆ _n. RooRealProxy RooExtendedTerm::_n. protected . Number of expected events. ; Definition at line 40 of file RooExtendedTerm.h. Libraries for RooExtendedTerm:. [legend]; The documentation for this class was genera",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooExtendedTerm.html:76138,extend,extended,76138,doc/master/classRooExtendedTerm.html,https://root.cern,https://root.cern/doc/master/classRooExtendedTerm.html,1,['extend'],['extended']
Modifiability,"om TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  . Private Attributes; BtCoef_t * fCoeff;  ; Int_t fCsize;  ; TGeoElementRN * fElem;  ; TGeoElementRN * fElemTop;  ; Double_t fFactor;  ; Int_t fNcoeff;  ; Double_t fTmax;  ; Double_t fTmin;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoBatemanSol.html:15305,inherit,inherited,15305,doc/master/classTGeoBatemanSol.html,https://root.cern,https://root.cern/doc/master/classTGeoBatemanSol.html,1,['inherit'],['inherited']
Modifiability,"om TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Protected Types inherited from ROOT::Experimental::REveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = BIT(0); , kCSCBTakeMotherAsMaster = BIT(1); , kCSCBApplyMainColorToAllChildren = BIT(2); , kCSCBApplyMainColorToMatchingChildren = BIT(3); , ;   kCSCBApplyMainTransparencyToAllChildren = BIT(4); , kCSCBApplyMainTransparencyToMatchingChildren = BIT(5). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Member Functions inherited from ROOT::Experimental::REveElement; virtual void AnnihilateRecursively ();  Protected member function called from REveElement::Annihilate(). ;  ; void assign_element_id_recurisvely ();  ; void assign_scene_recursively (REveScene *s);  ; ElementId_t get_mother_id () const;  ; ElementId_t get_scene_id () const;  ; virtual void PreDeleteElement ();  Vertex / normal / triangle index information for rendering. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Static Protected Member Functions inherited from ROOT::Experimental::REveElement; static const std::string & ToString (Bool_t b);  Convert Bool_t to string - kTRUE or kFALSE. ;  . #include <ROOT/REvePointSet.hxx>. Inheritance diagram for ROOT::Experimental::REvePointSetArray:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ REvePointSetArray() [1/2]. ROOT::Experimental::REvePointSetArray::REvePointSetArray ; (; const REvePointSetArray & ; ).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REvePointSetArray.html:19579,inherit,inherited,19579,doc/master/classROOT_1_1Experimental_1_1REvePointSetArray.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REvePointSetArray.html,1,['inherit'],['inherited']
Modifiability,"om TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; TClassTree * fClassTree;  Pointer to the TClassTree referencing this object. ;  ;  Protected Attributes inherited from TPaveLabel; TString fLabel;  Label written at the center of Pave. ;  ;  Protected Attributes inherited from TPave; Int_t fBorderSize;  window box bordersize in pixels ;  ; Double_t fCornerRadius;  Corner radius in case of option arc. ;  ; Int_t fInit;  (=0 if transformation to NDC not yet done) ;  ; TString fName;  Pave name. ;  ; TString fOption;  Pave style. ;  ; Int_t fShadowColor;  Color of the pave's shadow. ;  ; Double_t fX1NDC;  X1 point in NDC coordinates. ;  ; Double_t fX2NDC;  X2 point in NDC coordinates. ;  ; Double_t fY1NDC;  Y1 point in NDC coordinates. ;  ; Double_t fY2NDC;  Y2 point in NDC coordinates. ;  ;  Protected Attributes inherited from TBox; Bool_t fResizing;  ! True if box is being resized ;  ; Double_t fX1;  X of 1st point. ;  ; Double_t fX2;  X of 2nd point. ;  ; Double_t fY1;  Y of 1st point. ;  ; Double_t fY2;  Y of 2nd point. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Additional Inherited Members;  Public Types inherited from TPave; enum  { kNameIsAction = (1ULL << ( 11 )); };  ;  Public Types inherited from TBox; enum  { kCannotMove = (1ULL << ( 12 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPaveClass.html:22345,inherit,inherited,22345,doc/master/classTPaveClass.html,https://root.cern,https://root.cern/doc/master/classTPaveClass.html,1,['inherit'],['inherited']
Modifiability,"om TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Private Member Functions;  TGColorPalette (const TGColorPalette &)=delete;  ; TGColorPalette & operator= (const TGColorPalette &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TCla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGColorPalette.html:27028,inherit,inherited,27028,doc/master/classTGColorPalette.html,https://root.cern,https://root.cern/doc/master/classTGColorPalette.html,1,['inherit'],['inherited']
Modifiability,"om TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used for event processing) ;  . Private Member Functions;  TGDoubleSlider (const TGDoubleSlider &)=delete;  ; TGDoubleSlider & operator= (const TGDoubleSlider &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; stat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGDoubleSlider.html:29853,inherit,inherited,29853,doc/master/classTGDoubleSlider.html,https://root.cern,https://root.cern/doc/master/classTGDoubleSlider.html,1,['inherit'],['inherited']
Modifiability,om TGWin32ProxyBase;  TGWin32ProxyBase ();  ctor ;  ; virtual ~TGWin32ProxyBase ();  dtor ;  ; virtual void ExecuteCallBack (Bool_t sync);  Executes all batched callbacks and the latest callback This method is executed by server thread. ;  ; ULong_t GetId () const;  ; virtual Double_t GetMilliSeconds ();  returns elapsed time in milliseconds with microseconds precision ;  . Static Public Member Functions; static TVirtualX * ProxyObject ();  ; static TVirtualX * RealObject ();  ;  Static Public Member Functions inherited from TVirtualX; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualX *& Instance ();  Returns gVirtualX global. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; s,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGWin32VirtualXProxy.html:46080,inherit,inherited,46080,doc/master/classTGWin32VirtualXProxy.html,https://root.cern,https://root.cern/doc/master/classTGWin32VirtualXProxy.html,2,['inherit'],['inherited']
Modifiability,"om TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGLBContainer (const TGLBContainer &)=delete;  ; TGLBContainer operator= (const TGLBContainer &)=delete;  . Friends; class TGListBox;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLBContainer.html:35943,inherit,inherited,35943,doc/master/classTGLBContainer.html,https://root.cern,https://root.cern/doc/master/classTGLBContainer.html,1,['inherit'],['inherited']
Modifiability,"om TGraphErrors; Double_t * fEX {nullptr};  [fNpoints] array of X errors ;  ; Double_t * fEY {nullptr};  [fNpoints] array of Y errors ;  ;  Protected Attributes inherited from TGraph; TList * fFunctions;  Pointer to list of functions (fits and user) ;  ; TH1F * fHistogram;  Pointer to histogram used for drawing axis. ;  ; Double_t fMaximum;  Maximum value for plotting along y. ;  ; Int_t fMaxSize;  !Current dimension of arrays fX and fY ;  ; Double_t fMinimum;  Minimum value for plotting along y. ;  ; Int_t fNpoints;  Number of points <= fMaxSize. ;  ; TString fOption;  Options used for drawing the graph. ;  ; Double_t * fX;  [fNpoints] array of X points ;  ; Double_t * fY;  [fNpoints] array of Y points ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Private Attributes; Bool_t fOptionAxis;  Force drawing of new coord system. ;  . Additional Inherited Members;  Public Types inherited from TGraph; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kClipFrame = (1ULL << ( 10 )); , kResetHisto = (1ULL << ( 17 )); , kNotEditable = (1ULL << ( 18 )); , ;   kIsSortedX = (1ULL << ( 19 )); , kIsHighlight = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL <<",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphPolar.html:32232,inherit,inherited,32232,doc/master/classTGraphPolar.html,https://root.cern,https://root.cern/doc/master/classTGraphPolar.html,1,['inherit'],['inherited']
Modifiability,"om TH1 or classes derived from TH1, eg TProfile, TProfile2D. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH2C operator* (Float_t c1, TH2C const &h1);  Operator *. ;  ; TH2C operator* (TH2C const &h1, Float_t c1);  ; TH2C operator* (TH2C const &h1, TH2C const &h2);  Operator *. ;  ; TH2C operator+ (TH2C const &h1, TH2C const &h2);  Operator +. ;  ; TH2C operator- (TH2C const &h1, TH2C const &h2);  Operator -. ;  ; TH2C operator/ (TH2C const &h1, TH2C const &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDelet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2C.html:53876,inherit,inherited,53876,doc/master/classTH2C.html,https://root.cern,https://root.cern/doc/master/classTH2C.html,1,['inherit'],['inherited']
Modifiability,"om TH1 or classes derived from TH1, eg TProfile, TProfile2D. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH2D operator* (Float_t c1, TH2D const &h1);  Operator *. ;  ; TH2D operator* (TH2D const &h1, Float_t c1);  ; TH2D operator* (TH2D const &h1, TH2D const &h2);  Operator *. ;  ; TH2D operator+ (TH2D const &h1, TH2D const &h2);  Operator +. ;  ; TH2D operator- (TH2D const &h1, TH2D const &h2);  Operator -. ;  ; TH2D operator/ (TH2D const &h1, TH2D const &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDelet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2D.html:54152,inherit,inherited,54152,doc/master/classTH2D.html,https://root.cern,https://root.cern/doc/master/classTH2D.html,1,['inherit'],['inherited']
Modifiability,"om TH1 or classes derived from TH1, eg TProfile, TProfile2D. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH2I operator* (Float_t c1, TH2I const &h1);  Operator *. ;  ; TH2I operator* (TH2I const &h1, Float_t c1);  ; TH2I operator* (TH2I const &h1, TH2I const &h2);  Operator *. ;  ; TH2I operator+ (TH2I const &h1, TH2I const &h2);  Operator +. ;  ; TH2I operator- (TH2I const &h1, TH2I const &h2);  Operator -. ;  ; TH2I operator/ (TH2I const &h1, TH2I const &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDelet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2I.html:53883,inherit,inherited,53883,doc/master/classTH2I.html,https://root.cern,https://root.cern/doc/master/classTH2I.html,1,['inherit'],['inherited']
Modifiability,"om TH1 or classes derived from TH1, eg TProfile, TProfile2D. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH2L operator* (Float_t c1, TH2L const &h1);  Operator *. ;  ; TH2L operator* (TH2L const &h1, Float_t c1);  ; TH2L operator* (TH2L const &h1, TH2L const &h2);  Operator *. ;  ; TH2L operator+ (TH2L const &h1, TH2L const &h2);  Operator +. ;  ; TH2L operator- (TH2L const &h1, TH2L const &h2);  Operator -. ;  ; TH2L operator/ (TH2L const &h1, TH2L const &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDelet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2L.html:53953,inherit,inherited,53953,doc/master/classTH2L.html,https://root.cern,https://root.cern/doc/master/classTH2L.html,1,['inherit'],['inherited']
Modifiability,"om TH1 or classes derived from TH1, eg TProfile, TProfile2D. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH2S operator* (Float_t c1, TH2S const &h1);  Operator *. ;  ; TH2S operator* (TH2S const &h1, Float_t c1);  ; TH2S operator* (TH2S const &h1, TH2S const &h2);  Operator *. ;  ; TH2S operator+ (TH2S const &h1, TH2S const &h2);  Operator +. ;  ; TH2S operator- (TH2S const &h1, TH2S const &h2);  Operator -. ;  ; TH2S operator/ (TH2S const &h1, TH2S const &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDelet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2S.html:53943,inherit,inherited,53943,doc/master/classTH2S.html,https://root.cern,https://root.cern/doc/master/classTH2S.html,1,['inherit'],['inherited']
Modifiability,"om TH1 or classes derived from TH1, eg TProfile, TProfile2D. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH3C operator* (Float_t c1, TH3C const &h1);  Operator *. ;  ; TH3C operator* (TH3C const &h1, Float_t c1);  ; TH3C operator* (TH3C const &h1, TH3C const &h2);  Operator *. ;  ; TH3C operator+ (TH3C const &h1, TH3C const &h2);  Operator +. ;  ; TH3C operator- (TH3C const &h1, TH3C const &h2);  Operator -. ;  ; TH3C operator/ (TH3C const &h1, TH3C const &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDelet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3C.html:54714,inherit,inherited,54714,doc/master/classTH3C.html,https://root.cern,https://root.cern/doc/master/classTH3C.html,1,['inherit'],['inherited']
Modifiability,"om TH1 or classes derived from TH1, eg TProfile, TProfile2D. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH3D operator* (Float_t c1, TH3D const &h1);  Operator *. ;  ; TH3D operator* (TH3D const &h1, Float_t c1);  ; TH3D operator* (TH3D const &h1, TH3D const &h2);  Operator *. ;  ; TH3D operator+ (TH3D const &h1, TH3D const &h2);  Operator +. ;  ; TH3D operator- (TH3D const &h1, TH3D const &h2);  Operator -. ;  ; TH3D operator/ (TH3D const &h1, TH3D const &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDelet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3D.html:54982,inherit,inherited,54982,doc/master/classTH3D.html,https://root.cern,https://root.cern/doc/master/classTH3D.html,1,['inherit'],['inherited']
Modifiability,"om TH1 or classes derived from TH1, eg TProfile, TProfile2D. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH3F operator* (Float_t c1, TH3F const &h1);  Operator *. ;  ; TH3F operator* (TH3F const &h1, Float_t c1);  ; TH3F operator* (TH3F const &h1, TH3F const &h2);  Operator *. ;  ; TH3F operator+ (TH3F const &h1, TH3F const &h2);  Operator +. ;  ; TH3F operator- (TH3F const &h1, TH3F const &h2);  Operator -. ;  ; TH3F operator/ (TH3F const &h1, TH3F const &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDelet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3F.html:54842,inherit,inherited,54842,doc/master/classTH3F.html,https://root.cern,https://root.cern/doc/master/classTH3F.html,1,['inherit'],['inherited']
Modifiability,"om TH1 or classes derived from TH1, eg TProfile, TProfile2D. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH3I operator* (Float_t c1, TH3I const &h1);  Operator *. ;  ; TH3I operator* (TH3I const &h1, Float_t c1);  ; TH3I operator* (TH3I const &h1, TH3I const &h2);  Operator *. ;  ; TH3I operator+ (TH3I const &h1, TH3I const &h2);  Operator +. ;  ; TH3I operator- (TH3I const &h1, TH3I const &h2);  Operator _. ;  ; TH3I operator/ (TH3I const &h1, TH3I const &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDelet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3I.html:54809,inherit,inherited,54809,doc/master/classTH3I.html,https://root.cern,https://root.cern/doc/master/classTH3I.html,1,['inherit'],['inherited']
Modifiability,"om TH1 or classes derived from TH1, eg TProfile, TProfile2D. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH3L operator* (Float_t c1, TH3L const &h1);  Operator *. ;  ; TH3L operator* (TH3L const &h1, Float_t c1);  ; TH3L operator* (TH3L const &h1, TH3L const &h2);  Operator *. ;  ; TH3L operator+ (TH3L const &h1, TH3L const &h2);  Operator +. ;  ; TH3L operator- (TH3L const &h1, TH3L const &h2);  Operator _. ;  ; TH3L operator/ (TH3L const &h1, TH3L const &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDelet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3L.html:54879,inherit,inherited,54879,doc/master/classTH3L.html,https://root.cern,https://root.cern/doc/master/classTH3L.html,1,['inherit'],['inherited']
Modifiability,"om TH1 or classes derived from TH1, eg TProfile, TProfile2D. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TH3S operator* (Float_t c1, TH3S const &h1);  Operator *. ;  ; TH3S operator* (TH3S const &h1, Float_t c1);  ; TH3S operator* (TH3S const &h1, TH3S const &h2);  Operator *. ;  ; TH3S operator+ (TH3S const &h1, TH3S const &h2);  Operator +. ;  ; TH3S operator- (TH3S const &h1, TH3S const &h2);  Operator -. ;  ; TH3S operator/ (TH3S const &h1, TH3S const &h2);  Operator /. ;  . Additional Inherited Members;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDelet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3S.html:54701,inherit,inherited,54701,doc/master/classTH3S.html,https://root.cern,https://root.cern/doc/master/classTH3S.html,1,['inherit'],['inherited']
Modifiability,"om TMacro; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TMacro; void SaveSource (FILE *fp);  Save macro source in file pointer fp. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attrib",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveMacro.html:11965,inherit,inherited,11965,doc/master/classTEveMacro.html,https://root.cern,https://root.cern/doc/master/classTEveMacro.html,1,['inherit'],['inherited']
Modifiability,"om TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum class  EMode { kCreate; , kRecreate; , kUpdate; , kRead; };  ;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; Bool_t IsExternalData () const;  ; Long64_t MemRead (Int_t fd, void *buf, Long64_t len) const;  ; bool NeedsExistingFile (EMode mode) const;  ; bool NeedsToWrite (EMode mode) const;  ; TMemFile & operator= (const TMemFile &)=delete;  ; EMode ParseOption (Option_t *option);  Parse option strings and set fOption. ;  ; void ResetObjects (TDirectoryFile *, TFileMergeInfo *) const;  Wipe all the data from the permanent buffer but keep, the in-memory object alive. ;  ; Int_t SysClose (Int_t fd) override;  Close the mem file. ;  ; Int_t SysOpen (const char *pathname, Int_t flags, UInt_t mode) override;  Open a file in 'MemFile'. ;  ; Int_t SysRead (Int_t fd, void *buf, Int_t len) override;  Read specified number of bytes from current offset into the buffer. ;  ; Int_t SysReadImpl (Int_t fd, void *buf, Long64_t len);  Read specified number of bytes from current offset into the buffer. ;  ; Long64_t SysSeek (Int_t fd, Lo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTMemFile.html:32555,inherit,inherited,32555,doc/v632/classTMemFile.html,https://root.cern,https://root.cern/doc/v632/classTMemFile.html,2,['inherit'],['inherited']
Modifiability,"om TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerObject:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStreamerObject() [1/3]. TStreamerObject::TStreamerObject ; (; cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerObject.html:15905,inherit,inherited,15905,doc/master/classTStreamerObject.html,https://root.cern,https://root.cern/doc/master/classTStreamerObject.html,1,['inherit'],['inherited']
Modifiability,"om TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerObjectAny:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStreamerObjectAny() [1/3]. TStreamerObjectAny::TStreamerObjectA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerObjectAny.html:15937,inherit,inherited,15937,doc/master/classTStreamerObjectAny.html,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAny.html,1,['inherit'],['inherited']
Modifiability,"om TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerObjectAnyPointer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStreamerObjectAnyPointer() [1/3]. TStreamerObjectAnyPoin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerObjectAnyPointer.html:16028,inherit,inherited,16028,doc/master/classTStreamerObjectAnyPointer.html,https://root.cern,https://root.cern/doc/master/classTStreamerObjectAnyPointer.html,1,['inherit'],['inherited']
Modifiability,"om TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerObjectPointer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStreamerObjectPointer() [1/3]. TStreamerObjectPointer::TStr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerObjectPointer.html:15992,inherit,inherited,15992,doc/master/classTStreamerObjectPointer.html,https://root.cern,https://root.cern/doc/master/classTStreamerObjectPointer.html,1,['inherit'],['inherited']
Modifiability,"om TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerString:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStreamerString() [1/3]. TStreamerString::TStreamerString ; (; cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerString.html:15882,inherit,inherited,15882,doc/master/classTStreamerString.html,https://root.cern,https://root.cern/doc/master/classTStreamerString.html,1,['inherit'],['inherited']
Modifiability,"om TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions; void AddLogFile (TProofQueryResult *pq);  Add part of log file concerning TQueryResult pq to its macro container. ;  . Private Attributes; TStopwatch fCompute;  ; Int_t fDrawQueries;  ; Int_t fKeptQueries;  ; TProofLockPath * fLock;  ; FILE * fLogFile;  ; TList * fPreviousQueries;  ; TList * fQueries;  ; TString fQueryDir;  ; Int_t fSeqNum;  ; TString fSessionDir;  ; TString fSessionTag;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TQueryResultManager.h>. Inheritance diagram for TQueryResultManager:. This browser is not able to show SVG: try Firefox, Chrome, S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQueryResultManager.html:11266,inherit,inherited,11266,doc/master/classTQueryResultManager.html,https://root.cern,https://root.cern/doc/master/classTQueryResultManager.html,1,['inherit'],['inherited']
Modifiability,"om TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGenerator (const TGenerator &tg);  ; TGenerator & operator= (const TGenerator &tg);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TObjArray * fParticles;  display neutrons if true ;  ; Float_t fPtCut;  ; Bool_t fShowNeutrons;  Pt cut. Do not show primaries below. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGenerator.h>. Inheritance diagram for TGenerator:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenerator.html:15425,inherit,inherited,15425,doc/master/classTGenerator.html,https://root.cern,https://root.cern/doc/master/classTGenerator.html,1,['inherit'],['inherited']
Modifiability,"om TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TSignalHandler * fIntHandler;  ; TString fMssUrl;  ; Int_t fRemoteProtocol;  ; EServType fServType;  ; TList * fSessions;  ; TUrl fUrl;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static TList fgListOfManagers;  . Private Member Functions;  TProofMgr (const TProofMgr &);  ; TProofMgr & operator= (const TProofMgr &);  . Static Private Member Functions; static TProofMgr_t GetXProofMgrHook ();  Get the constructor hook fro TXProofMgr. ;  ; static void ReplaceSubdirs (const char *fn, TString &fdst, TList &dirph);  Parse file name extracting the directory subcomponents in dirs, stored as TObjStrings. ;  . Static Private Attributes; static TProofMgr_t fgTXProofMgrHook = 0;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TProofMgr.h>. Inheritance diagram for TProofMgr:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EServType. enum TProofMgr::EServType. EnumeratorkProofd ; kXProofd ; kProofLite . Definition at line 46 of file TProofMgr.h. Constructor & Destructor Documentation. ◆ TProofMgr() [1/3]. TProofMgr::TProofMgr ; (; const TProofMgr & ; ). private . ◆ TProofMgr() [2/3]. TProofMgr::TProofMgr ; (; ). inlineprotected . Definition at line 68 of file TProofMgr.h. ◆ TProofMgr() [3/3]. TProofMgr::TProofMgr ; (; const char * ; url, . Int_t ; loglevel = -1, . const char * ; alias = """" . ). Create a PROOF manager for the standard (old) environment. ; Definition at line 63 of file TProofMgr.cxx. ◆ ~TProofMgr(). TProofMgr::~TProofMgr ; (; ). override . Destroy a TProofMgr instance. ; Definition at line 110 of file TProofMgr.cxx. Member Function Documentat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofMgr.html:16426,inherit,inherited,16426,doc/master/classTProofMgr.html,https://root.cern,https://root.cern/doc/master/classTProofMgr.html,1,['inherit'],['inherited']
Modifiability,"om TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TStreamerSTL; Int_t fCtype;  ; Int_t fSTLtype;  ;  Protected Attributes inherited from TStreamerElement; Int_t fArrayDim;  ; Int_t fArrayLength;  ; TClass * fClassObject;  ; Double_t fFactor;  Maximum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Int_t fMaxIndex [5];  ; TClass * fNewClass;  pointer to class of object ;  ; Int_t fNewType;  base offset for TObject if the element inherits from it ;  ; Int_t fOffset;  ; Int_t fSize;  ; TMemberStreamer * fStreamer;  new element class when reading ;  ; Int_t fTObjectOffset;  element offset in class ;  ; Int_t fType;  ; TString fTypeName;  new element type when reading ;  ; Double_t fXmax;  Minimum of data member if a range is specified [xmin,xmax,nbits]. ;  ; Double_t fXmin;  pointer to element Streamer ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TStreamerElement.h>. Inheritance diagram for TStreamerSTLstring:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStreamerSTLstring() [1/3]. TStreamerSTLstring::TStreamerSTLstring ; (; const TStreamerSTLstring & ; ). privatedelete . ◆ TStreamerSTLstring() [2/3]. TStreamerSTLstring::TStreamerSTLstring ; (; ). Default ctor. ; Definition at line 2010 of file TStreamerElement.cxx. ◆ TStreamerSTLstring() [3/3]. TStreamerSTLstring::TStreamerSTLstring ; (; const char * ; name, . const char * ; title, . Int_t ; offset, . const char * ; typeName, . Bool_t ; dmPointer . ). Create a TStreamerSTLstring object. ; Definition at line 2017 of file TStreamerElement.cxx. ◆ ~TStreamerSTLstring(). TStreamerSTLstring::~TStreamerSTLstring ; (; ). virtual . TStreamerSTLstring dtor. ; Definition at line 2041 of file TStreamerElement.cxx. Memb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerSTLstring.html:17746,inherit,inherited,17746,doc/master/classTStreamerSTLstring.html,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html,1,['inherit'],['inherited']
Modifiability,"om TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; Int_t fAspectRatio;  triangle orientation ;  ;  Protected Attributes inherited from TGDockButton; ULong_t fHiBg;  highlighted background color ;  ; Bool_t fMouseOn;  true when mouse on button ;  ; ULong_t fNormBg;  normal background color ;  ;  Protected Attributes inherited from TGButton; Pixel_t fBgndColor;  actual background color ;  ; TGButtonGroup * fGroup;  button group this button belongs to ;  ; Pixel_t fHighColor;  highlight color ;  ; GContext_t fNormGC;  graphics context used for drawing button ;  ; EButtonState fState;  button state ;  ; Bool_t fStayDown;  true if button has to stay down ;  ; UInt_t fStyle;  button style (modern or classic) ;  ; UInt_t fTHeight;  button height ;  ; TGToolTip * fTip;  tool tip associated with button ;  ; UInt_t fTWidth;  button width ;  ; void * fUserData;  pointer to user data structure ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attrib",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGDockHideButton.html:26441,inherit,inherited,26441,doc/master/classTGDockHideButton.html,https://root.cern,https://root.cern/doc/master/classTGDockHideButton.html,3,['inherit'],['inherited']
Modifiability,"om TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  ;  Static Protected Member Functions inherited from TGTextEntry; static const TGGC & GetDefaultSelectedBackgroundGC ();  Return graphics context for highlighted frame background. ;  ; static const TGGC & GetDefaultSelectedGC ();  Return selection graphics context. ;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGTextEntry; static TString * fgClipboardText = 0;  application clipboard text ;  ; static const TGFont * fgDefaultFont = 0;  ; static const TGGC * fgDefaultGC = 0;  ; static const TGGC * fgDefaultSelectedBackgroundGC =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGNumberEntryField.html:40176,inherit,inherited,40176,doc/master/classTGNumberEntryField.html,https://root.cern,https://root.cern/doc/master/classTGNumberEntryField.html,1,['inherit'],['inherited']
Modifiability,"om a RooArgList. ; If the list contains multiple objects with the same name, only the first is store in the set. Warning messages will be printed for dropped items. ; Definition at line 89 of file RooArgSet.cxx. ◆ RooArgSet() [11/13]. RooArgSet::RooArgSet ; (; const RooAbsCollection & ; collection, . const RooAbsArg * ; var1 . ). Constructor from a RooArgSet / RooArgList and a pointer to another RooFit object. ; Parameters. [in]collectionCollection of RooFit objects to be added. If a list contains multiple objects with the same name, only the first is stored in the set. Warning messages will be printed for dropped items. ; [in]var1Further object to be added. If it is already in collection, nothing happens, and the warning message is suppressed. . Definition at line 105 of file RooArgSet.cxx. ◆ RooArgSet() [12/13]. RooArgSet::RooArgSet ; (; const TCollection & ; tcoll, . const char * ; name = """" . ). explicit . Constructor from a root TCollection. ; Elements in the collection that do not inherit from RooAbsArg will be skipped. A warning message will be printed for every skipped item. ; Definition at line 141 of file RooArgSet.cxx. ◆ RooArgSet() [13/13]. RooArgSet::RooArgSet ; (; const char * ; name). explicit . Empty set constructor. ; Definition at line 118 of file RooArgSet.cxx. ◆ ~RooArgSet(). RooArgSet::~RooArgSet ; (; ). override . Destructor. ; Definition at line 170 of file RooArgSet.cxx. Member Function Documentation. ◆ canBeAdded(). bool RooArgSet::canBeAdded ; (; const RooAbsArg & ; arg, . bool ; silent . ); const. inlineoverrideprotectedvirtual . Determine whether it's possible to add a given RooAbsArg to the collection or not. ; Implements RooAbsCollection.; Definition at line 160 of file RooArgSet.h. ◆ checkForDup(). bool RooArgSet::checkForDup ; (; const RooAbsArg & ; arg, . bool ; silent . ); const. protected . Check if element with var's name is already in set. ; Definition at line 203 of file RooArgSet.cxx. ◆ Class(). static TClass * RooArgSet::Class ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooArgSet.html:35113,inherit,inherit,35113,doc/master/classRooArgSet.html,https://root.cern,https://root.cern/doc/master/classRooArgSet.html,1,['inherit'],['inherit']
Modifiability,"om a list. ;  ; void SetHighlight () override;  Set highlight (enable/disable) mode for fH. ;  ; void SetHistogram (TH1 *h) override;  Set current histogram to h ;  ; void SetShowProjection (const char *option, Int_t nbins) override;  Set projection. ;  ; void SetShowProjectionXY (const char *option, Int_t nbinsY, Int_t nbinsX) override;  ; void SetStack (TList *stack) override;  ; virtual void ShowProjection3 (Int_t px, Int_t py);  Show projection (specified by fShowProjection) of a TH3. ;  ; virtual void ShowProjectionX (Int_t px, Int_t py);  Show projection onto X. ;  ; virtual void ShowProjectionY (Int_t px, Int_t py);  Show projection onto Y. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Int_t TableInit ();  Initialize various options to draw 2D histograms. ;  ;  Public Member Functions inherited from TVirtualHistPainter;  TVirtualHistPainter ();  ;  ~TVirtualHistPainter () override;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHistPainter.html:139148,inherit,inherited,139148,doc/master/classTHistPainter.html,https://root.cern,https://root.cern/doc/master/classTHistPainter.html,1,['inherit'],['inherited']
Modifiability,"om command line, argv[0]) and copy it in gProgName. ;  ; virtual int SetSockOpt (int sock, int kind, int val);  Set socket option. ;  ; virtual void SetSoExt (const char *soExt);  Set shared library extension, should be either .so, .sl, .a, .dll, etc. ;  ; virtual void ShowOutput (RedirectHandle_t *h);  Display the content associated with the redirection described by the opaque handle 'h'. ;  ; virtual void Sleep (UInt_t milliSec);  Sleep milliSec milli seconds. ;  ; virtual TString SplitAclicMode (const char *filename, TString &mode, TString &args, TString &io) const;  This method split a filename of the form: ;  ; virtual void StackTrace ();  Print a stack trace. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual int Symlink (const char *from, const char *to);  Create a symbolic link from file1 to file2. ;  ; virtual void Syslog (ELogLevel level, const char *mess);  Send mess to syslog daemon. ;  ; virtual const char * TempDirectory () const;  Return a user configured or systemwide directory to create temporary files in. ;  ; virtual FILE * TempFileName (TString &base, const char *dir=nullptr, const char *suffix=nullptr);  Create a secure temporary file by appending a unique 6 letter string to base. ;  ; virtual int Umask (Int_t mask);  Set the process file creation mode mask. ;  ; virtual const char * UnixPathName (const char *unixpathname);  Convert from a local pathname to a Unix pathname. ;  ; virtual void Unload (const char *module);  Unload a shared library. ;  ; virtual void Unsetenv (const char *name);  Unset environment variable. ;  ; virtual int Utime (const char *file, Long_t modtime, Long_t actime);  Set the a files modification and access times. ;  ; virtual char * Which (const char *search, const char *file, EAccessMode mode=kFileExists);  Find location of file in a search path. ;  ; virtual const char * WorkingDirectory ();  Return working directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebSystem.html:18598,config,configured,18598,doc/master/classTWebSystem.html,https://root.cern,https://root.cern/doc/master/classTWebSystem.html,1,['config'],['configured']
Modifiability,"om mimimum; vector<double>fErrorserrors ; ROOT::Fit::FitResult::IModelFunction*fFitFunc! model function resulting from the fit. It is given by Fitter but it is managed by FitResult; vector<unsigned int>fFixedParamslist of fixed parameters; vector<double>fGlobalCCglobal Correlation coefficient; stringfMinimTypestring indicating type of minimizer; map<unsigned int,std::pair<double,double> >fMinosErrorsmap contains the two Minos errors; unsigned intfNCallsnumber of function calls; unsigned intfNFreenumber of fit free parameters (total parameters are in size of parameter vector) ; unsigned intfNdfnumber of degree of freedom; boolfNormalizedflag for indicating is errors are normalized; vector<std::string>fParNamesparameter names (only with FCN only fits, when fFitFunc=0); vector<double>fParamsparameter values. Size is total number of parameters; intfStatusminimizer status code; doublefValminimum function value; boolfValidflag for indicating valid fit. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FitResult(). Default constructor for an empty (non valid) fit result. FitResult(const FitConfig & fconfig). Constructor from a fit-config for a dummy fit; (e.g. when only one fcn evaluation is done). FitResult(ROOT::Math::Minimizer& min, const ROOT::Fit::FitConfig& fconfig, const ROOT::Fit::FitResult::IModelFunction* f, bool isValid, unsigned int sizeOfData = 0, bool binFit = true, const ROOT::Math::IMultiGenFunction* chi2func = 0, unsigned int ncalls = 0). Construct from a Minimizer instance after fitting; Run also Minos if requested from the configuration. FitResult(const FitResult &). Copy constructor. ~FitResult(). Destructor. bool Update(const ROOT::Math::Minimizer& min, bool isValid, unsigned int ncalls = 0). Update the fit result with a new minimization status; To be run only if same fit is performed with same configuration; Note that in this case MINOS is not re-run. If one wants to run also MINOS; a new result must be created.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Fit__FitResult.html:4665,Inherit,Inheritance,4665,root/html532/ROOT__Fit__FitResult.html,https://root.cern,https://root.cern/root/html532/ROOT__Fit__FitResult.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"om proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooBCPEffDecay.h>. Inheritance diagram for RooBCPEffDecay:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ DecayType. enum RooBCPEffDecay::DecayType. EnumeratorSingleSided ; DoubleSided ; Flipped . Definition at line 26 of file RooBCPEffDecay.h. Constructor & Destructor Documentation. ◆ RooBCPEffDecay() [1/3]. RooBCPEffDecay::RooBCPEffDecay ; (; ). inline . Definition at line 29 of file RooBCPEffDecay.h. ◆ RooBCPEffDecay() [2/3]. RooBCPEffDecay::RooBCPEffDecay ; (; const char * ; name, . const char * ; title, . RooRealVar & ; t, . RooAbsCategory & ; tag, . RooAbsReal & ; tau, . RooAbsReal & ; dm, . RooAbsReal & ; avgMistag, . RooAbsReal & ; CPeigenval, . RooAbsReal & ; absLambda, . RooAbsReal & ; argLambda, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBCPEffDecay.html:77182,inherit,inherited,77182,doc/master/classRooBCPEffDecay.html,https://root.cern,https://root.cern/doc/master/classRooBCPEffDecay.html,1,['inherit'],['inherited']
Modifiability,"om proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooBCPGenDecay.h>. Inheritance diagram for RooBCPGenDecay:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ DecayType. enum RooBCPGenDecay::DecayType. EnumeratorSingleSided ; DoubleSided ; Flipped . Definition at line 26 of file RooBCPGenDecay.h. Constructor & Destructor Documentation. ◆ RooBCPGenDecay() [1/3]. RooBCPGenDecay::RooBCPGenDecay ; (; ). inline . Definition at line 29 of file RooBCPGenDecay.h. ◆ RooBCPGenDecay() [2/3]. RooBCPGenDecay::RooBCPGenDecay ; (; const char * ; name, . const char * ; title, . RooRealVar & ; t, . RooAbsCategory & ; tag, . RooAbsReal & ; tau, . RooAbsReal & ; dm, . RooAbsReal & ; avgMistag, . RooAbsReal & ; avgC, . RooAbsReal & ; avgS, . RooAbsReal & ; delMistag, . RooAbsRea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBCPGenDecay.html:77056,inherit,inherited,77056,doc/master/classRooBCPGenDecay.html,https://root.cern,https://root.cern/doc/master/classRooBCPGenDecay.html,1,['inherit'],['inherited']
Modifiability,"om proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooBDecay.h>. Inheritance diagram for RooBDecay:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ DecayType. enum RooBDecay::DecayType. EnumeratorSingleSided ; DoubleSided ; Flipped . Definition at line 29 of file RooBDecay.h. Constructor & Destructor Documentation. ◆ RooBDecay() [1/3]. RooBDecay::RooBDecay ; (; ). inline . Definition at line 32 of file RooBDecay.h. ◆ RooBDecay() [2/3]. RooBDecay::RooBDecay ; (; const char * ; name, . const char * ; title, . RooRealVar & ; t, . RooAbsReal & ; tau, . RooAbsReal & ; dgamma, . RooAbsReal & ; f0, . RooAbsReal & ; f1, . RooAbsReal & ; f2, . RooAbsReal & ; f3, . RooAbsReal & ; dm, . const RooResolutionModel & ; model, . DecayType ; type . ). Constructor for RooBDec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBDecay.html:77066,inherit,inherited,77066,doc/master/classRooBDecay.html,https://root.cern,https://root.cern/doc/master/classRooBDecay.html,1,['inherit'],['inherited']
Modifiability,"om proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooBMixDecay.h>. Inheritance diagram for RooBMixDecay:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ DecayType. enum RooBMixDecay::DecayType. EnumeratorSingleSided ; DoubleSided ; Flipped . Definition at line 26 of file RooBMixDecay.h. Constructor & Destructor Documentation. ◆ RooBMixDecay() [1/3]. RooBMixDecay::RooBMixDecay ; (; ). inline . Definition at line 29 of file RooBMixDecay.h. ◆ RooBMixDecay() [2/3]. RooBMixDecay::RooBMixDecay ; (; const char * ; name, . const char * ; title, . RooRealVar & ; t, . RooAbsCategory & ; mixState, . RooAbsCategory & ; tagFlav, . RooAbsReal & ; tau, . RooAbsReal & ; dm, . RooAbsReal & ; mistag, . RooAbsReal & ; delMistag, . const RooResolutionModel & ; model, . DecayTy",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBMixDecay.html:77160,inherit,inherited,77160,doc/master/classRooBMixDecay.html,https://root.cern,https://root.cern/doc/master/classRooBMixDecay.html,1,['inherit'],['inherited']
Modifiability,"om proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooDecay.h>. Inheritance diagram for RooDecay:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ DecayType. enum RooDecay::DecayType. EnumeratorSingleSided ; DoubleSided ; Flipped . Definition at line 25 of file RooDecay.h. Constructor & Destructor Documentation. ◆ RooDecay() [1/3]. RooDecay::RooDecay ; (; ). inline . Definition at line 28 of file RooDecay.h. ◆ RooDecay() [2/3]. RooDecay::RooDecay ; (; const char * ; name, . const char * ; title, . RooRealVar & ; t, . RooAbsReal & ; tau, . const RooResolutionModel & ; model, . DecayType ; type . ). Create a new RooDecay. ; Parameters. [in]nameName of this object. ; [in]titleTitle (for e.g. plotting) ; [in]tConvolution variable (e.g. time). ; [in]tauDecay const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDecay.html:77505,inherit,inherited,77505,doc/master/classRooDecay.html,https://root.cern,https://root.cern/doc/master/classRooDecay.html,1,['inherit'],['inherited']
Modifiability,"om proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooExtendPdf.h>. Inheritance diagram for RooExtendPdf:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooExtendPdf() [1/4]. RooExtendPdf::RooExtendPdf ; (; ). default . ◆ RooExtendPdf() [2/4]. RooExtendPdf::RooExtendPdf ; (; const char * ; name, . const char * ; title, . RooAbsPdf & ; pdf, . RooAbsReal & ; norm, . const char * ; rangeName = nullptr . ). Definition at line 56 of file RooExtendPdf.cxx. ◆ RooExtendPdf() [3/4]. RooExtendPdf::RooExtendPdf ; (; const char * ; name, . const char * ; title, . RooAbsPdf & ; pdf, . RooAbsReal::Ref ; norm, . const char * ; rangeName = nullptr . ). Constructor. ; The ExtendPdf behaves identical to the supplied input pdf, but adds an extended likelihood term. expe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooExtendPdf.html:73797,inherit,inherited,73797,doc/master/classRooExtendPdf.html,https://root.cern,https://root.cern/doc/master/classRooExtendPdf.html,1,['inherit'],['inherited']
Modifiability,"om proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooExtendedTerm.h>. Inheritance diagram for RooExtendedTerm:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooExtendedTerm() [1/3]. RooExtendedTerm::RooExtendedTerm ; (; ). default . ◆ RooExtendedTerm() [2/3]. RooExtendedTerm::RooExtendedTerm ; (; const char * ; name, . const char * ; title, . const RooAbsReal & ; n . ). Constructor. ; An ExtendedTerm has no observables, it only introduces an extended ML term with the given number of expected events when an extended ML is constructed from this p.d.f. ; Definition at line 38 of file RooExtendedTerm.cxx. ◆ RooExtendedTerm() [3/3]. RooExtendedTerm::RooExtendedTerm ; (; const RooExtendedTerm & ; other, . const char * ; name = nullptr . ). Copy constructo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooExtendedTerm.html:73006,inherit,inherited,73006,doc/master/classRooExtendedTerm.html,https://root.cern,https://root.cern/doc/master/classRooExtendedTerm.html,1,['inherit'],['inherited']
Modifiability,"om proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooNonCPEigenDecay.h>. Inheritance diagram for RooNonCPEigenDecay:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ DecayType. enum RooNonCPEigenDecay::DecayType. EnumeratorSingleSided ; DoubleSided ; Flipped . Definition at line 37 of file RooNonCPEigenDecay.h. Constructor & Destructor Documentation. ◆ RooNonCPEigenDecay() [1/4]. RooNonCPEigenDecay::RooNonCPEigenDecay ; (; void ; ). inline . Definition at line 40 of file RooNonCPEigenDecay.h. ◆ RooNonCPEigenDecay() [2/4]. RooNonCPEigenDecay::RooNonCPEigenDecay ; (; const char * ; name, . const char * ; title, . RooRealVar & ; t, . RooAbsCategory & ; tag, . RooAbsReal & ; tau, . RooAbsReal & ; dm, . RooAbsReal & ; avgW, . RooAbsReal & ; delW, . RooAbsCategory",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNonCPEigenDecay.html:78169,inherit,inherited,78169,doc/master/classRooNonCPEigenDecay.html,https://root.cern,https://root.cern/doc/master/classRooNonCPEigenDecay.html,1,['inherit'],['inherited']
Modifiability,"om text file. void AddBackgroundTree(TTree* background, Double_t weight, const TString& treetype). void SetSignalTree(TTree* signal, Double_t weight = 1.0). void SetBackgroundTree(TTree* background, Double_t weight = 1.0). void SetTree(TTree* tree, const TString& className, Double_t weight); set background tree. void SetInputTrees(TTree* signal, TTree* background, Double_t signalWeight = 1.0, Double_t backgroundWeight = 1.0); define the input trees for signal and background; no cuts are applied. void SetInputTrees(const TString& signalFileName, const TString& backgroundFileName, Double_t signalWeight = 1.0, Double_t backgroundWeight = 1.0). void SetInputTrees(TTree* inputTree, const TCut& SigCut, const TCut& BgCut); define the input trees for signal and background from single input tree,; containing both signal and background events distinguished by the type; identifiers: SigCut and BgCut. void AddVariable(const TString& expression, const TString& title, const TString& unit, char type = 'F', Double_t min = 0, Double_t max = 0); user inserts discriminating variable in data set info. void AddVariable(const TString& expression, char type = 'F', Double_t min = 0, Double_t max = 0); user inserts discriminating variable in data set info. void AddTarget(const TString& expression, const TString& title = """", const TString& unit = """", Double_t min = 0, Double_t max = 0); user inserts target in data set info. void AddSpectator(const TString& expression, const TString& title = """", const TString& unit = """", Double_t min = 0, Double_t max = 0); user inserts target in data set info. TMVA::DataSetInfo& DefaultDataSetInfo(); default creation. void SetInputVariables(vector<TString>* theVariables); fill input variables in data set. void SetSignalWeightExpression(const TString& variable). void SetBackgroundWeightExpression(const TString& variable). void SetWeightExpression(const TString& variable, const TString& className = """"); Log() << kWarning << DefaultDataSetInfo().GetNClasses() /",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__Factory.html:16666,variab,variable,16666,root/html528/TMVA__Factory.html,https://root.cern,https://root.cern/root/html528/TMVA__Factory.html,6,['variab'],['variable']
Modifiability,"om the pad or pads where it was drawn.; If an histogram is drawn in a pad, then filled again, the new status; of the histogram will be automatically shown in the pad next time; the pad is updated. One does not need to redraw the histogram.; To draw the current version of an histogram in a pad, one can use. h->DrawCopy();. This makes a clone (see Clone below) of the histogram. Once the clone; is drawn, the original histogram may be modified or deleted without; affecting the aspect of the clone. One can use TH1::SetMaximum() and TH1::SetMinimum() to force a particular; value for the maximum or the minimum scale on the plot. (For 1-D; histograms this means the y-axis, while for 2-D histograms these; functions affect the z-axis). TH1::UseCurrentStyle() can be used to change all histogram graphics; attributes to correspond to the current selected style.; This function must be called for each histogram.; In case one reads and draws many histograms from a file, one can force; the histograms to inherit automatically the current graphics style; by calling before gROOT->ForceStyle().; Setting Drawing histogram contour levels (2-D hists only); By default contours are automatically generated at equidistant; intervals. A default value of 20 levels is used. This can be modified; via TH1::SetContour() or TH1::SetContourLevel().; the contours level info is used by the drawing options ""cont"", ""surf"",; and ""lego"".; Setting histogram graphics attributes; The histogram classes inherit from the attribute classes:; TAttLine, TAttFill, TAttMarker and TAttText.; See the member functions of these classes for the list of options.; Giving titles to the X, Y and Z axis. h->GetXaxis()->SetTitle(""X axis title"");; h->GetYaxis()->SetTitle(""Y axis title"");. The histogram title and the axis titles can be any TLatex string.; The titles are part of the persistent histogram.; It is also possible to specify the histogram title and the axis; titles at creation time. These titles can be given in the ""titl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TH1.html:14734,inherit,inherit,14734,root/html528/TH1.html,https://root.cern,https://root.cern/root/html528/TH1.html,2,['inherit'],['inherit']
Modifiability,"om the pad or pads where it was drawn.; If an histogram is drawn in a pad, then filled again, the new status; of the histogram will be automatically shown in the pad next time; the pad is updated. One does not need to redraw the histogram.; To draw the current version of an histogram in a pad, one can use. h->DrawCopy();. This makes a clone (see Clone below) of the histogram. Once the clone; is drawn, the original histogram may be modified or deleted without; affecting the aspect of the clone. One can use TH1::SetMaximum() and TH1::SetMinimum() to force a particular; value for the maximum or the minimum scale on the plot. (For 1-D; histograms this means the y-axis, while for 2-D histograms these; functions affect the z-axis). TH1::UseCurrentStyle() can be used to change all histogram graphics; attributes to correspond to the current selected style.; This function must be called for each histogram.; In case one reads and draws many histograms from a file, one can force; the histograms to inherit automatically the current graphics style; by calling before gROOT->ForceStyle().; Setting Drawing histogram contour levels (2-D hists only); By default contours are automatically generated at equidistant; intervals. A default value of 20 levels is used. This can be modified; via TH1::SetContour() or TH1::SetContourLevel().; the contours level info is used by the drawing options ""cont"", ""surf"",; and ""lego"".; Setting histogram graphics attributes; The histogram classes inherit from the attribute classes:; TAttLine, TAttFill, and TAttMarker.; See the member functions of these classes for the list of options.; Giving titles to the X, Y and Z axis. h->GetXaxis()->SetTitle(""X axis title"");; h->GetYaxis()->SetTitle(""Y axis title"");. The histogram title and the axis titles can be any TLatex string.; The titles are part of the persistent histogram.; It is also possible to specify the histogram title and the axis; titles at creation time. These titles can be given in the ""title""; param",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH1.html:14733,inherit,inherit,14733,root/html532/TH1.html,https://root.cern,https://root.cern/root/html532/TH1.html,8,['inherit'],['inherit']
Modifiability,"om tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; RooListProxy_list; TIterator*_listIter! do not persist; static Int_tRooPrintable::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooRecursiveFraction.html:32927,config,configuration,32927,root/html532/RooRecursiveFraction.html,https://root.cern,https://root.cern/root/html532/RooRecursiveFraction.html,2,['config'],['configuration']
Modifiability,"om tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FlexibleInterpVar(); Default constructor. FlexibleInterpVar(const char* name, const char* title, const RooArgList& _paramList, Double_t nominal, const RooArgList& low, const RooArgList& high). FlexibleInterpVar(const char* name, const char* title, const RooArgList& _paramList, double nominal, vector<double> low, vector<double> high). FlexibleInterpVar(const char* name, const char* title, const RooArgList& _paramList, double nominal, vector<double> low, vector<double> high, vector<int> code). FlexibleInterpVar(const char* name, const char* title); Constructor of flat polynomial function. FlexibleInterpVar(const RooStats::HistFactory::FlexibleInterpVar& , const char* ); Copy constructor. ~FlexibleInterpVar(); Destructor. void setInterpCode(RooAbsReal& param, int code). void setAllInterpCodes(int code). void setNominal(Double_t newNominal). void setLow(RooAbsReal& param, Double_t newLow). void setHigh(RooAbsReal& param, Double_t newHigh).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__HistFactory__FlexibleInterpVar.html:36847,Inherit,Inheritance,36847,root/html534/RooStats__HistFactory__FlexibleInterpVar.html,https://root.cern,https://root.cern/root/html534/RooStats__HistFactory__FlexibleInterpVar.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"om tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FlexibleInterpVar(); Default constructor. FlexibleInterpVar(const char* name, const char* title, const RooArgList& _paramList, double nominal, vector<double> low, vector<double> high). FlexibleInterpVar(const char* name, const char* title, const RooArgList& _paramList, double nominal, vector<double> low, vector<double> high, vector<int> code). FlexibleInterpVar(const char* name, const char* title); Constructor of flat polynomial function. FlexibleInterpVar(const RooStats::HistFactory::FlexibleInterpVar& , const char* ); Copy constructor. ~FlexibleInterpVar(); Destructor. void setInterpCode(RooAbsReal& param, int code). void setAllInterpCodes(int code). void printAllInterpCodes(). Double_t evaluate() const; Calculate and return value of polynomial. TObject* clone(const char* newname) const; { return new FlexibleInterpVar(*this, newname); }. » Author: Kyle Cranmer, Akira Shibata » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__HistFactory__FlexibleInterpVar.html:34060,Inherit,Inheritance,34060,root/html532/RooStats__HistFactory__FlexibleInterpVar.html,https://root.cern,https://root.cern/root/html532/RooStats__HistFactory__FlexibleInterpVar.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"om tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ParamHistFunc(). ParamHistFunc(const char* name, const char* title, const RooArgList& vars, const RooArgList& paramSet). ParamHistFunc(const char* name, const char* title, const RooArgList& vars, const RooArgList& paramSet, const TH1* hist); _dataVar(""!dataVar"",""data Var"", this, (RooRealVar&) var),. Int_t GetNumBins(const RooArgSet& vars). ParamHistFunc(const ParamHistFunc& other, const char* name = 0). ~ParamHistFunc(). Int_t getCurrentBin() const. RooRealVar& getParameter(Int_t masterIdx) const. RooRealVar& getParameter() const. void setParamConst(Int_t , Bool_t = kTRUE). void setConstant(bool constant). void setShape(TH1* shape). RooArgList createParamSet(RooWorkspace& w, const string& , const RooArgList& Vars); Create the list of RooRealVar; parameters which represent the; height of the histogram bins.; The list 'vars' represents the; observables (corresponding to histogram bins); that these newly created parameters will; be mapped",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ParamHistFunc.html:36525,Inherit,Inheritance,36525,root/html534/ParamHistFunc.html,https://root.cern,https://root.cern/root/html534/ParamHistFunc.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"om tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; PiecewiseInterpolation(). PiecewiseInterpolation(const char* name, const char* title, const RooAbsReal& nominal, const RooArgList& lowSet, const RooArgList& highSet, const RooArgList& paramSet, Bool_t takeOwnerShip = kFALSE); Constructor with two set of RooAbsReals. The value of the function will be. A = sum_i lowSet(i)*highSet(i). If takeOwnership is true the PiecewiseInterpolation object will take ownership of the arguments in sumSet. PiecewiseInterpolation(const PiecewiseInterpolation& other, const char* name = 0); Copy constructor. ~PiecewiseInterpolation(); Destructor. Double_t evaluate() const; Calculate and return current value of self. Bool_t setBinIntegrator(RooArgSet& allVars). Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Advertise that all integrals can be handled internally. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/PiecewiseInterpolation.html:36266,Inherit,Inheritance,36266,root/html534/PiecewiseInterpolation.html,https://root.cern,https://root.cern/root/html534/PiecewiseInterpolation.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"om tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooChangeTracker(); Default constructor. RooChangeTracker(const char* name, const char* title, const RooArgSet& trackSet, Bool_t checkValues = kFALSE); Constructor. The set trackSet contains the observables to be; tracked for changes. If checkValues is true an additional; validation step is activated where the numeric values of the; tracked arguments are compared with reference values ensuring; that values have actually changed. RooChangeTracker(const RooChangeTracker& other, const char* name = 0); Copy constructor. Bool_t hasChanged(Bool_t clearState); Returns true if state has changes since last call with clearState=kTRUE; If clearState is true, changeState flag will be cleared. ~RooChangeTracker(); Destructor. RooArgSet parameters() const. TObject* clone(const char* newname) const; { return new RooChangeTracker(*this, newname); }. Double_t evaluate() const; { return 1 ; }. » Last changed: Tue Mar 10 17:15:55 2015 » Last generated: 2",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooChangeTracker.html:36418,Inherit,Inheritance,36418,root/html534/RooChangeTracker.html,https://root.cern,https://root.cern/root/html534/RooChangeTracker.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"om tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooErrorVar(const char* name, const char* title, const RooRealVar& input); Construct an lvalue variable representing the error of RooRealVar input. RooErrorVar(const RooErrorVar& other, const char* name = 0). ~RooErrorVar(); Destructor. Double_t getValV(const RooArgSet* set = 0) const; Return value, i.e. error on input variable. Bool_t hasBinning(const char* name) const; Return true if we have binning with given name. const RooAbsBinning& getBinning(const char* name = 0, Bool_t verbose = kTRUE, Bool_t createOnTheFly = kFALSE) const; Return binning with given name. If no binning exists with such a name, clone the default; binning on the fly if so requested. RooAbsBinning& getBinning(const char* name = 0, Bool_t verbose = kTRUE, Bool_t createOnTheFly = kFALSE); Return binning with given name. If no binning exists with such a name, clone the default; binning on the fly if so requested. std::list<std::string> getBinningNames() const; Get a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooErrorVar.html:40553,Inherit,Inheritance,40553,root/html534/RooErrorVar.html,https://root.cern,https://root.cern/root/html534/RooErrorVar.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"om tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooErrorVar(const char* name, const char* title, const RooRealVar& input); Construct an lvalue variable representing the error of RooRealVar input. RooErrorVar(const RooErrorVar& other, const char* name = 0). ~RooErrorVar(); Destructor. Double_t getValV(const RooArgSet* set = 0) const; Return value, i.e. error on input variable. Bool_t hasBinning(const char* name) const; Return true if we have binning with given name. const RooAbsBinning& getBinning(const char* name = 0, Bool_t verbose = kTRUE, Bool_t createOnTheFly = kFALSE) const; Return binning with given name. If no binning exists with such a name, clone the default; binning on the fly if so requested. RooAbsBinning& getBinning(const char* name = 0, Bool_t verbose = kTRUE, Bool_t createOnTheFly = kFALSE); Return binning with given name. If no binning exists with such a name, clone the default; binning on the fly if so requested. void setBinning(const RooAbsBinning& binning, const c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooErrorVar.html:38662,Inherit,Inheritance,38662,root/html532/RooErrorVar.html,https://root.cern,https://root.cern/root/html532/RooErrorVar.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"om tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooFormulaVar(const char* name, const char* title, const char* formula, const RooArgList& dependents); Constructor with formula expression and list of input variables. RooFormulaVar(const char* name, const char* title, const RooArgList& dependents); Constructor with formula expression, title and list of input variables. RooFormulaVar(const RooFormulaVar& other, const char* name = 0); Copy constructor. ~RooFormulaVar(); Destructor. RooFormula& formula() const; Return reference to internal RooFormula object. Double_t evaluate() const; Calculate current value of object from internal formula. Bool_t isValidReal(Double_t value, Bool_t printError) const; Check if given value is valid. Bool_t redirectServersHook(const RooAbsCollection& newServerList, Bool_t mustReplaceAll, Bool_t nameChange, Bool_t isRecursive); Propagate server change information to embedded RooFormula object. void printMultiline(ostream& os, Int_t contents, Bool_t verbose =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooFormulaVar.html:34520,Inherit,Inheritance,34520,root/html532/RooFormulaVar.html,https://root.cern,https://root.cern/root/html532/RooFormulaVar.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"om tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooGenProdProj(); Default constructor. RooGenProdProj(const char* name, const char* title, const RooArgSet& _prodSet, const RooArgSet& _intSet, const RooArgSet& _normSet, const char* isetRangeName, const char* normRangeName = 0, Bool_t doFactorize = kTRUE); Constructor for a normalization projection of the product of p.d.f.s _prodSet; integrated over _intSet in range isetRangeName while normalized over _normSet. RooGenProdProj(const RooGenProdProj& other, const char* name = 0); Copy constructor. ~RooGenProdProj(); Destructor. RooAbsReal* makeIntegral(const char* name, const RooArgSet& compSet, const RooArgSet& intSet, RooArgSet& saveSet, const char* isetRangeName, Bool_t doFactorize); Utility function to create integral over observables intSet in range isetRangeName over product of p.d.fs in compSet.; The integration is factorized into components as much as possible and done analytically as far as possible.; All component object needed",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooGenProdProj.html:34265,Inherit,Inheritance,34265,root/html532/RooGenProdProj.html,https://root.cern,https://root.cern/root/html532/RooGenProdProj.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"om tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooLegendre(). RooLegendre(const char* name, const char* title, RooAbsReal& ctheta, int l, int m = 0); TODO: for now, we assume that ctheta has a range [-1,1]; should map the ctheta range onto this interval, and adjust integrals... RooLegendre(const char* name, const char* title, RooAbsReal& ctheta, int l1, int m1, int l2, int m2). RooLegendre(const RooLegendre& other, const char* name = 0). Double_t evaluate() const; TODO: check that 0<=m_i<=l_i; on the other hand, assoc_legendre already does that ;-); Note: P_0^0 = 1, so P_l^m = P_l^m P_0^0. Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; don't support indefinite integrals... Double_t analyticalIntegral(Int_t code, const char* rangeName = 0) const; this was verified to match mathematica for; l1 in [0,2], m1 in [0,l1], l2 in [l1,4], m2 in [0,l2]. Int_t getMaxVal(const RooArgSet& vars) const. Double_t maxVal(Int_t code) const. TObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooLegendre.html:33320,Inherit,Inheritance,33320,root/html532/RooLegendre.html,https://root.cern,https://root.cern/root/html532/RooLegendre.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"om tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooProduct(); Default constructor. ~RooProduct(); Destructor. RooProduct(const char* name, const char* title, const RooArgList& _prodSet); Construct function representing the product of functions in prodSet. RooProduct(const RooProduct& other, const char* name = 0); Copy constructor. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; Force internal handling of integration of given observable if any; of the product terms depend on it. Int_t getPartIntList(const RooArgSet* iset, const char* rangeName = 0) const; Return list of (partial) integrals whose product defines the integral of this; RooProduct over the observables in iset in range isetRange. If no such list; exists, create it now and store it in the cache for future use. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Declare that we handle all integrations internally. Double_t analyticalIntegra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooProduct.html:35849,Inherit,Inheritance,35849,root/html534/RooProduct.html,https://root.cern,https://root.cern/root/html534/RooProduct.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"om tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooProduct(); Default constructor. ~RooProduct(); Destructor. RooProduct(const char* name, const char* title, const RooArgSet& _prodSet); Construct function representing the product of functions in prodSet. RooProduct(const RooProduct& other, const char* name = 0); Copy constructor. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; Force internal handling of integration of given observable if any; of the product terms depend on it. Int_t getPartIntList(const RooArgSet* iset, const char* rangeName = 0) const; Return list of (partial) integrals whose product defines the integral of this; RooProduct over the observables in iset in range isetRange. If no such list; exists, create it now and store it in the cache for future use. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Declare that we handle all integrations internally. Double_t analyticalIntegral",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooProduct.html:34018,Inherit,Inheritance,34018,root/html532/RooProduct.html,https://root.cern,https://root.cern/root/html532/RooProduct.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"om tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~RooAbsRealLValue(); Destructor. Bool_t inRange(Double_t value, const char* rangeName, Double_t* clippedValue = 0) const; Return kTRUE if the input value is within our fit range. Otherwise, return; kFALSE and write a clipped value into clippedValPtr if it is non-zero. Bool_t isValidReal(Double_t value, Bool_t printError = kFALSE) const; Check if given value is valid. Bool_t readFromStream(istream& is, Bool_t compact, Bool_t verbose = kFALSE); Read object contents from given stream. void writeToStream(ostream& os, Bool_t compact) const; Write object contents to given stream. RooAbsArg& operator=(Double_t newValue); Assignment operator from a Double_t. RooAbsArg& operator=(const RooAbsReal& other); Assignment operator from other RooAbsReal. RooPlot* frame(const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsRealLValue.html:39468,Inherit,Inheritance,39468,root/html534/RooAbsRealLValue.html,https://root.cern,https://root.cern/root/html534/RooAbsRealLValue.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"omEngine::GaussianZig(double sigma) const; ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(); ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(ROOT::Math::GSLRngWrapper* rng); ROOT::Math::GSLRandomEngineROOT::Math::GSLRandomEngine::GSLRandomEngine(const ROOT::Math::GSLRandomEngine&); ROOT::Math::GSLRngRanLuxGSLRngRanLux(); ROOT::Math::GSLRngRanLuxGSLRngRanLux(const ROOT::Math::GSLRngRanLux&); voidROOT::Math::GSLRandomEngine::Initialize(); doubleROOT::Math::GSLRandomEngine::Landau() const; doubleROOT::Math::GSLRandomEngine::LogNormal(double zeta, double sigma) const; vector<unsigned int>ROOT::Math::GSLRandomEngine::Multinomial(unsigned int ntot, const vector<double>& p) const; stringROOT::Math::GSLRandomEngine::Name() const; unsigned intROOT::Math::GSLRandomEngine::NegativeBinomial(double p, double n) const; doubleROOT::Math::GSLRandomEngine::operator()() const; ROOT::Math::GSLRngRanLux&operator=(const ROOT::Math::GSLRngRanLux&); unsigned intROOT::Math::GSLRandomEngine::Poisson(double mu) const; voidROOT::Math::GSLRandomEngine::RandomArray(double* begin, double* end) const; unsigned intROOT::Math::GSLRandomEngine::RndmInt(unsigned int max) const; voidROOT::Math::GSLRandomEngine::SetSeed(unsigned int seed) const; unsigned intROOT::Math::GSLRandomEngine::Size() const; doubleROOT::Math::GSLRandomEngine::tDist(double nu) const; voidROOT::Math::GSLRandomEngine::Terminate(). protected:. voidROOT::Math::GSLRandomEngine::SetType(ROOT::Math::GSLRngWrapper* r). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GSLRngRanLux(). » Author: L. Moneta, A. Zsenei 08/2005 » Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/mathmore:$Id: GSLRndmEngines.h 37441 2010-12-09 16:27:54Z moneta $ » Last generated: 2011-11-03 20:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__GSLRngRanLux.html:3454,Inherit,Inheritance,3454,root/html532/ROOT__Math__GSLRngRanLux.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__GSLRngRanLux.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"omRun()) {; 727 gSystem->ExitLoop();; 728 } else {; 729 delete gTabCom;; 730 gTabCom = nullptr;; 731 ; 732 //Execute logoff macro; 733 const char *logoff;; 734 logoff = gEnv->GetValue(""Rint.Logoff"", (char*)nullptr);; 735 if (logoff && !NoLogOpt()) {; 736 char *mac = gSystem->Which(TROOT::GetMacroPath(), logoff, kReadPermission);; 737 if (mac); 738 ProcessFile(logoff);; 739 delete [] mac;; 740 }; 741 ; 742 TApplication::Terminate(status);; 743 }; 744}; 745 ; 746////////////////////////////////////////////////////////////////////////////////; 747/// Set console mode:; 748///; 749/// mode = kTRUE - echo input symbols; 750/// mode = kFALSE - noecho input symbols; 751 ; 752void TRint::SetEchoMode(Bool_t mode); 753{; 754 Gl_config(""noecho"", mode ? 0 : 1);; 755}; 756 ; 757////////////////////////////////////////////////////////////////////////////////; 758/// Process the content of a line starting with "".R"" (already stripped-off); 759/// The format is; 760/// [user@]host[:dir] [-l user] [-d dbg] [script]; 761/// The variable 'dir' is the remote directory to be used as working dir.; 762/// The username can be specified in two ways, ""-l"" having the priority; 763/// (as in ssh).; 764/// A 'dbg' value > 0 gives increasing verbosity.; 765/// The last argument 'script' allows to specify an alternative script to; 766/// be executed remotely to startup the session.; 767 ; 768Longptr_t TRint::ProcessRemote(const char *line, Int_t *); 769{; 770 Longptr_t ret = TApplication::ProcessRemote(line);; 771 ; 772 if (ret == 1) {; 773 if (fAppRemote) {; 774 TString prompt; prompt.Form(""%s:root [%%d] "", fAppRemote->ApplicationName());; 775 SetPrompt(prompt);; 776 } else {; 777 SetPrompt(""root [%d] "");; 778 }; 779 }; 780 ; 781 return ret;; 782}; 783 ; 784 ; 785////////////////////////////////////////////////////////////////////////////////; 786/// Calls TRint::ProcessLine() possibly prepending a `#line` directive for; 787/// better diagnostics.; 788/// The user is responsible for incrementing `",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRint_8cxx_source.html:25928,variab,variable,25928,doc/master/TRint_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TRint_8cxx_source.html,1,['variab'],['variable']
Modifiability,"omStream(istream& istr); read the weights (BDT coefficients). Double_t GetMvaValue(Double_t* err = 0, Double_t* errUpper = 0). Double_t GetMvaValue(Double_t* err, Double_t* errUpper, UInt_t useNTrees); Return the MVA value (range [-1;1]) that classifies the; event according to the majority vote from the total number of; decision trees. Double_t PrivateGetMvaValue(const TMVA::Event* ev, Double_t* err = 0, Double_t* errUpper = 0, UInt_t useNTrees = 0); Return the MVA value (range [-1;1]) that classifies the; event according to the majority vote from the total number of; decision trees. const std::vector<Float_t>& GetMulticlassValues(); get the multiclass MVA response for the BDT classifier. const std::vector<Float_t> & GetRegressionValues(); get the regression value generated by the BDTs. void WriteMonitoringHistosToFile( void ); Here we could write some histograms created during the processing; to the output file. vector< Double_t > GetVariableImportance(); Return the relative variable importance, normalized to all; variables together having the importance 1. The importance in; evaluated as the total separation-gain that this variable had in; the decision trees (weighted by the number of events). Double_t GetVariableImportance(UInt_t ivar); Returns the measure for the variable importance of variable ""ivar""; which is later used in GetVariableImportance() to calculate the; relative variable importances. const TMVA::Ranking* CreateRanking(); Compute ranking of input variables. void GetHelpMessage() const; Get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". void MakeClassSpecific(ostream& , const TString& ) const; make ROOT-independent C++ class for classifier response (classifier-specific implementation). void MakeClassSpecificHeader(ostream& , const TString& ) const; specific class header. void MakeClassInstantiateNode(TMVA::DecisionTreeNode* n, ostream& fout, const TString& className) const; recursiv",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodBDT.html:34594,variab,variable,34594,root/html534/TMVA__MethodBDT.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodBDT.html,12,['variab'],"['variable', 'variables']"
Modifiability,"omXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& istr); virtual voidReadWeightsFromStream(TFile& rf); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EAnalysisType type); voidTMVA::MethodBase::SetBaseDir(TDirectory* methodDir); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTMVA::MethodBase::SetCurrentEvent(Long64_t ievt) const; virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::MethodBase::SetMethodBaseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodKNN.html:10409,Config,Configurable,10409,root/html532/TMVA__MethodKNN.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodKNN.html,1,['Config'],['Configurable']
Modifiability,"omXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& istr); virtual voidReadWeightsFromStream(TFile& rf); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EAnalysisType type); voidTMVA::MethodBase::SetBaseDir(TDirectory* methodDir); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::MethodBase::SetMethodBaseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInsp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodKNN.html:10497,Config,Configurable,10497,root/html534/TMVA__MethodKNN.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodKNN.html,3,['Config'],['Configurable']
Modifiability,"om_t Atom_t Time_t UChar_t lenDefinition TGWin32VirtualXProxy.cxx:249; funcsOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void funcsDefinition TGWin32VirtualXProxy.cxx:142; fsOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize fsDefinition TGWin32VirtualXProxy.cxx:102; namechar name[80]Definition TGX11.cxx:110; TGeoBBox.h; TGeoBoolNode.h; TGeoCompositeShape.h; TGeoCone.h; TGeoEltu.h; TGeoHype.h; TGeoManager.h; gGeoManagerR__EXTERN TGeoManager * gGeoManagerDefinition TGeoManager.h:608; TGeoMaterial.h; TGeoMatrix.h; TGeoMedium.h; TGeoNode.h; TGeoParaboloid.h; TGeoPcon.h; TGeoPgon.h; TGeoScaledShape.h; TGeoSphere.h; TGeoTessellated.h; TGeoTorus.h; TGeoTube.h; TGeoVolume.h; TGeoXtru.h; TMath.h; TROOT.h; gROOT#define gROOTDefinition TROOT.h:406; TRegexp.h; ROOT::Experimental::RLogChannelA log configuration for a channel, e.g.Definition RLogger.hxx:101; ROOT::RBrowserReplyReply on browser request.Definition RBrowserReply.hxx:27; ROOT::RBrowserReply::pathstd::vector< std::string > pathreply pathDefinition RBrowserReply.hxx:29; ROOT::RBrowserReply::nodesstd::vector< const Browsable::RItem * > nodeslist of pointers, no ownership!Definition RBrowserReply.hxx:32; ROOT::RBrowserReply::firstint firstfirst node in returned listDefinition RBrowserReply.hxx:31; ROOT::RBrowserReply::nchildsint nchildstotal number of childs in the nodeDefinition RBrowserReply.hxx:30; ROOT::RGeomBrowserIterIterator of hierarchical geometry structures.Definition RGeomData.cxx:60; ROOT::RGeomBrowserIter::Enterbool Enter()Definition RGeomData.cxx:89; ROOT::RGeomBrowserIter::Leavebool Leave()Definition RGeomData.cxx:111; ROOT::RGeomBrowserIter::RGeomBrowserIterRGeomBrowserIter(RGeomDescription &desc)Definition RGeomData.cxx:71; ROOT::RGeomBrowserIter::fNodeIdint fNodeIdDefinition RGeomData.cxx:65; ROOT::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RGeomData_8cxx_source.html:69370,config,configuration,69370,doc/master/RGeomData_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RGeomData_8cxx_source.html,2,['config'],['configuration']
Modifiability,"omates generating data from a given PDF,; fitting the PDF to that data and accumulating the fit statistics. The constructor accepts the following arguments. model -- The PDF to be studied; observables -- The variables of the PDF to be considered the observables. Silence() -- Suppress all RooFit messages during running below PROGRESS level; FitModel(const RooAbsPdf&) -- The PDF for fitting, if it is different from the PDF for generating; ConditionalObservables; (const RooArgSet& set) -- The set of observables that the PDF should _not_ be normalized over; Binned(Bool_t flag) -- Bin the dataset before fitting it. Speeds up fitting of large data samples; FitOptions(const char*) -- Classic fit options, provided for backward compatibility; FitOptions(....) -- Options to be used for fitting. All named arguments inside FitOptions(); are passed to RooAbsPdf::fitTo();; Verbose(Bool_t flag) -- Activate informational messages in event generation phase; Extended(Bool_t flag) -- Determine number of events for each sample anew from a Poisson distribution; Constrain(const RooArgSet& pars) -- Apply internal constraints on given parameters in fit and sample constrained parameter; values from constraint p.d.f for each toy.; ExternalConstraints(const RooArgSet& ) -- Apply internal constraints on given parameters in fit and sample constrained parameter; values from constraint p.d.f for each toy.; ProtoData(const RooDataSet&,; Bool_t randOrder) -- Prototype data for the event generation. If the randOrder flag is; set, the order of the dataset will be re-randomized for each generation; cycle to protect against systematic biases if the number of generated; events does not exactly match the number of events in the prototype dataset; at the cost of reduced precision; with mu equal to the specified number of events. RooMCStudy(const RooAbsPdf& genModel, const RooAbsPdf& fitModel, const RooArgSet& dependents, const char* genOptions = """", const char* fitOptions = """", const RooDataSet* genProtoDa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooMCStudy.html:13677,Extend,Extended,13677,root/html532/RooMCStudy.html,https://root.cern,https://root.cern/root/html532/RooMCStudy.html,4,['Extend'],['Extended']
Modifiability,"ombie ();  . Protected Attributes; Double_t fDx1;  ; Double_t fDx2;  ; Double_t fDy;  ; Double_t fDz;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg = (1ULL << ( 3 )); , kGeoVisX = (1ULL << ( 4 )); , kGeoVisY = (1ULL << ( 5 )); , ;   kGeoVisZ = (1ULL << ( 6 )); , kGeoRunTimeShape = (1ULL << ( 7 )); , kGeoInvalidShape = (1ULL << ( 8 )); , kGeoTorus = (1ULL << ( 9 )); , ;   kGeoBox = (1ULL << ( 10 )); , kGeoPara = (1ULL << ( 11 )); , kGeoSph = (1ULL << ( 12 )); , kGeoTube = (1ULL << ( 13 )); , ;   kGeoTubeSeg = (1ULL << ( 14 )); , kGeoCone = (1ULL << ( 15 )); , kGeoConeSeg = (1ULL << ( 16 )); , kGeoPcon = (1ULL << ( 17 )); , ;   kGeoPgon = (1ULL << ( 18 )); , kGeoArb8 = (1ULL << ( 19 )); , kGeoEltu = (1ULL << ( 20 )); , kGeoTrap = (1ULL << ( 21 )); , ;   kGeoCtub = (1ULL << ( 22 )); , kGeoTrd1 = (1ULL << ( 23 )); , kGeoTrd2 = (1ULL << ( 24 )); , kGeoComb = (1ULL << ( 25 )); , ;   kGeoClosedShape = (1ULL << ( 26 )); , kGeoXtru = (1ULL << ( 27 )); , kGeoParaboloid = (1ULL << ( 28 )); , kGeoHalfSpace = (1ULL << ( 29 )); , ;   kGeoHype = (1ULL << ( 30 )); , kGeoSavePrimitive = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoTrd1.html:20059,inherit,inherited,20059,doc/master/classTGeoTrd1.html,https://root.cern,https://root.cern/doc/master/classTGeoTrd1.html,1,['inherit'],['inherited']
Modifiability,ombie ();  . Protected Attributes; RooObjCacheManager _cacheMgr;  ! The cache manager ;  ; RooSetProxy deps;  dependents of this p.d.f ;  ; RooSetProxy intobs;  observables that p.d.f is integrated over ;  ; RooRealProxy intpdf;  p.d.f that is integrated ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooProjectedPdf.html:69147,inherit,inherited,69147,doc/master/classRooProjectedPdf.html,https://root.cern,https://root.cern/doc/master/classRooProjectedPdf.html,1,['inherit'],['inherited']
Modifiability,"ombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  . #include <TSpider.h>. Inheritance diagram for TSpider:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSpider() [1/2]. TSpider::TSpider ; (; ). Default constructor. ; Definition at line 76 of file TSpider.cxx. ◆ TSpider() [2/2]. TSpider::TSpider ; (; TTree * ; tree, . const char * ; varexp, . const char * ; selection, . Option_t * ; option = """", . Long64_t ; nentries = 0, . Long64_t ; firstentry = 0 . ). Normal constructor. ; Options are:; ""average""; ""showrange""; ""segment"" . Definition at line 114 of file TSpider.cxx. ◆ ~TSpider(). TSpider::~TSpider ; (; ). override . Destructor. ; Definition at line 174 of file TSpider.cxx. Member Function Documentation. ◆ AddSuperposed(). void TSpider::AddSuperposed ; (; TSpider * ; sp). Allow to superpose several spider views. ; Definiti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpider.html:20175,inherit,inherited,20175,doc/master/classTSpider.html,https://root.cern,https://root.cern/doc/master/classTSpider.html,1,['inherit'],['inherited']
Modifiability,"ombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMethodCall*fGetterMethod to Get a value of fObject;; Bool_tfInitializedTrue if either SetToggledObject or SetToggledVariable called - enables Toggle() method.; TStringTNamed::fNameobject identifier; TObject*fObjectThe object this Toggle belongs to; TMethodCall*fSetterMethod to Set a value of fObject;; Int_t*fTglVariableAlternatively: pointer to an integer value to be Toggled instead of TObjectl; TStringTNamed::fTitleobject title. private:. Long_tfOffValueValue recognized as switched OFF(Def=0); Long_tfOnValueValue recognized as switched ON (Def=1); Bool_tfStateObject's state - ""a local copy""; Long_tfValueLocal copy of a value returned by called function. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TToggle(); TToggle default constructor. You have to initialize it before using; by making a call to SetToggledVariable() or SetToggledObject(). void SetToggledVariable(Int_t& var); Initializes object for use with a variable - you pass it via reference; so it will be modified by Toggle. Bool_t GetState(); Returns the state of Toggle according to its current value and; fOnValue, returns true if they match. void SetState(Bool_t state); Sets the value of toggle to fOnValue or fOffValue according to passed; argument. void SetValue(Long_t val); Sets the value of toggle and modifies its state according to whether; the value is equal to fOnValue. void Toggle(); Toggles the Values and State of this object and connected data!. void SetToggledObject(TObject* obj, TMethod* anymethod); Initializes it to toggle an object's datamember using this object's; method. TToggle(). Bool_t IsInitialized(); {return fInitialized;}. void SetOnValue(Long_t lon); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TToggle.html:7259,Inherit,Inheritance,7259,root/html532/TToggle.html,https://root.cern,https://root.cern/root/html532/TToggle.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. Double_tfMSum of elements ( i.e. mean * sum_of_weights); Double_tfM2Second order momentum; Long64_tfNNumber of fills; TStringfName; Double_tfWSum of weights; Double_tfW2Sum of weights**2. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TStatistic(const char* name = """"); { }. TStatistic(const char* name, Int_t n, const Double_t* val, const Double_t* w = 0). ~TStatistic(); { }. const char * GetName() const; Getters. { return fName; }. ULong_t Hash() const; { return fName.Hash(); }. Long64_t GetN() const; { return fN; }. Long64_t GetNeff() const; { return fW*fW/fW2; }. Double_t GetM2() const; { return fM2; }. Double_t GetMean() const; { return (fW > 0) ? fM/fW : 0; }. Double_t GetMeanErr() const; { return (fW > 0.) ? TMath::Sqrt( GetVar()/ GetNeff() ) : 0; }. Double_t GetRMS() const; { double var = GetVar(); return (var>0) ? TMath::Sqrt(var) : -1; }. Double_t GetVar() const; { return (fW>0) ? ( (fN>1) ? (fM2 / fW)*(fN / (fN-1.)) : 0 ) : -1; }. Double_t GetW() const; { return fW; }. Double_t GetW2() const; { return fW2; }. Int_t Merge(TCollection* in); Merging. void Fill(Double_t val, Double_t w = 1.); Fill. void Print(Option_t* = """") const; Print. void ls(Option_t* opt ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TStatistic.html:6192,Inherit,Inheritance,6192,root/html604/TStatistic.html,https://root.cern,https://root.cern/root/html604/TStatistic.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ombie(). private:. TPoint*GetBindingLinePoints(Int_t pos, Int_t mindragged); TPoint*GetSliderPoints(Double_t value); TPoint*GetSliderPoints(Int_t pos); voidPaintSlider(Double_t value, Bool_t fill = kFALSE). Data Members; public:. enum { kShowOnPad; kLiveUpdate; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. Double_tfMaxMax value for the range.; Double_tfMinMin value for the range.; TParallelCoordSelect*fSelectSelection owning the range.; const Double_tfSizeSize of the painted range.; TParallelCoordVar*fVarVariable owning the range. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TParallelCoordRange(); default constructor. ~TParallelCoordRange(); Destructor. TParallelCoordRange(TParallelCoordVar* var, Double_t min = 0, Double_t max = 0, TParallelCoordSelect* sel = NULL); Normal constructor. void BringOnTop(); Make the selection which owns the range to be drawn on top of the others. void Delete(Option_t* options = """"); Delete the range. Int_t DistancetoPrimitive(Int_t px, Int_t py); Compute the distance to the primitive. void Draw(Option_t* options = """"); Draw a TParallelCoordRange. void ExecuteEvent(Int_t entry, Int_t px, Int_t py); Execute the entry. TPoint* GetBindingLinePoints(Int_t pos, Int_t mindragged); return the points of the line binding the two niddles of the range. TPoint* GetSliderPoints(Double_t value); return the points to paint the niddle at ""value"". TPoint* GetSliderPoints(Int_t pos); return the points to paint the niddle at ""pos"". Bool_t IsIn(Double_t evtval); Evaluate if the given value is wit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TParallelCoordRange.html:7100,Inherit,Inheritance,7100,root/html532/TParallelCoordRange.html,https://root.cern,https://root.cern/root/html532/TParallelCoordRange.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ombie(); Bool_tTObjArray::OutOfBoundsError(const char* where, Int_t i) const; virtual voidTCollection::PrintCollectionEntry(TObject* entry, Option_t* option, Int_t recurse) const; virtual voidTCollection::PrintCollectionHeader(Option_t* option) const. Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TCollection::(anonymous)TCollection::kInitCapacity; static TCollection::(anonymous)TCollection::kInitHashTableCapacity; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TObject**TObjArray::fCont!Array contents; Int_tTObjArray::fLastLast element in array containing an object; Int_tTObjArray::fLowerBoundLower bound of the array; TStringTCollection::fNamename of the collection; Int_tTCollection::fSizenumber of elements in collection; Bool_tTSeqCollection::fSortedtrue if collection has been sorted; static TCollection::(anonymous)TCollection::kIsOwner. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Streamer(TBuffer& ); Stream an object of class RooRefArray. RooRefArray(). RooRefArray(const RooRefArray& other). virtual ~RooRefArray(); {}. » Last changed: Tue Jun 30 14:35:30 2015 » Last generated: 2015-06-30 14:35; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooRefArray.html:11237,Inherit,Inheritance,11237,root/html602/RooRefArray.html,https://root.cern,https://root.cern/root/html602/RooRefArray.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ombie. protected:. TGraphDelaunay*fDelaunayPointer to the TGraphDelaunay to be painted; Double_t*fEX!Pointer to fGraph2D->fXE; Double_t*fEY!Pointer to fGraph2D->fYE; Double_t*fEZ!Pointer to fGraph2D->fZE; TGraph2D*fGraph2DPointer to the TGraph2D in fDelaunay; Int_t*fMTried!Pointer to fDelaunay->fMTried; Int_t*fNTried!Pointer to fDelaunay->fNTried; Int_tfNdt!Equal to fDelaunay->fNdt; Int_tfNpoints!Equal to fGraph2D->fNpoints; Int_t*fPTried!Pointer to fDelaunay->fPTried; Double_t*fX!Pointer to fGraph2D->fX; Double_t*fXN!Pointer to fDelaunay->fXN; Double_tfXNmax!Equal to fDelaunay->fXNmax; Double_tfXNmin!Equal to fDelaunay->fXNmin; Double_tfXmax!; Double_tfXmin!; Double_t*fY!Pointer to fGraph2D->fY; Double_t*fYN!Pointer to fDelaunay->fYN; Double_tfYNmax!Equal to fDelaunay->fYNmax; Double_tfYNmin!Equal to fDelaunay->fYNmin; Double_tfYmax!; Double_tfYmin! fGraph2D->fHistogram limits; Double_t*fZ!Pointer to fGraph2D->fZ; Double_tfZmax!; Double_tfZmin!. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGraph2DPainter(); TGraph2DPainter default constructor. TGraph2DPainter(TGraphDelaunay* gd); TGraph2DPainter constructor. ~TGraph2DPainter(); TGraph2DPainter destructor. void FindTriangles(); Find triangles in fDelaunay and initialise the TGraph2DPainter values; needed to paint triangles or find contours. TList * GetContourList(Double_t contour); Returns the X and Y graphs building a contour. A contour level may; consist in several parts not connected to each other. This function; finds them and returns them in a graphs' list. void Paint(Option_t* option); Paint a TGraphDelaunay according to the value of ""option"":. ""TRI"" : The Delaunay triangles are drawn using filled area.; An hidden surface drawing technique is used. The surface is; painted with the current fill area color. The edges of each; triangles are painted with the current line color.; ""TRIW"" : The Delaunay triangles are drawn as wire frame; ""TRI1"" : The Delaunay triangles ar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGraph2DPainter.html:7010,Inherit,Inheritance,7010,root/html602/TGraph2DPainter.html,https://root.cern,https://root.cern/root/html602/TGraph2DPainter.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ombie. protected:. TMVA::Event*TMVA::VariableTransformBase::fBackTransformedEventholds the current back-transformed event; TMVA::DataSetInfo&TMVA::VariableTransformBase::fDsi; TMVA::DataSetInfo*TMVA::VariableTransformBase::fDsiOutput; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fGetget variables/targets/spectators; TMVA::MsgLogger*TMVA::VariableTransformBase::fLogger! message logger; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fPutput variables/targets/spectators; TMVA::TMVAVersion_tTMVA::VariableTransformBase::fTMVAVersion; TMVA::Event*TMVA::VariableTransformBase::fTransformedEventholds the current transformed event. private:. vector<vector<TH1F*> >fCumulativeDist! The Cummulative distributions; vector<vector<TMVA::PDF*> >fCumulativePDFThe cumulative PDF; UInt_tfElementsperbinav number of events stored per bin in cum dist; Bool_tfFlatNotGauss; Int_tfPdfMaxSmooth; Int_tfPdfMinSmooth. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableGaussTransform(TMVA::DataSetInfo& dsi, TString strcor = """"); constructor; can only be applied one after the other when they are created. But in order to; determine the Gauss transformation. ~VariableGaussTransform( void ); destructor. void Initialize(). Bool_t PrepareTransformation(const vector<TMVA::Event*>& ); calculate the cumulative distributions. const TMVA::Event* Transform(const TMVA::Event*const , Int_t cls) const; apply the Gauss transformation. const TMVA::Event* InverseTransform(const TMVA::Event*const , Int_t cls) const; apply the inverse Gauss or inverse uniform transformation. void GetCumulativeDist(const vector<TMVA::Event*>& ); fill the cumulative distributions. void WriteTransformationToStream(ostream& ) const. void CleanUpCumulativeArrays(TString opt = ""ALL""); clean up of cumulative arrays. void AttachXMLTo(void* parent); create XML description of Gauss transformation. void ReadFromXML(void* trfnode); Read the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableGaussTransform.html:10332,Inherit,Inheritance,10332,root/html602/TMVA__VariableGaussTransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableGaussTransform.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMVA::Event*TMVA::VariableTransformBase::fBackTransformedEventholds the current back-transformed event; TMVA::DataSetInfo&TMVA::VariableTransformBase::fDsi; TMVA::DataSetInfo*TMVA::VariableTransformBase::fDsiOutput; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fGetget variables/targets/spectators; TMVA::MsgLogger*TMVA::VariableTransformBase::fLogger! message logger; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fPutput variables/targets/spectators; TMVA::TMVAVersion_tTMVA::VariableTransformBase::fTMVAVersion; TMVA::Event*TMVA::VariableTransformBase::fTransformedEventholds the current transformed event. private:. vector<TMatrixD*>fEigenVectorseigenvectors; vector<TVectorD*>fMeanValuesmean values. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariablePCATransform( DataSetInfo& dsi ); constructor. ~VariablePCATransform(); destructor. void Initialize(); initialization of the transformation.; Has to be called in the preparation and not in the constructor,; since the number of classes it not known at construction, but; only after the creation of the DataSet which might be later. Bool_t PrepareTransformation(const vector<TMVA::Event*,allocator<TMVA::Event*> >& ); calculate the principal components using the ROOT class TPrincipal; and the normalization. const TMVA::Event* Transform(const TMVA::Event *const , Int_t cls) const; apply the principal component analysis. const TMVA::Event* InverseTransform(const TMVA::Event *const , Int_t cls) const; apply the principal component analysis; TODO: implementation of inverse transformation; Log() << kFATAL << ""Inverse transformation for PCA transformation not yet implemented. Hence, this transformation cannot be applied together with regression. Please contact the authors if necessary."" << Endl;. void CalculatePrincipalComponents(const vector<TMVA::Event*,alloc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__VariablePCATransform.html:9568,Variab,VariablePCATransform,9568,root/html532/TMVA__VariablePCATransform.html,https://root.cern,https://root.cern/root/html532/TMVA__VariablePCATransform.html,2,['Variab'],['VariablePCATransform']
Modifiability,"ome major probability density functions in ROOT. ;  ; file  mathcoreStatFunc.py;   Example macro showing some major probability density functions in ROOT. ;  ; file  mathcoreVectorCollection.C;   Example showing how to write and read a std vector of ROOT::Math LorentzVector in a ROOT tree. ;  ; file  mathcoreVectorFloatIO.C;   Macro illustrating I/O with Lorentz Vectors of floats The dictionary for LorentzVector of float is not in the libMathCore, therefore is generated when parsed the file with CLING. ;  ; file  mathcoreVectorIO.C;   Example of I/O of a mathcore Lorentz Vectors in a Tree and comparison with a TLorentzVector. ;  ; file  mathGammaNormal.C;   Tutorial illustrating the use of TMath::GammaDist and TMath::LogNormal ;  ; file  mathLaplace.C;   Test the TMath::LaplaceDist and TMath::LaplaceDistI functions ;  ; file  mathmoreIntegration.C;   Example on the usage of the adaptive 1D integration algorithm of MathMore it calculates the numerically cumulative integral of a distribution (like in this case the BreitWigner) to execute the macro type it (you need to compile with AClic) ;  ; file  mathmoreIntegrationMultidim.C;   Example on the usage of the multidimensional integration algorithm of MathMore Please refer to the web documentation for further details: https://root.cern/manual/math/#numerical-integration To execute the macro type the following: ;  ; file  mathStudent.C;   Tutorial illustrating the use of the Student and F distributions ;  ; file  multidimSampling.C;   Example of sampling a multi-dim distribution using the DistSampler class NOTE: This tutorial must be run with ACLIC ;  ; file  multivarGaus.C;   Tutorial illustrating the multivariate gaussian random number generation ;  ; file  normalDist.C;   Tutorial illustrating the new statistical distributions functions (pdf, cdf and quantile) ;  ; file  normalDist.py;   Tutorial illustrating the new statistical distributions functions (pdf, cdf and quantile) ;  ; file  permute.C;   Tutorial illustrat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__math.html:3680,adapt,adaptive,3680,doc/master/group__tutorial__math.html,https://root.cern,https://root.cern/doc/master/group__tutorial__math.html,1,['adapt'],['adaptive']
Modifiability,oment. RooSegmentedIntegrator1D←. RooSegmentedIntegrator2D. RooSegmentedIntegrator2D. RooSetPair. RooSetProxy. RooSharedProperties←. RooCategorySharedProperties. RooRealVarSharedProperties. RooSharedPropertiesList. RooSimGenContext. RooSimPdfBuilder. RooSimSplitGenContext. RooSimWSTool. RooSimWSTool::MultiBuildConfig. RooSimWSTool::SplitRule. RooSimultaneous←. RooStats::HistFactory::HistFactorySimultaneous. RooSpHarmonic. RooStats::AcceptanceRegion. RooStats::AsymptoticCalculator. RooStats::BayesianCalculator. RooStats::CombinedCalculator←. RooStats::ProfileLikelihoodCalculator. RooStats::ConfInterval←. RooStats::LikelihoodInterval. RooStats::MCMCInterval. RooStats::PointSetInterval. RooStats::SimpleInterval; ←. RooStats::HypoTestInverterResult. RooStats::ConfidenceBelt. RooStats::DebuggingSampler. RooStats::DebuggingTestStat. RooStats::FeldmanCousins. RooStats::FrequentistCalculator. RooStats::HLFactory. RooStats::Heaviside. RooStats::HistFactory::EstimateSummary. RooStats::HistFactory::FlexibleInterpVar. RooStats::HistFactory::HistFactorySimultaneous. RooStats::HistFactory::HistoToWorkspaceFactory. RooStats::HistFactory::HistoToWorkspaceFactoryFast. RooStats::HistFactory::LinInterpVar. RooStats::HistFactory::Measurement. RooStats::HistFactory::RooBarlowBeestonLL. RooStats::HybridCalculator. RooStats::HybridCalculatorOriginal. RooStats::HybridPlot. RooStats::HybridResult. RooStats::HypoTestCalculatorGeneric←. RooStats::AsymptoticCalculator. RooStats::FrequentistCalculator. RooStats::HybridCalculator. RooStats::HypoTestInverter. RooStats::HypoTestInverterOriginal. RooStats::HypoTestInverterPlot. RooStats::HypoTestInverterResult. RooStats::HypoTestPlot. RooStats::HypoTestResult←. RooStats::HybridResult. RooStats::LikelihoodInterval. RooStats::LikelihoodIntervalPlot. RooStats::MCMCCalculator. RooStats::MCMCInterval. RooStats::MCMCIntervalPlot. RooStats::MarkovChain. RooStats::MaxLikelihoodEstimateTestStat. RooStats::MetropolisHastings. RooStats::MinNLLTestStat. RooSta,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ClassHierarchy.html:25476,Flexible,FlexibleInterpVar,25476,root/html534/ClassHierarchy.html,https://root.cern,https://root.cern/root/html534/ClassHierarchy.html,3,['Flexible'],['FlexibleInterpVar']
Modifiability,"omentum=0.9""; # ""ConvergenceSteps=10,BatchSize=128,TestRepetitions=1,""; # ""MaxEpochs=20,WeightDecay=1e-4,Regularization=None,""; # ""Optimizer=SGD,DropConfig=0.0+0.0+0.0+0.""); ; # General Options.; dnnMethodName = ROOT.TString(""DNN_CPU""); ; if useDLGPU:; arch = ""GPU""; dnnMethodName = ""DNN_GPU""; else:; arch = ""CPU""; ; factory.BookMethod(; loader,; TMVA.Types.kDL,; dnnMethodName,; H=False,; V=True,; ErrorStrategy=""CROSSENTROPY"",; VarTransform=""G"",; WeightInitialization=""XAVIER"",; InputLayout=""1|1|7"",; BatchLayout=""1|128|7"",; Layout=""DENSE|64|TANH,DENSE|64|TANH,DENSE|64|TANH,DENSE|64|TANH,DENSE|1|LINEAR"",; TrainingStrategy=training1,; Architecture=arch,; ); ; # Keras DL; if useKeras:; ROOT.Info(""TMVA_Higgs_Classification"", ""Building Deep Learning keras model""); # create Keras model with 4 layers of 64 units and relu activations; import tensorflow; from tensorflow.keras.models import Sequential; from tensorflow.keras.optimizers import Adam; from tensorflow.keras.layers import Input, Dense; ; model = Sequential(); model.add(Dense(64, activation=""relu"", input_dim=7)); model.add(Dense(64, activation=""relu"")); model.add(Dense(64, activation=""relu"")); model.add(Dense(64, activation=""relu"")); model.add(Dense(2, activation=""sigmoid"")); model.compile(loss=""binary_crossentropy"", optimizer=Adam(learning_rate=0.001), weighted_metrics=[""accuracy""]); model.save(""model_higgs.h5""); model.summary(); ; if not os.path.exists(""model_higgs.h5""):; raise FileNotFoundError(""Error creating Keras model file - skip using Keras""); else:; # book PyKeras method only if Keras model could be created; ROOT.Info(""TMVA_Higgs_Classification"", ""Booking Deep Learning keras model""); factory.BookMethod(; loader,; TMVA.Types.kPyKeras,; ""PyKeras"",; H=True,; V=False,; VarTransform=None,; FilenameModel=""model_higgs.h5"",; FilenameTrainedModel=""trained_model_higgs.h5"",; NumEpochs=20,; BatchSize=100,; ); # GpuOptions=""allow_growth=True"",; # ) # needed for RTX NVidia card and to avoid TF allocates all GPU memory; ; ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__Higgs__Classification_8py.html:66657,layers,layers,66657,doc/master/TMVA__Higgs__Classification_8py.html,https://root.cern,https://root.cern/doc/master/TMVA__Higgs__Classification_8py.html,1,['layers'],['layers']
Modifiability,"omepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » CONT; » TBtree. class TBtree: public TSeqCollection. TBtree. B-tree class. TBtree inherits from the TSeqCollection ABC. ; B-tree Implementation notes; This implements B-trees with several refinements. Most of them can be found; in Knuth Vol 3, but some were developed to adapt to restrictions imposed; by C++. First, a restatement of Knuth's properties that a B-tree must; satisfy, assuming we make the enhancement he suggests in the paragraph; at the bottom of page 476. Instead of storing null pointers to non-existent; nodes (which Knuth calls the leaves) we utilize the space to store keys.; Therefore, what Knuth calls level (l-1) is the bottom of our tree, and; we call the nodes at this level LeafNodes. Other nodes are called InnerNodes.; The other enhancement we have adopted is in the paragraph at the bottom of; page 477: overflow control. The following are modifications of Knuth's properties on page 478:. Every InnerNode has at most Order keys, and at most Order+1 sub-trees.; Every LeafNode has at most 2*(Order+1) keys.; An InnerNode with k keys has k+1 sub-trees.; Every InnerNode that is not the root has at least InnerLowWaterMark keys.; Every LeafNode that is not the root has at least LeafLowWaterMark keys.; If the root is a LeafNode, it has at least one key.; If the root is an InnerNode, it has at least one key and two sub-trees.; All LeafNodes are the same distance from the root as all the other; LeafNodes.; For InnerNode n with key n[i].key, then sub-tree n[i-1].tree contains; all keys < n[i].key, and sub-tree n[i].tree contains all keys; >= n[i].key.; Order is at least 3. The values of InnerLowWaterMark and LeafLowWaterMark may actually be set; by the user when the tree is initialized, but currently they are set; automatically to:. InnerLowWaterMark = ceiling(Or",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBtree.html:990,enhance,enhancement,990,root/html526/TBtree.html,https://root.cern,https://root.cern/root/html526/TBtree.html,11,['enhance'],['enhancement']
Modifiability,"omepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » ROOFIT; » ROOFITCORE; » RooMsgService::StreamConfig. class RooMsgService::StreamConfig. The RooMsgService class is a singleton class that organizes informational, debugging, ; warning and errors messages generated by the RooFit core code. ; ; Each message generated by the core; has a message level (DEBUG,INFO,PROGRESS,WARNING,ERROR or FATAL), an originating object,; and a 'topic'. Currently implemented topics are ""Generation"",""Plotting"",; ""Integration"", ""Minimization"" and ""Workspace"" and ""ChangeTracking"".; ; The RooMsgService class allows to filter and redirect messages into 'streams' ; according to message level, topic, (base) class of originating object, name of originating; object and based on attribute labels attached to individual objects. ; ; The current default configuration creates streams for all messages at WARNING level; or higher (e.g. ERROR and FATAL) and for all INFO message on topics Generation,Plotting,; Integration and Minimization and redirects them to stdout. Users can create additional streams ; for logging of e.g. DEBUG messages on particular topics or objects and or redirect streams to; C++ streams or files.; ; The singleton instance is accessible through RooMsgService::instance() ;; . Function Members (Methods); public:. ~StreamConfig(); voidaddTopic(RooFit::MsgTopic newTopic); Bool_tmatch(RooFit::MsgLevel level, RooFit::MsgTopic facility, const RooAbsArg* obj); Bool_tmatch(RooFit::MsgLevel level, RooFit::MsgTopic facility, const TObject* obj); RooMsgService::StreamConfig&operator=(const RooMsgService::StreamConfig&); RooMsgService::StreamConfig&operator=(RooMsgService::StreamConfig&&); voidremoveTopic(RooFit::MsgTopic oldTopic); RooMsgService::StreamConfigStreamConfig(); RooMsgService::StreamConfigStreamConfig(const RooMsgService::StreamConfig&); RooMs",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooMsgService__StreamConfig.html:1025,config,configuration,1025,root/html602/RooMsgService__StreamConfig.html,https://root.cern,https://root.cern/root/html602/RooMsgService__StreamConfig.html,4,['config'],['configuration']
Modifiability,"ometries; gROOT->GetListOfBrowsers; gROOT->GetListOfCleanups; gROOT->GetListOfMessageHandlers; gROOT#define gROOTDefinition TROOT.h:406; The TROOT class provides also many useful services:; Get pointer to an object in any of the lists above; Time utilities TROOT::Time. The ROOT object must be created as a static object. An example of a main program creating an interactive version is shown below:. Example of a main program; #include ""TRint.h""; ; int main(int argc, char **argv); {; TRint *theApp = new TRint(""ROOT example"", &argc, argv);; ; // Init Intrinsics, build all windows, and enter event loop; theApp->Run();; ; return(0);; }; mainint main()Definition Prototype.cxx:12; TRint.h; TRintDefinition TRint.h:31; TRint::Runvoid Run(Bool_t retrn=kFALSE) overrideMain application eventloop.Definition TRint.cxx:384. Definition at line 94 of file TROOT.h. Public Types; typedef std::vector< std::pair< std::string, int > > FwdDeclArgsToKeepCollection_t;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TROOT (const char *name, const char *title, VoidFuncPtr_t *initfunc=nullptr);  Initialize the ROOT system. ;  ; virtual ~TROOT ();  Clean up and free resources used by ROOT (files, network sockets, shared memory segments, etc.). ;  ; void AddClass (TClass *cl);  Add a class to the list and map of classes. ;  ; void AddClassGenerator (TClassGenerator *gen);  Add a class gener",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTROOT.html:2226,inherit,inherited,2226,doc/master/classTROOT.html,https://root.cern,https://root.cern/doc/master/classTROOT.html,1,['inherit'],['inherited']
Modifiability,"ometry. ; Definition at line 369 of file RGeomData.hxx. ◆ GetSearch(). std::string ROOT::RGeomDescription::GetSearch ; (; ); const. inline . Definition at line 383 of file RGeomData.hxx. ◆ GetSearchJson(). std::string ROOT::RGeomDescription::GetSearchJson ; (; ); const. inline . Definition at line 384 of file RGeomData.hxx. ◆ GetTopVisible(). bool ROOT::RGeomDescription::GetTopVisible ; (; ); const. inline . Returns draw options, used for JSROOT TGeoPainter. ; Definition at line 334 of file RGeomData.hxx. ◆ GetUsedNSegments(). int RGeomDescription::GetUsedNSegments ; (; int ; min = 20). private . Returns really used number of cylindrical segments. ; Definition at line 922 of file RGeomData.cxx. ◆ GetVisLevel(). int ROOT::RGeomDescription::GetVisLevel ; (; ); const. inline . Returns maximal visible level. ; Definition at line 329 of file RGeomData.hxx. ◆ GetVolume(). TGeoVolume * RGeomDescription::GetVolume ; (; int ; nodeid). private . Get volume for specified nodeid If specific volume was configured, it will be returned for nodeid==0. ; Definition at line 583 of file RGeomData.cxx. ◆ HasDrawData(). bool RGeomDescription::HasDrawData ; (; ); const. Check if there is draw data available. ; Definition at line 1331 of file RGeomData.cxx. ◆ IsBuild(). bool ROOT::RGeomDescription::IsBuild ; (; ); const. inline . Definition at line 371 of file RGeomData.hxx. ◆ IsBuildShapes(). int ROOT::RGeomDescription::IsBuildShapes ; (; ); const. inline . Returns true if binary 3D model build already by C++ server (default) ; Definition at line 339 of file RGeomData.hxx. ◆ IsPhysNodeVisible(). int RGeomDescription::IsPhysNodeVisible ; (; const std::vector< int > & ; stack). private . Check if there special settings for specified physical node returns -1 if nothing is found. ; Definition at line 2043 of file RGeomData.cxx. ◆ IsPreferredOffline(). bool ROOT::RGeomDescription::IsPreferredOffline ; (; ); const. inline . Is offline operations preferred. ; After get full description, client ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeomDescription.html:17343,config,configured,17343,doc/v632/classROOT_1_1RGeomDescription.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeomDescription.html,1,['config'],['configured']
Modifiability,"omma-separated list of integers. targetClass. The field is obligatory and defines the name of the in-memory class that this rule can be applied to. target. A comma-separated list of target class data member names that this rule is capable of calculating. embed. This property tells the system if the rule should be written in the output file is some objects of this class are serialized. include. A list of header files that should be included in order to provide the functionality used in the code snippet; the list is comma delimited. code. An user specified code snippet. The user can assume that in the provided code snippet the following variables will be defined:; The user provided code snippets have to consist of valid C++ code. The system can do; some preprocessing before wrapping the code into function calls and declare some variables to facilitate the rule definitions. The user can expect the following variables being predeclared:. newObj. variable representing the target in-memory object, its type is that of the target object. oldObj. in normal conversion rules, an object of TVirtualObject class representing the input data, guaranteed to hold the data members declared in the source property of the rule. buffer. in raw conversion rules, an object of TBuffer class holding the data member declared in source property of the rule. names of the data members of the target object declared in the target property of the rule declared to be the appropriate type; onfile.xxx. in normal conversion rules, names of the variables of basic types declared in the source property of the rule. 11.5.6.2 The C++ API; The schema evolution C++ API consists of two classes: ROOT::TSchemaRuleSet and ROOT::TSchemaRule. Objects of the TSchemaRule class represent the rules and their fields have exactly the same meaning as the ones of rules specified in the dictionaries. TSchemaRuleSet objects manage the sets of rules and ensure their consistency. There can be no conflicting rules in the rule se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:503074,variab,variable,503074,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['variab'],['variable']
Modifiability,"ompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_t_intOrderInterpolation order; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Double_t_totVolume! Total volume of space (product of ranges of observables); Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Bool_t_unitNorm! Assume contents is unit normalized (for use as pdf cache); Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooHistFunc.html:32969,config,configuration,32969,root/html530/RooHistFunc.html,https://root.cern,https://root.cern/root/html530/RooHistFunc.html,1,['config'],['configuration']
Modifiability,"ompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. RooRealProxy_ndof; RooRealProxy_x. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooChiSquarePdf(). RooChiSquarePdf(const char* name, const char* title, RooAbsReal& x, RooAbsReal& ndof). RooChiSquarePdf(const RooChiSquarePdf& other, const char* name = 0). Double_t evaluate() const. Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; No analytical calculation available (yet) of integrals over subranges. Double_t analyticalIntegral(Int_t code, const char* rangeName = 0) const. TObject* clone(const char* newname) const; { return new RooChiSquarePdf(*this, newname); }. virtual ~RooChiSquarePdf(); { }. » Last changed: Tue Jun 2 15:29:58 2015 » Last generated: 2015-06-02 15:29; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooChiSquarePdf.html:44826,Inherit,Inheritance,44826,root/html604/RooChiSquarePdf.html,https://root.cern,https://root.cern/root/html604/RooChiSquarePdf.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"omplex& c); TComplexoperator/(const TComplex& c) const; TComplexoperator/(Double_t c) const; TComplexoperator/=(const TComplex& c); TComplex&operator=(const TComplex&); static TComplexPower(const TComplex& x, const TComplex& y); static TComplexPower(const TComplex& x, Double_t y); static TComplexPower(Double_t x, const TComplex& y); static TComplexPower(const TComplex& x, Int_t y); static TComplexRange(const TComplex& lb, const TComplex& ub, const TComplex& c); Double_tRe() const; Double_tRho() const; Double_tRho2() const; virtual voidShowMembers(TMemberInspector&); static TComplexSin(const TComplex& c); static TComplexSinH(const TComplex& c); static TComplexSqrt(const TComplex& c); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); static TComplexTan(const TComplex& c); static TComplexTanH(const TComplex& c); Double_tTheta() const. Data Members; protected:. Double_tfImimaginary part; Double_tfRereal part. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TComplex(Double_t re, Double_t im = 0, Bool_t polar = kFALSE); Standard constructor. TComplex(); ctors and dtors. {}. TComplex(Double_t re, Double_t im = 0, Bool_t polar = kFALSE). virtual ~TComplex(); {}. TComplex I(); constants. {return TComplex(0,1);}. TComplex One(); {return TComplex(1,0);}. Double_t Re() const; getters and setters. {return fRe;}. Double_t Im() const; {return fIm;}. Double_t Rho() const; {return TMath::Sqrt(fRe*fRe+fIm*fIm);}. Double_t Rho2() const; {return fRe*fRe+fIm*fIm;}. Double_t Theta() const; {return (fIm||fRe)?TMath::ATan2(fIm,fRe):0;}. TComplex operator()(Double_t x, Double_t y, Bool_t polar = kFALSE). operator Double_t() const; Convertors. {return fRe;}. operator Float_t() const; {return static_cast<Float_t>(fRe);}. operator Int_t() const; {return static_cast<Int_t>(fRe);}. TComplex Sqrt(const TComplex& c); TMath:: extensions. {return TComplex(TMath::Sqrt(c.Rho()),0.5*c.Theta(),kTRUE);}. TComplex Exp(cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TComplex.html:2887,Inherit,Inheritance,2887,root/html534/TComplex.html,https://root.cern,https://root.cern/root/html534/TComplex.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"omponent selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxymean; RooRealProxywidth; RooRealProxyx. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooBreitWigner(const char* name, const char* title, RooAbsReal& _x, RooAbsReal& _mean, RooAbsReal& _width). RooBreitWigner(const RooBreitWigner& other, const char* name = 0). Double_t evaluate() const. Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const. Double_t analyticalIntegral(Int_t code, const char* rangeName = 0) const. RooBreitWigner(); {}. TObject* clone(const char* newname) const; { return new RooBreitWigner(*this,newname); }. virtual ~RooBreitWigner(); { }. » Last changed: Tue Jun 30 14:31:12 2015 » Last generated: 2015-06-30 14:31; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooBreitWigner.html:44752,Inherit,Inheritance,44752,root/html602/RooBreitWigner.html,https://root.cern,https://root.cern/root/html602/RooBreitWigner.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"omponent; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; map<pair<string,int>,BoxInfo*>_rangeBoxInfo; Double_tRooAbsPdf::_rawValue; vector<Double_t>_rho; TMatrixD*_rotMat; Bool_t_rotate; vector<Int_t>_sIdcs; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; vector<Double_t>_sigma; Double_t_sigmaAvgR; TVectorD*_sigmaR; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; Double_t_sqrt2pi; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; TIterator*_varItr! do not persist; RooListProxy_varList; vector<string>_varName; Bool_t_verbose; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; map<Int_t,Double_t>_wMap; vector<vector<Double_t> >*_weights!; vector<vector<Double_t> >_weights0; vector<vector<Double_t> >_weights1; Double_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooNDKeysPdf.html:41229,config,configuration,41229,root/html526/RooNDKeysPdf.html,https://root.cern,https://root.cern/root/html526/RooNDKeysPdf.html,2,['config'],['configuration']
Modifiability,"ompositeBase::GetMethodIndex(); const TString&TMVA::MethodBase::GetMethodName() const; TMVA::Types::EMVATMVA::MethodBase::GetMethodType() const; TStringTMVA::MethodBase::GetMethodTypeName() const; TH1*GetMonitoringHist(Int_t histInd); virtual vector<Float_t>TMVA::MethodBase::GetMulticlassEfficiency(vector<std::vector<Float_t> >& purity); virtual vector<Float_t>TMVA::MethodBase::GetMulticlassTrainingEfficiency(vector<std::vector<Float_t> >& purity); virtual const vector<Float_t>&TMVA::MethodBase::GetMulticlassValues(); virtual Double_tGetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); virtual const char*TMVA::MethodBase::GetName() const; UInt_tTMVA::MethodBase::GetNEvents() const; UInt_tTMVA::MethodBase::GetNTargets() const; UInt_tTMVA::MethodBase::GetNvar() const; UInt_tTMVA::MethodBase::GetNVariables() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TString&TMVA::Configurable::GetOptions() const; TMVA::IMethod*TMVA::MethodCompositeBase::GetPreviousMethod(); virtual Double_tTMVA::MethodBase::GetProba(Double_t mvaVal, Double_t ap_sig); const TStringTMVA::MethodBase::GetProbaName() const; virtual Double_tTMVA::MethodBase::GetRarity(Double_t mvaVal, TMVA::Types::ESBType reftype = Types::kBackground) const; virtual voidTMVA::MethodBase::GetRegressionDeviation(UInt_t tgtNum, TMVA::Types::ETreeType type, Double_t& stddev, Double_t& stddev90Percent) const; virtual const vector<Float_t>&TMVA::MethodBase::GetRegressionValues(); Double_tTMVA::MethodBase::GetRMS(Int_t ivar) const; virtual Double_tTMVA::MethodBase::GetROCIntegral(TH1F* histS, TH1F* histB) const; virtual Double_tTMVA::MethodBase::GetROCIntegral(TMVA::PDF* pdfS = 0, TMVA::PDF* pdfB = 0) const; virtual Double_tTMVA::MethodBase::GetSeparation(TH1*, TH1*) const; virtual Double_tTMVA::MethodBase::GetSeparation(TMVA::PDF* pdfS = 0, TMVA::PDF* pdfB = 0) const; Double_tTMVA::MethodBase::GetSignalReferenceC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodBoost.html:5241,Config,Configurable,5241,root/html532/TMVA__MethodBoost.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodBoost.html,1,['Config'],['Configurable']
Modifiability,"ompositeBaseTMVA::MethodCompositeBase::MethodCompositeBase(const TString& jobName, TMVA::Types::EMVA methodType, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", TDirectory* theTargetDir = __null); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::MethodBoost&operator=(const TMVA::MethodBoost&); virtual map<TString,Double_t>TMVA::MethodBase::OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::MethodBase::PrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; voidTMVA::MethodBase::ProcessSetup(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidTMVA::MethodCompositeBase::ReadWeightsFromStream(istream& istr); virtual voidTMVA::MethodCompositeBase::ReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodBoost.html:10674,Config,Configurable,10674,root/html602/TMVA__MethodBoost.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodBoost.html,2,['Config'],['Configurable']
Modifiability,ompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tfEditPathMarksShow widgets for path-mark control in GUI editor.; TMarkerfFVAttMarker attributes for fits vertex.; Bool_tfFitCluster2DsPass through 2D-clusters when extrapolating a track.; Bool_tfFitDaughtersPass through daughter creation points when extrapolating a track.; Bool_tfFitDecayPass through decay point when extrapolating a track.; Bool_tfFitLineSegmentsPass through line when extrapolating a track.; Bool_tfFitReferencesPass through given track-references when extrapolating a track.; TEveTrackPropagator::Helix_tfHHelix.; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; TEveElement::sLTI_tTEveElement::fItems! Set of list-tree-items.; TEveMagField*fMagFieldObj; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Double_tfMaxOrbsMaximal angular path of tracks' orbits (1 ~ 2Pi).; Double_tfMaxRMax radius for track extrapolation; Double_tfMaxZMax z-coordinate for track extrapolation.; Int_tfNMaxMax steps; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Bool_tfOwnMagFiledObj; TMarkerfPMAttMarker attributes for rendering of path-marks.; TMarkerfPTBAttMarker attributes for track break-points.; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; TEveElement::List_tTEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; vector<TEveVector4D>fPointsCalculated point.; UChar_tfProjTrackBreakingHandling of projected-track breaking.; TEveProjectable::ProjList_tTEveProjectable::fProjectedListreferences to projected instances.; Int_tTEveRefCnt::fRefCou,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveTrackPropagator.html:24586,variab,variable,24586,root/html602/TEveTrackPropagator.html,https://root.cern,https://root.cern/root/html602/TEveTrackPropagator.html,4,['variab'],['variable']
Modifiability,"ompoundCompound this object belongs to.; vector<TEveVector2T<float> >fDebugPoints; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Float_tTEveProjected::fDepthz coordinate; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveShape::fDrawFramedraw frame; Color_tTEveShape::fFillColorfill color of polygons; Bool_tTEveShape::fHighlightFramehighlight frame / all shape; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >TEveElement::fItems! Set of list-tree-items.; Color_tTEveShape::fLineColoroutline color of polygons; Float_tTEveShape::fLineWidthoutline width of polygons; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TEveProjectionManager*TEveProjected::fManagermanager; Bool_tTEveShape::fMiniFramedraw minimal frame; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; vector<TEveVector2T<float> >fPoints; TEveProjectable*TEveProjected::fProjectablelink to original object; list<TEveProjected*>TEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and contro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveBoxProjected.html:21118,variab,variable,21118,root/html528/TEveBoxProjected.html,https://root.cern,https://root.cern/root/html528/TEveBoxProjected.html,6,['variab'],['variable']
Modifiability,"omputation of statisti...Definition TH1.cxx:6925; TH1::kAutoBinPTwo@ kAutoBinPTwodifferent than 1.Definition TH1.h:174; TH1::Printvoid Print(Option_t *option="""") const overridePrint some global quantities for this histogram.Definition TH1.cxx:7009; TH1::GetEntriesvirtual Double_t GetEntries() constReturn the current number of entries.Definition TH1.cxx:4423; TH1::Mergevirtual Long64_t Merge(TCollection *list)Definition TH1.h:345; TListA doubly linked list.Definition TList.h:38; TList::Addvoid Add(TObject *obj) overrideDefinition TList.h:83; TList::RemoveTObject * Remove(TObject *obj) overrideRemove object from the list.Definition TList.cxx:820; TList::FirstTObject * First() const overrideReturn the first object in the list. Returns 0 when list is empty.Definition TList.cxx:657; TObject::DrawClonevirtual TObject * DrawClone(Option_t *option="""") constDraw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1).Definition TObject.cxx:305; TRandom3Random number generator class based on M.Definition TRandom3.h:27; TStatisticStatistical variable, defined by its mean and variance (RMS).Definition TStatistic.h:33; TStringBasic string class.Definition TString.h:139; TString::Dataconst char * Data() constDefinition TString.h:376; TString::Formatstatic TString Format(const char *fmt,...)Static method which formats a string using a printf style format descriptor and return a TString.Definition TString.cxx:2378; TStyle::SetOptStatvoid SetOptStat(Int_t stat=1)The type of information printed in the histogram statistics box can be selected via the parameter mod...Definition TStyle.cxx:1640; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; nconst Int_t nDefinition legend1.C:16; c3return c3Definition legend3.C:15; DateNovember 2017 ; AuthorGerardo Ganis ; Definition in file fillhistosauto2p.C. tutorialshistfillhistosauto2p.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fillhistosauto2p_8C.html:6333,variab,variable,6333,doc/master/fillhistosauto2p_8C.html,https://root.cern,https://root.cern/doc/master/fillhistosauto2p_8C.html,1,['variab'],['variable']
Modifiability,"ompute reasonable histogram intervals. ; Function TO DETERMINE REASONABLE HISTOGRAM INTERVALS GIVEN ABSOLUTE UPPER AND LOWER BOUNDS A1 AND A2 AND DESIRED MAXIMUM NUMBER OF BINS NAA PROGRAM MAKES REASONABLE BINNING FROM BL TO BH OF WIDTH BWID F. JAMES, AUGUST, 1974 , stolen for Minuit, 1988 ; Definition at line 997 of file TMinuit.cxx. ◆ mncalf(). void TMinuit::mncalf ; (; Double_t * ; pvec, . Double_t & ; ycalf . ). virtual . Transform FCN to find further minima. ; Called only from MNIMPR. Transforms the function FCN by dividing out the quadratic part in order to find further minima. Calculates ycalf = (f-fmin)/(x-xmin)*v*(x-xmin) ; Definition at line 1070 of file TMinuit.cxx. ◆ mncler(). void TMinuit::mncler ; (; ). virtual . Resets the parameter list to UNDEFINED. ; Called from MINUIT and by option from MNEXCM ; Definition at line 1103 of file TMinuit.cxx. ◆ mncntr(). void TMinuit::mncntr ; (; Int_t ; ike1, . Int_t ; ike2, . Int_t & ; ierrf . ). virtual . Print function contours in two variables, on line printer. ; input arguments: parx, pary, devs, ngrid ; Definition at line 1132 of file TMinuit.cxx. ◆ mncomd(). void TMinuit::mncomd ; (; const char * ; crdbin, . Int_t & ; icondn . ). virtual . Reads a command string and executes. ; Called by user. 'Reads' a command string and executes.; Equivalent to MNEXCM except that the command is given as a; character string. ICONDN =; - 0: command executed normally; - 1: command is blank, ignored; - 2: command line unreadable, ignored; - 3: unknown command, ignored; - 4: abnormal termination (e.g., MIGRAD not converged); - 5: command is a request to read PARAMETER definitions; - 6: 'SET INPUT' command; - 7: 'SET TITLE' command; - 8: 'SET COVAR' command; - 9: reserved; - 10: END command; - 11: EXIT or STOP command; - 12: RETURN command. Definition at line 1310 of file TMinuit.cxx. ◆ mncont(). void TMinuit::mncont ; (; Int_t ; ike1, . Int_t ; ike2, . Int_t ; nptu, . Double_t * ; xptu, . Double_t * ; yptu, . Int_t & ; ierrf . ).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMinuit.html:45079,variab,variables,45079,doc/master/classTMinuit.html,https://root.cern,https://root.cern/doc/master/classTMinuit.html,1,['variab'],['variables']
Modifiability,"omputes the closest distance to any boundary. Random points; A method to check the validity of a given geometry is shooting random points. This can be called with the method TGeoVolume::RandomPoints() and it draws a volume with the current visualization settings. Random points are generated in the bounding box of the drawn volume. The points are drawn with the color of their deepest container. Only points inside visible nodes are drawn. Random rays; A ray tracing method can be called TGeoVolume::RandomRays(). This shoots rays from a given point in the local reference frame with random directions. The intersections with displayed nodes appear as segments having the color of the touched node. The Drawing Package. The modeller provides a powerful drawing package, supporting several different options of visualization. A library separated from the main one provides all functionality being linked with the underlying ROOT visualization system. This library is dynamically loaded by the plug-in manager only when drawing features are requested. The geometrical structures that can be visualized are volumes and volume hierarchies.; The main component of the visualization system is volume primitive painting in a ROOT pad. Starting from this one, several specific options or subsystems are available, like: X3D viewing using hidden line and surface removal algorithms, OpenGL viewing* or ray tracing.; The method TGeoManager::GetGeomPainter() loads the painting library in memory.; This is generally not needed since it is called automatically by TGeoVolume::Draw() as well as by few other methods setting visualization attributes. Drawing Volumes and Hierarchies of Volumes; The first thing one would like to do after building some geometry is to visualize the volume tree. This provides the fastest validation check for most common coding or design mistakes. As soon as the geometry is successfully closed, one should draw it starting from the top-level volume:; //... code for geometry build",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Geometry.html:105784,plug-in,plug-in,105784,doc/master/group__Geometry.html,https://root.cern,https://root.cern/doc/master/group__Geometry.html,1,['plug-in'],['plug-in']
Modifiability,"omputes the numerical derivative at a point x using an adaptive backward; difference algorithm with a step size h.; The function is evaluated only at points less than x and at x itself. double Eval(const ROOT::Math::IGenFunction& f, double x, double h = 1E-8); @name --- Static methods ---; This methods don't require to use a Derivator object, and are designed to be used in; fast calculation. Error and status code cannot be retrieved in this case. Computes the numerical derivative of a function f at a point x.; It uses Derivator::EvalCentral to compute the derivative using an; adaptive central difference algorithm with a step size h. double EvalCentral(const ROOT::Math::IGenFunction& f, double x, double h = 1E-8). Computes the numerical derivative of a function f at a point x using an adaptive central; difference algorithm with a step size h. double EvalForward(const ROOT::Math::IGenFunction& f, double x, double h = 1E-8). Computes the numerical derivative of a function f at a point x using an adaptive forward; difference algorithm with a step size h.; The function is evaluated only at points greater than x and at x itself. double EvalBackward(const ROOT::Math::IGenFunction& f, double x, double h = 1E-8). Computes the numerical derivative of a function f at a point x using an adaptive backward; difference algorithm with a step size h.; The function is evaluated only at points less than x and at x itself. double Eval(const ROOT::Math::IMultiGenFunction& f, const double* x, unsigned int icoord = 0, double h = 1E-8); Derivatives for multi-dimension functions. Evaluate the partial derivative of a multi-dim function; with respect coordinate x_icoord at the point x[]. double Eval(IParamFunction & f, double x, const double * p, unsigned int ipar = 0, double h = 1E-8). Evaluate the derivative with respect a parameter for one-dim parameteric function; at the point ( x,p[]) with respect the parameter p_ipar. double Eval(IParamMultiFunction & f, const double * x, const double * ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__Derivator.html:4810,adapt,adaptive,4810,root/html526/ROOT__Math__Derivator.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__Derivator.html,1,['adapt'],['adaptive']
Modifiability,"omputes the numerical derivative at a point x using an adaptive backward; difference algorithm with a step size h.; The function is evaluated only at points less than x and at x itself. double Eval(const ROOT::Math::IGenFunction& f, double x, double h = 1E-8); @name --- Static methods ---; This methods don't require to use a Derivator object, and are designed to be used in; fast calculation. Error and status code cannot be retrieved in this case. Computes the numerical derivative of a function f at a point x.; It uses Derivator::EvalCentral to compute the derivative using an; adaptive central difference algorithm with a step size h. double EvalCentral(const ROOT::Math::IGenFunction& f, double x, double h = 1E-8). Computes the numerical derivative of a function f at a point x using an adaptive central; difference algorithm with a step size h. double EvalForward(const ROOT::Math::IGenFunction& f, double x, double h = 1E-8). Computes the numerical derivative of a function f at a point x using an adaptive forward; difference algorithm with a step size h.; The function is evaluated only at points greater than x and at x itself. double EvalBackward(const ROOT::Math::IGenFunction& f, double x, double h = 1E-8). Computes the numerical derivative of a function f at a point x using an adaptive backward; difference algorithm with a step size h.; The function is evaluated only at points less than x and at x itself. double Eval(const ROOT::Math::IMultiGenFunction& f, const double* x, unsigned int icoord = 0, double h = 1E-8); Derivatives for multi-dimension functions. Evaluate the partial derivative of a multi-dim function; with respect coordinate x_icoord at the point x[]. double Eval(ROOT::Math::IParamFunction& f, double x, const double* p, unsigned int ipar = 0, double h = 1E-8). Evaluate the derivative with respect a parameter for one-dim parameteric function; at the point ( x,p[]) with respect the parameter p_ipar. double Eval(ROOT::Math::IParamMultiFunction& f, const double",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__Derivator.html:4810,adapt,adaptive,4810,root/html528/ROOT__Math__Derivator.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__Derivator.html,6,['adapt'],['adaptive']
Modifiability,"on ""Z"" is specified. A TPaletteAxis object is added to the histogram list of functions and; can be retrieved doing:. TPaletteAxis *palette = (TPaletteAxis*)h->GetListOfFunctions()->FindObject(""palette"");. then the pointer palette can be used to change the pallette attributes. Because the palette is created at painting time only, one must issue a:. gPad->Update();. before retrieving the palette pointer in order to create the palette. The following; macro gives an example. Picture; Source. {; TCanvas *c1 = new TCanvas(""c1"",""c1"",600,400);; TH2F *h2 = new TH2F(""h2"",""Example of a resized palette "",40,-4,4,40,-20,20);; Float_t px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; h2->Fill(px,5*py);; }; gStyle->SetPalette(1);; h2->Draw(""COLZ"");; gPad->Update();; TPaletteAxis *palette = (TPaletteAxis*)h2->GetListOfFunctions()->FindObject(""palette"");; palette->SetY2NDC(0.7);; return c1;; }; TPaletteAxis inherits from TBox and TPave. The methods; allowing to specify the palette position are inherited from these two classes. The palette can be interactively moved and resized. The context menu; can be used to set the axis attributes. It is possible to select a range on the axis to set the min/max in z; . Function Members (Methods); public:. TPaletteAxis(); TPaletteAxis(const TPaletteAxis& palette); TPaletteAxis(Double_t x1, Double_t y1, Double_t x2, Double_t y2, TH1* h); virtual~TPaletteAxis(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTPave::ConvertNDCtoPad(); virtual voidCopy(TObject& palette) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Dou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TPaletteAxis.html:1523,inherit,inherited,1523,root/html530/TPaletteAxis.html,https://root.cern,https://root.cern/root/html530/TPaletteAxis.html,5,['inherit'],['inherited']
Modifiability,"on ""Z"" is specified. A TPaletteAxis object is added to the histogram list of functions and; can be retrieved doing:. TPaletteAxis *palette = (TPaletteAxis*)h->GetListOfFunctions()->FindObject(""palette"");. then the pointer palette can be used to change the pallette attributes. Because the palette is created at painting time only, one must issue a:. gPad->Update();. before retrieving the palette pointer in order to create the palette. The following; macro gives an example. Picture; Source. {; TCanvas *c1 = new TCanvas(""c1"",""c1"",600,400);; TH2F *h2 = new TH2F(""h2"",""Example of a resized palette "",40,-4,4,40,-20,20);; Float_t px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; h2->Fill(px,5*py);; }; gStyle->SetPalette(1);; h2->Draw(""COLZ"");; gPad->Update();; TPaletteAxis *palette = (TPaletteAxis*)h2->GetListOfFunctions()->FindObject(""palette"");; palette->SetY2NDC(0.7);; return c1;; }; TPaletteAxis inherits from TBox and TPave. The methods; allowing to specify the palette position are inherited from these two classes. The palette can be interactively moved and resized. The context menu; can be used to set the axis attributes. It is possible to select a range on the axis to set the min/max in z; . Function Members (Methods); public:. virtual~TPaletteAxis(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTPave::ConvertNDCtoPad(); virtual voidCopy(TObject& palette) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidTPave::Draw(O",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPaletteAxis.html:1523,inherit,inherited,1523,root/html602/TPaletteAxis.html,https://root.cern,https://root.cern/root/html602/TPaletteAxis.html,4,['inherit'],['inherited']
Modifiability,"on &)=delete;  . Private Attributes; std::vector< TH3Pair_t > fHists;  ; std::unique_ptr< TGLHistPainter > fPainter;  . Friends; class TGLTH3CompositionPainter;  . Additional Inherited Members;  Public Attributes inherited from TArrayC; Char_t * fArray;  ;  Public Attributes inherited from TArray; Int_t fN;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TH3C; Double_t RetrieveBinContent (Int_t bin) const override;  Raw retrieval of bin content on internal data structure see convention for numbering bins in TH1::GetBin. ;  ; void UpdateBinContent (Int_t bin, Double_t content) override;  Raw update of bin content on internal data structure see convention for numbering bins in TH1::GetBin. ;  ;  Protected Member Functions inherited from TH3;  TH3 ();  Default constructor. ;  ;  TH3 (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins, Int_t nbinsy, const Double_t *ybins, Int_t nbinsz, const Double_t *zbins);  Constructor for variable bin size (along X, Y and Z axis) 3-D histograms using input arrays of type double. ;  ;  TH3 (const char *name, const char *title, Int_t nbinsx, const Float_t *xbins, Int_t nbinsy, const Float_t *ybins, Int_t nbinsz, const Float_t *zbins);  Constructor for variable bin size (along X, Y and Z axis) 3-D histograms using input arrays of type float. ;  ;  TH3 (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup);  Constructor for fix bin size 3-D histograms. ;  ; virtual Int_t BufferFill (Double_t x, Double_t y, Double_t z, Double_t w);  Accumulate arguments in buffer. ;  ; Int_t BufferFill (Double_t, Double_t) override;  accumulate arguments in buffer. ;  ; virtual Int_t BufferFill (Double_t, Double_t, Double_t);  ; void DoFillProfileProjection (TProfile2D *p2, const TAxis &a1, const TAxis &a2, const TAxis &a3, Int_t bin1, Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLTH3Composition.html:52247,variab,variable,52247,doc/master/classTGLTH3Composition.html,https://root.cern,https://root.cern/doc/master/classTGLTH3Composition.html,1,['variab'],['variable']
Modifiability,"on () const;  ;  Public Member Functions inherited from RooAbsPdf;  RooAbsPdf ();  Default constructor. ;  ;  RooAbsPdf (const char *name, const char *title, double minVal, double maxVal);  Constructor with name, title, and plot range. ;  ;  RooAbsPdf (const char *name, const char *title=nullptr);  Constructor with name and title only. ;  ;  ~RooAbsPdf () override;  Destructor. ;  ; double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Analytical integral with normalization (see RooAbsReal::analyticalIntegralWN() for further information). ;  ; virtual RooAbsGenContext * autoGenContext (const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool verbose=false, bool autoBinned=true, const char *binnedTag="""") const;  ; virtual RooAbsGenContext * binnedGenContext (const RooArgSet &vars, bool verbose=false) const;  Return a binned generator context. ;  ; bool canBeExtended () const;  If true, PDF can provide extended likelihood term. ;  ; std::unique_ptr< RooAbsArg > compileForNormSet (RooArgSet const &normSet, RooFit::Detail::CompileContext &ctx) const override;  ; RooFit::OwningPtr< RooAbsReal > createCdf (const RooArgSet &iset, const RooArgSet &nset=RooArgSet());  Create a cumulative distribution function of this p.d.f in terms of the observables listed in iset. ;  ; RooFit::OwningPtr< RooAbsReal > createCdf (const RooArgSet &iset, const RooCmdArg &arg1, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={});  Create an object that represents the integral of the function over one or more observables listed in iset. ;  ; virtual std::unique_ptr< RooAbsReal > createExpectedEventsFunc (const RooArgSet *nset) const;  Returns an object that represents the expected number of events for a given normalization set, similar to how createIntegral() return",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLognormal.html:3813,extend,extended,3813,doc/master/classRooLognormal.html,https://root.cern,https://root.cern/doc/master/classRooLognormal.html,1,['extend'],['extended']
Modifiability,"on ();  ; static const char * DeclFileName ();  . Protected Member Functions; TEveVector CalcBaseVec (Float_t alpha) const;  Returns point on the base of the cone with internal angle alpha: alpha = 0 -> max eta, alpha = pi/2 -> max phi, ... ;  ; TEveVector CalcBaseVec (Float_t eta, Float_t phi) const;  Returns point on the base of the cone with given eta and phi. ;  ; TEveVector CalcEtaPhiVec (Float_t eta, Float_t phi) const;  Fill TEveVector with eta and phi, magnitude 1. ;  ; Bool_t IsInTransitionRegion () const;  Returns true if the cone is in barrel / endcap transition region. ;  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TAttBBox;  TAttBBox (const TAttBBox &tab);  ; void AssertBBoxExtents (Float_t epsilon=0.005);  Assert extents of all sides of the bounding-box are at least epsilon. ;  ; void BBoxCheckPoint (const Float_t *p);  ; void BBoxCheckPoint (Float_t x, Float_t y, Float_t z);  ; void BBoxClear ();  Remove BBox information. ;  ; void BBoxInit (Float_t infinity=1e6);  Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max) ;  ; void BBoxZero (Float_t epsilon=0, Float_t x=0, Float_t y=0, Float_t z=0);  Create cube of volume (2*epsilon)^3 at (x,y,z). ;  . Protected Attributes; TEveVector fApex;  ; TEveVector fAxis;  ; Float_t fDEta;  ; Float_t fDPhi;  ; Float_t fEta;  ; TEveVector fLimits;  ; Int_t fNDiv;  ; Float_t fPhi;  ; Float_t fThetaC;  ;  Protected Attributes inherited from TEveShape; Bool_t fDrawFrame;  ; Color_t fFillColor;  ; B",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveJetCone.html:34408,inherit,inherited,34408,doc/master/classTEveJetCone.html,https://root.cern,https://root.cern/doc/master/classTEveJetCone.html,1,['inherit'],['inherited']
Modifiability,"on ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; RooLinkedList _argList;  Payload sub-arguments. ;  ; RooArgSet * _c = nullptr;  Payload RooArgSets. ;  ; double _d [2];  Payload doubles. ;  ; Int_t _i [2];  Payload integers. ;  ; TObject * _o [2];  Payload objects. ;  ; bool _prefixSubArgs = true;  Prefix sub-arguments with container name? ;  ; bool _procSubArgs = false;  If true argument requires recursive processing. ;  ; std::string _s [3];  Payload strings. ;  . Static Private Attributes; static const RooCmdArg _none;  Static instance of null object. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <RooCmdArg.h>. Inheritance diagram for RooCmdArg:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCmdArg.html:12780,inherit,inherited,12780,doc/master/classRooCmdArg.html,https://root.cern,https://root.cern/doc/master/classRooCmdArg.html,1,['inherit'],['inherited']
Modifiability,"on ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Member Functions;  TFileCollection (const TFileCollection &)=delete;  ; void FormatSize (Long64_t bytes, TString &um, Double_t &size) const;  Format size. ;  ; TFileCollection & operator= (const TFileCollection &)=delete;  ; void PrintDetailed (TString &showOnly) const;  Print detailed. ;  . Private Attributes; TString fDefaultTree;  ; THashList * fList;  ; TList * fMetaDataList;  ; Long64_t fNCorruptFiles;  ; Long64_t fNFiles;  ; Long64_t fNStagedFiles;  ; Long64_t fTotalSize;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TFileCollection.h>. Inheritance diagram for TFileCollection:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TFileCollection::EStatusBits. EnumeratorkRemoteCollection . Definition at line 59 of file TFileCollection.h. Constructor & Destructor Documentation. ◆ TFileCollection() [1/2]. TFileCollection::TFileCollection ; (; const TFileCollection & ; ). privatedelete . ◆ TFileCollection() [2/2]. TFileCollection::TFileCollection ; (; const char * ; name = nullptr, . const char * ; title = nullptr, . const char * ; textfile = nullptr, . Int_t ; nfiles = -1, . Int_t ; firstfile = 1 . ). TFileCollection constructor. ; Specify ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFileCollection.html:14668,inherit,inherited,14668,doc/master/classTFileCollection.html,https://root.cern,https://root.cern/doc/master/classTFileCollection.html,2,['inherit'],['inherited']
Modifiability,"on ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TArray; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TArray * ReadArray (TBuffer &b, const TClass *clReq);  Read TArray object from buffer. ;  ; static void WriteArray (TBuffer &b, const TArray *a);  Write TArray object to buffer. ;  . Protected Member Functions; Double_t RetrieveBinContent (Int_t bin) const override;  Raw retrieval of bin content on internal data structure see convention for numbering bins in TH1::GetBin. ;  ; void UpdateBinContent (Int_t bin, Double_t content) override;  Raw update of bin content on internal data structure see convention for numbering bins in TH1::GetBin. ;  ;  Protected Member Functions inherited from TH2;  TH2 ();  2-D histogram default constructor. ;  ;  TH2 (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins, Int_t nbinsy, const Double_t *ybins);  Constructor for Double_t variable bin size 2-D histograms. ;  ;  TH2 (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins, Int_t nbinsy, Double_t ylow, Double_t yup);  Constructor for variable bin size (along X axis) 2-D histograms using an input array of type double. ;  ;  TH2 (const char *name, const char *title, Int_t nbinsx, const Float_t *xbins, Int_t nbinsy, const Float_t *ybins);  Constructor for variable bin size (along X and Y axis) 2-D histograms using input arrays of type float. ;  ;  TH2 (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, const Double_t *ybins);  Constructor for Double_t variable bin size (along Y axis) 2-D histograms. ;  ;  TH2 (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup);  Constructor for fix bin size 2-D histograms. ;  ; virtual Int_t BufferFill (Double_t x, Double_t y, Double_t w)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2C.html:48904,variab,variable,48904,doc/master/classTH2C.html,https://root.cern,https://root.cern/doc/master/classTH2C.html,6,['variab'],['variable']
Modifiability,"on ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Int_t fId;  region id ;  ; TGPopupMenu * fPopup;  popup menu ;  ; TGToolTip * fTip;  tooltip ;  ;  Protected Attributes inherited from TGRegion; TGRegionData * fData;  . Private Member Functions; TGRegionWithId & operator= (const TGRegionWithId &)=delete;  . Additional Inherited Members;  Public Types inherited from TGRegion; enum  ERegionType { kRectangle; , kEllipse; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGRegion;  TGRegion (Bool_t);  Create empty region. ;  ; TGRegion CopyRegion () const;  Copy a region. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGRegionWithId.html:12663,inherit,inherited,12663,doc/master/classTGRegionWithId.html,https://root.cern,https://root.cern/doc/master/classTGRegionWithId.html,2,['inherit'],['inherited']
Modifiability,"on (1=1-Dim, 2=2-Dim,etc); Int_tfNdimensions[500]Number of array dimensions in each leaf; Bool_tfNeedLoading! If true, the current entry has not been loaded yet.; Int_tfNindexSize of fIndex; Int_tTFormula::fNoperNumber of operators; Int_tTFormula::fNparNumber of parameters; Int_tTFormula::fNstringNumber of different constants character strings; Int_tTFormula::fNumberformula number identifier; Int_tTFormula::fNvalNumber of different variables in expression; TOperOffset*TFormula::fOperOffset![fNOperOptimized] Offsets of operrands; Int_t*TFormula::fOperOptimized![fNOperOptimized] List of operators. (See documentation for changes made at version 7); TFormula::TFuncGTFormula::fOptimal!pointer to optimal function; Double_t*TFormula::fParams[fNpar] Array of fNpar parameters; TFormulaPrimitive**TFormula::fPredefined![fNPar] predefined function; Bool_tfQuickLoad! If true, branch GetEntry is only called when the entry number changes.; TStringTNamed::fTitleobject title; TTree*fTree! pointer to Tree; TTreeFormula*fVarIndexes[500][5]Pointer to a variable index.; static TFormula::(anonymous)TFormula::kAdd; static TTreeFormula::(anonymous)kAlias; static TTreeFormula::(anonymous)kAliasString; static TTreeFormula::(anonymous)kAlternate; static TTreeFormula::(anonymous)kAlternateString; static TFormula::(anonymous)TFormula::kAnd; static TFormula::(anonymous)TFormula::kBinary; static TFormula::(anonymous)TFormula::kBitAnd; static TFormula::(anonymous)TFormula::kBitOr; static TFormula::(anonymous)TFormula::kBoolOptimize; static TFormula::(anonymous)TFormula::kBoolOptimizeAnd; static TFormula::(anonymous)TFormula::kBoolOptimizeOr; static TFormula::(anonymous)TFormula::kBoolSet; static TFormula::(anonymous)TFormula::kConstant; static TFormula::(anonymous)TFormula::kData; static TTreeFormula::(anonymous)kDataMember; static TFormula::(anonymous)TFormula::kDefinedString; static TFormula::(anonymous)TFormula::kDefinedVariable; static TTreeFormula::(anonymous)kDirect; static TFormula::(anonymo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTreeFormula.html:17668,variab,variable,17668,root/html602/TTreeFormula.html,https://root.cern,https://root.cern/root/html602/TTreeFormula.html,2,['variab'],['variable']
Modifiability,"on (fXmin, fXmax) by the given; fEnhanceCoeff and transforms it back; Processed data are written into dest spectrum. Function parameters:; source-pointer to the vector of source spectrum, its length should; be size except for inverse FOURIER, FOUR-WALSh, FOUR-HAAR; transform. These need 2*size length to supply real and; imaginary coefficients.; destVector-pointer to the vector of dest data, its length should be; size except for direct FOURIER, FOUR-WALSh, FOUR-HAAR. These; need 2*size length to store real and imaginary coefficients. . Example of enhancement;  ; Function:; void TSpectrumTransform::Enhance(const double *fSource,; double; *fDest);  ; This function transforms the; source spectrum (for details see Transform function). Before the Enhance; function is called the class must be created by constructor and the type of the; transform as well as some other parameters must be set using a set of setter functions.; The Enhance function multiplies transformed coefficients in the given region; (fXmin, fXmax) by the given fEnhancCoeff and transforms it back. Enhanced data; are written into dest spectrum.;  ; Example� � script Enhance.c:.  ; Fig. 1 Original spectrum (black; line) and enhanced spectrum (red line) using Cosine transform (channels 0-1024; were multiplied by 2) ;  ; Script:;  ; // Example to illustrate; Enhance function (class TSpectrumTransform).; // To execute this example,; do; // root > .x Enhance.C;  ; void Enhance() {; �� Int_t i;; �� Double_t nbins =; 4096;; �� Double_t xmin� =; 0;; �� Double_t xmax� =; (Double_t)nbins;; �� Double_t * source = new Double_t[nbins];; �� Double_t * dest = new; Double_t[nbins];�� ; �� TH1F *h = new; TH1F(""h"",""Enhancement using Cosine transform"",nbins,xmin,xmax);; �� TH1F *d = new; TH1F(""d"","""",nbins,xmin,xmax);�������� ; �� TFile *f = new; TFile(""spectra\\TSpectrum.root"");; �� h=(TH1F*); f->Get(""transform1;1"");�� ; �� for (i = 0; i < nbins;; i++) source[i]=h->GetBinContent(i + 1);���� ; �� TCanvas *Transform1 = gROOT->Ge",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSpectrumTransform.html:21421,Enhance,Enhance,21421,root/html602/TSpectrumTransform.html,https://root.cern,https://root.cern/root/html602/TSpectrumTransform.html,2,['Enhance'],['Enhance']
Modifiability,"on *conf, Version_t vers); 1123 {; 1124 // Collection was saved member-wise; 1125 ; 1126 TConfigSTL *config = (TConfigSTL*)conf;; 1127 vers &= ~( TBufferFile::kStreamedMemberWise );; 1128 ; 1129 if( vers >= 8 ) {; 1130 ; 1131 TClass *oldClass = config->fOldClass;; 1132 ; 1133 TVirtualCollectionProxy *oldProxy = oldClass ? oldClass->GetCollectionProxy() : nullptr;; 1134 if (!oldProxy) {; 1135 // Missing information, broken file ... give up; 1136 return;; 1137 }; 1138 TClass *valueClass = oldProxy->GetValueClass();; 1139 Version_t vClVersion = buf.ReadVersionForMemberWise( valueClass );; 1140 ; 1141 TVirtualCollectionProxy::TPushPop helper( oldProxy, (char*)addr );; 1142 Int_t nobjects;; 1143 buf.ReadInt(nobjects);; 1144 void* alternative = oldProxy->Allocate(nobjects,true);; 1145 if (nobjects) {; 1146 TActionSequence *actions = oldProxy->GetReadMemberWiseActions( vClVersion );; 1147 ; 1148 char startbuf[TVirtualCollectionProxy::fgIteratorArenaSize];; 1149 char endbuf[TVirtualCollectionProxy::fgIteratorArenaSize];; 1150 void *begin = &(startbuf[0]);; 1151 void *end = &(endbuf[0]);; 1152 config->fCreateIterators(alternative, &begin, &end, oldProxy);; 1153 // We can not get here with a split vector of pointer, so we can indeed assume; 1154 // that actions->fConfiguration != null.; 1155 buf.ApplySequence(*actions, begin, end);; 1156 if (begin != &(startbuf[0])) {; 1157 // assert(end != endbuf);; 1158 config->fDeleteTwoIterators(begin,end);; 1159 }; 1160 }; 1161 oldProxy->Commit(alternative);; 1162 ; 1163 } else {; 1164 ; 1165 TClass *oldClass = config->fOldClass;; 1166 ; 1167 TVirtualCollectionProxy *oldProxy = oldClass ? oldClass->GetCollectionProxy() : nullptr;; 1168 if (!oldProxy) {; 1169 // Missing information, broken file ... give up; 1170 return;; 1171 }; 1172 ; 1173 TVirtualCollectionProxy::TPushPop helper( oldProxy, (char*)addr );; 1174 Int_t nobjects;; 1175 buf.ReadInt(nobjects);; 1176 void* env = oldProxy->Allocate(nobjects,true);; 1177 ; 1178 if (nobjects || v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:47912,config,config,47912,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"on - a HTML version of the source and header file as well as the CVS (the source management system used for the ROOT development) information of the files. The last line links the different parts of the current pages. Example of function documentation, with automatically generated LaTeX-like graphics. Inheritance tree, showing what the current class derives from, and which classes inherit from it. HTML version of the source file linking all types and most functions. 2 Getting Started; We begin by showing you how to use ROOT interactively. There are two examples to click through and learn how to use the GUI. We continue by using the command line, and explaining the coding conventions, global variables and the environment setup. If you have not installed ROOT, you can do so by following the instructions in the appendix, or on the ROOT web site: http://root.cern.ch/root/Availability.html; 2.1 Setting the Environment Variables; Before you can run ROOT you need to set the environment variable ROOTSYS and change your path to include root/bin and library path variables to include root/lib. Please note: the syntax is for bash, if you are running tcsh you will have to use setenv instead of export. Define the variable $ROOTSYS to the directory where you unpacked the ROOT:. $ export ROOTSYS=$HOME/root. Add ROOTSYS/bin to your PATH:. $ export PATH=$PATH:$ROOTSYS/bin. Setting the Library Path. On HP-UX, before executing the interactive module, you must set the library path:; $ export SHLIB_PATH=$SHLIB_PATH:$ROOTSYS/lib; On AIX, before executing the interactive module, you must set the library path:; $ [ -z ""$LIBPATH"" ] && export LIBPATH=/lib:/usr/lib; $ export LIBPATH=$LIBPATH:$ROOTSYS/lib; On Linux, Solaris, Alpha OSF and SGI, before executing the interactive module, you must set the library path:; $ export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$ROOTSYS/lib; On Solaris, in case your LD_LIBRARY_PATH is empty, you should set it:; $ export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$ROOTSYS/lib:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:30601,variab,variable,30601,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,5,"['Variab', 'variab']","['Variables', 'variable', 'variables']"
Modifiability,on ; : 105 | 12997.9 11959.7 0.0201517 0.00183944 43686.6 0; : 106 Minimum Test error found - save the configuration ; : 106 | 12890.1 11854.8 0.0204012 0.00181637 43045.8 0; : 107 Minimum Test error found - save the configuration ; : 107 | 12783.3 11750.6 0.0200273 0.00179591 43880.4 0; : 108 Minimum Test error found - save the configuration ; : 108 | 12679.4 11643.6 0.0200105 0.00179336 43914.7 0; : 109 Minimum Test error found - save the configuration ; : 109 | 12570.9 11543.2 0.0200071 0.00179343 43923.1 0; : 110 Minimum Test error found - save the configuration ; : 110 | 12468 11440.7 0.0200047 0.00179413 43930.5 0; : 111 Minimum Test error found - save the configuration ; : 111 | 12365.7 11337.8 0.0200081 0.00179319 43920.1 0; : 112 Minimum Test error found - save the configuration ; : 112 | 12261.9 11237.7 0.02002 0.00179362 43892.3 0; : 113 Minimum Test error found - save the configuration ; : 113 | 12160 11139.2 0.0201211 0.00180176 43669.7 0; : 114 Minimum Test error found - save the configuration ; : 114 | 12060.2 11039.6 0.020348 0.00184935 43246.4 0; : 115 Minimum Test error found - save the configuration ; : 115 | 11961.2 10939.8 0.0202696 0.00181495 43349.5 0; : 116 Minimum Test error found - save the configuration ; : 116 | 11860.6 10843.2 0.0200362 0.00180159 43872.5 0; : 117 Minimum Test error found - save the configuration ; : 117 | 11765.1 10743.9 0.0200658 0.00179585 43787.7 0; : 118 Minimum Test error found - save the configuration ; : 118 | 11664.5 10650.2 0.0200137 0.00179245 43904.8 0; : 119 Minimum Test error found - save the configuration ; : 119 | 11569.9 10554.7 0.0200191 0.00179411 43895.9 0; : 120 Minimum Test error found - save the configuration ; : 120 | 11473 10462 0.0200241 0.00179418 43883.8 0; : 121 Minimum Test error found - save the configuration ; : 121 | 11379.1 10368.9 0.0200276 0.00179623 43880.4 0; : 122 Minimum Test error found - save the configuration ; : 122 | 11283.5 10279 0.0203977 0.00185462 43142.8 0; : 123 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:23822,config,configuration,23822,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 115 | 11961.2 10939.8 0.0202696 0.00181495 43349.5 0; : 116 Minimum Test error found - save the configuration ; : 116 | 11860.6 10843.2 0.0200362 0.00180159 43872.5 0; : 117 Minimum Test error found - save the configuration ; : 117 | 11765.1 10743.9 0.0200658 0.00179585 43787.7 0; : 118 Minimum Test error found - save the configuration ; : 118 | 11664.5 10650.2 0.0200137 0.00179245 43904.8 0; : 119 Minimum Test error found - save the configuration ; : 119 | 11569.9 10554.7 0.0200191 0.00179411 43895.9 0; : 120 Minimum Test error found - save the configuration ; : 120 | 11473 10462 0.0200241 0.00179418 43883.8 0; : 121 Minimum Test error found - save the configuration ; : 121 | 11379.1 10368.9 0.0200276 0.00179623 43880.4 0; : 122 Minimum Test error found - save the configuration ; : 122 | 11283.5 10279 0.0203977 0.00185462 43142.8 0; : 123 Minimum Test error found - save the configuration ; : 123 | 11193.7 10184.6 0.0202751 0.00180182 43305.7 0; : 124 Minimum Test error found - save the configuration ; : 124 | 11099.9 10093.3 0.0200203 0.00180095 43909.4 0; : 125 Minimum Test error found - save the configuration ; : 125 | 11007.6 10003.9 0.020012 0.00179997 43927 0; : 126 Minimum Test error found - save the configuration ; : 126 | 10916.6 9915.56 0.020034 0.00179861 43870.8 0; : 127 Minimum Test error found - save the configuration ; : 127 | 10828 9825.55 0.020018 0.00180003 43912.6 0; : 128 Minimum Test error found - save the configuration ; : 128 | 10738.5 9736.79 0.020043 0.00181097 43878.8 0; : 129 Minimum Test error found - save the configuration ; : 129 | 10648.9 9650.52 0.0200265 0.0017972 43885.3 0; : 130 Minimum Test error found - save the configuration ; : 130 | 10561.5 9564.19 0.0200344 0.00180234 43878.7 0; : 131 Minimum Test error found - save the configuration ; : 131 | 10475.3 9477.45 0.0200356 0.00180107 43872.9 0; : 132 Minimum Test error found - save the configuration ; : 132 | 10388.3 9392.54 0.0200847 0.0018148 43788 0; : 133 Minimum Test e,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:24955,config,configuration,24955,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 116 | 11860.6 10843.2 0.0200362 0.00180159 43872.5 0; : 117 Minimum Test error found - save the configuration ; : 117 | 11765.1 10743.9 0.0200658 0.00179585 43787.7 0; : 118 Minimum Test error found - save the configuration ; : 118 | 11664.5 10650.2 0.0200137 0.00179245 43904.8 0; : 119 Minimum Test error found - save the configuration ; : 119 | 11569.9 10554.7 0.0200191 0.00179411 43895.9 0; : 120 Minimum Test error found - save the configuration ; : 120 | 11473 10462 0.0200241 0.00179418 43883.8 0; : 121 Minimum Test error found - save the configuration ; : 121 | 11379.1 10368.9 0.0200276 0.00179623 43880.4 0; : 122 Minimum Test error found - save the configuration ; : 122 | 11283.5 10279 0.0203977 0.00185462 43142.8 0; : 123 Minimum Test error found - save the configuration ; : 123 | 11193.7 10184.6 0.0202751 0.00180182 43305.7 0; : 124 Minimum Test error found - save the configuration ; : 124 | 11099.9 10093.3 0.0200203 0.00180095 43909.4 0; : 125 Minimum Test error found - save the configuration ; : 125 | 11007.6 10003.9 0.020012 0.00179997 43927 0; : 126 Minimum Test error found - save the configuration ; : 126 | 10916.6 9915.56 0.020034 0.00179861 43870.8 0; : 127 Minimum Test error found - save the configuration ; : 127 | 10828 9825.55 0.020018 0.00180003 43912.6 0; : 128 Minimum Test error found - save the configuration ; : 128 | 10738.5 9736.79 0.020043 0.00181097 43878.8 0; : 129 Minimum Test error found - save the configuration ; : 129 | 10648.9 9650.52 0.0200265 0.0017972 43885.3 0; : 130 Minimum Test error found - save the configuration ; : 130 | 10561.5 9564.19 0.0200344 0.00180234 43878.7 0; : 131 Minimum Test error found - save the configuration ; : 131 | 10475.3 9477.45 0.0200356 0.00180107 43872.9 0; : 132 Minimum Test error found - save the configuration ; : 132 | 10388.3 9392.54 0.0200847 0.0018148 43788 0; : 133 Minimum Test error found - save the configuration ; : 133 | 10303 9307.9 0.0200258 0.00180758 43912.1 0; : 134 Minimum Test erro,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:25069,config,configuration,25069,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 138 | 9887.13 8895.8 0.0200521 0.00180887 43851.8 0; : 139 Minimum Test error found - save the configuration ; : 139 | 9804.58 8815.4 0.020043 0.00180744 43870.3 0; : 140 Minimum Test error found - save the configuration ; : 140 | 9722.87 8737.3 0.0202214 0.00190002 43664.9 0; : 141 Minimum Test error found - save the configuration ; : 141 | 9644.27 8657.79 0.020429 0.00182729 43006.8 0; : 142 Minimum Test error found - save the configuration ; : 142 | 9564.39 8579.88 0.0204803 0.00186473 42974.8 0; : 143 Minimum Test error found - save the configuration ; : 143 | 9485.56 8503.01 0.0205275 0.0018356 42799.2 0; : 144 Minimum Test error found - save the configuration ; : 144 | 9408.47 8425.29 0.0205008 0.00183704 42863.9 0; : 145 Minimum Test error found - save the configuration ; : 145 | 9331.33 8347.95 0.0201933 0.00180744 43511.7 0; : 146 Minimum Test error found - save the configuration ; : 146 | 9254.79 8271.21 0.0201415 0.00180723 43634.1 0; : 147 Minimum Test error found - save the configuration ; : 147 | 9177.56 8197 0.0201152 0.00181664 43719.3 0; : 148 Minimum Test error found - save the configuration ; : 148 | 9102.51 8122.82 0.0201505 0.00182259 43649.3 0; : 149 Minimum Test error found - save the configuration ; : 149 | 9029.04 8047.39 0.0200933 0.00180584 43745.9 0; : 150 Minimum Test error found - save the configuration ; : 150 | 8953.47 7974.78 0.0200512 0.00180093 43835 0; : 151 Minimum Test error found - save the configuration ; : 151 | 8880.6 7901.79 0.0200576 0.00180346 43825.6 0; : 152 Minimum Test error found - save the configuration ; : 152 | 8806.61 7831.08 0.0200492 0.00180366 43846.4 0; : 153 Minimum Test error found - save the configuration ; : 153 | 8736.73 7757.21 0.0200718 0.00180708 43800.2 0; : 154 Minimum Test error found - save the configuration ; : 154 | 8663.76 7685.97 0.0200413 0.00179705 43849.5 0; : 155 Minimum Test error found - save the configuration ; : 155 | 8592.21 7616.06 0.0200532 0.00180372 43837 0; : 156 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:27552,config,configuration,27552,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 140 | 9722.87 8737.3 0.0202214 0.00190002 43664.9 0; : 141 Minimum Test error found - save the configuration ; : 141 | 9644.27 8657.79 0.020429 0.00182729 43006.8 0; : 142 Minimum Test error found - save the configuration ; : 142 | 9564.39 8579.88 0.0204803 0.00186473 42974.8 0; : 143 Minimum Test error found - save the configuration ; : 143 | 9485.56 8503.01 0.0205275 0.0018356 42799.2 0; : 144 Minimum Test error found - save the configuration ; : 144 | 9408.47 8425.29 0.0205008 0.00183704 42863.9 0; : 145 Minimum Test error found - save the configuration ; : 145 | 9331.33 8347.95 0.0201933 0.00180744 43511.7 0; : 146 Minimum Test error found - save the configuration ; : 146 | 9254.79 8271.21 0.0201415 0.00180723 43634.1 0; : 147 Minimum Test error found - save the configuration ; : 147 | 9177.56 8197 0.0201152 0.00181664 43719.3 0; : 148 Minimum Test error found - save the configuration ; : 148 | 9102.51 8122.82 0.0201505 0.00182259 43649.3 0; : 149 Minimum Test error found - save the configuration ; : 149 | 9029.04 8047.39 0.0200933 0.00180584 43745.9 0; : 150 Minimum Test error found - save the configuration ; : 150 | 8953.47 7974.78 0.0200512 0.00180093 43835 0; : 151 Minimum Test error found - save the configuration ; : 151 | 8880.6 7901.79 0.0200576 0.00180346 43825.6 0; : 152 Minimum Test error found - save the configuration ; : 152 | 8806.61 7831.08 0.0200492 0.00180366 43846.4 0; : 153 Minimum Test error found - save the configuration ; : 153 | 8736.73 7757.21 0.0200718 0.00180708 43800.2 0; : 154 Minimum Test error found - save the configuration ; : 154 | 8663.76 7685.97 0.0200413 0.00179705 43849.5 0; : 155 Minimum Test error found - save the configuration ; : 155 | 8592.21 7616.06 0.0200532 0.00180372 43837 0; : 156 Minimum Test error found - save the configuration ; : 156 | 8521.8 7546.54 0.0202528 0.00182096 43403 0; : 157 Minimum Test error found - save the configuration ; : 157 | 8451.39 7478.5 0.0200697 0.00181123 43815.3 0; : 158 Minimum Te,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:27777,config,configuration,27777,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 144 | 9408.47 8425.29 0.0205008 0.00183704 42863.9 0; : 145 Minimum Test error found - save the configuration ; : 145 | 9331.33 8347.95 0.0201933 0.00180744 43511.7 0; : 146 Minimum Test error found - save the configuration ; : 146 | 9254.79 8271.21 0.0201415 0.00180723 43634.1 0; : 147 Minimum Test error found - save the configuration ; : 147 | 9177.56 8197 0.0201152 0.00181664 43719.3 0; : 148 Minimum Test error found - save the configuration ; : 148 | 9102.51 8122.82 0.0201505 0.00182259 43649.3 0; : 149 Minimum Test error found - save the configuration ; : 149 | 9029.04 8047.39 0.0200933 0.00180584 43745.9 0; : 150 Minimum Test error found - save the configuration ; : 150 | 8953.47 7974.78 0.0200512 0.00180093 43835 0; : 151 Minimum Test error found - save the configuration ; : 151 | 8880.6 7901.79 0.0200576 0.00180346 43825.6 0; : 152 Minimum Test error found - save the configuration ; : 152 | 8806.61 7831.08 0.0200492 0.00180366 43846.4 0; : 153 Minimum Test error found - save the configuration ; : 153 | 8736.73 7757.21 0.0200718 0.00180708 43800.2 0; : 154 Minimum Test error found - save the configuration ; : 154 | 8663.76 7685.97 0.0200413 0.00179705 43849.5 0; : 155 Minimum Test error found - save the configuration ; : 155 | 8592.21 7616.06 0.0200532 0.00180372 43837 0; : 156 Minimum Test error found - save the configuration ; : 156 | 8521.8 7546.54 0.0202528 0.00182096 43403 0; : 157 Minimum Test error found - save the configuration ; : 157 | 8451.39 7478.5 0.0200697 0.00181123 43815.3 0; : 158 Minimum Test error found - save the configuration ; : 158 | 8382.56 7410.24 0.020077 0.00181311 43802.4 0; : 159 Minimum Test error found - save the configuration ; : 159 | 8315.02 7340.56 0.020041 0.00180956 43880.3 0; : 160 Minimum Test error found - save the configuration ; : 160 | 8246.43 7272.24 0.0202099 0.0018629 43603.8 0; : 161 Minimum Test error found - save the configuration ; : 161 | 8177.63 7206.25 0.0206118 0.00188237 42713.4 0; : 162 Minimum Te,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:28230,config,configuration,28230,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 145 | 9331.33 8347.95 0.0201933 0.00180744 43511.7 0; : 146 Minimum Test error found - save the configuration ; : 146 | 9254.79 8271.21 0.0201415 0.00180723 43634.1 0; : 147 Minimum Test error found - save the configuration ; : 147 | 9177.56 8197 0.0201152 0.00181664 43719.3 0; : 148 Minimum Test error found - save the configuration ; : 148 | 9102.51 8122.82 0.0201505 0.00182259 43649.3 0; : 149 Minimum Test error found - save the configuration ; : 149 | 9029.04 8047.39 0.0200933 0.00180584 43745.9 0; : 150 Minimum Test error found - save the configuration ; : 150 | 8953.47 7974.78 0.0200512 0.00180093 43835 0; : 151 Minimum Test error found - save the configuration ; : 151 | 8880.6 7901.79 0.0200576 0.00180346 43825.6 0; : 152 Minimum Test error found - save the configuration ; : 152 | 8806.61 7831.08 0.0200492 0.00180366 43846.4 0; : 153 Minimum Test error found - save the configuration ; : 153 | 8736.73 7757.21 0.0200718 0.00180708 43800.2 0; : 154 Minimum Test error found - save the configuration ; : 154 | 8663.76 7685.97 0.0200413 0.00179705 43849.5 0; : 155 Minimum Test error found - save the configuration ; : 155 | 8592.21 7616.06 0.0200532 0.00180372 43837 0; : 156 Minimum Test error found - save the configuration ; : 156 | 8521.8 7546.54 0.0202528 0.00182096 43403 0; : 157 Minimum Test error found - save the configuration ; : 157 | 8451.39 7478.5 0.0200697 0.00181123 43815.3 0; : 158 Minimum Test error found - save the configuration ; : 158 | 8382.56 7410.24 0.020077 0.00181311 43802.4 0; : 159 Minimum Test error found - save the configuration ; : 159 | 8315.02 7340.56 0.020041 0.00180956 43880.3 0; : 160 Minimum Test error found - save the configuration ; : 160 | 8246.43 7272.24 0.0202099 0.0018629 43603.8 0; : 161 Minimum Test error found - save the configuration ; : 161 | 8177.63 7206.25 0.0206118 0.00188237 42713.4 0; : 162 Minimum Test error found - save the configuration ; : 162 | 8110.93 7140.22 0.0205527 0.00185442 42784.7 0; : 163 Minimum Te,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:28344,config,configuration,28344,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 146 | 9254.79 8271.21 0.0201415 0.00180723 43634.1 0; : 147 Minimum Test error found - save the configuration ; : 147 | 9177.56 8197 0.0201152 0.00181664 43719.3 0; : 148 Minimum Test error found - save the configuration ; : 148 | 9102.51 8122.82 0.0201505 0.00182259 43649.3 0; : 149 Minimum Test error found - save the configuration ; : 149 | 9029.04 8047.39 0.0200933 0.00180584 43745.9 0; : 150 Minimum Test error found - save the configuration ; : 150 | 8953.47 7974.78 0.0200512 0.00180093 43835 0; : 151 Minimum Test error found - save the configuration ; : 151 | 8880.6 7901.79 0.0200576 0.00180346 43825.6 0; : 152 Minimum Test error found - save the configuration ; : 152 | 8806.61 7831.08 0.0200492 0.00180366 43846.4 0; : 153 Minimum Test error found - save the configuration ; : 153 | 8736.73 7757.21 0.0200718 0.00180708 43800.2 0; : 154 Minimum Test error found - save the configuration ; : 154 | 8663.76 7685.97 0.0200413 0.00179705 43849.5 0; : 155 Minimum Test error found - save the configuration ; : 155 | 8592.21 7616.06 0.0200532 0.00180372 43837 0; : 156 Minimum Test error found - save the configuration ; : 156 | 8521.8 7546.54 0.0202528 0.00182096 43403 0; : 157 Minimum Test error found - save the configuration ; : 157 | 8451.39 7478.5 0.0200697 0.00181123 43815.3 0; : 158 Minimum Test error found - save the configuration ; : 158 | 8382.56 7410.24 0.020077 0.00181311 43802.4 0; : 159 Minimum Test error found - save the configuration ; : 159 | 8315.02 7340.56 0.020041 0.00180956 43880.3 0; : 160 Minimum Test error found - save the configuration ; : 160 | 8246.43 7272.24 0.0202099 0.0018629 43603.8 0; : 161 Minimum Test error found - save the configuration ; : 161 | 8177.63 7206.25 0.0206118 0.00188237 42713.4 0; : 162 Minimum Test error found - save the configuration ; : 162 | 8110.93 7140.22 0.0205527 0.00185442 42784.7 0; : 163 Minimum Test error found - save the configuration ; : 163 | 8044.58 7074.62 0.0205803 0.00184203 42693.3 0; : 164 Minimum Te,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:28458,config,configuration,28458,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 161 | 8177.63 7206.25 0.0206118 0.00188237 42713.4 0; : 162 Minimum Test error found - save the configuration ; : 162 | 8110.93 7140.22 0.0205527 0.00185442 42784.7 0; : 163 Minimum Test error found - save the configuration ; : 163 | 8044.58 7074.62 0.0205803 0.00184203 42693.3 0; : 164 Minimum Test error found - save the configuration ; : 164 | 7979.59 7008.2 0.0205615 0.00181915 42684 0; : 165 Minimum Test error found - save the configuration ; : 165 | 7913.46 6943.53 0.0204022 0.00180585 43019.2 0; : 166 Minimum Test error found - save the configuration ; : 166 | 7848.36 6879.88 0.0204674 0.00182719 42918 0; : 167 Minimum Test error found - save the configuration ; : 167 | 7784.6 6815.88 0.0200635 0.00180544 43816.2 0; : 168 Minimum Test error found - save the configuration ; : 168 | 7720.74 6752.64 0.0200614 0.00180502 43820.3 0; : 169 Minimum Test error found - save the configuration ; : 169 | 7657.59 6690.04 0.0201291 0.00181427 43680.6 0; : 170 Minimum Test error found - save the configuration ; : 170 | 7595.66 6626.52 0.0200669 0.00181066 43820.7 0; : 171 Minimum Test error found - save the configuration ; : 171 | 7532.11 6565.9 0.0201114 0.00182063 43737.9 0; : 172 Minimum Test error found - save the configuration ; : 172 | 7471.23 6504.71 0.0200897 0.00182205 43793.2 0; : 173 Minimum Test error found - save the configuration ; : 173 | 7410.53 6443.41 0.0204177 0.00187787 43150.4 0; : 174 Minimum Test error found - save the configuration ; : 174 | 7349.1 6383.77 0.0200981 0.00181163 43748.3 0; : 175 Minimum Test error found - save the configuration ; : 175 | 7289.39 6324 0.0200682 0.0018131 43823.4 0; : 176 Minimum Test error found - save the configuration ; : 176 | 7230 6264.47 0.0200687 0.00181285 43821.5 0; : 177 Minimum Test error found - save the configuration ; : 177 | 7171.82 6204.18 0.0200767 0.00181262 43801.8 0; : 178 Minimum Test error found - save the configuration ; : 178 | 7111.03 6147.7 0.0200764 0.00181324 43803.9 0; : 179 Minimum Tes,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:30153,config,configuration,30153,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 162 | 8110.93 7140.22 0.0205527 0.00185442 42784.7 0; : 163 Minimum Test error found - save the configuration ; : 163 | 8044.58 7074.62 0.0205803 0.00184203 42693.3 0; : 164 Minimum Test error found - save the configuration ; : 164 | 7979.59 7008.2 0.0205615 0.00181915 42684 0; : 165 Minimum Test error found - save the configuration ; : 165 | 7913.46 6943.53 0.0204022 0.00180585 43019.2 0; : 166 Minimum Test error found - save the configuration ; : 166 | 7848.36 6879.88 0.0204674 0.00182719 42918 0; : 167 Minimum Test error found - save the configuration ; : 167 | 7784.6 6815.88 0.0200635 0.00180544 43816.2 0; : 168 Minimum Test error found - save the configuration ; : 168 | 7720.74 6752.64 0.0200614 0.00180502 43820.3 0; : 169 Minimum Test error found - save the configuration ; : 169 | 7657.59 6690.04 0.0201291 0.00181427 43680.6 0; : 170 Minimum Test error found - save the configuration ; : 170 | 7595.66 6626.52 0.0200669 0.00181066 43820.7 0; : 171 Minimum Test error found - save the configuration ; : 171 | 7532.11 6565.9 0.0201114 0.00182063 43737.9 0; : 172 Minimum Test error found - save the configuration ; : 172 | 7471.23 6504.71 0.0200897 0.00182205 43793.2 0; : 173 Minimum Test error found - save the configuration ; : 173 | 7410.53 6443.41 0.0204177 0.00187787 43150.4 0; : 174 Minimum Test error found - save the configuration ; : 174 | 7349.1 6383.77 0.0200981 0.00181163 43748.3 0; : 175 Minimum Test error found - save the configuration ; : 175 | 7289.39 6324 0.0200682 0.0018131 43823.4 0; : 176 Minimum Test error found - save the configuration ; : 176 | 7230 6264.47 0.0200687 0.00181285 43821.5 0; : 177 Minimum Test error found - save the configuration ; : 177 | 7171.82 6204.18 0.0200767 0.00181262 43801.8 0; : 178 Minimum Test error found - save the configuration ; : 178 | 7111.03 6147.7 0.0200764 0.00181324 43803.9 0; : 179 Minimum Test error found - save the configuration ; : 179 | 7053.87 6090.24 0.0200835 0.0018163 43794.3 0; : 180 Minimum Test,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:30267,config,configuration,30267,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 187 | 6606 5645.81 0.0200891 0.00180584 43755.9 0; : 188 Minimum Test error found - save the configuration ; : 188 | 6552.47 5592.04 0.0200898 0.00181079 43766 0; : 189 Minimum Test error found - save the configuration ; : 189 | 6500.15 5537.2 0.0201183 0.00181031 43696.6 0; : 190 Minimum Test error found - save the configuration ; : 190 | 6444.37 5487.05 0.0200871 0.00180586 43760.7 0; : 191 Minimum Test error found - save the configuration ; : 191 | 6394.21 5433.57 0.0200994 0.00180152 43720.8 0; : 192 Minimum Test error found - save the configuration ; : 192 | 6340.82 5382.29 0.0201748 0.00181779 43580.1 0; : 193 Minimum Test error found - save the configuration ; : 193 | 6289.73 5330.56 0.0202017 0.00183095 43547.4 0; : 194 Minimum Test error found - save the configuration ; : 194 | 6238.01 5279.82 0.0201002 0.00180964 43738.5 0; : 195 Minimum Test error found - save the configuration ; : 195 | 6186.17 5231.06 0.0200801 0.00180696 43780.1 0; : 196 Minimum Test error found - save the configuration ; : 196 | 6137.18 5180.37 0.0200943 0.00180721 43746.7 0; : 197 Minimum Test error found - save the configuration ; : 197 | 6087.3 5129.97 0.0200908 0.00180793 43756.8 0; : 198 Minimum Test error found - save the configuration ; : 198 | 6036.37 5081.81 0.0200859 0.00180009 43749.7 0; : 199 Minimum Test error found - save the configuration ; : 199 | 5987.5 5033.69 0.0200862 0.001808 43768 0; : 200 Minimum Test error found - save the configuration ; : 200 | 5938.96 4985.44 0.0201058 0.00181448 43736.6 0; : 201 Minimum Test error found - save the configuration ; : 201 | 5891.43 4936.26 0.0201175 0.00184013 43770 0; : 202 Minimum Test error found - save the configuration ; : 202 | 5842.14 4889.6 0.0203335 0.00187992 43352.1 0; : 203 Minimum Test error found - save the configuration ; : 203 | 5794.67 4843.13 0.0203128 0.00181164 43240.6 0; : 204 Minimum Test error found - save the configuration ; : 204 | 5748.17 4795.8 0.0204843 0.00186518 42966.5 0; : 205 Minimum Tes,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:33096,config,configuration,33096,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 192 | 6340.82 5382.29 0.0201748 0.00181779 43580.1 0; : 193 Minimum Test error found - save the configuration ; : 193 | 6289.73 5330.56 0.0202017 0.00183095 43547.4 0; : 194 Minimum Test error found - save the configuration ; : 194 | 6238.01 5279.82 0.0201002 0.00180964 43738.5 0; : 195 Minimum Test error found - save the configuration ; : 195 | 6186.17 5231.06 0.0200801 0.00180696 43780.1 0; : 196 Minimum Test error found - save the configuration ; : 196 | 6137.18 5180.37 0.0200943 0.00180721 43746.7 0; : 197 Minimum Test error found - save the configuration ; : 197 | 6087.3 5129.97 0.0200908 0.00180793 43756.8 0; : 198 Minimum Test error found - save the configuration ; : 198 | 6036.37 5081.81 0.0200859 0.00180009 43749.7 0; : 199 Minimum Test error found - save the configuration ; : 199 | 5987.5 5033.69 0.0200862 0.001808 43768 0; : 200 Minimum Test error found - save the configuration ; : 200 | 5938.96 4985.44 0.0201058 0.00181448 43736.6 0; : 201 Minimum Test error found - save the configuration ; : 201 | 5891.43 4936.26 0.0201175 0.00184013 43770 0; : 202 Minimum Test error found - save the configuration ; : 202 | 5842.14 4889.6 0.0203335 0.00187992 43352.1 0; : 203 Minimum Test error found - save the configuration ; : 203 | 5794.67 4843.13 0.0203128 0.00181164 43240.6 0; : 204 Minimum Test error found - save the configuration ; : 204 | 5748.17 4795.8 0.0204843 0.00186518 42966.5 0; : 205 Minimum Test error found - save the configuration ; : 205 | 5701.17 4749.25 0.0206407 0.00185898 42594.5 0; : 206 Minimum Test error found - save the configuration ; : 206 | 5653.72 4704.65 0.0205823 0.00187697 42768.5 0; : 207 Minimum Test error found - save the configuration ; : 207 | 5608.52 4659.29 0.0205316 0.00181286 42737.8 0; : 208 Minimum Test error found - save the configuration ; : 208 | 5563.22 4613.51 0.0205774 0.00187424 42773.5 0; : 209 Minimum Test error found - save the configuration ; : 209 | 5517.39 4568.89 0.0206693 0.00189663 42615.1 0; : 210 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:33660,config,configuration,33660,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 209 | 5517.39 4568.89 0.0206693 0.00189663 42615.1 0; : 210 Minimum Test error found - save the configuration ; : 210 | 5472.46 4524.65 0.0206417 0.0018492 42570.3 0; : 211 Minimum Test error found - save the configuration ; : 211 | 5426.81 4482.4 0.0206443 0.00186291 42595.5 0; : 212 Minimum Test error found - save the configuration ; : 212 | 5384.28 4437.99 0.020536 0.00181976 42743.7 0; : 213 Minimum Test error found - save the configuration ; : 213 | 5339.22 4395.34 0.0201574 0.00182356 43635.1 0; : 214 Minimum Test error found - save the configuration ; : 214 | 5296.23 4352.84 0.0204206 0.00182076 43011.2 0; : 215 Minimum Test error found - save the configuration ; : 215 | 5253.06 4310.52 0.0202066 0.00181743 43504 0; : 216 Minimum Test error found - save the configuration ; : 216 | 5210.68 4267.22 0.0201957 0.00182236 43541.2 0; : 217 Minimum Test error found - save the configuration ; : 217 | 5167.13 4226.2 0.0205987 0.00192627 42843.8 0; : 218 Minimum Test error found - save the configuration ; : 218 | 5125.25 4184.98 0.0205604 0.00182022 42689.1 0; : 219 Minimum Test error found - save the configuration ; : 219 | 5082.85 4144.99 0.0201692 0.00184819 43665.6 0; : 220 Minimum Test error found - save the configuration ; : 220 | 5041.97 4104.3 0.0201733 0.00183631 43627.6 0; : 221 Minimum Test error found - save the configuration ; : 221 | 5000.63 4064.07 0.0203116 0.00186316 43364 0; : 222 Minimum Test error found - save the configuration ; : 222 | 4960.27 4023.61 0.020233 0.0018342 43481.1 0; : 223 Minimum Test error found - save the configuration ; : 223 | 4919.35 3984.02 0.0201371 0.00181764 43669.4 0; : 224 Minimum Test error found - save the configuration ; : 224 | 4878.53 3945.89 0.0203286 0.0018483 43289.4 0; : 225 Minimum Test error found - save the configuration ; : 225 | 4840.32 3905.84 0.0201762 0.00181162 43562 0; : 226 Minimum Test error found - save the configuration ; : 226 | 4799.06 3868.52 0.0201024 0.00180874 43731 0; : 227 Minimum Tes,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:35588,config,configuration,35588,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 210 | 5472.46 4524.65 0.0206417 0.0018492 42570.3 0; : 211 Minimum Test error found - save the configuration ; : 211 | 5426.81 4482.4 0.0206443 0.00186291 42595.5 0; : 212 Minimum Test error found - save the configuration ; : 212 | 5384.28 4437.99 0.020536 0.00181976 42743.7 0; : 213 Minimum Test error found - save the configuration ; : 213 | 5339.22 4395.34 0.0201574 0.00182356 43635.1 0; : 214 Minimum Test error found - save the configuration ; : 214 | 5296.23 4352.84 0.0204206 0.00182076 43011.2 0; : 215 Minimum Test error found - save the configuration ; : 215 | 5253.06 4310.52 0.0202066 0.00181743 43504 0; : 216 Minimum Test error found - save the configuration ; : 216 | 5210.68 4267.22 0.0201957 0.00182236 43541.2 0; : 217 Minimum Test error found - save the configuration ; : 217 | 5167.13 4226.2 0.0205987 0.00192627 42843.8 0; : 218 Minimum Test error found - save the configuration ; : 218 | 5125.25 4184.98 0.0205604 0.00182022 42689.1 0; : 219 Minimum Test error found - save the configuration ; : 219 | 5082.85 4144.99 0.0201692 0.00184819 43665.6 0; : 220 Minimum Test error found - save the configuration ; : 220 | 5041.97 4104.3 0.0201733 0.00183631 43627.6 0; : 221 Minimum Test error found - save the configuration ; : 221 | 5000.63 4064.07 0.0203116 0.00186316 43364 0; : 222 Minimum Test error found - save the configuration ; : 222 | 4960.27 4023.61 0.020233 0.0018342 43481.1 0; : 223 Minimum Test error found - save the configuration ; : 223 | 4919.35 3984.02 0.0201371 0.00181764 43669.4 0; : 224 Minimum Test error found - save the configuration ; : 224 | 4878.53 3945.89 0.0203286 0.0018483 43289.4 0; : 225 Minimum Test error found - save the configuration ; : 225 | 4840.32 3905.84 0.0201762 0.00181162 43562 0; : 226 Minimum Test error found - save the configuration ; : 226 | 4799.06 3868.52 0.0201024 0.00180874 43731 0; : 227 Minimum Test error found - save the configuration ; : 227 | 4760.29 3830.98 0.0201923 0.00181512 43532.4 0; : 228 Minimum Tes,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:35702,config,configuration,35702,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 223 | 4919.35 3984.02 0.0201371 0.00181764 43669.4 0; : 224 Minimum Test error found - save the configuration ; : 224 | 4878.53 3945.89 0.0203286 0.0018483 43289.4 0; : 225 Minimum Test error found - save the configuration ; : 225 | 4840.32 3905.84 0.0201762 0.00181162 43562 0; : 226 Minimum Test error found - save the configuration ; : 226 | 4799.06 3868.52 0.0201024 0.00180874 43731 0; : 227 Minimum Test error found - save the configuration ; : 227 | 4760.29 3830.98 0.0201923 0.00181512 43532.4 0; : 228 Minimum Test error found - save the configuration ; : 228 | 4721.11 3793.89 0.0201034 0.00181119 43734.4 0; : 229 Minimum Test error found - save the configuration ; : 229 | 4683.32 3755.52 0.0201311 0.00181167 43669.5 0; : 230 Minimum Test error found - save the configuration ; : 230 | 4644.47 3718.53 0.0201323 0.00180638 43654.1 0; : 231 Minimum Test error found - save the configuration ; : 231 | 4606.79 3681.43 0.020129 0.00181323 43678.1 0; : 232 Minimum Test error found - save the configuration ; : 232 | 4567.71 3646.94 0.0201545 0.0018103 43610.4 0; : 233 Minimum Test error found - save the configuration ; : 233 | 4531.87 3609.69 0.0200999 0.00180936 43738.5 0; : 234 Minimum Test error found - save the configuration ; : 234 | 4493.9 3574.45 0.0204352 0.00182946 42997.5 0; : 235 Minimum Test error found - save the configuration ; : 235 | 4458.22 3537.88 0.0202146 0.00181434 43477.6 0; : 236 Minimum Test error found - save the configuration ; : 236 | 4420.27 3503.48 0.0201332 0.00182095 43686.7 0; : 237 Minimum Test error found - save the configuration ; : 237 | 4384.12 3469.32 0.020111 0.00181828 43733.2 0; : 238 Minimum Test error found - save the configuration ; : 238 | 4349.33 3433.65 0.0201102 0.00181751 43733.3 0; : 239 Minimum Test error found - save the configuration ; : 239 | 4312.94 3399.06 0.0201135 0.00181726 43724.7 0; : 240 Minimum Test error found - save the configuration ; : 240 | 4277.25 3365.37 0.0201097 0.00181862 43737.2 0; : 241 Mini,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:37173,config,configuration,37173,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 225 | 4840.32 3905.84 0.0201762 0.00181162 43562 0; : 226 Minimum Test error found - save the configuration ; : 226 | 4799.06 3868.52 0.0201024 0.00180874 43731 0; : 227 Minimum Test error found - save the configuration ; : 227 | 4760.29 3830.98 0.0201923 0.00181512 43532.4 0; : 228 Minimum Test error found - save the configuration ; : 228 | 4721.11 3793.89 0.0201034 0.00181119 43734.4 0; : 229 Minimum Test error found - save the configuration ; : 229 | 4683.32 3755.52 0.0201311 0.00181167 43669.5 0; : 230 Minimum Test error found - save the configuration ; : 230 | 4644.47 3718.53 0.0201323 0.00180638 43654.1 0; : 231 Minimum Test error found - save the configuration ; : 231 | 4606.79 3681.43 0.020129 0.00181323 43678.1 0; : 232 Minimum Test error found - save the configuration ; : 232 | 4567.71 3646.94 0.0201545 0.0018103 43610.4 0; : 233 Minimum Test error found - save the configuration ; : 233 | 4531.87 3609.69 0.0200999 0.00180936 43738.5 0; : 234 Minimum Test error found - save the configuration ; : 234 | 4493.9 3574.45 0.0204352 0.00182946 42997.5 0; : 235 Minimum Test error found - save the configuration ; : 235 | 4458.22 3537.88 0.0202146 0.00181434 43477.6 0; : 236 Minimum Test error found - save the configuration ; : 236 | 4420.27 3503.48 0.0201332 0.00182095 43686.7 0; : 237 Minimum Test error found - save the configuration ; : 237 | 4384.12 3469.32 0.020111 0.00181828 43733.2 0; : 238 Minimum Test error found - save the configuration ; : 238 | 4349.33 3433.65 0.0201102 0.00181751 43733.3 0; : 239 Minimum Test error found - save the configuration ; : 239 | 4312.94 3399.06 0.0201135 0.00181726 43724.7 0; : 240 Minimum Test error found - save the configuration ; : 240 | 4277.25 3365.37 0.0201097 0.00181862 43737.2 0; : 241 Minimum Test error found - save the configuration ; : 241 | 4241.69 3332.68 0.0201074 0.00181941 43744.5 0; : 242 Minimum Test error found - save the configuration ; : 242 | 4208.08 3298.33 0.0201335 0.00181692 43676.3 0; : 243 Min,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:37400,config,configuration,37400,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 245 | 4104.68 3201.11 0.0208426 0.00184317 42106.5 0; : 246 Minimum Test error found - save the configuration ; : 246 | 4071.07 3168.1 0.0203912 0.0018296 43099.8 0; : 247 Minimum Test error found - save the configuration ; : 247 | 4036.99 3136.52 0.0201725 0.00181637 43582.1 0; : 248 Minimum Test error found - save the configuration ; : 248 | 4004.73 3104.47 0.0201502 0.00182336 43651.8 0; : 249 Minimum Test error found - save the configuration ; : 249 | 3970.44 3073.93 0.0201703 0.00181858 43592.7 0; : 250 Minimum Test error found - save the configuration ; : 250 | 3939.05 3041.72 0.0204513 0.00185682 43023.5 0; : 251 Minimum Test error found - save the configuration ; : 251 | 3905.19 3012.24 0.0207706 0.0018857 42361.9 0; : 252 Minimum Test error found - save the configuration ; : 252 | 3873.64 2981.7 0.0208833 0.0019031 42149.1 0; : 253 Minimum Test error found - save the configuration ; : 253 | 3841.98 2951.54 0.0208487 0.0019305 42287.4 0; : 254 Minimum Test error found - save the configuration ; : 254 | 3809.95 2921.87 0.0208755 0.00187363 42101.1 0; : 255 Minimum Test error found - save the configuration ; : 255 | 3779.13 2892.2 0.020905 0.00188208 42054.6 0; : 256 Minimum Test error found - save the configuration ; : 256 | 3747.34 2863.22 0.020356 0.00183152 43186 0; : 257 Minimum Test error found - save the configuration ; : 257 | 3717.23 2832.96 0.0205175 0.00183548 42822 0; : 258 Minimum Test error found - save the configuration ; : 258 | 3685.71 2804.1 0.0207306 0.00191201 42511.2 0; : 259 Minimum Test error found - save the configuration ; : 259 | 3655.28 2775.93 0.0206157 0.0018465 42623 0; : 260 Minimum Test error found - save the configuration ; : 260 | 3624.6 2748.54 0.0206258 0.00186298 42637.5 0; : 261 Minimum Test error found - save the configuration ; : 261 | 3595.24 2720.67 0.0206036 0.00182681 42605.8 0; : 262 Minimum Test error found - save the configuration ; : 262 | 3565.68 2692.59 0.0203715 0.00187472 43250.7 0; : 263 Minimum Test ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:39670,config,configuration,39670,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 246 | 4071.07 3168.1 0.0203912 0.0018296 43099.8 0; : 247 Minimum Test error found - save the configuration ; : 247 | 4036.99 3136.52 0.0201725 0.00181637 43582.1 0; : 248 Minimum Test error found - save the configuration ; : 248 | 4004.73 3104.47 0.0201502 0.00182336 43651.8 0; : 249 Minimum Test error found - save the configuration ; : 249 | 3970.44 3073.93 0.0201703 0.00181858 43592.7 0; : 250 Minimum Test error found - save the configuration ; : 250 | 3939.05 3041.72 0.0204513 0.00185682 43023.5 0; : 251 Minimum Test error found - save the configuration ; : 251 | 3905.19 3012.24 0.0207706 0.0018857 42361.9 0; : 252 Minimum Test error found - save the configuration ; : 252 | 3873.64 2981.7 0.0208833 0.0019031 42149.1 0; : 253 Minimum Test error found - save the configuration ; : 253 | 3841.98 2951.54 0.0208487 0.0019305 42287.4 0; : 254 Minimum Test error found - save the configuration ; : 254 | 3809.95 2921.87 0.0208755 0.00187363 42101.1 0; : 255 Minimum Test error found - save the configuration ; : 255 | 3779.13 2892.2 0.020905 0.00188208 42054.6 0; : 256 Minimum Test error found - save the configuration ; : 256 | 3747.34 2863.22 0.020356 0.00183152 43186 0; : 257 Minimum Test error found - save the configuration ; : 257 | 3717.23 2832.96 0.0205175 0.00183548 42822 0; : 258 Minimum Test error found - save the configuration ; : 258 | 3685.71 2804.1 0.0207306 0.00191201 42511.2 0; : 259 Minimum Test error found - save the configuration ; : 259 | 3655.28 2775.93 0.0206157 0.0018465 42623 0; : 260 Minimum Test error found - save the configuration ; : 260 | 3624.6 2748.54 0.0206258 0.00186298 42637.5 0; : 261 Minimum Test error found - save the configuration ; : 261 | 3595.24 2720.67 0.0206036 0.00182681 42605.8 0; : 262 Minimum Test error found - save the configuration ; : 262 | 3565.68 2692.59 0.0203715 0.00187472 43250.7 0; : 263 Minimum Test error found - save the configuration ; : 263 | 3536.15 2665.16 0.0204197 0.00183921 43055.9 0; : 264 Minimum Test ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:39784,config,configuration,39784,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 247 | 4036.99 3136.52 0.0201725 0.00181637 43582.1 0; : 248 Minimum Test error found - save the configuration ; : 248 | 4004.73 3104.47 0.0201502 0.00182336 43651.8 0; : 249 Minimum Test error found - save the configuration ; : 249 | 3970.44 3073.93 0.0201703 0.00181858 43592.7 0; : 250 Minimum Test error found - save the configuration ; : 250 | 3939.05 3041.72 0.0204513 0.00185682 43023.5 0; : 251 Minimum Test error found - save the configuration ; : 251 | 3905.19 3012.24 0.0207706 0.0018857 42361.9 0; : 252 Minimum Test error found - save the configuration ; : 252 | 3873.64 2981.7 0.0208833 0.0019031 42149.1 0; : 253 Minimum Test error found - save the configuration ; : 253 | 3841.98 2951.54 0.0208487 0.0019305 42287.4 0; : 254 Minimum Test error found - save the configuration ; : 254 | 3809.95 2921.87 0.0208755 0.00187363 42101.1 0; : 255 Minimum Test error found - save the configuration ; : 255 | 3779.13 2892.2 0.020905 0.00188208 42054.6 0; : 256 Minimum Test error found - save the configuration ; : 256 | 3747.34 2863.22 0.020356 0.00183152 43186 0; : 257 Minimum Test error found - save the configuration ; : 257 | 3717.23 2832.96 0.0205175 0.00183548 42822 0; : 258 Minimum Test error found - save the configuration ; : 258 | 3685.71 2804.1 0.0207306 0.00191201 42511.2 0; : 259 Minimum Test error found - save the configuration ; : 259 | 3655.28 2775.93 0.0206157 0.0018465 42623 0; : 260 Minimum Test error found - save the configuration ; : 260 | 3624.6 2748.54 0.0206258 0.00186298 42637.5 0; : 261 Minimum Test error found - save the configuration ; : 261 | 3595.24 2720.67 0.0206036 0.00182681 42605.8 0; : 262 Minimum Test error found - save the configuration ; : 262 | 3565.68 2692.59 0.0203715 0.00187472 43250.7 0; : 263 Minimum Test error found - save the configuration ; : 263 | 3536.15 2665.16 0.0204197 0.00183921 43055.9 0; : 264 Minimum Test error found - save the configuration ; : 264 | 3507.67 2636.8 0.0206158 0.00185399 42639.7 0; : 265 Minimum Test,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:39896,config,configuration,39896,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 259 | 3655.28 2775.93 0.0206157 0.0018465 42623 0; : 260 Minimum Test error found - save the configuration ; : 260 | 3624.6 2748.54 0.0206258 0.00186298 42637.5 0; : 261 Minimum Test error found - save the configuration ; : 261 | 3595.24 2720.67 0.0206036 0.00182681 42605.8 0; : 262 Minimum Test error found - save the configuration ; : 262 | 3565.68 2692.59 0.0203715 0.00187472 43250.7 0; : 263 Minimum Test error found - save the configuration ; : 263 | 3536.15 2665.16 0.0204197 0.00183921 43055.9 0; : 264 Minimum Test error found - save the configuration ; : 264 | 3507.67 2636.8 0.0206158 0.00185399 42639.7 0; : 265 Minimum Test error found - save the configuration ; : 265 | 3477.42 2610.03 0.0202093 0.0018315 43530.8 0; : 266 Minimum Test error found - save the configuration ; : 266 | 3448.44 2583.82 0.0201348 0.00181129 43659.7 0; : 267 Minimum Test error found - save the configuration ; : 267 | 3419.61 2557.61 0.0201203 0.00181281 43697.9 0; : 268 Minimum Test error found - save the configuration ; : 268 | 3391.52 2531.71 0.0201083 0.00181098 43722.2 0; : 269 Minimum Test error found - save the configuration ; : 269 | 3363.52 2505.37 0.0201147 0.00180493 43692.5 0; : 270 Minimum Test error found - save the configuration ; : 270 | 3335.06 2479.9 0.0201599 0.00183615 43659.2 0; : 271 Minimum Test error found - save the configuration ; : 271 | 3308.12 2454.26 0.0202082 0.00181348 43490.8 0; : 272 Minimum Test error found - save the configuration ; : 272 | 3280.89 2427.73 0.020272 0.0018293 43377.6 0; : 273 Minimum Test error found - save the configuration ; : 273 | 3252.38 2403.22 0.0201521 0.00183383 43672.2 0; : 274 Minimum Test error found - save the configuration ; : 274 | 3225.54 2378.31 0.0201071 0.00180974 43722.2 0; : 275 Minimum Test error found - save the configuration ; : 275 | 3198.95 2353.31 0.0201145 0.00180932 43703.5 0; : 276 Minimum Test error found - save the configuration ; : 276 | 3171.39 2329.66 0.0201297 0.00182099 43695.1 0; : 277 Mini,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:41252,config,configuration,41252,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 280 | 3067.15 2234.03 0.0206301 0.00183798 42571.1 0; : 281 Minimum Test error found - save the configuration ; : 281 | 3041.24 2210.43 0.0205967 0.00188294 42749.4 0; : 282 Minimum Test error found - save the configuration ; : 282 | 3015.05 2187.65 0.0203448 0.00180913 43160 0; : 283 Minimum Test error found - save the configuration ; : 283 | 2989.86 2164.96 0.0201855 0.00181334 43544.1 0; : 284 Minimum Test error found - save the configuration ; : 284 | 2964.88 2142 0.0201236 0.00181217 43688.6 0; : 285 Minimum Test error found - save the configuration ; : 285 | 2939.99 2119.13 0.0201416 0.00181963 43663.5 0; : 286 Minimum Test error found - save the configuration ; : 286 | 2915.05 2096.39 0.0202522 0.00187797 43539.3 0; : 287 Minimum Test error found - save the configuration ; : 287 | 2890.28 2074.46 0.0203309 0.00186659 43326.9 0; : 288 Minimum Test error found - save the configuration ; : 288 | 2866.16 2052.25 0.020288 0.00183539 43354.4 0; : 289 Minimum Test error found - save the configuration ; : 289 | 2841.54 2030.76 0.0202472 0.00188865 43576.5 0; : 290 Minimum Test error found - save the configuration ; : 290 | 2817.7 2009.26 0.020243 0.00187711 43559.1 0; : 291 Minimum Test error found - save the configuration ; : 291 | 2793.45 1988.22 0.0204562 0.0019356 43195.2 0; : 292 Minimum Test error found - save the configuration ; : 292 | 2769.81 1967.05 0.0206007 0.00187416 42720.1 0; : 293 Minimum Test error found - save the configuration ; : 293 | 2746.94 1945.3 0.0203018 0.00188698 43443.4 0; : 294 Minimum Test error found - save the configuration ; : 294 | 2722.93 1924.99 0.0202207 0.00184041 43524.9 0; : 295 Minimum Test error found - save the configuration ; : 295 | 2699.2 1905.24 0.0201591 0.00182196 43627.2 0; : 296 Minimum Test error found - save the configuration ; : 296 | 2677.38 1884 0.020139 0.00182793 43689.5 0; : 297 Minimum Test error found - save the configuration ; : 297 | 2654.18 1863.4 0.0201209 0.00180649 43681.3 0; : 298 Minimum Tes,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:43637,config,configuration,43637,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 281 | 3041.24 2210.43 0.0205967 0.00188294 42749.4 0; : 282 Minimum Test error found - save the configuration ; : 282 | 3015.05 2187.65 0.0203448 0.00180913 43160 0; : 283 Minimum Test error found - save the configuration ; : 283 | 2989.86 2164.96 0.0201855 0.00181334 43544.1 0; : 284 Minimum Test error found - save the configuration ; : 284 | 2964.88 2142 0.0201236 0.00181217 43688.6 0; : 285 Minimum Test error found - save the configuration ; : 285 | 2939.99 2119.13 0.0201416 0.00181963 43663.5 0; : 286 Minimum Test error found - save the configuration ; : 286 | 2915.05 2096.39 0.0202522 0.00187797 43539.3 0; : 287 Minimum Test error found - save the configuration ; : 287 | 2890.28 2074.46 0.0203309 0.00186659 43326.9 0; : 288 Minimum Test error found - save the configuration ; : 288 | 2866.16 2052.25 0.020288 0.00183539 43354.4 0; : 289 Minimum Test error found - save the configuration ; : 289 | 2841.54 2030.76 0.0202472 0.00188865 43576.5 0; : 290 Minimum Test error found - save the configuration ; : 290 | 2817.7 2009.26 0.020243 0.00187711 43559.1 0; : 291 Minimum Test error found - save the configuration ; : 291 | 2793.45 1988.22 0.0204562 0.0019356 43195.2 0; : 292 Minimum Test error found - save the configuration ; : 292 | 2769.81 1967.05 0.0206007 0.00187416 42720.1 0; : 293 Minimum Test error found - save the configuration ; : 293 | 2746.94 1945.3 0.0203018 0.00188698 43443.4 0; : 294 Minimum Test error found - save the configuration ; : 294 | 2722.93 1924.99 0.0202207 0.00184041 43524.9 0; : 295 Minimum Test error found - save the configuration ; : 295 | 2699.2 1905.24 0.0201591 0.00182196 43627.2 0; : 296 Minimum Test error found - save the configuration ; : 296 | 2677.38 1884 0.020139 0.00182793 43689.5 0; : 297 Minimum Test error found - save the configuration ; : 297 | 2654.18 1863.4 0.0201209 0.00180649 43681.3 0; : 298 Minimum Test error found - save the configuration ; : 298 | 2631.44 1843.45 0.0201273 0.00181385 43683.7 0; : 299 Minimum Tes,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:43751,config,configuration,43751,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 287 | 2890.28 2074.46 0.0203309 0.00186659 43326.9 0; : 288 Minimum Test error found - save the configuration ; : 288 | 2866.16 2052.25 0.020288 0.00183539 43354.4 0; : 289 Minimum Test error found - save the configuration ; : 289 | 2841.54 2030.76 0.0202472 0.00188865 43576.5 0; : 290 Minimum Test error found - save the configuration ; : 290 | 2817.7 2009.26 0.020243 0.00187711 43559.1 0; : 291 Minimum Test error found - save the configuration ; : 291 | 2793.45 1988.22 0.0204562 0.0019356 43195.2 0; : 292 Minimum Test error found - save the configuration ; : 292 | 2769.81 1967.05 0.0206007 0.00187416 42720.1 0; : 293 Minimum Test error found - save the configuration ; : 293 | 2746.94 1945.3 0.0203018 0.00188698 43443.4 0; : 294 Minimum Test error found - save the configuration ; : 294 | 2722.93 1924.99 0.0202207 0.00184041 43524.9 0; : 295 Minimum Test error found - save the configuration ; : 295 | 2699.2 1905.24 0.0201591 0.00182196 43627.2 0; : 296 Minimum Test error found - save the configuration ; : 296 | 2677.38 1884 0.020139 0.00182793 43689.5 0; : 297 Minimum Test error found - save the configuration ; : 297 | 2654.18 1863.4 0.0201209 0.00180649 43681.3 0; : 298 Minimum Test error found - save the configuration ; : 298 | 2631.44 1843.45 0.0201273 0.00181385 43683.7 0; : 299 Minimum Test error found - save the configuration ; : 299 | 2608.67 1823.73 0.0201716 0.0018196 43591.9 0; : 300 Minimum Test error found - save the configuration ; : 300 | 2587.28 1803.4 0.0201132 0.00181242 43714.1 0; : 301 Minimum Test error found - save the configuration ; : 301 | 2563.77 1785.09 0.0201182 0.00181092 43698.4 0; : 302 Minimum Test error found - save the configuration ; : 302 | 2542.68 1765.44 0.020145 0.00181496 43644.3 0; : 303 Minimum Test error found - save the configuration ; : 303 | 2520.76 1746.74 0.0201278 0.00181436 43683.8 0; : 304 Minimum Test error found - save the configuration ; : 304 | 2499.57 1727.02 0.0204166 0.00191205 43232.5 0; : 305 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:44430,config,configuration,44430,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 317 | 2232.67 1498.14 0.0203947 0.00181143 43049.5 0; : 318 Minimum Test error found - save the configuration ; : 318 | 2213.29 1481.14 0.0201416 0.00181311 43647.9 0; : 319 Minimum Test error found - save the configuration ; : 319 | 2194.1 1464.7 0.0201406 0.00182876 43687.5 0; : 320 Minimum Test error found - save the configuration ; : 320 | 2175.38 1447.67 0.0206862 0.00188802 42557.4 0; : 321 Minimum Test error found - save the configuration ; : 321 | 2155.9 1431.89 0.0202817 0.00182411 43342.5 0; : 322 Minimum Test error found - save the configuration ; : 322 | 2136.97 1416.3 0.0201745 0.00185513 43669.6 0; : 323 Minimum Test error found - save the configuration ; : 323 | 2118.43 1400.63 0.0201356 0.00181878 43675.8 0; : 324 Minimum Test error found - save the configuration ; : 324 | 2100.24 1384.53 0.0201342 0.00182071 43683.6 0; : 325 Minimum Test error found - save the configuration ; : 325 | 2081.68 1368.94 0.02014 0.00181951 43666.9 0; : 326 Minimum Test error found - save the configuration ; : 326 | 2062.99 1354.16 0.0201231 0.00181474 43695.9 0; : 327 Minimum Test error found - save the configuration ; : 327 | 2044.89 1339.01 0.0203662 0.00185106 43207.9 0; : 328 Minimum Test error found - save the configuration ; : 328 | 2027.08 1324.14 0.0205379 0.00189883 42920.6 0; : 329 Minimum Test error found - save the configuration ; : 329 | 2010.14 1308.4 0.0208465 0.00188706 42195.2 0; : 330 Minimum Test error found - save the configuration ; : 330 | 1991.48 1294.33 0.0203889 0.00185386 43161.4 0; : 331 Minimum Test error found - save the configuration ; : 331 | 1974 1281.47 0.020168 0.00182028 43602.2 0; : 332 Minimum Test error found - save the configuration ; : 332 | 1957.4 1265.55 0.0201238 0.00181209 43687.9 0; : 333 Minimum Test error found - save the configuration ; : 333 | 1939.3 1251.56 0.020118 0.0018119 43701.4 0; : 334 Minimum Test error found - save the configuration ; : 334 | 1922.28 1237.18 0.0201046 0.00181273 43735.3 0; : 335 Minimum Te,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:47835,config,configuration,47835,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 318 | 2213.29 1481.14 0.0201416 0.00181311 43647.9 0; : 319 Minimum Test error found - save the configuration ; : 319 | 2194.1 1464.7 0.0201406 0.00182876 43687.5 0; : 320 Minimum Test error found - save the configuration ; : 320 | 2175.38 1447.67 0.0206862 0.00188802 42557.4 0; : 321 Minimum Test error found - save the configuration ; : 321 | 2155.9 1431.89 0.0202817 0.00182411 43342.5 0; : 322 Minimum Test error found - save the configuration ; : 322 | 2136.97 1416.3 0.0201745 0.00185513 43669.6 0; : 323 Minimum Test error found - save the configuration ; : 323 | 2118.43 1400.63 0.0201356 0.00181878 43675.8 0; : 324 Minimum Test error found - save the configuration ; : 324 | 2100.24 1384.53 0.0201342 0.00182071 43683.6 0; : 325 Minimum Test error found - save the configuration ; : 325 | 2081.68 1368.94 0.02014 0.00181951 43666.9 0; : 326 Minimum Test error found - save the configuration ; : 326 | 2062.99 1354.16 0.0201231 0.00181474 43695.9 0; : 327 Minimum Test error found - save the configuration ; : 327 | 2044.89 1339.01 0.0203662 0.00185106 43207.9 0; : 328 Minimum Test error found - save the configuration ; : 328 | 2027.08 1324.14 0.0205379 0.00189883 42920.6 0; : 329 Minimum Test error found - save the configuration ; : 329 | 2010.14 1308.4 0.0208465 0.00188706 42195.2 0; : 330 Minimum Test error found - save the configuration ; : 330 | 1991.48 1294.33 0.0203889 0.00185386 43161.4 0; : 331 Minimum Test error found - save the configuration ; : 331 | 1974 1281.47 0.020168 0.00182028 43602.2 0; : 332 Minimum Test error found - save the configuration ; : 332 | 1957.4 1265.55 0.0201238 0.00181209 43687.9 0; : 333 Minimum Test error found - save the configuration ; : 333 | 1939.3 1251.56 0.020118 0.0018119 43701.4 0; : 334 Minimum Test error found - save the configuration ; : 334 | 1922.28 1237.18 0.0201046 0.00181273 43735.3 0; : 335 Minimum Test error found - save the configuration ; : 335 | 1905.38 1223.07 0.0201485 0.00181696 43640.6 0; : 336 Minimum Te,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:47949,config,configuration,47949,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 319 | 2194.1 1464.7 0.0201406 0.00182876 43687.5 0; : 320 Minimum Test error found - save the configuration ; : 320 | 2175.38 1447.67 0.0206862 0.00188802 42557.4 0; : 321 Minimum Test error found - save the configuration ; : 321 | 2155.9 1431.89 0.0202817 0.00182411 43342.5 0; : 322 Minimum Test error found - save the configuration ; : 322 | 2136.97 1416.3 0.0201745 0.00185513 43669.6 0; : 323 Minimum Test error found - save the configuration ; : 323 | 2118.43 1400.63 0.0201356 0.00181878 43675.8 0; : 324 Minimum Test error found - save the configuration ; : 324 | 2100.24 1384.53 0.0201342 0.00182071 43683.6 0; : 325 Minimum Test error found - save the configuration ; : 325 | 2081.68 1368.94 0.02014 0.00181951 43666.9 0; : 326 Minimum Test error found - save the configuration ; : 326 | 2062.99 1354.16 0.0201231 0.00181474 43695.9 0; : 327 Minimum Test error found - save the configuration ; : 327 | 2044.89 1339.01 0.0203662 0.00185106 43207.9 0; : 328 Minimum Test error found - save the configuration ; : 328 | 2027.08 1324.14 0.0205379 0.00189883 42920.6 0; : 329 Minimum Test error found - save the configuration ; : 329 | 2010.14 1308.4 0.0208465 0.00188706 42195.2 0; : 330 Minimum Test error found - save the configuration ; : 330 | 1991.48 1294.33 0.0203889 0.00185386 43161.4 0; : 331 Minimum Test error found - save the configuration ; : 331 | 1974 1281.47 0.020168 0.00182028 43602.2 0; : 332 Minimum Test error found - save the configuration ; : 332 | 1957.4 1265.55 0.0201238 0.00181209 43687.9 0; : 333 Minimum Test error found - save the configuration ; : 333 | 1939.3 1251.56 0.020118 0.0018119 43701.4 0; : 334 Minimum Test error found - save the configuration ; : 334 | 1922.28 1237.18 0.0201046 0.00181273 43735.3 0; : 335 Minimum Test error found - save the configuration ; : 335 | 1905.38 1223.07 0.0201485 0.00181696 43640.6 0; : 336 Minimum Test error found - save the configuration ; : 336 | 1888.23 1209.6 0.0201214 0.00181991 43712.2 0; : 337 Minimum Tes,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:48063,config,configuration,48063,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 337 | 1871.94 1195.83 0.0205304 0.00184821 42821.5 0; : 338 Minimum Test error found - save the configuration ; : 338 | 1855.07 1182.37 0.0201268 0.00181989 43699.3 0; : 339 Minimum Test error found - save the configuration ; : 339 | 1838.61 1168.93 0.0201201 0.00181292 43698.7 0; : 340 Minimum Test error found - save the configuration ; : 340 | 1822.04 1156.1 0.020121 0.00181141 43693 0; : 341 Minimum Test error found - save the configuration ; : 341 | 1806.12 1142.64 0.0202229 0.00182722 43488.6 0; : 342 Minimum Test error found - save the configuration ; : 342 | 1789.69 1130.02 0.0201502 0.00182055 43645.1 0; : 343 Minimum Test error found - save the configuration ; : 343 | 1774.23 1116.9 0.0201756 0.0018237 43592.2 0; : 344 Minimum Test error found - save the configuration ; : 344 | 1757.78 1104.57 0.0201146 0.00181274 43711.3 0; : 345 Minimum Test error found - save the configuration ; : 345 | 1742.23 1092.31 0.0201296 0.00180634 43660.4 0; : 346 Minimum Test error found - save the configuration ; : 346 | 1726.84 1079.76 0.0201287 0.00180534 43660.1 0; : 347 Minimum Test error found - save the configuration ; : 347 | 1711.03 1067.63 0.0201353 0.00181782 43674.2 0; : 348 Minimum Test error found - save the configuration ; : 348 | 1695.85 1055.38 0.0201691 0.00181876 43596 0; : 349 Minimum Test error found - save the configuration ; : 349 | 1680.85 1042.99 0.0201335 0.00181253 43665.7 0; : 350 Minimum Test error found - save the configuration ; : 350 | 1665.28 1031.67 0.0201289 0.00181121 43673.7 0; : 351 Minimum Test error found - save the configuration ; : 351 | 1649.82 1020.23 0.0201549 0.00183189 43661 0; : 352 Minimum Test error found - save the configuration ; : 352 | 1635.63 1008.56 0.0201479 0.00180795 43620.7 0; : 353 Minimum Test error found - save the configuration ; : 353 | 1620.78 996.719 0.0201232 0.001813 43691.5 0; : 354 Minimum Test error found - save the configuration ; : 354 | 1605.94 985.366 0.0201287 0.00181207 43676.2 0; : 355 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:50099,config,configuration,50099,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 338 | 1855.07 1182.37 0.0201268 0.00181989 43699.3 0; : 339 Minimum Test error found - save the configuration ; : 339 | 1838.61 1168.93 0.0201201 0.00181292 43698.7 0; : 340 Minimum Test error found - save the configuration ; : 340 | 1822.04 1156.1 0.020121 0.00181141 43693 0; : 341 Minimum Test error found - save the configuration ; : 341 | 1806.12 1142.64 0.0202229 0.00182722 43488.6 0; : 342 Minimum Test error found - save the configuration ; : 342 | 1789.69 1130.02 0.0201502 0.00182055 43645.1 0; : 343 Minimum Test error found - save the configuration ; : 343 | 1774.23 1116.9 0.0201756 0.0018237 43592.2 0; : 344 Minimum Test error found - save the configuration ; : 344 | 1757.78 1104.57 0.0201146 0.00181274 43711.3 0; : 345 Minimum Test error found - save the configuration ; : 345 | 1742.23 1092.31 0.0201296 0.00180634 43660.4 0; : 346 Minimum Test error found - save the configuration ; : 346 | 1726.84 1079.76 0.0201287 0.00180534 43660.1 0; : 347 Minimum Test error found - save the configuration ; : 347 | 1711.03 1067.63 0.0201353 0.00181782 43674.2 0; : 348 Minimum Test error found - save the configuration ; : 348 | 1695.85 1055.38 0.0201691 0.00181876 43596 0; : 349 Minimum Test error found - save the configuration ; : 349 | 1680.85 1042.99 0.0201335 0.00181253 43665.7 0; : 350 Minimum Test error found - save the configuration ; : 350 | 1665.28 1031.67 0.0201289 0.00181121 43673.7 0; : 351 Minimum Test error found - save the configuration ; : 351 | 1649.82 1020.23 0.0201549 0.00183189 43661 0; : 352 Minimum Test error found - save the configuration ; : 352 | 1635.63 1008.56 0.0201479 0.00180795 43620.7 0; : 353 Minimum Test error found - save the configuration ; : 353 | 1620.78 996.719 0.0201232 0.001813 43691.5 0; : 354 Minimum Test error found - save the configuration ; : 354 | 1605.94 985.366 0.0201287 0.00181207 43676.2 0; : 355 Minimum Test error found - save the configuration ; : 355 | 1591.13 974.131 0.0204416 0.00182759 42978.3 0; : 356 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:50213,config,configuration,50213,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 339 | 1838.61 1168.93 0.0201201 0.00181292 43698.7 0; : 340 Minimum Test error found - save the configuration ; : 340 | 1822.04 1156.1 0.020121 0.00181141 43693 0; : 341 Minimum Test error found - save the configuration ; : 341 | 1806.12 1142.64 0.0202229 0.00182722 43488.6 0; : 342 Minimum Test error found - save the configuration ; : 342 | 1789.69 1130.02 0.0201502 0.00182055 43645.1 0; : 343 Minimum Test error found - save the configuration ; : 343 | 1774.23 1116.9 0.0201756 0.0018237 43592.2 0; : 344 Minimum Test error found - save the configuration ; : 344 | 1757.78 1104.57 0.0201146 0.00181274 43711.3 0; : 345 Minimum Test error found - save the configuration ; : 345 | 1742.23 1092.31 0.0201296 0.00180634 43660.4 0; : 346 Minimum Test error found - save the configuration ; : 346 | 1726.84 1079.76 0.0201287 0.00180534 43660.1 0; : 347 Minimum Test error found - save the configuration ; : 347 | 1711.03 1067.63 0.0201353 0.00181782 43674.2 0; : 348 Minimum Test error found - save the configuration ; : 348 | 1695.85 1055.38 0.0201691 0.00181876 43596 0; : 349 Minimum Test error found - save the configuration ; : 349 | 1680.85 1042.99 0.0201335 0.00181253 43665.7 0; : 350 Minimum Test error found - save the configuration ; : 350 | 1665.28 1031.67 0.0201289 0.00181121 43673.7 0; : 351 Minimum Test error found - save the configuration ; : 351 | 1649.82 1020.23 0.0201549 0.00183189 43661 0; : 352 Minimum Test error found - save the configuration ; : 352 | 1635.63 1008.56 0.0201479 0.00180795 43620.7 0; : 353 Minimum Test error found - save the configuration ; : 353 | 1620.78 996.719 0.0201232 0.001813 43691.5 0; : 354 Minimum Test error found - save the configuration ; : 354 | 1605.94 985.366 0.0201287 0.00181207 43676.2 0; : 355 Minimum Test error found - save the configuration ; : 355 | 1591.13 974.131 0.0204416 0.00182759 42978.3 0; : 356 Minimum Test error found - save the configuration ; : 356 | 1576.72 963.473 0.0201234 0.00181346 43692.1 0; : 357 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:50327,config,configuration,50327,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 345 | 1742.23 1092.31 0.0201296 0.00180634 43660.4 0; : 346 Minimum Test error found - save the configuration ; : 346 | 1726.84 1079.76 0.0201287 0.00180534 43660.1 0; : 347 Minimum Test error found - save the configuration ; : 347 | 1711.03 1067.63 0.0201353 0.00181782 43674.2 0; : 348 Minimum Test error found - save the configuration ; : 348 | 1695.85 1055.38 0.0201691 0.00181876 43596 0; : 349 Minimum Test error found - save the configuration ; : 349 | 1680.85 1042.99 0.0201335 0.00181253 43665.7 0; : 350 Minimum Test error found - save the configuration ; : 350 | 1665.28 1031.67 0.0201289 0.00181121 43673.7 0; : 351 Minimum Test error found - save the configuration ; : 351 | 1649.82 1020.23 0.0201549 0.00183189 43661 0; : 352 Minimum Test error found - save the configuration ; : 352 | 1635.63 1008.56 0.0201479 0.00180795 43620.7 0; : 353 Minimum Test error found - save the configuration ; : 353 | 1620.78 996.719 0.0201232 0.001813 43691.5 0; : 354 Minimum Test error found - save the configuration ; : 354 | 1605.94 985.366 0.0201287 0.00181207 43676.2 0; : 355 Minimum Test error found - save the configuration ; : 355 | 1591.13 974.131 0.0204416 0.00182759 42978.3 0; : 356 Minimum Test error found - save the configuration ; : 356 | 1576.72 963.473 0.0201234 0.00181346 43692.1 0; : 357 Minimum Test error found - save the configuration ; : 357 | 1562.75 952.48 0.0201406 0.00181733 43660.4 0; : 358 Minimum Test error found - save the configuration ; : 358 | 1548.22 941.458 0.0201341 0.00182516 43694.5 0; : 359 Minimum Test error found - save the configuration ; : 359 | 1534.11 930.552 0.0201332 0.0018225 43690.3 0; : 360 Minimum Test error found - save the configuration ; : 360 | 1520 920.009 0.020131 0.00182161 43693.5 0; : 361 Minimum Test error found - save the configuration ; : 361 | 1506.11 909.801 0.0201272 0.00182148 43702.2 0; : 362 Minimum Test error found - save the configuration ; : 362 | 1492.5 899.632 0.0201236 0.00181792 43702.3 0; : 363 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:51005,config,configuration,51005,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 346 | 1726.84 1079.76 0.0201287 0.00180534 43660.1 0; : 347 Minimum Test error found - save the configuration ; : 347 | 1711.03 1067.63 0.0201353 0.00181782 43674.2 0; : 348 Minimum Test error found - save the configuration ; : 348 | 1695.85 1055.38 0.0201691 0.00181876 43596 0; : 349 Minimum Test error found - save the configuration ; : 349 | 1680.85 1042.99 0.0201335 0.00181253 43665.7 0; : 350 Minimum Test error found - save the configuration ; : 350 | 1665.28 1031.67 0.0201289 0.00181121 43673.7 0; : 351 Minimum Test error found - save the configuration ; : 351 | 1649.82 1020.23 0.0201549 0.00183189 43661 0; : 352 Minimum Test error found - save the configuration ; : 352 | 1635.63 1008.56 0.0201479 0.00180795 43620.7 0; : 353 Minimum Test error found - save the configuration ; : 353 | 1620.78 996.719 0.0201232 0.001813 43691.5 0; : 354 Minimum Test error found - save the configuration ; : 354 | 1605.94 985.366 0.0201287 0.00181207 43676.2 0; : 355 Minimum Test error found - save the configuration ; : 355 | 1591.13 974.131 0.0204416 0.00182759 42978.3 0; : 356 Minimum Test error found - save the configuration ; : 356 | 1576.72 963.473 0.0201234 0.00181346 43692.1 0; : 357 Minimum Test error found - save the configuration ; : 357 | 1562.75 952.48 0.0201406 0.00181733 43660.4 0; : 358 Minimum Test error found - save the configuration ; : 358 | 1548.22 941.458 0.0201341 0.00182516 43694.5 0; : 359 Minimum Test error found - save the configuration ; : 359 | 1534.11 930.552 0.0201332 0.0018225 43690.3 0; : 360 Minimum Test error found - save the configuration ; : 360 | 1520 920.009 0.020131 0.00182161 43693.5 0; : 361 Minimum Test error found - save the configuration ; : 361 | 1506.11 909.801 0.0201272 0.00182148 43702.2 0; : 362 Minimum Test error found - save the configuration ; : 362 | 1492.5 899.632 0.0201236 0.00181792 43702.3 0; : 363 Minimum Test error found - save the configuration ; : 363 | 1478.85 889.132 0.0202194 0.00182105 43482.1 0; : 364 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:51119,config,configuration,51119,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 347 | 1711.03 1067.63 0.0201353 0.00181782 43674.2 0; : 348 Minimum Test error found - save the configuration ; : 348 | 1695.85 1055.38 0.0201691 0.00181876 43596 0; : 349 Minimum Test error found - save the configuration ; : 349 | 1680.85 1042.99 0.0201335 0.00181253 43665.7 0; : 350 Minimum Test error found - save the configuration ; : 350 | 1665.28 1031.67 0.0201289 0.00181121 43673.7 0; : 351 Minimum Test error found - save the configuration ; : 351 | 1649.82 1020.23 0.0201549 0.00183189 43661 0; : 352 Minimum Test error found - save the configuration ; : 352 | 1635.63 1008.56 0.0201479 0.00180795 43620.7 0; : 353 Minimum Test error found - save the configuration ; : 353 | 1620.78 996.719 0.0201232 0.001813 43691.5 0; : 354 Minimum Test error found - save the configuration ; : 354 | 1605.94 985.366 0.0201287 0.00181207 43676.2 0; : 355 Minimum Test error found - save the configuration ; : 355 | 1591.13 974.131 0.0204416 0.00182759 42978.3 0; : 356 Minimum Test error found - save the configuration ; : 356 | 1576.72 963.473 0.0201234 0.00181346 43692.1 0; : 357 Minimum Test error found - save the configuration ; : 357 | 1562.75 952.48 0.0201406 0.00181733 43660.4 0; : 358 Minimum Test error found - save the configuration ; : 358 | 1548.22 941.458 0.0201341 0.00182516 43694.5 0; : 359 Minimum Test error found - save the configuration ; : 359 | 1534.11 930.552 0.0201332 0.0018225 43690.3 0; : 360 Minimum Test error found - save the configuration ; : 360 | 1520 920.009 0.020131 0.00182161 43693.5 0; : 361 Minimum Test error found - save the configuration ; : 361 | 1506.11 909.801 0.0201272 0.00182148 43702.2 0; : 362 Minimum Test error found - save the configuration ; : 362 | 1492.5 899.632 0.0201236 0.00181792 43702.3 0; : 363 Minimum Test error found - save the configuration ; : 363 | 1478.85 889.132 0.0202194 0.00182105 43482.1 0; : 364 Minimum Test error found - save the configuration ; : 364 | 1465.26 879.602 0.0201188 0.00181401 43704.5 0; : 365 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:51233,config,configuration,51233,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 348 | 1695.85 1055.38 0.0201691 0.00181876 43596 0; : 349 Minimum Test error found - save the configuration ; : 349 | 1680.85 1042.99 0.0201335 0.00181253 43665.7 0; : 350 Minimum Test error found - save the configuration ; : 350 | 1665.28 1031.67 0.0201289 0.00181121 43673.7 0; : 351 Minimum Test error found - save the configuration ; : 351 | 1649.82 1020.23 0.0201549 0.00183189 43661 0; : 352 Minimum Test error found - save the configuration ; : 352 | 1635.63 1008.56 0.0201479 0.00180795 43620.7 0; : 353 Minimum Test error found - save the configuration ; : 353 | 1620.78 996.719 0.0201232 0.001813 43691.5 0; : 354 Minimum Test error found - save the configuration ; : 354 | 1605.94 985.366 0.0201287 0.00181207 43676.2 0; : 355 Minimum Test error found - save the configuration ; : 355 | 1591.13 974.131 0.0204416 0.00182759 42978.3 0; : 356 Minimum Test error found - save the configuration ; : 356 | 1576.72 963.473 0.0201234 0.00181346 43692.1 0; : 357 Minimum Test error found - save the configuration ; : 357 | 1562.75 952.48 0.0201406 0.00181733 43660.4 0; : 358 Minimum Test error found - save the configuration ; : 358 | 1548.22 941.458 0.0201341 0.00182516 43694.5 0; : 359 Minimum Test error found - save the configuration ; : 359 | 1534.11 930.552 0.0201332 0.0018225 43690.3 0; : 360 Minimum Test error found - save the configuration ; : 360 | 1520 920.009 0.020131 0.00182161 43693.5 0; : 361 Minimum Test error found - save the configuration ; : 361 | 1506.11 909.801 0.0201272 0.00182148 43702.2 0; : 362 Minimum Test error found - save the configuration ; : 362 | 1492.5 899.632 0.0201236 0.00181792 43702.3 0; : 363 Minimum Test error found - save the configuration ; : 363 | 1478.85 889.132 0.0202194 0.00182105 43482.1 0; : 364 Minimum Test error found - save the configuration ; : 364 | 1465.26 879.602 0.0201188 0.00181401 43704.5 0; : 365 Minimum Test error found - save the configuration ; : 365 | 1452.04 868.451 0.0201338 0.00181986 43682.7 0; : 366 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:51347,config,configuration,51347,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 368 | 1411.97 839.213 0.020133 0.00180845 43657.3 0; : 369 Minimum Test error found - save the configuration ; : 369 | 1398.96 829.601 0.0201373 0.00181244 43656.5 0; : 370 Minimum Test error found - save the configuration ; : 370 | 1385.58 820.462 0.020129 0.00181191 43675 0; : 371 Minimum Test error found - save the configuration ; : 371 | 1373.35 810.549 0.0201499 0.00183853 43688.7 0; : 372 Minimum Test error found - save the configuration ; : 372 | 1359.77 801.896 0.0201658 0.00181611 43597.4 0; : 373 Minimum Test error found - save the configuration ; : 373 | 1347.92 793.298 0.0201248 0.00181285 43687.4 0; : 374 Minimum Test error found - save the configuration ; : 374 | 1335.01 784.052 0.0201186 0.0018071 43688.4 0; : 375 Minimum Test error found - save the configuration ; : 375 | 1322.7 774.736 0.0201382 0.00181076 43650.3 0; : 376 Minimum Test error found - save the configuration ; : 376 | 1310.36 765.843 0.0201418 0.00181155 43643.7 0; : 377 Minimum Test error found - save the configuration ; : 377 | 1298.44 756.891 0.0201268 0.00181403 43685.4 0; : 378 Minimum Test error found - save the configuration ; : 378 | 1285.86 748.455 0.0201275 0.00181908 43695.6 0; : 379 Minimum Test error found - save the configuration ; : 379 | 1273.98 740.611 0.0201241 0.00181383 43691.2 0; : 380 Minimum Test error found - save the configuration ; : 380 | 1262.34 731.526 0.0201157 0.00181169 43706.2 0; : 381 Minimum Test error found - save the configuration ; : 381 | 1250.17 723.372 0.0201233 0.00181189 43688.6 0; : 382 Minimum Test error found - save the configuration ; : 382 | 1238.6 715.116 0.0201183 0.00181259 43702.2 0; : 383 Minimum Test error found - save the configuration ; : 383 | 1227 706.748 0.0201329 0.0018213 43688.2 0; : 384 Minimum Test error found - save the configuration ; : 384 | 1215.11 699.222 0.0201342 0.00181943 43680.7 0; : 385 Minimum Test error found - save the configuration ; : 385 | 1203.63 691.403 0.02014 0.00182334 43676.1 0; : 386 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:53611,config,configuration,53611,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 375 | 1322.7 774.736 0.0201382 0.00181076 43650.3 0; : 376 Minimum Test error found - save the configuration ; : 376 | 1310.36 765.843 0.0201418 0.00181155 43643.7 0; : 377 Minimum Test error found - save the configuration ; : 377 | 1298.44 756.891 0.0201268 0.00181403 43685.4 0; : 378 Minimum Test error found - save the configuration ; : 378 | 1285.86 748.455 0.0201275 0.00181908 43695.6 0; : 379 Minimum Test error found - save the configuration ; : 379 | 1273.98 740.611 0.0201241 0.00181383 43691.2 0; : 380 Minimum Test error found - save the configuration ; : 380 | 1262.34 731.526 0.0201157 0.00181169 43706.2 0; : 381 Minimum Test error found - save the configuration ; : 381 | 1250.17 723.372 0.0201233 0.00181189 43688.6 0; : 382 Minimum Test error found - save the configuration ; : 382 | 1238.6 715.116 0.0201183 0.00181259 43702.2 0; : 383 Minimum Test error found - save the configuration ; : 383 | 1227 706.748 0.0201329 0.0018213 43688.2 0; : 384 Minimum Test error found - save the configuration ; : 384 | 1215.11 699.222 0.0201342 0.00181943 43680.7 0; : 385 Minimum Test error found - save the configuration ; : 385 | 1203.63 691.403 0.02014 0.00182334 43676.1 0; : 386 Minimum Test error found - save the configuration ; : 386 | 1192.53 683.241 0.0201197 0.00181992 43716.3 0; : 387 Minimum Test error found - save the configuration ; : 387 | 1181.2 675.7 0.0201175 0.00182002 43721.9 0; : 388 Minimum Test error found - save the configuration ; : 388 | 1170.08 667.761 0.0201168 0.00182403 43733.1 0; : 389 Minimum Test error found - save the configuration ; : 389 | 1158.61 661.271 0.0204728 0.0018727 43010.6 0; : 390 Minimum Test error found - save the configuration ; : 390 | 1148.13 652.893 0.0205991 0.00194136 42877.5 0; : 391 Minimum Test error found - save the configuration ; : 391 | 1136.83 645.4 0.0202307 0.00186692 43564 0; : 392 Minimum Test error found - save the configuration ; : 392 | 1125.56 638.711 0.0206275 0.00184646 42596.2 0; : 393 Minimum Tes,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:54404,config,configuration,54404,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 402 | 1022.23 570.272 0.0201306 0.00182147 43694 0; : 403 Minimum Test error found - save the configuration ; : 403 | 1012.74 563.823 0.0201066 0.00181196 43728.6 0; : 404 Minimum Test error found - save the configuration ; : 404 | 1002.66 558.031 0.0201068 0.0018122 43728.9 0; : 405 Minimum Test error found - save the configuration ; : 405 | 993.455 551.67 0.020178 0.00184829 43644.9 0; : 406 Minimum Test error found - save the configuration ; : 406 | 983.719 545.531 0.0202059 0.00184968 43581.9 0; : 407 Minimum Test error found - save the configuration ; : 407 | 974.381 539.309 0.0201407 0.00182369 43675.3 0; : 408 Minimum Test error found - save the configuration ; : 408 | 964.601 533.917 0.0201423 0.00181632 43653.8 0; : 409 Minimum Test error found - save the configuration ; : 409 | 955.421 527.595 0.0204236 0.00190128 43191.2 0; : 410 Minimum Test error found - save the configuration ; : 410 | 945.766 522.368 0.0209062 0.00188448 42057.3 0; : 411 Minimum Test error found - save the configuration ; : 411 | 936.425 516.53 0.0207319 0.00188678 42451.3 0; : 412 Minimum Test error found - save the configuration ; : 412 | 928.172 509.995 0.0202986 0.00182294 43300.2 0; : 413 Minimum Test error found - save the configuration ; : 413 | 918.166 504.988 0.0203305 0.00183515 43254.1 0; : 414 Minimum Test error found - save the configuration ; : 414 | 909.515 499.67 0.0201973 0.00182149 43535.5 0; : 415 Minimum Test error found - save the configuration ; : 415 | 900.387 494.174 0.0205436 0.00185058 42796.6 0; : 416 Minimum Test error found - save the configuration ; : 416 | 891.862 489.021 0.0204053 0.00183104 43070.4 0; : 417 Minimum Test error found - save the configuration ; : 417 | 883.257 483.108 0.0201356 0.00181777 43673.3 0; : 418 Minimum Test error found - save the configuration ; : 418 | 874.299 477.981 0.0201544 0.00181008 43610.1 0; : 419 Minimum Test error found - save the configuration ; : 419 | 866.108 472.505 0.0201451 0.00182964 43678.9 0; : 420 Min,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:57454,config,configuration,57454,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 428 | 791.762 429.014 0.0201231 0.00181389 43693.9 0; : 429 Minimum Test error found - save the configuration ; : 429 | 783.663 424.486 0.0202036 0.00181812 43512.5 0; : 430 Minimum Test error found - save the configuration ; : 430 | 776.025 420.47 0.020126 0.00182055 43702.9 0; : 431 Minimum Test error found - save the configuration ; : 431 | 768.212 415.652 0.0201366 0.00182081 43678.1 0; : 432 Minimum Test error found - save the configuration ; : 432 | 761.012 411.218 0.02015 0.00183569 43681.6 0; : 433 Minimum Test error found - save the configuration ; : 433 | 753.136 407.298 0.0201476 0.00182106 43652.7 0; : 434 Minimum Test error found - save the configuration ; : 434 | 745.345 402.751 0.020133 0.00182099 43687.1 0; : 435 Minimum Test error found - save the configuration ; : 435 | 738.037 398.378 0.0201447 0.00181389 43642.5 0; : 436 Minimum Test error found - save the configuration ; : 436 | 730.692 394.216 0.0201655 0.00182279 43614.1 0; : 437 Minimum Test error found - save the configuration ; : 437 | 723.856 389.773 0.0201631 0.00181919 43611.2 0; : 438 Minimum Test error found - save the configuration ; : 438 | 716.113 386.163 0.0201299 0.00181919 43690.3 0; : 439 Minimum Test error found - save the configuration ; : 439 | 709.435 381.839 0.02057 0.00189456 42836.9 0; : 440 Minimum Test error found - save the configuration ; : 440 | 701.662 378.014 0.0205169 0.00184853 42853.2 0; : 441 Minimum Test error found - save the configuration ; : 441 | 695.167 373.877 0.0206789 0.00187467 42543.7 0; : 442 Minimum Test error found - save the configuration ; : 442 | 687.861 370.419 0.0206937 0.00187678 42514.9 0; : 443 Minimum Test error found - save the configuration ; : 443 | 681.656 366.359 0.0201552 0.00181904 43629.7 0; : 444 Minimum Test error found - save the configuration ; : 444 | 674.01 362.924 0.0201329 0.0018218 43689.4 0; : 445 Minimum Test error found - save the configuration ; : 445 | 667.37 358.699 0.0201197 0.00181899 43714.1 0; : 446 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:60405,config,configuration,60405,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 429 | 783.663 424.486 0.0202036 0.00181812 43512.5 0; : 430 Minimum Test error found - save the configuration ; : 430 | 776.025 420.47 0.020126 0.00182055 43702.9 0; : 431 Minimum Test error found - save the configuration ; : 431 | 768.212 415.652 0.0201366 0.00182081 43678.1 0; : 432 Minimum Test error found - save the configuration ; : 432 | 761.012 411.218 0.02015 0.00183569 43681.6 0; : 433 Minimum Test error found - save the configuration ; : 433 | 753.136 407.298 0.0201476 0.00182106 43652.7 0; : 434 Minimum Test error found - save the configuration ; : 434 | 745.345 402.751 0.020133 0.00182099 43687.1 0; : 435 Minimum Test error found - save the configuration ; : 435 | 738.037 398.378 0.0201447 0.00181389 43642.5 0; : 436 Minimum Test error found - save the configuration ; : 436 | 730.692 394.216 0.0201655 0.00182279 43614.1 0; : 437 Minimum Test error found - save the configuration ; : 437 | 723.856 389.773 0.0201631 0.00181919 43611.2 0; : 438 Minimum Test error found - save the configuration ; : 438 | 716.113 386.163 0.0201299 0.00181919 43690.3 0; : 439 Minimum Test error found - save the configuration ; : 439 | 709.435 381.839 0.02057 0.00189456 42836.9 0; : 440 Minimum Test error found - save the configuration ; : 440 | 701.662 378.014 0.0205169 0.00184853 42853.2 0; : 441 Minimum Test error found - save the configuration ; : 441 | 695.167 373.877 0.0206789 0.00187467 42543.7 0; : 442 Minimum Test error found - save the configuration ; : 442 | 687.861 370.419 0.0206937 0.00187678 42514.9 0; : 443 Minimum Test error found - save the configuration ; : 443 | 681.656 366.359 0.0201552 0.00181904 43629.7 0; : 444 Minimum Test error found - save the configuration ; : 444 | 674.01 362.924 0.0201329 0.0018218 43689.4 0; : 445 Minimum Test error found - save the configuration ; : 445 | 667.37 358.699 0.0201197 0.00181899 43714.1 0; : 446 Minimum Test error found - save the configuration ; : 446 | 660.646 354.833 0.0201137 0.00181978 43730.3 0; : 447 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:60519,config,configuration,60519,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 430 | 776.025 420.47 0.020126 0.00182055 43702.9 0; : 431 Minimum Test error found - save the configuration ; : 431 | 768.212 415.652 0.0201366 0.00182081 43678.1 0; : 432 Minimum Test error found - save the configuration ; : 432 | 761.012 411.218 0.02015 0.00183569 43681.6 0; : 433 Minimum Test error found - save the configuration ; : 433 | 753.136 407.298 0.0201476 0.00182106 43652.7 0; : 434 Minimum Test error found - save the configuration ; : 434 | 745.345 402.751 0.020133 0.00182099 43687.1 0; : 435 Minimum Test error found - save the configuration ; : 435 | 738.037 398.378 0.0201447 0.00181389 43642.5 0; : 436 Minimum Test error found - save the configuration ; : 436 | 730.692 394.216 0.0201655 0.00182279 43614.1 0; : 437 Minimum Test error found - save the configuration ; : 437 | 723.856 389.773 0.0201631 0.00181919 43611.2 0; : 438 Minimum Test error found - save the configuration ; : 438 | 716.113 386.163 0.0201299 0.00181919 43690.3 0; : 439 Minimum Test error found - save the configuration ; : 439 | 709.435 381.839 0.02057 0.00189456 42836.9 0; : 440 Minimum Test error found - save the configuration ; : 440 | 701.662 378.014 0.0205169 0.00184853 42853.2 0; : 441 Minimum Test error found - save the configuration ; : 441 | 695.167 373.877 0.0206789 0.00187467 42543.7 0; : 442 Minimum Test error found - save the configuration ; : 442 | 687.861 370.419 0.0206937 0.00187678 42514.9 0; : 443 Minimum Test error found - save the configuration ; : 443 | 681.656 366.359 0.0201552 0.00181904 43629.7 0; : 444 Minimum Test error found - save the configuration ; : 444 | 674.01 362.924 0.0201329 0.0018218 43689.4 0; : 445 Minimum Test error found - save the configuration ; : 445 | 667.37 358.699 0.0201197 0.00181899 43714.1 0; : 446 Minimum Test error found - save the configuration ; : 446 | 660.646 354.833 0.0201137 0.00181978 43730.3 0; : 447 Minimum Test error found - save the configuration ; : 447 | 654.211 352.003 0.0201333 0.00184653 43747.4 0; : 448 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:60633,config,configuration,60633,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 431 | 768.212 415.652 0.0201366 0.00182081 43678.1 0; : 432 Minimum Test error found - save the configuration ; : 432 | 761.012 411.218 0.02015 0.00183569 43681.6 0; : 433 Minimum Test error found - save the configuration ; : 433 | 753.136 407.298 0.0201476 0.00182106 43652.7 0; : 434 Minimum Test error found - save the configuration ; : 434 | 745.345 402.751 0.020133 0.00182099 43687.1 0; : 435 Minimum Test error found - save the configuration ; : 435 | 738.037 398.378 0.0201447 0.00181389 43642.5 0; : 436 Minimum Test error found - save the configuration ; : 436 | 730.692 394.216 0.0201655 0.00182279 43614.1 0; : 437 Minimum Test error found - save the configuration ; : 437 | 723.856 389.773 0.0201631 0.00181919 43611.2 0; : 438 Minimum Test error found - save the configuration ; : 438 | 716.113 386.163 0.0201299 0.00181919 43690.3 0; : 439 Minimum Test error found - save the configuration ; : 439 | 709.435 381.839 0.02057 0.00189456 42836.9 0; : 440 Minimum Test error found - save the configuration ; : 440 | 701.662 378.014 0.0205169 0.00184853 42853.2 0; : 441 Minimum Test error found - save the configuration ; : 441 | 695.167 373.877 0.0206789 0.00187467 42543.7 0; : 442 Minimum Test error found - save the configuration ; : 442 | 687.861 370.419 0.0206937 0.00187678 42514.9 0; : 443 Minimum Test error found - save the configuration ; : 443 | 681.656 366.359 0.0201552 0.00181904 43629.7 0; : 444 Minimum Test error found - save the configuration ; : 444 | 674.01 362.924 0.0201329 0.0018218 43689.4 0; : 445 Minimum Test error found - save the configuration ; : 445 | 667.37 358.699 0.0201197 0.00181899 43714.1 0; : 446 Minimum Test error found - save the configuration ; : 446 | 660.646 354.833 0.0201137 0.00181978 43730.3 0; : 447 Minimum Test error found - save the configuration ; : 447 | 654.211 352.003 0.0201333 0.00184653 43747.4 0; : 448 Minimum Test error found - save the configuration ; : 448 | 647.374 347.327 0.0201121 0.0018176 43729 0; : 449 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:60745,config,configuration,60745,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 432 | 761.012 411.218 0.02015 0.00183569 43681.6 0; : 433 Minimum Test error found - save the configuration ; : 433 | 753.136 407.298 0.0201476 0.00182106 43652.7 0; : 434 Minimum Test error found - save the configuration ; : 434 | 745.345 402.751 0.020133 0.00182099 43687.1 0; : 435 Minimum Test error found - save the configuration ; : 435 | 738.037 398.378 0.0201447 0.00181389 43642.5 0; : 436 Minimum Test error found - save the configuration ; : 436 | 730.692 394.216 0.0201655 0.00182279 43614.1 0; : 437 Minimum Test error found - save the configuration ; : 437 | 723.856 389.773 0.0201631 0.00181919 43611.2 0; : 438 Minimum Test error found - save the configuration ; : 438 | 716.113 386.163 0.0201299 0.00181919 43690.3 0; : 439 Minimum Test error found - save the configuration ; : 439 | 709.435 381.839 0.02057 0.00189456 42836.9 0; : 440 Minimum Test error found - save the configuration ; : 440 | 701.662 378.014 0.0205169 0.00184853 42853.2 0; : 441 Minimum Test error found - save the configuration ; : 441 | 695.167 373.877 0.0206789 0.00187467 42543.7 0; : 442 Minimum Test error found - save the configuration ; : 442 | 687.861 370.419 0.0206937 0.00187678 42514.9 0; : 443 Minimum Test error found - save the configuration ; : 443 | 681.656 366.359 0.0201552 0.00181904 43629.7 0; : 444 Minimum Test error found - save the configuration ; : 444 | 674.01 362.924 0.0201329 0.0018218 43689.4 0; : 445 Minimum Test error found - save the configuration ; : 445 | 667.37 358.699 0.0201197 0.00181899 43714.1 0; : 446 Minimum Test error found - save the configuration ; : 446 | 660.646 354.833 0.0201137 0.00181978 43730.3 0; : 447 Minimum Test error found - save the configuration ; : 447 | 654.211 352.003 0.0201333 0.00184653 43747.4 0; : 448 Minimum Test error found - save the configuration ; : 448 | 647.374 347.327 0.0201121 0.0018176 43729 0; : 449 Minimum Test error found - save the configuration ; : 449 | 641 344.618 0.0201064 0.00181317 43732 0; : 450 Minimum Test ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:60859,config,configuration,60859,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 437 | 723.856 389.773 0.0201631 0.00181919 43611.2 0; : 438 Minimum Test error found - save the configuration ; : 438 | 716.113 386.163 0.0201299 0.00181919 43690.3 0; : 439 Minimum Test error found - save the configuration ; : 439 | 709.435 381.839 0.02057 0.00189456 42836.9 0; : 440 Minimum Test error found - save the configuration ; : 440 | 701.662 378.014 0.0205169 0.00184853 42853.2 0; : 441 Minimum Test error found - save the configuration ; : 441 | 695.167 373.877 0.0206789 0.00187467 42543.7 0; : 442 Minimum Test error found - save the configuration ; : 442 | 687.861 370.419 0.0206937 0.00187678 42514.9 0; : 443 Minimum Test error found - save the configuration ; : 443 | 681.656 366.359 0.0201552 0.00181904 43629.7 0; : 444 Minimum Test error found - save the configuration ; : 444 | 674.01 362.924 0.0201329 0.0018218 43689.4 0; : 445 Minimum Test error found - save the configuration ; : 445 | 667.37 358.699 0.0201197 0.00181899 43714.1 0; : 446 Minimum Test error found - save the configuration ; : 446 | 660.646 354.833 0.0201137 0.00181978 43730.3 0; : 447 Minimum Test error found - save the configuration ; : 447 | 654.211 352.003 0.0201333 0.00184653 43747.4 0; : 448 Minimum Test error found - save the configuration ; : 448 | 647.374 347.327 0.0201121 0.0018176 43729 0; : 449 Minimum Test error found - save the configuration ; : 449 | 641 344.618 0.0201064 0.00181317 43732 0; : 450 Minimum Test error found - save the configuration ; : 450 | 634.906 340.694 0.0201841 0.00185283 43641.2 0; : 451 Minimum Test error found - save the configuration ; : 451 | 628.321 336.668 0.0202054 0.00184722 43577.2 0; : 452 Minimum Test error found - save the configuration ; : 452 | 621.73 333.236 0.0201956 0.00184565 43596.7 0; : 453 Minimum Test error found - save the configuration ; : 453 | 615.499 330.282 0.0202258 0.00184415 43521.7 0; : 454 Minimum Test error found - save the configuration ; : 454 | 608.831 326.391 0.0201257 0.00180567 43668.1 0; : 455 Minimum Tes,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:61426,config,configuration,61426,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 438 | 716.113 386.163 0.0201299 0.00181919 43690.3 0; : 439 Minimum Test error found - save the configuration ; : 439 | 709.435 381.839 0.02057 0.00189456 42836.9 0; : 440 Minimum Test error found - save the configuration ; : 440 | 701.662 378.014 0.0205169 0.00184853 42853.2 0; : 441 Minimum Test error found - save the configuration ; : 441 | 695.167 373.877 0.0206789 0.00187467 42543.7 0; : 442 Minimum Test error found - save the configuration ; : 442 | 687.861 370.419 0.0206937 0.00187678 42514.9 0; : 443 Minimum Test error found - save the configuration ; : 443 | 681.656 366.359 0.0201552 0.00181904 43629.7 0; : 444 Minimum Test error found - save the configuration ; : 444 | 674.01 362.924 0.0201329 0.0018218 43689.4 0; : 445 Minimum Test error found - save the configuration ; : 445 | 667.37 358.699 0.0201197 0.00181899 43714.1 0; : 446 Minimum Test error found - save the configuration ; : 446 | 660.646 354.833 0.0201137 0.00181978 43730.3 0; : 447 Minimum Test error found - save the configuration ; : 447 | 654.211 352.003 0.0201333 0.00184653 43747.4 0; : 448 Minimum Test error found - save the configuration ; : 448 | 647.374 347.327 0.0201121 0.0018176 43729 0; : 449 Minimum Test error found - save the configuration ; : 449 | 641 344.618 0.0201064 0.00181317 43732 0; : 450 Minimum Test error found - save the configuration ; : 450 | 634.906 340.694 0.0201841 0.00185283 43641.2 0; : 451 Minimum Test error found - save the configuration ; : 451 | 628.321 336.668 0.0202054 0.00184722 43577.2 0; : 452 Minimum Test error found - save the configuration ; : 452 | 621.73 333.236 0.0201956 0.00184565 43596.7 0; : 453 Minimum Test error found - save the configuration ; : 453 | 615.499 330.282 0.0202258 0.00184415 43521.7 0; : 454 Minimum Test error found - save the configuration ; : 454 | 608.831 326.391 0.0201257 0.00180567 43668.1 0; : 455 Minimum Test error found - save the configuration ; : 455 | 602.478 323.085 0.0201467 0.00181706 43645.1 0; : 456 Minimum Tes,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:61540,config,configuration,61540,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 439 | 709.435 381.839 0.02057 0.00189456 42836.9 0; : 440 Minimum Test error found - save the configuration ; : 440 | 701.662 378.014 0.0205169 0.00184853 42853.2 0; : 441 Minimum Test error found - save the configuration ; : 441 | 695.167 373.877 0.0206789 0.00187467 42543.7 0; : 442 Minimum Test error found - save the configuration ; : 442 | 687.861 370.419 0.0206937 0.00187678 42514.9 0; : 443 Minimum Test error found - save the configuration ; : 443 | 681.656 366.359 0.0201552 0.00181904 43629.7 0; : 444 Minimum Test error found - save the configuration ; : 444 | 674.01 362.924 0.0201329 0.0018218 43689.4 0; : 445 Minimum Test error found - save the configuration ; : 445 | 667.37 358.699 0.0201197 0.00181899 43714.1 0; : 446 Minimum Test error found - save the configuration ; : 446 | 660.646 354.833 0.0201137 0.00181978 43730.3 0; : 447 Minimum Test error found - save the configuration ; : 447 | 654.211 352.003 0.0201333 0.00184653 43747.4 0; : 448 Minimum Test error found - save the configuration ; : 448 | 647.374 347.327 0.0201121 0.0018176 43729 0; : 449 Minimum Test error found - save the configuration ; : 449 | 641 344.618 0.0201064 0.00181317 43732 0; : 450 Minimum Test error found - save the configuration ; : 450 | 634.906 340.694 0.0201841 0.00185283 43641.2 0; : 451 Minimum Test error found - save the configuration ; : 451 | 628.321 336.668 0.0202054 0.00184722 43577.2 0; : 452 Minimum Test error found - save the configuration ; : 452 | 621.73 333.236 0.0201956 0.00184565 43596.7 0; : 453 Minimum Test error found - save the configuration ; : 453 | 615.499 330.282 0.0202258 0.00184415 43521.7 0; : 454 Minimum Test error found - save the configuration ; : 454 | 608.831 326.391 0.0201257 0.00180567 43668.1 0; : 455 Minimum Test error found - save the configuration ; : 455 | 602.478 323.085 0.0201467 0.00181706 43645.1 0; : 456 Minimum Test error found - save the configuration ; : 456 | 596.625 319.828 0.0201415 0.00181382 43649.8 0; : 457 Minimum Tes,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:61654,config,configuration,61654,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 462 | 560.843 301.023 0.0201248 0.00180535 43669.5 0; : 463 Minimum Test error found - save the configuration ; : 463 | 555.13 298.085 0.0201287 0.00181104 43673.6 0; : 464 Minimum Test error found - save the configuration ; : 464 | 549.755 294.833 0.0201145 0.00181462 43716.1 0; : 465 Minimum Test error found - save the configuration ; : 465 | 543.742 292.285 0.0201004 0.00181141 43742.2 0; : 466 Minimum Test error found - save the configuration ; : 466 | 538.058 289.638 0.0201135 0.00181083 43709.6 0; : 467 Minimum Test error found - save the configuration ; : 467 | 532.551 286.201 0.0203237 0.00183254 43264 0; : 468 Minimum Test error found - save the configuration ; : 468 | 527.38 283.018 0.0206168 0.00187635 42688.4 0; : 469 Minimum Test error found - save the configuration ; : 469 | 521.821 280.136 0.020536 0.00184948 42811.7 0; : 470 Minimum Test error found - save the configuration ; : 470 | 516.179 277.682 0.0201344 0.00181863 43678.3 0; : 471 Minimum Test error found - save the configuration ; : 471 | 510.8 274.83 0.02012 0.00181888 43713.2 0; : 472 Minimum Test error found - save the configuration ; : 472 | 505.541 272.006 0.0201116 0.0018163 43727.1 0; : 473 Minimum Test error found - save the configuration ; : 473 | 500.494 269.395 0.0201254 0.00181777 43697.5 0; : 474 Minimum Test error found - save the configuration ; : 474 | 495.466 266.483 0.0201058 0.00181722 43743.1 0; : 475 Minimum Test error found - save the configuration ; : 475 | 490.186 263.742 0.0201189 0.00181234 43700.1 0; : 476 Minimum Test error found - save the configuration ; : 476 | 485.098 261.173 0.0201246 0.00180486 43668.7 0; : 477 Minimum Test error found - save the configuration ; : 477 | 480.019 258.868 0.0201244 0.00181187 43685.9 0; : 478 Minimum Test error found - save the configuration ; : 478 | 475.092 256.56 0.0201327 0.00181261 43667.9 0; : 479 Minimum Test error found - save the configuration ; : 479 | 470.459 253.447 0.0201134 0.00181351 43716.2 0; : 480 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:64258,config,configuration,64258,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 478 | 475.092 256.56 0.0201327 0.00181261 43667.9 0; : 479 Minimum Test error found - save the configuration ; : 479 | 470.459 253.447 0.0201134 0.00181351 43716.2 0; : 480 Minimum Test error found - save the configuration ; : 480 | 465.037 251.028 0.0201358 0.00183269 43708.4 0; : 481 Minimum Test error found - save the configuration ; : 481 | 460.485 248.77 0.0203198 0.00182444 43254.2 0; : 482 Minimum Test error found - save the configuration ; : 482 | 455.372 247.229 0.0201175 0.00180448 43684.8 0; : 483 Minimum Test error found - save the configuration ; : 483 | 451.061 243.731 0.0201278 0.0018159 43687.5 0; : 484 Minimum Test error found - save the configuration ; : 484 | 445.909 241.583 0.0201078 0.00181153 43724.8 0; : 485 Minimum Test error found - save the configuration ; : 485 | 441.645 238.817 0.0201252 0.00182817 43723 0; : 486 Minimum Test error found - save the configuration ; : 486 | 436.721 236.872 0.0201168 0.00181086 43701.6 0; : 487 Minimum Test error found - save the configuration ; : 487 | 432.036 234.838 0.0201083 0.00181291 43726.9 0; : 488 Minimum Test error found - save the configuration ; : 488 | 427.772 232.082 0.0201422 0.00181171 43643.2 0; : 489 Minimum Test error found - save the configuration ; : 489 | 423.017 229.997 0.0203149 0.00183693 43294.7 0; : 490 Minimum Test error found - save the configuration ; : 490 | 419.119 227.561 0.0201444 0.00181942 43656.3 0; : 491 Minimum Test error found - save the configuration ; : 491 | 414.431 225.611 0.0201416 0.00181918 43662.3 0; : 492 Minimum Test error found - save the configuration ; : 492 | 409.916 223.444 0.0201215 0.00181755 43706.4 0; : 493 Minimum Test error found - save the configuration ; : 493 | 405.856 221.079 0.0201212 0.00183714 43754 0; : 494 Minimum Test error found - save the configuration ; : 494 | 401.45 219.099 0.0201193 0.00182499 43729.5 0; : 495 Minimum Test error found - save the configuration ; : 495 | 397.399 217.296 0.020126 0.00182371 43710.3 0; : 496 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:66071,config,configuration,66071,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 488 | 427.772 232.082 0.0201422 0.00181171 43643.2 0; : 489 Minimum Test error found - save the configuration ; : 489 | 423.017 229.997 0.0203149 0.00183693 43294.7 0; : 490 Minimum Test error found - save the configuration ; : 490 | 419.119 227.561 0.0201444 0.00181942 43656.3 0; : 491 Minimum Test error found - save the configuration ; : 491 | 414.431 225.611 0.0201416 0.00181918 43662.3 0; : 492 Minimum Test error found - save the configuration ; : 492 | 409.916 223.444 0.0201215 0.00181755 43706.4 0; : 493 Minimum Test error found - save the configuration ; : 493 | 405.856 221.079 0.0201212 0.00183714 43754 0; : 494 Minimum Test error found - save the configuration ; : 494 | 401.45 219.099 0.0201193 0.00182499 43729.5 0; : 495 Minimum Test error found - save the configuration ; : 495 | 397.399 217.296 0.020126 0.00182371 43710.3 0; : 496 Minimum Test error found - save the configuration ; : 496 | 393.093 215.198 0.0201176 0.0018173 43715.1 0; : 497 Minimum Test error found - save the configuration ; : 497 | 389.026 212.813 0.0201623 0.00182183 43619.4 0; : 498 Minimum Test error found - save the configuration ; : 498 | 384.957 210.725 0.0201097 0.00181178 43720.7 0; : 499 Minimum Test error found - save the configuration ; : 499 | 380.678 208.901 0.0201236 0.00180512 43671.8 0; : 500 Minimum Test error found - save the configuration ; : 500 | 376.893 206.954 0.0201138 0.00180496 43694.8 0; : 501 Minimum Test error found - save the configuration ; : 501 | 373.069 204.754 0.020131 0.0018136 43674.2 0; : 502 Minimum Test error found - save the configuration ; : 502 | 368.81 202.934 0.0201114 0.00181117 43715.3 0; : 503 Minimum Test error found - save the configuration ; : 503 | 365.178 200.54 0.0201169 0.00181058 43700.7 0; : 504 Minimum Test error found - save the configuration ; : 504 | 361.148 198.738 0.0201232 0.00180952 43683.3 0; : 505 Minimum Test error found - save the configuration ; : 505 | 357.509 197.423 0.0201176 0.00181006 43697.8 0; : 506 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:67206,config,configuration,67206,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 489 | 423.017 229.997 0.0203149 0.00183693 43294.7 0; : 490 Minimum Test error found - save the configuration ; : 490 | 419.119 227.561 0.0201444 0.00181942 43656.3 0; : 491 Minimum Test error found - save the configuration ; : 491 | 414.431 225.611 0.0201416 0.00181918 43662.3 0; : 492 Minimum Test error found - save the configuration ; : 492 | 409.916 223.444 0.0201215 0.00181755 43706.4 0; : 493 Minimum Test error found - save the configuration ; : 493 | 405.856 221.079 0.0201212 0.00183714 43754 0; : 494 Minimum Test error found - save the configuration ; : 494 | 401.45 219.099 0.0201193 0.00182499 43729.5 0; : 495 Minimum Test error found - save the configuration ; : 495 | 397.399 217.296 0.020126 0.00182371 43710.3 0; : 496 Minimum Test error found - save the configuration ; : 496 | 393.093 215.198 0.0201176 0.0018173 43715.1 0; : 497 Minimum Test error found - save the configuration ; : 497 | 389.026 212.813 0.0201623 0.00182183 43619.4 0; : 498 Minimum Test error found - save the configuration ; : 498 | 384.957 210.725 0.0201097 0.00181178 43720.7 0; : 499 Minimum Test error found - save the configuration ; : 499 | 380.678 208.901 0.0201236 0.00180512 43671.8 0; : 500 Minimum Test error found - save the configuration ; : 500 | 376.893 206.954 0.0201138 0.00180496 43694.8 0; : 501 Minimum Test error found - save the configuration ; : 501 | 373.069 204.754 0.020131 0.0018136 43674.2 0; : 502 Minimum Test error found - save the configuration ; : 502 | 368.81 202.934 0.0201114 0.00181117 43715.3 0; : 503 Minimum Test error found - save the configuration ; : 503 | 365.178 200.54 0.0201169 0.00181058 43700.7 0; : 504 Minimum Test error found - save the configuration ; : 504 | 361.148 198.738 0.0201232 0.00180952 43683.3 0; : 505 Minimum Test error found - save the configuration ; : 505 | 357.509 197.423 0.0201176 0.00181006 43697.8 0; : 506 Minimum Test error found - save the configuration ; : 506 | 353.597 195.555 0.0201061 0.00181022 43725.7 0; : 507 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:67320,config,configuration,67320,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 490 | 419.119 227.561 0.0201444 0.00181942 43656.3 0; : 491 Minimum Test error found - save the configuration ; : 491 | 414.431 225.611 0.0201416 0.00181918 43662.3 0; : 492 Minimum Test error found - save the configuration ; : 492 | 409.916 223.444 0.0201215 0.00181755 43706.4 0; : 493 Minimum Test error found - save the configuration ; : 493 | 405.856 221.079 0.0201212 0.00183714 43754 0; : 494 Minimum Test error found - save the configuration ; : 494 | 401.45 219.099 0.0201193 0.00182499 43729.5 0; : 495 Minimum Test error found - save the configuration ; : 495 | 397.399 217.296 0.020126 0.00182371 43710.3 0; : 496 Minimum Test error found - save the configuration ; : 496 | 393.093 215.198 0.0201176 0.0018173 43715.1 0; : 497 Minimum Test error found - save the configuration ; : 497 | 389.026 212.813 0.0201623 0.00182183 43619.4 0; : 498 Minimum Test error found - save the configuration ; : 498 | 384.957 210.725 0.0201097 0.00181178 43720.7 0; : 499 Minimum Test error found - save the configuration ; : 499 | 380.678 208.901 0.0201236 0.00180512 43671.8 0; : 500 Minimum Test error found - save the configuration ; : 500 | 376.893 206.954 0.0201138 0.00180496 43694.8 0; : 501 Minimum Test error found - save the configuration ; : 501 | 373.069 204.754 0.020131 0.0018136 43674.2 0; : 502 Minimum Test error found - save the configuration ; : 502 | 368.81 202.934 0.0201114 0.00181117 43715.3 0; : 503 Minimum Test error found - save the configuration ; : 503 | 365.178 200.54 0.0201169 0.00181058 43700.7 0; : 504 Minimum Test error found - save the configuration ; : 504 | 361.148 198.738 0.0201232 0.00180952 43683.3 0; : 505 Minimum Test error found - save the configuration ; : 505 | 357.509 197.423 0.0201176 0.00181006 43697.8 0; : 506 Minimum Test error found - save the configuration ; : 506 | 353.597 195.555 0.0201061 0.00181022 43725.7 0; : 507 Minimum Test error found - save the configuration ; : 507 | 349.908 193.134 0.0201154 0.00180497 43690.9 0; : 508 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:67434,config,configuration,67434,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 491 | 414.431 225.611 0.0201416 0.00181918 43662.3 0; : 492 Minimum Test error found - save the configuration ; : 492 | 409.916 223.444 0.0201215 0.00181755 43706.4 0; : 493 Minimum Test error found - save the configuration ; : 493 | 405.856 221.079 0.0201212 0.00183714 43754 0; : 494 Minimum Test error found - save the configuration ; : 494 | 401.45 219.099 0.0201193 0.00182499 43729.5 0; : 495 Minimum Test error found - save the configuration ; : 495 | 397.399 217.296 0.020126 0.00182371 43710.3 0; : 496 Minimum Test error found - save the configuration ; : 496 | 393.093 215.198 0.0201176 0.0018173 43715.1 0; : 497 Minimum Test error found - save the configuration ; : 497 | 389.026 212.813 0.0201623 0.00182183 43619.4 0; : 498 Minimum Test error found - save the configuration ; : 498 | 384.957 210.725 0.0201097 0.00181178 43720.7 0; : 499 Minimum Test error found - save the configuration ; : 499 | 380.678 208.901 0.0201236 0.00180512 43671.8 0; : 500 Minimum Test error found - save the configuration ; : 500 | 376.893 206.954 0.0201138 0.00180496 43694.8 0; : 501 Minimum Test error found - save the configuration ; : 501 | 373.069 204.754 0.020131 0.0018136 43674.2 0; : 502 Minimum Test error found - save the configuration ; : 502 | 368.81 202.934 0.0201114 0.00181117 43715.3 0; : 503 Minimum Test error found - save the configuration ; : 503 | 365.178 200.54 0.0201169 0.00181058 43700.7 0; : 504 Minimum Test error found - save the configuration ; : 504 | 361.148 198.738 0.0201232 0.00180952 43683.3 0; : 505 Minimum Test error found - save the configuration ; : 505 | 357.509 197.423 0.0201176 0.00181006 43697.8 0; : 506 Minimum Test error found - save the configuration ; : 506 | 353.597 195.555 0.0201061 0.00181022 43725.7 0; : 507 Minimum Test error found - save the configuration ; : 507 | 349.908 193.134 0.0201154 0.00180497 43690.9 0; : 508 Minimum Test error found - save the configuration ; : 508 | 346.368 191.635 0.0201239 0.00180513 43671.2 0; : 509 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:67548,config,configuration,67548,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 492 | 409.916 223.444 0.0201215 0.00181755 43706.4 0; : 493 Minimum Test error found - save the configuration ; : 493 | 405.856 221.079 0.0201212 0.00183714 43754 0; : 494 Minimum Test error found - save the configuration ; : 494 | 401.45 219.099 0.0201193 0.00182499 43729.5 0; : 495 Minimum Test error found - save the configuration ; : 495 | 397.399 217.296 0.020126 0.00182371 43710.3 0; : 496 Minimum Test error found - save the configuration ; : 496 | 393.093 215.198 0.0201176 0.0018173 43715.1 0; : 497 Minimum Test error found - save the configuration ; : 497 | 389.026 212.813 0.0201623 0.00182183 43619.4 0; : 498 Minimum Test error found - save the configuration ; : 498 | 384.957 210.725 0.0201097 0.00181178 43720.7 0; : 499 Minimum Test error found - save the configuration ; : 499 | 380.678 208.901 0.0201236 0.00180512 43671.8 0; : 500 Minimum Test error found - save the configuration ; : 500 | 376.893 206.954 0.0201138 0.00180496 43694.8 0; : 501 Minimum Test error found - save the configuration ; : 501 | 373.069 204.754 0.020131 0.0018136 43674.2 0; : 502 Minimum Test error found - save the configuration ; : 502 | 368.81 202.934 0.0201114 0.00181117 43715.3 0; : 503 Minimum Test error found - save the configuration ; : 503 | 365.178 200.54 0.0201169 0.00181058 43700.7 0; : 504 Minimum Test error found - save the configuration ; : 504 | 361.148 198.738 0.0201232 0.00180952 43683.3 0; : 505 Minimum Test error found - save the configuration ; : 505 | 357.509 197.423 0.0201176 0.00181006 43697.8 0; : 506 Minimum Test error found - save the configuration ; : 506 | 353.597 195.555 0.0201061 0.00181022 43725.7 0; : 507 Minimum Test error found - save the configuration ; : 507 | 349.908 193.134 0.0201154 0.00180497 43690.9 0; : 508 Minimum Test error found - save the configuration ; : 508 | 346.368 191.635 0.0201239 0.00180513 43671.2 0; : 509 Minimum Test error found - save the configuration ; : 509 | 342.684 189.987 0.020479 0.00183624 42912.1 0; : 510 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:67662,config,configuration,67662,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 496 | 393.093 215.198 0.0201176 0.0018173 43715.1 0; : 497 Minimum Test error found - save the configuration ; : 497 | 389.026 212.813 0.0201623 0.00182183 43619.4 0; : 498 Minimum Test error found - save the configuration ; : 498 | 384.957 210.725 0.0201097 0.00181178 43720.7 0; : 499 Minimum Test error found - save the configuration ; : 499 | 380.678 208.901 0.0201236 0.00180512 43671.8 0; : 500 Minimum Test error found - save the configuration ; : 500 | 376.893 206.954 0.0201138 0.00180496 43694.8 0; : 501 Minimum Test error found - save the configuration ; : 501 | 373.069 204.754 0.020131 0.0018136 43674.2 0; : 502 Minimum Test error found - save the configuration ; : 502 | 368.81 202.934 0.0201114 0.00181117 43715.3 0; : 503 Minimum Test error found - save the configuration ; : 503 | 365.178 200.54 0.0201169 0.00181058 43700.7 0; : 504 Minimum Test error found - save the configuration ; : 504 | 361.148 198.738 0.0201232 0.00180952 43683.3 0; : 505 Minimum Test error found - save the configuration ; : 505 | 357.509 197.423 0.0201176 0.00181006 43697.8 0; : 506 Minimum Test error found - save the configuration ; : 506 | 353.597 195.555 0.0201061 0.00181022 43725.7 0; : 507 Minimum Test error found - save the configuration ; : 507 | 349.908 193.134 0.0201154 0.00180497 43690.9 0; : 508 Minimum Test error found - save the configuration ; : 508 | 346.368 191.635 0.0201239 0.00180513 43671.2 0; : 509 Minimum Test error found - save the configuration ; : 509 | 342.684 189.987 0.020479 0.00183624 42912.1 0; : 510 Minimum Test error found - save the configuration ; : 510 | 338.936 187.68 0.0201257 0.00181109 43680.9 0; : 511 Minimum Test error found - save the configuration ; : 511 | 335.178 185.581 0.0201106 0.0018111 43716.9 0; : 512 Minimum Test error found - save the configuration ; : 512 | 331.755 184.666 0.0201452 0.00182488 43667.3 0; : 513 Minimum Test error found - save the configuration ; : 513 | 328.659 182.798 0.0201844 0.00187405 43691.2 0; : 514 Mini,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:68114,config,configuration,68114,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 501 | 373.069 204.754 0.020131 0.0018136 43674.2 0; : 502 Minimum Test error found - save the configuration ; : 502 | 368.81 202.934 0.0201114 0.00181117 43715.3 0; : 503 Minimum Test error found - save the configuration ; : 503 | 365.178 200.54 0.0201169 0.00181058 43700.7 0; : 504 Minimum Test error found - save the configuration ; : 504 | 361.148 198.738 0.0201232 0.00180952 43683.3 0; : 505 Minimum Test error found - save the configuration ; : 505 | 357.509 197.423 0.0201176 0.00181006 43697.8 0; : 506 Minimum Test error found - save the configuration ; : 506 | 353.597 195.555 0.0201061 0.00181022 43725.7 0; : 507 Minimum Test error found - save the configuration ; : 507 | 349.908 193.134 0.0201154 0.00180497 43690.9 0; : 508 Minimum Test error found - save the configuration ; : 508 | 346.368 191.635 0.0201239 0.00180513 43671.2 0; : 509 Minimum Test error found - save the configuration ; : 509 | 342.684 189.987 0.020479 0.00183624 42912.1 0; : 510 Minimum Test error found - save the configuration ; : 510 | 338.936 187.68 0.0201257 0.00181109 43680.9 0; : 511 Minimum Test error found - save the configuration ; : 511 | 335.178 185.581 0.0201106 0.0018111 43716.9 0; : 512 Minimum Test error found - save the configuration ; : 512 | 331.755 184.666 0.0201452 0.00182488 43667.3 0; : 513 Minimum Test error found - save the configuration ; : 513 | 328.659 182.798 0.0201844 0.00187405 43691.2 0; : 514 Minimum Test error found - save the configuration ; : 514 | 324.836 180.622 0.0201448 0.00183693 43697 0; : 515 Minimum Test error found - save the configuration ; : 515 | 321.45 179.12 0.020437 0.00183763 43012.3 0; : 516 Minimum Test error found - save the configuration ; : 516 | 317.804 177.214 0.0201516 0.00181548 43629.8 0; : 517 Minimum Test error found - save the configuration ; : 517 | 314.454 175.878 0.0201248 0.00181905 43702.1 0; : 518 Minimum Test error found - save the configuration ; : 518 | 311.376 174.038 0.0209489 0.00256909 43525.9 0; : 519 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:68683,config,configuration,68683,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 512 | 331.755 184.666 0.0201452 0.00182488 43667.3 0; : 513 Minimum Test error found - save the configuration ; : 513 | 328.659 182.798 0.0201844 0.00187405 43691.2 0; : 514 Minimum Test error found - save the configuration ; : 514 | 324.836 180.622 0.0201448 0.00183693 43697 0; : 515 Minimum Test error found - save the configuration ; : 515 | 321.45 179.12 0.020437 0.00183763 43012.3 0; : 516 Minimum Test error found - save the configuration ; : 516 | 317.804 177.214 0.0201516 0.00181548 43629.8 0; : 517 Minimum Test error found - save the configuration ; : 517 | 314.454 175.878 0.0201248 0.00181905 43702.1 0; : 518 Minimum Test error found - save the configuration ; : 518 | 311.376 174.038 0.0209489 0.00256909 43525.9 0; : 519 Minimum Test error found - save the configuration ; : 519 | 308.194 172.777 0.0312717 0.00294953 28246.5 0; : 520 Minimum Test error found - save the configuration ; : 520 | 304.608 170.454 0.0241719 0.00185008 35839.4 0; : 521 Minimum Test error found - save the configuration ; : 521 | 301.091 169.057 0.0201646 0.00182965 43632.5 0; : 522 Minimum Test error found - save the configuration ; : 522 | 297.757 167.472 0.0204481 0.00183794 42987.2 0; : 523 Minimum Test error found - save the configuration ; : 523 | 294.843 165.895 0.0201197 0.00181783 43711.4 0; : 524 Minimum Test error found - save the configuration ; : 524 | 291.692 164.911 0.0201636 0.00183144 43639.1 0; : 525 Minimum Test error found - save the configuration ; : 525 | 288.615 162.74 0.0201168 0.0018126 43705.7 0; : 526 Minimum Test error found - save the configuration ; : 526 | 285.409 161.045 0.0201121 0.00181244 43716.6 0; : 527 Minimum Test error found - save the configuration ; : 527 | 282.171 159.772 0.0201445 0.00181159 43637.4 0; : 528 Minimum Test error found - save the configuration ; : 528 | 279.108 159.481 0.0201013 0.00180683 43729.2 0; : 529 Minimum Test error found - save the configuration ; : 529 | 276.719 156.675 0.0201429 0.0018175 43655.3 0; : 530 Mini,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:69930,config,configuration,69930,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 513 | 328.659 182.798 0.0201844 0.00187405 43691.2 0; : 514 Minimum Test error found - save the configuration ; : 514 | 324.836 180.622 0.0201448 0.00183693 43697 0; : 515 Minimum Test error found - save the configuration ; : 515 | 321.45 179.12 0.020437 0.00183763 43012.3 0; : 516 Minimum Test error found - save the configuration ; : 516 | 317.804 177.214 0.0201516 0.00181548 43629.8 0; : 517 Minimum Test error found - save the configuration ; : 517 | 314.454 175.878 0.0201248 0.00181905 43702.1 0; : 518 Minimum Test error found - save the configuration ; : 518 | 311.376 174.038 0.0209489 0.00256909 43525.9 0; : 519 Minimum Test error found - save the configuration ; : 519 | 308.194 172.777 0.0312717 0.00294953 28246.5 0; : 520 Minimum Test error found - save the configuration ; : 520 | 304.608 170.454 0.0241719 0.00185008 35839.4 0; : 521 Minimum Test error found - save the configuration ; : 521 | 301.091 169.057 0.0201646 0.00182965 43632.5 0; : 522 Minimum Test error found - save the configuration ; : 522 | 297.757 167.472 0.0204481 0.00183794 42987.2 0; : 523 Minimum Test error found - save the configuration ; : 523 | 294.843 165.895 0.0201197 0.00181783 43711.4 0; : 524 Minimum Test error found - save the configuration ; : 524 | 291.692 164.911 0.0201636 0.00183144 43639.1 0; : 525 Minimum Test error found - save the configuration ; : 525 | 288.615 162.74 0.0201168 0.0018126 43705.7 0; : 526 Minimum Test error found - save the configuration ; : 526 | 285.409 161.045 0.0201121 0.00181244 43716.6 0; : 527 Minimum Test error found - save the configuration ; : 527 | 282.171 159.772 0.0201445 0.00181159 43637.4 0; : 528 Minimum Test error found - save the configuration ; : 528 | 279.108 159.481 0.0201013 0.00180683 43729.2 0; : 529 Minimum Test error found - save the configuration ; : 529 | 276.719 156.675 0.0201429 0.0018175 43655.3 0; : 530 Minimum Test error found - save the configuration ; : 530 | 273.651 155.435 0.0201142 0.00181452 43716.7 0; : 531 Mini,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:70044,config,configuration,70044,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 514 | 324.836 180.622 0.0201448 0.00183693 43697 0; : 515 Minimum Test error found - save the configuration ; : 515 | 321.45 179.12 0.020437 0.00183763 43012.3 0; : 516 Minimum Test error found - save the configuration ; : 516 | 317.804 177.214 0.0201516 0.00181548 43629.8 0; : 517 Minimum Test error found - save the configuration ; : 517 | 314.454 175.878 0.0201248 0.00181905 43702.1 0; : 518 Minimum Test error found - save the configuration ; : 518 | 311.376 174.038 0.0209489 0.00256909 43525.9 0; : 519 Minimum Test error found - save the configuration ; : 519 | 308.194 172.777 0.0312717 0.00294953 28246.5 0; : 520 Minimum Test error found - save the configuration ; : 520 | 304.608 170.454 0.0241719 0.00185008 35839.4 0; : 521 Minimum Test error found - save the configuration ; : 521 | 301.091 169.057 0.0201646 0.00182965 43632.5 0; : 522 Minimum Test error found - save the configuration ; : 522 | 297.757 167.472 0.0204481 0.00183794 42987.2 0; : 523 Minimum Test error found - save the configuration ; : 523 | 294.843 165.895 0.0201197 0.00181783 43711.4 0; : 524 Minimum Test error found - save the configuration ; : 524 | 291.692 164.911 0.0201636 0.00183144 43639.1 0; : 525 Minimum Test error found - save the configuration ; : 525 | 288.615 162.74 0.0201168 0.0018126 43705.7 0; : 526 Minimum Test error found - save the configuration ; : 526 | 285.409 161.045 0.0201121 0.00181244 43716.6 0; : 527 Minimum Test error found - save the configuration ; : 527 | 282.171 159.772 0.0201445 0.00181159 43637.4 0; : 528 Minimum Test error found - save the configuration ; : 528 | 279.108 159.481 0.0201013 0.00180683 43729.2 0; : 529 Minimum Test error found - save the configuration ; : 529 | 276.719 156.675 0.0201429 0.0018175 43655.3 0; : 530 Minimum Test error found - save the configuration ; : 530 | 273.651 155.435 0.0201142 0.00181452 43716.7 0; : 531 Minimum Test error found - save the configuration ; : 531 | 270.462 154.476 0.0201154 0.00181212 43707.9 0; : 532 Mini,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:70158,config,configuration,70158,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 524 | 291.692 164.911 0.0201636 0.00183144 43639.1 0; : 525 Minimum Test error found - save the configuration ; : 525 | 288.615 162.74 0.0201168 0.0018126 43705.7 0; : 526 Minimum Test error found - save the configuration ; : 526 | 285.409 161.045 0.0201121 0.00181244 43716.6 0; : 527 Minimum Test error found - save the configuration ; : 527 | 282.171 159.772 0.0201445 0.00181159 43637.4 0; : 528 Minimum Test error found - save the configuration ; : 528 | 279.108 159.481 0.0201013 0.00180683 43729.2 0; : 529 Minimum Test error found - save the configuration ; : 529 | 276.719 156.675 0.0201429 0.0018175 43655.3 0; : 530 Minimum Test error found - save the configuration ; : 530 | 273.651 155.435 0.0201142 0.00181452 43716.7 0; : 531 Minimum Test error found - save the configuration ; : 531 | 270.462 154.476 0.0201154 0.00181212 43707.9 0; : 532 Minimum Test error found - save the configuration ; : 532 | 267.569 152.332 0.02019 0.00182583 43563.1 0; : 533 Minimum Test error found - save the configuration ; : 533 | 264.8 151.073 0.0201226 0.00181364 43694.6 0; : 534 Minimum Test error found - save the configuration ; : 534 | 261.885 150.199 0.0201859 0.00182138 43562.3 0; : 535 Minimum Test error found - save the configuration ; : 535 | 259.213 147.905 0.0201317 0.00182788 43706.7 0; : 536 Minimum Test error found - save the configuration ; : 536 | 255.833 146.796 0.0201182 0.0018174 43713.8 0; : 537 Minimum Test error found - save the configuration ; : 537 | 253.362 145.429 0.0201791 0.00183234 43604.5 0; : 538 Minimum Test error found - save the configuration ; : 538 | 250.467 143.959 0.0202125 0.00183528 43532.1 0; : 539 Minimum Test error found - save the configuration ; : 539 | 247.858 142.417 0.0201308 0.0018179 43685.2 0; : 540 Minimum Test error found - save the configuration ; : 540 | 245.006 140.909 0.0201459 0.00181688 43646.7 0; : 541 Minimum Test error found - save the configuration ; : 541 | 242.398 140.629 0.020154 0.00184094 43684.7 0; : 542 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:71293,config,configuration,71293,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 526 | 285.409 161.045 0.0201121 0.00181244 43716.6 0; : 527 Minimum Test error found - save the configuration ; : 527 | 282.171 159.772 0.0201445 0.00181159 43637.4 0; : 528 Minimum Test error found - save the configuration ; : 528 | 279.108 159.481 0.0201013 0.00180683 43729.2 0; : 529 Minimum Test error found - save the configuration ; : 529 | 276.719 156.675 0.0201429 0.0018175 43655.3 0; : 530 Minimum Test error found - save the configuration ; : 530 | 273.651 155.435 0.0201142 0.00181452 43716.7 0; : 531 Minimum Test error found - save the configuration ; : 531 | 270.462 154.476 0.0201154 0.00181212 43707.9 0; : 532 Minimum Test error found - save the configuration ; : 532 | 267.569 152.332 0.02019 0.00182583 43563.1 0; : 533 Minimum Test error found - save the configuration ; : 533 | 264.8 151.073 0.0201226 0.00181364 43694.6 0; : 534 Minimum Test error found - save the configuration ; : 534 | 261.885 150.199 0.0201859 0.00182138 43562.3 0; : 535 Minimum Test error found - save the configuration ; : 535 | 259.213 147.905 0.0201317 0.00182788 43706.7 0; : 536 Minimum Test error found - save the configuration ; : 536 | 255.833 146.796 0.0201182 0.0018174 43713.8 0; : 537 Minimum Test error found - save the configuration ; : 537 | 253.362 145.429 0.0201791 0.00183234 43604.5 0; : 538 Minimum Test error found - save the configuration ; : 538 | 250.467 143.959 0.0202125 0.00183528 43532.1 0; : 539 Minimum Test error found - save the configuration ; : 539 | 247.858 142.417 0.0201308 0.0018179 43685.2 0; : 540 Minimum Test error found - save the configuration ; : 540 | 245.006 140.909 0.0201459 0.00181688 43646.7 0; : 541 Minimum Test error found - save the configuration ; : 541 | 242.398 140.629 0.020154 0.00184094 43684.7 0; : 542 Minimum Test error found - save the configuration ; : 542 | 239.53 138.758 0.0201353 0.00182676 43695.4 0; : 543 Minimum Test error found - save the configuration ; : 543 | 237.23 137.09 0.0201583 0.00184429 43682.4 0; : 544 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:71519,config,configuration,71519,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 527 | 282.171 159.772 0.0201445 0.00181159 43637.4 0; : 528 Minimum Test error found - save the configuration ; : 528 | 279.108 159.481 0.0201013 0.00180683 43729.2 0; : 529 Minimum Test error found - save the configuration ; : 529 | 276.719 156.675 0.0201429 0.0018175 43655.3 0; : 530 Minimum Test error found - save the configuration ; : 530 | 273.651 155.435 0.0201142 0.00181452 43716.7 0; : 531 Minimum Test error found - save the configuration ; : 531 | 270.462 154.476 0.0201154 0.00181212 43707.9 0; : 532 Minimum Test error found - save the configuration ; : 532 | 267.569 152.332 0.02019 0.00182583 43563.1 0; : 533 Minimum Test error found - save the configuration ; : 533 | 264.8 151.073 0.0201226 0.00181364 43694.6 0; : 534 Minimum Test error found - save the configuration ; : 534 | 261.885 150.199 0.0201859 0.00182138 43562.3 0; : 535 Minimum Test error found - save the configuration ; : 535 | 259.213 147.905 0.0201317 0.00182788 43706.7 0; : 536 Minimum Test error found - save the configuration ; : 536 | 255.833 146.796 0.0201182 0.0018174 43713.8 0; : 537 Minimum Test error found - save the configuration ; : 537 | 253.362 145.429 0.0201791 0.00183234 43604.5 0; : 538 Minimum Test error found - save the configuration ; : 538 | 250.467 143.959 0.0202125 0.00183528 43532.1 0; : 539 Minimum Test error found - save the configuration ; : 539 | 247.858 142.417 0.0201308 0.0018179 43685.2 0; : 540 Minimum Test error found - save the configuration ; : 540 | 245.006 140.909 0.0201459 0.00181688 43646.7 0; : 541 Minimum Test error found - save the configuration ; : 541 | 242.398 140.629 0.020154 0.00184094 43684.7 0; : 542 Minimum Test error found - save the configuration ; : 542 | 239.53 138.758 0.0201353 0.00182676 43695.4 0; : 543 Minimum Test error found - save the configuration ; : 543 | 237.23 137.09 0.0201583 0.00184429 43682.4 0; : 544 Minimum Test error found - save the configuration ; : 544 | 234.272 136.088 0.0201297 0.00183112 43719.2 0; : 545 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:71633,config,configuration,71633,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 530 | 273.651 155.435 0.0201142 0.00181452 43716.7 0; : 531 Minimum Test error found - save the configuration ; : 531 | 270.462 154.476 0.0201154 0.00181212 43707.9 0; : 532 Minimum Test error found - save the configuration ; : 532 | 267.569 152.332 0.02019 0.00182583 43563.1 0; : 533 Minimum Test error found - save the configuration ; : 533 | 264.8 151.073 0.0201226 0.00181364 43694.6 0; : 534 Minimum Test error found - save the configuration ; : 534 | 261.885 150.199 0.0201859 0.00182138 43562.3 0; : 535 Minimum Test error found - save the configuration ; : 535 | 259.213 147.905 0.0201317 0.00182788 43706.7 0; : 536 Minimum Test error found - save the configuration ; : 536 | 255.833 146.796 0.0201182 0.0018174 43713.8 0; : 537 Minimum Test error found - save the configuration ; : 537 | 253.362 145.429 0.0201791 0.00183234 43604.5 0; : 538 Minimum Test error found - save the configuration ; : 538 | 250.467 143.959 0.0202125 0.00183528 43532.1 0; : 539 Minimum Test error found - save the configuration ; : 539 | 247.858 142.417 0.0201308 0.0018179 43685.2 0; : 540 Minimum Test error found - save the configuration ; : 540 | 245.006 140.909 0.0201459 0.00181688 43646.7 0; : 541 Minimum Test error found - save the configuration ; : 541 | 242.398 140.629 0.020154 0.00184094 43684.7 0; : 542 Minimum Test error found - save the configuration ; : 542 | 239.53 138.758 0.0201353 0.00182676 43695.4 0; : 543 Minimum Test error found - save the configuration ; : 543 | 237.23 137.09 0.0201583 0.00184429 43682.4 0; : 544 Minimum Test error found - save the configuration ; : 544 | 234.272 136.088 0.0201297 0.00183112 43719.2 0; : 545 Minimum Test error found - save the configuration ; : 545 | 231.858 134.661 0.021628 0.00191081 40573.6 0; : 546 Minimum Test error found - save the configuration ; : 546 | 229.488 134.189 0.0201396 0.00181917 43667.2 0; : 547 Minimum Test error found - save the configuration ; : 547 | 227.221 132.01 0.0201209 0.00181373 43698.8 0; : 548 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:71974,config,configuration,71974,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 533 | 264.8 151.073 0.0201226 0.00181364 43694.6 0; : 534 Minimum Test error found - save the configuration ; : 534 | 261.885 150.199 0.0201859 0.00182138 43562.3 0; : 535 Minimum Test error found - save the configuration ; : 535 | 259.213 147.905 0.0201317 0.00182788 43706.7 0; : 536 Minimum Test error found - save the configuration ; : 536 | 255.833 146.796 0.0201182 0.0018174 43713.8 0; : 537 Minimum Test error found - save the configuration ; : 537 | 253.362 145.429 0.0201791 0.00183234 43604.5 0; : 538 Minimum Test error found - save the configuration ; : 538 | 250.467 143.959 0.0202125 0.00183528 43532.1 0; : 539 Minimum Test error found - save the configuration ; : 539 | 247.858 142.417 0.0201308 0.0018179 43685.2 0; : 540 Minimum Test error found - save the configuration ; : 540 | 245.006 140.909 0.0201459 0.00181688 43646.7 0; : 541 Minimum Test error found - save the configuration ; : 541 | 242.398 140.629 0.020154 0.00184094 43684.7 0; : 542 Minimum Test error found - save the configuration ; : 542 | 239.53 138.758 0.0201353 0.00182676 43695.4 0; : 543 Minimum Test error found - save the configuration ; : 543 | 237.23 137.09 0.0201583 0.00184429 43682.4 0; : 544 Minimum Test error found - save the configuration ; : 544 | 234.272 136.088 0.0201297 0.00183112 43719.2 0; : 545 Minimum Test error found - save the configuration ; : 545 | 231.858 134.661 0.021628 0.00191081 40573.6 0; : 546 Minimum Test error found - save the configuration ; : 546 | 229.488 134.189 0.0201396 0.00181917 43667.2 0; : 547 Minimum Test error found - save the configuration ; : 547 | 227.221 132.01 0.0201209 0.00181373 43698.8 0; : 548 Minimum Test error found - save the configuration ; : 548 | 224.347 131.158 0.0201557 0.00181812 43626.4 0; : 549 Minimum Test error found - save the configuration ; : 549 | 221.837 129.708 0.0203141 0.00181657 43249 0; : 550 Minimum Test error found - save the configuration ; : 550 | 219.851 128.33 0.0203838 0.00182729 43111.5 0; : 551 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:72314,config,configuration,72314,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 544 | 234.272 136.088 0.0201297 0.00183112 43719.2 0; : 545 Minimum Test error found - save the configuration ; : 545 | 231.858 134.661 0.021628 0.00191081 40573.6 0; : 546 Minimum Test error found - save the configuration ; : 546 | 229.488 134.189 0.0201396 0.00181917 43667.2 0; : 547 Minimum Test error found - save the configuration ; : 547 | 227.221 132.01 0.0201209 0.00181373 43698.8 0; : 548 Minimum Test error found - save the configuration ; : 548 | 224.347 131.158 0.0201557 0.00181812 43626.4 0; : 549 Minimum Test error found - save the configuration ; : 549 | 221.837 129.708 0.0203141 0.00181657 43249 0; : 550 Minimum Test error found - save the configuration ; : 550 | 219.851 128.33 0.0203838 0.00182729 43111.5 0; : 551 Minimum Test error found - save the configuration ; : 551 | 216.872 126.913 0.0201299 0.00182067 43693.7 0; : 552 Minimum Test error found - save the configuration ; : 552 | 214.625 126.196 0.0204788 0.00185067 42945.7 0; : 553 Minimum Test error found - save the configuration ; : 553 | 212.064 124.627 0.0201455 0.0018227 43661.6 0; : 554 Minimum Test error found - save the configuration ; : 554 | 209.68 123.549 0.0201264 0.00183279 43731.1 0; : 555 Minimum Test error found - save the configuration ; : 555 | 207.499 123.145 0.0201096 0.00181963 43739.9 0; : 556 Minimum Test error found - save the configuration ; : 556 | 205.232 121.223 0.0203039 0.0018145 43268 0; : 557 Minimum Test error found - save the configuration ; : 557 | 202.969 119.762 0.0201211 0.00181089 43691.5 0; : 558 Minimum Test error found - save the configuration ; : 558 | 200.33 118.775 0.0201089 0.0018057 43708.3 0; : 559 Minimum Test error found - save the configuration ; : 559 | 197.988 117.386 0.0202964 0.00181486 43286.3 0; : 560 Minimum Test error found - save the configuration ; : 560 | 195.761 116.51 0.020118 0.00181561 43710.2 0; : 561 Minimum Test error found - save the configuration ; : 561 | 193.461 115.526 0.0203798 0.00182877 43124.4 0; : 562 Minimum Te,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:73560,config,configuration,73560,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 561 | 193.461 115.526 0.0203798 0.00182877 43124.4 0; : 562 Minimum Test error found - save the configuration ; : 562 | 191.212 113.975 0.0203924 0.00182053 43075.9 0; : 563 Minimum Test error found - save the configuration ; : 563 | 188.987 113.393 0.0203794 0.00207901 43715 0; : 564 Minimum Test error found - save the configuration ; : 564 | 186.85 112.339 0.0201831 0.00181479 43553.4 0; : 565 Minimum Test error found - save the configuration ; : 565 | 185.071 111.259 0.0203048 0.00182605 43292.9 0; : 566 Minimum Test error found - save the configuration ; : 566 | 182.616 110.112 0.0201778 0.00183613 43616.5 0; : 567 Minimum Test error found - save the configuration ; : 567 | 180.473 109.26 0.0202561 0.00182678 43409.1 0; : 568 Minimum Test error found - save the configuration ; : 568 | 178.451 108.059 0.0201373 0.00182611 43689.1 0; : 569 Minimum Test error found - save the configuration ; : 569 | 176.264 106.78 0.0201111 0.00181323 43721.1 0; : 570 Minimum Test error found - save the configuration ; : 570 | 174.355 105.885 0.0201445 0.00181905 43655.2 0; : 571 | 172.647 106.784 0.0200848 0.0017791 43702.2 1; : 572 Minimum Test error found - save the configuration ; : 572 | 170.589 104.683 0.020165 0.00182763 43626.8 0; : 573 Minimum Test error found - save the configuration ; : 573 | 168.468 102.528 0.0201413 0.00182619 43679.9 0; : 574 Minimum Test error found - save the configuration ; : 574 | 166.622 102.085 0.0201407 0.00181861 43663.2 0; : 575 Minimum Test error found - save the configuration ; : 575 | 164.293 100.588 0.0203765 0.00182671 43127.2 0; : 576 Minimum Test error found - save the configuration ; : 576 | 162.136 99.7953 0.0201485 0.00182291 43654.8 0; : 577 Minimum Test error found - save the configuration ; : 577 | 160.429 98.8873 0.0202404 0.00182125 43433.1 0; : 578 Minimum Test error found - save the configuration ; : 578 | 158.663 98.2522 0.020118 0.00181189 43701.3 0; : 579 Minimum Test error found - save the configuration ; : 579 | 15,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:75484,config,configuration,75484,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 574 | 166.622 102.085 0.0201407 0.00181861 43663.2 0; : 575 Minimum Test error found - save the configuration ; : 575 | 164.293 100.588 0.0203765 0.00182671 43127.2 0; : 576 Minimum Test error found - save the configuration ; : 576 | 162.136 99.7953 0.0201485 0.00182291 43654.8 0; : 577 Minimum Test error found - save the configuration ; : 577 | 160.429 98.8873 0.0202404 0.00182125 43433.1 0; : 578 Minimum Test error found - save the configuration ; : 578 | 158.663 98.2522 0.020118 0.00181189 43701.3 0; : 579 Minimum Test error found - save the configuration ; : 579 | 156.666 96.9925 0.0201133 0.00181082 43710 0; : 580 Minimum Test error found - save the configuration ; : 580 | 154.635 96.1367 0.0201142 0.00181294 43712.9 0; : 581 Minimum Test error found - save the configuration ; : 581 | 153.026 95.3539 0.0201307 0.0018172 43683.7 0; : 582 Minimum Test error found - save the configuration ; : 582 | 151.197 94.0449 0.020143 0.00182303 43668.3 0; : 583 Minimum Test error found - save the configuration ; : 583 | 149.229 93.6244 0.0201231 0.00181874 43705.4 0; : 584 Minimum Test error found - save the configuration ; : 584 | 147.504 92.2301 0.0202996 0.00182281 43297.5 0; : 585 Minimum Test error found - save the configuration ; : 585 | 145.457 91.5459 0.020121 0.00181177 43693.8 0; : 586 Minimum Test error found - save the configuration ; : 586 | 143.954 90.9958 0.02013 0.00181326 43675.8 0; : 587 Minimum Test error found - save the configuration ; : 587 | 142.242 89.8853 0.0201892 0.0018256 43564.4 0; : 588 Minimum Test error found - save the configuration ; : 588 | 140.475 88.3998 0.0202535 0.0018437 43455.2 0; : 589 Minimum Test error found - save the configuration ; : 589 | 138.544 87.8285 0.0201999 0.00182139 43529 0; : 590 Minimum Test error found - save the configuration ; : 590 | 137.153 86.6949 0.0201619 0.00182129 43619.1 0; : 591 Minimum Test error found - save the configuration ; : 591 | 135.294 85.8941 0.0201222 0.00182247 43716.6 0; : 592 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:76901,config,configuration,76901,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 575 | 164.293 100.588 0.0203765 0.00182671 43127.2 0; : 576 Minimum Test error found - save the configuration ; : 576 | 162.136 99.7953 0.0201485 0.00182291 43654.8 0; : 577 Minimum Test error found - save the configuration ; : 577 | 160.429 98.8873 0.0202404 0.00182125 43433.1 0; : 578 Minimum Test error found - save the configuration ; : 578 | 158.663 98.2522 0.020118 0.00181189 43701.3 0; : 579 Minimum Test error found - save the configuration ; : 579 | 156.666 96.9925 0.0201133 0.00181082 43710 0; : 580 Minimum Test error found - save the configuration ; : 580 | 154.635 96.1367 0.0201142 0.00181294 43712.9 0; : 581 Minimum Test error found - save the configuration ; : 581 | 153.026 95.3539 0.0201307 0.0018172 43683.7 0; : 582 Minimum Test error found - save the configuration ; : 582 | 151.197 94.0449 0.020143 0.00182303 43668.3 0; : 583 Minimum Test error found - save the configuration ; : 583 | 149.229 93.6244 0.0201231 0.00181874 43705.4 0; : 584 Minimum Test error found - save the configuration ; : 584 | 147.504 92.2301 0.0202996 0.00182281 43297.5 0; : 585 Minimum Test error found - save the configuration ; : 585 | 145.457 91.5459 0.020121 0.00181177 43693.8 0; : 586 Minimum Test error found - save the configuration ; : 586 | 143.954 90.9958 0.02013 0.00181326 43675.8 0; : 587 Minimum Test error found - save the configuration ; : 587 | 142.242 89.8853 0.0201892 0.0018256 43564.4 0; : 588 Minimum Test error found - save the configuration ; : 588 | 140.475 88.3998 0.0202535 0.0018437 43455.2 0; : 589 Minimum Test error found - save the configuration ; : 589 | 138.544 87.8285 0.0201999 0.00182139 43529 0; : 590 Minimum Test error found - save the configuration ; : 590 | 137.153 86.6949 0.0201619 0.00182129 43619.1 0; : 591 Minimum Test error found - save the configuration ; : 591 | 135.294 85.8941 0.0201222 0.00182247 43716.6 0; : 592 Minimum Test error found - save the configuration ; : 592 | 133.776 84.7442 0.0201242 0.00181719 43699.2 0; : 593 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:77015,config,configuration,77015,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 576 | 162.136 99.7953 0.0201485 0.00182291 43654.8 0; : 577 Minimum Test error found - save the configuration ; : 577 | 160.429 98.8873 0.0202404 0.00182125 43433.1 0; : 578 Minimum Test error found - save the configuration ; : 578 | 158.663 98.2522 0.020118 0.00181189 43701.3 0; : 579 Minimum Test error found - save the configuration ; : 579 | 156.666 96.9925 0.0201133 0.00181082 43710 0; : 580 Minimum Test error found - save the configuration ; : 580 | 154.635 96.1367 0.0201142 0.00181294 43712.9 0; : 581 Minimum Test error found - save the configuration ; : 581 | 153.026 95.3539 0.0201307 0.0018172 43683.7 0; : 582 Minimum Test error found - save the configuration ; : 582 | 151.197 94.0449 0.020143 0.00182303 43668.3 0; : 583 Minimum Test error found - save the configuration ; : 583 | 149.229 93.6244 0.0201231 0.00181874 43705.4 0; : 584 Minimum Test error found - save the configuration ; : 584 | 147.504 92.2301 0.0202996 0.00182281 43297.5 0; : 585 Minimum Test error found - save the configuration ; : 585 | 145.457 91.5459 0.020121 0.00181177 43693.8 0; : 586 Minimum Test error found - save the configuration ; : 586 | 143.954 90.9958 0.02013 0.00181326 43675.8 0; : 587 Minimum Test error found - save the configuration ; : 587 | 142.242 89.8853 0.0201892 0.0018256 43564.4 0; : 588 Minimum Test error found - save the configuration ; : 588 | 140.475 88.3998 0.0202535 0.0018437 43455.2 0; : 589 Minimum Test error found - save the configuration ; : 589 | 138.544 87.8285 0.0201999 0.00182139 43529 0; : 590 Minimum Test error found - save the configuration ; : 590 | 137.153 86.6949 0.0201619 0.00182129 43619.1 0; : 591 Minimum Test error found - save the configuration ; : 591 | 135.294 85.8941 0.0201222 0.00182247 43716.6 0; : 592 Minimum Test error found - save the configuration ; : 592 | 133.776 84.7442 0.0201242 0.00181719 43699.2 0; : 593 Minimum Test error found - save the configuration ; : 593 | 132.08 84.4617 0.0201178 0.00181703 43714.1 0; : 594 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:77129,config,configuration,77129,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 589 | 138.544 87.8285 0.0201999 0.00182139 43529 0; : 590 Minimum Test error found - save the configuration ; : 590 | 137.153 86.6949 0.0201619 0.00182129 43619.1 0; : 591 Minimum Test error found - save the configuration ; : 591 | 135.294 85.8941 0.0201222 0.00182247 43716.6 0; : 592 Minimum Test error found - save the configuration ; : 592 | 133.776 84.7442 0.0201242 0.00181719 43699.2 0; : 593 Minimum Test error found - save the configuration ; : 593 | 132.08 84.4617 0.0201178 0.00181703 43714.1 0; : 594 Minimum Test error found - save the configuration ; : 594 | 130.385 83.3494 0.0201184 0.00182079 43721.6 0; : 595 Minimum Test error found - save the configuration ; : 595 | 128.821 82.7241 0.0201197 0.00182054 43718 0; : 596 Minimum Test error found - save the configuration ; : 596 | 127.285 81.8772 0.0201421 0.00182102 43665.5 0; : 597 Minimum Test error found - save the configuration ; : 597 | 125.567 80.7585 0.0201182 0.00182506 43732.1 0; : 598 Minimum Test error found - save the configuration ; : 598 | 124.213 80.6209 0.0201133 0.0018121 43713 0; : 599 Minimum Test error found - save the configuration ; : 599 | 122.94 79.487 0.0201252 0.00180702 43672.5 0; : 600 Minimum Test error found - save the configuration ; : 600 | 121.268 78.716 0.0201262 0.0018137 43686.1 0; : 601 Minimum Test error found - save the configuration ; : 601 | 119.733 78.5666 0.0201064 0.00181556 43737.8 0; : 602 Minimum Test error found - save the configuration ; : 602 | 118.293 77.4143 0.0201212 0.00181376 43698 0; : 603 Minimum Test error found - save the configuration ; : 603 | 116.739 75.9525 0.0201101 0.00180951 43714.3 0; : 604 Minimum Test error found - save the configuration ; : 604 | 115.282 75.4842 0.0201093 0.00181811 43737 0; : 605 Minimum Test error found - save the configuration ; : 605 | 113.756 74.5415 0.0201179 0.00181105 43699.5 0; : 606 Minimum Test error found - save the configuration ; : 606 | 112.65 73.8117 0.0200987 0.00180944 43741.5 0; : 607 Minimum Test ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:78601,config,configuration,78601,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 664 | 52.9086 41.2393 0.0201899 0.00182999 43573.1 0; : 665 Minimum Test error found - save the configuration ; : 665 | 52.1886 40.6761 0.020181 0.00182542 43583.6 0; : 666 Minimum Test error found - save the configuration ; : 666 | 51.2956 40.6256 0.0201396 0.00182896 43690.5 0; : 667 Minimum Test error found - save the configuration ; : 667 | 50.7315 40.0752 0.0201193 0.00182284 43724.4 0; : 668 | 49.9429 40.0919 0.0200598 0.00176937 43738.7 1; : 669 Minimum Test error found - save the configuration ; : 669 | 49.7924 39.9525 0.02013 0.00182828 43711.6 0; : 670 Minimum Test error found - save the configuration ; : 670 | 48.9056 38.9634 0.0204345 0.00193878 43253.1 0; : 671 Minimum Test error found - save the configuration ; : 671 | 47.9479 38.4436 0.0207053 0.00182816 42379.4 0; : 672 | 47.2853 39.0804 0.0202162 0.00175216 43327.4 1; : 673 Minimum Test error found - save the configuration ; : 673 | 47.0153 38.3207 0.0201285 0.00181671 43687.7 0; : 674 Minimum Test error found - save the configuration ; : 674 | 46.5986 38.0788 0.0201224 0.00182147 43713.7 0; : 675 Minimum Test error found - save the configuration ; : 675 | 45.6663 37.2199 0.020138 0.00182969 43696.1 0; : 676 Minimum Test error found - save the configuration ; : 676 | 44.8146 36.9047 0.0201419 0.00182761 43681.7 0; : 677 | 44.1854 37.155 0.0200983 0.0017637 43633.4 1; : 678 Minimum Test error found - save the configuration ; : 678 | 43.7163 36.54 0.0202108 0.00183597 43537.9 0; : 679 Minimum Test error found - save the configuration ; : 679 | 43.1003 36.3421 0.0201203 0.00181258 43697.4 0; : 680 Minimum Test error found - save the configuration ; : 680 | 42.8206 35.8087 0.0201316 0.00181818 43683.7 0; : 681 Minimum Test error found - save the configuration ; : 681 | 42.0593 35.186 0.0205402 0.00185408 42812.5 0; : 682 Minimum Test error found - save the configuration ; : 682 | 41.3592 34.9319 0.0201181 0.00182063 43721.9 0; : 683 | 40.8775 34.9951 0.020058 0.00175108 43699.3 1; : 684 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:86751,config,configuration,86751,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 665 | 52.1886 40.6761 0.020181 0.00182542 43583.6 0; : 666 Minimum Test error found - save the configuration ; : 666 | 51.2956 40.6256 0.0201396 0.00182896 43690.5 0; : 667 Minimum Test error found - save the configuration ; : 667 | 50.7315 40.0752 0.0201193 0.00182284 43724.4 0; : 668 | 49.9429 40.0919 0.0200598 0.00176937 43738.7 1; : 669 Minimum Test error found - save the configuration ; : 669 | 49.7924 39.9525 0.02013 0.00182828 43711.6 0; : 670 Minimum Test error found - save the configuration ; : 670 | 48.9056 38.9634 0.0204345 0.00193878 43253.1 0; : 671 Minimum Test error found - save the configuration ; : 671 | 47.9479 38.4436 0.0207053 0.00182816 42379.4 0; : 672 | 47.2853 39.0804 0.0202162 0.00175216 43327.4 1; : 673 Minimum Test error found - save the configuration ; : 673 | 47.0153 38.3207 0.0201285 0.00181671 43687.7 0; : 674 Minimum Test error found - save the configuration ; : 674 | 46.5986 38.0788 0.0201224 0.00182147 43713.7 0; : 675 Minimum Test error found - save the configuration ; : 675 | 45.6663 37.2199 0.020138 0.00182969 43696.1 0; : 676 Minimum Test error found - save the configuration ; : 676 | 44.8146 36.9047 0.0201419 0.00182761 43681.7 0; : 677 | 44.1854 37.155 0.0200983 0.0017637 43633.4 1; : 678 Minimum Test error found - save the configuration ; : 678 | 43.7163 36.54 0.0202108 0.00183597 43537.9 0; : 679 Minimum Test error found - save the configuration ; : 679 | 43.1003 36.3421 0.0201203 0.00181258 43697.4 0; : 680 Minimum Test error found - save the configuration ; : 680 | 42.8206 35.8087 0.0201316 0.00181818 43683.7 0; : 681 Minimum Test error found - save the configuration ; : 681 | 42.0593 35.186 0.0205402 0.00185408 42812.5 0; : 682 Minimum Test error found - save the configuration ; : 682 | 41.3592 34.9319 0.0201181 0.00182063 43721.9 0; : 683 | 40.8775 34.9951 0.020058 0.00175108 43699.3 1; : 684 Minimum Test error found - save the configuration ; : 684 | 40.654 34.3931 0.0201589 0.00183818 43666.4 0; : 685 Minimum Te,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:86865,config,configuration,86865,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 666 | 51.2956 40.6256 0.0201396 0.00182896 43690.5 0; : 667 Minimum Test error found - save the configuration ; : 667 | 50.7315 40.0752 0.0201193 0.00182284 43724.4 0; : 668 | 49.9429 40.0919 0.0200598 0.00176937 43738.7 1; : 669 Minimum Test error found - save the configuration ; : 669 | 49.7924 39.9525 0.02013 0.00182828 43711.6 0; : 670 Minimum Test error found - save the configuration ; : 670 | 48.9056 38.9634 0.0204345 0.00193878 43253.1 0; : 671 Minimum Test error found - save the configuration ; : 671 | 47.9479 38.4436 0.0207053 0.00182816 42379.4 0; : 672 | 47.2853 39.0804 0.0202162 0.00175216 43327.4 1; : 673 Minimum Test error found - save the configuration ; : 673 | 47.0153 38.3207 0.0201285 0.00181671 43687.7 0; : 674 Minimum Test error found - save the configuration ; : 674 | 46.5986 38.0788 0.0201224 0.00182147 43713.7 0; : 675 Minimum Test error found - save the configuration ; : 675 | 45.6663 37.2199 0.020138 0.00182969 43696.1 0; : 676 Minimum Test error found - save the configuration ; : 676 | 44.8146 36.9047 0.0201419 0.00182761 43681.7 0; : 677 | 44.1854 37.155 0.0200983 0.0017637 43633.4 1; : 678 Minimum Test error found - save the configuration ; : 678 | 43.7163 36.54 0.0202108 0.00183597 43537.9 0; : 679 Minimum Test error found - save the configuration ; : 679 | 43.1003 36.3421 0.0201203 0.00181258 43697.4 0; : 680 Minimum Test error found - save the configuration ; : 680 | 42.8206 35.8087 0.0201316 0.00181818 43683.7 0; : 681 Minimum Test error found - save the configuration ; : 681 | 42.0593 35.186 0.0205402 0.00185408 42812.5 0; : 682 Minimum Test error found - save the configuration ; : 682 | 41.3592 34.9319 0.0201181 0.00182063 43721.9 0; : 683 | 40.8775 34.9951 0.020058 0.00175108 43699.3 1; : 684 Minimum Test error found - save the configuration ; : 684 | 40.654 34.3931 0.0201589 0.00183818 43666.4 0; : 685 Minimum Test error found - save the configuration ; : 685 | 40.0613 33.8904 0.0201577 0.00183348 43658.1 0; : 686 | 39.3281,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:86978,config,configuration,86978,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 693 | 35.9446 31.7942 0.0202985 0.00181447 43280.7 0; : 694 | 35.3125 31.8389 0.0201438 0.00175333 43500.7 1; : 695 Minimum Test error found - save the configuration ; : 695 | 34.8867 31.3734 0.0201347 0.00182018 43681.2 0; : 696 Minimum Test error found - save the configuration ; : 696 | 34.4357 31.1348 0.0201081 0.00181563 43733.9 0; : 697 Minimum Test error found - save the configuration ; : 697 | 34.0416 30.9812 0.0205543 0.00184744 42765.1 0; : 698 Minimum Test error found - save the configuration ; : 698 | 33.7716 30.3897 0.0201321 0.00181458 43673.9 0; : 699 | 33.1269 30.7769 0.0201928 0.00175872 43397.8 1; : 700 Minimum Test error found - save the configuration ; : 700 | 32.8076 30.1388 0.0201025 0.00181993 43757.5 0; : 701 | 32.6014 30.2991 0.0200398 0.0017563 43755.4 1; : 702 | 32.0925 30.8793 0.0200419 0.00175584 43749.1 2; : 703 Minimum Test error found - save the configuration ; : 703 | 31.9128 29.3224 0.0202722 0.00182152 43358.7 0; : 704 Minimum Test error found - save the configuration ; : 704 | 31.2876 29.167 0.0201013 0.00181585 43750.6 0; : 705 Minimum Test error found - save the configuration ; : 705 | 30.8198 28.9852 0.0201048 0.0018126 43734.4 0; : 706 Minimum Test error found - save the configuration ; : 706 | 30.3399 28.5636 0.0203047 0.00182247 43284.8 0; : 707 | 29.8899 28.5807 0.0200458 0.00176314 43757.3 1; : 708 | 29.6409 28.6883 0.0201432 0.0017637 43526.7 2; : 709 Minimum Test error found - save the configuration ; : 709 | 29.434 28.2 0.0201313 0.00182437 43699.3 0; : 710 | 28.7076 28.492 0.0200557 0.00176519 43738.5 1; : 711 Minimum Test error found - save the configuration ; : 711 | 28.4018 27.2754 0.0201013 0.00182194 43765.3 0; : 712 | 28.1436 28.1139 0.020041 0.00175734 43754.9 1; : 713 | 27.878 27.4183 0.0200281 0.0017564 43783.5 2; : 714 | 27.4734 27.8632 0.020054 0.00175612 43720.8 3; : 715 Minimum Test error found - save the configuration ; : 715 | 27.1251 26.6487 0.0201232 0.0018277 43726.6 0; : 716 | 26.6302 26.7712 0,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:89636,config,configuration,89636,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 741 | 19.6956 22.1693 0.0200949 0.00182186 43780.3 0; : 742 Minimum Test error found - save the configuration ; : 742 | 19.5563 22.0339 0.0201148 0.00182382 43737.3 0; : 743 Minimum Test error found - save the configuration ; : 743 | 19.2633 21.9202 0.0201113 0.00181809 43732 0; : 744 Minimum Test error found - save the configuration ; : 744 | 18.9779 21.4146 0.0200848 0.00181658 43791.8 0; : 745 | 19.0558 21.8309 0.0200351 0.00176335 43783.5 1; : 746 Minimum Test error found - save the configuration ; : 746 | 18.8292 21.203 0.0201069 0.00182679 43763.3 0; : 747 Minimum Test error found - save the configuration ; : 747 | 18.4234 20.9247 0.0201054 0.00181179 43731.2 0; : 748 Minimum Test error found - save the configuration ; : 748 | 18.2054 20.8597 0.0200854 0.00181067 43776.4 0; : 749 Minimum Test error found - save the configuration ; : 749 | 17.9119 20.8249 0.0200825 0.00181515 43794.1 0; : 750 | 17.7295 20.9077 0.0200909 0.00176261 43648.3 1; : 751 Minimum Test error found - save the configuration ; : 751 | 17.6646 20.1562 0.02009 0.00181812 43783 0; : 752 Minimum Test error found - save the configuration ; : 752 | 17.2045 20.1301 0.0200899 0.00181385 43773 0; : 753 Minimum Test error found - save the configuration ; : 753 | 17.2492 20.0483 0.0200805 0.00181433 43796.8 0; : 754 Minimum Test error found - save the configuration ; : 754 | 16.8738 20.0271 0.0201173 0.00182078 43724.2 0; : 755 | 16.6744 20.3793 0.0200328 0.00175569 43770.5 1; : 756 Minimum Test error found - save the configuration ; : 756 | 16.5214 19.4549 0.0200975 0.00181399 43755.3 0; : 757 | 16.5493 20.0416 0.0200274 0.00175373 43778.7 1; : 758 | 16.7051 19.8344 0.0200284 0.00174826 43763.4 2; : 759 | 16.2032 19.717 0.0200656 0.00175048 43679.7 3; : 760 | 16.1221 19.4686 0.0200628 0.00175006 43685.5 4; : 761 Minimum Test error found - save the configuration ; : 761 | 15.7828 18.8348 0.0201031 0.00181849 43752.5 0; : 762 | 15.5545 19.1688 0.0200359 0.00175521 43762.1 1; : 763 Minimum Test ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:94090,config,configuration,94090,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on ; : 99 | 13666.4 12611.1 0.0200618 0.00180714 43824.4 0; : 100 Minimum Test error found - save the configuration ; : 100 | 13550.9 12502.3 0.0200464 0.00180511 43856.6 0; : 101 Minimum Test error found - save the configuration ; : 101 | 13439.7 12392 0.0201571 0.00185957 43721.7 0; : 102 Minimum Test error found - save the configuration ; : 102 | 13328.8 12281.3 0.0202143 0.00181888 43489.1 0; : 103 Minimum Test error found - save the configuration ; : 103 | 13217 12173.3 0.0200026 0.0018059 43964.1 0; : 104 Minimum Test error found - save the configuration ; : 104 | 13107.7 12065.4 0.0200115 0.00180466 43939.6 0; : 105 Minimum Test error found - save the configuration ; : 105 | 12997.9 11959.7 0.0201517 0.00183944 43686.6 0; : 106 Minimum Test error found - save the configuration ; : 106 | 12890.1 11854.8 0.0204012 0.00181637 43045.8 0; : 107 Minimum Test error found - save the configuration ; : 107 | 12783.3 11750.6 0.0200273 0.00179591 43880.4 0; : 108 Minimum Test error found - save the configuration ; : 108 | 12679.4 11643.6 0.0200105 0.00179336 43914.7 0; : 109 Minimum Test error found - save the configuration ; : 109 | 12570.9 11543.2 0.0200071 0.00179343 43923.1 0; : 110 Minimum Test error found - save the configuration ; : 110 | 12468 11440.7 0.0200047 0.00179413 43930.5 0; : 111 Minimum Test error found - save the configuration ; : 111 | 12365.7 11337.8 0.0200081 0.00179319 43920.1 0; : 112 Minimum Test error found - save the configuration ; : 112 | 12261.9 11237.7 0.02002 0.00179362 43892.3 0; : 113 Minimum Test error found - save the configuration ; : 113 | 12160 11139.2 0.0201211 0.00180176 43669.7 0; : 114 Minimum Test error found - save the configuration ; : 114 | 12060.2 11039.6 0.020348 0.00184935 43246.4 0; : 115 Minimum Test error found - save the configuration ; : 115 | 11961.2 10939.8 0.0202696 0.00181495 43349.5 0; : 116 Minimum Test error found - save the configuration ; : 116 | 11860.6 10843.2 0.0200362 0.00180159 43872.5 0; : 117 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:23144,config,configuration,23144,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,on Package description; TPacketizer Generate work packets for parallel processing; TPacketizerAdaptive Generate work packets for parallel processing; TPacketizerFile Generate work packets for parallel processing; TPacketizerMulti Generate work packets for parallel processing; TPacketizerUnit Generate work packets for parallel processing; TPad A Graphics pad; TPadEditor editor of TPad objects; TPadPainter Abstract interface for painting in TPad; TPainter3dAlgorithms Hidden line removal package; TPair ; TPaletteAxis class used to display a color palette axis for 2-d plots; TPaletteEditor Base class for palette editor; TParallelCoord To display parallel coordinates plots.; TParallelCoordEditor GUI for editing the parallel coordinates plot attributes.; TParallelCoordRange A TParallelCoordRange is a range used for parallel coordinates plots.; TParallelCoordSelect A TParallelCoordSelect is a specialised TList to hold TParallelCoordRanges used by TParallelCoord.; TParallelCoordVar A Variable of a parallel coordinates plot.; TParallelMergingFile TFile specialization that will semi-automatically upload its content to a merging server.; TParameter<Long64_t> ; TParameter<bool> ; TParameter<double> ; TParameter<float> ; TParameter<int> ; TParameter<long> ; TParticle TParticle vertex particle information; TParticleClassPDG PDG static particle definition; TParticlePDG PDG static particle definition; TPave Pave. A box with shadowing; TPaveClass A TPaveLabel specialized for TClassTree objects; TPaveLabel PaveLabel. A Pave with a label; TPaveStats A special TPaveText to draw histogram statistics.; TPaveStatsEditor GUI for editing TPaveStats; TPaveText PaveText. A Pave with several lines of text.; TPavesText Stacked Paves with text strings; TPerfEvent Class holding TProof Event Info; TPerfStats Class for collecting PROOF statistics; TPie Pie chart graphics class; TPieEditor piechart editor; TPieSlice Slice of a pie chart graphics class; TPieSliceEditor piechart' slice editor; TPlugin,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ClassIndex.html:112844,Variab,Variable,112844,root/html602/ClassIndex.html,https://root.cern,https://root.cern/root/html602/ClassIndex.html,2,['Variab'],['Variable']
Modifiability,"on RooArgList.h:22; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf304_uncorrprodDefinition rf304_uncorrprod.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigmay' with range [-inf, inf] of the RooGaussian 'gaussy' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Plotting -- RooAbsReal::plotOn(gaussxy) plot on x integrates over variables (y); [#1] INFO:Plotting -- RooAbsReal::plotOn(gaussxy) plot on y integrates over variables (x); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf304_uncorrprod.C. tutorialsroofitrf304_uncorrprod.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf304__uncorrprod_8C.html:4632,variab,variables,4632,doc/master/rf304__uncorrprod_8C.html,https://root.cern,https://root.cern/doc/master/rf304__uncorrprod_8C.html,2,['variab'],['variables']
Modifiability,"on TGWin32VirtualXProxy.cxx:44; valueOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void valueDefinition TGWin32VirtualXProxy.cxx:142; namechar name[80]Definition TGX11.cxx:110; xminfloat xminDefinition THbookFile.cxx:95; xmaxfloat xmaxDefinition THbookFile.cxx:95; Util.h; MATH_UNUSED#define MATH_UNUSED(var)Definition Util.h:34; ROOT::Fit::ParameterSettingsClass, describing value, limits and step size of the parameters Provides functionality also to set/re...Definition ParameterSettings.h:33; ROOT::Math::Minimizer::SetLimitedVariablevirtual bool SetLimitedVariable(unsigned int ivar, const std::string &name, double val, double step, double lower, double upper)set a new upper/lower limited variable (override if minimizer supports them ) otherwise as default se...Definition Minimizer.cxx:34; ROOT::Math::Minimizer::VariableIndexvirtual int VariableIndex(const std::string &name) constget index of variable given a variable given a name return -1 if variable is not foundDefinition Minimizer.cxx:232; ROOT::Math::Minimizer::GetCovMatrixvirtual bool GetCovMatrix(double *covMat) constFill the passed array with the covariance matrix elements if the variable is fixed or const the value...Definition Minimizer.cxx:135; ROOT::Math::Minimizer::SetVariableStepSizevirtual bool SetVariableStepSize(unsigned int ivar, double value)set the step size of an already existing variableDefinition Minimizer.cxx:62; ROOT::Math::Minimizer::SetCovarianceDiagvirtual bool SetCovarianceDiag(std::span< const double > d2, unsigned int n)set initial second derivativesDefinition Minimizer.cxx:15; ROOT::Math::Minimizer::GetVariableSettingsvirtual bool GetVariableSettings(unsigned int ivar, ROOT::Fit::ParameterSettings &pars) constget variable settings in a variable object (like ROOT::Fit::ParamsSettings)Definition Minimizer.cxx:109; ROOT::Math::Minimizer::GlobalCCvirtual double GlobalCC(unsigned int ivar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Minimizer_8cxx_source.html:9738,variab,variable,9738,doc/master/Minimizer_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Minimizer_8cxx_source.html,3,['variab'],['variable']
Modifiability,"on TNamed.h:48; TNamed::fTitleTString fTitleDefinition TNamed.h:33; TNamed::fNameTString fNameDefinition TNamed.h:32; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::GetNamevirtual const char * GetName() constReturns name of object.Definition TObject.cxx:444; TObject::TestBitR__ALWAYS_INLINE Bool_t TestBit(UInt_t f) constDefinition TObject.h:199; TObject::Warningvirtual void Warning(const char *method, const char *msgfmt,...) constIssue warning message.Definition TObject.cxx:979; TObject::AppendPadvirtual void AppendPad(Option_t *option="""")Append graphics object to current pad.Definition TObject.cxx:190; TObject::SavePrimitivevirtual void SavePrimitive(std::ostream &out, Option_t *option="""")Save a primitive as a C++ statement(s) on output stream ""out"".Definition TObject.cxx:757; TObject::SetBitvoid SetBit(UInt_t f, Bool_t set)Set or unset the user status bits as specified in f.Definition TObject.cxx:786; TObject::InheritsFromvirtual Bool_t InheritsFrom(const char *classname) constReturns kTRUE if object inherits from class ""classname"".Definition TObject.cxx:530; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TObject::IsAvirtual TClass * IsA() constDefinition TObject.h:243; TObject::MakeZombievoid MakeZombie()Definition TObject.h:53; TObject::ResetBitvoid ResetBit(UInt_t f)Definition TObject.h:198; TObject::kCanDelete@ kCanDeleteif object in a list can be deletedDefinition TObject.h:62; TObject::kInvalidObject@ kInvalidObjectif object ctor succeeded but object should not be usedDefinition TObject.h:72; TObject::kMustCleanup@ kMustCleanupif object destructor must call RecursiveRemove()Definition TObject.h:64; TPluginHandlerDefinition TPluginManager.h:103; TPluginHandler::ExecPluginLongptr_t ExecPlugin(int nargs)Definition TPluginManager.h:231; TPluginHandler::LoadPluginInt_t LoadPlugin()Load the plugin library for this handler.Definition TPluginManager.cxx:293; TStri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraph2D_8cxx_source.html:79146,inherit,inherits,79146,doc/master/TGraph2D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraph2D_8cxx_source.html,1,['inherit'],['inherits']
Modifiability,"on TObject.cxx:530; TObject::GetObjectStatstatic Bool_t GetObjectStat()Get status of object stat flag.Definition TObject.cxx:1067; TObject::Copyvirtual void Copy(TObject &object) constCopy this to obj.Definition TObject.cxx:146; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TObject::SetDrawOptionvirtual void SetDrawOption(Option_t *option="""")Set drawing option for object.Definition TObject.cxx:770; TObject::Fatalvirtual void Fatal(const char *method, const char *msgfmt,...) constIssue fatal error message.Definition TObject.cxx:1021; TObject::SetDtorOnlystatic void SetDtorOnly(void *obj)Set destructor only flag.Definition TObject.cxx:1090; TObject::SetUniqueIDvirtual void SetUniqueID(UInt_t uid)Set the unique object id.Definition TObject.cxx:797; TObject::GetTitlevirtual const char * GetTitle() constReturns title of object.Definition TObject.cxx:488; TObject::DrawClassvirtual void DrawClass() constDraw class inheritance tree of the class to which this object belongs.Definition TObject.cxx:295; TObject::IsAvirtual TClass * IsA() constDefinition TObject.h:243; TObject::Comparevirtual Int_t Compare(const TObject *obj) constCompare abstract method.Definition TObject.cxx:244; TObject::~TObjectvirtual ~TObject()TObject destructor.Definition TObject.cxx:164; TObject::Drawvirtual void Draw(Option_t *option="""")Default Draw method for all objects.Definition TObject.cxx:280; TObject::Paintvirtual void Paint(Option_t *option="""")This method must be overridden if a class wants to paint itself.Definition TObject.cxx:612; TObject::Printvirtual void Print(Option_t *option="""") constThis method must be overridden when a class wants to print itself.Definition TObject.cxx:642; TObject::Popvirtual void Pop()Pop on object drawn in a pad to the top of the display list.Definition TObject.cxx:621; TObject::Hashvirtual ULong_t Hash() constReturn hash value for this object.Definition TObject.cxx:520; TObject::lsv",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TObject_8cxx_source.html:56120,inherit,inheritance,56120,doc/master/TObject_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TObject_8cxx_source.html,1,['inherit'],['inheritance']
Modifiability,"on TUnixSystem.cxx:2187; TUnixSystem::AnnounceTcpServiceint AnnounceTcpService(int port, Bool_t reuse, int backlog, int tcpwindowsize=-1) overrideAnnounce TCP/IP service.Definition TUnixSystem.cxx:3241; TUnixSystem::TUnixSystemTUnixSystem()Definition TUnixSystem.cxx:575; TUnixSystem::AddDynamicPathvoid AddDynamicPath(const char *lib) overrideAdd a new directory to the dynamic path.Definition TUnixSystem.cxx:4725; TUnixSystem::SetDynamicPathvoid SetDynamicPath(const char *lib) overrideSet the dynamic path to a new value.Definition TUnixSystem.cxx:4748; TUnixSystem::ClosePipeint ClosePipe(FILE *pipe) overrideClose the pipe.Definition TUnixSystem.cxx:2171; TUnixSystem::GetHomeDirectorystd::string GetHomeDirectory(const char *userName=nullptr) const overrideReturn the user's home directory.Definition TUnixSystem.cxx:1491; TUnixSystem::SelectInt_t Select(TList *active, Long_t timeout) overrideSelect on file descriptors.Definition TUnixSystem.cxx:1202; TUnixSystem::Unsetenvvoid Unsetenv(const char *name) overrideUnset environment variable.Definition TUnixSystem.cxx:2145; TUnixSystem::~TUnixSystemvirtual ~TUnixSystem()Reset to original state.Definition TUnixSystem.cxx:581; TUnixSystem::Abortvoid Abort(int code=0) overrideAbort the application.Definition TUnixSystem.cxx:2202; TUnixSystem::Syslogvoid Syslog(ELogLevel level, const char *mess) overrideSend mess to syslog daemon.Definition TUnixSystem.cxx:2654; TUnixSystem::GetGroupInfoUserGroup_t * GetGroupInfo(Int_t gid) overrideReturns all group info in the UserGroup_t structure.Definition TUnixSystem.cxx:2099; TUnixSystem::GetUidInt_t GetUid(const char *user=nullptr) overrideReturns the user's id. If user = 0, returns current user's id.Definition TUnixSystem.cxx:2005; TUnixSystem::ExpandPathNameBool_t ExpandPathName(TString &patbuf) overrideExpand a pathname getting rid of special shell characters like ~.Definition TUnixSystem.cxx:1749; TUnixSystem::Openlogvoid Openlog(const char *name, Int_t options, ELogFacility facility)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnixSystem_8cxx_source.html:206839,variab,variable,206839,doc/master/TUnixSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TUnixSystem_8cxx_source.html,2,['variab'],['variable']
Modifiability,"on Trees ... patience please; : Elapsed time for training with 5000 events: 1.31 sec ; : Dataset[datasetcvreg] : Create results for training; : Dataset[datasetcvreg] : Evaluation of BDTG_fold2 on training sample; : Dataset[datasetcvreg] : Elapsed time for evaluation of 5000 events: 0.209 sec ; : Create variable histograms; : Create regression target histograms; : Create regression average deviation; : Results created; : Creating xml weight file: datasetcvreg/weights/TMVACrossValidationRegression_BDTG_fold2.weights.xml; <HEADER> Factory : Test all methods; <HEADER> Factory : Test method: BDTG_fold2 for Regression performance; : ; : Dataset[datasetcvreg] : Create results for testing; : Dataset[datasetcvreg] : Evaluation of BDTG_fold2 on testing sample; : Dataset[datasetcvreg] : Elapsed time for evaluation of 4999 events: 0.209 sec ; : Create variable histograms; : Create regression target histograms; : Create regression average deviation; : Results created; <HEADER> Factory : Evaluate all methods; : Evaluate regression method: BDTG_fold2; : TestRegression (testing); : Calculate regression for all events; : Elapsed time for evaluation of 4999 events: 0.208 sec ; : TestRegression (training); : Calculate regression for all events; : Elapsed time for evaluation of 5000 events: 0.208 sec ; : ; : Evaluation results ranked by smallest RMS on test sample:; : (""Bias"" quotes the mean deviation of the regression from true target.; : ""MutInf"" is the ""Mutual Information"" between regression and target.; : Indicated by ""_T"" are the corresponding ""truncated"" quantities ob-; : tained when removing events deviating more than 2sigma from average.); : --------------------------------------------------------------------------------------------------; : --------------------------------------------------------------------------------------------------; : datasetcvreg BDTG_fold2 : -0.0428 -0.0362 2.33 1.72 | 3.109 3.188; : ----------------------------------------------------------------------",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVACrossValidationRegression_8C.html:7450,variab,variable,7450,doc/master/TMVACrossValidationRegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVACrossValidationRegression_8C.html,1,['variab'],['variable']
Modifiability,"on and runtime errors properly.; 5232 ; 5233void TCling::Execute(const char* function, const char* params, int* error); 5234{; 5235 R__LOCKGUARD_CLING(gInterpreterMutex);; 5236 if (error) {; 5237 *error = TInterpreter::kNoError;; 5238 }; 5239 TClingClassInfo cl(GetInterpreterImpl());; 5240 Longptr_t offset = 0L;; 5241 TClingCallFunc func(GetInterpreterImpl());; 5242 func.SetFunc(&cl, function, params, &offset);; 5243 func.Exec(nullptr);; 5244}; 5245 ; 5246////////////////////////////////////////////////////////////////////////////////; 5247/// Execute a method from class cl with arguments params.; 5248///; 5249/// FIXME: The cint-based version of this code does not check if the; 5250/// SetFunc() call works, and does not do any real checking; 5251/// for errors from the Exec() call. It did fetch the most; 5252/// recent cint security error and return that in error, but; 5253/// this does not really translate well to cling/clang. We; 5254/// should enhance these interfaces so that we can report; 5255/// compilation and runtime errors properly.; 5256 ; 5257void TCling::Execute(TObject* obj, TClass* cl, const char* method,; 5258 const char* params, Bool_t objectIsConst, int* error); 5259{; 5260 R__LOCKGUARD_CLING(gInterpreterMutex);; 5261 if (error) {; 5262 *error = TInterpreter::kNoError;; 5263 }; 5264 // If the actual class of this object inherits 2nd (or more) from TObject,; 5265 // 'obj' is unlikely to be the start of the object (as described by IsA()),; 5266 // hence gInterpreter->Execute will improperly correct the offset.; 5267 void* addr = cl->DynamicCast(TObject::Class(), obj, kFALSE);; 5268 Longptr_t offset = 0L;; 5269 TClingCallFunc func(GetInterpreterImpl());; 5270 func.SetFunc((TClingClassInfo*)cl->GetClassInfo(), method, params, objectIsConst, &offset);; 5271 void* address = (void*)((Longptr_t)addr + offset);; 5272 func.Exec(address);; 5273}; 5274 ; 5275////////////////////////////////////////////////////////////////////////////////; 5276 ; 5277void TClin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCling_8cxx_source.html:204462,enhance,enhance,204462,doc/master/TCling_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCling_8cxx_source.html,1,['enhance'],['enhance']
Modifiability,"on argset to all the registered proxies. ;  ; void setShapeDirty (const RooAbsArg *source);  Notify that a shape-like property (e.g. binning) has changed. ;  ; void setValueDirty (const RooAbsArg *source);  Force element to re-evaluate itself when a value is requested. ;  ; void unRegisterProxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooFormulaVar * _basis = nullptr;  Basis function convolved with this resolution model. ;  ; Int_t _basisCode;  Identifier code for selected basis function. ;  ; bool _ownBasis;  Flag indicating ownership of _basis. ;  ; RooTemplateProxy< RooAbsRealLValue > x;  Dependent/convolution variable. ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooResolutionModel.html:70385,variab,variable,70385,doc/master/classRooResolutionModel.html,https://root.cern,https://root.cern/doc/master/classRooResolutionModel.html,1,['variab'],['variable']
Modifiability,"on argset to all the registered proxies. ;  ; void setShapeDirty (const RooAbsArg *source);  Notify that a shape-like property (e.g. binning) has changed. ;  ; void setValueDirty (const RooAbsArg *source);  Force element to re-evaluate itself when a value is requested. ;  ; void unRegisterProxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooRealProxy _arg;  Function to calculate in parallel process. ;  ; bool _calcInProgress;  ; std::vector< bool > _constChanged;  ! Flags if variable needs update on server-side ;  ; double _evalCarry;  ! ;  ; bool _forceCalc;  ; bool _inlineMode;  ; RooFit::BidirMMapPipe * _pipe;  ! connection to child ;  ; RooAbsReal::ErrorLoggingMode _remoteEvalErrorLoggingState;  ; bool _retrieveDispatched;  ! ;  ; RooArgList _saveVars;  Copy of variables. ;  ; State _state;  ; RooRealMPFE * _updateMaster;  ! Update master ;  ; std::vector< bool > _valueChanged;  ! Flags if variable needs update on server-side ;  ; RooListProxy _vars;  Variables. ;  ; bool _verboseClient;  ; bool _verboseServer;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::uni",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealMPFE.html:54593,variab,variable,54593,doc/master/classRooRealMPFE.html,https://root.cern,https://root.cern/doc/master/classRooRealMPFE.html,2,['variab'],"['variable', 'variables']"
Modifiability,"on at line 175 of file TBranch.h. ◆ WriteBasketImpl(). Int_t TBranch::WriteBasketImpl ; (; TBasket * ; basket, . Int_t ; where, . ROOT::Internal::TBranchIMTHelper * ; imtHelper . ). private . Write the current basket to disk and return the number of bytes written to the file. ; Definition at line 3202 of file TBranch.cxx. Friends And Related Symbol Documentation. ◆ ROOT::Experimental::Internal::TBulkBranchRead. friend class ROOT::Experimental::Internal::TBulkBranchRead. friend . Definition at line 101 of file TBranch.h. ◆ TBranchElement. friend class TBranchElement. friend . Definition at line 100 of file TBranch.h. ◆ TTree. friend class TTree. friend . Definition at line 99 of file TBranch.h. ◆ TTreeCache. friend class TTreeCache. friend . Definition at line 97 of file TBranch.h. ◆ TTreeCloner. friend class TTreeCloner. friend . Definition at line 98 of file TBranch.h. Member Data Documentation. ◆ fAddress. char* TBranch::fAddress. protected . ! Address of 1st leaf (variable or object) ; Definition at line 147 of file TBranch.h. ◆ fBasketBytes. Int_t* TBranch::fBasketBytes. protected . [fMaxBaskets] Length of baskets on file ; Definition at line 141 of file TBranch.h. ◆ fBasketEntry. Long64_t* TBranch::fBasketEntry. protected . [fMaxBaskets] Table of first entry in each basket ; Definition at line 142 of file TBranch.h. ◆ fBaskets. TObjArray TBranch::fBaskets. protected . -> List of baskets of this branch ; Definition at line 140 of file TBranch.h. ◆ fBasketSeek. Long64_t* TBranch::fBasketSeek. protected . [fMaxBaskets] Addresses of baskets on file ; Definition at line 143 of file TBranch.h. ◆ fBasketSize. Int_t TBranch::fBasketSize. protected . Initial Size of Basket Buffer. ; Definition at line 118 of file TBranch.h. ◆ fBranches. TObjArray TBranch::fBranches. protected . -> List of Branches of this branch ; Definition at line 138 of file TBranch.h. ◆ fBrowsables. TList* TBranch::fBrowsables. protected . ! List of TVirtualBranchBrowsables used for Browse() ; Defini",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBranch.html:69872,variab,variable,69872,doc/master/classTBranch.html,https://root.cern,https://root.cern/doc/master/classTBranch.html,1,['variab'],['variable']
Modifiability,"on at line 28 of file TProofPlayerLite.h. Public Member Functions;  TProofPlayerLite (TProof *proof=0);  ;  ~TProofPlayerLite () override;  ; Long64_t Finalize (Bool_t force=kFALSE, Bool_t sync=kFALSE) override;  Finalize a query. ;  ; Long64_t Finalize (TQueryResult *qr) override;  Finalize query (may not be used in this class). ;  ; TClass * IsA () const override;  ; Long64_t Process (TDSet *set, const char *selector, Option_t *option="""", Long64_t nentries=-1, Long64_t firstentry=0) override;  Process specified TDSet on PROOF. ;  ; Long64_t Process (TDSet *set, TSelector *selector, Option_t *option="""", Long64_t nentries=-1, Long64_t firstentry=0) override;  Process specified TDSet on PROOF. ;  ; void StoreFeedback (TObject *slave, TList *out) override;  Store feedback results from the specified slave. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TProofPlayerRemote;  TProofPlayerRemote (TProof *proof=0);  ;  ~TProofPlayerRemote () override;  Destructor. ;  ; void AddOutput (TList *out) override;  Incorporate the content of the received output list 'out' into the final output list fOutput. ;  ; Int_t AddOutputObject (TObject *obj) override;  Incorporate the received object 'obj' into the output list fOutput. ;  ; Long64_t DrawSelect (TDSet *set, const char *varexp, const char *selection, Option_t *option="""", Long64_t nentries=-1, Long64_t firstentry=0) override;  Draw (support for TChain::Draw()). ;  ; void Feedback (TList *objs) override;  Feedback signal. ;  ; Long64_t Finalize (Bool_t force=kFALSE, Bool_t sync=kFALSE) override;  Finalize query (may not be used in this class). ;  ; Long64_t Finalize (TQueryResult *qr) override;  Finalize the results of a query already processed. ;  ; TDSetElement * GetNextPacket (TSlave *slave, TMessage *r) override;  Get next packet for specified slave. ;  ; TVirtualPacketizer * GetPacketize",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofPlayerLite.html:1449,inherit,inherited,1449,doc/master/classTProofPlayerLite.html,https://root.cern,https://root.cern/doc/master/classTProofPlayerLite.html,1,['inherit'],['inherited']
Modifiability,"on at line 2880 of file TFormula.cxx. ◆ GetParName(). const char * TFormula::GetParName ; (; Int_t ; ipar); const. Return parameter name given by integer. ; Definition at line 2859 of file TFormula.cxx. ◆ GetParNumber(). Int_t TFormula::GetParNumber ; (; const char * ; name); const. Return parameter index given a name (return -1 for not existing parameters) non need to print an error. ; Definition at line 2821 of file TFormula.cxx. ◆ GetUniqueFuncName(). TString TFormula::GetUniqueFuncName ; (; ); const. inline . Definition at line 253 of file TFormula.h. ◆ GetVariable(). Double_t TFormula::GetVariable ; (; const char * ; name); const. Returns variable value. ; Definition at line 2686 of file TFormula.cxx. ◆ GetVarName(). TString TFormula::GetVarName ; (; Int_t ; ivar); const. Returns variable name given its position in the array. ; Definition at line 2712 of file TFormula.cxx. ◆ GetVarNumber(). Int_t TFormula::GetVarNumber ; (; const char * ; name); const. Returns variable number (positon in array) given its name. ; Definition at line 2699 of file TFormula.cxx. ◆ GradientPar() [1/2]. void TFormula::GradientPar ; (; const Double_t * ; x, . Double_t * ; result . ). Compute the gradient with respect to the parameter passing a buffer with a size at least equal to the number of parameters. ; Note that the result buffer needs to be initialized to zero before passed to this function. ; Definition at line 3249 of file TFormula.cxx. ◆ GradientPar() [2/2]. void TFormula::GradientPar ; (; const Double_t * ; x, . TFormula::CladStorage & ; result . ). Compute the gradient employing automatic differentiation. ; a CladStorageObject, i.e.; Parameters. [in]x- The given variables, if nullptr the already stored variables are used. ; [out]result- The result of the computation wrt each direction. a std::vector, which has the size as the nnumber of parameters. Note that the result buffer needs to be initialized to zero before passing it to this function. ; Definition at line 3222 of file",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFormula.html:38818,variab,variable,38818,doc/master/classTFormula.html,https://root.cern,https://root.cern/doc/master/classTFormula.html,1,['variab'],['variable']
Modifiability,"on at line 572 of file TPolyLine.cxx. ◆ SavePrimitive(). void TPolyLine::SavePrimitive ; (; std::ostream & ; out, . Option_t * ; option = """" . ). overridevirtual . Save primitive as a C++ statement(s) on output stream out. ; Reimplemented from TObject.; Definition at line 580 of file TPolyLine.cxx. ◆ SetNDC(). void TPolyLine::SetNDC ; (; Bool_t ; isNDC = kTRUE). virtual . Set NDC mode on if isNDC = kTRUE, off otherwise. ; Definition at line 603 of file TPolyLine.cxx. ◆ SetNextPoint(). Int_t TPolyLine::SetNextPoint ; (; Double_t ; x, . Double_t ; y . ). virtual . Set point following LastPoint to x, y. ; Returns index of the point (new last point). ; Definition at line 613 of file TPolyLine.cxx. ◆ SetOption(). virtual void TPolyLine::SetOption ; (; Option_t * ; option = """"). inlinevirtual . Definition at line 66 of file TPolyLine.h. ◆ SetPoint(). void TPolyLine::SetPoint ; (; Int_t ; point, . Double_t ; x, . Double_t ; y . ). virtual . Set point number n to (x, y) If n is greater than the current size, the arrays are automatically extended. ; Definition at line 625 of file TPolyLine.cxx. ◆ SetPolyLine() [1/3]. void TPolyLine::SetPolyLine ; (; Int_t ; n). virtual . Resize this polyline to size n. ; If n <= 0 the current arrays of points are deleted. If n is greater than the current size, the new points are set to (0, 0) ; Definition at line 657 of file TPolyLine.cxx. ◆ SetPolyLine() [2/3]. void TPolyLine::SetPolyLine ; (; Int_t ; n, . Double_t * ; x, . Double_t * ; y, . Option_t * ; option = """" . ). virtual . Set new values for this polyline (double precision). ; If n <= 0 the current arrays of points are deleted. ; Definition at line 708 of file TPolyLine.cxx. ◆ SetPolyLine() [3/3]. void TPolyLine::SetPolyLine ; (; Int_t ; n, . Float_t * ; x, . Float_t * ; y, . Option_t * ; option = """" . ). virtual . Set new values for this polyline (single precision). ; If n <= 0 the current arrays of points are deleted. ; Definition at line 680 of file TPolyLine.cxx. ◆ Size(). virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPolyLine.html:24333,extend,extended,24333,doc/master/classTPolyLine.html,https://root.cern,https://root.cern/doc/master/classTPolyLine.html,1,['extend'],['extended']
Modifiability,"on at line 8065 of file TTree.cxx. ◆ ResetBranchAddresses(). void TTree::ResetBranchAddresses ; (; ). virtual . Tell all of our branches to drop their current objects and allocate new ones. ; Reimplemented in TChain, TNtuple, and TNtupleD.; Definition at line 8075 of file TTree.cxx. ◆ Scan(). Long64_t TTree::Scan ; (; const char * ; varexp = """", . const char * ; selection = """", . Option_t * ; option = """", . Long64_t ; nentries = kMaxEntries, . Long64_t ; firstentry = 0 . ). virtual . Loop over tree entries and print entries passing selection. . If varexp is 0 (or """") then print only first 8 columns.; If varexp = ""*"" print all columns. Otherwise a columns selection can be made using ""var1:var2:var3"". See alsoTTreePlayer::Scan for more information ; Reimplemented in TChain.; Definition at line 8094 of file TTree.cxx. ◆ SetAlias(). bool TTree::SetAlias ; (; const char * ; aliasName, . const char * ; aliasFormula . ). virtual . Set a tree variable alias. ; Set an alias for an expression/formula based on the tree 'variables'.; The content of 'aliasName' can be used in TTreeFormula (i.e. TTree::Draw, TTree::Scan, TTreeViewer) and will be evaluated as the content of 'aliasFormula'.; If the content of 'aliasFormula' only contains symbol names, periods and array index specification (for example event.fTracks[3]), then the content of 'aliasName' can be used as the start of symbol.; If the alias 'aliasName' already existed, it is replaced by the new value.; When being used, the alias can be preceded by an eventual 'Friend Alias' (see TTree::GetFriendAlias); Return true if it was added properly.; For example: tree->SetAlias(""x1"",""(tdc1[1]-tdc1[0])/49"");; tree->SetAlias(""y1"",""(tdc1[3]-tdc1[2])/47"");; tree->SetAlias(""x2"",""(tdc2[1]-tdc2[0])/49"");; tree->SetAlias(""y2"",""(tdc2[3]-tdc2[2])/47"");; tree->Draw(""y2-y1:x2-x1"");; ; tree->SetAlias(""theGoodTrack"",""event.fTracks[3]"");; tree->Draw(""theGoodTrack.fPx""); // same as ""event.fTracks[3].fPx"". Definition at line 8136 of file TTree.cxx.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTTree.html:198310,variab,variables,198310,doc/v632/classTTree.html,https://root.cern,https://root.cern/doc/v632/classTTree.html,1,['variab'],['variables']
Modifiability,"on at line 89 of file RWebWindowsManager.hxx. ◆ GetServerAddr(). std::string ROOT::RWebWindowsManager::GetServerAddr ; (; ); const. inline . Returns http address of the server, empty string when not available. ; Definition at line 92 of file RWebWindowsManager.hxx. ◆ GetServerLocations(). std::map< std::string, std::string > RWebWindowsManager::GetServerLocations ; (; ). static . Returns server locations as <std::string, std::string> Key is location name (with slash at the end) and value is file path. ; Definition at line 209 of file RWebWindowsManager.cxx. ◆ GetUrl(). std::string RWebWindowsManager::GetUrl ; (; RWebWindow & ; win, . bool ; remote = false, . std::string * ; produced_key = nullptr . ). private . Provide URL address to access specified window from inside or from remote. ; Definition at line 686 of file RWebWindowsManager.cxx. ◆ InformListener(). bool RWebWindowsManager::InformListener ; (; const std::string & ; msg). private . If ROOT_LISTENER_SOCKET variable is configured, message will be sent to that unix socket. ; Definition at line 299 of file RWebWindowsManager.cxx. ◆ Instance(). std::shared_ptr< RWebWindowsManager > & RWebWindowsManager::Instance ; (; ). static . Returns default window manager Used to display all standard ROOT elements like TCanvas or TFitPanel. ; Definition at line 79 of file RWebWindowsManager.cxx. ◆ IsLoopbackMode(). bool RWebWindowsManager::IsLoopbackMode ; (; ). static . Returns true if loopback mode used by THttpServer for web widgets. ; Definition at line 147 of file RWebWindowsManager.cxx. ◆ IsMainThrd(). bool RWebWindowsManager::IsMainThrd ; (; ). static . Returns true when called from main process Main process recognized at the moment when library is loaded It supposed to be a thread where gApplication->Run() will be called If application runs in separate thread, one have to use AssignMainThrd() method to let RWebWindowsManager correctly recognize such situation. ; Definition at line 105 of file RWebWindowsManager.cxx.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RWebWindowsManager.html:14189,variab,variable,14189,doc/master/classROOT_1_1RWebWindowsManager.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RWebWindowsManager.html,2,"['config', 'variab']","['configured', 'variable']"
Modifiability,"on at line 9369 of file TProof.cxx. ◆ RecvLogFile(). void TProof::RecvLogFile ; (; TSocket * ; s, . Int_t ; size . ). private . Receive the log file of the slave with socket s. ; Definition at line 6287 of file TProof.cxx. ◆ RedirectWorker(). void TProof::RedirectWorker ; (; TSocket * ; s, . TSlave * ; sl, . Int_t ; output_size . ). private . Redirect output of worker sl to some merger. ; Definition at line 4258 of file TProof.cxx. ◆ RegisterDataSet(). Bool_t TProof::RegisterDataSet ; (; const char * ; dataSetName, . TFileCollection * ; dataSet, . const char * ; optStr = """" . ). virtual . Register the 'dataSet' on the cluster under the current user, group and the given 'dataSetName'. ; If a dataset with the same name already exists the action fails unless 'opts' contains 'O', in which case the old dataset is overwritten, or contains 'U', in which case 'newDataSet' is added to the existing dataset (duplications are ignored, if any). If 'opts' contains 'V' the dataset files are also verified (if the dataset manager is configured to allow so). By default the dataset is not verified. If 'opts' contains 'T' the in the dataset object (status bits, meta,...) is trusted, i.e. not reset (if the dataset manager is configured to allow so). If 'opts' contains 'S' validation would be run serially (meaningful only if validation is required). Returns kTRUE on success. ; Reimplemented in TProofLite.; Definition at line 10707 of file TProof.cxx. ◆ ReleaseMonitor(). void TProof::ReleaseMonitor ; (; TMonitor * ; mon). private . Release the used monitor to be used, making sure to delete newly created monitors. ; Definition at line 2654 of file TProof.cxx. ◆ Remove() [1/2]. Int_t TProof::Remove ; (; const char * ; ref, . Bool_t ; all = kFALSE . ). Send remove request for the query specified by ref. ; If all = TRUE remove also local copies of the query, if any. Generic method working for all queries known by the server. This method can be also used to reset the list of queries waiting to ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProof.html:130636,config,configured,130636,doc/master/classTProof.html,https://root.cern,https://root.cern/doc/master/classTProof.html,1,['config'],['configured']
Modifiability,"on backend by default; The new vectorizing CPU evaluation backend is not the default for RooFit likelihoods. Likelihood minimization is now up to 10x faster on a single CPU core.; If you experience unexpected problems related to the likelihood evaluation, you can revert back to the old backend by passing RooFit::EvalBackend(""legacy"") to RooAbsPdf::fitTo() or RooAbsPdf::createNLL().; In case you observe any slowdowns with the new likelihood evaluation, please open a GitHub issue about this, as such a performance regression is considered a bug.; Asymptotically correct uncertainties for extended unbinned likelihood fits; Added correct treatment of extended term in asymptotically correct method for uncertainty determination in the presence of weights. This improvement will allow for extended unbinned maximum likelihood fits to use the asymptotically correct method when using the RooFit::AsymptoticError() command argument in RooAbsPdf::fitTo(). See also this writeup on extended weighted fits that is also linked from the reference guide. The pull request that introduced this feature might also be a good reference.; Compile your code with memory safe interfaces; If you define the ROOFIT_MEMORY_SAFE_INTERFACES preprocessor macro, the RooFit interface changes in a way such that memory leaks are avoided.; The most prominent effect of this change is that many functions that used to return an owning pointer (e.g., a pointer to an object that you need to manually delete) are then returning a std::unique_pt for automatic memory management.; For example this code would not compile anymore, because there is the risk that the caller forgets to delete params:; RooArgSet * params = pdf.getParameters(nullptr);; If you wrap such return values in a std::unique_ptr, then your code will compile both with and without memory safe interfaces:; std::unique_ptr<RooArgSet> params{pdf.getParameters(nullptr)};; Also some virtual RooFit functions like RooAbsReal::createIntegral() are returning a di",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/release-notes.html:9013,extend,extended,9013,doc/v632/release-notes.html,https://root.cern,https://root.cern/doc/v632/release-notes.html,1,['extend'],['extended']
Modifiability,"on belongs (if any); Bool_tTProof::fMasterServtrue if we are a master server; TStringTNamed::fNameobject identifier; Int_tTProof::fProtocolremote PROOF server protocol version number; TProof::EQueryModeTProof::fQueryModedefault query mode; TList*TProof::fRunningDSetsTemporary datasets used for async running; TSelector*TProof::fSelectorSelector to be processed, if any; TProofMgr::EServTypeTProof::fServTypetype of server: proofd, XrdProofd; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TList*TProof::fSlaveslist of all slave servers as in config file; TList*TProof::fTerminatedSlaveInfoslist of unique infos of terminated slaves; TStringTNamed::fTitleobject title; Long64_tTProof::fTotalBytesnumber of bytes to be analyzed; TUrlTProof::fUrlUrl of the master; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TSemaphore*TProof::fgSemaphoresemaphore to control no of parallel startup threads. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofSuperMaster(const char* masterurl, const char* conffile = kPROOF_ConfFile, const char* confdir = kPROOF_ConfDir, Int_t loglevel = 0, const char* alias = 0, TProofMgr* mgr = 0); Start super master PROOF session. Bool_t StartSlaves(Bool_t ); Start up PROOF submasters. Long64_t Process(TDSet* set, const char* selector, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0); Process a data set (TDSet) using the specified selector (.C) file.; Entry- or event-lists should be set in the data set object using; TDSet::SetEntryList.; The return value is -1 in case of error and TSelector::GetStatus() in; in case of success. void ValidateDSet(TDSet* dset); Validate a TDSet. TVirtualProofPlayer * MakePlayer(const char* player = 0, TSocket* s = 0); Construct a TProofPlayer object. The player string specifies which; player should be created: remote, slave, sm (supermaster) or base.; Default is sm. Socket is needed in case a sla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofSuperMaster.html:26312,Inherit,Inheritance,26312,root/html534/TProofSuperMaster.html,https://root.cern,https://root.cern/root/html534/TProofSuperMaster.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,on critiera used in training algorithms; TMVA::RuleFit Calculations for Friedman's RuleFit method; TMVA::RuleFitAPI Friedman's RuleFit method; TMVA::SVEvent Event for SVM; TMVA::SdivSqrtSplusB Implementation of the SdivSqrtSplusB as separation criterion; TMVA::SeparationBase Interface to different separation critiera used in training algorithms; TMVA::SimulatedAnnealing Base class for Simulated Annealing fitting; TMVA::SimulatedAnnealingFitter Fitter using a Simulated Annealing Algorithm; TMVA::TActivation Interface for TNeuron activation function classes; TMVA::TActivationChooser Class for choosing activation functions; TMVA::TActivationIdentity Identity activation function for TNeuron; TMVA::TActivationRadial Radial basis activation function for TNeuron; TMVA::TActivationSigmoid Sigmoid activation function for TNeuron; TMVA::TActivationTanh Tanh sigmoid activation function for TNeuron; TMVA::TNeuronInput Interface for TNeuron input calculation classes; TMVA::TNeuronInputAbs Calculates the sum of the absolute values of the weighted inputs; TMVA::TNeuronInputChooser Class for choosing neuron input functions; TMVA::TNeuronInputSqSum Calculates square of weighted sum of neuron inputs; TMVA::TNeuronInputSum Calculates weighted sum of neuron inputs; TMVA::TSpline1 Linear interpolation class; TMVA::TSpline2 Quadratic interpolation class (using quadrax); TMVA::Timer Timing information for training and evaluation of MVA methods; TMVA::Tools ; TMVA::Types ; TMVA::VariableDecorrTransform Variable transformation: decorrelation; TMVA::VariableGaussTransform Variable transformation: Gauss transformation; TMVA::VariableIdentityTransform Variable transformation: identity; TMVA::VariableNormalizeTransform Variable transformation: normalization; TMVA::VariablePCATransform Variable transformation: Principal Value Composition; TMVA::VariableRearrangeTransform Variable transformation: normalization; TMVA::VariableTransformBase Base class for variable transformations; TMVA::kNN::Event .,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA_Index.html:6982,variab,variable,6982,root/html602/TMVA_Index.html,https://root.cern,https://root.cern/root/html602/TMVA_Index.html,15,"['Variab', 'variab']","['Variable', 'VariableDecorrTransform', 'VariableGaussTransform', 'VariableIdentityTransform', 'VariableNormalizeTransform', 'VariablePCATransform', 'VariableRearrangeTransform', 'VariableTransformBase', 'variable']"
Modifiability,"on documentation; operator=(const ROOT::Math::GSLNLSMinimizer& rhs). unsigned int NDim() const; { return fChi2->NDim(); }. GSLNLSMinimizer(int type = 0). Default constructor. ~GSLNLSMinimizer(). Destructor (no operations). GSLNLSMinimizer(const ROOT::Math::GSLNLSMinimizer& ); usually copying is non trivial, so we make this unaccessible. Copy constructor. {}. void SetFunction(const ROOT::Math::IMultiGenFunction& func); set the function to minimize. void SetFunction(const ROOT::Math::IMultiGradFunction& func); set gradient the function to minimize. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set free variable. bool SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); set lower limited variable. bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set upper limited variable. bool SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower, double upper); set upper/lower limited variable. bool SetFixedVariable(unsigned int ivar, const string& name, double val); set fixed variable. bool SetVariableValue(unsigned int ivar, double val); set the value of an existing variable. bool SetVariableValues(const double* x); set the values of all existing variables (array must be dimensioned to the size of existing parameters). bool Minimize(); method to perform the minimization. double MinValue() const; return minimum function value. { return fMinVal; }. double Edm() const; return expected distance reached from the minimum. const double * X() const; return pointer to X values at the minimum. { return &fValues.front(); }. const double * MinGradient() const; return pointer to gradient values at the minimum. unsigned int NCalls() const; number of function calls to reach the minimum. { return (fObjFunc) ? fObjFunc->NCalls() : 0; }. unsigned int NFree() const; number of free variables (real dimension of the prob",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__GSLNLSMinimizer.html:6818,variab,variable,6818,root/html528/ROOT__Math__GSLNLSMinimizer.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__GSLNLSMinimizer.html,4,['variab'],['variable']
Modifiability,"on edges and decreasing clipping window. In the lower part of the Figure we present the background, which was added to the synthetic spectrum. One can observe good coincidence with the estimated background. The method of the estimation of Compton edge is described in details in [3]. Synthetic spectrum with Compton edges. The generalized form of the algorithm is implemented in the following function.; char *Background1General(float *spectrum,; int size,; int number_of_iterations,; int direction,; int filter_order,; bool compton);; The meaning of the parameters is as follows:. spectrum: pointer to the vector of the source spectrum; size: length of spectrum vector; number_of_iterations: maximal width of clipping window; direction: direction of change of clipping window. Possible values:. BACK1_INCREASING_WINDOW; BACK1_DECREASING_WINDOW. filter_order: order of clipping filter. Possible values:. BACK1_ORDER2; BACK1_ORDER4; BACK1_ORDER6; BACK1_ORDER8. compton: logical variable whether the estimation of Compton edge will be included. Possible values:. BACK1_EXCLUDE_COMPTON; BACK1_INCLUDE_COMPTON. 1.2 2-DIMENSIONAL SPECTRA; This basic background estimation function allows to separate useless spectrum information (2D-continuous background and coincidences of peaks with background in both dimensions) from peaks. It calculates background spectrum from the source spectrum. The result is placed in the array pointed by spectrum pointer. On successful completion it returns 0. On error it returns a pointer to the string describing error.; char *Background2(float **spectrum,; int sizex,; int sizey,; int number_of_iterations);; Function parameters:. spectrum: pointer to the array of the source spectrum; sizex: x length of spectrum; sizey: y length of spectrum; number_of_iterations: width of the clipping window. In Figure 1.6 we present an example of a 2-dimensional spectrum before background elimination. 2-dimensional spectrum before background elimination. Estimated background is sho",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/spectrum/Spectrum.html:4697,variab,variable,4697,root/htmldoc/guides/spectrum/Spectrum.html,https://root.cern,https://root.cern/root/htmldoc/guides/spectrum/Spectrum.html,2,['variab'],['variable']
Modifiability,"on f over the infinite interval (-inf,+inf) passing a free function pointer. double IntegralUp(ROOT::Math::GSLFuncPointer f, void* p, double a). evaluate the Integral of a function f over the semi-infinite interval (a,+inf) passing a free function pointer. double IntegralLow(ROOT::Math::GSLFuncPointer f, void* p, double b). evaluate the Integral of a function f over the over the semi-infinite interval (-inf,b) passing a free function pointer. double Integral(ROOT::Math::GSLFuncPointer f, void* p, const vector<double>& pts). evaluate the Integral of a function f with knows singular points over the over a defined interval passing a free function pointer. double Result() const. return the Result of the last Integral calculation. double Error() const. return the estimate of the absolute Error of the last Integral calculation. int Status() const. return the Error Status of the last Integral calculation. int NEval() const. return number of function evaluations in calculating the integral. { return fNEval; }. void SetRelTolerance(double relTolerance); setter for control Parameters (getters are not needed so far ). set the desired relative Error. void SetAbsTolerance(double absTolerance). set the desired absolute Error. void SetIntegrationRule(ROOT::Math::Integration::GKRule ). set the integration rule (Gauss-Kronrod rule).; The possible rules are defined in the Integration::GKRule enumeration.; The integration rule can be modified only for ADAPTIVE type integrations. void SetOptions(const ROOT::Math::IntegratorOneDimOptions& opt); set the options. IntegrationOneDim::Type GetType() const; get type name. { return fType; }. const char * GetTypeName() const. return the name. bool CheckFunction(); internal method to check validity of GSL function pointer. » Last changed: root/mathmore:$Id$ » Last generated: 2015-06-30 14:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__GSLIntegrator.html:13708,ADAPT,ADAPTIVE,13708,root/html602/ROOT__Math__GSLIntegrator.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__GSLIntegrator.html,1,['ADAPT'],['ADAPTIVE']
Modifiability,"on f over the infinite interval (-inf,+inf) passing a free function pointer. double IntegralUp(ROOT::Math::GSLFuncPointer f, void* p, double a). evaluate the Integral of a function f over the semi-infinite interval (a,+inf) passing a free function pointer. double IntegralLow(ROOT::Math::GSLFuncPointer f, void* p, double b). evaluate the Integral of a function f over the over the semi-infinite interval (-inf,b) passing a free function pointer. double Integral(ROOT::Math::GSLFuncPointer f, void* p, const vector<double>& pts). evaluate the Integral of a function f with knows singular points over the over a defined interval passing a free function pointer. double Result() const. return the Result of the last Integral calculation. double Error() const. return the estimate of the absolute Error of the last Integral calculation. int Status() const. return the Error Status of the last Integral calculation. int NEval() const. return number of function evaluations in calculating the integral. { return fNEval; }. void SetRelTolerance(double relTolerance); setter for control Parameters (getters are not needed so far ). set the desired relative Error. void SetAbsTolerance(double absTolerance). set the desired absolute Error. void SetIntegrationRule(ROOT::Math::Integration::GKRule ). set the integration rule (Gauss-Kronrod rule).; The possible rules are defined in the Integration::GKRule enumeration.; The integration rule can be modified only for ADAPTIVE type integrations. void SetOptions(const ROOT::Math::IntegratorOneDimOptions& opt); set the options. IntegrationOneDim::Type GetType() const; get type name. { return fType; }. const char * GetTypeName() const. return the name. bool CheckFunction(); internal method to check validity of GSL function pointer. » Last changed: root/mathmore:$Id$ » Last generated: 2015-09-08 16:59; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__GSLIntegrator.html:13129,ADAPT,ADAPTIVE,13129,root/html534/ROOT__Math__GSLIntegrator.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__GSLIntegrator.html,1,['ADAPT'],['ADAPTIVE']
Modifiability,"on f over the infinite interval (-inf,+inf) passing a free function pointer. double IntegralUp(ROOT::Math::GSLFuncPointer f, void* p, double a). evaluate the Integral of a function f over the semi-infinite interval (a,+inf) passing a free function pointer. double IntegralLow(ROOT::Math::GSLFuncPointer f, void* p, double b). evaluate the Integral of a function f over the over the semi-infinite interval (-inf,b) passing a free function pointer. double Integral(ROOT::Math::GSLFuncPointer f, void* p, const vector<double>& pts). evaluate the Integral of a function f with knows singular points over the over a defined interval passing a free function pointer. double Result() const. return the Result of the last Integral calculation. double Error() const. return the estimate of the absolute Error of the last Integral calculation. int Status() const. return the Error Status of the last Integral calculation. int NEval() const. return number of function evaluations in calculating the integral. { return fNEval; }. void SetRelTolerance(double relTolerance); setter for control Parameters (getters are not needed so far ). set the desired relative Error. void SetAbsTolerance(double absTolerance). set the desired absolute Error. void SetIntegrationRule(ROOT::Math::Integration::GKRule ). set the integration rule (Gauss-Kronrod rule).; The possible rules are defined in the Integration::GKRule enumeration.; The integration rule can be modified only for ADAPTIVE type integrations. void SetOptions(const ROOT::Math::IntegratorOneDimOptions& opt); set the options. IntegrationOneDim::Type GetType() const; get type name. { return fType; }. const char * GetTypeName() const. return the name. bool CheckFunction(); internal method to check validity of GSL function pointer. » Last changed: root/mathmore:$Id$ » Last generated: 2015-09-08 17:33; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__GSLIntegrator.html:13708,ADAPT,ADAPTIVE,13708,root/html604/ROOT__Math__GSLIntegrator.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__GSLIntegrator.html,1,['ADAPT'],['ADAPTIVE']
Modifiability,"on flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxymean; RooRealProxysigma; RooRealProxyx. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooLandau(const char* name, const char* title, RooAbsReal& _x, RooAbsReal& _mean, RooAbsReal& _sigma). RooLandau(const RooLandau& other, const char* name = 0). Double_t evaluate() const. Int_t getGenerator(const RooArgSet& directVars, RooArgSet& generateVars, Bool_t staticInitOK = kTRUE) const. void generateEvent(Int_t code). RooLandau(); {}. TObject* clone(const char* newname) const; { return new RooLandau(*this,newname); }. virtual ~RooLandau(); { }. » Last changed: Tue Jun 2 15:31:46 2015 » Last generated: 2015-06-02 15:31; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooLandau.html:44627,Inherit,Inheritance,44627,root/html604/RooLandau.html,https://root.cern,https://root.cern/root/html604/RooLandau.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"on for all RooAbsReals; 2612 ; 2613RooNumGenConfig* RooAbsPdf::defaultGeneratorConfig(); 2614{; 2615 return &RooNumGenConfig::defaultConfig() ;; 2616}; 2617 ; 2618 ; 2619////////////////////////////////////////////////////////////////////////////////; 2620/// Returns the specialized integrator configuration for _this_ RooAbsReal.; 2621/// If this object has no specialized configuration, a null pointer is returned; 2622 ; 2623RooNumGenConfig* RooAbsPdf::specialGeneratorConfig() const; 2624{; 2625 return _specGeneratorConfig.get();; 2626}; 2627 ; 2628 ; 2629 ; 2630////////////////////////////////////////////////////////////////////////////////; 2631/// Returns the specialized integrator configuration for _this_ RooAbsReal.; 2632/// If this object has no specialized configuration, a null pointer is returned,; 2633/// unless createOnTheFly is true in which case a clone of the default integrator; 2634/// configuration is created, installed as specialized configuration, and returned; 2635 ; 2636RooNumGenConfig* RooAbsPdf::specialGeneratorConfig(bool createOnTheFly); 2637{; 2638 if (!_specGeneratorConfig && createOnTheFly) {; 2639 _specGeneratorConfig = std::make_unique<RooNumGenConfig>(*defaultGeneratorConfig()) ;; 2640 }; 2641 return _specGeneratorConfig.get();; 2642}; 2643 ; 2644 ; 2645 ; 2646////////////////////////////////////////////////////////////////////////////////; 2647/// Return the numeric MC generator configuration used for this object. If; 2648/// a specialized configuration was associated with this object, that configuration; 2649/// is returned, otherwise the default configuration for all RooAbsReals is returned; 2650 ; 2651const RooNumGenConfig* RooAbsPdf::getGeneratorConfig() const; 2652{; 2653 const RooNumGenConfig* config = specialGeneratorConfig() ;; 2654 if (config) return config ;; 2655 return defaultGeneratorConfig() ;; 2656}; 2657 ; 2658 ; 2659 ; 2660////////////////////////////////////////////////////////////////////////////////; 2661/// Set the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:125809,config,configuration,125809,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,3,['config'],['configuration']
Modifiability,"on from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; Bool_t HandleTimer (TTimer *timer) override;  Send progress and feedback to client. ;  ; void SetupFeedback () override;  Setup reporting of feedback objects and progress messages. ;  ;  Protected Member Functions inherited from TProofPlayerRemote; TProof * GetProof () const;  ; Int_t InitPacketizer (TDSet *dset, Long64_t nentries, Long64_t first, const char *defpackunit, const char *defpackdata);  Init the packetizer Return 0 on success (fPacketizer is correctly initialized), -1 on failure. ;  ; TList * MergeFeedback ();  Merge feedback lists. ;  ; Bool_t MergeOutputFiles ();  Merge output in files. ;  ; void NotifyMemory (TObject *obj);  Printout the memory record after merging object 'obj' This record is used by the memory monitor. ;  ; virtual Bool_t SendSelector (const char *selector_file);  Send the selector file(s) to master or worker nodes. ;  ; void SetLastMergingMsg (TObject *obj);  Set the message to be notified in case of exception. ;  ; void SetSelectorDataMembersFromOutputList ();  Set the selector's data members: find the mapping of data members to otuput list entries in the output list and apply it. ;  ; void StopFeedback () override;  Stop reporting of feedback objects. ;  ;  Protected Member Functions inherited from TProofPlayer; Int_t AssertSelector (const char *selector_file);  Make sure that a va",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofPlayerSuperMaster.html:20044,inherit,inherited,20044,doc/master/classTProofPlayerSuperMaster.html,https://root.cern,https://root.cern/doc/master/classTProofPlayerSuperMaster.html,1,['inherit'],['inherited']
Modifiability,on functions. Function Members (Methods); public:. virtual~TActivationChooser(); static TClass*Class(); TMVA::TActivation*CreateActivation(TMVA::TActivationChooser::EActivationType type) const; TMVA::TActivation*CreateActivation(const TString& type) const; vector<TString>*GetAllActivationNames() const; virtual TClass*IsA() const; TMVA::TActivationChooser&operator=(const TMVA::TActivationChooser&); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TMVA::TActivationChooserTActivationChooser(); TMVA::TActivationChooserTActivationChooser(const TMVA::TActivationChooser&). private:. TMVA::MsgLogger&Log() const. Data Members; public:. static TMVA::TActivationChooser::EActivationTypekLinear; static TMVA::TActivationChooser::EActivationTypekRadial; static TMVA::TActivationChooser::EActivationTypekSigmoid; static TMVA::TActivationChooser::EActivationTypekTanh. private:. TStringfLINEARactivation function name; TMVA::MsgLogger*fLogger! message logger; TStringfRADIALactivation function name; TStringfSIGMOIDactivation function name; TStringfTANHactivation function name. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TActivationChooser(); defaut constructor. ~TActivationChooser(); destructor. CreateActivation(EActivationType type); instantiate the correct activation object according to the; type choosen (given as the enumeration type). CreateActivation(const TString& type) const; instantiate the correct activation object according to the; type choosen (given by a TString). GetAllActivationNames() const; retuns the names of all know activation functions. TActivationChooser(). » Author: Matt Jachowski » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-06-30 15:17; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__TActivationChooser.html:1547,Inherit,Inheritance,1547,root/html602/TMVA__TActivationChooser.html,https://root.cern,https://root.cern/root/html602/TMVA__TActivationChooser.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"on histograms; Int_tTMVA::MethodBase::fNbinsMVAoutputnumber of bins in MVA output histograms; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. private:. vector<Int_t>*fClassthe event class (1=signal, 2=background); TMVA::MethodCFMlpANN_Utils::TMVA::MethodCFMlpANN_Utils::fCost_1; TMatrixF*fDatathe (data,var) string; TMVA::MethodCFMlpANN_Utils::TMVA::MethodCFMlpANN_Utils::fDel_1; TStringfLayerSpecthe hidden layer specification string; Int_tfNcyclesnumber of training cycles; TMVA::MethodCFMlpANN_Utils::TMVA::MethodCFMlpANN_Utils::fNeur_1; Int_tfNlayersnumber of layers (including input and output layers); Int_t*fNodesnumber of nodes per layer; TMVA::MethodCFMlpANN_Utils::TMVA::MethodCFMlpANN_Utils::fParam_1; TMVA::MethodCFMlpANN_Utils::VARn2TMVA::MethodCFMlpANN_Utils::fVarn2_1; TMVA::MethodCFMlpANN_Utils::VARn2TMVA::MethodCFMlpANN_Utils::fVarn3_1; TMVA::MethodCFMlpANN_Utils::TMVA::MethodCFMlpANN_Utils::fVarn_1; Double_t**fYNNweights; static TMVA::MethodCFMlpANN*fgThisthis carrier; static Int_tTMVA::MethodCFMlpANN_Utils::fg_0constant; static Int_tTMVA::MethodCFMlpANN_Utils::fg_100constant; static Int_tTMVA::MethodCFMlpANN_Utils::fg_999constant; static const char*TMVA::MethodCFMlpANN_Utils::fg_MethodNamemethod name for print; static Int_tTMVA::MethodCFMlpANN_Utils::fg_max_nNodes_maximum number of nodes per variable; static Int_tTMVA::MethodCFMlpANN_Utils::fg_max_nVar_static maximum number of input variables. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodCFMlpANN(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = ""3000:N-1:N-2"", TDirectory* theTargetDir = 0); standard constructor; option string: ""n_training_cycles:n_hidden_layers""; default is: n_training_cycles",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__MethodCFMlpANN.html:20060,layers,layers,20060,root/html530/TMVA__MethodCFMlpANN.html,https://root.cern,https://root.cern/root/html530/TMVA__MethodCFMlpANN.html,20,"['layers', 'variab']","['layers', 'variable', 'variables']"
Modifiability,"on if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,int,int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooCFunction2Binding_double_int_int_.html:33388,config,configuration,33388,root/html532/RooCFunction2Binding_double_int_int_.html,https://root.cern,https://root.cern/root/html532/RooCFunction2Binding_double_int_int_.html,1,['config'],['configuration']
Modifiability,"on integral (owned by _normMgr); RooObjCacheManagerRooAbsPdf::_normMgrThe cache manager; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; RooRealProxyalpha; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxym; RooRealProxym0; RooRealProxyn; RooRealProxysigma.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCBShape.html:38367,config,configuration,38367,root/html526/RooCBShape.html,https://root.cern,https://root.cern/root/html526/RooCBShape.html,1,['config'],['configuration']
Modifiability,"on is only performed when the return object is evaluated. The name; of the integral object is automatically constructed from the name of the input function, the variables; it integrates and the range integrates over. The following named arguments are accepted. NormSet(const RooArgSet&) -- Specify normalization set, mostly useful when working with PDFS; NumIntConfig(const RooNumIntConfig&) -- Use given configuration for any numeric integration, if necessary; Range(const char* name) -- Integrate only over given range. Multiple ranges may be specified; by passing multiple Range() arguments. RooAbsReal* createIntegral(const RooArgSet& iset, const RooArgSet* nset, 				 const RooNumIntConfig* cfg, const char* rangeName); Create an object that represents the integral of the function over one or more observables listed in iset; The actual integration calculation is only performed when the return object is evaluated. The name; of the integral object is automatically constructed from the name of the input function, the variables; it integrates and the range integrates over. If nset is specified the integrand is request; to be normalized over nset (only meaningful when the integrand is a pdf). If rangename is specified; the integral is performed over the named range, otherwise it is performed over the domain of each; integrated observable. If cfg is specified it will be used to configure any numeric integration; aspect of the integral. It will not force the integral to be performed numerically, which is; decided automatically by RooRealIntegral. RooAbsReal* createIntObj(const RooArgSet& iset, const RooArgSet* nset, const RooNumIntConfig* cfg, const char* rangeName) const; Utility function for createIntegral that creates the actual integreal object. void findInnerMostIntegration(const RooArgSet& allObs, RooArgSet& innerObs, const char* rangeName) const; Utility function for createIntObj() that aids in the construct of recursive integrals; over functions with multiple observables",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsReal.html:36039,variab,variables,36039,root/html526/RooAbsReal.html,https://root.cern,https://root.cern/root/html526/RooAbsReal.html,1,['variab'],['variables']
Modifiability,"on key used together with session key to calculate hash sum of each packet send to or from server This protects ROOT http server from anauthorized usage. ;  ; static void SetUseSessionKey (bool on=true);  Enable or disable usage of session key (default on) If enabled, secrete session key used to calculate hash sum of each packet send to or from server This protects ROOT http server from anauthorized usage. ;  . Private Member Functions; bool CreateServer (bool with_http=false);  Creates http server, if required - with real http engine (civetweb) One could configure concrete HTTP port, which should be used for the server, provide following entry in rootrc file: ;  ; float GetLaunchTmout () const;  Returns timeout for launching new browser process. ;  ; std::string GetUrl (RWebWindow &win, bool remote=false, std::string *produced_key=nullptr);  Provide URL address to access specified window from inside or from remote. ;  ; bool InformListener (const std::string &msg);  If ROOT_LISTENER_SOCKET variable is configured, message will be sent to that unix socket. ;  ; bool IsUseHttpThread () const;  Returns true if http server use special thread for requests processing (default off) ;  ; bool IsUseSenderThreads () const;  Returns true if extra threads to send data via websockets will be used (default off) ;  ; unsigned ShowWindow (RWebWindow &win, const RWebDisplayArgs &args);  Show window in specified location, see Show() method for more details. ;  ; void Unregister (RWebWindow &win);  Release all references to specified window Called from RWebWindow destructor. ;  ; int WaitFor (RWebWindow &win, WebWindowWaitFunc_t check, bool timed=false, double tm=-1);  Waits until provided check function or lambdas returns non-zero value Regularly calls WebWindow::Sync() method to let run event loop If call from the main thread, runs system events processing Check function has following signature: int func(double spent_tm) Parameter spent_tm is time in seconds, which already spent ins",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RWebWindowsManager.html:3773,variab,variable,3773,doc/v632/classROOT_1_1RWebWindowsManager.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RWebWindowsManager.html,4,"['config', 'variab']","['configured', 'variable']"
Modifiability,"on matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; TEveVectorfOrigin; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; list<TEveElement*>TEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; Float_tfTubeR; void*TEveElement::fUserData! Externally assigned and controlled user data.; TEveVectorfVector; TEveElement*TEveElement::fVizModel! Element used as model from VizDB.; TStringTEveElement::fVizTagTag used to query VizDB for model element. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveArrow(Float_t xVec = 0, Float_t yVec = 0, Float_t zVec = 1, Float_t xOrg = 0, Float_t yOrg = 0, Float_t zOrg = 0); Constructor.; Org - starting point.; Vec - vector from start to end of the arrow. void ComputeBBox(); Compute bounding-box of the arrow. void Paint(Option_t* option = """"); Paint object.; This is for direct rendering (using TEveArrowGL class). TEveArrow(const TEveArrow& ). TEveArrow& operator=(const TEveArrow& ). virtual ~TEveArrow(); {}. TObject* GetObject(const TEveException& ) const; { const TObject* obj = this; return const_cast<TObject*>(obj); }. void SetTubeR(Float_t x); { fTubeR = x; }. void SetConeR(Float_t x); { fConeR = x; }. void SetConeL(Float_t x); { fConeL = x; }. Float_t GetTubeR() const; { return fTubeR; }. Float_t GetConeR() const; { return fConeR; }. Float_t GetConeL() const; { return fConeL; }. TEveVector GetVector(); { return fVector; }. TEveVector GetOrigin(); { return fOrigin; }. Int_t GetDrawQuali",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveArrow.html:19278,Inherit,Inheritance,19278,root/html532/TEveArrow.html,https://root.cern,https://root.cern/root/html532/TEveArrow.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"on members; data members; class charts. ROOT; » CORE; » BASE; » TSubString. class TSubString. TString. Basic string class. Cannot be stored in a TCollection... use TObjString instead. Function Members (Methods); public:. TSubString(const TSubString& s); ~TSubString(); const char*Data() const; Bool_tIsNull() const; Ssiz_tLength() const; intoperator!() const; char&operator()(Ssiz_t i); charoperator()(Ssiz_t i) const; TSubString&operator=(const char* s); TSubString&operator=(const TString& s); TSubString&operator=(const TSubString& s); char&operator[](Ssiz_t i); charoperator[](Ssiz_t i) const; Ssiz_tStart() const; TString&String(); voidToLower(); voidToUpper(). protected:. voidAssertElement(Ssiz_t i) const; voidSubStringError(Ssiz_t, Ssiz_t, Ssiz_t) const. private:. TSubString(const TString& s, Ssiz_t start, Ssiz_t len). Data Members; private:. Ssiz_tfBeginIndex of starting character; Ssiz_tfExtentLength of TSubString; TString&fStrReferenced string. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const char * Data() const; Return a pointer to the beginning of the substring. Note that the; terminating null is in the same place as for the original; TString, so this method is not appropriate for converting the; TSubString to a string. To do that, construct a TString from the; TSubString. For example:. root [0] TString s(""hello world""); root [1] TSubString sub=s(0, 5); root [2] sub.Data(); (const char* 0x857c8b8)""hello world""; root [3] TString substr(sub); root [4] substr; (class TString)""hello"". char operator[](Ssiz_t i) const; Access to elements of sub-string with bounds checking. { AssertElement(i); return fStr.GetPointer()[fBegin+i]; }. char operator()(Ssiz_t i) const; { return fStr.GetPointer()[fBegin+i]; }. TSubString & operator=(const TSubString& s); { fStr = s.fStr; fBegin = s.fBegin; fExtent = s.fExtent; return *this; }. TSubString(const TString& s, Ssiz_t start, Ssiz_t len); NB: the only constructor is private. void SubSt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSubString.html:1132,Inherit,Inheritance,1132,root/html532/TSubString.html,https://root.cern,https://root.cern/root/html532/TSubString.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"on members; data members; class charts. ROOT; » ROOFIT; » HISTFACTORY; » RooStats::HistFactory::Channel. class RooStats::HistFactory::Channel. This class is also known as (typedefs to this class)vector<RooStats::HistFactory::Channel,allocator<RooStats::HistFactory::Channel> >::value_type. Function Members (Methods); public:. ~Channel(); voidAddAdditionalData(const RooStats::HistFactory::Data& data); voidAddSample(RooStats::HistFactory::Sample sample); RooStats::HistFactory::ChannelChannel(); RooStats::HistFactory::ChannelChannel(const RooStats::HistFactory::Channel& other); RooStats::HistFactory::ChannelChannel(string Name, string InputFile = """"); boolCheckHistograms(); voidCollectHistograms(); vector<RooStats::HistFactory::Data>&GetAdditionalData(); RooStats::HistFactory::Data&GetData(); stringGetHistoPath(); stringGetInputFile(); stringGetName(); vector<RooStats::HistFactory::Sample>&GetSamples(); RooStats::HistFactory::StatErrorConfig&GetStatErrorConfig(); RooStats::HistFactory::Channel&operator=(const RooStats::HistFactory::Channel&); voidPrint(ostream& = std::cout); voidPrintXML(string Directory, string Prefix = """"); voidSetData(const RooStats::HistFactory::Data& data); voidSetData(double Val); voidSetData(TH1* hData); voidSetData(string HistoName, string InputFile, string HistoPath = """"); voidSetHistoPath(const string& file); voidSetInputFile(const string& file); voidSetName(const string& Name); voidSetStatErrorConfig(RooStats::HistFactory::StatErrorConfig Config); voidSetStatErrorConfig(double RelErrorThreshold, RooStats::HistFactory::Constraint::Type ConstraintType); voidSetStatErrorConfig(double RelErrorThreshold, string ConstraintType). protected:. TH1*GetHistogram(string InputFile, string HistoPath, string HistoName). Data Members; protected:. vector<RooStats::HistFactory::Data>fAdditionalData; RooStats::HistFactory::DatafData; stringfHistoPath; stringfInputFile; stringfName; vector<RooStats::HistFactory::Sample>fSamples; RooStats::HistFactory::StatErrorC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__HistFactory__Channel.html:1664,Config,Config,1664,root/html534/RooStats__HistFactory__Channel.html,https://root.cern,https://root.cern/root/html534/RooStats__HistFactory__Channel.html,1,['Config'],['Config']
Modifiability,"on method used in; GetCellValue(const std::map<Int_t, Float_t>& xvec, ECellValue); Cadidates are: TMVA::kMean, TMVA::kMpv. - TMVA::kMean - The function GetCellValue() finds all cells; which contain a given event vector 'xvec' and returns the; mean target (for every target variable in the foam). - TMVA::kMpv - The function GetCellValue() finds all cells; which contain a given event vector 'xvec' and returns the; most probable target (for every target variable in the; foam), that is the target value which corresponds to the; cell with the largest event density. PDEFoamMultiTarget(const TMVA::PDEFoamMultiTarget& ); Copy Constructor NOT IMPLEMENTED (NEVER USED). std::vector<Float_t> GetCellValue(const map<Int_t,Float_t>& , TMVA::ECellValue ); This function is overridden from PDFEFoam. It returns all; regression targets (in order), given an untransformed event; vector 'xvec'. The key of 'xvec' is the dimension and the value; (Float_t) is the coordinate. Note: number of foam dimensions = number of variables + number; of targets. Parameters:; - xvec - map of event variables (no targets!); - cv - cell value to return (ignored!). Return:; Targets, ordered by missing dimensions in 'xvec'.; The size of the returned vector = foam dimension - size of xvec. void CalculateMpv(map<Int_t,Float_t>& , const vector<TMVA::PDEFoamCell*,allocator<TMVA::PDEFoamCell*> >& ); This function calculates the most probable target value from a; given number of cells. The most probable target is defined to; be the coordinates of the cell which has the biggest event; density. Parameters:. - target - map of targets, where the key is the dimension and; the value is the target value. It is assumed that this map is; initialized such that there is a map entry for every target. - cells - vector of PDEFoam cells to pick the most probable; target from. void CalculateMean(map<Int_t,Float_t>& , const vector<TMVA::PDEFoamCell*,allocator<TMVA::PDEFoamCell*> >& ); This function calculates the mean target value fr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__PDEFoamMultiTarget.html:13960,variab,variables,13960,root/html534/TMVA__PDEFoamMultiTarget.html,https://root.cern,https://root.cern/root/html534/TMVA__PDEFoamMultiTarget.html,2,['variab'],['variables']
Modifiability,"on method used in; GetCellValue(const std::map<Int_t, Float_t>& xvec, ECellValue); Cadidates are: TMVA::kMean, TMVA::kMpv. - TMVA::kMean - The function GetCellValue() finds all cells; which contain a given event vector 'xvec' and returns the; mean target (for every target variable in the foam). - TMVA::kMpv - The function GetCellValue() finds all cells; which contain a given event vector 'xvec' and returns the; most probable target (for every target variable in the; foam), that is the target value which corresponds to the; cell with the largest event density. PDEFoamMultiTarget(const TMVA::PDEFoamMultiTarget& ); Copy Constructor NOT IMPLEMENTED (NEVER USED). std::vector<Float_t> GetCellValue(const map<Int_t,Float_t>& , TMVA::ECellValue ); This function is overridden from PDFEFoam. It returns all; regression targets (in order), given an untransformed event; vector 'xvec'. The key of 'xvec' is the dimension and the value; (Float_t) is the coordinate. Note: number of foam dimensions = number of variables + number; of targets. Parameters:; - xvec - map of event variables (no targets!); - cv - cell value to return (ignored!). Return:; Targets, ordered by missing dimensions in 'xvec'.; The size of the returned vector = foam dimension - size of xvec. void CalculateMpv(map<Int_t,Float_t>& , const vector<TMVA::PDEFoamCell*>& ); This function calculates the most probable target value from a; given number of cells. The most probable target is defined to; be the coordinates of the cell which has the biggest event; density. Parameters:. - target - map of targets, where the key is the dimension and; the value is the target value. It is assumed that this map is; initialized such that there is a map entry for every target. - cells - vector of PDEFoam cells to pick the most probable; target from. void CalculateMean(map<Int_t,Float_t>& , const vector<TMVA::PDEFoamCell*>& ); This function calculates the mean target value from a given; number of cells. As weight the event density of th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__PDEFoamMultiTarget.html:14333,variab,variables,14333,root/html602/TMVA__PDEFoamMultiTarget.html,https://root.cern,https://root.cern/root/html602/TMVA__PDEFoamMultiTarget.html,4,['variab'],['variables']
Modifiability,"on of 1000 events: 0.354 sec ; : Create variable histograms; : Create regression target histograms; : Create regression average deviation; : Results created; : Creating xml weight file: ␛[0;36mdatasetreg/weights/TMVARegression_BDTG.weights.xml␛[0m; : TMVAReg.root:/datasetreg/Method_BDT/BDTG; Factory : Training finished; : ; TH1.Print Name = TrainingHistory_DNN_CPU_trainingError, Entries= 0, Total sum= 3.72139e+06; TH1.Print Name = TrainingHistory_DNN_CPU_valError, Entries= 0, Total sum= 3.30469e+06; Factory : === Destroy and recreate all methods via weight files for testing ===; : ; : Reading weight file: ␛[0;36mdatasetreg/weights/TMVARegression_PDEFoam.weights.xml␛[0m; : Read foams from file: ␛[0;36mdatasetreg/weights/TMVARegression_PDEFoam.weights_foams.root␛[0m; : Reading weight file: ␛[0;36mdatasetreg/weights/TMVARegression_KNN.weights.xml␛[0m; : Creating kd-tree with 1000 events; : Computing scale factor for 1d distributions: (ifrac, bottom, top) = (80%, 10%, 90%); ModulekNN : Optimizing tree for 2 variables with 1000 values; : <Fill> Class 1 has 1000 events; : Reading weight file: ␛[0;36mdatasetreg/weights/TMVARegression_LD.weights.xml␛[0m; : Reading weight file: ␛[0;36mdatasetreg/weights/TMVARegression_DNN_CPU.weights.xml␛[0m; : Reading weight file: ␛[0;36mdatasetreg/weights/TMVARegression_BDTG.weights.xml␛[0m; Factory : ␛[1mTest all methods␛[0m; Factory : Test method: PDEFoam for Regression performance; : ; : Dataset[datasetreg] : Create results for testing; : Dataset[datasetreg] : Evaluation of PDEFoam on testing sample; : Dataset[datasetreg] : Elapsed time for evaluation of 9000 events: 0.0705 sec ; : Create variable histograms; : Create regression target histograms; : Create regression average deviation; : Results created; Factory : Test method: KNN for Regression performance; : ; : Dataset[datasetreg] : Create results for testing; : Dataset[datasetreg] : Evaluation of KNN on testing sample; : Dataset[datasetreg] : Elapsed time for evaluation of 9000 even",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:126769,variab,variables,126769,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['variab'],['variables']
Modifiability,"on of 3200 events: 0.248 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAClassification_PyKeras_LSTM.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAClassification_PyKeras_LSTM.class.C␛[0m; Factory : Training finished; : ; Factory : Train method: BDTG for Classification; : ; : ; : ␛[1m================================================================␛[0m; : ␛[1mH e l p f o r M V A m e t h o d [ BDTG ] :␛[0m; : ; : ␛[1m--- Short description:␛[0m; : ; : Boosted Decision Trees are a collection of individual decision; : trees which form a multivariate classifier by (weighted) majority ; : vote of the individual trees. Consecutive decision trees are ; : trained using the original training data set with re-weighted ; : events. By default, the AdaBoost method is employed, which gives ; : events that were misclassified in the previous tree a larger ; : weight in the training of the following tree.; : ; : Decision trees are a sequence of binary splits of the data sample; : using a single discriminant variable at a time. A test event ; : ending up after the sequence of left-right splits in a final ; : (""leaf"") node is classified as either signal or background; : depending on the majority type of training events in that node.; : ; : ␛[1m--- Performance optimisation:␛[0m; : ; : By the nature of the binary splits performed on the individual; : variables, decision trees do not deal well with linear correlations; : between variables (they need to approximate the linear split in; : the two dimensional space by a sequence of splits on the two ; : variables individually). Hence decorrelation could be useful ; : to optimise the BDT performance.; : ; : ␛[1m--- Performance tuning via configuration options:␛[0m; : ; : The two most important parameters in the configuration are the ; : minimal number of events requested by a leaf node as percentage of the ; : number of training events (option ""MinNodeSize"" replacing the actual number ; : of events ""nEven",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8py.html:31127,variab,variable,31127,doc/master/TMVA__RNN__Classification_8py.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8py.html,1,['variab'],['variable']
Modifiability,"on of files containg TTree objects ;  CTChainElementA TChainElement describes a component of a TChain ;  ►CTChainIndexA Chain Index ;  CTChainIndexEntryHolds a description of indices of trees in the chain ;  CTChair;  CTChirpFileRead and write data via a Chirp server ;  CTChirpSystem;  CTCivetweb;  CTCL;  ►CTClassThe ROOT global object gROOT contains a list of all defined classes ;  CInsertTClassInRegistryRAII;  CTDeclNameRegistry;  CTNameMapNode;  CTSpinLockGuard;  CTClassDocInfo;  CTClassDocOutput;  CTClassGeneratorObjects following this interface can be passed onto the TROOT object to implement a user customized way to create the TClass objects ;  CTClassMenuItemDescribes one element of the context menu associated to a class The menu item may describe ;  CTClassRefTClassRef is used to implement a permanent reference to a TClass object ;  CTClassStreamer;  CTClassTableThis class registers for all classes their name, id and dictionary function in a hash table ;  CTClassTreeDraw inheritance tree and their relations for a list of classes ;  ►CTClingThis class defines an interface to the cling C++ interpreter ;  CCharPtrCmp_t;  CTUniqueString;  CTClingBaseClassInfoEmulation of the CINT BaseClassInfo class ;  CTClingCallbacks;  CTClingCallFuncEmulation of the CINT CallFunc class ;  CTClingClassInfoEmulation of the CINT ClassInfo class ;  CTClingDataMemberInfoEmulation of the CINT DataMemberInfo class ;  CTClingMethodArgInfoEmulation of the CINT MethodInfo class ;  CTClingMethodInfoEmulation of the CINT MethodInfo class ;  CTClingTypedefInfoEmulation of the CINT TypedefInfo class ;  CTClingTypeInfoEmulation of the CINT TypeInfo class ;  ►CTClingValueBridge between cling::Value and ROOT ;  CHasTheSameSizeAsClingValue;  CTClonesArrayAn array of clone (identical) objects ;  CTCollectionCollection abstract base class ;  CTCollectionClassStreamerClass streamer object to implement TClassStreamer functionality for I/O emulation ;  CTCollectionMemberStreamerClass streamer objec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/annotated.html:115501,inherit,inheritance,115501,doc/v608/annotated.html,https://root.cern,https://root.cern/doc/v608/annotated.html,3,['inherit'],['inheritance']
Modifiability,"on of selected request fields. For signing the request, an 'Access Key Id' and a 'Secret Access Key' need to be known. These keys are used by the S3 servers to identify the client and to authenticate the request as genuine.; As an end user, you must know the Access Key and Secret Access Key in order to access each S3 file. They are provided to you by your S3 service provider. Those two keys can be provided to ROOT when initializing an object of this class by two means: a. by using the environmental variables S3_ACCESS_KEY and S3_SECRET_KEY, or b. by specifying them when opening each file.; You can use AWS temporary security credentials (temporary access key and secret access key), but you must also give the associated session token. The token may be set in the S3_SESSION_TOKEN environmental variable, or on open in the TOKEN option.; The first method is convenient if all the S3 files you want to access are hosted by a single provider. The second one is more flexible as it allows you to specify which credentials to use on a per-file basis. See the documentation of the constructor of this class for details on the syntax.; For generating and signing the HTTP request, this class uses TS3HTTPRequest.; For more information on the details of S3 protocol please refer to: ""Amazon Simple Storage Service Developer Guide"": http://docs.amazonwebservices.com/AmazonS3/latest/dev/Welcome.html; ""Amazon Simple Storage Service REST API Reference"" http://docs.amazonwebservices.com/AmazonS3/latest/API/APIRest.html ; Definition at line 68 of file TS3WebFile.h. Public Member Functions;  TS3WebFile (const char *url, Option_t *options="""");  Construct a TS3WebFile object. ;  ; virtual ~TS3WebFile ();  ; const TString & GetAccessKey () const;  ; const TString & GetBucket () const;  ; const TString & GetObjectKey () const;  ; const TString & GetSecretKey () const;  ; const TUrl & GetUrl () const;  ; TClass * IsA () const override;  ; Bool_t ReadBuffers (char *buf, Long64_t *pos, Int_t *len, Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTS3WebFile.html:1858,flexible,flexible,1858,doc/master/classTS3WebFile.html,https://root.cern,https://root.cern/doc/master/classTS3WebFile.html,1,['flexible'],['flexible']
Modifiability,"on of the normal TFormula constructor. This is necessary because the normal TFormula constructor call indirectly; the virtual member functions Analyze, DefaultString, DefaultValue; and DefaultVariable. Double_t DefinedValue(Int_t code); Return value corresponding to special code. This member function is inactive in the TFormula class.; It may be redefined in derived classes. If you overload this member function, you also HAVE TO; never call the constructor:. TFormula::TFormula(const char *name,const char *expression). and write your own constructor. MyClass::MyClass(const char *name,const char *expression) : TFormula(). which has to call the TFormula default constructor and whose implementation; should be similar to the implementation of the normal TFormula constructor. This is necessary because the normal TFormula constructor call indirectly; the virtual member functions Analyze, DefaultString, DefaultValue; and DefaultVariable. Int_t DefinedVariable(TString& variable, Int_t& action); Check if expression is in the list of defined variables. This member function can be overloaded in derived classes. If you overload this member function, you also HAVE TO; never call the constructor:. TFormula::TFormula(const char *name,const char *expression). and write your own constructor. MyClass::MyClass(const char *name,const char *expression) : TFormula(). which has to call the TFormula default constructor and whose implementation; should be similar to the implementation of the normal TFormula constructor. This is necessary because the normal TFormula constructor call indirectly; the virtual member functions Analyze, DefaultString, DefaultValue; and DefaultVariable. The expected returns values are; -2 : the name has been recognized but won't be usable; -1 : the name has not been recognized; >=0 : the name has been recognized, return the action parameter. Double_t Eval(Double_t x, Double_t y = 0, Double_t z = 0, Double_t t = 0) const; Evaluate this formula. The current value of ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFormula.html:22417,variab,variable,22417,root/html534/TFormula.html,https://root.cern,https://root.cern/root/html534/TFormula.html,12,['variab'],"['variable', 'variables']"
Modifiability,"on of top left corner of title box. ;  ; Float_t fTitleY;  Y position of top left corner of title box. ;  ; Bool_t fViolinScaled;  Violin plot, shall the violin or histos be scaled to each other by the maximum height? ;  ; TAttAxis fXaxis;  X axis attributes. ;  ; Float_t fXAxisExpXOffset;  X axis exponent label X offset. ;  ; Float_t fXAxisExpYOffset;  X axis exponent label Y offset. ;  ; TAttAxis fYaxis;  Y axis attributes. ;  ; Float_t fYAxisExpXOffset;  Y axis exponent label X offset. ;  ; Float_t fYAxisExpYOffset;  Y axis exponent label Y offset. ;  ; TAttAxis fZaxis;  Z axis attributes. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . #include <TStyle.h>. Inheritance diagram for TStyle:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EPaperSize. enum TStyle::EPaperSize. EnumeratorkA4 ; kUSLetter . Definition at line 153 of file ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStyle.html:42942,inherit,inherited,42942,doc/master/classTStyle.html,https://root.cern,https://root.cern/doc/master/classTStyle.html,2,['inherit'],['inherited']
Modifiability,"on or p.d.f; 784/// to be plotted on a RooPlot.; 785/// \ref createPlotProjAnchor ""createPlotProjection()""; 786 ; 787const RooAbsReal* RooAbsReal::createPlotProjection(const RooArgSet& depVars, const RooArgSet& projVars,; 788 RooArgSet*& cloneSet) const; 789{; 790 return createPlotProjection(depVars,&projVars,cloneSet) ;; 791}; 792 ; 793 ; 794////////////////////////////////////////////////////////////////////////////////; 795/// Utility function for plotOn() that creates a projection of a function or p.d.f; 796/// to be plotted on a RooPlot.; 797/// \anchor createPlotProjAnchor; 798///; 799/// Create a new object \f$ G \f$ that represents the normalized projection:; 800/// \f[; 801/// G[x,p] = \frac{\int F[x,y,p] \; \mathrm{d}\{y\}}; 802/// {\int F[x,y,p] \; \mathrm{d}\{x\} \, \mathrm{d}\{y\}}; 803/// \f]; 804/// where \f$ F[x,y,p] \f$ is the function we represent, and; 805/// \f$ \{ p \} \f$ are the remaining variables (""parameters"").; 806///; 807/// \param[in] dependentVars Dependent variables over which to normalise, \f$ \{x\} \f$.; 808/// \param[in] projectedVars Variables to project out, \f$ \{ y \} \f$.; 809/// \param[out] cloneSet Will be set to a RooArgSet*, which will contain a clone of *this plus its projection integral object.; 810/// The latter will also be returned. The caller takes ownership of this set.; 811/// \param[in] rangeName Optional range for projection integrals; 812/// \param[in] condObs Conditional observables, which are not integrated for normalisation, even if they; 813/// are in `dependentVars` or `projectedVars`.; 814/// \return A pointer to the newly created object, or zero in case of an; 815/// error. The caller is responsible for deleting the `cloneSet` (which includes the returned projection object).; 816const RooAbsReal *RooAbsReal::createPlotProjection(const RooArgSet &dependentVars, const RooArgSet *projectedVars,; 817 RooArgSet *&cloneSet, const char* rangeName, const RooArgSet* condObs) const; 818{; 819 // Get the set of our le",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:31793,variab,variables,31793,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['variab'],['variables']
Modifiability,"on ostream, printing contents set by contents integer, which is interpreted as an OR of 'enum ContentsOptions' values and in the style given by 'enum StyleOption'. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Protected Member Functions; double evaluate () const override;  Evaluate projected p.d.f. ;  ;  Protected Member Functions inherited from RooProjectedPdf; const RooAbsReal * getProjection (const RooArgSet *iset, const RooArgSet *nset, const char *rangeName, int &code) const;  Retrieve object representing projection integral of input p.d.f over observables iset, while normalizing over observables nset. ;  ; bool redirectServersHook (const RooAbsCollection &newServerList, bool, bool, bool) override;  Intercept a server redirection all and update list of dependents if necessary Specifically update the set proxy 'deps' which introduces the dependency on server value dirty flags of ourselves. ;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique_ptr< RooFitResult > fitToImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the likelihood fitting routine. ;  ; bool isActiveNormSet (RooArgSet const *normSet) const;  Checks if normSet is the currently active normalization set of this PDF, meaning is exactly the same object as the one the _normSet member points to (or both are nullptr). ;  ; double normalizeWithNaNPacking (double rawVal, double normVal) const;  ; RooPlot * plotOn (RooPlot *frame, PlotOpt o) const override;  Plot oneself on 'frame'. ;  ; Int_t * randomizeProtoOrder (Int_t nProto, Int_t nGen, bool resample=false) const;  Return lookup table with randomized order for nProto prototype events. ;  ; virtual bool syncNormalization (const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classxRooProjectedPdf.html:56423,inherit,inherited,56423,doc/master/classxRooProjectedPdf.html,https://root.cern,https://root.cern/doc/master/classxRooProjectedPdf.html,1,['inherit'],['inherited']
Modifiability,"on printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Calculate value. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that creates the actual integral object. ;  ; void fillTreeBranch (TTree &t) override;  Fill the tree branch that associated with this object with its current value. ;  ; void findInnerMostIntegration (const RooArgSet &allObs, RooArgSet &innerObs, const char *rangeName) const;  Utility function for createIntObj() that aids in the construct of recursive integrals over functions with multiple observables with parameterized ranges. ;  ; TString integralNameSuffix (const RooArgSet &iset, const RooArgSet *nset=nullptr, const char *rangeName=nullptr, bool omitEmpty=false) const;  Construct string with unique suffix name to give to integral object that encodes integrated observables, normalization observables and the integration range name. ;  ; bool isValid () const override;  Check if current value is valid. ;  ; virtual bool isValidReal (double, bool printError=false) const;  Interface function to check if given value is a valid value for this object. Returns true unless overridden. ;  ; void makeProjectionSet (const RooAbsArg *plotVar, const RooArgSet *allVars, RooArgSet &projectedVars, bool silent) const;  Utility function for plotOn() that constructs the set of observables to project when plotting ourselves as function of 'plotVar'. ;  ; bool matchArgs (const RooArgSet &allDeps, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDerivative.html:49064,parameteriz,parameterized,49064,doc/master/classRooDerivative.html,https://root.cern,https://root.cern/doc/master/classRooDerivative.html,5,['parameteriz'],['parameterized']
Modifiability,"on range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxypdfProxy to p.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooCachedPdf.html:41070,config,configuration,41070,root/html530/RooCachedPdf.html,https://root.cern,https://root.cern/root/html530/RooCachedPdf.html,2,['config'],['configuration']
Modifiability,"on specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,int,int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction2Ref<VO,VI1,VI2> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction2Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Sep 8 17:02:50 201",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction2PdfBinding_double_int_int_.html:43352,Inherit,Inheritance,43352,root/html534/RooCFunction2PdfBinding_double_int_int_.html,https://root.cern,https://root.cern/root/html534/RooCFunction2PdfBinding_double_int_int_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"on the size take on disk or in memory by the various branches in a TTree ;  run_h1analysis.C Macro driving the analysis can specify file name and type ;  spider.C TSpider example ;  staff.C Create a plot of the data in cernstaff.root To create cernstaff.root, execute tutorial $ROOTSYS/tutorials/tree/cernbuild.C ;  tcl.C How to write a TClonesArray to a TTree ;  tree.C Display the Tree data structures ;  tree0.C Simple Event class example ;  tree1.C This example is a variant of hsimple.C but using a TTree instead of a TNtuple ;  tree2.C This example illustrates how to make a Tree from variables or arrays in a C struct ;  tree2a.C This example is the same as tree2.C, but uses a class instead of a C-struct ;  tree3.C Example of a Tree where branches are variable length arrays A second Tree is created and filled in parallel ;  tree4.C This example writes a tree with objects of the class Event ;  treefriend.C Illustrates how to use Tree friends: ;  treegetval.C Illustrates how to retrieve TTree variables in arrays ;  tv3.C;  tvdemo.C;  ► unfold;  testUnfold1.C Test program for the classes TUnfold and related ;  testUnfold2.C Test program as an example for a user specific regularisation scheme ;  testUnfold3.C Simple Test program for the class TUnfoldDensity ;  testUnfold4.C Test program for the class TUnfoldSys ;  testUnfold5a.C Test program for the classes TUnfoldDensity and TUnfoldBinning ;  testUnfold5b.C Test program for the classes TUnfoldDensity and TUnfoldBinning ;  testUnfold5c.C Test program for the classes TUnfoldDensity and TUnfoldBinning ;  testUnfold5d.C Test program for the classes TUnfoldDensity and TUnfoldBinning ;  testUnfold6.C Test program for the class TUnfoldBinning ;  testUnfold7a.C Test program for the classes TUnfoldDensity and TUnfoldBinning ;  testUnfold7b.C Test program for the classes TUnfoldDensity and TUnfoldBinning ;  testUnfold7c.C Test program for the classes TUnfoldDensity and TUnfoldBinning ;  ► unuran;  unuranDemo.CExample macro to show",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v610/files.html:159512,variab,variables,159512,doc/v610/files.html,https://root.cern,https://root.cern/doc/v610/files.html,2,['variab'],['variables']
Modifiability,"on the size take on disk or in memory by the various branches in a TTree ;  run_h1analysis.C Macro driving the analysis can specify file name and type ;  spider.C TSpider example ;  staff.C Create a plot of the data in cernstaff.root To create cernstaff.root, execute tutorial $ROOTSYS/tutorials/tree/cernbuild.C ;  tcl.C How to write a TClonesArray to a TTree ;  tree.C Display the Tree data structures ;  tree0.C Simple Event class example ;  tree1.C This example is a variant of hsimple.C but using a TTree instead of a TNtuple ;  tree2.C This example illustrates how to make a Tree from variables or arrays in a C struct ;  tree2a.C This example is the same as tree2.C, but uses a class instead of a C-struct ;  tree3.C Example of a Tree where branches are variable length arrays A second Tree is created and filled in parallel ;  tree4.C This example writes a tree with objects of the class Event ;  treefriend.C Illustrates how to use Tree friends: ;  treegetval.C Illustrates how to retrieve TTree variables in arrays ;  tv3.C;  tvdemo.C;  ► unuran;  unuranDemo.CExample macro to show unuran capabilities The results are compared with what is obtained using TRandom or TF1::GetRandom The macro is divided in 3 parts: ;  unuranFoamTest.CThis program must be compiled and executed with Aclic as follows ;  ► v7;  concurrentfill.cxx;  draw.cxx;  histops.cxx;  histspeedtest.cxx;  perf.cxx;  perfcomp.cxx;  simple.cxx;  ► xml;  DOMParsePerson.C ROOT implementation of a XML DOM Parser ;  DOMRecursive.C ROOT implementation of a XML DOM Parser ;  SAXHandler.C ROOT implementation of a simple SAX Handler ;  xmlnewfile.C Example to create a new xml file with the TXMLEngine class ;  xmlreadfile.C Example to read and parse any xml file, supported by TXMLEngine class The input file, produced by xmlnewfile.C macro is used If you need full xml syntax support, use TXMLParser instead ;  benchmarks.CThis macro run several tests and produces an benchmark report ;  demos.CThis macro shows a control bar ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/files.html:157659,variab,variables,157659,doc/v608/files.html,https://root.cern,https://root.cern/doc/v608/files.html,1,['variab'],['variables']
Modifiability,"on time ;  ; static Bool_t fgStatOverflows = kFALSE;  ! Flag to use under/overflows in statistics ;  . #include <TH3.h>. Inheritance diagram for TH3S:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TH3S() [1/5]. TH3S::TH3S ; (; ). Constructor. ; Definition at line 3799 of file TH3.cxx. ◆ TH3S() [2/5]. TH3S::TH3S ; (; const char * ; name, . const char * ; title, . Int_t ; nbinsx, . Double_t ; xlow, . Double_t ; xup, . Int_t ; nbinsy, . Double_t ; ylow, . Double_t ; yup, . Int_t ; nbinsz, . Double_t ; zlow, . Double_t ; zup . ). Constructor for fix bin size 3-D histograms. ; (see TH3::TH3 for explanation of parameters) ; Definition at line 3818 of file TH3.cxx. ◆ TH3S() [3/5]. TH3S::TH3S ; (; const char * ; name, . const char * ; title, . Int_t ; nbinsx, . const Float_t * ; xbins, . Int_t ; nbinsy, . const Float_t * ; ybins, . Int_t ; nbinsz, . const Float_t * ; zbins . ). Constructor for variable bin size 3-D histograms. ; (see TH3::TH3 for explanation of parameters) ; Definition at line 3834 of file TH3.cxx. ◆ TH3S() [4/5]. TH3S::TH3S ; (; const char * ; name, . const char * ; title, . Int_t ; nbinsx, . const Double_t * ; xbins, . Int_t ; nbinsy, . const Double_t * ; ybins, . Int_t ; nbinsz, . const Double_t * ; zbins . ). Constructor for variable bin size 3-D histograms. ; (see TH3::TH3 for explanation of parameters) ; Definition at line 3848 of file TH3.cxx. ◆ TH3S() [5/5]. TH3S::TH3S ; (; const TH3S & ; h3s). Copy Constructor. ; The list of functions is not copied. (Use Clone() if needed) ; Definition at line 3862 of file TH3.cxx. ◆ ~TH3S(). TH3S::~TH3S ; (; ). override . Destructor. ; Definition at line 3809 of file TH3.cxx. Member Function Documentation. ◆ AddBinContent() [1/4]. void TH3S::AddBinContent ; (; Int_t ; bin). overridevirtual . Increment bin content by 1. ; Passing an out-of-range bin leads to undefined behavior ; Reimplemented from TH3.; Definition at line 3",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3S.html:62077,variab,variable,62077,doc/master/classTH3S.html,https://root.cern,https://root.cern/doc/master/classTH3S.html,1,['variab'],['variable']
Modifiability,"on time. ;  ; Long64_t fSeekDir {0};  Location of directory on file. ;  ; Long64_t fSeekKeys {0};  Location of Keys record on file. ;  ; Long64_t fSeekParent {0};  Location of parent directory on file. ;  ; Bool_t fWritable {kFALSE};  True if directory is writable. ;  ;  Protected Attributes inherited from TDirectory; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Friends; class RooWorkspace;  . Additional Inherited Members;  Public Types inherited from TDirectoryFile; enum  EStatusBits { kCloseDirectory = (1ULL << ( 7 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TDirectory; static Bool_t Cd1 (const char *path);  Change",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooWorkspace_1_1WSDir.html:22256,inherit,inherited,22256,doc/master/classRooWorkspace_1_1WSDir.html,https://root.cern,https://root.cern/doc/master/classRooWorkspace_1_1WSDir.html,2,['inherit'],['inherited']
Modifiability,"on to be binned variably.; Set the thresholds at the desired bin boundaries, and construct the; data hist as function of the threshold category instead of the real variable. RooDataHist(const char* name, const char* title, const RooArgSet& vars, const RooAbsData& data, Double_t initWgt = 1.0); Constructor of a data hist from an existing data collection (binned or unbinned); The RooArgSet 'vars' defines the dimensions of the histogram.; The range and number of bins in each dimensions are taken; from getMin()getMax(),getBins() of each RooAbsArg representing that; dimension. For real dimensions, the fit range and number of bins can be set independently; of the plot range and number of bins, but it is advisable to keep the; ratio of the plot bin width and the fit bin width an integer value.; For category dimensions, the fit ranges always comprises all defined states; and each state is always has its individual bin. To effective achive binning of real dimensions with variable bins sizes,; construct a RooThresholdCategory of the real dimension to be binned variably.; Set the thresholds at the desired bin boundaries, and construct the; data hist as function of the threshold category instead of the real variable. If the constructed data hist has less dimensions that in source data collection,; all missing dimensions will be projected. RooDataHist(const char *name, const char *title, const RooArgList& vars, RooCategory& indexCat, 			 map<string,TH1*> histMap, Double_t wgt); Constructor of a data hist from a map of TH1,TH2 or TH3 that are collated into a x+1 dimensional; RooDataHist where the added dimension is a category that labels the input source as defined; in the histMap argument. The state names used in histMap must correspond to predefined states; 'indexCat'. The RooArgList 'vars' defines the dimensions of the histogram.; The ranges and number of bins are taken from the input histogram and must be the same in all histograms. RooDataHist(const char *name, const char *t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooDataHist.html:20229,variab,variable,20229,root/html528/RooDataHist.html,https://root.cern,https://root.cern/root/html528/RooDataHist.html,12,['variab'],"['variable', 'variably']"
Modifiability,"on tree headed by this object to the given set of observables. ;  ; virtual bool forceAnalyticalInt (const RooAbsArg &) const;  ; virtual void forceNumInt (bool flag=true);  ; RooFunctor * functor (const RooArgList &obs, const RooArgList &pars=RooArgList(), const RooArgSet &nset=RooArgSet()) const;  Return a RooFunctor object bound to this RooAbsReal with given definition of observables and parameters. ;  ; virtual Int_t getAnalyticalIntegral (RooArgSet &allVars, RooArgSet &analVars, const char *rangeName=nullptr) const;  Interface function getAnalyticalIntergral advertises the analytical integrals that are supported. ;  ; virtual Int_t getAnalyticalIntegralWN (RooArgSet &allVars, RooArgSet &analVars, const RooArgSet *normSet, const char *rangeName=nullptr) const;  Variant of getAnalyticalIntegral that is also passed the normalization set that should be applied to the integrand of which the integral is requested. ;  ; bool getForceNumInt () const;  ; RooNumIntConfig * getIntegratorConfig ();  Return the numeric integration configuration used for this object. ;  ; const RooNumIntConfig * getIntegratorConfig () const;  Return the numeric integration configuration used for this object. ;  ; virtual Int_t getMaxVal (const RooArgSet &vars) const;  Advertise capability to determine maximum value of function for given set of observables. ;  ; const char * getPlotLabel () const;  Get the label associated with the variable. ;  ; double getPropagatedError (const RooFitResult &fr, const RooArgSet &nset={}) const;  Propagates parameter uncertainties to an uncertainty estimate for this RooAbsReal. ;  ; TString getTitle (bool appendUnit=false) const;  Return this variable's title string. ;  ; const Text_t * getUnit () const;  ; double getVal (const RooArgSet &normalisationSet) const;  Like getVal(const RooArgSet*), but always requires an argument for normalisation. ;  ; double getVal (const RooArgSet *normalisationSet=nullptr) const;  Evaluate object. ;  ; virtual double getValV ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCFunction1Binding.html:12778,config,configuration,12778,doc/master/classRooCFunction1Binding.html,https://root.cern,https://root.cern/doc/master/classRooCFunction1Binding.html,39,['config'],['configuration']
Modifiability,"on tree headed by this object to the given set of observables. ;  ; virtual bool forceAnalyticalInt (const RooAbsArg &) const;  ; virtual void forceNumInt (bool flag=true);  ; RooFunctor * functor (const RooArgList &obs, const RooArgList &pars=RooArgList(), const RooArgSet &nset=RooArgSet()) const;  Return a RooFunctor object bound to this RooAbsReal with given definition of observables and parameters. ;  ; virtual Int_t getAnalyticalIntegral (RooArgSet &allVars, RooArgSet &analVars, const char *rangeName=nullptr) const;  Interface function getAnalyticalIntergral advertises the analytical integrals that are supported. ;  ; virtual Int_t getAnalyticalIntegralWN (RooArgSet &allVars, RooArgSet &analVars, const RooArgSet *normSet, const char *rangeName=nullptr) const;  Variant of getAnalyticalIntegral that is also passed the normalization set that should be applied to the integrand of which the integral is requested. ;  ; bool getForceNumInt () const;  ; RooNumIntConfig * getIntegratorConfig ();  Return the numeric integration configuration used for this object. ;  ; const RooNumIntConfig * getIntegratorConfig () const;  Return the numeric integration configuration used for this object. ;  ; virtual Int_t getMaxVal (const RooArgSet &vars) const;  Advertise capability to determine maximum value of function for given set of observables. ;  ; const char * getPlotLabel () const;  Get the label associated with the variable. ;  ; double getPropagatedError (const RooFitResult &fr, const RooArgSet &nset={}) const;  Propagates parameter uncertainties to an uncertainty estimate for this RooAbsReal. ;  ; TString getTitle (bool appendUnit=false) const;  Return this variable's title string. ;  ; const Text_t * getUnit () const;  ; double getVal (const RooArgSet &normalisationSet) const;  Like getVal(const RooArgSet*), but always requires an argument for normalisation. ;  ; double getVal (const RooArgSet *normalisationSet=nullptr) const;  Evaluate object. ;  ; virtual void gradient (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBukinPdf.html:23789,config,configuration,23789,doc/master/classRooBukinPdf.html,https://root.cern,https://root.cern/doc/master/classRooBukinPdf.html,32,['config'],['configuration']
Modifiability,"on't be usable; -1 : the name has not been recognized; >=0 : the name has been recognized, return the action parameter. . Reimplemented in TTreeFormula.; Definition at line 2621 of file TFormula_v5.cxx. ◆ Eval(). Double_t TFormula::Eval ; (; Double_t ; x, . Double_t ; y = 0, . Double_t ; z = 0, . Double_t ; t = 0 . ); const. virtual . Evaluate this formula. ; The current value of variables x,y,z,t is passed through x, y, z and t. The parameters used will be the ones in the array params if params is given otherwise parameters will be taken from the stored data members fParams ; Definition at line 2668 of file TFormula_v5.cxx. ◆ EvalPar(). virtual Double_t ROOT::v5::TFormula::EvalPar ; (; const Double_t * ; x, . const Double_t * ; params = nullptr . ). inlinevirtual . Definition at line 235 of file TFormula.h. ◆ EvalParFast(). Double_t TFormula::EvalParFast ; (; const Double_t * ; x, . const Double_t * ; uparams . ). protected . Evaluate this formula. ; The current value of variables x,y,z,t is passed through the pointer x. The parameters used will be the ones in the array params if params is given otherwise parameters will be taken from the stored data members fParams. Definition at line 4189 of file TFormula_v5.cxx. ◆ EvalParOld(). Double_t TFormula::EvalParOld ; (; const Double_t * ; x, . const Double_t * ; uparams = nullptr . ). virtual . Evaluate this formula. ; The current value of variables x,y,z,t is passed through the pointer x. The parameters used will be the ones in the array params if params is given otherwise parameters will be taken from the stored data members fParams. Definition at line 2687 of file TFormula_v5.cxx. ◆ EvalPrimitive(). Double_t TFormula::EvalPrimitive ; (; const Double_t * ; x, . const Double_t * ; params . ). protected . Evaluate primitive formula. ; Definition at line 4114 of file TFormula_v5.cxx. ◆ EvalPrimitive0(). Double_t TFormula::EvalPrimitive0 ; (; const Double_t * ; x, . const Double_t * ; params . ). protected . Evaluate prim",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1v5_1_1TFormula.html:37499,variab,variables,37499,doc/master/classROOT_1_1v5_1_1TFormula.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1v5_1_1TFormula.html,1,['variab'],['variables']
Modifiability,"on() const; static Long_tTObject::GetDtorOnly(); TFile*TKey::GetFile() const; virtual const char*TKey::GetIconName() const; Short_tTKey::GetKeep() const; Long64_tGetKeyId() const; Int_tTKey::GetKeylen() const; TDirectory*TKey::GetMotherDir() const; virtual const char*TNamed::GetName() const; Int_tTKey::GetNbytes() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tTKey::GetObjlen() const; virtual Option_t*TObject::GetOption() const; virtual Long64_tGetSeekKey() const; virtual Long64_tGetSeekPdir() const; virtual const char*TKey::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTKey::GetVersion() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTKey::Hash() const; virtual voidTKey::IncrementPidOffset(UShort_t offset); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTKey::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsSubdir() const; Bool_tTObject::IsZombie() const; virtual voidKeep(); XMLNodePointer_tKeyNode() const; virtual voidTKey::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TKeyXML.html:3317,Inherit,InheritsFrom,3317,root/html532/TKeyXML.html,https://root.cern,https://root.cern/root/html532/TKeyXML.html,2,['Inherit'],['InheritsFrom']
Modifiability,"on() const; static Long_tTObject::GetDtorOnly(); TFile*TKey::GetFile() const; virtual const char*TKey::GetIconName() const; Short_tTKey::GetKeep() const; Long64_tGetKeyId() const; Int_tTKey::GetKeylen() const; TDirectory*TKey::GetMotherDir() const; virtual const char*TNamed::GetName() const; Int_tTKey::GetNbytes() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tTKey::GetObjlen() const; virtual Option_t*TObject::GetOption() const; virtual Long64_tGetSeekKey() const; virtual Long64_tGetSeekPdir() const; virtual const char*TKey::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTKey::GetVersion() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTKey::Hash() const; virtual voidTKey::IncrementPidOffset(UShort_t offset); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTKey::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsSubdir() const; Bool_tTObject::IsZombie() const; virtual voidKeep(); XMLNodePointer_tKeyNode() const; virtual voidTKey::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](siz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TKeyXML.html:3015,Inherit,InheritsFrom,3015,root/html602/TKeyXML.html,https://root.cern,https://root.cern/root/html602/TKeyXML.html,2,['Inherit'],['InheritsFrom']
Modifiability,"on() const; static Long_tTObject::GetDtorOnly(); virtual Int_tGetFile(const char*, const char*, const char* = 0); virtual const char*TObject::GetIconName() const; static TList*GetListOfManagers(); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TProofDesc*GetProofDesc(Int_t id); virtual TProofDesc*GetProofDesc(TProof* p); virtual Int_tGetRemoteProtocol() const; virtual TProofLog*GetSessionLogs(Int_t = 0, const char* = 0, const char* = ""-v \""| SvcMsg\"""", Bool_t = kFALSE); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual const char*GetUrl(); virtual voidGrep(const char*, const char* = 0, const char* = 0); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsLite() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsProofd() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; virtual voidLs(const char* = ""~/"", const char* = 0, const char* = 0); virtual Bool_tMatchUrl(const char* url); voidTObject::MayNotUse(const char* method) const; virtual Int_tMd5sum(const char*, TString&, const char* = 0); virtual voidMore(const char*, const char* = 0, const char* = 0); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::opera",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofMgr.html:3616,Inherit,InheritsFrom,3616,root/html532/TProofMgr.html,https://root.cern,https://root.cern/root/html532/TProofMgr.html,1,['Inherit'],['InheritsFrom']
Modifiability,"on() const; static Long_tTObject::GetDtorOnly(); virtual TGeoElement*GetElement(Int_t i = 0) const; virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; Int_tGetIndex(); virtual Double_tGetIntLen() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; char*GetPointerName() const; Double_tGetPressure() const; virtual Double_tGetRadLen() const; TGeoMaterial::EGeoMaterialStateGetState() const; Double_tGetTemperature() const; virtual const char*TNamed::GetTitle() const; Char_tGetTransparency() const; virtual UInt_tTObject::GetUniqueID() const; virtual Double_tGetZ() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsEq(const TGeoMaterial* other) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsMixture() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tIsUsed() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttFill::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoMaterial.html:3567,Inherit,InheritsFrom,3567,root/html532/TGeoMaterial.html,https://root.cern,https://root.cern/root/html532/TGeoMaterial.html,1,['Inherit'],['InheritsFrom']
Modifiability,"on() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TList*TQObject::GetListOfClassSignals() const; TList*TQObject::GetListOfConnections() const; TList*GetListOfLogs() const; TList*TQObject::GetListOfSignals() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tGrep(const char* txt, Int_t from = 0); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTNamed::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; Bool_tLogToBox(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator dele",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofLog.html:4997,Inherit,InheritsFrom,4997,root/html602/TProofLog.html,https://root.cern,https://root.cern/root/html602/TProofLog.html,2,['Inherit'],['InheritsFrom']
Modifiability,"on() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TList*TQObject::GetListOfClassSignals() const; TList*TQObject::GetListOfConnections() const; TList*GetListOfLogs() const; TList*TQObject::GetListOfSignals() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tGrep(const char* txt, Int_t from = 0); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTNamed::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; static voidTQObject::LoadRQ_OBJECT(); Bool_tLogToBox(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofLog.html:5058,Inherit,InheritsFrom,5058,root/html532/TProofLog.html,https://root.cern,https://root.cern/root/html532/TProofLog.html,2,['Inherit'],['InheritsFrom']
Modifiability,"on() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TList*TDataSet::GetList() const; virtual Int_tTDataSet::GetListSize() const; static TDataSet*TDataSet::GetMainSet(); TObject*TDataSet::GetMother() const; virtual const char*TNamed::GetName() const; TObjArray*TDataSet::GetObjArray() const; virtual TObject*TDataSet::GetObject() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual TDataSet*TDataSet::GetParent() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Long_tHasData() const; virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual TDataSet*TDataSet::Instance() const; static TDataSet*TDataSet::instance(); voidTDataSet::InvertAllMarks()MENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsFolder() const; virtual Bool_tTDataSet::IsMarked() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTDataSet::IsThisDir(const char* dirname, int len = -1, int ignorecase = 0) const; Bool_tTObject::IsZombie() const; virtual TDataSet*TDataSet::Last() const; virtual voidTDataSet::ls(Option_t* option = """") const; virtual voidTDataSet::ls(Int_t depth) const; voidTDataSet::Mark()MENU ; voidTDataSet::Mark(UInt_t flag, TDataSet::EBitOpt reset = kSet); voidTDataSet::MarkAll()MENU ; voidTObject::MayNotUse(const char* method) const; virtual TDataSet*TDataSet::Next() const; virtual Bool_tTObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFileSet.html:3858,Inherit,InheritsFrom,3858,root/html532/TFileSet.html,https://root.cern,https://root.cern/root/html532/TFileSet.html,4,['Inherit'],['InheritsFrom']
Modifiability,"on() const; virtual const Double_t*TGeoBBox::GetOrigin() const; Double_tTGeoTrap::GetPhi() const; static voidTGeoArb8::GetPlaneNormal(Double_t* p1, Double_t* p2, Double_t* p3, Double_t* norm); const char*TGeoShape::GetPointerName() const; virtual Bool_tTGeoArb8::GetPointsOnFacet(Int_t, Int_t, Double_t*) const; virtual Bool_tTGeoBBox::GetPointsOnSegments(Int_t npoints, Double_t* array) const; Double_tTGeoTrap::GetTheta() const; virtual const char*TNamed::GetTitle() const; Double_tTGeoTrap::GetTl1() const; Double_tTGeoTrap::GetTl2() const; static TGeoMatrix*TGeoShape::GetTransform(); Double_tTGeoArb8::GetTwist(Int_t iseg) const; Double_tGetTwistAngle() const; virtual UInt_tTObject::GetUniqueID() const; Double_t*TGeoArb8::GetVertices(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; static Bool_tTGeoArb8::InsidePolygon(Double_t x, Double_t y, Double_t* pts); virtual voidTObject::Inspect() constMENU ; virtual voidTGeoArb8::InspectShape() const; voidTObject::InvertBit(UInt_t f); voidTGeoShape::InvertShapeBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGeoShape::IsAssembly() const; static Bool_tTGeoShape::IsCloseToPhi(Double_t epsil, Double_t* point, Double_t c1, Double_t s1, Double_t c2, Double_t s2); virtual Bool_tTGeoShape::IsComposite() const; static Bool_tTGeoShape::IsCrossingSemiplane(Double_t* point, Double_t* dir, Double_t cphi, Double_t sphi, Double_t& snext, Double_t& rxy); virtual Bool_tTGeoArb8::IsCylType() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tTGeoShape::IsInPhiRange(Double_t* point, Double_t phi1, Double_t phi2); virtual Bool_tTGeoBBox::IsNullBox() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTGeoShape::IsReflected() const; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoGtra.html:6956,Inherit,InheritsFrom,6956,root/html532/TGeoGtra.html,https://root.cern,https://root.cern/root/html532/TGeoGtra.html,1,['Inherit'],['InheritsFrom']
Modifiability,"on() const; virtual const Double_t*TGeoBBox::GetOrigin() const; Double_tTGeoTrap::GetPhi() const; static voidTGeoArb8::GetPlaneNormal(Double_t* p1, Double_t* p2, Double_t* p3, Double_t* norm); const char*TGeoShape::GetPointerName() const; virtual Bool_tTGeoArb8::GetPointsOnFacet(Int_t, Int_t, Double_t*) const; virtual Bool_tTGeoBBox::GetPointsOnSegments(Int_t npoints, Double_t* array) const; Double_tTGeoTrap::GetTheta() const; virtual const char*TNamed::GetTitle() const; Double_tTGeoTrap::GetTl1() const; Double_tTGeoTrap::GetTl2() const; static TGeoMatrix*TGeoShape::GetTransform(); Double_tTGeoArb8::GetTwist(Int_t iseg) const; Double_tGetTwistAngle() const; virtual UInt_tTObject::GetUniqueID() const; Double_t*TGeoArb8::GetVertices(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; static Bool_tTGeoArb8::InsidePolygon(Double_t x, Double_t y, Double_t* pts); virtual voidTObject::Inspect() constMENU ; virtual voidTGeoArb8::InspectShape() const; voidTObject::InvertBit(UInt_t f); voidTGeoShape::InvertShapeBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGeoShape::IsAssembly() const; static Bool_tTGeoShape::IsCloseToPhi(Double_t epsil, const Double_t* point, Double_t c1, Double_t s1, Double_t c2, Double_t s2); virtual Bool_tTGeoShape::IsComposite() const; static Bool_tTGeoShape::IsCrossingSemiplane(const Double_t* point, const Double_t* dir, Double_t cphi, Double_t sphi, Double_t& snext, Double_t& rxy); virtual Bool_tTGeoArb8::IsCylType() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tTGeoShape::IsInPhiRange(const Double_t* point, Double_t phi1, Double_t phi2); virtual Bool_tTGeoBBox::IsNullBox() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTGeoShap",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoGtra.html:7601,Inherit,InheritsFrom,7601,root/html534/TGeoGtra.html,https://root.cern,https://root.cern/root/html534/TGeoGtra.html,3,['Inherit'],['InheritsFrom']
Modifiability,"on(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; virtual Int_tGetLast() const; virtual TList*GetListForObject(const char* name) const; virtual TList*GetListForObject(const TObject* obj) const; virtual const char*TCollection::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; virtual TObject**GetObjectRef(const TObject* obj) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tGetSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTCollection::GrowBy(Int_t delta) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTCollection::Hash() const; virtual Int_tIndexOf(const TObject* obj) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTCollection::IsArgNull(const char* where, const TObject* obj) const; Bool_tTList::IsAscending(); virtual Bool_tTCollection::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCollection::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTCollection::IsOwner() const; virtual Bool_tTCollection::IsSortable() const; virtual Bool_tTSeqCollection::IsSorted() const; Bool_tTObject::IsZombie() const; virtual TObject*Last() const; Int_tTSeqCollection::LastIndex() const; virtual TObjLink*LastLink() const; voidLoad(); virtual voidTCollection::ls(Option_t* option = """") const; virtual TIterator*MakeIterator(Bool_t dir = kIterForward) const; virtual TIterator*TCollection::MakeReverseIterator() const; voidTObject::MayNotUse(const char* method) const; L",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TListOfFunctions.html:4126,Inherit,InheritsFrom,4126,root/html602/TListOfFunctions.html,https://root.cern,https://root.cern/root/html602/TListOfFunctions.html,2,['Inherit'],['InheritsFrom']
Modifiability,"on(=1=true); UInt_tfMaxDepthmax depth; Double_tfMinLinCorrForFisherthe minimum linear correlation between two variables demanded for use in fisher criterium in node splitting; Double_tfMinSepGainmin number of separation gain to perform node splitting; Double_tfMinSizemin number of events in node; TRandom3*fMyTrandomrandom number generator for randomised trees; Int_tfNCutsnumber of grid point in variable cut scans; UInt_tfNNodesMaxmax # of nodes; Double_tfNodePurityLimitpurity limit to decide whether a node is signal; UInt_tfNvarsnumber of variables used to separate S and B; Bool_tfPairNegWeightsInNoderandomly pair miscl. ev. with neg. and pos. weights in node and don't boost them; TMVA::DecisionTree::EPruneMethodfPruneMethodmethod used for prunig ; Double_tfPruneStrengtha parameter to set the ""amount"" of pruning..needs to be adjusted ; Bool_tfRandomisedTreechoose at each node splitting a random set of variables ; TMVA::RegressionVariance*fRegTypethe separation crition used in Regression; TMVA::SeparationBase*fSepTypethe separation crition; UInt_tfSigClassclass which is treated as signal when building the tree; Int_tfTreeIDjust an ID number given to the tree.. makes debugging easier as tree knows who he is.; Bool_tfUseExclusiveVarsindividual variables already used in fisher criterium are not anymore analysed individually for node splitting; Bool_tfUseFisherCutsuse multivariate splits using the Fisher criterium; Int_tfUseNvarsthe number of variables used in randomised trees;; Bool_tfUsePoissonNvarsuse ""fUseNvars"" not as fixed number but as mean of a possion distr. in each split; Bool_tfUseSearchTreecut scan done with binary trees or simple event loop.; vector<Double_t>fVariableImportancethe relative importance of the different variables ; static const Int_tfgDebugLeveldebug level determining some printout/control plots etc.; static const Int_tfgRandomSeedset nonzero for debugging and zero for random seeds. Class Charts. Inheritance; Inherited Members; Includes; Librari",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__DecisionTree.html:7334,variab,variables,7334,root/html530/TMVA__DecisionTree.html,https://root.cern,https://root.cern/root/html530/TMVA__DecisionTree.html,3,['variab'],['variables']
Modifiability,"on(Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Double_tfxx; Double_tfxy; Double_tfxz; Double_tfyx; Double_tfyy; Double_tfyz; Double_tfzx; Double_tfzy; Double_tfzz. Class Charts. Inheritance Chart:. TObject. ←; TRotation. Function documentation; TRotation(); {}. TRotation(const TRotation& ); {}. TRotation(Double_t , Double_t , Double_t , Double_t , Double_t , Double_t , Double_t , Double_t , Double_t ); {}. Double_t operator()(int , int ) const; dereferencing operator const. TRotation operator*(const TRotation& ) const; multiplication operator. TRotation(const TQuaternion& ); Constructor for a rotation based on a Quaternion; if magnitude of quaternion is null, creates identity rotation; if quaternion is non-unit, creates rotation corresponding to the normalized (unit) quaternion. TRotation & Rotate(Double_t , const TVector3& ); rotate along an axis. TRotation & RotateX(Double_t ); rotate around x. TRotation & RotateY(Double_t ); rotate around y. TRotation & RotateZ(Double_t ); rotate around z. TRotation & RotateAxes(const TVector3& newX, const TVector3& newY, const TVector3& newZ); rotate axes. Double_t PhiX() const; return Phi. Double_t PhiY() const; return Phi. Double",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRotation.html:13066,Inherit,Inheritance,13066,root/html602/TRotation.html,https://root.cern,https://root.cern/root/html602/TRotation.html,2,['Inherit'],['Inheritance']
Modifiability,"on(bool useRandomSplitting = false); {; // This loads the library; TMVA::Tools::Instance();; ; // --------------------------------------------------------------------------; ; // Load the data into TTrees. If you load data from file you can use a; // variant of; // ```; // TString filename = ""/path/to/file"";; // TFile * input = TFile::Open( filename );; // TTree * signalTree = (TTree*)input->Get(""TreeName"");; // ```; TTree *sigTree = genTree(1000, 1.0, 1.0, 100);; TTree *bkgTree = genTree(1000, -1.0, 1.0, 101);; ; // Create a ROOT output file where TMVA will store ntuples, histograms, etc.; TString outfileName(""TMVACV.root"");; TFile *outputFile = TFile::Open(outfileName, ""RECREATE"");; ; // DataLoader definitions; We declare variables in the tree so that TMVA can; // find them. For more information see TMVAClassification tutorial.; TMVA::DataLoader *dataloader = new TMVA::DataLoader(""datasetcv"");; ; // Data variables; dataloader->AddVariable(""x"", 'F');; dataloader->AddVariable(""y"", 'F');; ; // Spectator used for split; dataloader->AddSpectator(""eventID"", 'I');; ; // NOTE: Currently TMVA treats all input variables, spectators etc as; // floats. Thus, if the absolute value of the input is too large; // there can be precision loss. This can especially be a problem for; // cross validation with large event numbers.; // A workaround is to define your splitting variable as:; // `dataloader->AddSpectator(""eventID := eventID % 4096"", 'I');`; // where 4096 should be a number much larger than the number of folds; // you intend to run with.; ; // Attaches the trees so they can be read from; dataloader->AddSignalTree(sigTree, 1.0);; dataloader->AddBackgroundTree(bkgTree, 1.0);; ; // The CV mechanism of TMVA splits up the training set into several folds.; // The test set is currently left unused. The `nTest_ClassName=1` assigns; // one event to the test set for each class and puts the rest in the; // training set. A value of 0 is a special value and would split the; // datasets 50",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVACrossValidation_8C.html:20691,variab,variables,20691,doc/master/TMVACrossValidation_8C.html,https://root.cern,https://root.cern/doc/master/TMVACrossValidation_8C.html,2,['variab'],['variables']
Modifiability,"on(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::MethodBase::SetMethodBaseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTMVA::MethodBase::TestMulticlass(); virtual voidTMVA::MethodBase::TestRegression(Double_t& bias, Double_t& biasT, Double_t& dev, Double_t& devT, Double_t& rms, Double_t& rmsT, Double_t& mInf, Double_t& mInfT, Double_t& corr, TMVA::Types::ETreeType type); virtual voidTrain(); voidTMVA::MethodBase::TrainMethod(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const; voidTMVA::MethodBase::WriteStateToFile() const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodBoost.html:14031,Config,Configurable,14031,root/html602/TMVA__MethodBoost.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodBoost.html,2,['Config'],['Configurable']
Modifiability,"on) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TClonesArray.h>. Inheritance diagram for TClonesArray:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EStatusBits. enum TClonesArray::EStatusBits. Saved copies of pointers to objects. . EnumeratorkBypassStreamer ; kForgetBits . Definition at line 36 of file TClonesArray.h. Constructor & Destructor Documentation. ◆ TClonesArray() [1/4]. TClonesArray::TClonesArray ; (; ). Default Constructor. ; Definition at line 188 of file TClonesArray.cxx. ◆ TClonesArray() [2/4]. TClonesArray::TClonesArray ; (; const char * ; classname, . Int_t ; s = 1000, . Bool_t ; call_dtor = kFALSE . ). Create an array of clone objects of classname. ; The class must inherit from TObject. The second argument s indicates an approximate number of objects that will be entered in the array. If more than s objects are entered, the array will be automatically expanded.; The third argument is not used anymore and only there for backward compatibility reasons. ; Definition at line 204 of file TClonesArray.cxx. ◆ TClonesArray() [3/4]. TClonesArray::TClonesArray ; (; const TClass * ; cl, . Int_t ; s = 1000, . Bool_t ; call_dtor = kFALSE . ). Create an array of clone objects of class cl. ; The class must inherit from TObject. The second argument, s, indicates an approximate number of objects that will be entered in the array. If more than s objects are entered, the array will be automatically expanded.; The third argument is not used anymore and only there for backward compatibility reasons. ; Definition at line 220 of file TClonesArray.cxx. ◆ TClonesArray() [4/4]. TClonesArray::TClonesArray ; (; const TClonesArray & ; tc). Copy ctor. ; Definition at line 229 o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClonesArray.html:27508,inherit,inherit,27508,doc/master/classTClonesArray.html,https://root.cern,https://root.cern/doc/master/classTClonesArray.html,1,['inherit'],['inherit']
Modifiability,"on). inline . flag to check if minimizer needs to perform accurate error analysis (e.g. run Hesse for Minuit) ; Definition at line 350 of file Minimizer.h. ◆ SetVariable(). virtual bool ROOT::Math::Minimizer::SetVariable ; (; unsigned int ; ivar, . const std::string & ; name, . double ; val, . double ; step . ). pure virtual . set a new free variable ; Implemented in TFumiliMinimizer, ROOT::Math::GeneticMinimizer, ROOT::Math::BasicMinimizer, TMinuitMinimizer, ROOT::Minuit2::Minuit2Minimizer, and TLinearMinimizer. ◆ SetVariableInitialRange(). virtual bool ROOT::Math::Minimizer::SetVariableInitialRange ; (; unsigned int ; , . double ; , . double ;  . ). inlinevirtual . set the initial range of an existing variable ; Definition at line 208 of file Minimizer.h. ◆ SetVariableLimits(). virtual bool ROOT::Math::Minimizer::SetVariableLimits ; (; unsigned int ; ivar, . double ; lower, . double ; upper . ). inlinevirtual . set the limits of an already existing variable ; Reimplemented in ROOT::Math::BasicMinimizer, TMinuitMinimizer, and ROOT::Minuit2::Minuit2Minimizer.; Definition at line 199 of file Minimizer.h. ◆ SetVariableLowerLimit(). bool ROOT::Math::Minimizer::SetVariableLowerLimit ; (; unsigned int ; ivar, . double ; lower . ). virtual . set the lower-limit of an already existing variable ; Reimplemented in ROOT::Math::BasicMinimizer, ROOT::Minuit2::Minuit2Minimizer, and TMinuitMinimizer.; Definition at line 70 of file Minimizer.cxx. ◆ SetVariables(). template<class VariableIterator > . int ROOT::Math::Minimizer::SetVariables ; (; const VariableIterator & ; begin, . const VariableIterator & ; end . ). inline . add variables . Return number of variables successfully added ; Definition at line 146 of file Minimizer.h. ◆ SetVariableStepSize(). bool ROOT::Math::Minimizer::SetVariableStepSize ; (; unsigned int ; ivar, . double ; value . ). virtual . set the step size of an already existing variable ; Reimplemented in ROOT::Math::BasicMinimizer, ROOT::Minuit2::Minuit2Minimiz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer.html:32948,variab,variable,32948,doc/master/classROOT_1_1Math_1_1Minimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer.html,1,['variab'],['variable']
Modifiability,"on); 2248{; 2249 ; 2250 uint64_t x = 0;; 2251 uint64_t y = 0;; 2252 ; 2253 // getting number of variables and variable names from loader; 2254 const int nbits = loader->GetDataSetInfo().GetNVariables();; 2255 std::vector<TString> varNames = loader->GetDataSetInfo().GetListOfVariables();; 2256 ; 2257 if (nbits > 60) {; 2258 Log() << kERROR << ""Number of combinations is too large , is 2^"" << nbits << Endl;; 2259 return nullptr;; 2260 }; 2261 if (nbits > 20) {; 2262 Log() << kWARNING << ""Number of combinations is very large , is 2^"" << nbits << Endl;; 2263 }; 2264 uint64_t range = static_cast<uint64_t>(pow(2, nbits));; 2265 ; 2266 ; 2267 // vector to save importances; 2268 std::vector<Double_t> importances(nbits);; 2269 // vector to save ROC; 2270 std::vector<Double_t> ROC(range);; 2271 ROC[0] = 0.5;; 2272 for (int i = 0; i < nbits; i++); 2273 importances[i] = 0;; 2274 ; 2275 Double_t SROC, SSROC; // computed ROC value; 2276 for (x = 1; x < range; x++) {; 2277 ; 2278 std::bitset<VIBITS> xbitset(x);; 2279 if (x == 0); 2280 continue; // data loader need at least one variable; 2281 ; 2282 // creating loader for seed; 2283 TMVA::DataLoader *seedloader = new TMVA::DataLoader(xbitset.to_string());; 2284 ; 2285 // adding variables from seed; 2286 for (int index = 0; index < nbits; index++) {; 2287 if (xbitset[index]); 2288 seedloader->AddVariable(varNames[index], 'F');; 2289 }; 2290 ; 2291 DataLoaderCopy(seedloader, loader);; 2292 seedloader->PrepareTrainingAndTestTree(loader->GetDataSetInfo().GetCut(""Signal""),; 2293 loader->GetDataSetInfo().GetCut(""Background""),; 2294 loader->GetDataSetInfo().GetSplitOptions());; 2295 ; 2296 // Booking Seed; 2297 BookMethod(seedloader, theMethod, methodTitle, theOption);; 2298 ; 2299 // Train/Test/Evaluation; 2300 TrainAllMethods();; 2301 TestAllMethods();; 2302 EvaluateAllMethods();; 2303 ; 2304 // getting ROC; 2305 ROC[x] = GetROCIntegral(xbitset.to_string(), methodTitle);; 2306 ; 2307 // cleaning information to process sub-seeds; 2308 TMV",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html:96026,variab,variable,96026,doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,1,['variab'],['variable']
Modifiability,"on); 354{; 355 std::string where = (qtversion >= 0x60000) ? ""qt6"" : ""qt5"";; 356 if (qparent) {; 357 where.append("":"");; 358 where.append(std::to_string((uintptr_t) qparent));; 359 }; 360 if (!urlopt.empty()) {; 361 where.append(""?"");; 362 where.append(urlopt);; 363 }; 364 return where;; 365}; RConfig.hxx; RLogger.hxx; RWebDisplayArgs.hxx; RWebWindow.hxx; widthOption_t Option_t widthDefinition TGWin32VirtualXProxy.cxx:56; heightOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t heightDefinition TGWin32VirtualXProxy.cxx:164; TROOT.h; gROOT#define gROOTDefinition TROOT.h:406; ROOT::Experimental::RLogChannelA log configuration for a channel, e.g.Definition RLogger.hxx:101; ROOT::RWebDisplayArgsHolds different arguments for starting browser with RWebDisplayHandle::Display() method.Definition RWebDisplayArgs.hxx:33; ROOT::RWebDisplayArgs::GetBrowserNamestd::string GetBrowserName() constReturns configured browser name.Definition RWebDisplayArgs.cxx:248; ROOT::RWebDisplayArgs::~RWebDisplayArgsvirtual ~RWebDisplayArgs()Destructor.; ROOT::RWebDisplayArgs::GetBrowserKindEBrowserKind GetBrowserKind() constreturns configured browser kind, see EBrowserKind for supported valuesDefinition RWebDisplayArgs.hxx:98; ROOT::RWebDisplayArgs::SetUrlOptRWebDisplayArgs & SetUrlOpt(const std::string &opt)set window url optionsDefinition RWebDisplayArgs.hxx:148; ROOT::RWebDisplayArgs::SetPosAsStrbool SetPosAsStr(const std::string &str)Set position of web browser window as string like ""100,100"".Definition RWebDisplayArgs.cxx:120; ROOT::RWebDisplayArgs::fExecstd::string fExec! string to run browser, used with kCustom typeDefinition RWebDisplayArgs.hxx:71; ROOT::RWebDisplayArgs::SetSizeRWebDisplayArgs & SetSize(int w, int h)set preferable web window width and heightDefinition RWebDisplayArgs.hxx:173; ROOT::RWebDisplayArgs::fUrlOptstd::string fUrlOpt! extra URL options,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RWebDisplayArgs_8cxx_source.html:13089,config,configured,13089,doc/v632/RWebDisplayArgs_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/RWebDisplayArgs_8cxx_source.html,1,['config'],['configured']
Modifiability,"on); 359{; 360 std::string where = (qtversion >= 0x60000) ? ""qt6"" : ""qt5"";; 361 if (qparent) {; 362 where.append("":"");; 363 where.append(std::to_string((uintptr_t) qparent));; 364 }; 365 if (!urlopt.empty()) {; 366 where.append(""?"");; 367 where.append(urlopt);; 368 }; 369 return where;; 370}; RConfig.hxx; RLogger.hxx; RWebDisplayArgs.hxx; RWebWindow.hxx; widthOption_t Option_t widthDefinition TGWin32VirtualXProxy.cxx:56; heightOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t heightDefinition TGWin32VirtualXProxy.cxx:164; TROOT.h; gROOT#define gROOTDefinition TROOT.h:406; ROOT::Experimental::RLogChannelA log configuration for a channel, e.g.Definition RLogger.hxx:101; ROOT::RWebDisplayArgsHolds different arguments for starting browser with RWebDisplayHandle::Display() method.Definition RWebDisplayArgs.hxx:33; ROOT::RWebDisplayArgs::GetBrowserNamestd::string GetBrowserName() constReturns configured browser name.Definition RWebDisplayArgs.cxx:252; ROOT::RWebDisplayArgs::~RWebDisplayArgsvirtual ~RWebDisplayArgs()Destructor.; ROOT::RWebDisplayArgs::GetBrowserKindEBrowserKind GetBrowserKind() constreturns configured browser kind, see EBrowserKind for supported valuesDefinition RWebDisplayArgs.hxx:99; ROOT::RWebDisplayArgs::SetUrlOptRWebDisplayArgs & SetUrlOpt(const std::string &opt)set window url optionsDefinition RWebDisplayArgs.hxx:149; ROOT::RWebDisplayArgs::SetPosAsStrbool SetPosAsStr(const std::string &str)Set position of web browser window as string like ""100,100"".Definition RWebDisplayArgs.cxx:120; ROOT::RWebDisplayArgs::fExecstd::string fExec! string to run browser, used with kCustom typeDefinition RWebDisplayArgs.hxx:72; ROOT::RWebDisplayArgs::SetSizeRWebDisplayArgs & SetSize(int w, int h)set preferable web window width and heightDefinition RWebDisplayArgs.hxx:174; ROOT::RWebDisplayArgs::fUrlOptstd::string fUrlOpt! extra URL options,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RWebDisplayArgs_8cxx_source.html:13220,config,configured,13220,doc/master/RWebDisplayArgs_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RWebDisplayArgs_8cxx_source.html,1,['config'],['configured']
Modifiability,"on*Copy(); TStreamerInfoActions::TConfiguration&operator=(const TStreamerInfoActions::TConfiguration&); virtual voidPrint() const; virtual voidPrintDebug(TBuffer& buffer, void* object) const; TStreamerInfoActions::TConfigurationTConfiguration(const TStreamerInfoActions::TConfiguration&); TStreamerInfoActions::TConfigurationTConfiguration(TVirtualStreamerInfo* info, UInt_t id, TStreamerInfoActions::TConfiguration::TCompInfo_t* compinfo, Int_t offset); TStreamerInfoActions::TConfigurationTConfiguration(TVirtualStreamerInfo* info, UInt_t id, TStreamerInfoActions::TConfiguration::TCompInfo_t* compinfo, Int_t offset, UInt_t length). Data Members; public:. TStreamerInfoActions::TConfiguration::TCompInfo_t*fCompInfoAccess to compiled information (for legacy code); UInt_tfElemIdIdentifier of the TStreamerElement; TVirtualStreamerInfo*fInfoTStreamerInfo form which the action is derived; UInt_tfLengthNumber of element in a fixed length array.; Int_tfOffsetOffset within the object. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TConfiguration(TVirtualStreamerInfo* info, UInt_t id, TStreamerInfoActions::TConfiguration::TCompInfo_t* compinfo, Int_t offset); {}. TConfiguration(TVirtualStreamerInfo* info, UInt_t id, TStreamerInfoActions::TConfiguration::TCompInfo_t* compinfo, Int_t offset, UInt_t length); {}. virtual ~TConfiguration(); {}. void AddToOffset(Int_t delta). TConfiguration * Copy(); { return new TConfiguration(*this); }. void Print() const. void PrintDebug(TBuffer& buffer, void* object) const. TConfiguredAction & operator=(const TStreamerInfoActions::TConfiguration& ); WARNING: Technically this is a move assignment!. » Author: Philippe Canal 05/2010 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/io:$Id$ » Last generated: 2015-09-08 17:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TStreamerInfoActions__TConfiguration.html:1468,Inherit,Inheritance,1468,root/html534/TStreamerInfoActions__TConfiguration.html,https://root.cern,https://root.cern/root/html534/TStreamerInfoActions__TConfiguration.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"on*CreateTransformation(vector<double>& startValues, const ROOT::Math::IMultiGradFunction* func = 0); voidSetFinalValues(const double* x); voidSetMinValue(double val). private:. ROOT::Math::BasicMinimizerBasicMinimizer(const ROOT::Math::BasicMinimizer&); ROOT::Math::BasicMinimizer&operator=(const ROOT::Math::BasicMinimizer& rhs). Data Members; protected:. ROOT::Math::MinimizerOptionsROOT::Math::Minimizer::fOptionsminimizer options; intROOT::Math::Minimizer::fStatusstatus of minimizer; boolROOT::Math::Minimizer::fValidErrorflag to control if errors have been validated (Hesse has been run in case of Minuit). private:. map<unsigned int,pair<double,double> >fBoundsmap specifying the bound using as key the parameter index; unsigned intfDim; doublefMinVal; vector<string>fNames; const ROOT::Math::IMultiGenFunction*fObjFunc; vector<double>fSteps; vector<double>fValues; vector<ROOT::Math::EMinimVariableType>fVarTypesvector specifyng the type of variables. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BasicMinimizer(). Default constructor. virtual ~BasicMinimizer(). Destructor. BasicMinimizer(const ROOT::Math::BasicMinimizer& ); usually copying is non trivial, so we make this unaccessible. Copy constructor. {}. void SetFunction(const ROOT::Math::IMultiGenFunction& func); set the function to minimize. void SetFunction(const ROOT::Math::IMultiGradFunction& func); set gradient the function to minimize. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set free variable. bool SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); set lower limit variable (override if minimizer supports them ). bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set upper limit variable (override if minimizer supports them ). bool SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double ,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__BasicMinimizer.html:6302,Inherit,Inheritance,6302,root/html602/ROOT__Math__BasicMinimizer.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__BasicMinimizer.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"on*fResetButton; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TGButtonGroup*fTypeButtons; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLClipSetSubEditor(const TGWindow* p); Constructor. void SetModel(TGLClipSet* m); Set model object. void Changed(); Emit Changed signal. void ClipValueChanged(); One of number entries was changed. void ClipTypeChanged(Int_t ); Clip type radio button changed - update viewer. void UpdateViewerClip(); Change clipping volume. void ResetViewerClip(); Reset transformation of the current clip. TGLClipSetSubEditor(const TGLClipSetSubEditor& ). TGLClipSetSubEditor& operator=(const TGLClipSetSubEditor& ). virtual ~TGLClipSetSubEditor(); {}. » Author: Matevz Tadel, Jun 2007 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/gl:$Id$ » Last generated: 2015-03-13 19:25; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGLClipSetSubEditor.html:19089,Inherit,Inheritance,19089,root/html534/TGLClipSetSubEditor.html,https://root.cern,https://root.cern/root/html534/TGLClipSetSubEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"on*fpNamespacesContains the names of namespaces registered in CINT.; TSeqCollection*fpPragmas; TSeqCollection*fpSysIncFiles; TSeqCollection*fpUsers. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TTabCom(); Default constructor. ~TTabCom(); Destructor. void ClearClasses(); Clear classes and namespace collections. void ClearCppDirectives(); Forget all Cpp directives seen so far. void ClearEnvVars(); Forget all environment variables seen so far. void ClearFiles(); Close all files. void ClearGlobalFunctions(); Forget all global functions seen so far. void ClearGlobals(); Forget all global variables seen so far. void ClearPragmas(); Forget all pragmas seen so far. void ClearSysIncFiles(); Close system files. void ClearUsers(); Forget all user seen so far. void ClearAll(); clears all lists; except for user names and system include files. void RehashClasses(); Do the class rehash. void RehashCppDirectives(); Cpp rehashing. void RehashEnvVars(); Environemnt variables rehashing. void RehashFiles(); Close files. void RehashGlobalFunctions(); Reload global functions. void RehashGlobals(); Reload globals. void RehashPragmas(); Reload pragmas. void RehashSysIncFiles(); Reload system include files. void RehashUsers(); Reload users. void RehashAll(); clears and then rebuilds all lists; except for user names and system include files. const TSeqCollection * GetListOfClasses(); Return the list of classes. const TSeqCollection * GetListOfCppDirectives(); Return the list of CPP directives. const TSeqCollection * GetListOfFilesInPath(const char* path); ""path"" should be initialized with a colon separated list of; system directories. const TSeqCollection * GetListOfEnvVars(); Uses ""env"" (Unix) or ""set"" (Windows) to get list of environment variables. const TSeqCollection * GetListOfGlobals(); Return the list of globals. const TSeqCollection * GetListOfGlobalFunctions(); Return the list of global functions. const TSeqCollection * GetListOfPragmas()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTabCom.html:7639,variab,variables,7639,root/html528/TTabCom.html,https://root.cern,https://root.cern/root/html528/TTabCom.html,6,['variab'],['variables']
Modifiability,"on, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const&&); const double&operator[](int j) const; ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const&&); ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,2U,2U,ROOT::Math::MatRepSym<double,2> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<double,2U,2U,ROOT::Math::MatRepSym<double,2> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<double,2U,2U,ROOT::Math::MatRepSym<double,2> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:24; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_double_2_2_-p1MatRepSym_double_2_____SMatrixRow_const.html:2233,Inherit,Inheritance,2233,root/html602/ROOT__Math__SMatrix_double_2_2_-p1MatRepSym_double_2_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_double_2_2_-p1MatRepSym_double_2_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"on, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const&&); const double&operator[](int j) const; ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_const&&); ROOT::Math::SMatrix<double,2,2,ROOT::Math::MatRepSym<double,2> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,2U,2U,ROOT::Math::MatRepSym<double,2> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<double,2U,2U,ROOT::Math::MatRepSym<double,2> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<double,2U,2U,ROOT::Math::MatRepSym<double,2> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:36; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__SMatrix_double_2_2_-p1MatRepSym_double_2_____SMatrixRow_const.html:2233,Inherit,Inheritance,2233,root/html604/ROOT__Math__SMatrix_double_2_2_-p1MatRepSym_double_2_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__SMatrix_double_2_2_-p1MatRepSym_double_2_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"on, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const&&); const double&operator[](int j) const; ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const&&); ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,3U,3U,ROOT::Math::MatRepSym<double,3> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<double,3U,3U,ROOT::Math::MatRepSym<double,3> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<double,3U,3U,ROOT::Math::MatRepSym<double,3> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:24; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_double_3_3_-p1MatRepSym_double_3_____SMatrixRow_const.html:2233,Inherit,Inheritance,2233,root/html602/ROOT__Math__SMatrix_double_3_3_-p1MatRepSym_double_3_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_double_3_3_-p1MatRepSym_double_3_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"on, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const&&); const double&operator[](int j) const; ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_const&&); ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,3U,3U,ROOT::Math::MatRepSym<double,3> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<double,3U,3U,ROOT::Math::MatRepSym<double,3> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<double,3U,3U,ROOT::Math::MatRepSym<double,3> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:36; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__SMatrix_double_3_3_-p1MatRepSym_double_3_____SMatrixRow_const.html:2233,Inherit,Inheritance,2233,root/html604/ROOT__Math__SMatrix_double_3_3_-p1MatRepSym_double_3_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__SMatrix_double_3_3_-p1MatRepSym_double_3_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"on, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const&&); const double&operator[](int j) const; ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const&&); ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,4U,4U,ROOT::Math::MatRepSym<double,4> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<double,4U,4U,ROOT::Math::MatRepSym<double,4> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<double,4U,4U,ROOT::Math::MatRepSym<double,4> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:25; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_double_4_4_-p1MatRepSym_double_4_____SMatrixRow_const.html:2233,Inherit,Inheritance,2233,root/html602/ROOT__Math__SMatrix_double_4_4_-p1MatRepSym_double_4_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_double_4_4_-p1MatRepSym_double_4_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"on, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const&&); const double&operator[](int j) const; ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_const&&); ROOT::Math::SMatrix<double,4,4,ROOT::Math::MatRepSym<double,4> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,4U,4U,ROOT::Math::MatRepSym<double,4> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<double,4U,4U,ROOT::Math::MatRepSym<double,4> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<double,4U,4U,ROOT::Math::MatRepSym<double,4> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:36; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__SMatrix_double_4_4_-p1MatRepSym_double_4_____SMatrixRow_const.html:2233,Inherit,Inheritance,2233,root/html604/ROOT__Math__SMatrix_double_4_4_-p1MatRepSym_double_4_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__SMatrix_double_4_4_-p1MatRepSym_double_4_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"on, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const&&); const double&operator[](int j) const; ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const&&); ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,5U,5U,ROOT::Math::MatRepSym<double,5> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<double,5U,5U,ROOT::Math::MatRepSym<double,5> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<double,5U,5U,ROOT::Math::MatRepSym<double,5> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:25; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_double_5_5_-p1MatRepSym_double_5_____SMatrixRow_const.html:2233,Inherit,Inheritance,2233,root/html602/ROOT__Math__SMatrix_double_5_5_-p1MatRepSym_double_5_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_double_5_5_-p1MatRepSym_double_5_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"on, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const&&); const double&operator[](int j) const; ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_const&&); ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,5U,5U,ROOT::Math::MatRepSym<double,5> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<double,5U,5U,ROOT::Math::MatRepSym<double,5> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<double,5U,5U,ROOT::Math::MatRepSym<double,5> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:37; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__SMatrix_double_5_5_-p1MatRepSym_double_5_____SMatrixRow_const.html:2233,Inherit,Inheritance,2233,root/html604/ROOT__Math__SMatrix_double_5_5_-p1MatRepSym_double_5_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__SMatrix_double_5_5_-p1MatRepSym_double_5_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"on, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const&&); const double&operator[](int j) const; ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const&&); ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,6U,6U,ROOT::Math::MatRepSym<double,6> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<double,6U,6U,ROOT::Math::MatRepSym<double,6> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<double,6U,6U,ROOT::Math::MatRepSym<double,6> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:25; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_double_6_6_-p1MatRepSym_double_6_____SMatrixRow_const.html:2233,Inherit,Inheritance,2233,root/html602/ROOT__Math__SMatrix_double_6_6_-p1MatRepSym_double_6_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_double_6_6_-p1MatRepSym_double_6_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"on, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const&&); const double&operator[](int j) const; ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_const&&); ROOT::Math::SMatrix<double,6,6,ROOT::Math::MatRepSym<double,6> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,6U,6U,ROOT::Math::MatRepSym<double,6> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<double,6U,6U,ROOT::Math::MatRepSym<double,6> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<double,6U,6U,ROOT::Math::MatRepSym<double,6> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:37; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__SMatrix_double_6_6_-p1MatRepSym_double_6_____SMatrixRow_const.html:2233,Inherit,Inheritance,2233,root/html604/ROOT__Math__SMatrix_double_6_6_-p1MatRepSym_double_6_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__SMatrix_double_6_6_-p1MatRepSym_double_6_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"on, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const&&); const double&operator[](int j) const; ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const&&); ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,7U,7U,ROOT::Math::MatRepSym<double,7> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<double,7U,7U,ROOT::Math::MatRepSym<double,7> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<double,7U,7U,ROOT::Math::MatRepSym<double,7> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-06-30 14:25; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__SMatrix_double_7_7_-p1MatRepSym_double_7_____SMatrixRow_const.html:2233,Inherit,Inheritance,2233,root/html602/ROOT__Math__SMatrix_double_7_7_-p1MatRepSym_double_7_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__SMatrix_double_7_7_-p1MatRepSym_double_7_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"on, MPI Heidelberg (Germany). @ingroup SMatrixSVector. @authors T. Glebe, L. Moneta and J. Palacios. SMatrix: column-wise storage. Function Members (Methods); public:. ~SMatrixRow_const(); ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const&operator=(const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const&operator=(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const&&); const double&operator[](int j) const; ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const&); ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_constSMatrixRow_const(ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_const&&); ROOT::Math::SMatrix<double,7,7,ROOT::Math::MatRepSym<double,7> >::SMatrixRow_constSMatrixRow_const(const ROOT::Math::SMatrix<double,7U,7U,ROOT::Math::MatRepSym<double,7> >& rhs, unsigned int i). Data Members; private:. const ROOT::Math::SMatrix<double,7U,7U,ROOT::Math::MatRepSym<double,7> >*fMat; unsigned intfRow. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SMatrix<T,D1,D2,R>& operator=(const M& rhs). Assign from another compatible matrix.; Possible Symmetirc to general but NOT vice-versa. SMatrix<T,D1,D2,R>& operator=(const Expr<A,T,D1,D2,R2>& rhs). Assign from a matrix expression. T & operator[](int j); { return (*fMat)(fRow,j); }. SMatrixRow_const(const ROOT::Math::SMatrix<double,7U,7U,ROOT::Math::MatRepSym<double,7> >& rhs, unsigned int i); {}. » Last changed: root/smatrix:$Id$ » Last generated: 2015-09-08 17:37; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__SMatrix_double_7_7_-p1MatRepSym_double_7_____SMatrixRow_const.html:2233,Inherit,Inheritance,2233,root/html604/ROOT__Math__SMatrix_double_7_7_-p1MatRepSym_double_7_____SMatrixRow_const.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__SMatrix_double_7_7_-p1MatRepSym_double_7_____SMatrixRow_const.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"on, ROOT::Math::IParametricGradFunctionOneDim::BaseParamFunc, ROOT::Fit::Fitter::IModel1DFunction. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. ~IParametricFunctionOneDim(); virtual ROOT::Math::IBaseFunctionOneDim*ROOT::Math::IBaseFunctionOneDim::Clone() const; virtual unsigned intROOT::Math::IBaseParam::NPar() const; doubleoperator()(double x, const double* p) const; doubleoperator()(const double* x, const double* p) const; ROOT::Math::IParametricFunctionOneDim&operator=(const ROOT::Math::IParametricFunctionOneDim&); virtual stringROOT::Math::IBaseParam::ParameterName(unsigned int i) const; virtual const double*ROOT::Math::IBaseParam::Parameters() const; virtual voidROOT::Math::IBaseParam::SetParameters(const double* p). private:. virtual doubleDoEval(double x) const; virtual doubleDoEvalPar(double x, const double* p) const. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; double operator()(const double* x, const double* p) const. Evaluate function at a point x and for given parameters p.; This method does not change the internal status of the function (internal parameter values).; If for some reason one prefers caching the parameter values, SetParameters(p) and then operator()(x) should be; called.; Use the pure virtual function DoEvalPar to implement it. return DoEvalPar(x, p). double DoEval(double x) const. Implement the ROOT::Math::IBaseFunctionMultiDim interface DoEval(x) using the cached parameter values. double operator()(double x, const double* p) const. Evaluate function at a point x and for given parameters p.; This method does not change the internal status of the function (internal parameter values).; If for some reason one prefers caching the parameter values, SetParameters(p) and then operator()(x) should be; called.; Use the pure virtual function DoEvalPar to implement it. » Author: L. Mon",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__IParametricFunctionOneDim.html:1806,Inherit,Inheritance,1806,root/html534/ROOT__Math__IParametricFunctionOneDim.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__IParametricFunctionOneDim.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"on, TQpVar* iterate, TQpDataBase* prob, TQpResidual* resid, TQpVar* step); Implements a default starting-point heuristic. While interior-point theory; places fairly loose restrictions on the choice of starting point, the choice; of heuristic can significantly affect the robustness and efficiency of the; algorithm. void DefStart(TQpProbBase* formulation, TQpVar* iterate, TQpDataBase* prob, TQpResidual* resid, TQpVar* step); Default starting point. void SteveStart(TQpProbBase* formulation, TQpVar* iterate, TQpDataBase* prob, TQpResidual* resid, TQpVar* step); Starting point algoritm according to Stephen Wright. void DumbStart(TQpProbBase* formulation, TQpVar* iterate, TQpDataBase* prob, TQpResidual* resid, TQpVar* step); Alternative starting point heuristic: sets the ""complementary"" variables to a large; positive value (based on the norm of the problem data) and the remaining variables; to zero . Double_t FinalStepLength(TQpVar* iterate, TQpVar* step); Implements a version of Mehrotra starting point heuristic,; modified to ensure identical steps in the primal and dual variables. void DoMonitor(TQpDataBase* data, TQpVar* vars, TQpResidual* resids, Double_t alpha, Double_t sigma, Int_t i, Double_t mu, Int_t stop_code, Int_t level); Monitor progress / convergence aat each interior-point iteration. Int_t DoStatus(TQpDataBase* data, TQpVar* vars, TQpResidual* resids, Int_t i, Double_t mu, Int_t level); Tests for termination. Unless the user supplies a specific termination; routine, this method calls another method defaultStatus, which returns; a code indicating the current convergence status. Int_t DefStatus(TQpDataBase* data, TQpVar* vars, TQpResidual* resids, Int_t i, Double_t mu, Int_t level); Default status method. TQpSolverBase & operator=(const TQpSolverBase& source); Assignment operator. Int_t Solve(TQpDataBase* prob, TQpVar* iterate, TQpResidual* resids); alternative starting point heuristic: sets the; ""complementary"" variables to a large positive value; (based on ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TQpSolverBase.html:8688,variab,variables,8688,root/html528/TQpSolverBase.html,https://root.cern,https://root.cern/root/html528/TQpSolverBase.html,10,['variab'],['variables']
Modifiability,"on, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; char * fBuffer;  Object buffer. ;  ; TBuffer * fBufferRef;  Pointer to the TBuffer object. ;  ; TString fClassName;  Object Class name. ;  ; Short_t fCycle;  Cycle number. ;  ; TDatime fDatime;  Date/Time of insertion in file. ;  ; Short_t fKeylen;  Number of bytes for the key itself. ;  ; Int_t fLeft;  Number of bytes left in current segment. ;  ; TDirectory * fMotherDir;  !pointer to mother directory ;  ; Int_t fNbytes;  Number of bytes for the object on file. ;  ; Int_t fObjlen;  Length of uncompressed object in bytes. ;  ; UShort_t fPidOffset;  !Offset to be added to the pid index in this key/buffer. This is actually saved in the high bits of fSeekPdir ;  ; Long64_t fSeekKey;  Location of object on file. ;  ; Long64_t fSeekPdir;  Location of parent directory on file. ;  ; Int_t fVersion;  Key version identifier. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Types; enum  EStatusBits { kIsDirectoryFile = (1ULL << ( 14 )); , kReproducible = (1ULL << ( 15 )); };  . Private Member Functions;  TKey (const TKey &)=delete;  ; TKey & operator= (const TKey &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL <<",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTKey.html:16124,inherit,inherited,16124,doc/master/classTKey.html,https://root.cern,https://root.cern/doc/master/classTKey.html,1,['inherit'],['inherited']
Modifiability,"on, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; std::vector< TAttFill > fAttFill;  The AttFill attributes of the different errors. ;  ; std::vector< TAttLine > fAttLine;  The AttLine attributes of the different errors. ;  ; Double_t * fExH;  [fNpoints] array of X high errors ;  ; Double_t * fExL;  [fNpoints] array of X low errors ;  ; std::vector< TArrayD > fEyH;  Two dimensional array of Y high errors. ;  ; Double_t * fEyHSum = nullptr;  ! Array of summed Y high errors for fitting ;  ; std::vector< TArrayD > fEyL;  Two dimensional array of Y low errors. ;  ; Double_t * fEyLSum = nullptr;  ! Array of summed Y low errors for fitting ;  ; Int_t fNYErrors;  The amount of different y-errors. ;  ; Int_t fSumErrorsMode;  How y errors are summed: kOnlyFirst = Only First; kSquareSum = Squared Sum; kSum = Absolute Addition. ;  ;  Protected Attributes inherited from TGraph; TList * fFunctions;  Pointer to list of functions (fits and user) ;  ; TH1F * fHistogram;  Pointer to histogram used for drawing axis. ;  ; Double_t fMaximum;  Maximum value for plotting along y. ;  ; Int_t fMaxSize;  !Current dimension of arrays fX and fY ;  ; Double_t fMinimum;  Minimum value for plotting along y. ;  ; Int_t fNpoints;  Number of points <= fMaxSize. ;  ; TString fOption;  Options used for drawing the graph. ;  ; Double_t * fX;  [fNpoints] array of X points ;  ; Double_t * fY;  [fNpoints] array of Y points ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; St",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphMultiErrors.html:42941,inherit,inherited,42941,doc/master/classTGraphMultiErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphMultiErrors.html,1,['inherit'],['inherited']
Modifiability,"on, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TCondition&operator=(const TCondition&); TCondition(const TCondition&). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. TConditionImp*fConditionImppointer to condition variable implementation; TMutex*fMutexmutex used around Wait() and TimedWait(); Bool_tfPrivateMutexis fMutex our private mutex. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TCondition(TMutex* m = 0); Create a condition variable. The actual condition implementation; will be provided via the TThreadFactory. If no external mutex is; provided one will be created. Use GetMutex() to get this mutex; and use it before calling Signal() or Broadcast(). ~TCondition(); Clean up condition variable. TMutex * GetMutex() const; Get internally created mutex. Use it to lock resources; before calling Signal() or Broadcast(). Returns 0 if; external mutex was provided in TCondition ctor. Int_t Wait(); Wait to be signaled. Int_t TimedWait(ULong_t secs, ULong_t nanoSecs); Wait to be signaled or till the timer times out.; This method is given an absolute time since the beginning of; the EPOCH (use TThread::GetTime() to get this absolute time).; To wait for a relative time from now, use; TCondition::Tim",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TCondition.html:5970,variab,variable,5970,root/html602/TCondition.html,https://root.cern,https://root.cern/root/html602/TCondition.html,4,['variab'],['variable']
Modifiability,"on. ;  ; virtual void SetStats (Bool_t stats=kTRUE);  Set statistics option on/off. ;  ; virtual void SetTickLength (Float_t length=0.02, Option_t *axis=""X"");  Set the axis' tick marks length. ;  ; void SetTitle (const char *title) override;  Change/set the title. ;  ; virtual void SetTitleFont (Style_t font=62, Option_t *axis=""X"");  Set the axis' title font. ;  ; virtual void SetTitleOffset (Float_t offset=1, Option_t *axis=""X"");  Specify a parameter offset to control the distance between the axis and the axis' title. ;  ; virtual void SetTitleSize (Float_t size=0.02, Option_t *axis=""X"");  Set the axis' title size. ;  ; virtual void SetXTitle (const char *title);  ; virtual void SetYTitle (const char *title);  ; virtual void SetZTitle (const char *title);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UseCurrentStyle () override;  Copy current attributes from/to current style. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *opt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile2D.html:36697,inherit,inherited,36697,doc/master/classTProfile2D.html,https://root.cern,https://root.cern/doc/master/classTProfile2D.html,1,['inherit'],['inherited']
Modifiability,"on. ;  ; void AddOper (const std::string &oper);  Add next custom operator to painting Operations are separated by semicolons Following operations are supported: t - text h - text coded into simple hex r - rectangle b - rectangular fill region l - polyline f - poly fill region m - poly marker z - line attributes y - fill attributes x - marker attributes o - text attributes After operation code optional arguments can be append like length of operation or coded text Each operation may use data from binary float buffer. ;  ; void AddTextAttr (const TAttText &attr);  Store text attributes If attributes were not changed - ignore operation. ;  ; void FixSize ();  ; TClass * IsA () const override;  ; Bool_t IsEmpty () const;  ; Float_t * Reserve (Int_t sz);  Reserve place in the float buffer Returns pointer on first element in reserved area. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebPainting.html:1983,inherit,inherited,1983,doc/master/classTWebPainting.html,https://root.cern,https://root.cern/doc/master/classTWebPainting.html,1,['inherit'],['inherited']
Modifiability,"on. Histogram fit options structure. Function Members (Methods); public:. ~Foption_t(); Foption_t(); Foption_t(const Foption_t&); Foption_t(Foption_t&&); Foption_t&operator=(const Foption_t&); Foption_t&operator=(Foption_t&&). Data Members; public:. intBound""B"" When using pre-defined functions user parameter settings are used instead of default one; intChi2""X"" For fitting THnsparse use chi2 method (default is likelihood); intErrors""E"" Performs a better error evaluation, calling HESSE and MINOS; intGradient""G"" Option to compute derivatives analytically; intIntegral""I"" Use function integral instead of function in center of bin; intLike""L"" Use Log Likelihood. Default is chisquare method except fitting THnsparse; intMinuit""F"" If fitting a polN, switch to minuit fitter; intMore""M"" Improve fit results.; intNoErrX""EX0"" or ""T"" When fitting a TGraphErrors do not consider error in coordinates; intNochisq""C"" In case of linear fitting, don't calculate the chisquare; intNograph""0"" If set, do not display the function graph; intNostore""N"" If set, do not store the function graph; intPChi2""P"" Use Pearson chi2 built with the expected error instead of the observed ones; intPlus""+"" Add new function (default is replace); intQuiet""Q"" Quiet mode. No print; intRange""R"" Use the range stored in function; intRobust""ROB"" or ""H"": For a TGraph use robust fitting; intStoreResult""S"": Stores the result in a TFitResult structure; intUser""U"" Use a User specified fitting algorithm (via SetFCN); intVerbose""V"" Verbose mode. Print results after each iteration; intW1""W"" Set all the weights to 1. Ignore error bars; doublehRobustvalue of h parameter used in robust fitting. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Foption_t(); {}. » Last changed: Tue Jun 30 14:21:16 2015 » Last generated: 2015-06-30 14:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/Foption_t.html:1927,Inherit,Inheritance,1927,root/html602/Foption_t.html,https://root.cern,https://root.cern/root/html602/Foption_t.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"on. More...;  ; class  TMVA::AbsoluteDeviationLossFunctionBDT;  Absolute Deviation BDT Loss Function. More...;  ; class  TMVA::BDTEventWrapper;  ; class  TMVA::BinarySearchTree;  A simple Binary search tree including a volume search method. More...;  ; class  TMVA::BinarySearchTreeNode;  Node for the BinarySearch or Decision Trees. More...;  ; class  TMVA::BinaryTree;  Base class for BinarySearch and Decision Trees. More...;  ; class  TMVA::CCPruner;  A helper class to prune a decision tree using the Cost Complexity method (see Classification and Regression Trees by Leo Breiman et al) More...;  ; class  TMVA::CCTreeWrapper;  ; class  Classification;  Class to perform two class classification. More...;  ; class  ClassificationResult;  Class to save the results of the classifier. More...;  ; class  TMVA::ClassifierFactory;  This is the MVA factory. More...;  ; class  TMVA::ClassInfo;  Class that contains all the information of a class. More...;  ; class  TMVA::Config;  Singleton class for global configuration settings used by TMVA. More...;  ; class  TMVA::ConvergenceTest;  Check for convergence. More...;  ; class  TMVA::CostComplexityPruneTool;  A class to prune a decision tree using the Cost Complexity method. More...;  ; class  CreateMethodPlugins;  Plugins analysis. More...;  ; class  TMVA::CrossEntropy;  Implementation of the CrossEntropy as separation criterion. More...;  ; class  TMVA::CrossValidation;  Class to perform cross validation, splitting the dataloader into folds. More...;  ; class  TMVA::CrossValidationResult;  Class to save the results of cross validation, the metric for the classification ins ROC and you can ROC curves ROC integrals, ROC average and ROC standard deviation. More...;  ; class  TMVA::DataInputHandler;  Class that contains all the data information. More...;  ; class  TMVA::DataLoader;  ; class  TMVA::DataSet;  Class that contains all the data information. More...;  ; class  TMVA::DataSetFactory;  Class that contains all the data inform",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__TMVA.html:1530,config,configuration,1530,doc/master/group__TMVA.html,https://root.cern,https://root.cern/doc/master/group__TMVA.html,1,['config'],['configuration']
Modifiability,"on.; After CMake has finished running, proceed to use IDE project files or start the build from the build directory:; $ cmake --build . [-- <options to the native tool>]. The --build option tells cmake to invoke the underlying build tool (make, ninja, xcodebuild, msbuild, etc).; The underlying build tool can also be invoked directly of course, but thecmake --build command is more portable.; On unix systems (with make or ninja) you can speedup the build with cmake --build . -- -jN where N is the number of available cores.; Setup the environment to run; $ source /path/to/install-or-build/dir/bin/thisroot.sh. Start ROOT interactive application; $ root. Installation methods; There are two main methods of installing ROOT from source: location independent and fix location. The former is advised for a personal installation of ROOT, while the later for a system wide installation. Both require to set the CMAKE_INSTALL_PREFIX variable at configuration time. The later requires in addition to set the gnuinstall option at configuration. It also allows the tuning of destinations for the various components, by setting the variablesCMAKE_INSTALL_xxxDIR, wherexxx isBIN,LIB,INCLUDE, etc. The full list is described in the variables section.; To use the location independent installation requires to set environment variables PATH and LD_LIBRARY_PATH. This is done by sourcing the script (depending on the shell family) source bin/thisroot.sh. While to use the fix location installation you do not need to set any environment to run root.; Do the installation of ROOT from the build directory:; $ cmake --build . --target install. The --target option with install parameter in addition to the --build option tells cmake to build the 'install' target. This is equivalent to make install for Unix systems. ; It is possible to set a different install prefix at installation time by invoking the cmake_install.cmake script generated in the build directory:; $ cmake -DCMAKE_INSTALL_PREFIX=/tmp/root -P cm",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/building-root.html:5127,config,configuration,5127,d/building-root.html,https://root.cern,https://root.cern/d/building-root.html,1,['config'],['configuration']
Modifiability,on.h. ◆ var(). RooRealVar & RooNumConvolution::var ; (; ); const. inline . Definition at line 55 of file RooNumConvolution.h. Friends And Related Symbol Documentation. ◆ RooConvGenContext. friend class RooConvGenContext. friend . Definition at line 84 of file RooNumConvolution.h. ◆ RooNumConvPdf. friend class RooNumConvPdf. friend . Definition at line 61 of file RooNumConvolution.h. Member Data Documentation. ◆ _callHist. TH2* RooNumConvolution::_callHist. protected . ! Histogram recording number of calls per convolution integral calculation ; Definition at line 95 of file RooNumConvolution.h. ◆ _cloneModel. RooAbsReal* RooNumConvolution::_cloneModel. mutableprotected . Pointer to cloned model. ; Definition at line 82 of file RooNumConvolution.h. ◆ _clonePdf. RooAbsReal* RooNumConvolution::_clonePdf. mutableprotected . Pointer to cloned PDF. ; Definition at line 81 of file RooNumConvolution.h. ◆ _cloneVar. RooAbsReal* RooNumConvolution::_cloneVar. mutableprotected . Pointer to cloned convolution variable. ; Definition at line 80 of file RooNumConvolution.h. ◆ _convIntConfig. RooNumIntConfig RooNumConvolution::_convIntConfig. protected . Configuration of numeric convolution integral ;. ; Definition at line 69 of file RooNumConvolution.h. ◆ _doProf. bool RooNumConvolution::_doProf. protected . Switch to activate profiling option. ; Definition at line 94 of file RooNumConvolution.h. ◆ _init. bool RooNumConvolution::_init. mutableprotected . Definition at line 63 of file RooNumConvolution.h. ◆ _integrand. RooConvIntegrandBinding* RooNumConvolution::_integrand. mutableprotected . ! Binding of Convolution Integrand function ; Definition at line 70 of file RooNumConvolution.h. ◆ _integrator. std::unique_ptr<RooAbsIntegrator> RooNumConvolution::_integrator. mutableprotected . ! Numeric integrator of convolution integrand ; Definition at line 71 of file RooNumConvolution.h. ◆ _origModel. RooRealProxy RooNumConvolution::_origModel. protected . Original resolution model. ; Def,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNumConvolution.html:72065,variab,variable,72065,doc/master/classRooNumConvolution.html,https://root.cern,https://root.cern/doc/master/classRooNumConvolution.html,1,['variab'],['variable']
Modifiability,"on::GetCurrentCollection(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; virtual Int_tGetLast() const; virtual const char*TCollection::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; virtual TObject**TCollection::GetObjectRef(const TObject* obj) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tTCollection::GetSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tTCollection::GrowBy(Int_t delta) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTCollection::Hash() const; virtual Int_tIndexOf(const TObject* obj) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTCollection::IsArgNull(const char* where, const TObject* obj) const; virtual Bool_tTCollection::IsEmpty() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTCollection::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTCollection::IsOwner() const; virtual Bool_tTCollection::IsSortable() const; virtual Bool_tIsSorted() const; Bool_tTObject::IsZombie() const; virtual TObject*Last() const; Int_tLastIndex() const; virtual voidTCollection::ls(Option_t* option = """") const; virtual TIterator*TCollection::MakeIterator(Bool_t dir = kIterForward) const; virtual TIterator*TCollection::MakeReverseIterator() const; voidTObject::MayNotUse(const char* method) const; Long64_tMerge(TCollection* list); virtual Bool_tTObject::Notify(); static Int_tObjCompare(TObject* a, TObject* b); voidTObject::Obsolete(const char* method, cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSeqCollection.html:3805,Inherit,InheritsFrom,3805,root/html532/TSeqCollection.html,https://root.cern,https://root.cern/root/html532/TSeqCollection.html,4,['Inherit'],['InheritsFrom']
Modifiability,"on; # rather than observed number of events (==data.numEntries()); xframe = x.frame(Title=""extended ML fit example""); data.plotOn(xframe); model.plotOn(xframe, Normalization=dict(scaleFactor=1.0, scaleType=ROOT.RooAbsReal.RelativeExpected)); ; # Overlay the background component of model with a dashed line; model.plotOn(; xframe,; Components={bkg},; LineStyle="":"",; Normalization=dict(scaleFactor=1.0, scaleType=ROOT.RooAbsReal.RelativeExpected),; ); ; # Overlay the background+sig2 components of model with a dotted line; ras_bkg_sig2 = {bkg, sig2}; model.plotOn(; xframe,; Components=ras_bkg_sig2,; LineStyle="":"",; Normalization=dict(scaleFactor=1.0, scaleType=ROOT.RooAbsReal.RelativeExpected),; ); ; # Print structure of composite pdf; model.Print(""t""); ; ; # Method 2 - Construct extended components first; # ---------------------------------------------------------------------; ; # Associated nsig/nbkg as expected number of events with sig/bkg; esig = ROOT.RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig); ebkg = ROOT.RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg); ; # Sum extended components without coefs; # -------------------------------------------------------------------------; ; # Construct sum of two extended pdf (no coefficients required); model2 = ROOT.RooAddPdf(""model2"", ""(g1+g2)+a"", [ebkg, esig]); ; # Draw the frame on the canvas; c = ROOT.TCanvas(""rf202_extendedmlfit"", ""rf202_extendedmlfit"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); xframe.GetYaxis().SetTitleOffset(1.4); xframe.Draw(); ; c.SaveAs(""rf202_extendedmlfit.png""); [#0] WARNING:InputArguments -- The parameter 'sigma1' with range [-inf, inf] of the RooGaussian 'sig1' exceeds the safe range of (0, inf). Advise to limit its range.; [#0] WARNING:InputArguments -- The parameter 'sigma2' with range [-inf, inf] of the RooGaussian 'sig2' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Minimization -- p.d.f. provides expected number of events, including extended term",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf202__extendedmlfit_8py.html:3152,extend,extended,3152,doc/master/rf202__extendedmlfit_8py.html,https://root.cern,https://root.cern/doc/master/rf202__extendedmlfit_8py.html,1,['extend'],['extended']
Modifiability,"on; Int_tfY0current slider position in pixels; Int_tfYpprevious slider position in pixels; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static Pixmap_tfgBckgndPixmap; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static Int_tfgScrollBarWidth; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGScrollBar(const TGWindow* p = 0, UInt_t w = 1, UInt_t h = 1, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor. ~TGScrollBar(); Delete a scrollbar (either horizontal or vertical). Bool_t HandleCrossing(Event_t* event); Handle mouse crossing event. Bool_t HandleTimer(TTimer* t); Handle repeat timer for horizontal or vertical scrollbar. Every time; timer times out we move slider. Pixmap_t GetBckgndPixmap(); Static method returning scrollbar background pixmap. Int_t GetScrollBarWidth(); Static method returning the scrollbar width. void ChangeBackground(Pixel_t back); Change background color. TGScrollBarElement& operator=(const TGScrollBar& ). void DrawBorder(). TGScrollBar(const TGScrollBar& ). void GrabPointer(Bool_t grab); { fGrabPointer = grab; }. Bool_t HandleButton(Event_t* event). Bool_t HandleMotion(Event_t* event). void Layout(). void SetDragging(Bool_t drag); { fDragging = drag; }. void SetR",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGScrollBar.html:20645,Inherit,Inheritance,20645,root/html602/TGScrollBar.html,https://root.cern,https://root.cern/root/html602/TGScrollBar.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"on; Minuit2Minimizer(ROOT::Minuit2::EMinimizerType type = ROOT::Minuit2::kMigrad). Default constructor. Minuit2Minimizer(const char* type). Constructor with a char (used by PM). virtual ~Minuit2Minimizer(). Destructor (no operations). Minuit2Minimizer(const ROOT::Minuit2::Minuit2Minimizer& ); usually copying is non trivial, so we make this unaccessible. Copy constructor. void Clear(); clear resources (parameters) for consecutives minimizations. void SetFunction(const ROOT::Math::IMultiGenFunction& func); set the function to minimize. void SetFunction(const ROOT::Math::IMultiGradFunction& func); set gradient the function to minimize. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set free variable. bool SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); set lower limit variable (override if minimizer supports them ). bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set upper limit variable (override if minimizer supports them ). bool SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double , double ); set upper/lower limited variable (override if minimizer supports them ). bool SetFixedVariable(unsigned int , const string& , double ); set fixed variable (override if minimizer supports them ). bool SetVariableValue(unsigned int ivar, double val); set variable. bool SetVariableValues(const double* val). std::string VariableName(unsigned int ivar) const; get name of variables (override if minimizer support storing of variable names). int VariableIndex(const string& name) const; get index of variable given a variable given a name; return -1 if variable is not found. bool Minimize(). method to perform the minimization.; Return false in case the minimization did not converge. In this case a; status code different than zero is set; (retrieved by the derived method Minimizer::Status() )"" . status = 1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Minuit2__Minuit2Minimizer.html:6158,variab,variable,6158,root/html528/ROOT__Minuit2__Minuit2Minimizer.html,https://root.cern,https://root.cern/root/html528/ROOT__Minuit2__Minuit2Minimizer.html,4,['variab'],['variable']
Modifiability,"on; Minuit2Minimizer(ROOT::Minuit2::EMinimizerType type = ROOT::Minuit2::kMigrad). Default constructor. Minuit2Minimizer(const char* type). Constructor with a char (used by PM). virtual ~Minuit2Minimizer(). Destructor (no operations). Minuit2Minimizer(const ROOT::Minuit2::Minuit2Minimizer& ); usually copying is non trivial, so we make this unaccessible. Copy constructor. void Clear(); clear resources (parameters) for consecutives minimizations. void SetFunction(const ROOT::Math::IMultiGenFunction& func); set the function to minimize. void SetFunction(const ROOT::Math::IMultiGradFunction& func); set gradient the function to minimize. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set free variable. bool SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); set lower limit variable (override if minimizer supports them ). bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set upper limit variable (override if minimizer supports them ). bool SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double , double ); set upper/lower limited variable (override if minimizer supports them ). bool SetFixedVariable(unsigned int , const string& , double ); set fixed variable (override if minimizer supports them ). bool SetVariableValue(unsigned int ivar, double val); set variable. bool SetVariableValues(const double* val); set variable values. bool SetVariableStepSize(unsigned int ivar, double step); set the step size of an already existing variable. bool SetVariableLowerLimit(unsigned int ivar, double lower); set the lower-limit of an already existing variable. bool SetVariableUpperLimit(unsigned int ivar, double upper); set the upper-limit of an already existing variable. bool SetVariableLimits(unsigned int ivar, double lower, double upper); set the limits of an already existing variable. bool FixVariable(unsign",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Minuit2__Minuit2Minimizer.html:6944,variab,variable,6944,root/html534/ROOT__Minuit2__Minuit2Minimizer.html,https://root.cern,https://root.cern/root/html534/ROOT__Minuit2__Minuit2Minimizer.html,6,['variab'],['variable']
Modifiability,on; RooPolynomial Polynomial PDF; RooPrintable Interface for printable objects; RooProdGenContext Context for efficient generation of a a dataset from a RooProdPdf; RooProdPdf PDF representing a product of PDFs; RooProduct Product of RooAbsReal and/or RooAbsCategory terms; RooProfileLL Real-valued function representing profile likelihood of external (likelihood) function; RooProjectedPdf Operator p.d.f calculating projection of another p.d.f; RooProofDriverSelector ; RooPullVar Calculation of pull of measurement w.r.t a truth value; RooQuasiRandomGenerator Quasi-random number generator; RooRandom Random number generator interface; RooRandomizeParamMCSModule MCStudy module to vary one or more input parameters during fit/generation cycle; RooRangeBinning Binning that only defines the total range; RooRangeBoolean Polynomial function; RooRealAnalytic Function binding to an analytical integral of a RooAbsReal; RooRealBinding Function binding to RooAbsReal object; RooRealConstant RooRealVar constants factory; RooRealIntegral Real-valued function representing an integral over a RooAbsReal object; RooRealMPFE Multi-process front-end for parallel calculation of a real valued function; RooRealProxy Proxy for a RooAbsReal object; RooRealSumPdf PDF constructed from a sum of (non-pdf) functions; RooRealVar Real-valued variable; RooRealVarSharedProperties Shared properties of a RooRealVar clone set; RooRecursiveFraction Recursive fraction formula f1*(1-f2)*(1-f3) etc...; RooRefArray Helper class for proxy lists; RooRefCountList RooLinkedList with reference counting; RooResolutionModel Abstract Resolution Model; RooScaledFunc Function binding applying scaling to another function binding; RooSecondMoment Representation of moment in a RooAbsReal in a given RooRealVar; RooSegmentedIntegrator1D 1-dimensional piece-wise numerical integration engine; RooSegmentedIntegrator2D 2-dimensional piece-wise numerical integration engine; RooSentinel ; RooSetPair Utility class holding a pair of R,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ClassIndex.html:39931,variab,variable,39931,root/html602/ClassIndex.html,https://root.cern,https://root.cern/root/html602/ClassIndex.html,4,['variab'],['variable']
Modifiability,"on;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TGLParametric.h>. Inheritance diagram for TGLParametricEquation:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Painter_t. typedef std::unique_ptr<TGLHistPainter> TGLParametricEquation::Painter_t. private . Definition at line 51 of file TGLParametric.h. ◆ Ptr_t. typedef std::unique_ptr<TF2> TGLParametricEquation::Ptr_t. private . Definition at line 37 of file TGLParametric.h. Constructor & Destructor Documentation. ◆ TGLParametricEquation() [1/3]. TGLParametricEquation::TGLParametricEquation ; (; const TString & ; name, . const TString & ; xFun, . const TString & ; yFun, . const TString & ; zFun, . Double_t ; uMin, . Double_t ; uMax, . Double_t ; vMin, . Double_t ; vMax . ). Surface is defined by three strings. ; ROOT does not use exceptions in ctors, so, I have to use MakeZombie to let external user know about errors. ; Definition at line ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLParametricEquation.html:13382,inherit,inherited,13382,doc/master/classTGLParametricEquation.html,https://root.cern,https://root.cern/doc/master/classTGLParametricEquation.html,1,['inherit'],['inherited']
Modifiability,"on;  Separation between columns, as a fraction of The space allowed to one column. ;  ; Float_t fEntrySeparation;  Separation between entries, as a fraction of The space allocated to one entry. ;  ; Float_t fMargin;  Fraction of total width used for symbol. ;  ; Int_t fNColumns;  Number of columns in the legend. ;  ; TList * fPrimitives {nullptr};  List of TLegendEntries. ;  ;  Protected Attributes inherited from TPave; Int_t fBorderSize;  window box bordersize in pixels ;  ; Double_t fCornerRadius;  Corner radius in case of option arc. ;  ; Int_t fInit;  (=0 if transformation to NDC not yet done) ;  ; TString fName;  Pave name. ;  ; TString fOption;  Pave style. ;  ; Int_t fShadowColor;  Color of the pave's shadow. ;  ; Double_t fX1NDC;  X1 point in NDC coordinates. ;  ; Double_t fX2NDC;  X2 point in NDC coordinates. ;  ; Double_t fY1NDC;  Y1 point in NDC coordinates. ;  ; Double_t fY2NDC;  Y2 point in NDC coordinates. ;  ;  Protected Attributes inherited from TBox; Bool_t fResizing;  ! True if box is being resized ;  ; Double_t fX1;  X of 1st point. ;  ; Double_t fX2;  X of 2nd point. ;  ; Double_t fY1;  Y of 1st point. ;  ; Double_t fY2;  Y of 2nd point. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Additional Inherited Members;  Public Types inherited from TPave; enum  { kNameIsAction = (1ULL << ( 11 )); };  ;  Public Types inherited from TBox; enum  { kCannotMove = (1ULL << ( 12 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLegend.html:32116,inherit,inherited,32116,doc/master/classTLegend.html,https://root.cern,https://root.cern/doc/master/classTLegend.html,1,['inherit'],['inherited']
Modifiability,"on="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TBufferFile; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TBufferIO; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t GetGlobalReadParam ();  Get default read map size. ;  ; static Int_t GetGlobalWriteParam ();  Get default write map size. ;  ; static void SetGlobalReadParam (Int_t mapsize);  Set the initial size of the map used to store object and class references during reading. ;  ; static void SetGlobalWriteParam (Int_t mapsize);  Set the initial size of the map used to store object and class references during reading. ;  ;  Static Public Member Functions inherited from TBuffer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TClass * GetClass (const char *className);  Forward to TROOT::GetClass(). ;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferSQL.html:31411,inherit,inherited,31411,doc/master/classTBufferSQL.html,https://root.cern,https://root.cern/doc/master/classTBufferSQL.html,2,['inherit'],['inherited']
Modifiability,"on=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Static Public Attributes; static constexpr const char *const fgEntryStatusText [kEntryUnknownError+1];  . Protected Types; using NamedProxies_t = std::unordered_map< std::string, std::unique_ptr< ROOT::Internal::TNamedBranchProxy > >;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; ROOT::Internal::TFriendProxy & AddFriendProxy (std::size_t friendIdx);  ; void AddProxy (std::unique_ptr< ROOT::Internal::TNamedBranchProxy > p);  ; void DeregisterValueReader (ROOT::Internal::TTreeReaderValueBase *reader);  Remove a value reader for this tree. ;  ; ROOT::Internal::TNamedBranchProxy * FindProxy (const char *branchname) const;  ; void Initialize ();  Initialization of the director. ;  ; bool RegisterValueReader (ROOT::Internal::TTreeReaderValueBase *reader);  Add a value reader for this tree. ;  ; EEntryStatus SetEntryBase (Long64_t entry, bool local);  Load an entry into the tree, return the status of the read. ;  ; bool SetProxies ();  Tell readers we now have a tree. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to Erro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeReader.html:18670,inherit,inherited,18670,doc/master/classTTreeReader.html,https://root.cern,https://root.cern/doc/master/classTTreeReader.html,1,['inherit'],['inherited']
Modifiability,"onCode() const; TStringTMVA::MethodBase::GetTrainingTMVAVersionString() const; Double_tTMVA::MethodBase::GetTrainTime() const; TMVA::TransformationHandler&TMVA::MethodBase::GetTransformationHandler(Bool_t takeReroutedIfAvailable = true); const TMVA::TransformationHandler&TMVA::MethodBase::GetTransformationHandler(Bool_t takeReroutedIfAvailable = true) const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetVolumeContentForRoot(Double_t); TStringTMVA::MethodBase::GetWeightFileName() const; Double_tTMVA::MethodBase::GetXmax(Int_t ivar) const; Double_tTMVA::MethodBase::GetXmin(Int_t ivar) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tHasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); virtual ULong_tTObject::Hash() const; Bool_tTMVA::MethodBase::HasMVAPdfs() const; static Double_tIGetVolumeContentForRoot(Double_t); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTMVA::MethodBase::IsSignalLike(); virtual Bool_tTMVA::MethodBase::IsSignalLike(Double_t mvaVal); virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidTMVA::MethodBase::MakeClass(const TString& classFileName = TString("""")) const; voidTObject::MayNotUse(const char* method) const; TDirectory*TMVA::MethodBase::MethodBaseDir() const; TMVA::MethodPDERSMethodPDERS(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir = NULL); TMVA::MethodPDERSMethodPDERS(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodPDERS.html:8656,Inherit,InheritsFrom,8656,root/html532/TMVA__MethodPDERS.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodPDERS.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onHandler(TMVA::TransformationHandler* fTargetTransformation); { fTransformationPointer=fTargetTransformation; }. DataSetInfo& DataInfo() const; { return fDataSetInfo; }. UInt_t GetNEvents() const; event reference and update; NOTE: these Event accessors make sure that you get the events transformed according to the; particular clasifiers transformation chosen. { return Data()->GetNEvents(); }. Bool_t HasMVAPdfs() const; { return fHasMVAPdfs; }. void SetAnalysisType(TMVA::Types::EAnalysisType type); { fAnalysisType = type; }. Types::EAnalysisType GetAnalysisType() const; { return fAnalysisType; }. Bool_t DoRegression() const; { return fAnalysisType == Types::kRegression; }. Bool_t DoMulticlass() const; { return fAnalysisType == Types::kMulticlass; }. void DisableWriting(Bool_t setter); setter method for suppressing writing to XML and writing of standalone classes. { fDisableWriting = setter; }. const TString& GetWeightFileDir() const; { return fFileDir; }. Bool_t IsNormalised() const; are input variables normalised ?. { return fNormalise; }. void SetNormalised(Bool_t norm); { fNormalise = norm; }. Bool_t Verbose() const; set number of input variables (only used by MethodCuts, could perhaps be removed); void SetNvar( Int_t n ) { fNvar = n; }; verbose and help flags. { return fVerbose; }. Bool_t Help() const; { return fHelp; }. const TString& GetInternalVarName(Int_t ivar) const; ---------- protected event and tree accessors -----------------------------; names of input variables (if the original names are expressions, they are; transformed into regexps). { return (*fInputVars)[ivar]; }. const TString& GetOriginalVarName(Int_t ivar) const; { return DataInfo().GetVariableInfo(ivar).GetExpression(); }. Bool_t HasTrainingTree() const; { return Data()->GetNTrainingEvents() != 0; }. void MakeClassSpecific(ostream& , const TString& = """") const; ---------- protected auxiliary methods ------------------------------------; make ROOT-independent C++ class for classifier response ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodBase.html:36380,variab,variables,36380,root/html534/TMVA__MethodBase.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodBase.html,6,['variab'],['variables']
Modifiability,"onHistosToFile(TMVA::Types::ETreeType treetype); virtual voidWriteMonitoringHistosToFile() const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const; voidWriteStateToFile() const. protected:. virtual voidAddWeightsXMLTo(void* parent) const; virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTMVA::Configurable::EnableLooseOptions(Bool_t b = kTRUE); virtual voidTMVA::IMethod::GetHelpMessage() const; const TString&GetInternalVarName(Int_t ivar) const; const TString&GetOriginalVarName(Int_t ivar) const; const TString&TMVA::Configurable::GetReferenceFile() const; static TMVA::MethodBase*GetThisBase(); const TString&GetWeightFileDir() const; Bool_tHasTrainingTree() const; Bool_tHelp() const; Bool_tIgnoreEventsWithNegWeightsInTraining() const; Bool_tIsConstructedFromWeightFile() const; Bool_tIsNormalised() const; TMVA::MsgLogger&TMVA::Configurable::Log() const; Bool_tTMVA::Configurable::LooseOptionCheckingEnabled() const; virtual voidMakeClassSpecific(ostream&, const TString& = """") const; virtual voidMakeClassSpecificHeader(ostream&, const TString& = """") const; voidTObject::MakeZombie(); voidNoErrorCalc(Double_t*const err, Double_t*const errUpper); virtual voidReadWeightsFromStream(istream&); virtual voidReadWeightsFromStream(TFile&); virtual voidReadWeightsFromXML(void* wghtnode); voidTMVA::Configurable::ResetSetFlag(); voidSetNormalised(Bool_t norm); voidSetWeightFileDir(TString fileDir); voidSetWeightFileName(TString); voidStatistics(TMVA::Types::ETreeType treeType, const TString& theVarName, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&); Bool_tTxtWeightsOnly() const; Bool_tVerbose() const; voidTMVA::Configurable::WriteOptionsReferenceToFile(). private:. voidAddClassesXMLTo(void* parent) const; virtual voidAddClassifierOutput(TMVA::Types::ETreeType type); virtual voidAddClassifierOutputProb(TMVA::Types::ETreeType type); voidAddInfoItem(void* gi, const TString& name,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodBase.html:13194,Config,Configurable,13194,root/html602/TMVA__MethodBase.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodBase.html,12,['Config'],['Configurable']
Modifiability,"onName() const; Float_tGetInitTime() const; TList*GetInputList(); TObject*GetInputObject(const char* classname) const; const char*GetLibList() const; TMacro*GetLogFile() const; virtual const char*TNamed::GetName() const; Int_tGetNumWrks() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetOptions() const; TList*GetOutputList(); const char*GetParList() const; Float_tGetProcTime() const; const char*GetResultFile() const; TMacro*GetSelecHdr() const; TMacro*GetSelecImp() const; Int_tGetSeqNum() const; TDatimeGetStartTime() const; TQueryResult::EQueryStatusGetStatus() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Float_tGetUsedCPU() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsArchived() const; virtual Bool_tIsDone() const; Bool_tIsDraw() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; Bool_tIsFinalized() const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; Bool_tMatches(const char* ref); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TQueryResult.html:2997,Inherit,InheritsFrom,2997,root/html532/TQueryResult.html,https://root.cern,https://root.cern/root/html532/TQueryResult.html,1,['Inherit'],['InheritsFrom']
Modifiability,"onName() const; Float_tGetInitTime() const; TList*GetInputList(); TObject*GetInputObject(const char* classname) const; const char*GetLibList() const; TMacro*GetLogFile() const; virtual const char*TNamed::GetName() const; Int_tGetNumWrks() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetOptions() const; TList*GetOutputList(); const char*GetParList() const; Float_tGetProcTime() const; const char*GetResultFile() const; TMacro*GetSelecHdr() const; TMacro*GetSelecImp() const; Int_tGetSeqNum() const; TDatimeGetStartTime() const; TQueryResult::EQueryStatusGetStatus() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Float_tGetUsedCPU() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsArchived() const; virtual Bool_tIsDone() const; Bool_tIsDraw() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; Bool_tIsFinalized() const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; Bool_tMatches(const char* ref); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(siz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TQueryResult.html:2970,Inherit,InheritsFrom,2970,root/html602/TQueryResult.html,https://root.cern,https://root.cern/root/html602/TQueryResult.html,1,['Inherit'],['InheritsFrom']
Modifiability,"onName() const; Int_tTGeoShape::GetId() const; virtual TGeoShape*GetMakeRuntimeShape(TGeoShape*, TGeoMatrix*) const; virtual voidGetMeshNumbers(Int_t& nvert, Int_t& nsegs, Int_t& npols) const; virtual const char*TGeoShape::GetName() const; virtual Int_tGetNmeshVertices() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const Double_t*TGeoBBox::GetOrigin() const; const char*TGeoShape::GetPointerName() const; virtual Bool_tTGeoBBox::GetPointsOnFacet(Int_t index, Int_t npoints, Double_t* array) const; virtual Bool_tGetPointsOnSegments(Int_t, Double_t*) const; virtual const char*TNamed::GetTitle() const; static TGeoMatrix*TGeoShape::GetTransform(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual voidInspectShape() const; voidTObject::InvertBit(UInt_t f); voidTGeoShape::InvertShapeBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGeoShape::IsAssembly() const; static Bool_tTGeoShape::IsCloseToPhi(Double_t epsil, Double_t* point, Double_t c1, Double_t s1, Double_t c2, Double_t s2); virtual Bool_tIsComposite() const; static Bool_tTGeoShape::IsCrossingSemiplane(Double_t* point, Double_t* dir, Double_t cphi, Double_t sphi, Double_t& snext, Double_t& rxy); virtual Bool_tIsCylType() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tTGeoShape::IsInPhiRange(Double_t* point, Double_t phi1, Double_t phi2); virtual Bool_tTGeoBBox::IsNullBox() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTGeoShape::IsReflected() const; Bool_tTGeoShape::IsRunTimeShape() const; s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoCompositeShape.html:10974,Inherit,InheritsFrom,10974,root/html532/TGeoCompositeShape.html,https://root.cern,https://root.cern/root/html532/TGeoCompositeShape.html,1,['Inherit'],['InheritsFrom']
Modifiability,"onName() const; Int_tTGeoShape::GetId() const; virtual TGeoShape*GetMakeRuntimeShape(TGeoShape*, TGeoMatrix*) const; virtual voidGetMeshNumbers(Int_t& nvert, Int_t& nsegs, Int_t& npols) const; virtual const char*TGeoShape::GetName() const; virtual Int_tGetNmeshVertices() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const Double_t*TGeoBBox::GetOrigin() const; const char*TGeoShape::GetPointerName() const; virtual Bool_tTGeoBBox::GetPointsOnFacet(Int_t index, Int_t npoints, Double_t* array) const; virtual Bool_tGetPointsOnSegments(Int_t, Double_t*) const; virtual const char*TNamed::GetTitle() const; static TGeoMatrix*TGeoShape::GetTransform(); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual voidInspectShape() const; voidTObject::InvertBit(UInt_t f); voidTGeoShape::InvertShapeBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGeoShape::IsAssembly() const; static Bool_tTGeoShape::IsCloseToPhi(Double_t epsil, const Double_t* point, Double_t c1, Double_t s1, Double_t c2, Double_t s2); virtual Bool_tIsComposite() const; static Bool_tTGeoShape::IsCrossingSemiplane(const Double_t* point, const Double_t* dir, Double_t cphi, Double_t sphi, Double_t& snext, Double_t& rxy); virtual Bool_tIsCylType() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tTGeoShape::IsInPhiRange(const Double_t* point, Double_t phi1, Double_t phi2); virtual Bool_tTGeoBBox::IsNullBox() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTGeoShape::IsReflected() const; Bool_tTGeoShape::I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoCompositeShape.html:11576,Inherit,InheritsFrom,11576,root/html534/TGeoCompositeShape.html,https://root.cern,https://root.cern/root/html534/TGeoCompositeShape.html,3,['Inherit'],['InheritsFrom']
Modifiability,"onOneDim; RooFunctor1DPdfBinding RooAbsPdf binding to a ROOT::Math::IBaseFunctionOneDim; RooFunctorBinding RooAbsReal binding to a ROOT::Math::IBaseFunctionMultiDim; RooFunctorPdfBinding RooAbsPdf binding to a ROOT::Math::IBaseFunctionMultiDim; RooGExpModel Gauss (x) Expontial resolution model; RooGamma Gaussian PDF; RooGaussKronrodIntegrator1D 1-dimensional Gauss-Kronrod numerical integration engine; RooGaussModel Gaussian Resolution Model; RooGaussian Gaussian PDF; RooGenCategory Generic category-to-category function based on user supplied mapping function; RooGenContext Universal context for generating toy MC data from any p.d.f; RooGenFitStudy Generate-and-Fit study module; RooGenFunction Export RooAbsReal as functor; RooGenProdProj General form of projected integral of product of PDFs, utility class for RooProdPdf; RooGenericPdf Generic PDF defined by string expression and list of variables; RooGlobalFunc ; RooGrid Utility class for RooMCIntegrator holding a multi-dimensional grid; RooHashTable Hash table; RooHist 1-dimensional histogram with error bars; RooHistError Utility class for calculating histogram errors; RooHistFunc Histogram based function; RooHistPdf Histogram based PDF; RooImproperIntegrator1D 1-dimensional improper integration engine; RooInt Container class for Int_t; RooIntegralMorph Linear shape interpolation operator p.d.f; RooIntegrator1D 1-dimensional numerical integration engine; RooIntegrator2D 2-dimensional numerical integration engine; RooIntegratorBinding Function binding representing output of numeric integrator; RooInvTransform Function binding returning inverse of other function binding; RooJeffreysPrior Sum of RooAbsReal objects; RooKeysPdf One-dimensional non-parametric kernel estimation p.d.f.; RooLandau Landau Distribution PDF; RooLegendre Legendre polynomial; RooLinTransBinning Linear transformation of binning specification; RooLinearVar Lvalue linear transformation function ; RooLinkedList Doubly linked list for storage of RooAbs",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ClassIndex.html:36339,variab,variables,36339,root/html528/ClassIndex.html,https://root.cern,https://root.cern/root/html528/ClassIndex.html,3,['variab'],['variables']
Modifiability,"onPointer to function binding of integrand; Bool_tRooAbsIntegrator::_printEvalCounterIf true print number of function evaluation required for integration; Bool_t_useIntegrandLimitsUse limits in function binding?; Bool_tRooAbsIntegrator::_validIs integrator in valid state?; Double_t*_x! do not persist; Double_t_xmax! Upper integration bound; Double_t_xmin! Lower integration bound. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void registerIntegrator(RooNumIntFactory& fact); Register RooGaussKronrodIntegrator1D, its parameters and capabilities with RooNumIntConfig. RooGaussKronrodIntegrator1D(); Default constructor. RooGaussKronrodIntegrator1D(const RooAbsFunc& function, const RooNumIntConfig& config); Construct integral on 'function' using given configuration object. The integration; range is taken from the definition in the function binding. RooGaussKronrodIntegrator1D(const RooAbsFunc& function, Double_t xmin, Double_t xmax, const RooNumIntConfig& config); Construct integral on 'function' using given configuration object in the given range. RooAbsIntegrator* clone(const RooAbsFunc& function, const RooNumIntConfig& config) const; Clone integrator with given function and configuration. Needed for RooNumIntFactory. Bool_t initialize(); Perform one-time initialization of integrator. ~RooGaussKronrodIntegrator1D(); Destructor. Bool_t setLimits(Double_t* xmin, Double_t* xmax); Change our integration limits. Return kTRUE if the new limits are; ok, or otherwise kFALSE. Always returns kFALSE and does nothing; if this object was constructed to always use our integrand's limits. Bool_t checkLimits() const; Check that our integration range is finite and otherwise return kFALSE.; Update the limits from the integrand if requested. Double_t integral(const Double_t* yvec = 0); Calculate and return integral. RooGaussKronrodIntegrator1D(); Constructors, assignment etc. Bool_t setUseIntegrandLimits(Bool_t flag); {_useIntegrandLimits = flag",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooGaussKronrodIntegrator1D.html:8229,config,config,8229,root/html526/RooGaussKronrodIntegrator1D.html,https://root.cern,https://root.cern/root/html526/RooGaussKronrodIntegrator1D.html,4,['config'],"['config', 'configuration']"
Modifiability,"onPolicy fExecutionPolicyExecution policy.Definition PoissonLikelihoodFCN.h:210; ROOT::Fit::PoissonLikelihoodFCN::BaseFunctionBaseObjFunction::BaseFunction BaseFunctionDefinition PoissonLikelihoodFCN.h:53; ROOT::Fit::PoissonLikelihoodFCN::Gradientvirtual void Gradient(const double *x, double *g) constevaluate gradientDefinition PoissonLikelihoodFCN.h:127; ROOT::Fit::PoissonLikelihoodFCN::Type_tBaseObjFunction::Type_t Type_tDefinition PoissonLikelihoodFCN.h:56; ROOT::Fit::PoissonLikelihoodFCN::fIsExtendedbool fIsExtendedflag to indicate if is extended (when false is a Multinomial likelihood), default is trueDefinition PoissonLikelihoodFCN.h:203; ROOT::Fit::PoissonLikelihoodFCN::operator=PoissonLikelihoodFCN & operator=(const PoissonLikelihoodFCN &rhs)Assignment operator.Definition PoissonLikelihoodFCN.h:103; ROOT::Fit::PoissonLikelihoodFCN::PoissonLikelihoodFCNPoissonLikelihoodFCN(const std::shared_ptr< BinData > &data, const std::shared_ptr< IModelFunction > &func, int weight=0, bool extended=true, const ::ROOT::EExecutionPolicy &executionPolicy=::ROOT::EExecutionPolicy::kSequential)Constructor from unbin data set and model function (pdf)Definition PoissonLikelihoodFCN.h:61; ROOT::Fit::PoissonLikelihoodFCN::fWeightint fWeightflag to indicate if needs to evaluate using weight or weight squared (default weight = 0)Definition PoissonLikelihoodFCN.h:204; ROOT::Fit::PoissonLikelihoodFCN::TModelFunType::BackendType TDefinition PoissonLikelihoodFCN.h:49; ROOT::Fit::PoissonLikelihoodFCN::fNEffPointsunsigned int fNEffPointsnumber of effective points used in the fitDefinition PoissonLikelihoodFCN.h:206; ROOT::Fit::PoissonLikelihoodFCN::BaseFCNBasicFCN< DerivFunType, ModelFunType, BinData > BaseFCNDefinition PoissonLikelihoodFCN.h:50; ROOT::Fit::PoissonLikelihoodFCN::UseSumOfWeightsvoid UseSumOfWeights()Definition PoissonLikelihoodFCN.h:166; ROOT::Fit::PoissonLikelihoodFCN::fGradstd::vector< double > fGradfor derivativesDefinition PoissonLikelihoodFCN.h:208; ROOT::Fit::Poisson",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/PoissonLikelihoodFCN_8h_source.html:12695,extend,extended,12695,doc/master/PoissonLikelihoodFCN_8h_source.html,https://root.cern,https://root.cern/doc/master/PoissonLikelihoodFCN_8h_source.html,1,['extend'],['extended']
Modifiability,"onRegion (Region_t rega, Region_t regb, Region_t result) override;  Compute the union of rega and regb and return result region. ;  ; void UnmapWindow (Window_t id) override;  Unmap window from screen. ;  ; void Update (Int_t mode=0) override;  Flush (mode = 0, default) or synchronize (mode = 1) X output buffer. ;  ; void UpdateWindow (Int_t mode) override;  Update display. ;  ; void Warp (Int_t ix, Int_t iy, Window_t id=0) override;  Set pointer position. ;  ; void WMDeleteNotify (Window_t id) override;  Tell WM to send message when window is closed via WM. ;  ; Int_t WriteGIF (char *name) override;  Writes the current window into GIF file. ;  ; void WritePixmap (Int_t wid, UInt_t w, UInt_t h, char *pxname) override;  Write the pixmap wid in the bitmap file pxname. ;  ; void XorRegion (Region_t rega, Region_t regb, Region_t result) override;  Calculate the difference between the union and intersection of two regions. ;  ;  Public Member Functions inherited from TVirtualX;  TVirtualX ();  ;  TVirtualX (const char *name, const char *title);  Ctor of ABC. ;  ; virtual ~TVirtualX ();  ; virtual void BeginModalSessionFor (Window_t window);  Start a modal session for a dialog window. ;  ; virtual void CreateOpenGLContext (Int_t wid=0);  Creates OpenGL context for window ""wid"". ;  ; virtual Handle_t CreateOpenGLContext (Window_t windowID, Handle_t sharedContext);  Creates OpenGL context for window ""windowID"". ;  ; virtual Window_t CreateOpenGLWindow (Window_t parentID, UInt_t width, UInt_t height, const std::vector< std::pair< UInt_t, Int_t > > &format);  Create window with special pixel format. Noop everywhere except Cocoa. ;  ; virtual void DeleteOpenGLContext (Int_t wid=0);  Deletes OpenGL context for window ""wid"". ;  ; virtual void DispatchClientMessage (UInt_t messageID);  Force processing of event, sent by SendEvent before. ;  ; virtual UInt_t ExecCommand (TGWin32Command *code);  Executes the command ""code"" coming from the other threads (Win32) ;  ; virtual void Flu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGWin32.html:25192,inherit,inherited,25192,doc/master/classTGWin32.html,https://root.cern,https://root.cern/doc/master/classTGWin32.html,3,['inherit'],['inherited']
Modifiability,"onSender;  . Additional Inherited Members;  Public Types inherited from TVirtualPerfStats; enum  EEventType { ;   kUnDefined; , kPacket; , kStart; , kStop; , ;   kFile; , kFileOpen; , kFileRead; , kRate; , ;   kNumEventType. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TPerfStats.h>. Inheritance diagram for TPerfStats:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPerfStats(). TPerfStats::TPerfStats ; (; TList * ; input, . TList * ; output . ). private . Max resident memory used by this process. ; Normal constructor. ; Definition at line 118 of file TPerfStats.cxx. ◆ ~TPerfStats(). TPerfStats::~TPerfStats ; (; ). override . Destructor. ; Definition at line 377 of file TPerfStats.cxx. Member Function Documentation. ◆ Class(). static TClass * TPerfStats::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TPerfStats::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TPerfStats::Class_Version",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPerfStats.html:14667,inherit,inherited,14667,doc/master/classTPerfStats.html,https://root.cern,https://root.cern/doc/master/classTPerfStats.html,2,['inherit'],['inherited']
Modifiability,"onSequence;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TVirtualStreamerInfo;  TVirtualStreamerInfo (const TVirtualStreamerInfo &info);  copy constructor ;  ; TVirtualStreamerInfo & operator= (const TVirtualStreamerInfo &);  assignment operator ;  ; void ResetIsCompiled ();  ; void SetIsCompiled ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TVirtualStreamerInfo; Bool_t fIsBuilt: 1;  true if the StreamerInfo has been optimized ;  ; std::atomic< Bool_t > fIsCompiled;  true if the StreamerInfo has been 'built' (i.e. has all the StreamerElements it should have) ;  ; Bool_t fOptimized: 1;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Static Protected Attributes inherited from TVirtualStreamerInfo; static Bool_t fgCanDelete = kTRUE;  true if the StreamerInfo has been compiled (i.e. fully built, ready to use for streaming). ;  ; static TVirtualStreamerInfo * fgInfoFactory = nullptr;  ; static Bool_t fgOptimize = kTRUE;  ; static Bool_t fgStreamMemberWise = kTRUE;  . #include <TStreamerInfo.h>. Inheritance diagram for TStreamerInfo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ TCompInfo_t. typedef TCompInfo TStreamerInfo::TCompInfo_t. Definition at line 66 of file TStreamerInfo.h. Constructor & Destructor Documentation. ◆ TStreamerInfo() [1/3]. TStreamerInfo::TStreamerInfo ; (; const TStreamerInfo & ; ). privatedelete . ◆ TStreamerInfo() [2/3]. TStreamerInfo::TStreamerInfo ; (; ). Status bits See TVirtualStreamerInfo::EStatusBits for the values. ; Default ctor.; EReadWrite Enumerator See TVirtualStreamerInfo::EReadWrite for docum",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerInfo.html:31273,inherit,inherited,31273,doc/master/classTStreamerInfo.html,https://root.cern,https://root.cern/doc/master/classTStreamerInfo.html,2,['inherit'],['inherited']
Modifiability,"onState state, Bool_t emit);  Set check button state. ;  ;  Protected Member Functions inherited from TGTextButton; void DoRedraw () override;  Draw the text button. ;  ; void Init ();  Common initialization used by the different ctors. ;  ;  Protected Member Functions inherited from TGButton; virtual void SetToggleButton (Bool_t);  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; Pixel_t fColor;  color value of the button ;  ; TGColorPopup * fColorPopup;  color popup associated ;  ; TGGC fDrawGC;  drawing GC ;  ; TGPosition fPressPos;  position of frame on button press event ;  ;  Protected Attributes inherited from TGCheckButton; const TGPicture * fDisOff;  button disabled and was OFF picture ;  ; const TGPicture * fDisOn;  button disabled and was ON picture ;  ; const TGPicture * fOf",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGColorSelect.html:30473,inherit,inherited,30473,doc/master/classTGColorSelect.html,https://root.cern,https://root.cern/doc/master/classTGColorSelect.html,3,['inherit'],['inherited']
Modifiability,"onState state, Bool_t emit);  Set check button state. ;  ;  Protected Member Functions inherited from TGTextButton; void DoRedraw () override;  Draw the text button. ;  ; void Init ();  Common initialization used by the different ctors. ;  ;  Protected Member Functions inherited from TGButton; virtual void SetToggleButton (Bool_t);  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; Style_t fMarkerStyle;  marker style ;  ; const TGPicture * fPicture;  image used for popup window ;  ;  Protected Attributes inherited from TGedSelect; TGGC * fDrawGC;  ; TGedPopup * fPopup;  ;  Protected Attributes inherited from TGCheckButton; const TGPicture * fDisOff;  button disabled and was OFF picture ;  ; const TGPicture * fDisOn;  button disabled and was ON picture ;  ; const TGPicture * fOff;  button",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGedMarkerSelect.html:25968,inherit,inherited,25968,doc/master/classTGedMarkerSelect.html,https://root.cern,https://root.cern/doc/master/classTGedMarkerSelect.html,3,['inherit'],['inherited']
Modifiability,"onState state, Bool_t emit);  Set check button state. ;  ;  Protected Member Functions inherited from TGTextButton; void DoRedraw () override;  Draw the text button. ;  ; void Init ();  Common initialization used by the different ctors. ;  ;  Protected Member Functions inherited from TGButton; virtual void SetToggleButton (Bool_t);  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; Style_t fPattern;  ;  Protected Attributes inherited from TGedSelect; TGGC * fDrawGC;  ; TGedPopup * fPopup;  ;  Protected Attributes inherited from TGCheckButton; const TGPicture * fDisOff;  button disabled and was OFF picture ;  ; const TGPicture * fDisOn;  button disabled and was ON picture ;  ; const TGPicture * fOff;  button OFF picture ;  ; const TGPicture * fOn;  button ON picture ;  ; EButtonState fPre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGedPatternSelect.html:25955,inherit,inherited,25955,doc/master/classTGedPatternSelect.html,https://root.cern,https://root.cern/doc/master/classTGedPatternSelect.html,3,['inherit'],['inherited']
Modifiability,"onState state, Bool_t emit);  Set check button state. ;  ;  Protected Member Functions inherited from TGTextButton; void DoRedraw () override;  Draw the text button. ;  ; void Init ();  Common initialization used by the different ctors. ;  ;  Protected Member Functions inherited from TGButton; virtual void SetToggleButton (Bool_t);  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; const TGPicture * fDisOff;  button disabled and was OFF picture ;  ; const TGPicture * fDisOn;  button disabled and was ON picture ;  ; const TGPicture * fOff;  button OFF picture ;  ; const TGPicture * fOn;  button ON picture ;  ; EButtonState fPrevState;  previous check button state ;  ;  Protected Attributes inherited from TGTextButton; FontStruct_t fFontStruct;  ; Bool_t fHasOwnFont;  ; Int_t fHKeycode;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGCheckButton.html:29606,inherit,inherited,29606,doc/master/classTGCheckButton.html,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html,3,['inherit'],['inherited']
Modifiability,"onState state, Bool_t emit);  Set radio button state. ;  ;  Protected Member Functions inherited from TGTextButton; void DoRedraw () override;  Draw the text button. ;  ; void Init ();  Common initialization used by the different ctors. ;  ;  Protected Member Functions inherited from TGButton; virtual void SetToggleButton (Bool_t);  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; const TGPicture * fDisOff;  button disabled and was OFF picture ;  ; const TGPicture * fDisOn;  button disabled and was ON picture ;  ; const TGPicture * fOff;  button OFF picture ;  ; const TGPicture * fOn;  button ON picture ;  ; EButtonState fPrevState;  previous radio button state ;  ;  Protected Attributes inherited from TGTextButton; FontStruct_t fFontStruct;  ; Bool_t fHasOwnFont;  ; Int_t fHKeycode;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGRadioButton.html:29711,inherit,inherited,29711,doc/master/classTGRadioButton.html,https://root.cern,https://root.cern/doc/master/classTGRadioButton.html,3,['inherit'],['inherited']
Modifiability,"onString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TCanvasImp;  TCanvasImp (const TCanvasImp &ci);  ; virtual TVirtualPadPainter * CreatePadPainter ();  ; virtual Bool_t IsLocked ();  ; virtual Bool_t IsWeb () const;  ; virtual void Lock ();  ; TCanvasImp & operator= (const TCanvasImp &ci);  ; virtual Bool_t PerformUpdate (Bool_t);  ; virtual void Unlock ();  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootCanvas.html:37156,inherit,inherited,37156,doc/master/classTRootCanvas.html,https://root.cern,https://root.cern/doc/master/classTRootCanvas.html,3,['inherit'],['inherited']
Modifiability,"onTempl. template<class T > . using ROOT::Fit::Fitter::IModelFunctionTempl = ROOT::Math::IParamMultiFunctionTempl<T>. Definition at line 83 of file Fitter.h. ◆ MinuitFCN_t. typedef void(* ROOT::Fit::Fitter::MinuitFCN_t) (int &npar, double *gin, double &f, double *u, int flag). fit using user provided FCN with Minuit-like interface If npar = 0 it is assumed that the parameters are specified in the parameter settings created before For the options same consideration as in the previous method ; Definition at line 339 of file Fitter.h. Constructor & Destructor Documentation. ◆ Fitter() [1/3]. ROOT::Fit::Fitter::Fitter ; (; ). inline . Default constructor. ; Definition at line 102 of file Fitter.h. ◆ Fitter() [2/3]. ROOT::Fit::Fitter::Fitter ; (; const std::shared_ptr< FitResult > & ; result). Constructor from a result. ; Definition at line 51 of file Fitter.cxx. ◆ ~Fitter(). virtual ROOT::Fit::Fitter::~Fitter ; (; ). inlinevirtual . Destructor. ; Make it virtual in case users derive from Fitter class to extend it by adding new methods. This is needed to avoid a warning seen when doing from Python (see ROOT issue #12391 ). Note that the Fitter class does not provide virtual functions to be re-implemented by derived classes. ; Definition at line 117 of file Fitter.h. ◆ Fitter() [3/3]. ROOT::Fit::Fitter::Fitter ; (; const Fitter & ; ). delete . Copy constructor (disabled, class is not copyable) . Member Function Documentation. ◆ ApplyWeightCorrection(). bool ROOT::Fit::Fitter::ApplyWeightCorrection ; (; const ROOT::Math::IMultiGenFunction & ; loglw2, . bool ; minimizeW2L = false . ). apply correction in the error matrix for the weights for likelihood fits This method can be called only after a fit. ; The passed function (loglw2) is a log-likelihood function implemented using the sum of weight squared When using FitConfig.SetWeightCorrection() this correction is applied automatically when doing a likelihood fit (binned or unbinned) ; Definition at line 886 of file Fitter.cxx",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1Fitter.html:16427,extend,extend,16427,doc/master/classROOT_1_1Fit_1_1Fitter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1Fitter.html,1,['extend'],['extend']
Modifiability,"onTraits< LorentzRotation >;  CRotationTraits< Quaternion >;  CRotationTraits< Rotation3D >;  CRotationTraits< RotationX >;  CRotationTraits< RotationY >;  CRotationTraits< RotationZ >;  CRotationXRotation class representing a 3D rotation about the X axis by the angle of rotation ;  CRotationYRotation class representing a 3D rotation about the Y axis by the angle of rotation ;  CRotationZRotation class representing a 3D rotation about the Z axis by the angle of rotation ;  CRotationZYXRotation class with the (3D) rotation represented by angles describing first a rotation of an angle phi (yaw) about the Z axis, followed by a rotation of an angle theta (pitch) about the new Y' axis, followed by a third rotation of an angle psi (roll) about the final X'' axis ;  CRowOffsetsStatic structure to keep the conversion from (i,j) to offsets in the storage data for a symmetric matrix ;  CSDeterminantDsfact ;  CSinVariableTransformationSin Transformation class for dealing with double bounded variables ;  CSInverterDsinv ;  CSkipFunction;  CSkipFunction< 0 >;  ►CSMatrixSMatrix: a generic fixed size D1 x D2 Matrix class ;  CSMatrixRow;  CSMatrixRow_const;  CSMatrixIdentity;  CSMatrixNoInit;  CSqrUnary Square Operation Class ;  CSqrtUnary Square Root Operation Class ;  CSqrtLowVariableTransformationSqrt Transformation class for dealing with lower bounded variables ;  CSqrtUpVariableTransformationSqrt Transformation class for dealing with upper bounded variables ;  CStdEngineWrapper class for std::random generator to be included in ROOT ;  CStdEngineType;  CStdEngineType< std::knuth_b >;  CStdEngineType< std::minstd_rand >;  CStdEngineType< std::mt19937 >;  CStdEngineType< std::mt19937_64 >;  CStdEngineType< std::random_device >;  CStdEngineType< std::ranlux24 >;  CStdEngineType< std::ranlux48 >;  CStdRandomEngine;  CSVectorSVector: a generic fixed size Vector class ;  CTDataPoint;  CTDataPointN;  CTensorMulOpClass for Tensor Multiplication (outer product) of two vectors giving a m",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/annotated.html:48867,variab,variables,48867,doc/v608/annotated.html,https://root.cern,https://root.cern/doc/v608/annotated.html,2,['variab'],['variables']
Modifiability,"onTraits< LorentzRotation >;  CRotationTraits< Quaternion >;  CRotationTraits< Rotation3D >;  CRotationTraits< RotationX >;  CRotationTraits< RotationY >;  CRotationTraits< RotationZ >;  CRotationXRotation class representing a 3D rotation about the X axis by the angle of rotation ;  CRotationYRotation class representing a 3D rotation about the Y axis by the angle of rotation ;  CRotationZRotation class representing a 3D rotation about the Z axis by the angle of rotation ;  CRotationZYXRotation class with the (3D) rotation represented by angles describing first a rotation of an angle phi (yaw) about the Z axis, followed by a rotation of an angle theta (pitch) about the new Y' axis, followed by a third rotation of an angle psi (roll) about the final X'' axis ;  CRowOffsetsStatic structure to keep the conversion from (i,j) to offsets in the storage data for a symmetric matrix ;  CSDeterminantDsfact ;  CSinVariableTransformationSin Transformation class for dealing with double bounded variables ;  CSInverterDsinv ;  ►CSMatrixSMatrix: a generic fixed size D1 x D2 Matrix class ;  CSMatrixRow;  CSMatrixRow_const;  CSMatrixIdentity;  CSMatrixNoInit;  CSqrUnary Square Operation Class ;  CSqrtUnary Square Root Operation Class ;  CSqrtLowVariableTransformationSqrt Transformation class for dealing with lower bounded variables ;  CSqrtUpVariableTransformationSqrt Transformation class for dealing with upper bounded variables ;  CStdEngineWrapper class for std::random generator to be included in ROOT ;  CStdRandomEngine;  CSVectorSVector: a generic fixed size Vector class ;  CTDataPoint;  CTDataPointN;  CTensorMulOpClass for Tensor Multiplication (outer product) of two vectors giving a matrix ;  CTRandomEngine;  CTransform3DBasic 3D Transformation class describing a rotation and then a translation The internal data are a 3D rotation data (represented as a 3x3 matrix) and a 3D vector data ;  CTranslation3DClass describing a 3 dimensional translation ;  CTransposeOpClass for Transpos",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html606/annotated.html:44648,variab,variables,44648,root/html606/annotated.html,https://root.cern,https://root.cern/root/html606/annotated.html,2,['variab'],['variables']
Modifiability,onTreeDensity. TMVA::PDEFoamDiscriminantDensity. TMVA::PDEFoamEventDensity. TMVA::PDEFoamTargetDensity. TMVA::PDEFoamDiscriminant←. TMVA::PDEFoamDecisionTree. TMVA::PDEFoamDiscriminantDensity. TMVA::PDEFoamEvent←. TMVA::PDEFoamMultiTarget. TMVA::PDEFoamEventDensity. TMVA::PDEFoamKernelBase←. TMVA::PDEFoamKernelGauss. TMVA::PDEFoamKernelLinN. TMVA::PDEFoamKernelTrivial. TMVA::PDEFoamKernelGauss. TMVA::PDEFoamKernelLinN. TMVA::PDEFoamKernelTrivial. TMVA::PDEFoamMultiTarget. TMVA::PDEFoamTarget. TMVA::PDEFoamTargetDensity. TMVA::PDEFoamVect. TMVA::PDF. TMVA::Reader. TMVA::RootFinder. TMVA::SdivSqrtSplusB. TMVA::SimulatedAnnealingFitter. TMVA::TActivationIdentity. TMVA::TActivationRadial. TMVA::TActivationSigmoid. TMVA::TActivationTanh. TMVA::TNeuron. TMVA::TNeuronInputAbs. TMVA::TNeuronInputSqSum. TMVA::TNeuronInputSum. TMVA::TSpline1. TMVA::TSpline2. TMVA::TSynapse. TMVA::Timer. TMVA::VariableDecorrTransform. TMVA::VariableGaussTransform. TMVA::VariableIdentityTransform. TMVA::VariableNormalizeTransform. TMVA::VariablePCATransform. TMVA::VariableRearrangeTransform. TMVA::VariableTransformBase←. TMVA::VariableDecorrTransform. TMVA::VariableGaussTransform. TMVA::VariableIdentityTransform. TMVA::VariableNormalizeTransform. TMVA::VariablePCATransform. TMVA::VariableRearrangeTransform. TMacro←. TEveMacro. TMap. TMapFile. TMapIter. TMarker. TMarker3DBox. TMaterial←. TMixture. TMathText. TMatrixT<double>. TMatrixT<float>. TMatrixTBase<double>←. TMatrixT<double>. TMatrixTSparse<double>. TMatrixTSym<double>. TMatrixTBase<float>←. TMatrixT<float>. TMatrixTSparse<float>. TMatrixTSym<float>. TMatrixTColumn<double>. TMatrixTColumn<float>. TMatrixTDiag<double>. TMatrixTDiag<float>. TMatrixTFlat<double>. TMatrixTFlat<float>. TMatrixTLazy<double>←. THaarMatrixT<double>. THilbertMatrixT<double>. TMatrixTLazy<float>←. THaarMatrixT<float>. THilbertMatrixT<float>. TMatrixTRow<double>. TMatrixTRow<float>. TMatrixTSparse<double>. TMatrixTSparse<float>. TMatrixTSparseDiag<double>. TMatrixTS,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ClassHierarchy.html:77185,Variab,VariableNormalizeTransform,77185,root/html534/ClassHierarchy.html,https://root.cern,https://root.cern/root/html534/ClassHierarchy.html,2,['Variab'],['VariableNormalizeTransform']
Modifiability,"on] True if fVar[i] has a variable index ;  ; Double_t * fVmax;  ![fDimension] Maxima of varexp columns ;  ; Double_t * fVmin;  ![fDimension] Minima of varexp columns ;  ; Double_t * fW;  ![fSelectedRows]Local buffer for weights ;  ; Double_t fWeight;  Tree weight (see TTree::SetWeight) ;  ;  Protected Attributes inherited from TSelector; EAbort fAbort;  Abort status. ;  ; TList * fInput;  List of objects available during processing. ;  ; TObject * fObject;  ! Current object if processing object (vs. TTree) ;  ; TString fOption;  Option given to TTree::Process. ;  ; TSelectorList * fOutput;  ! List of objects created during processing ;  ; Long64_t fStatus;  Selector status. ;  . Private Member Functions;  REvePointSelector (const REvePointSelector &)=delete;  ; REvePointSelector & operator= (const REvePointSelector &)=delete;  . Additional Inherited Members;  Public Types inherited from TSelector; enum  EAbort { kContinue; , kAbortProcess; , kAbortFile; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TSelectorDraw; enum  EStatusBits { kWarn = (1ULL << ( 12 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSelectorDraw; virtual void ClearFormula ();  Delete internal buffers. ;  ; virtual bool CompileVariables (const char *varexp="""", const char *selection=""""); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REvePointSelector.html:16980,inherit,inherited,16980,doc/master/classROOT_1_1Experimental_1_1REvePointSelector.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REvePointSelector.html,2,['inherit'],['inherited']
Modifiability,"on] True if fVar[i] has a variable index ;  ; Double_t * fVmax;  ![fDimension] Maxima of varexp columns ;  ; Double_t * fVmin;  ![fDimension] Minima of varexp columns ;  ; Double_t * fW;  ![fSelectedRows]Local buffer for weights ;  ; Double_t fWeight;  Tree weight (see TTree::SetWeight) ;  ;  Protected Attributes inherited from TSelector; EAbort fAbort;  Abort status. ;  ; TList * fInput;  List of objects available during processing. ;  ; TObject * fObject;  ! Current object if processing object (vs. TTree) ;  ; TString fOption;  Option given to TTree::Process. ;  ; TSelectorList * fOutput;  ! List of objects created during processing ;  ; Long64_t fStatus;  Selector status. ;  . Private Member Functions;  TEvePointSelector (const TEvePointSelector &)=delete;  ; TEvePointSelector & operator= (const TEvePointSelector &)=delete;  . Additional Inherited Members;  Public Types inherited from TSelector; enum  EAbort { kContinue; , kAbortProcess; , kAbortFile; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TSelectorDraw; enum  EStatusBits { kWarn = (1ULL << ( 12 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSelectorDraw; virtual void ClearFormula ();  Delete internal buffers. ;  ; virtual bool CompileVariables (const char *varexp="""", const char *selection=""""); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEvePointSelector.html:16978,inherit,inherited,16978,doc/master/classTEvePointSelector.html,https://root.cern,https://root.cern/doc/master/classTEvePointSelector.html,2,['inherit'],['inherited']
Modifiability,"on_Code = 262656); Read the data block. void ClearNodeAndAllDaughters(); clear the nodes (their S/N, Nevents etc), just keep the structure of the tree. void ResetValidationData(); temporary stored node values (number of events, etc.) that originate; not from the training but from the validation data (used in pruning). void PrintPrune(ostream& os) const; printout of the node (can be read in with ReadDataRecord). void PrintRecPrune(ostream& os) const; recursive printout of the node and its daughters. void SetCC(Double_t cc). Float_t GetSampleMin(UInt_t ivar) const; return the minimum of variable ivar from the training sample; that pass/end up in this node. Float_t GetSampleMax(UInt_t ivar) const; return the maximum of variable ivar from the training sample; that pass/end up in this node. void SetSampleMin(UInt_t ivar, Float_t xmin); set the minimum of variable ivar from the training sample; that pass/end up in this node. void SetSampleMax(UInt_t ivar, Float_t xmax); set the maximum of variable ivar from the training sample; that pass/end up in this node. void ReadAttributes(void* node, UInt_t tmva_Version_Code = 262656). void AddAttributesToNode(void* node) const; add attribute to xml. void SetFisherCoeff(Int_t ivar, Double_t coeff); set fisher coefficients. void AddContentToNode(stringstream& s) const; adding attributes to tree node (well, was used in BinarySearchTree,; and somehow I guess someone programmed it such that we need this in; this tree too, although we don't..). void ReadContent(stringstream& s); reading attributes from tree node (well, was used in BinarySearchTree,; and somehow I guess someone programmed it such that we need this in; this tree too, although we don't..). TMVA::MsgLogger& Log(). Node* CreateNode() const; { return new DecisionTreeNode(); }. void SetNFisherCoeff(Int_t nvars); {fFisherCoeff.resize(nvars);}. UInt_t GetNFisherCoeff() const; set fisher coefficients. { return fFisherCoeff.size();}. Double_t GetFisherCoeff(Int_t ivar) const; get f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__DecisionTreeNode.html:8447,variab,variable,8447,root/html602/TMVA__DecisionTreeNode.html,https://root.cern,https://root.cern/root/html602/TMVA__DecisionTreeNode.html,2,['variab'],['variable']
Modifiability,"on_Code = 262657); Read the data block. void ClearNodeAndAllDaughters(); clear the nodes (their S/N, Nevents etc), just keep the structure of the tree. void ResetValidationData(); temporary stored node values (number of events, etc.) that originate; not from the training but from the validation data (used in pruning). void PrintPrune(ostream& os) const; printout of the node (can be read in with ReadDataRecord). void PrintRecPrune(ostream& os) const; recursive printout of the node and its daughters. void SetCC(Double_t cc). Float_t GetSampleMin(UInt_t ivar) const; return the minimum of variable ivar from the training sample; that pass/end up in this node. Float_t GetSampleMax(UInt_t ivar) const; return the maximum of variable ivar from the training sample; that pass/end up in this node. void SetSampleMin(UInt_t ivar, Float_t xmin); set the minimum of variable ivar from the training sample; that pass/end up in this node. void SetSampleMax(UInt_t ivar, Float_t xmax); set the maximum of variable ivar from the training sample; that pass/end up in this node. void ReadAttributes(void* node, UInt_t tmva_Version_Code = 262657). void AddAttributesToNode(void* node) const; add attribute to xml. void SetFisherCoeff(Int_t ivar, Double_t coeff); set fisher coefficients. void AddContentToNode(stringstream& s) const; adding attributes to tree node (well, was used in BinarySearchTree,; and somehow I guess someone programmed it such that we need this in; this tree too, although we don't..). void ReadContent(stringstream& s); reading attributes from tree node (well, was used in BinarySearchTree,; and somehow I guess someone programmed it such that we need this in; this tree too, although we don't..). TMVA::MsgLogger& Log(). Node* CreateNode() const; { return new DecisionTreeNode(); }. void SetNFisherCoeff(Int_t nvars); {fFisherCoeff.resize(nvars);}. UInt_t GetNFisherCoeff() const; set fisher coefficients. { return fFisherCoeff.size();}. Double_t GetFisherCoeff(Int_t ivar) const; get f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMVA__DecisionTreeNode.html:8455,variab,variable,8455,root/html604/TMVA__DecisionTreeNode.html,https://root.cern,https://root.cern/root/html604/TMVA__DecisionTreeNode.html,2,['variab'],['variable']
Modifiability,"on_t *opt="""") override;  Override of virtual TVirtualViewer3D::ObjectPaint(). ;  ; Bool_t OpenComposite (const TBuffer3D &buffer, Bool_t *addChildren=nullptr) override;  Open new composite container. ;  ; void PadPaint (TVirtualPad *pad) override;  Entry point for updating scene contents via VirtualViewer3D interface. ;  ; virtual void PadPaintFromViewer (TGLViewer *viewer);  Entry point for requesting update of scene's contents from gl-viewer. ;  ; Bool_t PreferLocalFrame () const override;  ; void SetPad (TVirtualPad *p);  ; void SetSmartRefresh (Bool_t smart_ref);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void SubPadPaint (TVirtualPad *pad);  Iterate over pad-primitives and import them. ;  ;  Public Member Functions inherited from TVirtualViewer3D; virtual ~TVirtualViewer3D ();  ; virtual void DrawViewer ();  ; TClass * IsA () const override;  ; virtual void PrintObjects ();  ; virtual void ResetCameras ();  ; virtual void ResetCamerasAfterNextUpdate ();  ; virtual TObject * SelectObject (Int_t, Int_t);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLScenePad.html:3180,inherit,inherited,3180,doc/master/classTGLScenePad.html,https://root.cern,https://root.cern/doc/master/classTGLScenePad.html,1,['inherit'],['inherited']
Modifiability,"on_t *option="""")Save a primitive as a C++ statement(s) on output stream ""out"".Definition TObject.cxx:757; TObject::Writevirtual Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0)Write this object to the current directory.Definition TObject.cxx:886; TObject::kOnlyPrepStep@ kOnlyPrepStepUsed to request that the class specific implementation of TObject::Write just prepare the objects to ...Definition TObject.h:106; TObject::SaveAsvirtual void SaveAs(const char *filename="""", Option_t *option="""") constSave this object in the file specified by filename.Definition TObject.cxx:692; TObject::Deletevirtual void Delete(Option_t *option="""")Delete this object.Definition TObject.cxx:254; TObject::GetDtorOnlystatic Longptr_t GetDtorOnly()Return destructor only flag.Definition TObject.cxx:1082; TObject::SetBitvoid SetBit(UInt_t f, Bool_t set)Set or unset the user status bits as specified in f.Definition TObject.cxx:786; TObject::InheritsFromvirtual Bool_t InheritsFrom(const char *classname) constReturns kTRUE if object inherits from class ""classname"".Definition TObject.cxx:530; TObject::GetObjectStatstatic Bool_t GetObjectStat()Get status of object stat flag.Definition TObject.cxx:1067; TObject::Copyvirtual void Copy(TObject &object) constCopy this to obj.Definition TObject.cxx:146; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TObject::SetDrawOptionvirtual void SetDrawOption(Option_t *option="""")Set drawing option for object.Definition TObject.cxx:770; TObject::Fatalvirtual void Fatal(const char *method, const char *msgfmt,...) constIssue fatal error message.Definition TObject.cxx:1021; TObject::SetDtorOnlystatic void SetDtorOnly(void *obj)Set destructor only flag.Definition TObject.cxx:1090; TObject::SetUniqueIDvirtual void SetUniqueID(UInt_t uid)Set the unique object id.Definition TObject.cxx:797; TObject::GetTitlevirtual const char * GetTitle() constReturns title of object.Def",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TObject_8cxx_source.html:55075,inherit,inherits,55075,doc/master/TObject_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TObject_8cxx_source.html,1,['inherit'],['inherits']
Modifiability,"on_t *option=""ID"");  Set the list of classes for which the hierarchy is to be drawn See Paint for the syntax. ;  ; virtual void SetLabelDx (Float_t labeldx=0.15);  Set the size along x of the TPaveLabel showing the class name. ;  ; virtual void SetSourceDir (const char *dir=""src"");  ; virtual void SetYoffset (Float_t offset=0);  Set the offset at the top of the picture The default offset is computed automatically taking into account classes not inheriting from TObject. ;  ; virtual void ShowClassesUsedBy (const char *classes);  mark classes used by the list of classes in classes ;  ; virtual void ShowClassesUsing (const char *classes);  mark classes using any class in the list of classes in classes ;  ; virtual void ShowLinks (Option_t *option=""HMR"");  Set link options in the ClassTree object. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TClassTree. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClassTree.html:7285,inherit,inherited,7285,doc/master/classTClassTree.html,https://root.cern,https://root.cern/doc/master/classTClassTree.html,1,['inherit'],['inherited']
Modifiability,"on_t *toption="""");  Reset this marker attributes to the default values. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attributes. ;  ; virtual void SetMarkerColor (Color_t mcolor=1);  Set the marker color. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; virtual void SetMarkerSize (Size_t msize=1);  Set the marker size. ;  ; virtual void SetMarkerStyle (Style_t mstyle=1);  Set the marker style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TVirtualPadPainter; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualPadPainter * PadPainter (Option_t *opt="""");  Create a pad painter of specified type. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const cha",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebPadPainter.html:9205,inherit,inherited,9205,doc/master/classTWebPadPainter.html,https://root.cern,https://root.cern/doc/master/classTWebPadPainter.html,1,['inherit'],['inherited']
Modifiability,"on_t *toption="""");  Reset this marker attributes to the default values. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attributes. ;  ; virtual void SetMarkerColor (Color_t mcolor=1);  Set the marker color. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; virtual void SetMarkerSize (Size_t msize=1);  Set the marker size. ;  ; virtual void SetMarkerStyle (Style_t mstyle=1);  Set the marker style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; virtual void Sizeof3D () const;  Set total size of this 3D object (used by X3D interface). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TArrayC;  TArrayC ();  Default TArrayC ctor. ;  ;  TArrayC (const TArrayC &array);  Copy constructor. ;  ;  TArrayC (Int_t n);  Create TArrayC object and set array size to n chars. ;  ;  TArrayC (Int_t n, const Char_t *array);  Create TArrayC object and initialize it with values of array. ;  ; virtual ~TArrayC ();  Delete TArrayC object. ;  ; void AddAt (Char_t c, Int_t i);  Add char c at position i. Check for out of bounds. ;  ; void Adopt (Int_t n, Char_t *array);  Adopt array arr into TArrayC, i.e. ;  ; Char_t At (Int_t i) const;  ; void Copy (TArrayC &array) const;  ; Char_t * GetArray ();  ; const Char_t * GetArray () const;  ; Double_t GetAt (Int_t i) const override;  ; Stat_t GetSum () const;  ; TArrayC & operator= (const TArrayC &rhs);  TArrayC assignment operator. ;  ; Char_t & operator[] (Int_t i);  ; Char_t operator[] (Int_t i) const;  ; void Reset (Char_t val=0);  ; void Set (Int_t n) override;  Set size of this array to n chars. ;  ; void S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLTH3Composition.html:44493,inherit,inherited,44493,doc/master/classTGLTH3Composition.html,https://root.cern,https://root.cern/doc/master/classTGLTH3Composition.html,2,['inherit'],['inherited']
Modifiability,"on_t *toption="""");  Reset this marker attributes to the default values. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attributes. ;  ; virtual void SetMarkerColor (Color_t mcolor=1);  Set the marker color. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; virtual void SetMarkerSize (Size_t msize=1);  Set the marker size. ;  ; virtual void SetMarkerStyle (Style_t mstyle=1);  Set the marker style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; virtual void Sizeof3D () const;  Set total size of this 3D object (used by X3D interface). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TArrayD;  TArrayD ();  Default TArrayD ctor. ;  ;  TArrayD (const TArrayD &array);  Copy constructor. ;  ;  TArrayD (Int_t n);  Create TArrayD object and set array size to n doubles. ;  ;  TArrayD (Int_t n, const Double_t *array);  Create TArrayD object and initialize it with values of array. ;  ; virtual ~TArrayD ();  Delete TArrayD object. ;  ; void AddAt (Double_t c, Int_t i);  Set the double c value at position i in the array. ;  ; void Adopt (Int_t n, Double_t *array);  Adopt array arr into TArrayD, i.e. ;  ; Double_t At (Int_t i) const;  ; void Copy (TArrayD &array) const;  ; Double_t * GetArray ();  ; const Double_t * GetArray () const;  ; Double_t GetAt (Int_t i) const override;  ; Stat_t GetSum () const;  ; TArrayD & operator= (const TArrayD &rhs);  TArrayD assignment operator. ;  ; Double_t & operator[] (Int_t i);  ; Double_t operator[] (Int_t i) const;  ; void Reset ();  ; void Reset (Double_t val);  ; void Set (Int_t n) override;  Set size o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3D.html:42111,inherit,inherited,42111,doc/master/classTH3D.html,https://root.cern,https://root.cern/doc/master/classTH3D.html,2,['inherit'],['inherited']
Modifiability,"on_t *toption="""");  Reset this marker attributes to the default values. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attributes. ;  ; virtual void SetMarkerColor (Color_t mcolor=1);  Set the marker color. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; virtual void SetMarkerSize (Size_t msize=1);  Set the marker size. ;  ; virtual void SetMarkerStyle (Style_t mstyle=1);  Set the marker style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; virtual void Sizeof3D () const;  Set total size of this 3D object (used by X3D interface). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TArrayF;  TArrayF ();  Default TArrayF ctor. ;  ;  TArrayF (const TArrayF &array);  Copy constructor. ;  ;  TArrayF (Int_t n);  Create TArrayF object and set array size to n floats. ;  ;  TArrayF (Int_t n, const Float_t *array);  Create TArrayF object and initialize it with values of array. ;  ; virtual ~TArrayF ();  Delete TArrayF object. ;  ; void AddAt (Float_t c, Int_t i);  Add float c at position i. Check for out of bounds. ;  ; void Adopt (Int_t n, Float_t *array);  Adopt array arr into TArrayF, i.e. ;  ; Float_t At (Int_t i) const;  ; void Copy (TArrayF &array) const;  ; Float_t * GetArray ();  ; const Float_t * GetArray () const;  ; Double_t GetAt (Int_t i) const override;  ; Stat_t GetSum () const;  ; TArrayF & operator= (const TArrayF &rhs);  TArrayF assignment operator. ;  ; Float_t & operator[] (Int_t i);  ; Float_t operator[] (Int_t i) const;  ; void Reset ();  ; void Reset (Float_t val);  ; void Set (Int_t n) override;  Set size of this ar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3F.html:42054,inherit,inherited,42054,doc/master/classTH3F.html,https://root.cern,https://root.cern/doc/master/classTH3F.html,1,['inherit'],['inherited']
Modifiability,"on_t *toption="""");  Reset this marker attributes to the default values. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attributes. ;  ; virtual void SetMarkerColor (Color_t mcolor=1);  Set the marker color. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; virtual void SetMarkerSize (Size_t msize=1);  Set the marker size. ;  ; virtual void SetMarkerStyle (Style_t mstyle=1);  Set the marker style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; virtual void Sizeof3D () const;  Set total size of this 3D object (used by X3D interface). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TArrayI;  TArrayI ();  Default TArrayI ctor. ;  ;  TArrayI (const TArrayI &array);  Copy constructor. ;  ;  TArrayI (Int_t n);  Create TArrayI object and set array size to n integers. ;  ;  TArrayI (Int_t n, const Int_t *array);  Create TArrayI object and initialize it with values of array. ;  ; virtual ~TArrayI ();  Delete TArrayI object. ;  ; void AddAt (Int_t c, Int_t i);  Add Int_t c at position i. Check for out of bounds. ;  ; void Adopt (Int_t n, Int_t *array);  Adopt array arr into TArrayI, i.e. ;  ; Int_t At (Int_t i) const;  ; void Copy (TArrayI &array) const;  ; Int_t * GetArray ();  ; const Int_t * GetArray () const;  ; Double_t GetAt (Int_t i) const override;  ; Stat_t GetSum () const;  ; TArrayI & operator= (const TArrayI &rhs);  TArrayI assignment operator. ;  ; Int_t & operator[] (Int_t i);  ; Int_t operator[] (Int_t i) const;  ; void Reset ();  ; void Reset (Int_t val);  ; void Set (Int_t n) override;  Set size of this array to n ints. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3I.html:42043,inherit,inherited,42043,doc/master/classTH3I.html,https://root.cern,https://root.cern/doc/master/classTH3I.html,1,['inherit'],['inherited']
Modifiability,"on_t *toption="""");  Reset this marker attributes to the default values. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attributes. ;  ; virtual void SetMarkerColor (Color_t mcolor=1);  Set the marker color. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; virtual void SetMarkerSize (Size_t msize=1);  Set the marker size. ;  ; virtual void SetMarkerStyle (Style_t mstyle=1);  Set the marker style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAtt3D;  TAtt3D ();  ; virtual ~TAtt3D ();  ; virtual void Sizeof3D () const;  Set total size of this 3D object (used by X3D interface). ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TArrayS;  TArrayS ();  Default TArrayS ctor. ;  ;  TArrayS (const TArrayS &array);  Copy constructor. ;  ;  TArrayS (Int_t n);  Create TArrayS object and set array size to n shorts. ;  ;  TArrayS (Int_t n, const Short_t *array);  Create TArrayS object and initialize it with values of array. ;  ; virtual ~TArrayS ();  Delete TArrayS object. ;  ; void AddAt (Short_t c, Int_t i);  Add short c at position i. Check for out of bounds. ;  ; void Adopt (Int_t n, Short_t *array);  Adopt array arr into TArrayS, i.e. ;  ; Short_t At (Int_t i) const;  ; void Copy (TArrayS &array) const;  ; Short_t * GetArray ();  ; const Short_t * GetArray () const;  ; Double_t GetAt (Int_t i) const override;  ; Stat_t GetSum () const;  ; TArrayS & operator= (const TArrayS &rhs);  TArrayS assignment operator. ;  ; Short_t & operator[] (Int_t i);  ; Short_t operator[] (Int_t i) const;  ; void Reset ();  ; void Reset (Short_t val);  ; void Set (Int_t n) override;  Set size of this ar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3S.html:41913,inherit,inherited,41913,doc/master/classTH3S.html,https://root.cern,https://root.cern/doc/master/classTH3S.html,1,['inherit'],['inherited']
Modifiability,"on_t result) override;  Computes the union of two regions. ;  ; void UnmapWindow (Window_t wid) override;  Unmaps the specified window ""id"". ;  ; void Update (Int_t mode) override;  Flushes (mode = 0, default) or synchronizes (mode = 1) X output buffer. ;  ; void UpdateWindow (Int_t mode) override;  Updates or synchronises client and server once (not permanent). ;  ; void Warp (Int_t ix, Int_t iy, Window_t wid) override;  Sets the pointer position. ;  ; void WMDeleteNotify (Window_t wid) override;  Tells WM to send message when window is closed via WM. ;  ; Int_t WriteGIF (char *name) override;  Writes the current window into GIF file. ;  ; void WritePixmap (Int_t wid, UInt_t w, UInt_t h, char *pxname) override;  Writes the pixmap ""wid"" in the bitmap file ""pxname"". ;  ; void XorRegion (Region_t rega, Region_t regb, Region_t result) override;  Calculates the difference between the union and intersection of two regions. ;  ;  Public Member Functions inherited from TVirtualX;  TVirtualX ();  ;  TVirtualX (const char *name, const char *title);  Ctor of ABC. ;  ; virtual ~TVirtualX ();  ; virtual void BeginModalSessionFor (Window_t window);  Start a modal session for a dialog window. ;  ; virtual void DispatchClientMessage (UInt_t messageID);  Force processing of event, sent by SendEvent before. ;  ; EDrawMode GetDrawMode ();  ; virtual FontStruct_t GetGCFont (GContext_t gc);  Return the font associated with the graphics context gc. ;  ; virtual void GetTextExtent (UInt_t &w, UInt_t &h, wchar_t *mess);  Returns the size of the specified character string ""mess"". ;  ; TClass * IsA () const override;  ; virtual void MapGCFont (GContext_t, FontStruct_t);  Map the XftFont with the Graphics Context using it. ;  ; void SetFillColor (Color_t cindex) override;  Sets color index ""cindex"" for fill areas. ;  ; void SetFillStyle (Style_t style) override;  Sets fill area style. ;  ; void SetLineColor (Color_t cindex) override;  Sets color index ""cindex"" for drawing lines. ;  ; void Se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGQuartz.html:31586,inherit,inherited,31586,doc/master/classTGQuartz.html,https://root.cern,https://root.cern/doc/master/classTGQuartz.html,1,['inherit'],['inherited']
Modifiability,"on_t result) override;  Computes the union of two regions. ;  ; void UnmapWindow (Window_t wid) override;  Unmaps the specified window ""id"". ;  ; void Update (Int_t mode) override;  Flushes (mode = 0, default) or synchronizes (mode = 1) X output buffer. ;  ; void UpdateWindow (Int_t mode) override;  Updates or synchronises client and server once (not permanent). ;  ; void Warp (Int_t ix, Int_t iy, Window_t wid) override;  Sets the pointer position. ;  ; void WMDeleteNotify (Window_t wid) override;  Tells WM to send message when window is closed via WM. ;  ; Int_t WriteGIF (char *name) override;  Writes the current window into GIF file. ;  ; void WritePixmap (Int_t wid, UInt_t w, UInt_t h, char *pxname) override;  Writes the pixmap ""wid"" in the bitmap file ""pxname"". ;  ; void XorRegion (Region_t rega, Region_t regb, Region_t result) override;  Calculates the difference between the union and intersection of two regions. ;  ;  Public Member Functions inherited from TVirtualX;  TVirtualX ();  ;  TVirtualX (const char *name, const char *title);  Ctor of ABC. ;  ; virtual ~TVirtualX ();  ; virtual void BeginModalSessionFor (Window_t window);  Start a modal session for a dialog window. ;  ; virtual void DispatchClientMessage (UInt_t messageID);  Force processing of event, sent by SendEvent before. ;  ; virtual void DrawBox (Int_t x1, Int_t y1, Int_t x2, Int_t y2, EBoxMode mode);  Draws a box between [x1,y1] and [x2,y2] according to the ""mode"". ;  ; virtual void DrawCellArray (Int_t x1, Int_t y1, Int_t x2, Int_t y2, Int_t nx, Int_t ny, Int_t *ic);  Draws a cell array. ;  ; virtual void DrawFillArea (Int_t n, TPoint *xy);  Fills area described by the polygon. ;  ; virtual void DrawLine (Int_t x1, Int_t y1, Int_t x2, Int_t y2);  Draws a line. ;  ; virtual void DrawPolyLine (Int_t n, TPoint *xy);  Draws a line through all points in the list. ;  ; virtual void DrawPolyMarker (Int_t n, TPoint *xy);  Draws ""n"" markers with the current attributes at position [x,y]. ;  ; virtual vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGCocoa.html:28878,inherit,inherited,28878,doc/master/classTGCocoa.html,https://root.cern,https://root.cern/doc/master/classTGCocoa.html,1,['inherit'],['inherited']
Modifiability,"on_t vClVersion = buf.ReadVersionForMemberWise( valueClass );; 1140 ; 1141 TVirtualCollectionProxy::TPushPop helper( oldProxy, (char*)addr );; 1142 Int_t nobjects;; 1143 buf.ReadInt(nobjects);; 1144 void* alternative = oldProxy->Allocate(nobjects,true);; 1145 if (nobjects) {; 1146 TActionSequence *actions = oldProxy->GetReadMemberWiseActions( vClVersion );; 1147 ; 1148 char startbuf[TVirtualCollectionProxy::fgIteratorArenaSize];; 1149 char endbuf[TVirtualCollectionProxy::fgIteratorArenaSize];; 1150 void *begin = &(startbuf[0]);; 1151 void *end = &(endbuf[0]);; 1152 config->fCreateIterators(alternative, &begin, &end, oldProxy);; 1153 // We can not get here with a split vector of pointer, so we can indeed assume; 1154 // that actions->fConfiguration != null.; 1155 buf.ApplySequence(*actions, begin, end);; 1156 if (begin != &(startbuf[0])) {; 1157 // assert(end != endbuf);; 1158 config->fDeleteTwoIterators(begin,end);; 1159 }; 1160 }; 1161 oldProxy->Commit(alternative);; 1162 ; 1163 } else {; 1164 ; 1165 TClass *oldClass = config->fOldClass;; 1166 ; 1167 TVirtualCollectionProxy *oldProxy = oldClass ? oldClass->GetCollectionProxy() : nullptr;; 1168 if (!oldProxy) {; 1169 // Missing information, broken file ... give up; 1170 return;; 1171 }; 1172 ; 1173 TVirtualCollectionProxy::TPushPop helper( oldProxy, (char*)addr );; 1174 Int_t nobjects;; 1175 buf.ReadInt(nobjects);; 1176 void* env = oldProxy->Allocate(nobjects,true);; 1177 ; 1178 if (nobjects || vers < 7 ) {; 1179 // coverity[dereference] since this is a member streaming action by definition the collection contains objects.; 1180 TStreamerInfo *subinfo = (TStreamerInfo*)oldProxy->GetValueClass()->GetStreamerInfo( 0 );; 1181 ; 1182 subinfo->ReadBufferSTL(buf, oldProxy, nobjects, /* offset */ 0, /* v7 */ kFALSE);; 1183 }; 1184 oldProxy->Commit(env);; 1185 }; 1186 }; 1187 ; 1188 INLINE_TEMPLATE_ARGS void ReadArraySTLMemberWiseSameClass(TBuffer &buf, void *addr, const TConfiguration *conf, Version_t vers); 1189 {; 1190 /",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:48229,config,config,48229,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,2,['config'],['config']
Modifiability,"on_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); virtual Bool_tRooAbsCachedPdf::selfNormalized() const; TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidRooAbsCachedPdf::setInterpolationOrder(Int_t order); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormValueCaching(Int_t minNumIntDim, Int_t ipOrder = 2); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsSelfCachedPdf.html:27713,config,config,27713,root/html526/RooAbsSelfCachedPdf.html,https://root.cern,https://root.cern/root/html526/RooAbsSelfCachedPdf.html,2,['config'],['config']
Modifiability,"on_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual Bool_tRooAbsPdf::selfNormalized() const; TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); voidRooAbsPdf::setNormValueCaching(Int_t minNumIntDim, Int_t ipOrder = 2); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooAbsAnaConvPdf.html:29486,config,config,29486,root/html530/RooAbsAnaConvPdf.html,https://root.cern,https://root.cern/root/html530/RooAbsAnaConvPdf.html,56,['config'],['config']
Modifiability,"on_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual Bool_tRooAbsPdf::selfNormalized() const; TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); voidRooAbsPdf::setNormValueCaching(Int_t minNumIntDim, Int_t ipOrder = 2); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidsetOptions(TString options); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t va",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/Roo2DKeysPdf.html:27751,config,config,27751,root/html530/Roo2DKeysPdf.html,https://root.cern,https://root.cern/root/html530/Roo2DKeysPdf.html,1,['config'],['config']
Modifiability,"on_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual Bool_tRooAbsPdf::selfNormalized() const; TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); voidRooAbsPdf::setNormValueCaching(Int_t minNumIntDim, Int_t ipOrder = 2); voidsetNoRounding(bool flag = kTRUE); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooPoisson.html:27306,config,config,27306,root/html530/RooPoisson.html,https://root.cern,https://root.cern/root/html530/RooPoisson.html,1,['config'],['config']
Modifiability,"on_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual Double_tEstimatorFunction(vector<Double_t>& pars); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TMVA::FitterBaseTMVA::FitterBase::FitterBase(const TMVA::FitterBase&); TMVA::FitterBaseTMVA::FitterBase::FitterBase(TMVA::IFitterTarget& target, const TString& name, const vector<TMVA::Interval*> ranges, const TString& theOption); const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TMVA::IFitterTarget&TMVA::FitterBase::GetFitterTarget() const; virtual const char*TObject::GetIconName() const; virtual const char*TMVA::FitterBase::GetName() const; Int_tTMVA::FitterBase::GetNpars() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TString&TMVA::Configurable::GetOptions() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; TMVA::IFitterTargetTMVA::IFitterTarget::IFitterTarget(); TMVA::IFitterTargetTMVA::IFitterTarget::IFitterTarget(const TMVA::IFitterTarget&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MinuitFitter.html:2285,Config,Configurable,2285,root/html602/TMVA__MinuitFitter.html,https://root.cern,https://root.cern/root/html602/TMVA__MinuitFitter.html,2,['Config'],['Configurable']
Modifiability,"on_t* option = """"); voidTMVA::MethodANNBase::SetActivation(TMVA::TActivation* activation); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EAnalysisType type); voidTMVA::MethodBase::SetBaseDir(TDirectory* methodDir); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); voidTMVA::ConvergenceTest::SetConvergenceParameters(Int_t steps, Double_t improvement); voidTMVA::ConvergenceTest::SetCurrentValue(Float_t value); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::MethodBase::SetMethodBaseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); voidTMVA::MethodANNBase::SetNeuronInputCalculator(TMVA::TNeuronInput* inputCalculator); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInspector& insp) const; Float_tTMVA::ConvergenceTest::SpeedControl(UInt_t ofSteps); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTMVA::MethodBase::TestClassification(); virtual voidTMVA::MethodBase::TestMulticlass(); virtual voidTMVA::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodMLP.html:13390,Config,Configurable,13390,root/html602/TMVA__MethodMLP.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodMLP.html,2,['Config'],['Configurable']
Modifiability,"on_t* option); Check time of finding ""Where am I"" for n points. void TestOverlaps(const char* path); --- Geometry overlap checker based on sampling. Bool_t TestVoxels(TGeoVolume* vol); Check voxels efficiency per volume. void UnbombTranslation(const Double_t* tr, Double_t* bombtr); get the new 'unbombed' translation vector according current exploded view mode. Double_t Weight(Double_t precision, Option_t* option = ""v""); Compute weight [kg] of the current volume. TGeoPainter(TGeoManager* manager). void GetBombFactors(Double_t& bombx, Double_t& bomby, Double_t& bombz, Double_t& bombr) const; {bombx=fBombX; bomby=fBombY; bombz=fBombZ; bombr=fBombR;}. Int_t GetBombMode() const; {return fExplodedView;}. TGeoNode * GetCheckedNode(); {return fCheckedNode;}. const char * GetDrawPath() const; {return fVisBranch.Data();}. TGeoVolume * GetTopVolume() const; {return fTopVolume;}. Int_t GetVisLevel() const; {return fVisLevel;}. Int_t GetVisOption() const; {return fVisOption;}. Int_t GetNsegments() const; {return fNsegments;}. Double_t * GetViewBox(); {return &fCheckedBox[0];}. Bool_t IsExplodedView() const; {return ((fExplodedView==kGeoVisDefault)?kFALSE:kTRUE);}. Bool_t IsRaytracing() const; {return fIsRaytracing;}. Bool_t IsPaintingShape() const; {return fIsPaintingShape;}. void Lock(Bool_t flag = kTRUE); {fVisLock = flag;}. void SetClippingShape(TGeoShape* shape); {fClippingShape = shape;}. void SetGeoManager(TGeoManager* geom); {fGeoManager=geom;}. void SetIteratorPlugin(TGeoIteratorPlugin* plugin); {fPlugin = plugin; ModifiedPad();}. void SetRaytracing(Bool_t flag = kTRUE); {fIsRaytracing = flag;}. void SetTopVolume(TGeoVolume* vol); {fTopVolume = vol;}. » Author: Andrei Gheata 05/03/02 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: Mon Jul 4 15:31:51 2011 » Last generated: 2011-07-04 15:31; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGeoPainter.html:21904,plugin,plugin,21904,root/html530/TGeoPainter.html,https://root.cern,https://root.cern/root/html530/TGeoPainter.html,2,['plugin'],['plugin']
Modifiability,"on_t* option); Check time of finding ""Where am I"" for n points. void TestOverlaps(const char* path); --- Geometry overlap checker based on sampling. Bool_t TestVoxels(TGeoVolume* vol); Check voxels efficiency per volume. void UnbombTranslation(const Double_t* tr, Double_t* bombtr); get the new 'unbombed' translation vector according current exploded view mode. Double_t Weight(Double_t precision, Option_t* option = ""v""); Compute weight [kg] of the current volume. TGeoPainter(TGeoManager* manager). void GetBombFactors(Double_t& bombx, Double_t& bomby, Double_t& bombz, Double_t& bombr) const; {bombx=fBombX; bomby=fBombY; bombz=fBombZ; bombr=fBombR;}. Int_t GetBombMode() const; {return fExplodedView;}. TGeoNode * GetCheckedNode(); {return fCheckedNode;}. const char * GetDrawPath() const; {return fVisBranch.Data();}. TGeoVolume * GetTopVolume() const; {return fTopVolume;}. Int_t GetVisLevel() const; {return fVisLevel;}. Int_t GetVisOption() const; {return fVisOption;}. Int_t GetNsegments() const; {return fNsegments;}. Double_t * GetViewBox(); {return &fCheckedBox[0];}. Bool_t IsExplodedView() const; {return ((fExplodedView==kGeoVisDefault)?kFALSE:kTRUE);}. Bool_t IsRaytracing() const; {return fIsRaytracing;}. Bool_t IsPaintingShape() const; {return fIsPaintingShape;}. void Lock(Bool_t flag = kTRUE); {fVisLock = flag;}. void SetClippingShape(TGeoShape* shape); {fClippingShape = shape;}. void SetGeoManager(TGeoManager* geom); {fGeoManager=geom;}. void SetIteratorPlugin(TGeoIteratorPlugin* plugin); {fPlugin = plugin; ModifiedPad();}. void SetRaytracing(Bool_t flag = kTRUE); {fIsRaytracing = flag;}. void SetTopVolume(TGeoVolume* vol); {fTopVolume = vol;}. » Author: Andrei Gheata 05/03/02 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: Mon Nov 8 19:55:13 2010 » Last generated: 2010-11-08 19:55; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoPainter.html:21369,plugin,plugin,21369,root/html528/TGeoPainter.html,https://root.cern,https://root.cern/root/html528/TGeoPainter.html,2,['plugin'],['plugin']
Modifiability,"on_t* option); Check time of finding ""Where am I"" for n points. void TestOverlaps(const char* path); --- Geometry overlap checker based on sampling. Bool_t TestVoxels(TGeoVolume* vol); Check voxels efficiency per volume. void UnbombTranslation(const Double_t* tr, Double_t* bombtr); get the new 'unbombed' translation vector according current exploded view mode. Double_t Weight(Double_t precision, Option_t* option = ""v""); Compute weight [kg] of the current volume. TGeoPainter(TGeoManager* manager). void GetBombFactors(Double_t& bombx, Double_t& bomby, Double_t& bombz, Double_t& bombr) const; {bombx=fBombX; bomby=fBombY; bombz=fBombZ; bombr=fBombR;}. Int_t GetBombMode() const; {return fExplodedView;}. TGeoNode * GetCheckedNode(); {return fCheckedNode;}. const char * GetDrawPath() const; {return fVisBranch.Data();}. TGeoVolume * GetTopVolume() const; {return fTopVolume;}. Int_t GetVisLevel() const; {return fVisLevel;}. Int_t GetVisOption() const; {return fVisOption;}. Int_t GetNsegments() const; {return fNsegments;}. Double_t * GetViewBox(); {return &fCheckedBox[0];}. Bool_t IsExplodedView() const; {return ((fExplodedView==kGeoVisDefault)?kFALSE:kTRUE);}. Bool_t IsRaytracing() const; {return fIsRaytracing;}. Bool_t IsPaintingShape() const; {return fIsPaintingShape;}. void Lock(Bool_t flag = kTRUE); {fVisLock = flag;}. void SetClippingShape(TGeoShape* shape); {fClippingShape = shape;}. void SetGeoManager(TGeoManager* geom); {fGeoManager=geom;}. void SetIteratorPlugin(TGeoIteratorPlugin* plugin); {fPlugin = plugin; ModifiedPad();}. void SetRaytracing(Bool_t flag = kTRUE); {fIsRaytracing = flag;}. void SetTopVolume(TGeoVolume* vol); {fTopVolume = vol;}. » Author: Andrei Gheata 05/03/02 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: Thu Nov 3 20:17:15 2011 » Last generated: 2011-11-03 20:17; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPainter.html:21904,plugin,plugin,21904,root/html532/TGeoPainter.html,https://root.cern,https://root.cern/root/html532/TGeoPainter.html,4,['plugin'],['plugin']
Modifiability,"on_t* option); Check time of finding ""Where am I"" for n points. void TestOverlaps(const char* path); --- Geometry overlap checker based on sampling. Bool_t TestVoxels(TGeoVolume* vol); Check voxels efficiency per volume. void UnbombTranslation(const Double_t* tr, Double_t* bombtr); get the new 'unbombed' translation vector according current exploded view mode. Double_t Weight(Double_t precision, Option_t* option = ""v""); Compute weight [kg] of the current volume. TGeoPainter(TGeoManager* manager). void GetBombFactors(Double_t& bombx, Double_t& bomby, Double_t& bombz, Double_t& bombr) const; {bombx=fBombX; bomby=fBombY; bombz=fBombZ; bombr=fBombR;}. Int_t GetBombMode() const; {return fExplodedView;}. TGeoNode * GetCheckedNode(); {return fCheckedNode;}. const char * GetDrawPath() const; {return fVisBranch.Data();}. TGeoVolume * GetTopVolume() const; {return fTopVolume;}. Int_t GetVisLevel() const; {return fVisLevel;}. Int_t GetVisOption() const; {return fVisOption;}. Int_t GetNsegments() const; {return fNsegments;}. Double_t * GetViewBox(); {return &fCheckedBox[0];}. Bool_t IsExplodedView() const; {return ((fExplodedView==kGeoVisDefault)?kFALSE:kTRUE);}. Bool_t IsRaytracing() const; {return fIsRaytracing;}. Bool_t IsPaintingShape() const; {return fIsPaintingShape;}. void Lock(Bool_t flag = kTRUE); {fVisLock = flag;}. void SetClippingShape(TGeoShape* shape); {fClippingShape = shape;}. void SetGeoManager(TGeoManager* geom); {fGeoManager=geom;}. void SetIteratorPlugin(TGeoIteratorPlugin* plugin); {fPlugin = plugin; ModifiedPad();}. void SetRaytracing(Bool_t flag = kTRUE); {fIsRaytracing = flag;}. void SetTopVolume(TGeoVolume* vol); {fTopVolume = vol;}. » Author: Andrei Gheata 05/03/02 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: Tue Jun 2 16:02:17 2015 » Last generated: 2015-06-02 16:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGeoPainter.html:23205,plugin,plugin,23205,root/html604/TGeoPainter.html,https://root.cern,https://root.cern/root/html604/TGeoPainter.html,4,['plugin'],['plugin']
Modifiability,"on_t* options = ""NELU"", Double_t xmin = 0.5, Double_t xmax = 0.98999999999999999, Double_t ymax = 0.94999999999999996); OBSOLETE FUNCTION PROVIDED FOR BACKWARD COMPATIBILITY. RooPlot* paramOn(RooPlot* frame, const RooArgSet& params, Bool_t showConstants = kFALSE, const char* label = """", Int_t sigDigits = 2, Option_t* options = ""NELU"", Double_t xmin = 0.65000000000000002, Double_t xmax = 0.98999999999999999, Double_t ymax = 0.94999999999999996, const RooCmdArg* formatCmd = 0); Add a text box with the current parameter values and their errors to the frame.; Observables of this PDF appearing in the 'data' dataset will be omitted. Optional label will be inserted as first line of the text box. Use 'sigDigits'; to modify the default number of significant digits printed. The 'xmin,xmax,ymax'; values specify the inital relative position of the text box in the plot frame. Double_t expectedEvents(const RooArgSet* nset) const; Return expected number of events from this p.d.f for use in extended; likelihood calculations. This default implementation returns zero. void verboseEval(Int_t stat); Change global level of verbosity for p.d.f. evaluations. Int_t verboseEval(); Return global level of verbosity for p.d.f. evaluations. RooAbsPdf* createProjection(const RooArgSet& iset); Return a p.d.f that represent a projection of this p.d.f integrated over given observables. RooAbsReal* createCdf(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); Create a cumulative distribution function of this p.d.f in terms; of the observables listed in iset. If no nset argument is given; the c.d.f normalization is constructed over the integrated; observables, so that its maximum value is precisely 1. It is also; possible to choose a different normalization for; multi-dimensional p.d.f.s: eg. for a pdf f(x,y,z) one can; construct a partial cdf c(x,y) that only when integrated itself; over z results in a maximum value of 1. To construct such a cdf pass; z as argument to the optional nset argum",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsPdf.html:84356,extend,extended,84356,root/html602/RooAbsPdf.html,https://root.cern,https://root.cern/root/html602/RooAbsPdf.html,4,['extend'],['extended']
Modifiability,"on_t*TObject::GetOption() const; Int_tGetSecond(Int_t); virtual const char*GetString(Int_t); virtual Bool_tGetTime(Int_t, Int_t&, Int_t&, Int_t&); TDatimeGetTimestamp(Int_t); virtual Bool_tGetTimestamp(Int_t, Int_t&, Int_t&, Int_t&, Int_t&, Int_t&, Int_t&, Int_t&); virtual const char*TObject::GetTitle() const; virtual UInt_tGetUInt(Int_t); virtual ULong64_tGetULong64(Int_t); virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tGetVDouble(Int_t, vector<Double_t>&); virtual Bool_tGetVInt(Int_t, vector<Int_t>&); virtual Bool_tGetVLong(Int_t, vector<Long_t>&); virtual Bool_tGetVLong64(Int_t, vector<Long64_t>&); virtual Bool_tGetVUInt(Int_t, vector<UInt_t>&); virtual Bool_tGetVULong64(Int_t, vector<ULong64_t>&); Int_tGetYear(Int_t); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tIsError() const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsNull(Int_t); Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tNextIteration(); virtual Bool_tNextResultRow(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSQLStatement.html:13903,Inherit,InheritsFrom,13903,root/html602/TSQLStatement.html,https://root.cern,https://root.cern/root/html602/TSQLStatement.html,2,['Inherit'],['InheritsFrom']
Modifiability,"on_t Class_Version ();  ; static Bool_t Connect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; void DoRedraw () override;  Redraw the group frame. ;  ; void Init ();  Default init. ;  ;  Protected Member Functions inherited from TGGroupFrame; void DoRedraw () override;  Redraw the group frame. ;  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member F",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGButtonGroup.html:31535,inherit,inherited,31535,doc/master/classTGButtonGroup.html,https://root.cern,https://root.cern/doc/master/classTGButtonGroup.html,1,['inherit'],['inherited']
Modifiability,"on_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Int_t fNpaves;  Number of stacked paves. ;  ;  Protected Attributes inherited from TPaveText; TString fLabel;  Label written at the top of the pavetext. ;  ; TList * fLines {nullptr};  List of labels. ;  ; Int_t fLongest;  Length of the longest line. ;  ; Float_t fMargin;  Text margin. ;  ;  Protected Attributes inherited from TPave; Int_t fBorderSize;  window box bordersize in pixels ;  ; Double_t fCornerRadius;  Corner radius in case of option arc. ;  ; Int_t fInit;  (=0 if transformation to NDC not yet done) ;  ; TString fName;  Pave name. ;  ; TString fOption;  Pave style. ;  ; Int_t fShadowColor;  Color of the pave's shadow. ;  ; Double_t fX1NDC;  X1 point in NDC coordinates. ;  ; Double_t fX2NDC;  X2 point in NDC coordinates. ;  ; Double_t fY1NDC;  Y1 point in NDC coordinates. ;  ; Double_t fY2NDC;  Y2 point in NDC coordinates. ;  ;  Protected Attributes inherited from TBox; Bool_t fResizing;  ! True if box is being resized ;  ; Double_t fX1;  X of 1st point. ;  ; Double_t fX2;  X of 2nd point. ;  ; Double_t fY1;  Y of 1st point. ;  ; Double_t fY2;  Y of 2nd point. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . Additional Inherited Members;  Public Types inherited from TPave; enum  { kNameIsAction = (1ULL << ( 11 )); };  ;  Public Types inherited from TBox; enum  { kCannotMove = (1ULL << ( 12 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPavesText.html:23374,inherit,inherited,23374,doc/master/classTPavesText.html,https://root.cern,https://root.cern/doc/master/classTPavesText.html,1,['inherit'],['inherited']
Modifiability,"on_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; TPolyLine & operator= (const TPolyLine &);  assignment operator ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fLastPoint {-1};  The index of the last filled point. ;  ; Int_t fN {0};  Number of points. ;  ; TString fOption;  options ;  ; Double_t * fX {nullptr};  [fN] Array of X coordinates ;  ; Double_t * fY {nullptr};  [fN] Array of Y coordinates ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TPolyLine.h>. Inheritance diagram for TPolyLine:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkPolyLineNDC Polyline coordinates are in NDC space. . Definition at line 36 of file TPolyLine.h. Constructor & Destructor Documentation. ◆ TPolyLine() [1/5]. TPolyLine::TPolyLine ; (; ). PolyLine default constructor. ; Definition at line 47 of file TPolyLine.cxx. ◆ TPolyLine() [2/5]. TPolyLine::TPolyLine ; (; Int_t ; n, . Option_t * ; option = """" . ). PolyLine normal constructor without initialisation. ; Allocates n points. ; Definition at line 55 of file TPolyLine.cxx. ◆ TPolyLine() [3/5]. TPolyLine::TPolyLine ; (; Int_t ; n, . Float_t * ; x, . Float_t * ; y, . Option_t * ; option = """" . ). PolyLine normal constructor (single precision). ; Makes n points with (x, y) coordinates from x and y. ; De",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPolyLine.html:16774,inherit,inherited,16774,doc/master/classTPolyLine.html,https://root.cern,https://root.cern/doc/master/classTPolyLine.html,1,['inherit'],['inherited']
Modifiability,"on_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; void attachCache (const RooAbsArg *newOwner, const RooArgSet &cachedVars) override;  Initialize cache of dataset: attach variables of cache ArgSet to the corresponding TTree branches. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t _curIndex = 0;  ! Index associated with current event ;  ; RooAbsDataStore * _curStore = nullptr;  ! Datastore associated with current event ;  ; std::map< Int_t, RooAbsDataStore * > _dataMap;  ; RooCategory * _indexCat = nullptr;  ; bool _ownComps = false;  ! ;  ; std::unique_ptr< std::vector< double > > _weightBuffer;  ! Buffer for weights in case a batch of values is requested. ;  ;  Protected Attributes inherited from RooAbsDataStore; RooArgSet _cachedVars;  ; bool _doDirtyProp = true;  Switch do (de)activate dirty state propagation when loading a data point. ;  ; RooArgSet _vars;  ;  Protected Attributes inherited from TNamed; TString f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCompositeDataStore.html:17607,variab,variables,17607,doc/master/classRooCompositeDataStore.html,https://root.cern,https://root.cern/doc/master/classRooCompositeDataStore.html,1,['variab'],['variables']
Modifiability,"on_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  . Protected Member Functions; void Build (Int_t n);  Creates the 2D graph basic data structure. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TObject * fDelaunay;  ! Pointer to Delaunay interpolator object ;  ; TDirectory * fDirectory;  !Pointer to directory holding this 2D graph ;  ; TList * fFunctions;  Pointer to list of functions (fits and user) ;  ; TH2D * fHistogram;  !2D histogram of z values linearly interpolated on the triangles ;  ; Double_t fMargin;  Extra space (in %) around interpolated area for fHistogram. ;  ; Double_t fMaximum;  Maximum value for plotting along z. ;  ; Int_t fMaxIter;  Maximum number of iterations to find Delaunay triangles. ;  ; Double_t fMinimum;  Minimum value for plotting along z. ;  ; Int_t fNpoints;  Number of points in the data set. ;  ; Int_t fNpx;  Number of bins along X in fHistogram. ;  ; Int_t fNpy;  Number of bins along Y in fHistogram. ;  ; TVirtualHistPainter * fPainter;  !Pointer to histogram painter ;  ; Int_t fSize;  !Real size of f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraph2D.html:31781,inherit,inherited,31781,doc/master/classTGraph2D.html,https://root.cern,https://root.cern/doc/master/classTGraph2D.html,1,['inherit'],['inherited']
Modifiability,"on_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  . Static Public Attributes; static Atom_t fgDeleteWindowAtom = 0;  . Protected Member Functions; void * GetCurrentContext ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fCocoaDraw;  ; bool fDirectDraw;  ; EDrawMode fDrawMode;  ; std::unique_ptr< ROOT::MacOSX::Details::CocoaPrivate > fPimpl;  ; Drawable_t fSelectedDrawable;  ;  Protected Attributes inherited from TVirtualX; EDrawMode fDrawMode;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGCocoa.html:48949,inherit,inherited,48949,doc/master/classTGCocoa.html,https://root.cern,https://root.cern/doc/master/classTGCocoa.html,1,['inherit'],['inherited']
Modifiability,"onaLisaWriter;  CTMonitor;  CTMPClientBase class for multiprocess applications' clients ;  CTMPWorkerThis class works in conjuction with TMPClient, reacting to messages received from it as specified by the Notify and HandleInput methods ;  CTMrbSubevent_Caen;  CTMultiDimFitMultidimensional Fits in ROOT ;  CTMultiGraphA TMultiGraph is a collection of TGraph (or derived) objects ;  CTMultiLayerPerceptron;  CTMutex;  CTMutexImp;  CTMySQLResult;  CTMySQLRow;  CTMySQLServer;  ►CTMySQLStatement;  CTParamData;  CTNamedBase class for all named ROOT classes ;  CTNDArray;  CTNDArrayRef;  CTNDArrayT;  CTNetFile;  CTNetFileStager;  CTNetSystem;  CTNetXNGFile;  CTNetXNGFileStager;  CTNetXNGSystem;  CTNeuron;  CTNewChainDlg;  CTNewQueryDlg;  CTNodeTNode description ;  CTNodeDivDescription of parameters to divide a 3-D geometry object ;  CTNonCopyable;  CTNonSplitBrowsableAllows a TBrowser to browse non-split branches as if they were split ;  CTNtupleA simple TTree restricted to a list of float variables only ;  CTNtupleDA simple TTree restricted to a list of double variables only ;  CTObjArrayAn array of TObjects ;  CTObjArrayIterIterator of object array ;  CTObjectMother of all ROOT objects ;  CTObjectRefSpy;  CTObjectSet;  CTObjectSpyMonitors objects for deletion and reflects the deletion by reverting the internal pointer to zero ;  CTObjectTableThis class registers all instances of TObject and its derived classes in a hash table ;  CTObjLinkWrapper around a TObject so it can be stored in a TList ;  CTObjOptLink;  CTObjStringCollectable string class ;  CTOCCToStep;  CTODBCResult;  CTODBCRow;  CTODBCServer;  ►CTODBCStatement;  CODBCBufferRec_t;  CToolBarData_t;  CTOptionListItem;  CTOracleResult;  CTOracleRow;  CTOracleServer;  ►CTOracleStatement;  CTBufferRec;  CTOrdCollectionOrdered collection ;  CTOrdCollectionIterIterator of ordered collection ;  CTOutputListSelectorDataMapSet the selector's data members to the corresponding elements of the output list ;  CTPackageDescriptio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/annotated.html:171903,variab,variables,171903,doc/v608/annotated.html,https://root.cern,https://root.cern/doc/v608/annotated.html,1,['variab'],['variables']
Modifiability,"onadaptiveKDE; kAdaptiveKDE; };; enum EKernelBorder { kNoTreatment; kKernelRenorm; kSampleMirror; };. private:. Float_tfFineFactorfine tuning factor for Adaptive KDE: factor to multiply the ""width"" of the Kernel function; TH1F*fFirstIterHisthistogram to be filled in the hidden iteration; Bool_tfHiddenIterationDefines if whats currently running is the ; TH1F*fHistcopy of input histogram; TMVA::KDEKernel::EKernelIterfIteriteration number; TMVA::KDEKernel::EKernelBorderfKDEborderThe method to take care about ""border"" effects; TF1*fKernel_integthe integral of the Kernel function; TMVA::MsgLogger*fLoggermessage logger; Float_tfLowerEdgethe lower edge of the PDF; Float_tfSigmaWidth of the Kernel function; TH1F*fSigmaHistcontains the Sigmas Widths for adaptive KDE ; Float_tfUpperEdgethe upper edge of the PDF. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; KDEKernel(TMVA::KDEKernel::EKernelIter kiter = kNonadaptiveKDE, const TH1* hist = 0, Float_t lower_edge = 0., Float_t upper_edge = 1., TMVA::KDEKernel::EKernelBorder kborder = kNoTreatment, Float_t FineFactor = 1.); constructor; sanity check. ~KDEKernel(); destructor. void SetKernelType(TMVA::KDEKernel::EKernelType ktype = kGauss); fIter == 1 ---> nonadaptive KDE; fIter == 2 ---> adaptive KDE. Float_t GetBinKernelIntegral(Float_t lowr, Float_t highr, Float_t mean, Int_t binnum); calculates the integral of the Kernel. KDEKernel(TMVA::KDEKernel::EKernelIter kiter = kNonadaptiveKDE, const TH1* hist = 0, Float_t lower_edge = 0., Float_t upper_edge = 1., TMVA::KDEKernel::EKernelBorder kborder = kNoTreatment, Float_t FineFactor = 1.). const char* GetName() const; modified name (remove TMVA::). { return ""KDEKernel""; }. » Author: Asen Christov » Copyright (c) 2007: *; » Last changed: root/tmva $Id$ » Last generated: 2015-03-14 16:43; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__KDEKernel.html:2446,adapt,adaptive,2446,root/html534/TMVA__KDEKernel.html,https://root.cern,https://root.cern/root/html534/TMVA__KDEKernel.html,2,['adapt'],['adaptive']
Modifiability,"onair; , kFpolishedtioair; , kFpolishedtyvekair; , ;   kFpolishedvm2000air; , kFpolishedvm2000glue; , kFetchedlumirrorair; , kFetchedlumirrorglue; , ;   kFetchedair; , kFetchedteflonair; , kFetchedtioair; , kFetchedtyvekair; , ;   kFetchedvm2000air; , kFetchedvm2000glue; , kFgroundlumirrorair; , kFgroundlumirrorglue; , ;   kFgroundair; , kFgroundteflonair; , kFgroundtioair; , kFgroundtyvekair; , ;   kFgroundvm2000air; , kFgroundvm2000glue; , kFRough_LUT; , kFRoughTeflon_LUT; , ;   kFRoughESR_LUT; , kFRoughESRGrease_LUT; , kFPolished_LUT; , kFPolishedTeflon_LUT; , ;   kFPolishedESR_LUT; , kFPolishedESRGrease_LUT; , kFDetector_LUT. };  ; enum  ESurfaceModel { ;   kMglisur; , kMunified; , kMLUT; , kMDAVIS; , ;   kMdichroic. };  ; enum  ESurfaceType { ;   kTdielectric_metal; , kTdielectric_dielectric; , kTdielectric_LUT; , kTdielectric_LUTDAVIS; , ;   kTdielectric_dichroic; , kTfirsov; , kTx_ray. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGeoOpticalSurface ();  ;  TGeoOpticalSurface (const char *name, ESurfaceModel model=kMglisur, ESurfaceFinish finish=kFpolished, ESurfaceType type=kTdielectric_dielectric, Double_t value=1.0);  ;  ~TGeoOpticalSurface () override;  ; bool AddConstProperty (const char *property, const char *ref);  ; bool AddProperty (const char *property, const char *ref);  ; TList const & GetConstProperties () const;  ; Double_t GetConstPr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoOpticalSurface.html:1654,inherit,inherited,1654,doc/master/classTGeoOpticalSurface.html,https://root.cern,https://root.cern/doc/master/classTGeoOpticalSurface.html,1,['inherit'],['inherited']
Modifiability,"onality can be exploited; through the ApMon class directly (gMonitoringWriter->GetApMon()). Monitoring information in MonaLisa is structured in the following tree; structure:; <farmname>; |; ---> <nodename1>; |; ---> <key1> - <value1>; ---> <key2> - <value2>; ---> <nodename2>; |; ---> <key3> - <value3>; ---> <key4> - <value4>. The parameter monid is equivalent to the MonaLisa node name, for the; case of process monitoring it can be just an identifier to classify; the type of jobs e.g. ""PROOF_PROCESSING"".; If monid is not specified, TMonaLisaWriter tries to set it in this order; from environement variables:; - PROOF_JOB_ID; - GRID_JOB_ID; - LCG_JOB_ID; - ALIEN_MASTERJOB_ID; - ALIEN_PROC_ID. The parameter montag is equivalent to the MonaLisa farm name, for the; case of process monitoring it can be a process identifier e.g. a PROOF; session ID. The parameter monserver specifies the server to whom to send the; monitoring UDP packets. If not specified, the hostname (the port is; a default one) is specified in the environment variable APMON_CONFIG. To use TMonaLisaWriter, libMonaLisa.so has to be loaded. According to the fact, that the deepness of the MonaLisa naming scheme; is only 3 (<farm><node><value>), a special naming scheme is used for; process monitoring. There is a high-level method to send progress; information of Tree analysis (# of events, datasize).; To distinguish individual nodes running the processing, part of the; information is kept in the <value> parameter of ML.; <value> is named as:; <site-name>:<host-name>:<pid>:<valuetag>; <site-name> is taken from an environment variable in the following order:; - PROOF_SITE; - GRID_SITE; - ALIEN_SITE; - default 'none'; <host-name> is taken from gSystem->Hostname(); <pid> is the process ID of the ROOT process. Example of use for Process Monitoring:; new TMonaLisaWriter(""BATCH_ANALYSIS"",""AnalysisLoop-00001"",""lxplus050.cern.ch"");; Once when you create an analysis task, execute; gMonitoringWriter->SendInfoUser(""myname""",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMonaLisaWriter.html:10958,variab,variable,10958,root/html530/TMonaLisaWriter.html,https://root.cern,https://root.cern/root/html530/TMonaLisaWriter.html,3,['variab'],['variable']
Modifiability,"onary::DeclId_tGetDeclId() const; static TDictionary*TDictionary::GetDictionary(const char* name); static TDictionary*TDictionary::GetDictionary(const type_info& typeinfo); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); static TEnum*GetEnum(const type_info& ti, TEnum::ESearchAction sa = kALoadAndInterpLookup); static TEnum*GetEnum(const char* enumName, TEnum::ESearchAction sa = kALoadAndInterpLookup); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetQualifiedName() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tIsValid(); Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEnum.html:2961,Inherit,InheritsFrom,2961,root/html602/TEnum.html,https://root.cern,https://root.cern/root/html602/TEnum.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onary::kSet; static TObject::(anonymous)TObject::kSingleKey; static TDictionary::ESTLTypeTDictionary::kVector; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. TClass*fClass!pointer to parent class; TClassReffClassPtrpointer to the base class TClass; Int_tfDeltaBaseClassInfo_t offset (INT_MAX if unset); BaseClassInfo_t*fInfo!pointer to CINT base class info; Int_tfPropertyBaseClassInfo_t's properties; Int_tfSTLTypecache of IsSTLContainer(). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TBaseClass(BaseClassInfo_t* info = 0, TClass* cl = 0); Default TBaseClass ctor. TBaseClasses are constructed in TClass; via a call to TCling::CreateListOfBaseClasses(). ~TBaseClass(); TBaseClass dtor deletes adopted CINT BaseClassInfo object. void Browse(TBrowser* b); Called by the browser, to browse a baseclass. TClass * GetClassPointer(Bool_t load = kTRUE); Get pointer to the base class TClass. Int_t GetDelta(); Get offset from ""this"" to part of base class. const char * GetTitle() const; Get base class description (comment). ROOT::ESTLType IsSTLContainer(); Return which type (if any) of STL container the data member is. Long_t Property() const; Get property description word. For meaning of bits see EProperty. void Streamer(TBuffer& ); Stream an object of TBaseClass. Triggers the calculation of the; cache variables to store them. TBaseClass(const TBaseClass& ). TBaseClass& operator=(const TBaseClass& ). Bool_t IsFolder() const; {return kTRUE;}. void SetClass(TClass* cl); { fClass = cl; }. » Author: Fons Rademakers 08/02/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/meta:$Id$ » Last generated: 2015-06-30 14:39; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TBaseClass.html:8248,variab,variables,8248,root/html602/TBaseClass.html,https://root.cern,https://root.cern/root/html602/TBaseClass.html,2,['variab'],['variables']
Modifiability,"oncrete implementations of this interface should deal with the details of how the nuisance parameters are; dealt with (eg. integration vs. profiling) and which test-statistic is used (perhaps this should be added to the interface). The motivation for this interface is that we hope to be able to specify the problem in a common way for several concrete calculators. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~HypoTestCalculator(); static TClass*Class(); virtual RooStats::HypoTestResult*GetHypoTest() const; virtual TClass*IsA() const; RooStats::HypoTestCalculator&operator=(const RooStats::HypoTestCalculator&); virtual voidSetAlternateModel(const RooStats::ModelConfig& model); virtual voidSetCommonModel(const RooStats::ModelConfig& model); virtual voidSetData(RooAbsData& data); virtual voidSetNullModel(const RooStats::ModelConfig& model); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~HypoTestCalculator(); {}. HypoTestResult* GetHypoTest() const; main interface to get a HypoTestResult, pure virtual. void SetCommonModel(const RooStats::ModelConfig& model); Set a common model for both the null and alternate, add to the the workspace if not already there. SetNullModel(const RooStats::ModelConfig& model). SetAlternateModel(const RooStats::ModelConfig& model). void SetData(RooAbsData& data); Set the DataSet. » Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id$ » Last generated: 2015-09-08 17:03; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__HypoTestCalculator.html:2209,Inherit,Inheritance,2209,root/html534/RooStats__HypoTestCalculator.html,https://root.cern,https://root.cern/root/html534/RooStats__HypoTestCalculator.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ond = validMapReturnCond<F, T>> ; auto MapImpl (F func, std::vector< T > &args) -> std::vector< InvokeResult_t< F, T > >;  Execute a function over the elements of a vector. ;  ; template<class F , class Cond = validMapReturnCond<F>> ; auto MapImpl (F func, unsigned nTimes) -> std::vector< InvokeResult_t< F > >;  Execute a function without arguments several times. ;  ; template<class F , class T > ; auto ResolveExecutorAndMap (F func, T &&args) -> std::vector< typename MapRetType< F, typename std::decay< T >::type >::type >;  Function called from Map to select and execute the correct Executor according to the set Execution Policy. ;  . Private Attributes; ROOT::EExecutionPolicy fExecPolicy;  ; std::unique_ptr< ROOT::TProcessExecutor > fProcessExecutor;  ; std::unique_ptr< ROOT::TSequentialExecutor > fSequentialExecutor;  ; std::unique_ptr< ROOT::TThreadExecutor > fThreadExecutor;  ; friend TExecutorCRTP;  . Additional Inherited Members;  Protected Types inherited from ROOT::TExecutorCRTP< TExecutor >; using InvokeResult_t = ROOT::TypeTraits::InvokeResult_t< F, Args... >;  ; using validMapReturnCond = std::enable_if_t<!std::is_reference< InvokeResult_t< F, T... > >::value &&!std::is_void< InvokeResult_t< F, T... > >::value >;  type definition used in templated functions for not allowing mapping functions that return references or void. ;  . #include <ROOT/TExecutor.hxx>. Inheritance diagram for ROOT::Internal::TExecutor:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Unused_t. using ROOT::Internal::TExecutor::Unused_t = ROOT::TSequentialExecutor. private . Definition at line 101 of file TExecutor.hxx. Constructor & Destructor Documentation. ◆ TExecutor() [1/3]. ROOT::Internal::TExecutor::TExecutor ; (; unsigned ; nWorkers = 0). inlineexplicit . Class constructor. ; Sets the default execution policy and initializes the corresponding executor. Defaults to multithreaded execution policy if ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1Internal_1_1TExecutor.html:10119,inherit,inherited,10119,doc/v632/classROOT_1_1Internal_1_1TExecutor.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1Internal_1_1TExecutor.html,2,['inherit'],['inherited']
Modifiability,"ond option is better in case less than 1/16 or more than 15/16 of entries pass the selection, and the representation can be changed by calling OptimizeStorage() function. When the block is being filled, it's always stored as bits, and the OptimizeStorage() function is called by TEntryList when it starts filling the next block. If Enter() or Remove() is called after OptimizeStorage(), representation is again changed to 1). Operations on blocks (see also function comments). Merge() - adds all entries from one block to the other. If the first block uses array representation, it's changed to bits representation only if the total number of passing entries is still less than kBlockSize; GetEntry(n) - returns n-th non-zero entry.; Next() - return next non-zero entry. In case of representation 1), Next() is faster than GetEntry() . Definition at line 43 of file TEntryListBlock.h. Public Types; enum  { kBlockSize = 4000; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TEntryListBlock ();  Default c-tor. ;  ;  TEntryListBlock (const TEntryListBlock &eblock);  Copy c-tor. ;  ;  ~TEntryListBlock () override;  Destructor. ;  ; Int_t Contains (Int_t entry);  True if the block contains entry #entry. ;  ; bool Enter (Int_t entry);  If the block has already been optimized and the entries are stored as a list and not as bits, trying to enter a new entry will make the block ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEntryListBlock.html:1646,inherit,inherited,1646,doc/master/classTEntryListBlock.html,https://root.cern,https://root.cern/doc/master/classTEntryListBlock.html,1,['inherit'],['inherited']
Modifiability,"ond, double* data); static voidIndexedLexSort(Int_t n, Int_t* first, Int_t swapFirst, Int_t* second, Int_t swapSecond, Int_t* index); voidTObject::MakeZombie(). private:. double*GetElements(). Data Members; public:. enum { kSizeMax; kWorkMax; };; enum EMatrixStatusBits { kStatus; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tfColLwblower bound of the col index; Bool_tfIsOwner!default kTRUE, when Use array kFALSE; Int_tfNcolsnumber of columns; Int_tfNelemsnumber of elements in matrix; Int_tfNrowIndexlength of row index array (= fNrows+1) wich is only used for sparse matrices; Int_tfNrowsnumber of rows; Int_tfRowLwblower bound of the row index; doublefTolsqrt(epsilon); epsilon is smallest number number so that 1+epsilon > 1. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void TMatrixTBase<Element> DoubleLexSort(Int_t n, Int_t* first, Int_t* second, double* data); Lexical sort on array data using indices first and second. void TMatrixTBase<Element> IndexedLexSort(Int_t n, Int_t* first, Int_t swapFirst, Int_t* second, Int_t swapSecond, Int_t* index); Lexical sort on array data using indices first and second. TMatrixTBase<Element> &TMatrixTBase<Element> SetMatrixArray(const double* data, Option_t* option = """"); Copy array data to matrix . It is assumed that array is of size >= fNelems; (=)))) fNrows*fNcols; option indicates how the data is stored in the array:; option =; 'F' : column major (Fortran) m[i][j] = array[i+j*fNrows]; else : row major (C) m[i][j] = array[i*fNcols+j] (default). Bool_t TMatrixTBase<Element> IsSymmetric() const; Check whether matrix is symmetric. void TMatrixTBase<Element> GetMatrix2Array(double* data, Option_t* option = """") const; Copy matrix data to array . It is assumed that arr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMatrixTBase_double_.html:15755,Inherit,Inheritance,15755,root/html532/TMatrixTBase_double_.html,https://root.cern,https://root.cern/root/html532/TMatrixTBase_double_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ondarySelectable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; DigitBase_t * NewDigit ();  Function providing highlight tooltips when always-sec-select is active. ;  ; void ReleaseIds ();  Protected method. ;  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TAttBBox;  TAttBBox (const TAttBBox &tab);  ; void AssertBBoxExtents (Float_t epsilon=0.005);  Assert extents of all sides of the bounding-box are at least epsilon. ;  ; void BBoxCheckPoint (const Float_t *p);  ; void BBoxCheckPoint (Float_t x, Float_t y, Float_t z);  ; void BBoxClear ();  Remove BBox information. ;  ; void BBoxInit (Float_t infinity=1e6);  Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max) ;  ; void BBoxZero (Float_t epsilon=0, Float_t x=0, Float_t y=0, Float_t z=0);  Create cube of volume (2*epsilon)^3 at (x,y,z). ;  ;  Protected Member Functions inherited from TEveSecondarySelectable; void ProcessGLSelectionInternal (TGLSelectRecord &rec, SelectionSet_t &sset);  Process secondary GL selection and populate given set accordingly. ;  . Protected Attributes; Bool_t fAntiFlick;  ; Callback_foo fCallbackFoo;  ; Color_t fColor;  The last / current idx added to collection. ;  ; Int_t fDefaultValue;  ; TRefArray",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveDigitSet.html:39945,inherit,inherited,39945,doc/master/classTEveDigitSet.html,https://root.cern,https://root.cern/doc/master/classTEveDigitSet.html,2,['inherit'],['inherited']
Modifiability,"ondition::Signal ; (; ). overridevirtual . If one or more threads have called Wait(), Signal() wakes up at least one of them, possibly more. ; See POSIX threads documentation for details. ; Implements TConditionImp.; Definition at line 90 of file TPosixCondition.cxx. ◆ Streamer(). void TPosixCondition::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TConditionImp. ◆ StreamerNVirtual(). void TPosixCondition::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 48 of file TPosixCondition.h. ◆ TimedWait(). Int_t TPosixCondition::TimedWait ; (; ULong_t ; secs, . ULong_t ; nanoSecs = 0 . ). overridevirtual . TimedWait() is given an absolute time to wait until. ; To wait for a relative time from now, use TThread::GetTime(). See POSIX threads documentation for why absolute times are better than relative. Returns 0 if successfully signalled, 1 if time expired. ; Implements TConditionImp.; Definition at line 74 of file TPosixCondition.cxx. ◆ Wait(). Int_t TPosixCondition::Wait ; (; ). overridevirtual . Wait for the condition variable to be signalled. ; The mutex is implicitely released before waiting and locked again after waking up. If Wait() is called by multiple threads, a signal may wake up more than one thread. See POSIX threads documentation for details. ; Implements TConditionImp.; Definition at line 63 of file TPosixCondition.cxx. Member Data Documentation. ◆ fCond. pthread_cond_t TPosixCondition::fCond. private . Definition at line 36 of file TPosixCondition.h. ◆ fMutex. TPosixMutex* TPosixCondition::fMutex. private . Definition at line 37 of file TPosixCondition.h. Libraries for TPosixCondition:. [legend]; The documentation for this class was generated from the following files:; core/thread/inc/TPosixCondition.h; core/thread/src/TPosixCondition.cxx. TPosixCondition. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:10 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPosixCondition.html:13683,variab,variable,13683,doc/master/classTPosixCondition.html,https://root.cern,https://root.cern/doc/master/classTPosixCondition.html,1,['variab'],['variable']
Modifiability,"onds; TStringTNamed::fTitleobject title; Long64_tTTree::fTotBytesTotal number of bytes in all branches before compression; Long64_tTTree::fTotalBuffers! Total number of bytes in branch buffers; TVirtualIndex*TTree::fTreeIndexPointer to the tree Index (if any); Int_tTTree::fUpdateUpdate frequency for EntryLoop; TList*TTree::fUserInfopointer to a list of user objects associated to this Tree; Double_tTTree::fWeightTree weight (see TTree::SetWeight); Long64_tTTree::fZipBytesTotal number of bytes in all branches after compression; static Int_tTTree::fgBranchStyleOld/New branch style; static Long64_tTTree::fgMaxTreeSizeMaximum size of a file containg a Tree. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TNtuple(); Default constructor for Ntuple*-*-*-*-*-*-*-*-; *-* ==============================. TNtuple(const char* name, const char* title, const char* varlist, Int_t bufsize = 32000); Create an Ntuple*-*-; *-* ================; The parameter varlist describes the list of the ntuple variables; separated by a colon:; example: ""x:y:z:energy""; For each variable in the list a separate branch is created. NOTE:; -Use TTree to create branches with variables of different data types.; -Use TTree when the number of branches is large (> 100).; -. ~TNtuple(); Default destructor for an Ntuple*-*-*-*-*-*-; *-* ================================. void ResetBranchAddress(TBranch* ); Reset the branch addresses to the internal fArgs array. Use this; method when the addresses were changed via calls to SetBranchAddress(). void ResetBranchAddresses(); Reset the branch addresses to the internal fArgs array. Use this; method when the addresses were changed via calls to SetBranchAddress(). void Browse(TBrowser* b); Browse content of the ntuple. Int_t Fill(); -*-*Fill a Ntuple with current values in fArgs; *-* ==========================================; Note that this function is protected.; Currently called only by TChain::Merge. Int_t Fill(const Float_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TNtuple.html:24373,variab,variables,24373,root/html528/TNtuple.html,https://root.cern,https://root.cern/root/html528/TNtuple.html,2,['variab'],"['variable', 'variables']"
Modifiability,"one () const override;  Return a clone of the object. ;  ; double DoEval (double x) const override;  Evaluate the function. ;  ; double DoEvalPar (double x, const double *p) const override;  Evaluate the function, using parameters p. ;  ; unsigned int NPar () const override;  Return the number of Parameters. ;  ; std::string ParameterName (unsigned int i) const override;  Return the name of the i-th parameter (starting from zero) ;  ; const double * Parameters () const override;  Access the parameter values. ;  ; void SetParameters (const double *p) override;  Set the parameter values. ;  ;  Public Member Functions inherited from ROOT::Math::IParametricFunctionOneDim; double operator() (const double *x, const double *p) const;  multidim-like interface ;  ; double operator() (double x, const double *p) const;  Evaluate function at a point x and for given parameters p. ;  ;  Public Member Functions inherited from ROOT::Math::IBaseFunctionOneDim; virtual ~IBaseFunctionOneDim ()=default;  ; virtual bool HasGradient () const;  ; double operator() (const double *x) const;  Evaluate the function at a point x[]. ;  ; double operator() (double x) const;  Evaluate the function at a point x. ;  ;  Public Member Functions inherited from ROOT::Math::IBaseParam; virtual ~IBaseParam ();  Virtual Destructor (no operations) ;  . Private Attributes; double fP [5];  . Additional Inherited Members;  Public Types inherited from ROOT::Math::IParametricFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  ;  Public Types inherited from ROOT::Math::IBaseFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  . #include <Math/VavilovAccuratePdf.h>. Inheritance diagram for ROOT::Math::VavilovAccuratePdf:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ VavilovAccuratePdf() [1/2]. ROOT::Math::VavilovAccuratePdf::VavilovAccuratePdf ; (; ). Default constructor. ; Definition at line 40 of file VavilovAccura",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1VavilovAccuratePdf.html:2324,inherit,inherited,2324,doc/master/classROOT_1_1Math_1_1VavilovAccuratePdf.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1VavilovAccuratePdf.html,1,['inherit'],['inherited']
Modifiability,"one () const override;  Return a clone of the object. ;  ; double DoEval (double x) const override;  Evaluate the function. ;  ; double DoEvalPar (double x, const double *p) const override;  Evaluate the function, using parameters p. ;  ; unsigned int NPar () const override;  Return the number of Parameters. ;  ; std::string ParameterName (unsigned int i) const override;  Return the name of the i-th parameter (starting from zero) ;  ; const double * Parameters () const override;  Access the parameter values. ;  ; void SetParameters (const double *p) override;  Set the parameter values. ;  ;  Public Member Functions inherited from ROOT::Math::IParametricFunctionOneDim; double operator() (const double *x, const double *p) const;  multidim-like interface ;  ; double operator() (double x, const double *p) const;  Evaluate function at a point x and for given parameters p. ;  ;  Public Member Functions inherited from ROOT::Math::IBaseFunctionOneDim; virtual ~IBaseFunctionOneDim ()=default;  ; virtual bool HasGradient () const;  ; double operator() (const double *x) const;  Evaluate the function at a point x[]. ;  ; double operator() (double x) const;  Evaluate the function at a point x. ;  ;  Public Member Functions inherited from ROOT::Math::IBaseParam; virtual ~IBaseParam ();  Virtual Destructor (no operations) ;  . Private Attributes; double fP [5];  . Additional Inherited Members;  Public Types inherited from ROOT::Math::IParametricFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  ;  Public Types inherited from ROOT::Math::IBaseFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  . #include <Math/VavilovAccurateQuantile.h>. Inheritance diagram for ROOT::Math::VavilovAccurateQuantile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ VavilovAccurateQuantile() [1/2]. ROOT::Math::VavilovAccurateQuantile::VavilovAccurateQuantile ; (; ). Default constructor. ; Definition at line",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1VavilovAccurateQuantile.html:2368,inherit,inherited,2368,doc/master/classROOT_1_1Math_1_1VavilovAccurateQuantile.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1VavilovAccurateQuantile.html,1,['inherit'],['inherited']
Modifiability,"one line per commit including author, date and log message. Heads of the different branches are clearly indicated. To see a graph view indicating branching graphically (just like git log --oneline --graph), do:; tig --all. A log can be selected with Enter to see the revision changes.; An example of useful application of the log view is interactive cherry-picking: just press 'C' to cherry-pick currently selected commit into your current branch.; Blame view; Blame view is extremely useful to see which lines were committed by whom. It is an improved version of the standard git blame command with a much clearer and interactive output.; Each line can be selected to display the associated full commit log and diff. Usage:; tig blame path/to/file.cxx. Interactive staging and current status; tig status opens an interactive display to quickly select files to be staged. Move over the file and press 'u' to (un)stage it. The .gitconfig file; This file contains global (~/.gitconfig) or repository-local configuration settings. You can (eg):. Set user and email information to label commits usefully:; git config --global user.name ""Chris Green"" ; git config --global user.email <email-address>. Set colors for various types of command output.; Set which local branches track which remote branches.; Set pull behavior for branches to be rebase rather than merge.; Define aliases as shortcuts for internal or external commands. See the attached .gitconfig example. Have fun!; Reproduced with permission from the following page: https://cdcvs.fnal.gov/redmine/projects/cet-is-public/wiki/GitTipsAndTri... by Chris Green. Sitemap. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. De",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/git-tips-and-tricks.html:18193,config,configuration,18193,d/git-tips-and-tricks.html,https://root.cern,https://root.cern/d/git-tips-and-tricks.html,1,['config'],['configuration']
Modifiability,"one no loop; ""fMatrix[2][] - fResults[5][2]"" three on 2nd dim fMatrix; ""fMatrix[2][] - fResults[5][]"" two on both 2nd dimensions; ""fMatrix[][2] - fResults[][1]"" three on both 1st dimensions; ""fMatrix[][2] - fResults[][]"" six on both 1st and 2nd dimensions of; fResults; ""fMatrix[][2] - fResults[3][]"" two on 1st dim of fMatrix and 2nd of; fResults (at the same time); ""fMatrix[][] - fResults[][]"" six on 1st dim then on 2nd dim. ""fMatrix[][fResult[][]]"" 30 on 1st dim of fMatrix then on both; dimensions of fResults. The value; if fResults[j][k] is used as the second; index of fMatrix. In summary, TTree::Draw loops through all un-specified dimensions. To; figure out the range of each loop, we match each unspecified dimension; from left to right (ignoring ALL dimensions for which an index has been; specified), in the equivalent loop matched dimensions use the same index; and are restricted to the smallest range (of only the matched dimensions).; When involving variable arrays, the range can of course be different; for each entry of the tree. So the loop equivalent to ""fMatrix[][2] - fResults[3][]"" is:. for (Int_t i0; i < min(3,2); i++) {; use the value of (fMatrix[i0][2] - fMatrix[3][i0]); }. So the loop equivalent to ""fMatrix[][2] - fResults[][]"" is:. for (Int_t i0; i < min(3,5); i++) {; for (Int_t i1; i1 < 2; i1++) {; use the value of (fMatrix[i0][2] - fMatrix[i0][i1]); }; }. So the loop equivalent to ""fMatrix[][] - fResults[][]"" is:. for (Int_t i0; i < min(3,5); i++) {; for (Int_t i1; i1 < min(3,2); i1++) {; use the value of (fMatrix[i0][i1] - fMatrix[i0][i1]); }; }. So the loop equivalent to ""fMatrix[][fResults[][]]"" is:. for (Int_t i0; i0 < 3; i0++) {; for (Int_t j2; j2 < 5; j2++) {; for (Int_t j3; j3 < 2; j3++) {; i1 = fResults[j2][j3];; use the value of fMatrix[i0][i1]; }; }. Retrieving the result of Draw. By default the temporary histogram created is called ""htemp"", but only in; the one dimensional Draw(""e1"") it contains the TTree's data points. For; a two dimension",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TTree.html:69472,variab,variable,69472,root/html530/TTree.html,https://root.cern,https://root.cern/root/html530/TTree.html,3,['variab'],['variable']
Modifiability,"one no loop; ""fMatrix[2][] - fResults[5][2]"" three on 2nd dim fMatrix; ""fMatrix[2][] - fResults[5][]"" two on both 2nd dimensions; ""fMatrix[][2] - fResults[][1]"" three on both 1st dimensions; ""fMatrix[][2] - fResults[][]"" six on both 1st and 2nd dimensions of; fResults; ""fMatrix[][2] - fResults[3][]"" two on 1st dim of fMatrix and 2nd of; fResults (at the same time); ""fMatrix[][] - fResults[][]"" six on 1st dim then on 2nd dim. ""fMatrix[][fResult[][]]"" 30 on 1st dim of fMatrix then on both; dimensions of fResults. The value; if fResults[j][k] is used as the second; index of fMatrix. In summary, TTree::Draw loops through all un-specified dimensions. To; figure out the range of each loop, we match each unspecified dimension; from left to right (ignoring ALL dimensions for which an index has been; specified), in the equivalent loop matched dimensions use the same index; and are restricted to the smallest range (of only the matched dimensions).; When involving variable arrays, the range can of course be different; for each entry of the tree. So the loop equivalent to ""fMatrix[][2] - fResults[3][]"" is:. for (Int_t i0; i0 < min(3,2); i0++) {; use the value of (fMatrix[i0][2] - fMatrix[3][i0]); }. So the loop equivalent to ""fMatrix[][2] - fResults[][]"" is:. for (Int_t i0; i0 < min(3,5); i0++) {; for (Int_t i1; i1 < 2; i1++) {; use the value of (fMatrix[i0][2] - fMatrix[i0][i1]); }; }. So the loop equivalent to ""fMatrix[][] - fResults[][]"" is:. for (Int_t i0; i0 < min(3,5); i0++) {; for (Int_t i1; i1 < min(3,2); i1++) {; use the value of (fMatrix[i0][i1] - fResults[i0][i1]); }; }. So the loop equivalent to ""fMatrix[][fResults[][]]"" is:. for (Int_t i0; i0 < 3; i0++) {; for (Int_t j2; j2 < 5; j2++) {; for (Int_t j3; j3 < 2; j3++) {; i1 = fResults[j2][j3];; use the value of fMatrix[i0][i1]; }; }. Saving the result of Draw to an histogram. By default the temporary histogram created is called htemp.; One can retrieve a pointer to this histogram with:; TH1F *htemp = (TH1F*)gPad->GetP",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTreePlayer.html:23997,variab,variable,23997,root/html528/TTreePlayer.html,https://root.cern,https://root.cern/root/html528/TTreePlayer.html,1,['variab'],['variable']
Modifiability,"one unified foam (fFoam[0]) whose cells contain the average discriminator (N_sig)/(N_sig + N_bg) ;  ; EKernel UIntToKernel (UInt_t iker);  convert UInt_t to EKernel (used for reading weight files) ;  ; ETargetSelection UIntToTargetSelection (UInt_t its);  convert UInt_t to ETargetSelection (used for reading weight files) ;  ; void WriteFoamsToFile () const;  Write PDEFoams to file. ;  ;  Public Member Functions inherited from TMVA::MethodBase;  MethodBase (const TString &jobName, Types::EMVA methodType, const TString &methodTitle, DataSetInfo &dsi, const TString &theOption="""");  standard constructor ;  ;  MethodBase (Types::EMVA methodType, DataSetInfo &dsi, const TString &weightFile);  constructor used for Testing + Application of the MVA, only (no training), using given WeightFiles ;  ; virtual ~MethodBase ();  destructor ;  ; void AddOutput (Types::ETreeType type, Types::EAnalysisType analysisType);  ; TDirectory * BaseDir () const;  returns the ROOT directory where info/histograms etc of the corresponding MVA method instance are stored ;  ; virtual void CheckSetup ();  check may be overridden by derived class (sometimes, eg, fitters are used which can only be implemented during training phase) ;  ; DataSet * Data () const;  ; DataSetInfo & DataInfo () const;  ; void DisableWriting (Bool_t setter);  ; Bool_t DoMulticlass () const;  ; Bool_t DoRegression () const;  ; void ExitFromTraining ();  ; Types::EAnalysisType GetAnalysisType () const;  ; UInt_t GetCurrentIter ();  ; virtual Double_t GetEfficiency (const TString &, Types::ETreeType, Double_t &err);  fill background efficiency (resp. ;  ; const Event * GetEvent () const;  ; const Event * GetEvent (const TMVA::Event *ev) const;  ; const Event * GetEvent (Long64_t ievt) const;  ; const Event * GetEvent (Long64_t ievt, Types::ETreeType type) const;  ; const std::vector< TMVA::Event * > & GetEventCollection (Types::ETreeType type);  returns the event collection (i.e. ;  ; TFile * GetFile () const;  ; const TString",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodPDEFoam.html:5322,inherit,inherited,5322,doc/master/classTMVA_1_1MethodPDEFoam.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodPDEFoam.html,1,['inherit'],['inherited']
Modifiability,"one width ; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; TGButtonGroup*fgrGroup the Radiobuttons:. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGraphEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor of graph editor. ~TGraphEditor(); Destructor of graph editor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Pick up the used values of graph attributes. void DoTitle(const char* text); Slot for setting the graph title. void DoShape(); Slot connected to the draw options. void DoMarkerOnOff(Bool_t on); Slot for setting markers as visible/invisible. void DoGraphLineWidth(); Slot connected to the graph line width. » Author: Carsten Hof 28/07/04 » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: root/ged:$Id: TGraphEditor.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-11-03 20:17; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGraphEditor.html:20869,Inherit,Inheritance,20869,root/html532/TGraphEditor.html,https://root.cern,https://root.cern/root/html532/TGraphEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"one x-dimension and 2 parameters:. f1(x, [omega], [phi]); f1([0..1]); f1([1], [0]); f1(y). To replace only parameter names, the dimension variable can be dropped. Alternatively, to change only the dimension variable, the parameters can be dropped. Note that if a parameter is dropped or keeps its old name, its old value will be copied to the new function. The syntax used in the examples above also applies to the predefined parametrized functions like gaus and expo.; Comparisons operators are also supported (&amp;&amp;, ||, ==, &lt;=, &gt;=, !); Examples:; sin(x*(x&lt;0.5 || x&gt;1)); If the result of a comparison is TRUE, the result is 1, otherwise 0.; Already predefined names can be given. For example, if the formula; TFormula old(""old"",sin(x*(x&lt;0.5 || x&gt;1))); one can assign a name to the formula. By default the name of the object = title = formula itself.; TFormula new(""new"",""x*old""); is equivalent to:; TFormula new(""new"",""x*sin(x*(x&lt;0.5 || x&gt;1))""); The class supports unlimited number of variables and parameters. By default the names which can be used for the variables are x,y,z,t or x[0],x[1],x[2],x[3],....x[N] for N-dimensional formulas.; This class is not anymore the base class for the function classes TF1, but it has now a data member of TF1 which can be accessed via TF1::GetFormula.; TFormula supports gradient and hessian calculations through clad. To calculate the gradient one needs to first declare a CladStorage of the same size as the number of parameters and then pass the variables and the created CladStorage:; TFormula f(""f"", ""x*[0] - y*[1]"");; Double_t p[] = {40, 30};; Double_t x[] = {1, 2};; f.SetParameters(p);; TFormula::CladStorage grad(2);; f.GradientPar(x, grad);; f#define f(i)Definition RSha256.hxx:104; Double_tdouble Double_tDefinition RtypesCore.h:59; pwinID h TVirtualViewer3D TVirtualGLPainter pDefinition TGWin32VirtualGLProxy.cxx:51; TFormulaThe Formula class.Definition TFormula.h:89; TFormula::CladStoragestd::vector< Double_t > Clad",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFormula.html:3177,variab,variables,3177,doc/master/classTFormula.html,https://root.cern,https://root.cern/doc/master/classTFormula.html,1,['variab'],['variables']
Modifiability,"one; kLODAxesX; kLODAxesY; kLODAxesZ; kLODAxesAll; };. protected:. TGLBoundingBoxTGLLogicalShape::fBoundingBox! Shape's bounding box.; UInt_tTGLLogicalShape::fDLBase! display-list id base; Bool_tTGLLogicalShape::fDLCache! use display list caching; Int_tTGLLogicalShape::fDLSize! display-list size for different LODs; UShort_tTGLLogicalShape::fDLValid! display-list validity bit-field; TObject*TGLLogicalShape::fExternalObj! Also plays the role of ID.; TGLPhysicalShape*TGLLogicalShape::fFirstPhysical! first replica; set<Int_t>*fHighlightSet; Bool_tTGLObject::fMultiColorAre multiple colors used for object rendering.; Bool_tTGLLogicalShape::fOwnExtObj! External object is a fake; UInt_tTGLLogicalShape::fRef! physical instance ref counting; Bool_tTGLLogicalShape::fRefStrong! Strong ref (delete on 0 ref); not in scene; TGLScene*TGLLogicalShape::fScene! scene where object is stored (can be zero!); static Bool_tTGLLogicalShape::fgIgnoreSizeForCameraInterest. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Bool_t SetupColor(const TEveDigitSet::DigitBase_t& q) const; Set color for rendering of the specified digit. void DrawFrameIfNeeded(TGLRnrCtx& rnrCtx) const; Make a decision if the frame should be drawn.; This depends on the render state (selection / highligt) and; on values of members fSelectViaFrame and fHighlightFrame. void SetBBox(); Set bounding box. void DrawHighlight(TGLRnrCtx& rnrCtx, const TGLPhysicalShape* pshp, Int_t lvl = -1) const; Draw the quad-set in highlight mode.; Incoming lvl is ignored -- physical shape always calls it with -1. void ProcessSelection(TGLRnrCtx& rnrCtx, TGLSelectRecord& rec); Processes secondary selection from TGLViewer.; Calls DigitSelected(Int_t) in the model object with index of; selected point as the argument. TEveDigitSetGL& operator=(const TEveDigitSetGL& ). virtual ~TEveDigitSetGL(); {}. Bool_t SupportsSecondarySelect() const; { return kTRUE; }. Bool_t AlwaysSecondarySelect() const; { return ((",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveDigitSetGL.html:4247,Inherit,Inheritance,4247,root/html534/TEveDigitSetGL.html,https://root.cern,https://root.cern/root/html534/TEveDigitSetGL.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onent selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; RooCategoryProxy_stateProxy to hiding state category; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~RooAbsHiddenReal(); Destructor. void printValue(ostream& stream) const; Special version of printValue that doesn't reveal the objects value. Bool_t readFromStream(istream& is, Bool_t compact, Bool_t verbose = kFALSE); Special version of readFromStream that disallows reading from stream. void writeToStream(ostream& os, Bool_t compact) const; Special version of writeToStream that disallows reading from stream. RooAbsCategory& dummyBlindState() const; Return reference to internal dummy RooCategory implementation; blinding state switch. Bool_t isHidden() const; If true, hiding mode is active. Double_t getHiddenVal(const RooArgSet* nset = 0) const; Bypass accessor to function value that also works in hidden mode. Double_t getValV(const RooArgSet* nset = 0) const; This is dubious from a C++ point of view, but it blocks the interactive user; from accidentally calling getVal() without explicit cast, which is the whole; point of this class. » ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsHiddenReal.html:35878,Inherit,Inheritance,35878,root/html534/RooAbsHiddenReal.html,https://root.cern,https://root.cern/root/html534/RooAbsHiddenReal.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onf); 1906 {; 1907 // Collection of numbers. Memberwise or not, it is all the same.; 1908 ; 1909 TConfigSTL *config = (TConfigSTL*)conf;; 1910 UInt_t start, count;; 1911 /* Version_t vers = */ buf.ReadVersion(&start, &count, config->fOldClass);; 1912 ; 1913 std::vector<T> *const vec = (std::vector<T>*)(((char*)addr)+config->fOffset);; 1914 Int_t nvalues;; 1915 buf.ReadInt(nvalues);; 1916 vec->resize(nvalues);; 1917 ; 1918#ifdef R__VISUAL_CPLUSPLUS; 1919 if (nvalues <= 0) {; 1920 buf.CheckByteCount(start,count,config->fTypeName);; 1921 return 0;; 1922 }; 1923#endif; 1924 T *begin = &(*vec->begin());; 1925 buf.ReadFastArray(begin, nvalues);; 1926 ; 1927 buf.CheckByteCount(start,count,config->fTypeName);; 1928 return 0;; 1929 }; 1930 ; 1931 ; 1932 static INLINE_TEMPLATE_ARGS Int_t ReadCollectionFloat16(TBuffer &buf, void *addr, const TConfiguration *conf); 1933 {; 1934 // Collection of numbers. Memberwise or not, it is all the same.; 1935 ; 1936 TConfigSTL *config = (TConfigSTL*)conf;; 1937 UInt_t start, count;; 1938 /* Version_t vers = */ buf.ReadVersion(&start, &count, config->fOldClass);; 1939 ; 1940 std::vector<float> *const vec = (std::vector<float>*)(((char*)addr)+config->fOffset);; 1941 Int_t nvalues;; 1942 buf.ReadInt(nvalues);; 1943 vec->resize(nvalues);; 1944 ; 1945#ifdef R__VISUAL_CPLUSPLUS; 1946 if (nvalues <= 0) {; 1947 buf.CheckByteCount(start,count,config->fTypeName);; 1948 return 0;; 1949 }; 1950#endif; 1951 float *begin = &(*vec->begin());; 1952 buf.ReadFastArrayFloat16(begin, nvalues);; 1953 ; 1954 buf.CheckByteCount(start,count,config->fTypeName);; 1955 return 0;; 1956 }; 1957 ; 1958 static INLINE_TEMPLATE_ARGS Int_t ReadCollectionDouble32(TBuffer &buf, void *addr, const TConfiguration *conf); 1959 {; 1960 // Collection of numbers. Memberwise or not, it is all the same.; 1961 ; 1962 TConfigSTL *config = (TConfigSTL*)conf;; 1963 UInt_t start, count;; 1964 /* Version_t vers = */ buf.ReadVersion(&start, &count, config->fOldClass);; 1965 ; 1966 std::vect",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:80728,config,config,80728,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"onfig()->getConfigSection(""RooFoamGenerator"").setRealValue(""nSample"",1e4);; The foam generator e.g. has the following config options:; nCell[123N]D; nSample; chatLevel See alsorf902_numgenconfig.C. PyROOT; The RooAbsPdf::generate() function is pythonized with the command argument pythonization. The keywords must correspond to the CmdArgs of the function. . Definition at line 1210 of file RooAbsPdf.cxx. ◆ generate() [2/6]. RooFit::OwningPtr< RooDataSet > RooAbsPdf::generate ; (; const RooArgSet & ; whatVars, . const RooDataSet & ; prototype, . Int_t ; nEvents = 0, . bool ; verbose = false, . bool ; randProtoOrder = false, . bool ; resampleProto = false . ); const. Generate a new dataset using a prototype dataset as a model, with values of the variables in whatVars sampled from our distribution. ; Parameters. [in]whatVarsGenerate for these variables. ; [in]prototypeUse this dataset as a prototype: the new dataset will contain the same number of events as the prototype (by default), and any prototype variables not in whatVars will be copied into the new dataset for each generated event and also used to set our PDF parameters. The user can specify a number of events to generate that will override the default. The result is a copy of the prototype dataset with only variables in whatVars randomized. Variables in whatVars that are not in the prototype will be added as new columns to the generated dataset. ; [in]nEventsNumber of events to generate. Defaults to 0, which means number of event in prototype dataset. ; [in]verboseShow which generator strategies are being used. ; [in]randProtoOrderRandomise order of retrieval of events from proto dataset. ; [in]resampleProtoResample from the proto dataset. . ReturnsThe new dataset. Returns zero in case of an error. The caller takes ownership of the returned dataset. ; Definition at line 1469 of file RooAbsPdf.cxx. ◆ generate() [3/6]. RooFit::OwningPtr< RooDataSet > RooAbsPdf::generate ; (; const RooArgSet & ; whatVars, . double ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsPdf.html:117171,variab,variables,117171,doc/master/classRooAbsPdf.html,https://root.cern,https://root.cern/doc/master/classRooAbsPdf.html,1,['variab'],['variables']
Modifiability,"onfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooExtendedTerm(); Constructor. RooExtendedTerm(const char* name, const char* title, const RooAbsReal& n); Constructor. An ExtendedTerm has no observables, it only introduces an extended; ML term with the given number of expected events when an extended ML is constructed; from this p.d.f. RooExtendedTerm(const RooExtendedTerm& other, const char* name = 0); Copy constructor. ~RooExtendedTerm(); Destructor. Double_t expectedEvents(const RooArgSet* nset) const; Return number of expected events from associated event count variable. TObject* clone(const char* newname) const; { return new RooExtendedTerm(*this,newname) ; }. Double_t evaluate() const; { return 1. ; }. ExtendMode extendMode() const; { return CanBeExtended ; }. Double_t expectedEvents(const RooArgSet* nset) const. » Last changed: Tue Mar 10 17:16:40 2015 » Last generated: 2015-03-10 17:16; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooExtendedTerm.html:43368,extend,extended,43368,root/html534/RooExtendedTerm.html,https://root.cern,https://root.cern/root/html534/RooExtendedTerm.html,10,"['Extend', 'extend', 'variab']","['ExtendMode', 'ExtendedTerm', 'extendMode', 'extended', 'variable']"
Modifiability,"onfig;; 906 buf.ReadWithFactor((T*)( ((char*)addr) + config->fOffset ), conf->fFactor, conf->fXmin);; 907 return 0;; 908 }; 909 ; 910 class TConfNoFactor : public TConfiguration {; 911 // Configuration object for the Float16/Double32 where a factor has been specified.; 912 public:; 913 Int_t fNbits;; 914 TConfNoFactor(TVirtualStreamerInfo *info, UInt_t id, TCompInfo_t *compinfo, Int_t offset, Int_t nbits) : TConfiguration(info,id,compinfo,offset),fNbits(nbits) {};; 915 TConfiguration *Copy() override { return new TConfNoFactor(*this); }; 916 };; 917 ; 918 template <typename T>; 919 INLINE_TEMPLATE_ARGS Int_t ReadBasicType_NoFactor(TBuffer &buf, void *addr, const TConfiguration *config); 920 {; 921 // Stream a Float16 or Double32 where a factor has not been specified.; 922 ; 923 TConfNoFactor *conf = (TConfNoFactor *)config;; 924 Int_t nbits = conf->fNbits;; 925 ; 926 buf.ReadWithNbits( (T*)( ((char*)addr) + config->fOffset ), nbits );; 927 return 0;; 928 }; 929 ; 930 INLINE_TEMPLATE_ARGS Int_t ReadTString(TBuffer &buf, void *addr, const TConfiguration *config); 931 {; 932 // Read in a TString object.; 933 ; 934 // Idea: We could separate the TString Streamer in its two parts and; 935 // avoid the if (buf.IsReading()) and try having it inlined.; 936 ((TString*)(((char*)addr)+config->fOffset))->TString::Streamer(buf);; 937 return 0;; 938 }; 939 ; 940 INLINE_TEMPLATE_ARGS Int_t ReadTObject(TBuffer &buf, void *addr, const TConfiguration *config); 941 {; 942 // Read in a TObject object part.; 943 ; 944 // Idea: We could separate the TObject Streamer in its two parts and; 945 // avoid the if (buf.IsReading()).; 946 ((TObject*)(((char*)addr)+config->fOffset))->TObject::Streamer(buf);; 947 return 0;; 948 }; 949 ; 950 INLINE_TEMPLATE_ARGS Int_t ReadTNamed(TBuffer &buf, void *addr, const TConfiguration *config); 951 {; 952 // Read in a TNamed object part.; 953 // Since the TNamed streamer is solely delegating back to the StreamerInfo we; 954 // can skip the streamer.; 955 ; 95",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:37706,config,config,37706,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,2,['config'],['config']
Modifiability,"onfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TMVA::IFitterTarget&TMVA::FitterBase::GetFitterTarget() const; virtual const char*TObject::GetIconName() const; virtual const char*TMVA::FitterBase::GetName() const; Int_tTMVA::FitterBase::GetNpars() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TString&TMVA::Configurable::GetOptions() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; TMVA::IFitterTargetTMVA::IFitterTarget::IFitterTarget(); TMVA::IFitterTargetTMVA::IFitterTarget::IFitterTarget(const TMVA::IFitterTarget&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInit(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; TMVA::MinuitFitterMinuitFitter(const TMVA::MinuitFitter&); TMVA::MinuitFitterMinuitFitter(TMVA::IFitterTarget& target, const TString& name, vector<TMVA::Interval*>& ranges, const TString& theOption); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::opera",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MinuitFitter.html:3358,Inherit,InheritsFrom,3358,root/html602/TMVA__MinuitFitter.html,https://root.cern,https://root.cern/root/html602/TMVA__MinuitFitter.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FlexibleInterpVar(); Default constructor. FlexibleInterpVar(const char* name, const char* title, const RooArgList& _paramList, Double_t nominal, const RooArgList& low, const RooArgList& high). FlexibleInterpVar(const char* name, const char* title, const RooArgList& _paramList, double nominal, vector<double> low, vector<double> high). FlexibleInterpVar(const char* name, const char* title, const RooArgList& _paramList, double nominal, vector<double> low, vector<double> high, vector<int> code). FlexibleInterpVar(const char* name, const char* title); Constructor of flat polynomial function. FlexibleInterpVar(const RooStats::HistFactory::FlexibleInterpVar& , const char* ); Copy constructor. ~FlexibleInterpVar(); Destructor. void setInterpCode(RooAbsReal& param, int code). void setAllInterpCodes(int code). void setNominal(Double_t newNominal). void setLow(RooAbsReal& param, Double_t newLow). void setHigh(RooAbsReal& param, Double_t newHigh). void printAllInterpCodes(). double PolyInterpValue(int i, double x) const. Double_t evaluate() const; Calculate and return value of polynomial. void printMultiline(ostream& os, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const. void printFlexibleInterpVars(ostream& os) const. FlexibleInterpVar()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__HistFactory__FlexibleInterpVar.html:38783,Flexible,FlexibleInterpVar,38783,root/html602/RooStats__HistFactory__FlexibleInterpVar.html,https://root.cern,https://root.cern/root/html602/RooStats__HistFactory__FlexibleInterpVar.html,2,['Flexible'],['FlexibleInterpVar']
Modifiability,"onfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction4Ref<double,double,double,double,bool>funcFunction pointer reference; RooRealProxywArgument reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction4Ref<VO,VI1,VI2,VI3,VI4> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction4Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Jun 30 14:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction4PdfBinding_double_double_double_double_bool_.html:45820,Inherit,Inheritance,45820,root/html602/RooCFunction4PdfBinding_double_double_double_double_bool_.html,https://root.cern,https://root.cern/root/html602/RooCFunction4PdfBinding_double_double_double_double_bool_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction4Ref<double,double,double,double,bool>funcFunction pointer reference; RooRealProxywArgument reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction4Ref<VO,VI1,VI2,VI3,VI4> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction4Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Sep 8 17:4",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooCFunction4PdfBinding_double_double_double_double_bool_.html:45820,Inherit,Inheritance,45820,root/html604/RooCFunction4PdfBinding_double_double_double_double_bool_.html,https://root.cern,https://root.cern/root/html604/RooCFunction4PdfBinding_double_double_double_double_bool_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxyxDependent/convolution variable. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void cleanup(); Cleanup hook for RooSentinel atexit handler. RooResolutionModel(const char* name, const char* title, RooRealVar& x); Constructor with convolution variable 'x'. RooResolutionModel(const RooResolutionModel& other, const char* name = 0); Copy constructor. ~RooResolutionModel(); Destructor. RooFormulaVar* identity(); Return identity formula pointer. RooResolutionModel* convolution(RooFormulaVar* basis, RooAbsArg* owner) const; Instantiate a clone of this resolution model representing a convolution with given; basis function. The owners object name is incorporated in the clones name; to avoid multiple convolution objects with the same name in complex PDF structures. Note: The 'inBasis' formula expression must be a RooFormulaVar that encodes the formula; in the title of the object and this expression must be an exact match against the; implemented basis function strings (see derived class implementation of method basisCode(); for those strings. void changeBasis(RooFormulaVar* basis); Change the basis function we convolute with.; For one-time use by convolution() only. const RooRealVar& basis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooResolutionModel.html:47575,variab,variable,47575,root/html602/RooResolutionModel.html,https://root.cern,https://root.cern/root/html602/RooResolutionModel.html,4,['variab'],['variable']
Modifiability,onfigVec_tfBoolParameters; UChar_tTEveElement::fCSCBits; Bool_tTEveElement::fCanEditMainColorAllow editing of main color.; Bool_tTEveElement::fCanEditMainTransAllow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; TEveElement::List_tTEveElement::fChildrenList of children.; Color_tfColor; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; TEveParamList::FloatConfigVec_tfFloatParameters; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; TEveParamList::IntConfigVec_tfIntParameters; TEveElement::sLTI_tTEveElement::fItems! Set of list-tree-items.; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; TEveElement::List_tTEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externally assigned and controlled user dat,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveParamList.html:21653,variab,variable,21653,root/html602/TEveParamList.html,https://root.cern,https://root.cern/root/html602/TEveParamList.html,4,['variab'],['variable']
Modifiability,"onfigurable ;  ; OptionBase * fLastDeclaredOption;  ! last declared option ;  ; TList fListOfOptions;  option list ;  ; Bool_t fLooseOptionCheckingEnabled;  checker for option string ;  ; TString fOptions;  options string ;  ; TString fReferenceFile;  reference file for options writing ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TMVA/Configurable.h>. Inheritance diagram for TMVA::Configurable:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ Configurable(). TMVA::Configurable::Configurable ; (; const TString & ; theOption = """"). constructor ; Definition at line 66 of file Configurable.cxx. ◆ ~Configurable(). TMVA::Configurable::~Configurable ; (; ). virtual . default destructor ; Definition at line 84 of file Configurable.cxx. Member Function Documentation. ◆ AddOptionsXMLTo(). void TMVA::Configurable::AddOptionsXMLTo ; (; void * ; parent); const. write options to XML file ; Definition at line 349 of file Configurable.cxx. ◆ AddPreDefVal() [1/2]. template<class T > . void TMVA::Configurable::AddPreDefVal ; (; const T & ; val). Definition at line 168 of file Configurable.h. ◆ AddPreDefVal() [2/2]. template<class T > . void TMVA::Configurable::AddPreDefVal ; (; const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Configurable.html:13703,inherit,inherited,13703,doc/master/classTMVA_1_1Configurable.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Configurable.html,1,['inherit'],['inherited']
Modifiability,"onfigurable::EnableLooseOptions(Bool_t b = kTRUE); voidForceNetworkCalculations(); voidForceNetworkInputs(const TMVA::Event* ev, Int_t ignoreIndex = -1); virtual voidTMVA::IMethod::GetHelpMessage() const; TMVA::TNeuron*GetInputNeuron(Int_t index); const TString&TMVA::MethodBase::GetInternalVarName(Int_t ivar) const; Double_tGetNetworkOutput(); const TString&TMVA::MethodBase::GetOriginalVarName(Int_t ivar) const; TMVA::TNeuron*GetOutputNeuron(Int_t index = 0); const TString&TMVA::Configurable::GetReferenceFile() const; static TMVA::MethodBase*TMVA::MethodBase::GetThisBase(); Float_tTMVA::MethodBase::GetTWeight(const TMVA::Event* ev) const; const TString&TMVA::MethodBase::GetWeightFileDir() const; Bool_tTMVA::MethodBase::HasTrainingTree() const; Bool_tTMVA::MethodBase::Help() const; Bool_tTMVA::MethodBase::IgnoreEventsWithNegWeightsInTraining() const; Bool_tTMVA::MethodBase::IsConstructedFromWeightFile() const; Bool_tTMVA::MethodBase::IsNormalised() const; TMVA::MsgLogger&TMVA::Configurable::Log() const; Bool_tTMVA::Configurable::LooseOptionCheckingEnabled() const; virtual voidMakeClassSpecific(ostream&, const TString&) const; virtual voidTMVA::MethodBase::MakeClassSpecificHeader(ostream&, const TString& = """") const; voidTObject::MakeZombie(); voidTMVA::MethodBase::NoErrorCalc(Double_t *const err, Double_t *const errUpper); Int_tNumCycles(); vector<Int_t>*ParseLayoutString(TString layerSpec); voidPrintMessage(TString message, Bool_t force = kFALSE) const; voidTMVA::Configurable::ResetSetFlag(); voidTMVA::MethodBase::SetNormalised(Bool_t norm); voidTMVA::MethodBase::SetWeightFileDir(TString fileDir); voidTMVA::MethodBase::SetWeightFileName(TString); voidTMVA::MethodBase::Statistics(TMVA::Types::ETreeType treeType, const TString& theVarName, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&); Bool_tTMVA::MethodBase::TxtWeightsOnly() const; Bool_tTMVA::MethodBase::Verbose() const; voidWaitForKeyboard(); voidTMVA::Configurable::WriteOptionsReferenceToFile().",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodANNBase.html:14201,Config,Configurable,14201,root/html532/TMVA__MethodANNBase.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodANNBase.html,4,"['Config', 'layerS']","['Configurable', 'layerSpec']"
Modifiability,"onfiguration * ; conf, . Version_t ; vers . ). inline . Definition at line 1188 of file TStreamerInfoActions.cxx. ◆ ReadBasicType(). template<typename T > . Int_t TStreamerInfoActions::ReadBasicType ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 206 of file TStreamerInfoActions.cxx. ◆ ReadBasicType< BitsMarker >(). template<> . Int_t TStreamerInfoActions::ReadBasicType< BitsMarker > ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 235 of file TStreamerInfoActions.cxx. ◆ ReadBasicType_NoFactor(). template<typename T > . Int_t TStreamerInfoActions::ReadBasicType_NoFactor ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 919 of file TStreamerInfoActions.cxx. ◆ ReadBasicType_WithFactor(). template<typename T > . Int_t TStreamerInfoActions::ReadBasicType_WithFactor ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; config . ). inline . Definition at line 900 of file TStreamerInfoActions.cxx. ◆ ReadLoopInvalid(). Int_t TStreamerInfoActions::ReadLoopInvalid ; (; TBuffer & ; , . void * ; , . const void * ; , . const TConfiguration * ; config . ). Definition at line 1685 of file TStreamerInfoActions.cxx. ◆ ReadSTL(). template<void(*)(TBuffer &, void *, const TConfiguration *, Version_t) memberwise, void(*)(TBuffer &, void *, const TConfiguration *, Version_t, UInt_t) objectwise> . Int_t TStreamerInfoActions::ReadSTL ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; conf . ). inline . Definition at line 1399 of file TStreamerInfoActions.cxx. ◆ ReadSTLMemberWiseChangedClass(). void TStreamerInfoActions::ReadSTLMemberWiseChangedClass ; (; TBuffer & ; buf, . void * ; addr, . const TConfiguration * ; conf, . Version_t ; vers . ). inline . Definition at line 1266 of file TStreamerInfoActions.cxx. ◆ ReadSTLMemberWiseSameClass(). void TStreamerInfoActions::ReadSTLMemberWiseSameClass ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceTStreamerInfoActions.html:12143,config,config,12143,doc/master/namespaceTStreamerInfoActions.html,https://root.cern,https://root.cern/doc/master/namespaceTStreamerInfoActions.html,1,['config'],['config']
Modifiability,onfiguration ; : 180 | 6997.03 6032.07 0.0204217 0.00180691 42976.5 0; : 181 Minimum Test error found - save the configuration ; : 181 | 6939.07 5975.45 0.0200798 0.00180145 43767.5 0; : 182 Minimum Test error found - save the configuration ; : 182 | 6882.6 5919.11 0.0200699 0.00180792 43806.8 0; : 183 Minimum Test error found - save the configuration ; : 183 | 6826.1 5863.62 0.0200838 0.00180862 43775.3 0; : 184 Minimum Test error found - save the configuration ; : 184 | 6771.06 5807.61 0.0200991 0.00181199 43746.7 0; : 185 Minimum Test error found - save the configuration ; : 185 | 6714.64 5753.86 0.0200873 0.00180851 43766.7 0; : 186 Minimum Test error found - save the configuration ; : 186 | 6660.45 5699.55 0.0200713 0.00180648 43800 0; : 187 Minimum Test error found - save the configuration ; : 187 | 6606 5645.81 0.0200891 0.00180584 43755.9 0; : 188 Minimum Test error found - save the configuration ; : 188 | 6552.47 5592.04 0.0200898 0.00181079 43766 0; : 189 Minimum Test error found - save the configuration ; : 189 | 6500.15 5537.2 0.0201183 0.00181031 43696.6 0; : 190 Minimum Test error found - save the configuration ; : 190 | 6444.37 5487.05 0.0200871 0.00180586 43760.7 0; : 191 Minimum Test error found - save the configuration ; : 191 | 6394.21 5433.57 0.0200994 0.00180152 43720.8 0; : 192 Minimum Test error found - save the configuration ; : 192 | 6340.82 5382.29 0.0201748 0.00181779 43580.1 0; : 193 Minimum Test error found - save the configuration ; : 193 | 6289.73 5330.56 0.0202017 0.00183095 43547.4 0; : 194 Minimum Test error found - save the configuration ; : 194 | 6238.01 5279.82 0.0201002 0.00180964 43738.5 0; : 195 Minimum Test error found - save the configuration ; : 195 | 6186.17 5231.06 0.0200801 0.00180696 43780.1 0; : 196 Minimum Test error found - save the configuration ; : 196 | 6137.18 5180.37 0.0200943 0.00180721 43746.7 0; : 197 Minimum Test error found - save the configuration ; : 197 | 6087.3 5129.97 0.0200908 0.00180793 43756.8 0; : 1,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:32299,config,configuration,32299,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,onfiguration ; : 217 | 5167.13 4226.2 0.0205987 0.00192627 42843.8 0; : 218 Minimum Test error found - save the configuration ; : 218 | 5125.25 4184.98 0.0205604 0.00182022 42689.1 0; : 219 Minimum Test error found - save the configuration ; : 219 | 5082.85 4144.99 0.0201692 0.00184819 43665.6 0; : 220 Minimum Test error found - save the configuration ; : 220 | 5041.97 4104.3 0.0201733 0.00183631 43627.6 0; : 221 Minimum Test error found - save the configuration ; : 221 | 5000.63 4064.07 0.0203116 0.00186316 43364 0; : 222 Minimum Test error found - save the configuration ; : 222 | 4960.27 4023.61 0.020233 0.0018342 43481.1 0; : 223 Minimum Test error found - save the configuration ; : 223 | 4919.35 3984.02 0.0201371 0.00181764 43669.4 0; : 224 Minimum Test error found - save the configuration ; : 224 | 4878.53 3945.89 0.0203286 0.0018483 43289.4 0; : 225 Minimum Test error found - save the configuration ; : 225 | 4840.32 3905.84 0.0201762 0.00181162 43562 0; : 226 Minimum Test error found - save the configuration ; : 226 | 4799.06 3868.52 0.0201024 0.00180874 43731 0; : 227 Minimum Test error found - save the configuration ; : 227 | 4760.29 3830.98 0.0201923 0.00181512 43532.4 0; : 228 Minimum Test error found - save the configuration ; : 228 | 4721.11 3793.89 0.0201034 0.00181119 43734.4 0; : 229 Minimum Test error found - save the configuration ; : 229 | 4683.32 3755.52 0.0201311 0.00181167 43669.5 0; : 230 Minimum Test error found - save the configuration ; : 230 | 4644.47 3718.53 0.0201323 0.00180638 43654.1 0; : 231 Minimum Test error found - save the configuration ; : 231 | 4606.79 3681.43 0.020129 0.00181323 43678.1 0; : 232 Minimum Test error found - save the configuration ; : 232 | 4567.71 3646.94 0.0201545 0.0018103 43610.4 0; : 233 Minimum Test error found - save the configuration ; : 233 | 4531.87 3609.69 0.0200999 0.00180936 43738.5 0; : 234 Minimum Test error found - save the configuration ; : 234 | 4493.9 3574.45 0.0204352 0.00182946 42997.5 0; : 235 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:36492,config,configuration,36492,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,onfiguration ; : 248 | 4004.73 3104.47 0.0201502 0.00182336 43651.8 0; : 249 Minimum Test error found - save the configuration ; : 249 | 3970.44 3073.93 0.0201703 0.00181858 43592.7 0; : 250 Minimum Test error found - save the configuration ; : 250 | 3939.05 3041.72 0.0204513 0.00185682 43023.5 0; : 251 Minimum Test error found - save the configuration ; : 251 | 3905.19 3012.24 0.0207706 0.0018857 42361.9 0; : 252 Minimum Test error found - save the configuration ; : 252 | 3873.64 2981.7 0.0208833 0.0019031 42149.1 0; : 253 Minimum Test error found - save the configuration ; : 253 | 3841.98 2951.54 0.0208487 0.0019305 42287.4 0; : 254 Minimum Test error found - save the configuration ; : 254 | 3809.95 2921.87 0.0208755 0.00187363 42101.1 0; : 255 Minimum Test error found - save the configuration ; : 255 | 3779.13 2892.2 0.020905 0.00188208 42054.6 0; : 256 Minimum Test error found - save the configuration ; : 256 | 3747.34 2863.22 0.020356 0.00183152 43186 0; : 257 Minimum Test error found - save the configuration ; : 257 | 3717.23 2832.96 0.0205175 0.00183548 42822 0; : 258 Minimum Test error found - save the configuration ; : 258 | 3685.71 2804.1 0.0207306 0.00191201 42511.2 0; : 259 Minimum Test error found - save the configuration ; : 259 | 3655.28 2775.93 0.0206157 0.0018465 42623 0; : 260 Minimum Test error found - save the configuration ; : 260 | 3624.6 2748.54 0.0206258 0.00186298 42637.5 0; : 261 Minimum Test error found - save the configuration ; : 261 | 3595.24 2720.67 0.0206036 0.00182681 42605.8 0; : 262 Minimum Test error found - save the configuration ; : 262 | 3565.68 2692.59 0.0203715 0.00187472 43250.7 0; : 263 Minimum Test error found - save the configuration ; : 263 | 3536.15 2665.16 0.0204197 0.00183921 43055.9 0; : 264 Minimum Test error found - save the configuration ; : 264 | 3507.67 2636.8 0.0206158 0.00185399 42639.7 0; : 265 Minimum Test error found - save the configuration ; : 265 | 3477.42 2610.03 0.0202093 0.0018315 43530.8 0; : 266 Mini,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:40007,config,configuration,40007,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,onfiguration ; : 332 | 1957.4 1265.55 0.0201238 0.00181209 43687.9 0; : 333 Minimum Test error found - save the configuration ; : 333 | 1939.3 1251.56 0.020118 0.0018119 43701.4 0; : 334 Minimum Test error found - save the configuration ; : 334 | 1922.28 1237.18 0.0201046 0.00181273 43735.3 0; : 335 Minimum Test error found - save the configuration ; : 335 | 1905.38 1223.07 0.0201485 0.00181696 43640.6 0; : 336 Minimum Test error found - save the configuration ; : 336 | 1888.23 1209.6 0.0201214 0.00181991 43712.2 0; : 337 Minimum Test error found - save the configuration ; : 337 | 1871.94 1195.83 0.0205304 0.00184821 42821.5 0; : 338 Minimum Test error found - save the configuration ; : 338 | 1855.07 1182.37 0.0201268 0.00181989 43699.3 0; : 339 Minimum Test error found - save the configuration ; : 339 | 1838.61 1168.93 0.0201201 0.00181292 43698.7 0; : 340 Minimum Test error found - save the configuration ; : 340 | 1822.04 1156.1 0.020121 0.00181141 43693 0; : 341 Minimum Test error found - save the configuration ; : 341 | 1806.12 1142.64 0.0202229 0.00182722 43488.6 0; : 342 Minimum Test error found - save the configuration ; : 342 | 1789.69 1130.02 0.0201502 0.00182055 43645.1 0; : 343 Minimum Test error found - save the configuration ; : 343 | 1774.23 1116.9 0.0201756 0.0018237 43592.2 0; : 344 Minimum Test error found - save the configuration ; : 344 | 1757.78 1104.57 0.0201146 0.00181274 43711.3 0; : 345 Minimum Test error found - save the configuration ; : 345 | 1742.23 1092.31 0.0201296 0.00180634 43660.4 0; : 346 Minimum Test error found - save the configuration ; : 346 | 1726.84 1079.76 0.0201287 0.00180534 43660.1 0; : 347 Minimum Test error found - save the configuration ; : 347 | 1711.03 1067.63 0.0201353 0.00181782 43674.2 0; : 348 Minimum Test error found - save the configuration ; : 348 | 1695.85 1055.38 0.0201691 0.00181876 43596 0; : 349 Minimum Test error found - save the configuration ; : 349 | 1680.85 1042.99 0.0201335 0.00181253 43665.7 0; : 350,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:49531,config,configuration,49531,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,onfiguration ; : 391 | 1136.83 645.4 0.0202307 0.00186692 43564 0; : 392 Minimum Test error found - save the configuration ; : 392 | 1125.56 638.711 0.0206275 0.00184646 42596.2 0; : 393 Minimum Test error found - save the configuration ; : 393 | 1115.4 631.055 0.0202254 0.00180782 43436.7 0; : 394 Minimum Test error found - save the configuration ; : 394 | 1104.59 624.317 0.02027 0.00182884 43381.3 0; : 395 Minimum Test error found - save the configuration ; : 395 | 1094.1 617.12 0.0203693 0.00181577 43118.4 0; : 396 Minimum Test error found - save the configuration ; : 396 | 1083.6 610.558 0.0201067 0.00181126 43726.6 0; : 397 Minimum Test error found - save the configuration ; : 397 | 1073.44 603.068 0.020123 0.00181306 43692 0; : 398 Minimum Test error found - save the configuration ; : 398 | 1062.93 596.682 0.020266 0.00184767 43435 0; : 399 Minimum Test error found - save the configuration ; : 399 | 1052.39 590.107 0.0201237 0.00182381 43716.1 0; : 400 Minimum Test error found - save the configuration ; : 400 | 1042.76 583.068 0.0201639 0.00182862 43631.8 0; : 401 Minimum Test error found - save the configuration ; : 401 | 1032.4 576.548 0.0201234 0.00181928 43705.9 0; : 402 Minimum Test error found - save the configuration ; : 402 | 1022.23 570.272 0.0201306 0.00182147 43694 0; : 403 Minimum Test error found - save the configuration ; : 403 | 1012.74 563.823 0.0201066 0.00181196 43728.6 0; : 404 Minimum Test error found - save the configuration ; : 404 | 1002.66 558.031 0.0201068 0.0018122 43728.9 0; : 405 Minimum Test error found - save the configuration ; : 405 | 993.455 551.67 0.020178 0.00184829 43644.9 0; : 406 Minimum Test error found - save the configuration ; : 406 | 983.719 545.531 0.0202059 0.00184968 43581.9 0; : 407 Minimum Test error found - save the configuration ; : 407 | 974.381 539.309 0.0201407 0.00182369 43675.3 0; : 408 Minimum Test error found - save the configuration ; : 408 | 964.601 533.917 0.0201423 0.00181632 43653.8 0; : 409 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:56206,config,configuration,56206,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,onfiguration ; : 555 | 207.499 123.145 0.0201096 0.00181963 43739.9 0; : 556 Minimum Test error found - save the configuration ; : 556 | 205.232 121.223 0.0203039 0.0018145 43268 0; : 557 Minimum Test error found - save the configuration ; : 557 | 202.969 119.762 0.0201211 0.00181089 43691.5 0; : 558 Minimum Test error found - save the configuration ; : 558 | 200.33 118.775 0.0201089 0.0018057 43708.3 0; : 559 Minimum Test error found - save the configuration ; : 559 | 197.988 117.386 0.0202964 0.00181486 43286.3 0; : 560 Minimum Test error found - save the configuration ; : 560 | 195.761 116.51 0.020118 0.00181561 43710.2 0; : 561 Minimum Test error found - save the configuration ; : 561 | 193.461 115.526 0.0203798 0.00182877 43124.4 0; : 562 Minimum Test error found - save the configuration ; : 562 | 191.212 113.975 0.0203924 0.00182053 43075.9 0; : 563 Minimum Test error found - save the configuration ; : 563 | 188.987 113.393 0.0203794 0.00207901 43715 0; : 564 Minimum Test error found - save the configuration ; : 564 | 186.85 112.339 0.0201831 0.00181479 43553.4 0; : 565 Minimum Test error found - save the configuration ; : 565 | 185.071 111.259 0.0203048 0.00182605 43292.9 0; : 566 Minimum Test error found - save the configuration ; : 566 | 182.616 110.112 0.0201778 0.00183613 43616.5 0; : 567 Minimum Test error found - save the configuration ; : 567 | 180.473 109.26 0.0202561 0.00182678 43409.1 0; : 568 Minimum Test error found - save the configuration ; : 568 | 178.451 108.059 0.0201373 0.00182611 43689.1 0; : 569 Minimum Test error found - save the configuration ; : 569 | 176.264 106.78 0.0201111 0.00181323 43721.1 0; : 570 Minimum Test error found - save the configuration ; : 570 | 174.355 105.885 0.0201445 0.00181905 43655.2 0; : 571 | 172.647 106.784 0.0200848 0.0017791 43702.2 1; : 572 Minimum Test error found - save the configuration ; : 572 | 170.589 104.683 0.020165 0.00182763 43626.8 0; : 573 Minimum Test error found - save the configuration ; : 573,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:74803,config,configuration,74803,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,onfiguration ; : 581 | 153.026 95.3539 0.0201307 0.0018172 43683.7 0; : 582 Minimum Test error found - save the configuration ; : 582 | 151.197 94.0449 0.020143 0.00182303 43668.3 0; : 583 Minimum Test error found - save the configuration ; : 583 | 149.229 93.6244 0.0201231 0.00181874 43705.4 0; : 584 Minimum Test error found - save the configuration ; : 584 | 147.504 92.2301 0.0202996 0.00182281 43297.5 0; : 585 Minimum Test error found - save the configuration ; : 585 | 145.457 91.5459 0.020121 0.00181177 43693.8 0; : 586 Minimum Test error found - save the configuration ; : 586 | 143.954 90.9958 0.02013 0.00181326 43675.8 0; : 587 Minimum Test error found - save the configuration ; : 587 | 142.242 89.8853 0.0201892 0.0018256 43564.4 0; : 588 Minimum Test error found - save the configuration ; : 588 | 140.475 88.3998 0.0202535 0.0018437 43455.2 0; : 589 Minimum Test error found - save the configuration ; : 589 | 138.544 87.8285 0.0201999 0.00182139 43529 0; : 590 Minimum Test error found - save the configuration ; : 590 | 137.153 86.6949 0.0201619 0.00182129 43619.1 0; : 591 Minimum Test error found - save the configuration ; : 591 | 135.294 85.8941 0.0201222 0.00182247 43716.6 0; : 592 Minimum Test error found - save the configuration ; : 592 | 133.776 84.7442 0.0201242 0.00181719 43699.2 0; : 593 Minimum Test error found - save the configuration ; : 593 | 132.08 84.4617 0.0201178 0.00181703 43714.1 0; : 594 Minimum Test error found - save the configuration ; : 594 | 130.385 83.3494 0.0201184 0.00182079 43721.6 0; : 595 Minimum Test error found - save the configuration ; : 595 | 128.821 82.7241 0.0201197 0.00182054 43718 0; : 596 Minimum Test error found - save the configuration ; : 596 | 127.285 81.8772 0.0201421 0.00182102 43665.5 0; : 597 Minimum Test error found - save the configuration ; : 597 | 125.567 80.7585 0.0201182 0.00182506 43732.1 0; : 598 Minimum Test error found - save the configuration ; : 598 | 124.213 80.6209 0.0201133 0.0018121 43713 0; : 599 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:77692,config,configuration,77692,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,onfiguration ; : 7 | 0.373399 0.360485 0.0791536 0.00677002 44208.9 0; : 8 Minimum Test error found - save the configuration ; : 8 | 0.362792 0.352336 0.0796639 0.00682572 43933 0; : 9 Minimum Test error found - save the configuration ; : 9 | 0.353594 0.340526 0.0805399 0.00700876 43519 0; : 10 Minimum Test error found - save the configuration ; : 10 | 0.345712 0.336826 0.080966 0.0069933 43259.2 0; : 11 Minimum Test error found - save the configuration ; : 11 | 0.338399 0.329567 0.0802544 0.00691181 43630.9 0; : 12 Minimum Test error found - save the configuration ; : 12 | 0.333122 0.322325 0.0804981 0.00689735 43477.8 0; : 13 Minimum Test error found - save the configuration ; : 13 | 0.326577 0.317097 0.0800716 0.00688531 43724 0; : 14 Minimum Test error found - save the configuration ; : 14 | 0.320979 0.311994 0.080369 0.00694962 43585.2 0; : 15 Minimum Test error found - save the configuration ; : 15 | 0.316442 0.305918 0.0803736 0.00690045 43553.3 0; : 16 Minimum Test error found - save the configuration ; : 16 | 0.311672 0.301667 0.0807629 0.00695777 43357.4 0; : 17 Minimum Test error found - save the configuration ; : 17 | 0.306787 0.297289 0.0804752 0.00690149 43493.8 0; : 18 Minimum Test error found - save the configuration ; : 18 | 0.303107 0.295781 0.0805443 0.00693772 43474.3 0; : 19 Minimum Test error found - save the configuration ; : 19 | 0.300241 0.290359 0.0805629 0.00693546 43462 0; : 20 | 0.29682 0.292587 0.0806285 0.00686869 43384.1 1; : ; : Elapsed time for training with 4000 events: 1.62 sec ; : Dataset[dataset] : Create results for training; : Dataset[dataset] : Multiclass evaluation of DL_CPU on training sample; : Dataset[dataset] : Elapsed time for evaluation of 4000 events: 0.106 sec ; : Creating multiclass response histograms...; : Creating multiclass performance histograms...; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAMulticlass_DL_CPU.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAMulticlass_DL_CPU.c,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMulticlass_8C.html:16519,config,configuration,16519,doc/master/TMVAMulticlass_8C.html,https://root.cern,https://root.cern/doc/master/TMVAMulticlass_8C.html,1,['config'],['configuration']
Modifiability,onfiguration ; : 94 | 14248.9 13186.1 0.0201736 0.00184165 43639.6 0; : 95 Minimum Test error found - save the configuration ; : 95 | 14131.5 13069.6 0.020175 0.00181418 43571 0; : 96 Minimum Test error found - save the configuration ; : 96 | 14014.5 12952.5 0.0201885 0.00182372 43561.6 0; : 97 Minimum Test error found - save the configuration ; : 97 | 13896.7 12838.4 0.0200385 0.00180689 43879.7 0; : 98 Minimum Test error found - save the configuration ; : 98 | 13782 12723.6 0.020062 0.00182418 43864.8 0; : 99 Minimum Test error found - save the configuration ; : 99 | 13666.4 12611.1 0.0200618 0.00180714 43824.4 0; : 100 Minimum Test error found - save the configuration ; : 100 | 13550.9 12502.3 0.0200464 0.00180511 43856.6 0; : 101 Minimum Test error found - save the configuration ; : 101 | 13439.7 12392 0.0201571 0.00185957 43721.7 0; : 102 Minimum Test error found - save the configuration ; : 102 | 13328.8 12281.3 0.0202143 0.00181888 43489.1 0; : 103 Minimum Test error found - save the configuration ; : 103 | 13217 12173.3 0.0200026 0.0018059 43964.1 0; : 104 Minimum Test error found - save the configuration ; : 104 | 13107.7 12065.4 0.0200115 0.00180466 43939.6 0; : 105 Minimum Test error found - save the configuration ; : 105 | 12997.9 11959.7 0.0201517 0.00183944 43686.6 0; : 106 Minimum Test error found - save the configuration ; : 106 | 12890.1 11854.8 0.0204012 0.00181637 43045.8 0; : 107 Minimum Test error found - save the configuration ; : 107 | 12783.3 11750.6 0.0200273 0.00179591 43880.4 0; : 108 Minimum Test error found - save the configuration ; : 108 | 12679.4 11643.6 0.0200105 0.00179336 43914.7 0; : 109 Minimum Test error found - save the configuration ; : 109 | 12570.9 11543.2 0.0200071 0.00179343 43923.1 0; : 110 Minimum Test error found - save the configuration ; : 110 | 12468 11440.7 0.0200047 0.00179413 43930.5 0; : 111 Minimum Test error found - save the configuration ; : 111 | 12365.7 11337.8 0.0200081 0.00179319 43920.1 0; : 112 Minimum Te,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:22577,config,configuration,22577,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['config'],['configuration']
Modifiability,"onfiguration for the TMVA session.; For example all TMVA output can be suppressed by removing the ""!"" (not) in front of the ""Silent"" argument in; the option string; ; **/; ; // Creating the factory object; TMVA::Factory *factory = new TMVA::Factory(""TMVAClassification"", outputFile,; ""!V:!Silent:Color:DrawProgressBar:Transformations=None:!Correlations:""; ""AnalysisType=Classification:ModelPersistence"");; TMVA::DataLoader *dataloader = new TMVA::DataLoader(""dataset"");; ; TTree *signalTree = (TTree *)inputFile->Get(""sgn"");; TTree *background = (TTree *)inputFile->Get(""bkg"");; ; const int nvar = ninput * ntime;; ; /// add variables - use new AddVariablesArray function; for (auto i = 0; i < ntime; i++) {; dataloader->AddVariablesArray(Form(""vars_time%d"", i), ninput);; }; ; dataloader->AddSignalTree(signalTree, 1.0);; dataloader->AddBackgroundTree(background, 1.0);; ; // check given input; auto &datainfo = dataloader->GetDataSetInfo();; auto vars = datainfo.GetListOfVariables();; std::cout << ""number of variables is "" << vars.size() << std::endl;; for (auto &v : vars); std::cout << v << "","";; std::cout << std::endl;; ; int nTrainSig = 0.8 * nTotEvts;; int nTrainBkg = 0.8 * nTotEvts;; ; // build the string options for DataLoader::PrepareTrainingAndTestTree; TString prepareOptions = TString::Format(""nTrain_Signal=%d:nTrain_Background=%d:SplitMode=Random:SplitSeed=100:NormMode=NumEvents:!V:!CalcCorrelations"", nTrainSig, nTrainBkg);; ; // Apply additional cuts on the signal and background samples (can be different); TCut mycuts = """"; // for example: TCut mycuts = ""abs(var1)<0.5 && abs(var2-0.5)<1"";; TCut mycutb = """";; ; dataloader->PrepareTrainingAndTestTree(mycuts, mycutb, prepareOptions);; ; std::cout << ""prepared DATA LOADER "" << std::endl;; ; /**; ## Book TMVA recurrent models; ; Book the different types of recurrent models in TMVA (SimpleRNN, LSTM or GRU); ; **/; ; if (useTMVA_RNN) {; ; for (int i = 0; i < 3; ++i) {; ; if (!use_rnn_type[i]); continue;; ; const char *rnn_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html:63841,variab,variables,63841,doc/master/TMVA__RNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html,1,['variab'],['variables']
Modifiability,"onfiguration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,double,int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction2Ref<VO,VI1,VI2> Streamer(TBuffer& b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction2Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Thu Sep 23 19:58:42 2010 » Last generated: 2010-09-23 19:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooCFunction2Binding_double_double_int_.html:34279,variab,variable,34279,root/html528/RooCFunction2Binding_double_double_int_.html,https://root.cern,https://root.cern/root/html528/RooCFunction2Binding_double_double_int_.html,1,['variab'],['variable']
Modifiability,"onfiguration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,int,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction2Ref<VO,VI1,VI2> Streamer(TBuffer& b); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction2Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Thu Sep 23 19:58:43 2010 » Last generated: 2010-09-23 19:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooCFunction2Binding_double_int_double_.html:34279,variab,variable,34279,root/html528/RooCFunction2Binding_double_int_double_.html,https://root.cern,https://root.cern/root/html528/RooCFunction2Binding_double_int_double_.html,1,['variab'],['variable']
Modifiability,"onfigurations for the member wise looping routines ;  CTNestedIDs;  ►Nvecgeom;  ►Nwriter;  Cwriter;  C_x3d_data_;  C_x3d_sizeof_;  CAnyCollectionProxy;  CAnyCollectionStreamer;  CBalancerInfo;  Cbasic_string_view;  CBasicRNNLayerGeneric implementation ;  ►CBidirMMapPipeBidirMMapPipe creates a bidirectional channel between the current process and a child it forks ;  CPollEntryFor poll() interface ;  CBinaryOpPolicy;  CBinomialNeymanInterval;  CBinomialProbHelper;  Cclient_cert;  CColorStruct_t;  CCompareAsc;  CcompareBAasc;  CcompareBAdesc;  CCompareDesc;  CContDistFree functions adapter needed by UNURAN for onedimensional continuous distributions ;  CContextSmall helper to keep current directory context ;  CCpuInfo_t;  CDebuggingSamplerDebuggingSampler is a simple implementation of the DistributionCreator interface used for debugging ;  CDebuggingTestStatDebuggingTestStat is a simple implementation of the DistributionCreator interface used for debugging ;  CDiscrDistFree functions adapter needed by UNURAN for one-dimensional discrete distribution ;  CEvent_t;  CExceptionContext_t;  CFeldmanCousinsBinomialInterval;  CFeldmanCousinsSorter;  CFileStat_t;  CFontAttributes_t;  CFontMetrics_t;  CFoption_t;  Cfuncptr_and_voidptr_t;  CGcCache_t;  CGCValues_t;  Cgroup;  Ch1analysis;  Ch1analysisTreeReader;  Chash< std::experimental::basic_string_view< _CharT, _Traits > >;  CHelperOps;  CHEPEVT_DEFHEPEVT common block ;  CHit;  CHoption_tHistogram option structure ;  CHparam_tHistogram parameters structure ;  CJet;  CJetEvent;  CMemInfo_t;  Cmg_callbacks;  Cmg_client_cert;  Cmg_client_options;  Cmg_form_data_handler;  Cmg_header;  Cmg_option;  Cmg_request_info;  Cmg_response_info;  Cmg_server_ports;  Cmg_websocket_subprotocols;  CMultiDistFree functions adapter needed by UNURAN for multidimensional cont distribution ;  CMYSQL_BIND;  CMYSQL_STMT;  CNuMuToNuE_Oscillation;  ►CParamHistFunc;  CCacheElem;  CPassiveKeyGrab;  Cpasswd;  CPattern;  CPgSQL_Stmt_t;  CPictureAttributes_t;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v614/annotated.html:91948,adapt,adapter,91948,doc/v614/annotated.html,https://root.cern,https://root.cern/doc/v614/annotated.html,1,['adapt'],['adapter']
Modifiability,"ong a given axis. Supported axes are: X, Y, Z, Rxy, Phi, Rxyz. A given shape cannot be divided however on any axis. The general rule is that that divisions are possible on whatever axis that produces still known shapes as slices. The division of shapes are performed by the call TGeoShape::Divide(), but this operation can be done only via TGeoVolume::Divide() method. In other words, the algorithm for dividing a specific shape is known by the shape object, but is always invoked in a generic way from the volume level. Details on how to do that can be found in the paragraph ‘Dividing volumes'. One can see how all division options are interpreted and which their result inside specific shape classes is. Parametric Shapes; Shapes generally have a set of parameters that is well defined at build time. In fact, when the final geometrical hierarchy is assembled and the geometry is closed, all constituent shapes MUST**have well defined and valid parameters. In order to ease-up geometry creation, some parameterizations are however allowed.; For instance let's suppose that we need to define several volumes having exactly the same properties but different sizes. A way to do this would be to create as many different volumes and shapes. The modeller allows however the definition of a single volume having undefined shape parameters.; TGeoManager::Volume(const char *name,const char *shape,Int_t nmed);; TGeoManager::VolumeTGeoVolume * Volume(const char *name, const char *shape, Int_t nmed, Float_t *upar, Int_t npar=0)Create a volume in GEANT3 style.Definition TGeoManager.cxx:1388. name: the name of the newly created volume;; shape:the type of the associated shape. This has to contain the case-insensitive first 4 letters of the corresponding class name (e.g. ""`tubs`"" will match **TGeoTubeSeg**, ""`bbox`"" will match **TGeoBBox**); nmed: the medium number. This will create a special volume that will not be directly used in the geometry, but whenever positioned will require a list of actual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Shapes__classes.html:10463,parameteriz,parameterizations,10463,doc/master/group__Shapes__classes.html,https://root.cern,https://root.cern/doc/master/group__Shapes__classes.html,1,['parameteriz'],['parameterizations']
Modifiability,"ong with value for given subset of observables; StoreAsymError(const RooArgSet&) -- Store asymmetric error along with value for given subset of observables. RooDataSet(const char* name, const char* title, const RooArgSet& vars, const char* wgtVarName = 0); Constructor of an empty data set from a RooArgSet defining the dimensions; of the data space. RooDataSet(const char* name, const char* title, RooDataSet* data, const RooArgSet& vars, const char* cuts = 0, const char* wgtVarName = 0); Constructor of a data set from (part of) an existing data; set. The dimensions of the data set are defined by the 'vars'; RooArgSet, which can be identical to 'dset' dimensions, or a; subset thereof. The 'cuts' string is an optional RooFormula; expression and can be used to select the subset of the data; points in 'dset' to be copied. The cut expression can refer to; any variable in the source dataset. For cuts involving variables; other than those contained in the source data set, such as; intermediate formula objects, use the equivalent constructor; accepting RooFormulaVar reference as cut specification. For most uses the RooAbsData::reduce() wrapper function, which; uses this constructor, is the most convenient way to create a; subset of an existing data. RooDataSet(const char* name, const char* title, RooDataSet* data, const RooArgSet& vars, const RooFormulaVar& cutVar, const char* wgtVarName = 0); Constructor of a data set from (part of) an existing data; set. The dimensions of the data set are defined by the 'vars'; RooArgSet, which can be identical to 'dset' dimensions, or a; subset thereof. The 'cutVar' formula variable is used to select; the subset of data points to be copied. For subsets without; selection on the data points, or involving cuts operating; exclusively and directly on the data set dimensions, the; equivalent constructor with a string based cut expression is; recommended. For most uses the RooAbsData::reduce() wrapper function, which; uses this constructor, is t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooDataSet.html:20450,variab,variables,20450,root/html528/RooDataSet.html,https://root.cern,https://root.cern/root/html528/RooDataSet.html,10,['variab'],['variables']
Modifiability,"ong); ROOT::TImpProxy<long long>TImpProxy<long long>(long long). Data Members; protected:. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). TImpProxy & operator=(long long ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id: TBranchProxy.h 41244 2011-10-06 19:42:35Z pcanal $ » Last generated: 2011-11-03 20:06; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__TImpProxy_Long64_t_.html:3935,Inherit,Inheritance,3935,root/html532/ROOT__TImpProxy_Long64_t_.html,https://root.cern,https://root.cern/root/html532/ROOT__TImpProxy_Long64_t_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ong64_t TParallelCoord::GetNentries ; (; ). inline . Definition at line 96 of file TParallelCoord.h. ◆ GetNvar(). UInt_t TParallelCoord::GetNvar ; (; ). inline . Definition at line 95 of file TParallelCoord.h. ◆ GetSelection(). TParallelCoordSelect * TParallelCoord::GetSelection ; (; const char * ; title). Get a selection from its title. ; Definition at line 510 of file TParallelCoord.cxx. ◆ GetSelectList(). TList * TParallelCoord::GetSelectList ; (; ). inline . Definition at line 97 of file TParallelCoord.h. ◆ GetTree(). TTree * TParallelCoord::GetTree ; (; ). return the tree if fTree is defined. ; If not, the method try to load the tree from fTreeFileName. ; Definition at line 522 of file TParallelCoord.cxx. ◆ GetVariable() [1/2]. Double_t * TParallelCoord::GetVariable ; (; const char * ; var). Get the variables values from its title. ; Definition at line 564 of file TParallelCoord.cxx. ◆ GetVariable() [2/2]. Double_t * TParallelCoord::GetVariable ; (; Int_t ; i). Get the variables values from its index. ; Definition at line 576 of file TParallelCoord.cxx. ◆ GetVarList(). TList * TParallelCoord::GetVarList ; (; ). inline . Definition at line 102 of file TParallelCoord.h. ◆ GetVertDisplay(). bool TParallelCoord::GetVertDisplay ; (; ); const. inline . Definition at line 103 of file TParallelCoord.h. ◆ GetWeightCut(). Int_t TParallelCoord::GetWeightCut ; (; ); const. inline . Definition at line 104 of file TParallelCoord.h. ◆ Init(). void TParallelCoord::Init ; (; ). private . Initialise the data members of TParallelCoord. ; Definition at line 585 of file TParallelCoord.cxx. ◆ IsA(). TClass * TParallelCoord::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Definition at line 136 of file TParallelCoord.h. ◆ Paint(). void TParallelCoord::Paint ; (; Option_t * ; options = """"). overridevirtual . Paint the parallel coordinates graph. ; Reimplemented from TObject.; Definition at line 616 of file TParallelCoord.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParallelCoord.html:29832,variab,variables,29832,doc/master/classTParallelCoord.html,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html,1,['variab'],['variables']
Modifiability,"ong64_t entry=0, Int_t getall=0) override;  Read all branches and return total number of bytes read. ;  ; TClonesArray * GetList () const;  ; virtual Int_t GetN () const;  ; TClass * IsA () const override;  ; bool IsFolder () const override;  Return true if more than one leaf or browsables, false otherwise. ;  ; void Print (Option_t *option="""") const override;  Print branch parameters. ;  ; void Reset (Option_t *option="""") override;  Reset branch. ;  ; void ResetAfterMerge (TFileMergeInfo *) override;  Reset branch after a merge. ;  ; void SetAddress (void *add) override;  Set address of this branch. ;  ; void SetBasketSize (Int_t buffsize) override;  Reset basket size for all sub-branches. ;  ; void SetTree (TTree *tree) override;  ; void Streamer (TBuffer &) override;  Serialize/Deserialize from a buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UpdateFile () override;  Refresh the value of fDirectory (i.e. ;  ;  Public Member Functions inherited from TBranch;  TBranch ();  Default constructor. Used for I/O by default. ;  ;  TBranch (TBranch *parent, const char *name, void *address, const char *leaflist, Int_t basketsize=32000, Int_t compress=ROOT::RCompressionSetting::EAlgorithm::kInherit);  Create a Branch as a child of another Branch. ;  ;  TBranch (TTree *tree, const char *name, void *address, const char *leaflist, Int_t basketsize=32000, Int_t compress=ROOT::RCompressionSetting::EAlgorithm::kInherit);  Create a Branch as a child of a Tree. ;  ;  ~TBranch () override;  Destructor. ;  ; virtual void AddBasket (TBasket &b, bool ondisk, Long64_t startEntry);  Add the basket to this branch. ;  ; virtual void AddLastBasket (Long64_t startEntry);  Add the start entry of the write basket (not yet created) ;  ; Int_t BackFill ();  Loop on all leaves of this branch to back fill Basket buffer. ;  ; virtual void DeleteBaskets (Option_t *option="""");  Loop on all branch baskets. ;  ; virtual void DropBaskets (Option_t *option="""");  Loop on ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBranchClones.html:2081,inherit,inherited,2081,doc/master/classTBranchClones.html,https://root.cern,https://root.cern/doc/master/classTBranchClones.html,1,['inherit'],['inherited']
Modifiability,"ong64_t first, Long64_t last);  Constructor for a free segment. ;  ;  ~TFree () override;  Destructor. ;  ; TFree * AddFree (TList *lfree, Long64_t first, Long64_t last);  Add a new free segment to the list of free segments. ;  ; virtual void FillBuffer (char *&buffer);  Encode fre structure into output buffer. ;  ; TFree * GetBestFree (TList *lfree, Int_t nbytes);  Return the best free segment where to store nbytes. ;  ; Long64_t GetFirst () const;  ; Long64_t GetLast () const;  ; TClass * IsA () const override;  ; void ls (Option_t *="""") const override;  List free segment contents. ;  ; virtual void ReadBuffer (char *&buffer);  Decode one free structure from input buffer. ;  ; void SetFirst (Long64_t first);  ; void SetLast (Long64_t last);  ; Int_t Sizeof () const;  return number of bytes occupied by this TFree on permanent storage ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFree.html:2035,inherit,inherited,2035,doc/master/classTFree.html,https://root.cern,https://root.cern/doc/master/classTFree.html,1,['inherit'],['inherited']
Modifiability,"ong64_t size, bool skipEvenEntries=false);  Make a RDF wrapping a RTrivialDS with the specified amount of entries. ;  ; template<typename F , typename Args = typename ROOT::TypeTraits::CallableTraits<std::decay_t<F>>::arg_types_nodecay, typename Ret = typename ROOT::TypeTraits::CallableTraits<std::decay_t<F>>::ret_type> ; auto Not (F &&f) -> decltype(RDFInternal::NotHelper(Args(), std::forward< F >(f)));  Given a callable with signature bool(T1, T2, ...) return a callable with same signature that returns the negated result. ;  ; template<class T1 , class T2 > ; bool operator!= (const RResultPtr< T1 > &lhs, const RResultPtr< T2 > &rhs);  ; template<class T1 > ; bool operator!= (const RResultPtr< T1 > &lhs, std::nullptr_t rhs);  ; template<class T1 > ; bool operator!= (std::nullptr_t lhs, const RResultPtr< T1 > &rhs);  ; std::ostream & operator<< (std::ostream &os, const RDFDescription &description);  ; template<class T1 , class T2 > ; bool operator== (const RResultPtr< T1 > &lhs, const RResultPtr< T2 > &rhs);  ; template<class T1 > ; bool operator== (const RResultPtr< T1 > &lhs, std::nullptr_t rhs);  ; template<class T1 > ; bool operator== (std::nullptr_t lhs, const RResultPtr< T1 > &rhs);  ; template<std::size_t N, typename T , typename F > ; auto PassAsVec (F &&f) -> RDFInternal::PassAsVecHelper< std::make_index_sequence< N >, T, F >;  PassAsVec is a callable generator that allows passing N variables of type T to a function as a single collection. ;  ; unsigned int RunGraphs (std::vector< RResultHandle > handles);  Trigger the event loop of multiple RDataFrames concurrently. ;  ; template<typename NodeType > ; std::string SaveGraph (NodeType node);  Create a graphviz representation of the dataframe computation graph, return it as a string. ;  ; template<typename NodeType > ; void SaveGraph (NodeType node, const std::string &outputFile);  Create a graphviz representation of the dataframe computation graph, write it to the specified file. ;  ; void splitInEqualRanges ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1RDF.html:5578,variab,variables,5578,doc/master/namespaceROOT_1_1RDF.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1RDF.html,2,['variab'],['variables']
Modifiability,"ong64_tGetDBKeyId() const; Long64_tGetDBObjId() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TFile*TKey::GetFile() const; virtual const char*TKey::GetIconName() const; Short_tTKey::GetKeep() const; Int_tTKey::GetKeylen() const; TDirectory*TKey::GetMotherDir() const; virtual const char*TNamed::GetName() const; Int_tTKey::GetNbytes() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tTKey::GetObjlen() const; virtual Option_t*TObject::GetOption() const; virtual Long64_tGetSeekKey() const; virtual Long64_tGetSeekPdir() const; virtual const char*TKey::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTKey::GetVersion() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTKey::Hash() const; virtual voidTKey::IncrementPidOffset(UShort_t offset); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTKey::IsFolder() const; Bool_tIsKeyModified(const char* keyname, const char* keytitle, const char* keydatime, Int_t cycle, const char* classname); Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidKeep(); virtual voidTKey::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TKeySQL.html:3379,Inherit,InheritsFrom,3379,root/html532/TKeySQL.html,https://root.cern,https://root.cern/root/html532/TKeySQL.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ong64_tGetDBKeyId() const; Long64_tGetDBObjId() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TFile*TKey::GetFile() const; virtual const char*TKey::GetIconName() const; Short_tTKey::GetKeep() const; Int_tTKey::GetKeylen() const; TDirectory*TKey::GetMotherDir() const; virtual const char*TNamed::GetName() const; Int_tTKey::GetNbytes() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tTKey::GetObjlen() const; virtual Option_t*TObject::GetOption() const; virtual Long64_tGetSeekKey() const; virtual Long64_tGetSeekPdir() const; virtual const char*TKey::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Int_tTKey::GetVersion() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTKey::Hash() const; virtual voidTKey::IncrementPidOffset(UShort_t offset); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTKey::IsFolder() const; Bool_tIsKeyModified(const char* keyname, const char* keytitle, const char* keydatime, Int_t cycle, const char* classname); Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidKeep(); virtual voidTKey::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(si",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TKeySQL.html:3025,Inherit,InheritsFrom,3025,root/html602/TKeySQL.html,https://root.cern,https://root.cern/root/html602/TKeySQL.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ong64_tTFile::GetRelOffset() const; virtual Long64_tTDirectoryFile::GetSeekDir() const; virtual Long64_tTFile::GetSeekFree() const; virtual Long64_tTFile::GetSeekInfo() const; virtual Long64_tTDirectoryFile::GetSeekKeys() const; virtual Long64_tTDirectoryFile::GetSeekParent() const; virtual Long64_tGetSize() const; const TList*TFile::GetStreamerInfoCache(); virtual TList*TFile::GetStreamerInfoList(); virtual const char*TNamed::GetTitle() const; static TFile::EFileTypeTFile::GetType(const char* name, Option_t* option = """", TString* prefix = 0); virtual UInt_tTObject::GetUniqueID() const; TUUIDTDirectory::GetUUID() const; Int_tTFile::GetVersion() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; static voidTFile::IncrementFileCounter(); virtual voidTFile::IncrementProcessIDs(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(Bool_t create); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTFile::IsArchive() const; Bool_tTFile::IsBinary() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTDirectory::IsFolder() const; virtual Bool_tTDirectoryFile::IsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsOpen() const; Bool_tTFile::IsRaw() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTDirectoryFile::IsWritable() const; Bool_tTObject::IsZombie() const; virtual voidTFile::ls(Option_t* option = """") const; virtual voidTFile::MakeFree(Long64_t first, Long64_t last); virtual voidTFile::MakeProject(const char* dirname, const char* classes = ""*"", Option_t* option = ""new"")MENU ; virtual voidTFile::Map()MENU ; virtual Bool_tTFile::Matches(const char* name); voidTObject::MayNotUse(const char* method) const; virtual TDirectory*TDirectoryFile::mkdir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TNetXNGFile.html:8161,Inherit,InheritsFrom,8161,root/html534/TNetXNGFile.html,https://root.cern,https://root.cern/root/html534/TNetXNGFile.html,3,['Inherit'],['InheritsFrom']
Modifiability,"ong64_tTFile::GetRelOffset() const; virtual Long64_tTDirectoryFile::GetSeekDir() const; virtual Long64_tTFile::GetSeekFree() const; virtual Long64_tTFile::GetSeekInfo() const; virtual Long64_tTDirectoryFile::GetSeekKeys() const; virtual Long64_tTDirectoryFile::GetSeekParent() const; virtual Long64_tGetSize() const; const TList*TFile::GetStreamerInfoCache(); virtual TList*TFile::GetStreamerInfoList(); virtual const char*TNamed::GetTitle() const; static TFile::EFileTypeTFile::GetType(const char* name, Option_t* option = """", TString* prefix = 0); virtual UInt_tTObject::GetUniqueID() const; TUUIDTDirectory::GetUUID() const; Int_tTFile::GetVersion() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; static voidTFile::IncrementFileCounter(); virtual voidTFile::IncrementProcessIDs(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTFile::IsArchive() const; Bool_tTFile::IsBinary() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTDirectory::IsFolder() const; virtual Bool_tTDirectoryFile::IsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tIsOpen() const; Bool_tTFile::IsRaw() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTDirectoryFile::IsWritable() const; Bool_tTObject::IsZombie() const; virtual voidTFile::ls(Option_t* option = """") const; virtual voidTFile::MakeFree(Long64_t first, Long64_t last); virtual voidTFile::MakeProject(const char* dirname, const char* classes = ""*"", Option_t* option = ""new"")MENU ; virtual voidTFile::Map()MENU ; virtual Bool_tTFile::Matches(const char* name); voidTObject::MayNotUse(const char* method) const; virtual TDirectory*TDirectoryFile::mkdir(const char* name, const char* ti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TWebFile.html:8076,Inherit,InheritsFrom,8076,root/html532/TWebFile.html,https://root.cern,https://root.cern/root/html532/TWebFile.html,4,['Inherit'],['InheritsFrom']
Modifiability,"ong64_tTFile::GetRelOffset() const; virtual Long64_tTDirectoryFile::GetSeekDir() const; virtual Long64_tTFile::GetSeekFree() const; virtual Long64_tTFile::GetSeekInfo() const; virtual Long64_tTDirectoryFile::GetSeekKeys() const; virtual Long64_tTDirectoryFile::GetSeekParent() const; virtual Long64_tGetSize() const; const TList*TFile::GetStreamerInfoCache(); virtual TList*TFile::GetStreamerInfoList(); virtual const char*TNamed::GetTitle() const; static TFile::EFileTypeTFile::GetType(const char* name, Option_t* option = """", TString* prefix = 0); virtual UInt_tTObject::GetUniqueID() const; TUUIDTDirectory::GetUUID() const; Int_tTFile::GetVersion() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; static voidTFile::IncrementFileCounter(); virtual voidTFile::IncrementProcessIDs(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTFile::IsArchive() const; Bool_tTFile::IsBinary() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTDirectory::IsFolder() const; virtual Bool_tTDirectoryFile::IsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTFile::IsOpen() const; Bool_tTFile::IsRaw() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTDirectoryFile::IsWritable() const; Bool_tTObject::IsZombie() const; virtual voidTFile::ls(Option_t* option = """") const; virtual voidTFile::MakeFree(Long64_t first, Long64_t last); virtual voidTFile::MakeProject(const char* dirname, const char* classes = ""*"", Option_t* option = ""new"")MENU ; virtual voidTFile::Map()MENU ; virtual Bool_tTFile::Matches(const char* name); voidTObject::MayNotUse(const char* method) const; virtual TDirectory*TDirectoryFile::mkdir(const char* name, const c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMemFile.html:8264,Inherit,InheritsFrom,8264,root/html532/TMemFile.html,https://root.cern,https://root.cern/root/html532/TMemFile.html,4,['Inherit'],['InheritsFrom']
Modifiability,"ong64_tfFirstObjId! id of first object to be read from the database; Bool_tfIgnoreVerification! ignore verification of names; TStreamerInfo*TBufferFile::fInfoPointer to TStreamerInfo object writing/reading the buffer; TBufferFile::InfoList_tTBufferFile::fInfoStackStack of pointers to the TStreamerInfos; Long64_tfLastObjId! id of last object correspond to this key; TExMap*TBufferFile::fMapMap containing object,offset pairs for reading/writing; Int_tTBufferFile::fMapCountNumber of objects or classes in map; Int_tTBufferFile::fMapSizeDefault size of map; Bool_tTBuffer::fModeRead or write mode; Long64_tfObjIdCounter! counter of objects id; TExMap*fObjMap! Map between stored objects and object id; TObjArray*fObjectsInfos! array of objects info for selected key; TObject*TBuffer::fParentPointer to parent object owning this buffer; UShort_tTBufferFile::fPidOffsetOffset to be added to the pid index in this key/buffer.; TMap*fPoolsMap! map of pools with data from different tables; ReAllocCharFun_tTBuffer::fReAllocFunc! Realloc function to be used when extending the buffer.; TStringfReadBuffer! Buffer for read value; Int_tfReadVersionBuffer! buffer, used to by ReadVersion method; TSQLFile*fSQL! instance of TSQLFile; TSQLStructure*fStk! pointer on current active structure (stack head); TSQLStructure*fStructure! structures, created by object storing; Int_tTBuffer::fVersionBuffer format version; static Int_tTBufferFile::fgMapSizeDefault map size for all TBuffer objects. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TBufferSQL2(); Default constructor, should not be used. TBufferSQL2(TBuffer::EMode mode); Creates buffer object to serailize/deserialize data to/from sql.; Mode should be either TBuffer::kRead or TBuffer::kWrite. TBufferSQL2(TBuffer::EMode mode, TSQLFile* file); Creates buffer object to serailize/deserialize data to/from sql.; This constructor should be used, if data from buffer supposed to be stored in file.; Mode should be ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TBufferSQL2.html:23173,extend,extending,23173,root/html602/TBufferSQL2.html,https://root.cern,https://root.cern/root/html602/TBufferSQL2.html,4,['extend'],['extending']
Modifiability,"ong_t hints=kLHintsNormal, Int_t padleft=0, Int_t padright=0, Int_t padtop=0, Int_t padbottom=0);  ;  ~TGLayoutHints () override;  Destructor. ;  ; ULong_t GetLayoutHints () const;  ; Int_t GetPadBottom () const;  ; Int_t GetPadLeft () const;  ; Int_t GetPadRight () const;  ; Int_t GetPadTop () const;  ; TClass * IsA () const override;  ; void ls (Option_t *option="""") const override;  The ls function lists the contents of a class on stdout. ;  ; void Print (Option_t *option="""") const override;  Printing. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save layout hints as a C++ statement(s) on output stream out. ;  ; virtual void SetLayoutHints (ULong_t lh);  ; virtual void SetPadBottom (Int_t v);  ; virtual void SetPadLeft (Int_t v);  ; virtual void SetPadRight (Int_t v);  ; virtual void SetPadTop (Int_t v);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLayoutHints.html:1630,inherit,inherited,1630,doc/master/classTGLayoutHints.html,https://root.cern,https://root.cern/doc/master/classTGLayoutHints.html,1,['inherit'],['inherited']
Modifiability,"ong_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TList*TQObject::GetListOfClassSignals() const; TList*TQObject::GetListOfConnections() const; TList*TQObject::GetListOfSignals() const; virtual const char*TObject::GetName() const; TObject*GetObject(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TTimeGetTime() const; UInt_tGetTimerID(); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; Bool_tHasTimedOut() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTSysEvtHandler::IsActive() const; Bool_tIsAsync() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsInterruptingSyscalls() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsSync() const; Bool_tTObject::IsZombie() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTSysEvtHandler::Notified()SIGNAL ; virtual Bool_tNotify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTimer.html:6455,Inherit,InheritsFrom,6455,root/html532/TTimer.html,https://root.cern,https://root.cern/root/html532/TTimer.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ong_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TList*TQObject::GetListOfClassSignals() const; TList*TQObject::GetListOfConnections() const; TList*TQObject::GetListOfSignals() const; virtual const char*TObject::GetName() const; TObject*GetObject(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TTimeGetTime() const; UInt_tGetTimerID(); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; Bool_tHasTimedOut() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tTSysEvtHandler::IsActive() const; Bool_tIsAsync() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsInterruptingSyscalls() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsSync() const; Bool_tTObject::IsZombie() const; virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTSysEvtHandler::Notified()SIGNAL ; virtual Bool_tNotify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::ope",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTimer.html:6303,Inherit,InheritsFrom,6303,root/html602/TTimer.html,https://root.cern,https://root.cern/root/html602/TTimer.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ong_t fSize;  ; ULong_t fTotalSize;  ; TString fTypeName;  ; Bool_t fVisible;  ; Float_t fWidth;  ; Float_t fX;  ; Float_t fY;  . Static Private Attributes; static EScalingType fgScalBy = kMembers;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TStructNode.h>. Inheritance diagram for TStructNode:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TStructNode(). TStructNode::TStructNode ; (; TString ; name, . TString ; typeName, . void * ; pointer, . TStructNode * ; parent, . ULong_t ; size, . ENodeType ; type . ). Constructs node with name ""name"" of class ""typeName"" and given parent ""parent"" which represents pointer ""pointer"". ; Size of node is set to ""size"" and type is set to ""type"" ; Definition at line 37 of file TStructNode.cxx. ◆ ~TStructNode(). TStructNode::~TStructNode ; (; ). override . Destructs list of nodes. ; Definition at line 63 of file TStructNode.cxx. Member Function Documentation. ◆ Class(). static TClass * TStructNode::Class ; (; ). static . Returns",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStructNode.html:13581,inherit,inherited,13581,doc/master/classTStructNode.html,https://root.cern,https://root.cern/doc/master/classTStructNode.html,2,['inherit'],['inherited']
Modifiability,"only fits, when fFitFunc=0); vector<pair<double,double> >fParamBoundsparameter bounds; vector<double>fParamsparameter values. Size is total number of parameters; intfStatusminimizer status code; doublefValminimum function value; boolfValidflag for indicating valid fit. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FitResult(). Default constructor for an empty (non valid) fit result. FitResult(const FitConfig & fconfig). Constructor from a fit-config for a dummy fit; (e.g. when only one fcn evaluation is done). FitResult(const FitResult & rhs). Copy constructor. virtual ~FitResult(). Destructor. void FillResult(const shared_ptr<ROOT::Math::Minimizer>& min, const ROOT::Fit::FitConfig& fconfig, const shared_ptr<ROOT::Fit::FitResult::IModelFunction>& f, bool isValid, unsigned int sizeOfData = 0, bool binFit = true, const ROOT::Math::IMultiGenFunction* chi2func = 0, unsigned int ncalls = 0). Fill the fit result from a Minimizer instance after fitting; Run also Minos if requested from the configuration. const std::string & MinimizerType() const. Update the fit result with a new minimization status; To be run only if same fit is performed with same configuration; Note that in this case MINOS is not re-run. If one wants to run also MINOS; a new result must be created. minimization quantities ; minimizer type. { return fMinimType; }. bool IsValid() const. True if fit successful, otherwise false.; A fit is considered successful if the minimizer succeded in finding the; minimum. It could happen that subsequent operations like error analysis (e.g. Minos); failed. In that case the status can be still true if the original minimization algorithm; succeeded in finding the minimum.; One can query in that case the minimizer return status using Status().; It is responability to the Minimizer class to tag a found minimum as valid or not; and to produce also a status code. { return fValid; }. bool IsEmpty() const; True if a fit result does not",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Fit__FitResult.html:5734,config,configuration,5734,root/html604/ROOT__Fit__FitResult.html,https://root.cern,https://root.cern/root/html604/ROOT__Fit__FitResult.html,2,['config'],['configuration']
Modifiability,only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Attributes; Int_t _basisExp;  ; RooRealProxy _t;  ; RooRealProxy _tau;  ; DecayType _type;  ;  Protected Attributes inherited from RooAbsAnaConvPdf; RooArgList _basisList;  ! List of created basis functions ;  ; RooAICRegistry _codeReg;  ! Registry of analytical integration codes ;  ; RooObjCacheManager _coefNormMgr;  ! Coefficient normalization manager ;  ; RooListProxy _convSet;  Set of (resModel (x) basisFunc) convolution objects. ;  ; RooRealProxy _convVar;  Convolution variable. ;  ; bool _isCopy;  ; RooRealProxy _model;  Original model. ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDecay.html:64317,inherit,inherited,64317,doc/master/classRooDecay.html,https://root.cern,https://root.cern/doc/master/classRooDecay.html,1,['inherit'],['inherited']
Modifiability,"only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Evaluate RooBlindTools unhide-precision method on blind value. ;  ;  Protected Member Functions inherited from RooAbsHiddenReal; RooAbsCategory & dummyBlindState () const;  Return reference to internal dummy RooCategory implementation blinding state switch. ;  ; double getValV (const RooArgSet *nset=nullptr) const override;  Return value of object. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that creates the actual integral object. ;  ; void fillTreeBranch (TTree &t) override;  Fill the tree branch that associated with this object with its current value. ;  ; void findInnerMostIntegration (const RooArgSet &all",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooUnblindPrecision.html:49747,inherit,inherited,49747,doc/master/classRooUnblindPrecision.html,https://root.cern,https://root.cern/doc/master/classRooUnblindPrecision.html,1,['inherit'],['inherited']
Modifiability,"only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  THttpServer (const THttpServer &)=delete;  ; std::string BuildWSEntryPage ();  Create summary page with active WS handlers. ;  ; virtual void MissedRequest (THttpCallArg *arg);  Method called when THttpServer cannot process request. ;  ; THttpServer & operator= (const THttpServer &)=delete;  ; virtual void ProcessBatchHolder (std::shared_ptr< THttpCallArg > &arg);  Process special http request for root_batch_holder.js script. ;  ; virtual void ProcessRequest (std::shared_ptr< THttpCallArg > arg);  Process single http request. ;  ; void ReplaceJSROOTLinks (std::shared_ptr< THttpCallArg > &arg, const std::string &version="""");  Replaces all references like ""jsrootsys/..."" or other pre-configured pathes. ;  ; void StopServerThread ();  Stop server thread. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static Bool_t VerifyFilePath (const char *fname);  Checked that filename does not contains relative path below current directory. ;  . Protected Attributes; std::queue< std::shared_ptr< THttpCallArg > > fArgs;  ! submitted arguments ;  ; std::string fCors;  ! CORS: sets Access-Control-Allow-Origin header for ProcessRequest responses ;  ; std::string fCorsCredentials;  ! CORS: add Access-Control-Allow-Credentials: true response header ;  ; std::string fDefaultPage;  ! file name for default page name ;  ; std::string fDefaultPageCont;  ! content of default html page ;  ; std::string fDrawPage;  ! file name for drawing of single element ;  ; std::string fDrawPageCont;  ! content of draw html page ;  ; TList fEngines;  ! engines which runs http server ;  ; TString fJSROOT;  ! location of external JSROOT files ;  ; TString fJSROOTSYS; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHttpServer.html:16571,inherit,inherited,16571,doc/master/classTHttpServer.html,https://root.cern,https://root.cern/doc/master/classTHttpServer.html,1,['inherit'],['inherited']
Modifiability,"only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Attributes; RooArgSet _cachedVars;  ; bool _doDirtyProp = true;  Switch do (de)activate dirty state propagation when loading a data point. ;  ; RooArgSet _vars;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inhe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsDataStore.html:15659,inherit,inherited,15659,doc/master/classRooAbsDataStore.html,https://root.cern,https://root.cern/doc/master/classRooAbsDataStore.html,1,['inherit'],['inherited']
Modifiability,"only the; first one. double GetExpectedPValues(double pnull, double palt, double nsigma, bool usecls, bool oneSided = true); function given the null and the alt p value - return the expected one given the N - sigma value. void FillBins(const RooAbsPdf& pdf, const RooArgList& obs, RooAbsData& data, int& index, double& binVolume, int& ibin); fill bins by looping recursivly on observables. bool SetObsToExpected(RooProdPdf& prod, const RooArgSet& obs); iterate a Prod pdf to find all the Poisson or Gaussian part to set the observed value to expected one. bool SetObsToExpected(RooAbsPdf& pdf, const RooArgSet& obs); set observed value to the expected one; works for Gaussian, Poisson or LogNormal; assumes mean parameter value is the argument not constant and not depoending on observables; (if more than two arguments are not constant will use first one but printr a warning !); need to iterate on the components of the POisson to get n and nu (nu can be a RooAbsReal); (code from G. Petrucciani and extended by L.M.). RooAbsData * GenerateCountingAsimovData(RooAbsPdf& pdf, const RooArgSet& obs, const RooRealVar& weightVar, RooCategory* channelCat = 0); generate counting Asimov data for the case when the pdf cannot be extended; assume pdf is a RooPoisson or can be decomposed in a product of RooPoisson,; otherwise we cannot know how to make the Asimov data sets in the other cases. RooAbsData * GenerateAsimovDataSinglePdf(const RooAbsPdf& pdf, const RooArgSet& obs, const RooRealVar& weightVar, RooCategory* channelCat = 0); compute the asimov data set for an observable of a pdf; use the number of bins sets in the observables; to do : (possibility to change number of bins); implement integration over bin content. RooAbsData * GenerateAsimovData(const RooAbsPdf& pdf, const RooArgSet& observables); generate the asimov data for the observables (not the global ones); need to deal with the case of a sim pdf. RooAbsData * MakeAsimovData(RooAbsData& data, const RooStats::ModelConfig& model, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__AsymptoticCalculator.html:7845,extend,extended,7845,root/html534/RooStats__AsymptoticCalculator.html,https://root.cern,https://root.cern/root/html534/RooStats__AsymptoticCalculator.html,6,['extend'],['extended']
Modifiability,"only used in Makefiles. Using root-config instead of enumerating the libraries by hand allows you to link them in a platform independent way. Also, if ROOT library names change you will not need to change your Makefile.; A batch program that does not have a graphic display, which creates, fills, and saves histograms and trees, only needs to link the core libraries (libCore, libRIO), libHist and libTree. If ROOT needs access to other libraries, it loads them dynamically. For example, if the TreeViewer is used, libTreePlayer and all libraries libTreePlayer depends on are loaded also. The dependent libraries are shown in the ROOT reference guide’s library dependency graph. The difference between reference guide libHist and libHistPainter is that the former needs to be explicitly linked and the latter will be loaded automatically at runtime when ROOT needs it, by means of the Plugin Manager. plugin manager; In the Figure 1-2, the libraries represented by green boxes outside of the core are loaded via the plugin manager plugin manager or equivalent techniques, while the white ones are not. Of course, if one wants to access a plugin library directly, it has to be explicitly linked. An example of a plugin library is libMinuit. To create and fill histograms you need to link libHist.so. If the code has a call to fit the histogram, the “fitter” will dynamically load libMinuit if it is not yet loaded.; 1.6.2.3 Plugins: Runtime Library Dependencies for Linking; plugin manager The Plugin Manager TPluginManager allows postponing library dependencies to runtime: a plugin library will only be loaded when it is needed. Non-plugins will need to be linked, and are thus loaded at start-up. Plugins are defined by a base class (e.g. TFile) that will be implemented in a plugin, a tag used to identify the plugin (e.g. ^rfio: as part of the protocol string), the plugin class of which an object will be created (e.g. TRFIOFile), the library to be loaded (in short libRFIO.so to RFIO), and the c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:22787,plugin,plugin,22787,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,6,['plugin'],['plugin']
Modifiability,"onnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TGWidget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; TGCompositeFrame * fButtons;  container containing dock and hide buttons ;  ; TGCompositeFrame * fContainer;  container containing dockable frame ;  ; Bool_t fDeleted;  kTRUE if it is being deleted ;  ; TGDockButton * fDockButton;  dock button ;  ; TString fDockName;  name of frame ;  ; Bool_t fEnableHide;  if frame can be hidden ;  ; Bool_t fEnableUndock;  if frame can be undocked ;  ; Bool_t fFixedSize;  kTRUE if fixed size when undocked ;  ; TGUndockedFrame * fFrame;  undocked frame ;  ; Bool_t fHidden;  if frame is hidden ;  ; TGDockHideButton * fHideButton;  hide button ;  ; TGLayoutHints * fHints;  layout hints ;  ; TGLayoutHints * fLb;  ; TGLayoutHints * fLc;  layout hints ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGDockableFrame.html:27005,inherit,inherited,27005,doc/master/classTGDockableFrame.html,https://root.cern,https://root.cern/doc/master/classTGDockableFrame.html,2,['inherit'],['inherited']
Modifiability,"onnect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Additional Inherited Members;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connecti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode_1_1InteractiveObject.html:4057,inherit,inherited,4057,doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode_1_1InteractiveObject.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode_1_1InteractiveObject.html,2,['inherit'],['inherited']
Modifiability,"onnect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveProjected; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void SetDepthLocal (Float_t d) override;  Set depth (z-coordinate) of the projected points. ;  ;  Protected Member Functions inherited from TEvePointSet; void AssertIntIdsSize ();  Assert that size of IntId array is compatible with the size of the point array. ;  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TPointSet3D; void CopyIds (const TPointSet3D &t);  Copy id objects from point-set 't'. ;  ;  Protected Member Functions inheri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveLineProjected.html:43500,inherit,inherited,43500,doc/master/classTEveLineProjected.html,https://root.cern,https://root.cern/doc/master/classTEveLineProjected.html,4,['inherit'],['inherited']
Modifiability,"onnect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TGWidget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGNumberFormat; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Bool_t fNeedsVerification;  Needs verification of input. ;  ; EAttribute fNumAttr;  Number attribute. ;  ; ELimit fNumLimits;  Limit attributes. ;  ; Double_t fNumMax;  Upper limit. ;  ; Double_t fNumMin;  Lower limit. ;  ; EStyle fNumStyle;  Number style. ;  ; Bool_t fStepLog;  Logarithmic steps for increase? ;  ;  Protected Attributes inherited from TGTextEntry; ETextJustification fAlignment;  OPTION={GetMethod=""GetAlignment"";SetMethod=""SetAlignment"";Items=(kTextLeft=""Left"",kTextCenterX=""Center"",kTextRight=""Right"")} ;  ; Atom_t fClipboard;  clipboard property ;  ; TBlinkTimer * fCurBlink;  cursor blink timer ;  ; Int_t fCursorIX;  cursor position in characters ;  ; Bool_t fCursorOn;  cursor status (on/off) ;  ; Int_t fCursorX;  cursor position in p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGNumberEntryField.html:31403,inherit,inherited,31403,doc/master/classTGNumberEntryField.html,https://root.cern,https://root.cern/doc/master/classTGNumberEntryField.html,2,['inherit'],['inherited']
Modifiability,"onnect (const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TGWidget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGNumberFormat; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; TGButton * fButtonDown;  Button for decreasing value. ;  ; Bool_t fButtonToNum;  Send button messages to parent rather than number entry field. ;  ; TGButton * fButtonUp;  Button for increasing value. ;  ; TGNumberEntryField * fNumericEntry;  Number text entry field. ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDND",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGNumberEntry.html:29653,inherit,inherited,29653,doc/master/classTGNumberEntry.html,https://root.cern,https://root.cern/doc/master/classTGNumberEntry.html,2,['inherit'],['inherited']
Modifiability,"onnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_thasBinning(const char* name) const; Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; Bool_tRooAbsRealLValue::hasMax(const char* name = 0) const; Bool_tRooAbsRealLValue::hasMin(const char* name = 0) const; virtual Bool_tRooAbsRealLValue::hasRange(const char* name) const; RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tRooAbsRealLValue::inRange(const char* name) const; Bool_tRooAbsRealLValue::inRange(Double_t value, const char* rangeName, Double_t* clippedValue = 0) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tisJacobianOK(const RooArgSet& depList) const; virtual Bool_tRooAbsRealLValue::isLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg::IsSortable() const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooLinearVar.html:18796,Inherit,InheritsFrom,18796,root/html532/RooLinearVar.html,https://root.cern,https://root.cern/root/html532/RooLinearVar.html,1,['Inherit'],['InheritsFrom']
Modifiability,"onnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_thasBinning(const char* name) const; Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; Bool_tRooAbsRealLValue::hasMax(const char* name = 0) const; Bool_tRooAbsRealLValue::hasMin(const char* name = 0) const; virtual Bool_tRooAbsRealLValue::hasRange(const char* name) const; RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tRooAbsRealLValue::inRange(const char* name) const; Bool_tRooAbsRealLValue::inRange(Double_t value, const char* rangeName, Double_t* clippedValue = 0) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tRooAbsReal::isBinnedDistribution(const RooArgSet&) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tisFundamental() const; virtual Bool_tRooAbsRealLValue::isJacobianOK(const RooArgSet& depList) const; virtual Bool_tRooAbsRealLValue::isLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooErrorVar.html:18380,Inherit,InheritsFrom,18380,root/html532/RooErrorVar.html,https://root.cern,https://root.cern/root/html532/RooErrorVar.html,1,['Inherit'],['InheritsFrom']
Modifiability,"onnection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TGWidget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; virtual void Init ();  Initiate the internal classes of a combo box. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * Get",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGComboBox.html:28958,inherit,inherited,28958,doc/master/classTGComboBox.html,https://root.cern,https://root.cern/doc/master/classTGComboBox.html,1,['inherit'],['inherited']
Modifiability,"onnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TEveRefCnt; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; Int_t DoubleToInt (Double_t d) const;  ; Double_t GetCAMaxAsDouble () const;  ; Double_t GetCAMinAsDouble () const;  ; Double_t IntToDouble (Int_t i) const;  ; void SetupColor (Int_t val, UChar_t *pix) const;  Set RGBA color 'pixel' for signal-value 'val'. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Protected Attributes; Int_t fCAMax;  ; Int_t fCAMin;  ; UChar_t * fColorArray;  ; Color_t fDefaultColor;  ; UChar_t fDefaultRGBA [4];  ; Bool_t fFixColorRange;  ; Int_t fHighLimit;  ; Bool_t fInterpolate;  ; Int_t fLowLimit;  ; Int_t fMaxVal;  ; Int_t fMinVal;  ; Int_t fNBins;  ; Color_t fOverColor;  ; Int_t fOverflowAction;  ; UChar_t fOverRGBA [4];  ; Bool_t fShowDefValue;  ; Double_t fUIc;  ; Bool_t fUIDoubleRep;  ; Double_t fUIf;  ; Color_t fUnderColor;  ; Int_t fUnderflowAction;  ; UChar_t fUnderRGBA [4];  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TEveRefCnt; Int_t fRefCount;  . Static Protected Attributes; static TEveRGBAPalette * fgDefaultPalette;  ;  Static Protected Attributes inherited from TQO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveRGBAPalette.html:17250,inherit,inherited,17250,doc/master/classTEveRGBAPalette.html,https://root.cern,https://root.cern/doc/master/classTEveRGBAPalette.html,1,['inherit'],['inherited']
Modifiability,"onnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions;  TGroupButton (const TGroupButton &)=delete;  ; TGroupButton & operator= (const TGroupButton &)=delete;  . Additional Inherited Members;  Public Types inherited from TPad; enum  { ;   kFraming = (1ULL << ( 6 )); , kHori = (1ULL << ( 9 )); , kClipFrame = (1ULL << ( 10 )); , kPrintingPS = (1ULL << ( 11 )); , ;   kCannotMove = (1ULL << ( 12 )); , kClearAfterCR = (1ULL << ( 14 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TPad; void DestroyExternalViewer3D ();  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a box. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; virtual void HideToolTip (Int_t event);  Hide tool tip depen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGroupButton.html:43885,inherit,inherited,43885,doc/master/classTGroupButton.html,https://root.cern,https://root.cern/doc/master/classTGroupButton.html,1,['inherit'],['inherited']
Modifiability,"onrodIntegrator1D"").setRealValue(""maxSeg"", 50);; customConfig.getConfigSection(""RooAdaptiveGaussKronrodIntegrator1D"").setCatLabel(""method"", ""15Points"");; ; // Example of how to print set of possible values for ""method"" category; customConfig.getConfigSection(""RooAdaptiveGaussKronrodIntegrator1D"").find(""method"")->Print(""v"");; #endif; ; }; DEBUG#define DEBUGDefinition Polynomial.cxx:40; e#define e(i)Definition RSha256.hxx:103; RooArgSet.h; RooDataSet.h; RooGaussian.h; RooLandau.h; RooNumIntConfig.h; RooPlot.h; RooRealVar.h; TAxis.h; TCanvas.h; Warningvoid Warning(const char *location, const char *msgfmt,...)Use this function in warning situations.Definition TError.cxx:229; RooAbsCollection::setRealValuebool setRealValue(const char *name, double newVal=0.0, bool verbose=false)Set value of a RooAbsRealLValue stored in set with given name to newVal No error messages are printed...Definition RooAbsCollection.cxx:999; RooAbsReal::defaultIntegratorConfigstatic RooNumIntConfig * defaultIntegratorConfig()Returns the default numeric integration configuration for all RooAbsReals.Definition RooAbsReal.cxx:3272; RooCategory::setLabelbool setLabel(const char *label, bool printError=true) overrideSet value by specifying the name of the desired state.Definition RooCategory.cxx:186; RooLandauLandau distribution p.d.f.Definition RooLandau.h:24; RooMsgService::instancestatic RooMsgService & instance()Return reference to singleton instance.Definition RooMsgService.cxx:345; RooMsgService::addStreamInt_t addStream(RooFit::MsgLevel level, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={})Add a message logging stream for message with given RooFit::MsgLevel or higher.Definition RooMsgService.cxx:177; RooNumIntConfigHolds the configuration parameters of the various numeric integrators used by RooRealIntegral.Definition RooNumIntConfig.h:25; RooNumIntConfig::Printvoid Print(Option_t *option",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf901__numintconfig_8C.html:5733,config,configuration,5733,doc/master/rf901__numintconfig_8C.html,https://root.cern,https://root.cern/doc/master/rf901__numintconfig_8C.html,1,['config'],['configuration']
Modifiability,"ons () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGButtonGroup; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGGroupFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static FontStruct_t GetDefaultFontStruct ();  Return default font structure in use. ;  ; static const TGGC & GetDefaultGC ();  Return default graphics context in use. ;  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black g",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHButtonGroup.html:25596,inherit,inherited,25596,doc/master/classTGHButtonGroup.html,https://root.cern,https://root.cern/doc/master/classTGHButtonGroup.html,4,['inherit'],['inherited']
Modifiability,"ons (std::ostream &out, const char *varname, Int_t &frameNumber, Option_t *option);  Save histogram and list of functions of TGraph as C++ statement Used in all TGraph-derived classes. ;  ; Double_t ** ShrinkAndCopy (Int_t size, Int_t iend);  if size*2 <= fMaxSize allocate new arrays of size points, copy points [0,oend). ;  ; virtual void SwapPoints (Int_t pos1, Int_t pos2);  Swap points. ;  ; virtual void UpdateArrays (const std::vector< Int_t > &sorting_indices, Int_t numSortedPoints, Int_t low);  Update the fX and fY arrays with the sorted values. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TGraph; static void SwapValues (Double_t *arr, Int_t pos1, Int_t pos2);  Swap values. ;  ;  Protected Attributes inherited from TGraph; TList * fFunctions;  Pointer to list of functions (fits and user) ;  ; TH1F * fHistogram;  Pointer to histogram used for drawing axis. ;  ; Double_t fMaximum;  Maximum value for plotting along y. ;  ; Int_t fMaxSize;  !Current dimension of arrays fX and fY ;  ; Double_t fMinimum;  Minimum value for plotting along y. ;  ; Int_t fNpoints;  Number of points <= fMaxSize. ;  ; TString fOption;  Options used for drawing the graph. ;  ; Double_t * fX;  [fNpoints] array of X points ;  ; Double_t * fY;  [fNpoints] array of Y points ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; St",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooEllipse.html:33125,inherit,inherited,33125,doc/master/classRooEllipse.html,https://root.cern,https://root.cern/doc/master/classRooEllipse.html,1,['inherit'],['inherited']
Modifiability,"ons - implement if needed. {}. void SetFunction(const ROOT::Math::IMultiGenFunction& func); set the function to minimize. void SetFunction(const ROOT::Math::IMultiGradFunction& func); set a function to minimize using gradient. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set a new free variable. bool SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); set a new lower limit variable (override if minimizer supports them ). return SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower, double upper). bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set a new upper limit variable (override if minimizer supports them ). bool SetFixedVariable(unsigned int ivar, const string& name, double val); set a new fixed variable (override if minimizer supports them ). bool SetVariableValue(unsigned int ivar, double value); set the value of an already existing variable. bool SetVariableValues(const double* x); set the values of all existing variables (array must be dimensioned to the size of the existing parameters). bool SetVariableStepSize(unsigned int ivar, double value); set the step size of an already existing variable. bool SetVariableLowerLimit(unsigned int ivar, double lower); set the lower-limit of an already existing variable. bool SetVariableUpperLimit(unsigned int ivar, double upper); set the upper-limit of an already existing variable. bool SetVariableLimits(unsigned int ivar, double lower, double upper); set the limits of an already existing variable. bool FixVariable(unsigned int ivar); fix an existing variable. bool ReleaseVariable(unsigned int ivar); release an existing variable. bool IsFixedVariable(unsigned int ivar) const; query if an existing variable is fixed (i.e. considered constant in the minimization); note that by default all variables are not fixed. bool GetVariableSetting",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__Minimizer.html:6279,variab,variable,6279,root/html534/ROOT__Math__Minimizer.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__Minimizer.html,6,['variab'],['variable']
Modifiability,"ons ;  ; void SetMinosErrors (bool on=true);  set Minos errors computation to be performed after fitting ;  ; void SetMinosErrors (const std::vector< unsigned int > &paramInd);  set parameter indices for running Minos this can be used for running Minos on a subset of parameters - otherwise is run on all of them if MinosErrors() is set ;  ; void SetNormErrors (bool on=true);  set the option to normalize the error on the result according to chi2/ndf ;  ; void SetParabErrors (bool on=true);  set parabolic errors ;  ; void SetParamsSettings (const std::vector< ROOT::Fit::ParameterSettings > &pars);  ; void SetParamsSettings (unsigned int npar, const double *params, const double *vstep=nullptr);  set the parameter settings from number of parameters and a vector of values and optionally step values. ;  ; void SetUpdateAfterFit (bool on=true);  Update configuration after a fit using the FitResult. ;  ; void SetWeightCorrection (bool on=true);  apply the weight correction for error matrix computation ;  ; bool UpdateAfterFit () const;  Update configuration after a fit using the FitResult. ;  ; bool UseWeightCorrection () const;  Apply Weight correction for error matrix computation. ;  . Static Public Member Functions; static void SetDefaultMinimizer (const char *type, const char *algo=nullptr);  static function to control default minimizer type and algorithm ;  . Private Attributes; ROOT::Math::MinimizerOptions fMinimizerOpts;  minimizer control parameters including name and algo type ;  ; bool fMinosErrors;  do full error analysis using Minos ;  ; std::vector< unsigned int > fMinosParams;  vector with the parameter indices for running Minos ;  ; bool fNormErrors;  flag for error normalization ;  ; bool fParabErrors;  get correct parabolic errors estimate (call Hesse after minimizing) ;  ; std::vector< ROOT::Fit::ParameterSettings > fSettings;  vector with the parameter settings ;  ; bool fUpdateAfterFit;  update the configuration after a fit using the result ;  ; bool fWei",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1FitConfig.html:3809,config,configuration,3809,doc/master/classROOT_1_1Fit_1_1FitConfig.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1FitConfig.html,1,['config'],['configuration']
Modifiability,"ons It provides a method to evaluate the derivative of the function, Derivative and a method to evaluate at the same time the function and the derivative FdF ;  CIMinimizer1DInterface class for numerical methods for one-dimensional minimization ;  CIntegrandTransformAuxiliary inner class for mapping infinite and semi-infinite integrals ;  CIntegratorMultiDimUser class for performing multidimensional integration ;  CIntegratorMultiDimOptionsNumerical multi dimensional integration options ;  CIntegratorOneDimUser Class for performing numerical integration of a function in one dimension ;  CIntegratorOneDimOptionsNumerical one dimensional integration options ;  CInterpolatorClass for performing function interpolation of points ;  CInverterMatrix Inverter class Class to specialize calls to Dinv ;  CInverter< 0 >Inverter<0> ;  CInverter< 1 >1x1 matrix inversion \(a_{11} \to 1/a_{11}\) ;  CInverter< 2 >2x2 matrix inversion using Cramers rule ;  CIOptionsGeneric interface for defining configuration options of a numerical algorithm ;  CIParametricFunctionMultiDimIParamFunction interface (abstract class) describing multi-dimensional parameteric functions It is a derived class from ROOT::Math::IBaseFunctionMultiDim and ROOT::Math::IBaseParam ;  CIParametricFunctionOneDimSpecialized IParamFunction interface (abstract class) for one-dimensional parametric functions It is a derived class from ROOT::Math::IBaseFunctionOneDim and ROOT::Math::IBaseParam ;  CIParametricGradFunctionMultiDimInterface (abstract class) for parametric gradient multi-dimensional functions providing in addition to function evaluation with respect to the coordinates also the gradient with respect to the parameters, via the method ParameterGradient ;  CIParametricGradFunctionOneDimInterface (abstract class) for parametric one-dimensional gradient functions providing in addition to function evaluation with respect the coordinates also the gradient with respect to the parameters, via the method ParameterGradie",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/annotated.html:38279,config,configuration,38279,doc/v608/annotated.html,https://root.cern,https://root.cern/doc/v608/annotated.html,1,['config'],['configuration']
Modifiability,"ons It provides a method to evaluate the derivative of the function, Derivative and a method to evaluate at the same time the function and the derivative FdF ;  CIMinimizer1DInterface class for numerical methods for one-dimensional minimization ;  CIntegrandTransformAuxiliary inner class for mapping infinite and semi-infinite integrals ;  CIntegratorMultiDimUser class for performing multidimensional integration ;  CIntegratorMultiDimOptionsNumerical multi dimensional integration options ;  CIntegratorOneDimUser Class for performing numerical integration of a function in one dimension ;  CIntegratorOneDimOptionsNumerical one dimensional integration options ;  CInterpolatorClass for performing function interpolation of points ;  CInverterMatrix Inverter class Class to specialize calls to Dinv ;  CInverter< 0 >Inverter<0> ;  CInverter< 1 >1x1 matrix inversion \(a_{11} \to 1/a_{11}\) ;  CInverter< 2 >2x2 matrix inversion using Cramers rule ;  CIOptionsGeneric interface for defining configuration options of a numerical algorithm ;  CIParametricFunctionMultiDimTemplIParamFunction interface (abstract class) describing multi-dimensional parameteric functions It is a derived class from ROOT::Math::IBaseFunctionMultiDim and ROOT::Math::IBaseParam ;  CIParametricFunctionOneDimSpecialized IParamFunction interface (abstract class) for one-dimensional parametric functions It is a derived class from ROOT::Math::IBaseFunctionOneDim and ROOT::Math::IBaseParam ;  CIParametricGradFunctionMultiDimTemplInterface (abstract class) for parametric gradient multi-dimensional functions providing in addition to function evaluation with respect to the coordinates also the gradient with respect to the parameters, via the method ParameterGradient ;  CIParametricGradFunctionOneDimInterface (abstract class) for parametric one-dimensional gradient functions providing in addition to function evaluation with respect the coordinates also the gradient with respect to the parameters, via the method Param",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v610/annotated.html:39621,config,configuration,39621,doc/v610/annotated.html,https://root.cern,https://root.cern/doc/v610/annotated.html,5,['config'],['configuration']
Modifiability,"ons It provides a method to evaluate the derivative of the function, Derivative and a method to evaluate at the same time the function and the derivative FdF ;  CIMinimizer1DInterface class for numerical methods for one-dimensional minimization ;  CIntegrandTransformAuxillary inner class for mapping infinite and semi-infinite integrals ;  CIntegratorMultiDimUser class for performing multidimensional integration ;  CIntegratorMultiDimOptionsNumerical multi dimensional integration options ;  CIntegratorOneDimUser Class for performing numerical integration of a function in one dimension ;  CIntegratorOneDimOptionsNumerical one dimensional integration options ;  CInterpolatorClass for performing function interpolation of points ;  CInverterMatrix Inverter class Class to specialize calls to Dinv ;  CInverter< 0 >Inverter<0> ;  CInverter< 1 >1x1 matrix inversion \(a_{11} \to 1/a_{11}\) ;  CInverter< 2 >2x2 matrix inversion using Cramers rule ;  CIOptionsGeneric interface for defining configuration options of a numerical algorithm ;  CIParametricFunctionMultiDimIParamFunction interface (abstract class) describing multi-dimensional parameteric functions It is a derived class from ROOT::Math::IBaseFunctionMultiDim and ROOT::Math::IBaseParam ;  CIParametricFunctionOneDimSpecialized IParamFunction interface (abstract class) for one-dimensional parametric functions It is a derived class from ROOT::Math::IBaseFunctionOneDim and ROOT::Math::IBaseParam ;  CIParametricGradFunctionMultiDimInterface (abstract class) for parametric gradient multi-dimensional functions providing in addition to function evaluation with respect to the coordinates also the gradient with respect to the parameters, via the method ParameterGradient ;  CIParametricGradFunctionOneDimInterface (abstract class) for parametric one-dimensional gradient functions providing in addition to function evaluation with respect the coordinates also the gradient with respect to the parameters, via the method ParameterGradie",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html606/annotated.html:34211,config,configuration,34211,root/html606/annotated.html,https://root.cern,https://root.cern/root/html606/annotated.html,2,['config'],['configuration']
Modifiability,"ons in fitting procedure, input parameter, it should be > 0 ;  ; Double_t * fPositionCalc;  [fNPeaks] array of calculated values of fitted positions, output parameters ;  ; Double_t * fPositionErr;  [fNPeaks] array of position errors ;  ; Double_t * fPositionInit;  [fNPeaks] array of initial values of peaks positions, input parameters ;  ; Int_t fPower;  possible values kFitPower2,4,6,8,10,12, for details see references. It applies only for Awmi fitting function. ;  ; Double_t fSCalc;  calculated value of s parameter ;  ; Double_t fSErr;  error value of s parameter ;  ; Double_t fSigmaCalc;  calculated value of sigma parameter ;  ; Double_t fSigmaErr;  error value of sigma parameter ;  ; Double_t fSigmaInit;  initial value of sigma parameter ;  ; Double_t fSInit;  initial value of s parameter (relative amplitude of step), for details see html manual and references ;  ; Int_t fStatisticType;  type of statistics, possible values kFitOptimChiCounts (chi square statistics with counts as weighting coefficients), kFitOptimChiFuncValues (chi square statistics with function values as weighting coefficients),kFitOptimMaxLikelihood ;  ; Double_t fTCalc;  calculated value of t parameter ;  ; Double_t fTErr;  error value of t parameter ;  ; Double_t fTInit;  initial value of t parameter (relative amplitude of tail), for details see html manual and references ;  ; Int_t fXmax;  last fitted channel ;  ; Int_t fXmin;  first fitted channel ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TSpectrumFit.h>. Inheritance diagram for TSpectrumFit:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkFitOptimChiCounts ; kFitOptimChiFuncValues ; kFitOptimMaxLikelihood ; kFitAlphaHalving ; kFitAlphaOptimal ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrumFit.html:21969,inherit,inherited,21969,doc/master/classTSpectrumFit.html,https://root.cern,https://root.cern/doc/master/classTSpectrumFit.html,1,['inherit'],['inherited']
Modifiability,"ons inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from RooPlotable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Additional Inherited Members;  Public Types inherited from TGraph; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kClipFrame = (1ULL << ( 10 )); , kResetHisto = (1ULL << ( 17 )); , kNotEditable = (1ULL << ( 18 )); , ;   kIsSortedX = (1ULL << ( 19 )); , kIsHighlight = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooEllipse.html:28802,inherit,inherited,28802,doc/master/classRooEllipse.html,https://root.cern,https://root.cern/doc/master/classRooEllipse.html,2,['inherit'],['inherited']
Modifiability,"ons inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from RooPlotable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; std::unique_ptr< RooHist > createEmptyResidHist (const RooCurve &curve, bool normalize=false) const;  ; void fillResidHist (RooHist &residHist, const RooCurve &curve, bool normalize=false, bool useAverage=false) const;  ; void initialize ();  Perform common initialization for all constructors. ;  ; Int_t roundBin (double y);  Return the nearest positive integer to the input value and print a warning if an adjustment is required. ;  ;  Protected Member Functions inherited from TGraphAsymmErrors; Double_t ** Allo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooHist.html:36130,inherit,inherited,36130,doc/master/classRooHist.html,https://root.cern,https://root.cern/doc/master/classRooHist.html,2,['inherit'],['inherited']
Modifiability,"ons inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from RooPlotable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; void addPoints (const RooAbsFunc &func, double xlo, double xhi, Int_t minPoints, double prec, double resolution, WingMode wmode, Int_t numee=0, bool doEEVal=false, double eeVal=0.0, std::list< double > *samplingHint=nullptr);  Add points calculated with the specified function, over the range (xlo,xhi). ;  ; void addRange (const RooAbsFunc &func, double x1, double x2, double y1, double y2, double minDy, double minDx, int numee, bool doEEVal, double eeVal, double epsilon);  Fill the range (x1,x2) with points calc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCurve.html:33874,inherit,inherited,33874,doc/master/classRooCurve.html,https://root.cern,https://root.cern/doc/master/classRooCurve.html,2,['inherit'],['inherited']
Modifiability,"ons inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TCanvasImp;  TCanvasImp (const TCanvasImp &ci);  ; virtual TVirtualPadPainter * CreatePadPainter ();  ; virtual Bool_t IsLocked ();  ; virtual Bool_t IsWeb () const;  ; virtual void Lock ();  ; TCanvasImp & operator= (const TCanvasImp &ci);  ; virtual Bool_t PerformUpdate (Bool_t);  ; virtual void Unlock ();  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TGMainFrame; TList * fBindList;  list with key bindings ;  ; TString fClassName;  WM class name. ;  ; Atom_t * fDNDTypeList;  handles DND types ;  ; TString fIconName;  icon name ;  ; TString fIconPixmap;  icon pixmap name ;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootCanvas.html:37751,inherit,inherited,37751,doc/master/classTRootCanvas.html,https://root.cern,https://root.cern/doc/master/classTRootCanvas.html,1,['inherit'],['inherited']
Modifiability,"ons inherited from TGWidget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; virtual void Init ();  Initiate the internal classes of a combo box. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; const TGPicture * fBpic;  down arrow picture used in fDDButton ;  ; TGComboBoxPopup * fComboFrame;  popup containing a listbox ;  ; TGScrollBarElement * fDDButton;  button controlling drop down of popup ;  ; TGLayoutHints * fLhb;  layout hints for fDDButton ;  ; TGLayoutHints * fLhdd;  layout hints for fListBox ;  ; TGLayoutHints * fLhs;  layout hints for selected item frame ;  ; TGListBox * fListBox;  the lis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGComboBox.html:29452,inherit,inherited,29452,doc/master/classTGComboBox.html,https://root.cern,https://root.cern/doc/master/classTGComboBox.html,3,['inherit'],['inherited']
Modifiability,"ons inherited from TMethodBrowsable;  TMethodBrowsable (const TBranch *branch, TMethod *m, const TVirtualBranchBrowsable *parent=nullptr);  Constructor. ;  ;  Protected Member Functions inherited from TVirtualBranchBrowsable;  TVirtualBranchBrowsable (const TBranch *b, TClass *type, bool typeIsPointer, const TVirtualBranchBrowsable *parent=nullptr);  Constructor setting all members according to parameters. ;  ; void SetType (TClass *type);  sets the type of this browsable object ;  ; void SetTypeIsPointer (bool set=true);  sets whether the type of this browsable object is a pointer ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Additional Inherited Members;  Public Types inherited from TVirtualBranchBrowsable; typedef Int_t(* MethodCreateListOfBrowsables_t) (TList &, const TBranch *branch, const TVirtualBranchBrowsable *parent);  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TMethodBrowsable; static void GetBrowsableMethodsForClass (TClass *cl, TList &list);  Given a class, this methods fills list with TMethodBrowsables for the class and its base classes, and returns the number of ad",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCollectionMethodBrowsable.html:14653,inherit,inherited,14653,doc/master/classTCollectionMethodBrowsable.html,https://root.cern,https://root.cern/doc/master/classTCollectionMethodBrowsable.html,2,['inherit'],['inherited']
Modifiability,"ons inherited from TMrbSubevent_Caen; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Int_t fMer;  ; Int_t fPileup;  ; TString fSevtName;  ;  Protected Attributes inherited from TMrbSubevent_Caen; TUsrHitBuffer fHitBuffer;  ; Int_t fTimeStamp;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tree/clonesA_Event.h>. Inheritance diagram fo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUsrSevtData1.html:9551,inherit,inherited,9551,doc/master/classTUsrSevtData1.html,https://root.cern,https://root.cern/doc/master/classTUsrSevtData1.html,2,['inherit'],['inherited']
Modifiability,"ons inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TUDPSocket ();  ; Bool_t RecvProcessIDs (TMessage *mess);  Receive a message containing process ids. ;  ; Bool_t RecvStreamerInfos (TMessage *mess);  Receive a message containing streamer infos. ;  ; void SendProcessIDs (const TMessage &mess);  Check if TProcessIDs must be sent. ;  ; void SendStreamerInfos (const TMessage &mess);  Check if TStreamerInfo must be sent. ;  ; void SetDescriptor (Int_t desc);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TInetAddress fAddress;  ; TBits fBitsInfo;  ; UInt_t fBytesRecv;  ; UInt_t fBytesSent;  ; Int_t fCompress;  ; TTimeStamp fLastUsage;  ; TVirtualMutex * fLastUsageMtx;  ; TInetAddress fLocalAddress;  ; Int_t fRemoteProtocol;  ; TSecContext * fSecContext;  ; TString fService;  ; EServiceType fServType;  ; Int_t fSocket;  ; TString fUrl;  ; TList * fUUIDs;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static ULong64_t fgBytesRecv = 0;  ; static ULong64_t fgBytesSent = 0;  . Private Member Functions; Option_t * GetOption () const override;  ; TUDPSocket & operator= (const TUDPSocket &)=delete;  . Friends; class TServerSocket;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TUDPSock",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUDPSocket.html:15174,inherit,inherited,15174,doc/master/classTUDPSocket.html,https://root.cern,https://root.cern/doc/master/classTUDPSocket.html,1,['inherit'],['inherited']
Modifiability,"ons inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  ;  Static Protected Member Functions inherited from TGTextView; static FontStruct_t GetDefaultFontStruct ();  Return default font structure in use. ;  ; static const TGGC & GetDefaultGC ();  Return default graphics context in use. ;  ; static const TGGC & GetDefaultSelectedBackgroundGC ();  Return graphics context for highlighted frame background. ;  ; static const TGGC & GetDefaultSelectedGC ();  Return selection graphics context in use. ;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGTextView; static const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextViewostream.html:38906,inherit,inherited,38906,doc/master/classTGTextViewostream.html,https://root.cern,https://root.cern/doc/master/classTGTextViewostream.html,1,['inherit'],['inherited']
Modifiability,"ons inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; virtual void RemoveLast ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; TObject * FindObject (const char *name) const override;  Find an object in this collection using its name. ;  ; TObject * FindObject (const TObject *obj) const override;  Find an object in this collection using the object's IsEqual() member function. ;  ; const char * GetName () const override;  Return name of this",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRefArray.html:10189,inherit,inherit,10189,doc/master/classTRefArray.html,https://root.cern,https://root.cern/doc/master/classTRefArray.html,1,['inherit'],['inherit']
Modifiability,"ons inherited from TSeqCollection; virtual ~TSeqCollection ();  ; void Add (TObject *obj) override;  ; TClass * IsA () const override;  ; virtual Bool_t IsSorted () const;  ; Int_t LastIndex () const;  ; Long64_t Merge (TCollection *list);  Merge this collection with all collections coming in the input list. ;  ; virtual void RemoveAfter (TObject *after);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; virtual void RemoveLast ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; const char * GetName () const override;  Return name of this collection. ;  ; virtual Int_t GetSize () const;  Return the capacity of the collection, i.e. ;  ; virtual Int_t GrowBy (Int_t delta) const;  Increase the collection's capacity by delta slots. ;  ; ULong_t Hash () const override;  Return hash value for th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRefArray.html:5800,inherit,inherit,5800,doc/master/classRooRefArray.html,https://root.cern,https://root.cern/doc/master/classRooRefArray.html,4,['inherit'],['inherit']
Modifiability,"ons to this object; TList*TQObject::fListOfSignals! list of signals from this object; TProofMgr*TProof::fManagermanager to which this session belongs (if any); Bool_tTProof::fMasterServtrue if we are a master server; TStringTNamed::fNameobject identifier; Int_tTProof::fProtocolremote PROOF server protocol version number; TProof::EQueryModeTProof::fQueryModedefault query mode; TList*TProof::fRunningDSetsTemporary datasets used for async running; TProofMgr::EServTypeTProof::fServTypetype of server: proofd, XrdProofd; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TList*TProof::fSlaveslist of all slave servers as in config file; TStringTNamed::fTitleobject title; Long64_tTProof::fTotalBytesnumber of bytes to be analyzed; TUrlTProof::fUrlUrl of the master; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TSemaphore*TProof::fgSemaphoresemaphore to control no of parallel startup threads. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofSuperMaster(const char* masterurl, const char* conffile = kPROOF_ConfFile, const char* confdir = kPROOF_ConfDir, Int_t loglevel = 0, const char* alias = 0, TProofMgr* mgr = 0); Start super master PROOF session. Bool_t StartSlaves(Bool_t ); Start up PROOF submasters. Long64_t Process(TDSet* set, const char* selector, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0); Process a data set (TDSet) using the specified selector (.C) file.; Entry- or event-lists should be set in the data set object using; TDSet::SetEntryList.; The return value is -1 in case of error and TSelector::GetStatus() in; in case of success. void ValidateDSet(TDSet* dset); Validate a TDSet. TVirtualProofPlayer * MakePlayer(const char* player = 0, TSocket* s = 0); Construct a TProofPlayer object. The player string specifies which; player should be created: remote, slave, sm (supermaster) or base.; Default is sm. Socket is needed in case a sla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofSuperMaster.html:24124,Inherit,Inheritance,24124,root/html532/TProofSuperMaster.html,https://root.cern,https://root.cern/root/html532/TProofSuperMaster.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ons to this object; TList*TQObject::fListOfSignals! list of signals from this object; TProofMgr*TProof::fManagermanager to which this session belongs (if any); Bool_tTProof::fMasterServtrue if we are a master server; TStringTNamed::fNameobject identifier; Int_tTProof::fProtocolremote PROOF server protocol version number; TProof::EQueryModeTProof::fQueryModedefault query mode; TList*TProof::fRunningDSetsTemporary datasets used for async running; TProofMgr::EServTypeTProof::fServTypetype of server: proofd, XrdProofd; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TList*TProof::fSlaveslist of all slave servers as in config file; TStringTNamed::fTitleobject title; Long64_tTProof::fTotalBytesnumber of bytes to be analyzed; TUrlTProof::fUrlUrl of the master; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TSemaphore*TProof::fgSemaphoresemaphore to control no of parallel startup threads. private:. TCondor*fCondorproxy for our Condor pool; TTimer*fTimertimer for delayed Condor COD suspend. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofCondor(const char* masterurl, const char* conffile = kPROOF_ConfFile, const char* confdir = kPROOF_ConfDir, Int_t loglevel = 0, const char* alias = 0, TProofMgr* mgr = 0); Start proof using condor. ~TProofCondor(); Clean up Condor PROOF environment. Bool_t StartSlaves(Bool_t ); Setup Condor workers using dynamic information. void SetActive(Bool_t active); Suspend or resume PROOF via Condor. TString GetJobAd(); Get job Ad. void SetActive(); { TProof::SetActive(); }. » Author: Fons Rademakers 13/02/97 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/proof:$Id: TProofCondor.h 27171 2009-01-16 16:04:00Z ganis $ » Last generated: 2011-11-03 20:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofCondor.html:24341,Inherit,Inheritance,24341,root/html532/TProofCondor.html,https://root.cern,https://root.cern/root/html532/TProofCondor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ons with data. ;  ; double corrcov (const RooRealVar &x, const RooRealVar &y, const char *cutSpec, const char *cutRange, bool corr) const;  Internal method to calculate single correlation and covariance elements. ;  ; RooFit::OwningPtr< TMatrixDSym > corrcovMatrix (const RooArgList &vars, const char *cutSpec, const char *cutRange, bool corr) const;  Return covariance matrix from data for given list of observables. ;  ; RooRealVar * dataRealVar (const char *methodname, const RooRealVar &extVar) const;  Internal method to check if given RooRealVar maps to a RooRealVar in this dataset. ;  ; void initializeVars (RooArgSet const &vars);  ; virtual void optimizeReadingWithCaching (RooAbsArg &arg, const RooArgSet &cacheList, const RooArgSet &keepObsList);  Prepare dataset for use with cached constant terms listed in 'cacheList' of expression 'arg'. ;  ; virtual RooPlot * plotAsymOn (RooPlot *frame, const RooAbsCategoryLValue &asymCat, PlotOpt o) const;  Create and fill a histogram with the asymmetry N[+] - N[-] / ( N[+] + N[-] ), where N(+/-) is the number of data points with asymCat=+1 and asymCat=-1 as function of the frames variable. ;  ; virtual RooPlot * plotEffOn (RooPlot *frame, const RooAbsCategoryLValue &effCat, PlotOpt o) const;  Create and fill a histogram with the efficiency N[1] / ( N[1] + N[0] ), where N(1/0) is the number of data points with effCat=1 and effCat=0 as function of the frames variable. ;  ; virtual RooPlot * plotOn (RooPlot *frame, PlotOpt o) const;  Create and fill a histogram of the frame's variable and append it to the frame. ;  ; virtual std::unique_ptr< RooAbsData > reduceEng (const RooArgSet &varSubset, const RooFormulaVar *cutVar, const char *cutRange=nullptr, std::size_t nStart=0, std::size_t=std::numeric_limits< std::size_t >::max()) const =0;  ; virtual void resetCache ();  Internal method – Remove cached function values. ;  ; virtual void setArgStatus (const RooArgSet &set, bool active);  ;  Protected Member Functions inherited from T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooTreeData.html:26417,variab,variable,26417,doc/master/classRooTreeData.html,https://root.cern,https://root.cern/doc/master/classRooTreeData.html,2,['variab'],['variable']
Modifiability,"ons with data. ;  ; double corrcov (const RooRealVar &x, const RooRealVar &y, const char *cutSpec, const char *cutRange, bool corr) const;  Internal method to calculate single correlation and covariance elements. ;  ; RooFit::OwningPtr< TMatrixDSym > corrcovMatrix (const RooArgList &vars, const char *cutSpec, const char *cutRange, bool corr) const;  Return covariance matrix from data for given list of observables. ;  ; RooRealVar * dataRealVar (const char *methodname, const RooRealVar &extVar) const;  Internal method to check if given RooRealVar maps to a RooRealVar in this dataset. ;  ; void initializeVars (RooArgSet const &vars);  ; virtual void optimizeReadingWithCaching (RooAbsArg &arg, const RooArgSet &cacheList, const RooArgSet &keepObsList);  Prepare dataset for use with cached constant terms listed in 'cacheList' of expression 'arg'. ;  ; virtual RooPlot * plotAsymOn (RooPlot *frame, const RooAbsCategoryLValue &asymCat, PlotOpt o) const;  Create and fill a histogram with the asymmetry N[+] - N[-] / ( N[+] + N[-] ), where N(+/-) is the number of data points with asymCat=+1 and asymCat=-1 as function of the frames variable. ;  ; virtual RooPlot * plotEffOn (RooPlot *frame, const RooAbsCategoryLValue &effCat, PlotOpt o) const;  Create and fill a histogram with the efficiency N[1] / ( N[1] + N[0] ), where N(1/0) is the number of data points with effCat=1 and effCat=0 as function of the frames variable. ;  ; virtual RooPlot * plotOn (RooPlot *frame, PlotOpt o) const;  Create and fill a histogram of the frame's variable and append it to the frame. ;  ; virtual void resetCache ();  Internal method – Remove cached function values. ;  ; virtual void setArgStatus (const RooArgSet &set, bool active);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from RooDirItem; void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDataSet.html:32491,variab,variable,32491,doc/master/classRooDataSet.html,https://root.cern,https://root.cern/doc/master/classRooDataSet.html,1,['variab'],['variable']
Modifiability,"ons with data. ;  ; double corrcov (const RooRealVar &x, const RooRealVar &y, const char *cutSpec, const char *cutRange, bool corr) const;  Internal method to calculate single correlation and covariance elements. ;  ; RooFit::OwningPtr< TMatrixDSym > corrcovMatrix (const RooArgList &vars, const char *cutSpec, const char *cutRange, bool corr) const;  Return covariance matrix from data for given list of observables. ;  ; RooRealVar * dataRealVar (const char *methodname, const RooRealVar &extVar) const;  Internal method to check if given RooRealVar maps to a RooRealVar in this dataset. ;  ; void initializeVars (RooArgSet const &vars);  ; virtual void optimizeReadingWithCaching (RooAbsArg &arg, const RooArgSet &cacheList, const RooArgSet &keepObsList);  Prepare dataset for use with cached constant terms listed in 'cacheList' of expression 'arg'. ;  ; virtual RooPlot * plotAsymOn (RooPlot *frame, const RooAbsCategoryLValue &asymCat, PlotOpt o) const;  Create and fill a histogram with the asymmetry N[+] - N[-] / ( N[+] + N[-] ), where N(+/-) is the number of data points with asymCat=+1 and asymCat=-1 as function of the frames variable. ;  ; virtual RooPlot * plotEffOn (RooPlot *frame, const RooAbsCategoryLValue &effCat, PlotOpt o) const;  Create and fill a histogram with the efficiency N[1] / ( N[1] + N[0] ), where N(1/0) is the number of data points with effCat=1 and effCat=0 as function of the frames variable. ;  ; virtual void resetCache ();  Internal method – Remove cached function values. ;  ; virtual void setArgStatus (const RooArgSet &set, bool active);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from RooDirItem; void appendToDir (TObject *obj, bool forceMemoryResident=false);  Append object to directory. ;  ; void removeFromDir (TObject *obj);  Remove object f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDataHist.html:37335,variab,variable,37335,doc/master/classRooDataHist.html,https://root.cern,https://root.cern/doc/master/classRooDataHist.html,1,['variab'],['variable']
Modifiability,"ons |; Private Attributes |; List of all members ; TGeoTessellated Class ReferenceThe Geometry Package » Geometry classes. ; Tessellated solid class. ; It is composed by a set of planar faces having triangular or quadrilateral shape. The class does not provide navigation functionality, it just wraps the data for the composing faces. ; Definition at line 56 of file TGeoTessellated.h. Public Types; using Vertex_t = Tessellated::Vertex_t;  ;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg = (1ULL << ( 3 )); , kGeoVisX = (1ULL << ( 4 )); , kGeoVisY = (1ULL << ( 5 )); , ;   kGeoVisZ = (1ULL << ( 6 )); , kGeoRunTimeShape = (1ULL << ( 7 )); , kGeoInvalidShape = (1ULL << ( 8 )); , kGeoTorus = (1ULL << ( 9 )); , ;   kGeoBox = (1ULL << ( 10 )); , kGeoPara = (1ULL << ( 11 )); , kGeoSph = (1ULL << ( 12 )); , kGeoTube = (1ULL << ( 13 )); , ;   kGeoTubeSeg = (1ULL << ( 14 )); , kGeoCone = (1ULL << ( 15 )); , kGeoConeSeg = (1ULL << ( 16 )); , kGeoPcon = (1ULL << ( 17 )); , ;   kGeoPgon = (1ULL << ( 18 )); , kGeoArb8 = (1ULL << ( 19 )); , kGeoEltu = (1ULL << ( 20 )); , kGeoTrap = (1ULL << ( 21 )); , ;   kGeoCtub = (1ULL << ( 22 )); , kGeoTrd1 = (1ULL << ( 23 )); , kGeoTrd2 = (1ULL << ( 24 )); , kGeoComb = (1ULL << ( 25 )); , ;   kGeoClosedShape = (1ULL << ( 26 )); , kGeoXtru = (1ULL << ( 27 )); , kGeoParaboloid = (1ULL << ( 28 )); , kGeoHalfSpace = (1ULL << ( 29 )); , ;   kGeoHype = (1ULL << ( 30 )); , kGeoSavePrimitive = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  ESt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoTessellated.html:700,inherit,inherited,700,doc/master/classTGeoTessellated.html,https://root.cern,https://root.cern/doc/master/classTGeoTessellated.html,1,['inherit'],['inherited']
Modifiability,"ons |; Static Public Member Functions |; Protected Attributes |; List of all members ; RooNumGenConfig Class ReferenceRooFit » RooFit Core. ; Holds the configuration parameters of the various numeric integrators used by RooRealIntegral. ; RooRealIntegral and RooAbsPdf use this class in the (normalization) integral configuration interface ; Definition at line 25 of file RooNumGenConfig.h. Public Member Functions;  RooNumGenConfig ();  Constructor. ;  ;  RooNumGenConfig (const RooNumGenConfig &other);  Copy constructor. ;  ;  ~RooNumGenConfig () override;  Destructor. ;  ; bool addConfigSection (const RooAbsNumGenerator *proto, const RooArgSet &defaultConfig);  Add a configuration section for a particular integrator. ;  ; StyleOption defaultPrintStyle (Option_t *opt) const override;  ; RooArgSet & getConfigSection (const char *name);  Return section with configuration parameters for integrator with given (class) name. ;  ; const RooArgSet & getConfigSection (const char *name) const;  Retrieve configuration information specific to integrator with given name. ;  ; TClass * IsA () const override;  ; RooCategory & method1D (bool cond, bool cat);  ; const RooCategory & method1D (bool cond, bool cat) const;  ; RooCategory & method2D (bool cond, bool cat);  ; const RooCategory & method2D (bool cond, bool cat) const;  ; RooCategory & methodND (bool cond, bool cat);  ; const RooCategory & methodND (bool cond, bool cat) const;  ; RooNumGenConfig & operator= (const RooNumGenConfig &other);  Assignment operator from other RooNumGenConfig. ;  ; void Print (Option_t *options=nullptr) const override;  This method must be overridden when a class wants to print itself. ;  ; void printMultiline (std::ostream &os, Int_t content, bool verbose, TString indent="""") const override;  Detailed printing interface. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNumGenConfig.html:1171,config,configuration,1171,doc/master/classRooNumGenConfig.html,https://root.cern,https://root.cern/doc/master/classRooNumGenConfig.html,1,['config'],['configuration']
Modifiability,"ons"" ; TMVA::DecisionTree::EPruneMethodfPruneMethodmethod used for prunig ; TStringfPruneMethodSprune method option String; Double_tfPruneStrengtha parameter to set the ""amount"" of pruning..needs to be adjusted; Bool_tfRandomisedTreeschoose a random subset of possible cut variables at each node during training; TMVA::SeparationBase*fSepTypethe separation used in node splitting; TStringfSepTypeSthe separation (option string) used in node splitting; TMVA::DecisionTree*fTreethe decision tree; Int_tfUseNvarsthe number of variables used in the randomised tree splitting; Bool_tfUsePoissonNvarsfUseNvars is used as a poisson mean, and the actual value of useNvars is at each step drawn form that distribution; Bool_tfUseYesNoLeafuse sig or bkg classification in leave nodes or sig/bkg; vector<Double_t>fVariableImportancethe relative importance of the different variables ; static const Int_tfgDebugLeveldebug level determining some printout/control plots etc. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodDT(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", TDirectory* theTargetDir = 0); the standard constructor for just an ordinar ""decision trees"". MethodDT(TMVA::DataSetInfo& dsi, const TString& theWeightFile, TDirectory* theTargetDir = NULL); constructor from Reader. Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); FDA can handle classification with 2 classes and regression with one regression-target. void DeclareOptions(); define the options (their key words) that can be set in the option string; UseRandomisedTrees choose at each node splitting a random set of variables; UseNvars use UseNvars variables in randomised trees; SeparationType the separation criterion applied in the node splitting; known: GiniIndex; MisClassificationError; CrossEntropy; SDivSqrtSPlusB; nEventsMin: the minimum number of events in a node (le",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodDT.html:20949,Inherit,Inheritance,20949,root/html534/TMVA__MethodDT.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodDT.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,ons' values and in the style given by 'enum StyleOption'. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsLValue; virtual ~RooAbsLValue ()=default;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooAbsCategoryLValue; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooAbsCategory; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  A buffer for reading values from trees. ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooAbsArg; static void setDirtyInhibit (bool flag);  Control global dirty inhibit mode. ;  ; static void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TC,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCategory.html:39738,inherit,inherited,39738,doc/master/classRooCategory.html,https://root.cern,https://root.cern/doc/master/classRooCategory.html,2,['inherit'],['inherited']
Modifiability,"ons(); virtual voidProcessOptions(). Data Members; public:. enum TMVA::MethodBase::EWeightFileType { kROOT; kTEXT; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. Bool_tTMVA::MethodBase::fSetupCompletedis method setup; const TMVA::Event*TMVA::MethodBase::fTmpEvent! temporary event when testing on a different DataSet than the own one. protected:. TMVA::Types::EAnalysisTypeTMVA::MethodBase::fAnalysisTypemethod-mode : true --> regression, false --> classification; UInt_tTMVA::MethodBase::fBackgroundClassindex of the Background-class; vector<TString>*TMVA::MethodBase::fInputVarsvector of input variables used in MVA; vector<Float_t>*TMVA::MethodBase::fMulticlassReturnValholds the return-values for the multiclass classification; Int_tTMVA::MethodBase::fNbinsnumber of bins in input variable histograms; Int_tTMVA::MethodBase::fNbinsHnumber of bins in evaluation histograms; Int_tTMVA::MethodBase::fNbinsMVAoutputnumber of bins in MVA output histograms; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MethodBayesClassifier(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = """", TDirectory* theTargetDir = 0); standard constructor. MethodBayesClassifier(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir = NULL); constructor from weight file. Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); Variable can handle classification with 2 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__MethodBayesClassifier.html:15404,variab,variables,15404,root/html530/TMVA__MethodBayesClassifier.html,https://root.cern,https://root.cern/root/html530/TMVA__MethodBayesClassifier.html,10,['variab'],"['variable', 'variables']"
Modifiability,"ons(); virtual voidProcessOptions(). Data Members; public:. enum TMVA::MethodBase::EWeightFileType { kROOT; kTEXT; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. Bool_tTMVA::MethodBase::fSetupCompletedis method setup; const TMVA::Event*TMVA::MethodBase::fTmpEvent! temporary event when testing on a different DataSet than the own one. protected:. TMVA::Types::EAnalysisTypeTMVA::MethodBase::fAnalysisTypemethod-mode : true --> regression, false --> classification; UInt_tTMVA::MethodBase::fBackgroundClassindex of the Background-class; vector<TString>*TMVA::MethodBase::fInputVarsvector of input variables used in MVA; vector<Float_t>*TMVA::MethodBase::fMulticlassReturnValholds the return-values for the multiclass classification; Int_tTMVA::MethodBase::fNbinsnumber of bins in input variable histograms; Int_tTMVA::MethodBase::fNbinsHnumber of bins in evaluation histograms; Int_tTMVA::MethodBase::fNbinsMVAoutputnumber of bins in MVA output histograms; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. private:. Float_tfBparmfree plane coefficient ; Float_tfCostcost value; Float_tfDoubleSigmaSquaredfor RBF Kernel; Float_tfGammaRBF Kernel parameter; vector<TMVA::SVEvent*>*fInputDatavector of training data in SVM format; Float_tfKappafor Sigmoidal Kernel; UInt_tfMaxItermax number of iteration; TVectorD*fMaxVarsfor normalization //is it still needed?? ; TVectorD*fMinVarsfor normalization //is it still needed?? ; UShort_tfNSubSetsnr of subsets, default 1; Int_tfOrderfor Polynomial Kernel ( polynomial order ); TMVA::SVKernelFunction*fSVKernelFunctionkernel func",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__MethodSVM.html:15394,variab,variables,15394,root/html530/TMVA__MethodSVM.html,https://root.cern,https://root.cern/root/html530/TMVA__MethodSVM.html,10,['variab'],"['variable', 'variables']"
Modifiability,"ons(); virtual voidProcessOptions(). Data Members; public:. enum TMVA::MethodBase::EWeightFileType { kROOT; kTEXT; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. Bool_tTMVA::MethodBase::fSetupCompletedis method setup; const TMVA::Event*TMVA::MethodBase::fTmpEvent! temporary event when testing on a different DataSet than the own one. protected:. TMVA::Types::EAnalysisTypeTMVA::MethodBase::fAnalysisTypemethod-mode : true --> regression, false --> classification; UInt_tTMVA::MethodBase::fBackgroundClassindex of the Background-class; vector<TString>*TMVA::MethodBase::fInputVarsvector of input variables used in MVA; vector<Float_t>*TMVA::MethodBase::fMulticlassReturnValholds the return-values for the multiclass classification; Int_tTMVA::MethodBase::fNbinsnumber of bins in input variable histograms; Int_tTMVA::MethodBase::fNbinsHnumber of bins in evaluation histograms; Int_tTMVA::MethodBase::fNbinsMVAoutputnumber of bins in MVA output histograms; TMVA::Ranking*TMVA::MethodBase::fRankingpointer to ranking object (created by derived classifiers); vector<Float_t>*TMVA::MethodBase::fRegressionReturnValholds the return-values for the regression; UInt_tTMVA::MethodBase::fSignalClassindex of the Signal-class. private:. vector<TMVA::Event*>fEventSamplethe complete training sample; vector<TMVA::DecisionTree*,allocator<TMVA::DecisionTree*> >fForestthe forest; TStringfForestTypeSforest generation: how the trees are generated; Double_tfGDErrScaleGD path: stop ; Int_tfGDNPathStepsGD path: number of steps; Double_tfGDPathEveFracGD path: fraction of subsamples used for the fitting; Double_tfGDPathStepGD path: step size in path; Double_tfGDTauGD path: def threshhold fraction [0..1]; Double_tfGDTauMaxGD path: max threshhold fraction [0..1]; Double_tfGDTauMinGD path: min th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__MethodRuleFit.html:16342,variab,variables,16342,root/html530/TMVA__MethodRuleFit.html,https://root.cern,https://root.cern/root/html530/TMVA__MethodRuleFit.html,10,['variab'],"['variable', 'variables']"
Modifiability,"ons(const TString& s); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; voidTMVA::Configurable::WriteOptionsToStream(ostream& o, const TString& prefix) const. protected:. virtual voidDeclareOptions(); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTMVA::Configurable::EnableLooseOptions(Bool_t b = kTRUE); const TString&TMVA::Configurable::GetReferenceFile() const; TMVA::MsgLogger&Log() const; Bool_tTMVA::Configurable::LooseOptionCheckingEnabled() const; voidTObject::MakeZombie(); voidTMVA::Configurable::ResetSetFlag(); voidTMVA::Configurable::WriteOptionsReferenceToFile(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__FitterBase.html:6335,Config,Configurable,6335,root/html602/TMVA__FitterBase.html,https://root.cern,https://root.cern/root/html602/TMVA__FitterBase.html,10,['Config'],['Configurable']
Modifiability,"ons); voidDrawPolyAverage(Option_t* options); voidDrawSlices(Option_t* options); voidDrawSlicesAverage(Option_t* options); Int_tFindTextAlign(Double_t theta); Double_tFindTextAngle(Double_t theta); voidInitArrays(Int_t newsize); voidInitVariables(Long64_t firstentry, Long64_t nentries); voidSetCurrentEntries(); voidSyncFormulas(); voidUpdateView(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width. private:. Bool_tfAngularLabelsTrue if the labels are oriented according to their axis.; Int_tfArraySizeActual size of the arrays.; Double_t*fAve[fNcols] Average value of each variable.; TPolyLine*fAveragePolyPolygon representing the average variables value.; TArc**fAverageSlices! Average slices.; TCanvas*fCanvas! Pointer to the mother pad.; Long64_t*fCurrentEntries![fNx*fNy] current selected entries;; Bool_tfDisplayAverageDisplay or not the average.; Long64_tfEntryPresent entry number in fTree.; Long64_tfFirstEntryFirst entry.; Bool_tfForceDimForce dimension.; TList*fFormulasList of all formulas to represent.; TList*fInputUsed for fSelector.; TTreeFormulaManager*fManagerCoordinator for the formulas.; Double_t*fMax[fNcols] Maximum value of the variables.; Double_t*fMin[fNcols] Minimum value of the variables.; UInt_tfNcolsNumber of variables.; Long64_tfNentriesNumber of entries.; UInt_tfNxNumber of horizontal spider plots.; UInt_tfNyNumber of vertical spider plots.; TGraphPolargram*fPolargramPolar graph.; TList*fPolyListPolygons representing the variables.; Bool_tfSegmentDisplayTrue if displaying a segment plot.; TTreeFormula*fSelectSelectio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TSpider.html:9398,variab,variable,9398,root/html530/TSpider.html,https://root.cern,https://root.cern/root/html530/TSpider.html,5,['variab'],['variable']
Modifiability,"ons, in 3 and 4 dimensions. The 3D space is used to describe the geometry vectors and points, while the 4D space-time is used for physics vectors representing relativistic particles. These 3D and 4D vectors are different from vectors of the linear algebra package, which describe generic N-dimensional vectors. Similar functionality is currently provided by the CLHEP and packages and the ROOT Physics vector classes (See “Physics Vectors”). It also re-uses concepts and ideas from the CMS Common Vector package. In contrast to CLHEP or the ROOT physics libraries, GenVector provides class templates for modeling the vectors. The user can control how the vector is internally represented. This is expressed by a choice of coordinate system, which is supplied as a template parameter when the vector is constructed. Furthermore, each coordinate system is itself a template, so that the user can specify the underlying scalar type.; The GenVector classes do not inherit from TObject, therefore cannot be used as in the case of the physics vector classes in ROOT collections.; In addition, to optimize performances, no virtual destructors are provided. In the following paragraphs, the main characteristics of GenVector are described. A more detailed description of all the GenVector classes is available also at http://seal.cern.ch/documents/mathlib/GenVector.pdf; 13.12.1 Main Characteristics; 13.12.1.1 Optimal Runtime Performances; We try to minimize any overhead in the run-time performance. We have deliberately avoided the use of any virtual function and even virtual destructors in the classes. In addition, as much as possible functions are defined as inline. For this reason, we have chosen to use template classes to implement the GenVector concepts instead of abstract or base classes and virtual functions. It is then recommended to avoid using the GenVector classes polymorphically and developing classes inheriting from them.; 13.12.1.2 Points and Vector Concept; Mathematically vectors an",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:719190,inherit,inherit,719190,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['inherit'],['inherit']
Modifiability,"ons. More...;  ; class  TNeuronInputSqSum;  TNeuron input calculator – calculates the squared weighted sum of inputs. More...;  ; class  TNeuronInputSum;  TNeuron input calculator – calculates the weighted sum of inputs. More...;  ; class  Tools;  Global auxiliary applications and data treatment routines. More...;  ; class  TrainingHistory;  Tracking data from training. More...;  ; class  TransformationHandler;  Class that contains all the data information. More...;  ; class  TreeInfo;  ; class  TSpline1;  Linear interpolation of TGraph. More...;  ; class  TSpline2;  Quadratic interpolation of TGraph. More...;  ; class  TSynapse;  Synapse class used by TMVA artificial neural network methods. More...;  ; struct  TTrainingSettings;  All of the options that can be specified in the training string. More...;  ; class  Types;  Singleton class for Global types used by TMVA. More...;  ; class  VariableDecorrTransform;  Linear interpolation class. More...;  ; class  VariableGaussTransform;  Gaussian Transformation of input variables. More...;  ; class  VariableIdentityTransform;  Linear interpolation class. More...;  ; class  VariableImportance;  ; class  VariableImportanceResult;  ; class  VariableInfo;  Class for type info of MVA input variable. More...;  ; class  VariableNormalizeTransform;  Linear interpolation class. More...;  ; class  VariablePCATransform;  Linear interpolation class. More...;  ; class  VariableRearrangeTransform;  Rearrangement of input variables. More...;  ; class  VariableTransformBase;  Linear interpolation class. More...;  ; class  VarTransformHandler;  ; class  Volume;  Volume for BinarySearchTree. More...;  . Functions; void ActionButton (TControlBar *cbar, const TString &title, const TString &macro, const TString &comment, const TString &buttonType, TString requiredKey="""");  ; void annconvergencetest (TString dataset, TDirectory *lhdir);  ; void annconvergencetest (TString dataset, TString fin=""TMVA.root"", Bool_t useTMVAStyle=kTRUE);  ; void BD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceTMVA.html:14358,variab,variables,14358,doc/master/namespaceTMVA.html,https://root.cern,https://root.cern/doc/master/namespaceTMVA.html,2,['variab'],['variables']
Modifiability,"ons.cxx:1509; TStreamerInfoActions::WriteTextStreamerInt_t WriteTextStreamer(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:283; TStreamerInfoActions::PopDataCacheInt_t PopDataCache(TBuffer &b, void *, const TConfiguration *)Definition TStreamerInfoActions.cxx:1534; TStreamerInfoActions::ReadSTLMemberWiseChangedClassvoid ReadSTLMemberWiseChangedClass(TBuffer &buf, void *addr, const TConfiguration *conf, Version_t vers)Definition TStreamerInfoActions.cxx:1266; TStreamerInfoActions::ReadSTLObjectWiseFastArrayV2void ReadSTLObjectWiseFastArrayV2(TBuffer &buf, void *addr, const TConfiguration *conf, Version_t vers, UInt_t start)Definition TStreamerInfoActions.cxx:1371; TStreamerInfoActions::ReadBasicType< BitsMarker >Int_t ReadBasicType< BitsMarker >(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:235; TStreamerInfoActions::ReadStreamerLoopInt_t ReadStreamerLoop(TBuffer &buf, void *addr, const TConfiguration *config)Direct copy of code from TStreamerInfo::WriteBufferAux, potentially can be used later for non-text st...Definition TStreamerInfoActions.cxx:638; TStreamerInfoActions::WriteTextBaseClassInt_t WriteTextBaseClass(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:275; TStreamerInfoActions::GenericWriteActionInt_t GenericWriteAction(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActions.cxx:198; TStreamerInfoActions::ReadArraySTLMemberWiseChangedClassvoid ReadArraySTLMemberWiseChangedClass(TBuffer &buf, void *addr, const TConfiguration *conf, Version_t vers)Definition TStreamerInfoActions.cxx:1310; TStreamerInfoActions::PopDataCacheVectorPtrInt_t PopDataCacheVectorPtr(TBuffer &b, void *, const void *, const TConfiguration *)Definition TStreamerInfoActions.cxx:1540; TStreamerInfoActions::ReadTextStreamerInt_t ReadTextStreamer(TBuffer &buf, void *addr, const TConfiguration *config)Definition TStreamerInfoActio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:254451,config,config,254451,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"ons:; class description; function members; data members; class charts. ROOT; » ROOFIT; » ROOFITCORE; » RooAbsProxy. class RooAbsProxy. RooAbsProxy is the abstact interface for proxy classes.; Proxy classes hold pointers to other Roofit objects ; and process serverRedirect changes so that the proxied; pointers are updated accordingly on a clone or copy of; of the owning class; . Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~RooAbsProxy(); static TClass*Class(); virtual TClass*IsA() const; virtual const char*name() const; const RooArgSet*nset() const; RooAbsProxy&operator=(const RooAbsProxy&); virtual voidprint(ostream& os, Bool_t addContents = kFALSE) const; virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). protected:. virtual voidchangeNormSet(const RooArgSet* newNormSet); virtual Bool_tchangePointer(const RooAbsCollection& newServerSet, Bool_t nameChange = kFALSE, Bool_t factoryInitMode = kFALSE). Data Members; protected:. RooArgSet*_nset! Normalization set to be used for evaluation of RooAbsPdf contents. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void changeNormSet(const RooArgSet* newNormSet); Destructor. void print(ostream& os, Bool_t addContents = kFALSE) const; Print proxy name. virtual ~RooAbsProxy(); Destructor. const char* name() const; Return name of proxy. const RooArgSet* nset() const; Return normalization set to be used for evaluation of contents. Bool_t changePointer(const RooAbsCollection& newServerSet, Bool_t nameChange = kFALSE, Bool_t factoryInitMode = kFALSE). » Last changed: Tue Mar 10 17:14:07 2015 » Last generated: 2015-03-10 17:14; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsProxy.html:1403,Inherit,Inheritance,1403,root/html534/RooAbsProxy.html,https://root.cern,https://root.cern/root/html534/RooAbsProxy.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ons; const TGWindow*TGWindow::fParentParent window; Int_tTGedFrame::fPrioritylocation in GedEditor; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFrameEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor of TFrame editor GUI. ~TFrameEditor(); Destructor of frame editor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Pick up the frame attributes. void DoBorderMode(); Slot connected to the border mode settings. void DoBorderSize(Int_t size); Slot connected to the border size settings. » Author: Ilka Antcheva 08/03/05 » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: root/ged:$Id$ » Last generated: 2015-03-13 19:24; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFrameEditor.html:20119,Inherit,Inheritance,20119,root/html534/TFrameEditor.html,https://root.cern,https://root.cern/root/html534/TFrameEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ons; double g (double x, double sigma) const;  . Private Attributes; bool _asymLeft = false;  ; bool _asymRight = false;  ; double _binWidth;  ; double * _dataPts = nullptr;  ; double * _dataWgts = nullptr;  ; double _hi;  ; double _lo;  ; double _lookupTable [_nPoints+1];  ; bool _mirrorLeft = false;  ; bool _mirrorRight = false;  ; Int_t _nEvents = 0;  ; double _rho;  ; double _sumWgt = 0.0;  ; Char_t _varName [128];  ; double * _weights = nullptr;  . Static Private Attributes; static constexpr int _nPoints {1000};  ; static const double _nSigma;  . Additional Inherited Members;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #incl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooKeysPdf.html:73923,inherit,inherited,73923,doc/master/classRooKeysPdf.html,https://root.cern,https://root.cern/doc/master/classRooKeysPdf.html,2,['inherit'],['inherited']
Modifiability,"ons; intROOT::Math::BaseIntegratorOptions::fIntegTypeIntegrator type (value converted from enum); unsigned intROOT::Math::BaseIntegratorOptions::fNCalls(max) funxtion calls; doubleROOT::Math::BaseIntegratorOptions::fRelTolerancerelative tolerance; unsigned intROOT::Math::BaseIntegratorOptions::fWKSizeworkspace size. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BaseIntegratorOptions & operator=(const ROOT::Math::IntegratorOneDimOptions& rhs); assignment operators. std::string Integrator() const; name of 1D integrator. IntegratorOneDimOptions(IOptions * extraOpts = 0); constructor using the default options; can pass a pointer to extra options (N.B. pointer will be managed by the class). virtual ~IntegratorOneDimOptions(); {}. IntegratorOneDimOptions(const IntegratorOneDimOptions & rhs); copy constructor. {}. void SetNPoints(unsigned int n); specific method for one-dim; set number of points rule; values of 1,2,3,4,5,6 corresponds to 15,21,31,41,51,61 and they are used in GSL adaptive; values > 6 corresponds to the actual points and they are used by teh GaussLegendre integrator. { fNCalls = n; }. unsigned int NPoints() const; maximum number of function calls. { return fNCalls; }. IntegrationOneDim::Type IntegratorType() const; type of the integrator (return the enumeration type). { return (IntegrationOneDim::Type) fIntegType; }. void SetIntegrator(const char* name); set 1D integrator name. void Print(ostream& os = std::cout) const; print all the options. void SetDefaultIntegrator(const char* name); static methods for setting and retrieving the default options. void SetDefaultAbsTolerance(double tol). void SetDefaultRelTolerance(double tol). void SetDefaultWKSize(unsigned int size). void SetDefaultNPoints(unsigned int n). std::string DefaultIntegrator(). IntegrationOneDim::Type DefaultIntegratorType(). double DefaultAbsTolerance(). double DefaultRelTolerance(). unsigned int DefaultWKSize(). unsigned int DefaultNPoints(). ROOT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__IntegratorOneDimOptions.html:3896,adapt,adaptive,3896,root/html602/ROOT__Math__IntegratorOneDimOptions.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__IntegratorOneDimOptions.html,4,['adapt'],['adaptive']
Modifiability,"ons; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TImagePlugin; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TImagePlugin; TString fExtension;  file extension ;  . #include <TASImagePlugin.h>. Inheritance diagram",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTASImagePlugin.html:9716,inherit,inherited,9716,doc/master/classTASImagePlugin.html,https://root.cern,https://root.cern/doc/master/classTASImagePlugin.html,1,['inherit'],['inherited']
Modifiability,"ons; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TMethodCall * fGetter;  ; Bool_t fInitialized;  ; TObject * fObject;  ; TMethodCall * fSetter;  ; Int_t * fTglVariable;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Attributes; Long_t fOffValue;  ; Long_t fOnValue;  ; Bool_t fState;  ; Longptr_t fValue;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTToggle.html:11950,inherit,inherited,11950,doc/master/classTToggle.html,https://root.cern,https://root.cern/doc/master/classTToggle.html,1,['inherit'],['inherited']
Modifiability,"ons; static bool isNull (const std::shared_ptr< xRooNode > &x);  ; static void SetAuxFunction (const char *title, const std::function< double(double, double, double)> &func, bool symmetrize=false);  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <RooFit/xRooFit/xRooNode.h>. Inheritance diagram for ROOT::Experimental::XRooFit::xRooNode:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ xRooNode() [1/14]. ROOT::Experimental::XRooFit::xRooNode::xRooNode ; (; const char * ; type, . const char * ; name, . const char * ; title = """" . ). ◆ xRooNode() [2/14]. template<typename T > . ROOT::Experimental::XRooFit::xRooNode::xRooNode ; (; const char * ; name, . const char * ; title . ). inlineprivate . Definition at line 75 of file xRooNode.h. ◆ xRooNode() [3/14]. xRooNode::xRooNode ; (; const char * ; name = """", . const std::shared_ptr< TObject > & ; comp = nullptr, . const std::shared_ptr< xRooNo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode.html:21903,inherit,inherited,21903,doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode.html,2,['inherit'],['inherited']
Modifiability,"ons;  TEvePolygonSetProjected (const char *n=""TEvePolygonSetProjected"", const char *t="""");  Constructor. ;  ;  ~TEvePolygonSetProjected () override;  Destructor. ;  ; void ComputeBBox () override;  Override of virtual method from TAttBBox. ;  ; void DumpBuffer3D ();  Dump information about currently projected buffer. ;  ; virtual void DumpPolys () const;  Dump information about built polygons. ;  ; TEveElement * GetProjectedAsElement () override;  Returns this projected dynamic-casted to TEveElement. ;  ; TClass * IsA () const override;  ; void ProjectBuffer3D ();  Project current buffer. ;  ; void SetProjection (TEveProjectionManager *mng, TEveProjectable *model) override;  This is virtual method from base-class TEveProjected. ;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UpdateProjection () override;  This is virtual method from base-class TEveProjected. ;  ;  Public Member Functions inherited from TEveShape;  TEveShape (const char *n=""TEveShape"", const char *t="""");  Constructor. ;  ;  ~TEveShape () override;  Destructor. ;  ; void CopyVizParams (const TEveElement *el) override;  Copy visualization parameters from element el. ;  ; virtual Bool_t GetDrawFrame () const;  ; virtual Color_t GetFillColor () const;  ; virtual Bool_t GetHighlightFrame () const;  ; virtual Color_t GetLineColor () const;  ; virtual Float_t GetLineWidth () const;  ; virtual Bool_t GetMiniFrame () const;  ; TClass * IsA () const override;  ; void Paint (Option_t *option="""") override;  Paint this object. Only direct rendering is supported. ;  ; virtual void SetDrawFrame (Bool_t f);  ; virtual void SetFillColor (Color_t c);  ; virtual void SetHighlightFrame (Bool_t f);  ; virtual void SetLineColor (Color_t c);  ; virtual void SetLineWidth (Float_t lw);  ; void SetMainColor (Color_t color) override;  Set main color. ;  ; virtual void SetMiniFrame (Bool_t r);  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuff",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEvePolygonSetProjected.html:1723,inherit,inherited,1723,doc/master/classTEvePolygonSetProjected.html,https://root.cern,https://root.cern/doc/master/classTEvePolygonSetProjected.html,1,['inherit'],['inherited']
Modifiability,"ons;  TGeoVGShape (TGeoShape *shape, vecgeom::cxx::VPlacedVolume *vgshape);  Default constructor. ;  . Static Private Member Functions; static vecgeom::cxx::VPlacedVolume * CreateVecGeomSolid (TGeoShape *shape);  Conversion method to create VecGeom solid corresponding to TGeoShape. ;  . Private Attributes; TGeoShape * fShape;  VecGeom placed solid. ;  ; vecgeom::cxx::VPlacedVolume * fVGShape;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg = (1ULL << ( 3 )); , kGeoVisX = (1ULL << ( 4 )); , kGeoVisY = (1ULL << ( 5 )); , ;   kGeoVisZ = (1ULL << ( 6 )); , kGeoRunTimeShape = (1ULL << ( 7 )); , kGeoInvalidShape = (1ULL << ( 8 )); , kGeoTorus = (1ULL << ( 9 )); , ;   kGeoBox = (1ULL << ( 10 )); , kGeoPara = (1ULL << ( 11 )); , kGeoSph = (1ULL << ( 12 )); , kGeoTube = (1ULL << ( 13 )); , ;   kGeoTubeSeg = (1ULL << ( 14 )); , kGeoCone = (1ULL << ( 15 )); , kGeoConeSeg = (1ULL << ( 16 )); , kGeoPcon = (1ULL << ( 17 )); , ;   kGeoPgon = (1ULL << ( 18 )); , kGeoArb8 = (1ULL << ( 19 )); , kGeoEltu = (1ULL << ( 20 )); , kGeoTrap = (1ULL << ( 21 )); , ;   kGeoCtub = (1ULL << ( 22 )); , kGeoTrd1 = (1ULL << ( 23 )); , kGeoTrd2 = (1ULL << ( 24 )); , kGeoComb = (1ULL << ( 25 )); , ;   kGeoClosedShape = (1ULL << ( 26 )); , kGeoXtru = (1ULL << ( 27 )); , kGeoParaboloid = (1ULL << ( 28 )); , kGeoHalfSpace = (1ULL << ( 29 )); , ;   kGeoHype = (1ULL << ( 30 )); , kGeoSavePrimitive = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoVGShape.html:19265,inherit,inherited,19265,doc/master/classTGeoVGShape.html,https://root.cern,https://root.cern/doc/master/classTGeoVGShape.html,1,['inherit'],['inherited']
Modifiability,"ons;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGColorDialog (const TGColorDialog &)=delete;  ; TGColorDialog & operator= (const TGColorDialog &)=delete;  . Additional Inherited Members;  Public Types inherited from TGTransientFrame; enum  EPlacement { ;   kCenter; , kLeft; , kRight; , kTop; , ;   kBottom; , kTopLeft; , kTopRight; , kBottomLeft; , ;   kBottomRight. };  ;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGColorDialog.html:34856,inherit,inherited,34856,doc/master/classTGColorDialog.html,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html,1,['inherit'],['inherited']
Modifiability,"onsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& i); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidReset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EAnalysisType type); voidTMVA::MethodBase::SetBaseDir(TDirectory* methodDir); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTMVA::MethodBase::SetCurrentEvent(Long64_t ievt) const; virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::MethodBase::SetMethodBaseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodPDEFoam.html:11374,Config,Configurable,11374,root/html532/TMVA__MethodPDEFoam.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodPDEFoam.html,1,['Config'],['Configurable']
Modifiability,"onsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& i); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidReset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EAnalysisType type); voidTMVA::MethodBase::SetBaseDir(TDirectory* methodDir); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::MethodBase::SetMethodBaseDir(TDirectory* methodDir); voidTMVA::MethodBase::SetMethodDir(TDirectory* methodDir); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidTMVA::MethodBase::SetSignalReferenceCut(Double_t cut); voidTMVA::MethodBase::SetSignalReferenceCutOrientation(Double_t cutOrientation); voidTMVA::MethodBase::SetTestTime(Double_t testTime); voidTMVA::MethodBase::SetTestvarName(const TString& v = """"); voidTMVA::MethodBase::SetTrainTime(Double_t trainTime); virtual voidTMVA::MethodBase::SetTuneParameters(map<TString,Double_t> tuneParameters); virtual voidTObject::SetUniqueID(UInt_t uid); voidTMVA::MethodBase::SetupMethod(); virtual voidShowMembers(TMemberInsp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__MethodPDEFoam.html:11462,Config,Configurable,11462,root/html534/TMVA__MethodPDEFoam.html,https://root.cern,https://root.cern/root/html534/TMVA__MethodPDEFoam.html,3,['Config'],['Configurable']
Modifiability,"onsInvisible; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TRotMatrix*fMatrixPointer to rotation matrix; TStringTNamed::fNameobject identifier; TList*fNodesList of son nodes (if any); TStringfOptionList of options if any; TNode*fParentPointer to parent positioned volume; TShape*fShapePointer to shape definition; TStringTNamed::fTitleobject title; Int_tfVisibilityVisibility flag; Double_tfXX offset with respect to parent object; Double_tfYY offset with respect to parent object; Double_tfZZ offset with respect to parent object. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TNode(); Node default constructor. TNode(const char* name, const char* title, const char* shapename, Double_t x = 0, Double_t y = 0, Double_t z = 0, const char* matrixname = """", Option_t* option = """"); Node normal constructor. name is the name of the node; title is title; shapename is the name of the referenced shape; x,y,z are the offsets of the volume with respect to his mother; matrixname is the name of the rotation matrix. This new node is added into the list of sons of the current node. TNode(const char* name, const char* title, TShape* shape, Double_t x = 0, Double_t y = 0, Double_t z = 0, TRotMatrix* matrix = 0, Option_t* option = """"); Node normal constructor. name is the name of the node; title is title; shape is the pointer to the shape definition; x,y,z are the offsets of the volume with respect to his mother; matrix is the pointer to the rotation matrix. This new node is added into the list of sons of the current node. TNode",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TNode.html:8896,Inherit,Inheritance,8896,root/html532/TNode.html,https://root.cern,https://root.cern/root/html532/TNode.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onse matrix ;  ; Bool_t fToyMode;  ! Internal switch for covariance matrix propagation ;  ; Bool_t fMatToyMode;  ! Internal switch for evaluation of statistical uncertainties from response matrix ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TSVDUnfold.h>. Inheritance diagram for TSVDUnfold:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSVDUnfold() [1/3]. TSVDUnfold::TSVDUnfold ; (; const TH1D * ; bdat, . const TH1D * ; bini, . const TH1D * ; xini, . const TH2D * ; Adet . ). Alternative constructor User provides data and MC test spectra, as well as detector response matrix, diagonal covariance matrix of measured spectrum built from the uncertainties on measured spectrum. ; Definition at line 75 of file TSVDUnfold.cxx. ◆ TSVDUnfold() [2/3]. TSVDUnfold::TSVDUnfold ; (; const TH1D * ; bdat, . TH2D * ; Bcov, . const TH1D * ; bini, . const TH1D * ; xini, . const TH2D * ; Adet . ). Default constructor Initialisation of TSVDUnfold User provides data and MC test sp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSVDUnfold.html:17190,inherit,inherited,17190,doc/master/classTSVDUnfold.html,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html,2,['inherit'],['inherited']
Modifiability,onsible for having previously correctly initialized with TUnuran::Init; 197 */; 198 double Sample();; 199 ; 200 /**; 201 Sample multidimensional distributions.; 202 User is responsible for having previously correctly initialized with TUnuran::Init; 203 */; 204 bool SampleMulti(double * x);; 205 ; 206 /**; 207 Sample discrete distributions.; 208 User is responsible for having previously correctly initialized with TUnuran::Init; 209 */; 210 int SampleDiscr();; 211 ; 212 /**; 213 Set the random engine.; 214 Must be called before init to have effect; 215 */; 216 void SetRandom(TRandom * r) {; 217 fRng = r;; 218 }; 219 ; 220 /**; 221 Return instance of the random engine used.; 222 */; 223 TRandom * GetRandom() {; 224 return fRng;; 225 }; 226 ; 227 /**; 228 Return an information string about the used Unuran generator method.; 229 @param extended : if true return some helper information about the existing options of the method.; 230 */; 231 std::string GetInfo(bool extended = false);; 232 ; 233 /**; 234 Return an ID string about the unuran generator method.; 235 */; 236 std::string GetGenId() const;; 237 ; 238 /**; 239 Return the dimension of unuran generator method.; 240 For 1D method returns 1 and for the multi-dimensional case; 241 must be equal to the distribution dimension.; 242 */; 243 int GetDimension() const;; 244 ; 245 /**; 246 Return the type of the distribution.; 247 See documentation of `unuran_distr_get_type` for the possible; 248 types of distributions.; 249 */; 250 int GetDistType() const;; 251 ; 252 /// Return true for a univariate continuous distribution.; 253 bool IsDistCont() const;; 254 /// Return true for a multivariate continuous distribution.; 255 bool IsDistMultiCont() const;; 256 /// Return true for a discrete distribution.; 257 bool IsDistDiscrete() const;; 258 /// Return true for an empirical distribution.; 259 bool IsDistEmpirical() const;; 260 ; 261 ; 262 ; 263 /**; 264 set the seed for the random number generator; 265 */; 266 void SetSeed(unsi,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnuran_8h_source.html:9292,extend,extended,9292,doc/master/TUnuran_8h_source.html,https://root.cern,https://root.cern/doc/master/TUnuran_8h_source.html,1,['extend'],['extended']
Modifiability,"onsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TVirtualPS; char * fBuffer {nullptr};  ; const char * fImplicitCREsc {nullptr};  ; Int_t fLenBuffer {0};  ; Int_t fNByte {0};  ; Bool_t fPrinted {kFALSE};  ; Int_t fSizBuffer {0};  ; std::ofstream * fStream {nullptr};  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  ;  Protected Attributes inherited from TAttText; Short_t fTextAlign;  Text alignment. ;  ; Float_t fTextAngle;  Text angle. ;  ; Color_t fTextColor;  Text color. ;  ; Font_t fTextFont;  Text font. ;  ; Float_t fTextSize;  Text size. ;  . #include <TWebPS.h>. Inheritance diagram for TWebPS:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Mem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebPS.html:20835,inherit,inherited,20835,doc/master/classTWebPS.html,https://root.cern,https://root.cern/doc/master/classTWebPS.html,3,['inherit'],['inherited']
Modifiability,"onst Double_t *dirs, Double_t *dists, Int_t vecsize, Double_t *step) const override;  ; virtual Double_t GetDX () const;  ; virtual Double_t GetDY () const;  ; virtual Double_t GetDZ () const;  ; virtual Double_t GetFacetArea (Int_t index=0) const;  ; virtual const Double_t * GetOrigin () const;  ; virtual Bool_t GetPointsOnFacet (Int_t index, Int_t npoints, Double_t *array) const;  ; TClass * IsA () const override;  ; virtual Bool_t IsNullBox () const;  ; void Safety_v (const Double_t *points, const Bool_t *inside, Double_t *safe, Int_t vecsize) const override;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBoxDimensions (Double_t dx, Double_t dy, Double_t dz, Double_t *origin=nullptr);  ; void SetBoxPoints (Double_t *points) const;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGeoShape;  TGeoShape ();  Default constructor. ;  ;  TGeoShape (const char *name);  Default constructor. ;  ;  ~TGeoShape () override;  Destructor. ;  ; virtual void AfterStreamer ();  ; void CheckShape (Int_t testNo, Int_t nsamples=10000, Option_t *option="""");  Test for shape navigation methods. ;  ; virtual void ClearThreadData () const;  ; virtual void CreateThreadData (Int_t);  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute mouse actions on this shape. ;  ; Int_t GetId () const;  ; const char * GetPointerName () const;  Provide a pointer name containing uid. ;  ; void InvertShapeBit (UInt_t f);  ; TClass * IsA () const override;  ; Bool_t IsRunTimeShape () const;  ; Bool_t IsValid () const;  ; void ResetShapeBit (UInt_t f);  ; void SetId (Int_t id);  ; void SetRuntime (Bool_t flag=kTRUE);  ; void SetShapeBit (UInt_t f);  ; void SetShapeBit (UInt_t f, Bool_t set);  Equivalent of TObject::SetBit. ;  ; Int_t ShapeDistancetoPri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoVGShape.html:5047,inherit,inherited,5047,doc/master/classTGeoVGShape.html,https://root.cern,https://root.cern/doc/master/classTGeoVGShape.html,1,['inherit'],['inherited']
Modifiability,"onst Event_t& event, const TGLCamera& camera); virtual TClass*IsA() const; virtual Bool_tTGLManip::Select(const TGLCamera&, const TGLRect&, const TGLBoundingBox&); voidTGLManip::SetActive(Bool_t a); voidTGLManip::SetSelectedWidget(UInt_t s); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). protected:. voidTGLManip::CalcDrawScale(const TGLBoundingBox& box, const TGLCamera& camera, Double_t& base, TGLVector3* axis) const; const UChar_t*TGLManip::ColorFor(UInt_t widget) const; TGLManip&TGLManip::operator=(const TGLManip&). Data Members; protected:. Bool_tTGLManip::fActive! manipulator is active?; TPointTGLManip::fFirstMouse! first (start) mouse position (in WINDOW coords); TPointTGLManip::fLastMouse! last (latest) mouse position (in WINDOW coords); UInt_tTGLManip::fSelectedWidget! active width (axis) component; TGLPhysicalShape*TGLManip::fShape! manipulated shape. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLTransManip(); Construct translation manipulator not bound to any physical shape. TGLTransManip(TGLPhysicalShape* shape); Construct translation manipulator, attached to supplied TGLViewer; 'viewer', bound to TGLPhysicalShape 'shape'. ~TGLTransManip(); Destory the translation manipulator. void Draw(const TGLCamera& camera) const; Draw translation manipulator - tubes with arrow heads, in local axes of; attached shape, in red(X), green(Y) and blue(Z), with white center sphere.; If selected widget (mouse over) this is drawn in active colour (yellow). Bool_t HandleMotion(const Event_t& event, const TGLCamera& camera); Handle mouse motion over manipulator - if active (selected; widget) translate physical along selected widget (axis) of the; manipulator, so it tracks mouse action. Returns kTRUE if redraw; required kFALSE otherwise. TGLTransManip(). » Author: Richard Maunder 16/09/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGLTransManip.html:2060,Inherit,Inheritance,2060,root/html534/TGLTransManip.html,https://root.cern,https://root.cern/root/html534/TGLTransManip.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst LValue_t *) const;  Return l-value pointer to contents. ;  ; const LValue_t * lvptr (const RooAbsArg *) const;  Return l-value pointer to contents. ;  ; LValue_t * lvptr (LValue_t *);  Return l-value pointer to contents. ;  ; LValue_t * lvptr (RooAbsArg *);  Return l-value pointer to contents. ;  ; template<typename Bool = bool, typename = std::enable_if_t<std::is_same<Bool,bool>::value>> ;  R__DEPRECATED (6, 36, ""Use RooTemplateProxy(const char*, const char*, RooAbsArg*, bool, bool) and transfer the ownership with RooTemplateProxy::putOwnedArg()."") RooTemplateProxy(const char *theName;  Constructor with owner. ;  ; T::value_type retrieveValue (const RooAbsCategory &cat) const;  Retrieve index state from a category. ;  ; T::value_type retrieveValue (const RooAbsReal &real) const;  Retrieve value from a real-valued object. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooArgProxy;  RooArgProxy ()=default;  Default constructor. ;  ;  RooArgProxy (const char *name, const char *desc, RooAbsArg *owner, bool valueServer, bool shapeServer, bool proxyOwnsArg=false);  Constructor with owner and proxied variable. ;  ;  RooArgProxy (const char *name, const char *desc, RooAbsArg *owner, RooAbsArg &arg, bool valueServer, bool shapeServer, bool proxyOwnsArg=false);  Constructor with owner and proxied variable. ;  ;  RooArgProxy (const char *name, RooAbsArg *owner, const RooArgProxy &other);  Copy constructor. ;  ;  RooArgProxy (RooArgProxy &&other)=delete;  ;  RooArgProxy (RooArgProxy const &other)=delete;  ;  ~RooArgProxy () override;  Destructor. ;  ; RooAbsArg * absArg () const;  Return pointer to contained argument. ;  ; bool isShapeServer () const;  Returns true if contents is shape server of owner. ;  ; bool isValueServer () const;  Returns true of contents is value server of owner. ;  ; const char * name () const override;  Retur",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooTemplateProxy.html:6904,inherit,inherited,6904,doc/master/classRooTemplateProxy.html,https://root.cern,https://root.cern/doc/master/classRooTemplateProxy.html,1,['inherit'],['inherited']
Modifiability,"onst ParamSet &params);  retrieve a set of couplings (-?-) ;  ; void setParameters (const RooArgList *list);  set the morphing parameters to those supplied in the list with the given name ;  ; void setParameters (TH1 *paramhist);  set the morphing parameters to those supplied in the given param hist ;  ; void setScale (double val);  set energy scale of the EFT expansion ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool updateCoefficients ();  Retrieve the new physics objects and update the weights in the morphing function. ;  ; bool useCoefficients (const char *filename);  ; bool useCoefficients (const TMatrixD &inverse);  setup the morphing function with a predefined inverse matrix call this function before any other after creating the object ;  ; bool writeCoefficients (const char *filename);  write the inverse matrix to a file ;  ; void writeMatrixToFile (const TMatrixD &matrix, const char *fname);  write a matrix to a file ;  ; void writeMatrixToStream (const TMatrixD &matrix, std::ostream &stream);  write a matrix to a stream ;  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (const char *name, const char *title, double minVal, double maxVal, const char *unit="""");  Constructor with plot range and unit label. ;  ;  RooAbsReal (const RooAbsReal &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooAbsReal () override;  Destructor. ;  ; virtual double analyticalIntegral (Int_t code, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; TF1 * asTF (const RooArgList &obs, const RooArgList &pars=RooArgList(), const RooArgSet &nset=RooArgSet()) const;  Return a ROOT TF1,2,3 object bound to this RooAbsRe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLagrangianMorphFunc.html:13408,inherit,inherited,13408,doc/master/classRooLagrangianMorphFunc.html,https://root.cern,https://root.cern/doc/master/classRooLagrangianMorphFunc.html,1,['inherit'],['inherited']
Modifiability,"onst ROOT::Math::IMultiGradFunction & func); set gradient the function to minimize. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set free variable. bool SetFixedVariable(unsigned int , const string& , double ); set fixed variable (override if minimizer supports them ). bool SetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); set lower limit variable (override if minimizer supports them ). bool SetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); set upper limit variable (override if minimizer supports them ). bool SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double , double ); set upper/lower limited variable (override if minimizer supports them ). bool SetVariableValue(unsigned int ivar, double val); set the value of an existing variable. bool SetVariableValues(const double* x); set the values of all existing variables (array must be dimensioned to the size of the existing parameters). bool Minimize(); method to perform the minimization. double MinValue() const; return minimum function value. { return fMinVal; }. double Edm() const; return expected distance reached from the minimum. const double * X() const; return pointer to X values at the minimum. { return &fValues.front(); }. const double * MinGradient() const; return pointer to gradient values at the minimum. { return 0; }. unsigned int NCalls() const; number of function calls to reach the minimum. { return 0; }. unsigned int NDim() const; this is <= Function().NDim() which is the total; number of variables (free+ constrained ones). { return fDim; }. unsigned int NFree() const; number of free variables (real dimension of the problem); this is <= Function().NDim() which is the total. { return fDim; }. bool ProvidesError() const; minimizer provides error and error matrix. { return false; }. const double * Errors() const; return errors at t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__GSLSimAnMinimizer.html:6395,variab,variables,6395,root/html526/ROOT__Math__GSLSimAnMinimizer.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__GSLSimAnMinimizer.html,1,['variab'],['variables']
Modifiability,"onst RooAbsArg *, std::pair< std::string, std::list< EvalError > > > _evalErrorList;  ; static ErrorLoggingMode _evalErrorMode = RooAbsReal::PrintErrors;  ; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . Additional Inherited Members;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; typedef std::map< constRooAbsArg *, std::pair< std::string, std::list< EvalError > > >::const_iterator EvalErrorIter;  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooRealSumFunc.html:52449,inherit,inherited,52449,doc/v632/classRooRealSumFunc.html,https://root.cern,https://root.cern/doc/v632/classRooRealSumFunc.html,3,['inherit'],['inherited']
Modifiability,"onst RooAbsArg *source);  Force element to re-evaluate itself when a value is requested. ;  ; void unRegisterProxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooSetProxy _cacheObs;  Variables to be cached. ;  ; bool _cacheSource;  Keep an attached clone of the source in the cache for fast operation. ;  ; bool _useCdfBoundaries;  Are c.d.f boundary conditions used by the RooHistFuncs? ;  ; RooRealProxy func;  Proxy to function being cached. ;  ;  Protected Attributes inherited from RooAbsCachedReal; std::map< Int_t, std::pair< const RooArgSet *, const RooArgSet * > > _anaIntMap;  ! Map for analytical integration codes ;  ; RooObjCacheManager _cacheMgr;  ! The cache manager ;  ; Int_t _ipOrder;  Interpolation order for cache histograms. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _bool",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCachedReal.html:57676,inherit,inherited,57676,doc/master/classRooCachedReal.html,https://root.cern,https://root.cern/doc/master/classRooCachedReal.html,1,['inherit'],['inherited']
Modifiability,"onst RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidsetBufferFraction(Double_t frac); voidsetBufferStrategy(RooFFTConvPdf::BufStrat bs); static voidRooAbsReal::setCacheCheck(Bool_t flag); voidsetCacheObservables(const RooArgSet& obs); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidRooAbsCachedPdf::setInterpolationOrder(Int_t order); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); voidRooAbsPdf::setNormValueCaching(Int_t minNumIntDim, Int_t ipOrder = 2); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidsetShift(Double_t val1, Double_t val2); voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetU",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooFFTConvPdf.html:32626,config,config,32626,root/html530/RooFFTConvPdf.html,https://root.cern,https://root.cern/root/html530/RooFFTConvPdf.html,3,['config'],['config']
Modifiability,"onst RooAbsReal& offset, const char* unit = """"); Constructor with RooAbsRealLValue variable and RooAbsReal slope and offset. RooLinearVar(const RooLinearVar& other, const char* name = 0); Copy constructor. ~RooLinearVar(); Destructor. Double_t evaluate() const; Calculate current value of this object. void setVal(Double_t value); Assign given value to linear transformation: sets input variable to (value-offset)/slope; If slope is zerom an error message is printed and no assignment is made. Bool_t isJacobianOK(const RooArgSet& depList) const; Returns true if Jacobian term associated with current; expression tree is indeed constant. Double_t jacobian() const; Return value of Jacobian associated with the transformation. Bool_t readFromStream(istream& is, Bool_t compact, Bool_t verbose = kFALSE); Read object contents from stream. void writeToStream(ostream& os, Bool_t compact) const; Write object contents to stream. RooAbsBinning& getBinning(const char* name = 0, Bool_t verbose = kTRUE, Bool_t createOnTheFly = kFALSE); Retrieve binning of this linear transformation. A RooLinearVar does not have its own; binnings but uses linearly transformed binnings of teh input variable. If a given; binning exists on the input variable, it will also exists on this linear transformation; and a binning adaptor object is created on the fly. const RooAbsBinning& getBinning(const char* name = 0, Bool_t verbose = kTRUE, Bool_t createOnTheFly = kFALSE) const; Const version of getBinning(). Bool_t hasBinning(const char* name) const; Returns true if binning with given name exists.If a given binning; exists on the input variable, it will also exists on this linear; transformation. TObject* clone(const char* newname) const; { return new RooLinearVar(*this,newname); }. » Last changed: Thu Sep 23 20:00:02 2010 » Last generated: 2010-09-23 20:00; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooLinearVar.html:38947,variab,variable,38947,root/html528/RooLinearVar.html,https://root.cern,https://root.cern/root/html528/RooLinearVar.html,4,"['adapt', 'variab']","['adaptor', 'variable']"
Modifiability,"onst RooArgSet &obs, RooArgSet &orderedObs) const;  Interface method for function objects to indicate their preferred order of observables for scanning their values into a (multi-dimensional) histogram or RooDataSet. ;  ; void printValue (std::ostream &os) const override;  Print object value. ;  ; bool readFromStream (std::istream &is, bool compact, bool verbose=false) override;  Read object contents from stream (dummy for now) ;  ; void selectComp (bool flag);  ; void setCachedValue (double value, bool notifyClients=true) final;  Overwrite the value stored in this object's cache. ;  ; virtual bool setData (RooAbsData &, bool=true);  ; void setIntegratorConfig ();  Remove the specialized numeric integration configuration associated with this object. ;  ; void setIntegratorConfig (const RooNumIntConfig &config);  Set the given integrator configuration as default numeric integration configuration for this object. ;  ; void setParameterizeIntegral (const RooArgSet &paramVars);  ; void setPlotLabel (const char *label);  Set the label associated with this variable. ;  ; void setUnit (const char *unit);  ; RooAbsMoment * sigma (RooRealVar &obs);  ; RooAbsMoment * sigma (RooRealVar &obs, const RooArgSet &nset);  ; RooNumIntConfig * specialIntegratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumIntConfig * specialIntegratorConfig (bool createOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void writeToStream (std::ostream &os, bool compact) const override;  Write object contents to stream (dummy for now) ;  ;  Public Member Functions inherited from RooAbsArg;  RooAbsArg ();  Default constructor. ;  ;  RooAbsArg (const char *name, const char *title);  Create an object with the specified name and descriptive title. ;  ;  RooAbsArg (const RooAbsArg &other, const char *name=nullptr);  Copy constructor transfers all boolean a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooGaussModel.html:29531,variab,variable,29531,doc/master/classRooGaussModel.html,https://root.cern,https://root.cern/doc/master/classRooGaussModel.html,6,['variab'],['variable']
Modifiability,"onst RooArgSet *nset=nullptr) const override;  Return value of variable. ;  ; bool hasAsymError (bool allowZero=true) const;  ; bool hasBinning (const char *name) const override;  Returns true if variable has a binning named 'name'. ;  ; bool hasError (bool allowZero=true) const;  ; TClass * IsA () const override;  ; bool isDerived () const override;  Does value or shape of this arg depend on any other arg? ;  ; bool isFundamental () const override;  Is this object a fundamental type that can be added to a dataset? Fundamental-type subclasses override this method to return true. ;  ; virtual RooAbsArg & operator= (double newValue);  Assignment operator from a double. ;  ; void printExtras (std::ostream &os) const override;  Print extras of variable: (asymmetric) error, constant flag, limits and binning. ;  ; void printMultiline (std::ostream &os, Int_t contents, bool verbose=false, TString indent="""") const override;  Detailed printing interface. ;  ; void printValue (std::ostream &os) const override;  Print value of variable. ;  ; bool readFromStream (std::istream &is, bool compact, bool verbose=false) override;  Read object contents from given stream. ;  ; void removeAsymError ();  ; void removeError ();  ; void removeMax (const char *name=nullptr);  Remove upper range limit for binning with given name. Empty name means default range. ;  ; void removeMin (const char *name=nullptr);  Remove lower range limit for binning with given name. Empty name means default range. ;  ; void removeRange (const char *name=nullptr);  Remove range limits for binning with given name. Empty name means default range. ;  ; void setAsymError (double lo, double hi);  ; void setBinning (const RooAbsBinning &binning, const char *name=nullptr);  Add given binning under name 'name' with this variable. ;  ; void setBins (Int_t nBins, const char *name=nullptr);  Create a uniform binning under name 'name' for this variable. ;  ; void setError (double value);  ; void setMax (const char *name, dou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealVar.html:3831,variab,variable,3831,doc/master/classRooRealVar.html,https://root.cern,https://root.cern/doc/master/classRooRealVar.html,1,['variab'],['variable']
Modifiability,"onst RooArgSet * ; nset); const. virtual . Return expected number of events to be used in calculation of extended likelihood. ; Return expected number of events from this p.d.f for use in extended likelihood calculations.; This default implementation returns zero ; Reimplemented in RooNormalizedPdf, RooFixedProdPdf, RooAddModel, RooAddPdf, RooBinSamplingPdf, RooExtendedTerm, RooExtendPdf, RooProdPdf, RooProjectedPdf, RooRealSumPdf, RooSimultaneous, and xRooProjectedPdf.; Definition at line 2398 of file RooAbsPdf.cxx. ◆ extendedTerm() [1/3]. double RooAbsPdf::extendedTerm ; (; double ; sumEntries, . double ; expected, . double ; sumEntriesW2 = 0.0, . bool ; doOffset = false . ); const. Definition at line 730 of file RooAbsPdf.cxx. ◆ extendedTerm() [2/3]. double RooAbsPdf::extendedTerm ; (; double ; sumEntries, . RooArgSet const * ; nset, . double ; sumEntriesW2 = 0.0, . bool ; doOffset = false . ); const. Return the extended likelihood term ( \( N_\mathrm{expect} - N_\mathrm{observed} \cdot \log(N_\mathrm{expect} \)) of this PDF for the given number of observed events. ; For successful operation, the PDF implementation must indicate that it is extendable by overloading canBeExtended(), and must implement the expectedEvents() function.; Parameters. [in]sumEntriesThe number of observed events. ; [in]nsetThe normalization set when asking the pdf for the expected number of events. ; [in]observedSumW2The number of observed events when weighting with squared weights. If non-zero, the weight-squared error correction is applied to the extended term. ; [in]doOffsetOffset the extended term by a counterterm where the expected number of events equals the observed number of events. This constant shift results in a term closer to zero that is approximately chi-square distributed. It is useful to do this also when summing multiple NLL terms to avoid numeric precision loss that happens if you sum multiple terms of different orders of magnitude. The weight-squared error correction wor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsPdf.html:99192,extend,extended,99192,doc/master/classRooAbsPdf.html,https://root.cern,https://root.cern/doc/master/classRooAbsPdf.html,1,['extend'],['extended']
Modifiability,"onst RooArgSet& coord) const; static RooAbsData::StorageTypeRooAbsData::getDefaultStorageType(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; Int_tgetIndex(const RooArgSet& coord, Bool_t fast = kFALSE); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Bool_tRooAbsData::getRange(RooRealVar& var, Double_t& lowest, Double_t& highest, Double_t marginFrac = 0, Bool_t symMode = kFALSE) const; RooAbsData*RooAbsData::getSimData(const char* idxstate); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsData::hasFilledCache() const; virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tisNonPoissonWeighted() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tisWeighted() const; Bool_tTObject::IsZombie() const; Double_tRooAbsData::kurtosis(RooRealVar& var, const char* cutSpec = 0, const char* cutRange = 0) const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Double_tRooAbsData::mean(RooRealVar& var, const char* cutSpec = 0, const char* cutRange = 0) const; RooRealVar*RooAbsData::meanVar(RooRealVar& var, const char* cutSpec = 0, const char* cutRange = 0) const; Double_tRooAbsData::moment(RooRealVar& var, Double_t order, const char* cutSpec = 0, const char* cut",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooDataHist.html:6779,Inherit,InheritsFrom,6779,root/html534/RooDataHist.html,https://root.cern,https://root.cern/root/html534/RooDataHist.html,3,['Inherit'],['InheritsFrom']
Modifiability,"onst RooArgSet* nset = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; static RooFormulaVar*identity(); RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidRooAbsPdf::initGenerator(Int_t code); virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; Int_tRooAbsPdf::intOrderNormValueCaching() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tisBasisSupported(const char* name) const; virtual Bool_tRooAbsReal::isBinnedDistribution(const RooArgSet&) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; Bool_tisConvolved(); virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tRooAbsPdf::isDirectGenSafe(const RooAbsArg& arg) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsArg::isLValue() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooResolutionModel.html:20554,Inherit,InheritsFrom,20554,root/html532/RooResolutionModel.html,https://root.cern,https://root.cern/root/html532/RooResolutionModel.html,1,['Inherit'],['InheritsFrom']
Modifiability,"onst RooBinnedGenContext& other); virtual RooDataSet*RooAbsGenContext::createDataSet(const char* name, const char* title, const RooArgSet& obs); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual voidgenerateEvent(RooArgSet& theEvent, Int_t remaining); virtual voidinitGenerator(const RooArgSet& theEvent); voidTObject::MakeZombie(); voidRooAbsGenContext::resampleData(Double_t& ratio). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. Bool_t_expectedDataAsimov?; UInt_tRooAbsGenContext::_expectedEventsNumber of expected events from extended p.d.f; RooAbsPdf::ExtendModeRooAbsGenContext::_extendModeExtended mode capabilities of p.d.f.; RooDataSet*RooAbsGenContext::_genData! Data being generated; RooDataHist*_histHistogram ; Bool_tRooAbsGenContext::_isValidIs context in valid state?; static Int_tRooPrintable::_nameLength; Int_tRooAbsGenContext::_nextProtoIndexNext prototype event to load according to LUT; TStringRooAbsGenContext::_normRangeNormalization range of pdf; RooAbsPdf*_pdfPointer to cloned p.d.f; RooArgSet*_pdfSetSet owned all nodes of internal clone of p.d.f; Int_t*RooAbsGenContext::_protoOrderLUT with traversal order of prototype data; RooArgSetRooAbsGenContext::_protoVarsPrototype observables; const RooDataSet*RooAbsGenContext::_prototypePointer to prototype dataset; RooArgSet*RooAbsGenContext::_theEventPointer to observable event being generated; const RooArgSet*_vars; Bool_tRooAbsGenContext::_verboseVerbose messaging?; TStringTNamed::fNameobject identifier; T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooBinnedGenContext.html:7653,extend,extended,7653,root/html532/RooBinnedGenContext.html,https://root.cern,https://root.cern/root/html532/RooBinnedGenContext.html,3,['extend'],['extended']
Modifiability,"onst T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Private Attributes; TProofPlayer * fPlayer;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TTimer; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void SingleShot (Int_t milliSec, const char *receiver_class, void *receiver, const char *method);  This static function calls a slot after a given time interval. ;  ;  Static Public Member Functions inherited from TSysEvtH",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDispatchTimer.html:12409,inherit,inherited,12409,doc/master/classTDispatchTimer.html,https://root.cern,https://root.cern/doc/master/classTDispatchTimer.html,2,['inherit'],['inherited']
Modifiability,"onst T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Private Attributes; TProofServLite * fServ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TSignalHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TSysEvtHandler; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  St",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html:11272,inherit,inherited,11272,doc/master/classTProofServLiteInterruptHandler.html,https://root.cern,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html,4,['inherit'],['inherited']
Modifiability,"onst T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;  ; TList * GetListOfSignals () const;  ; virtual Bool_t HasConnection (const char *signal_name) const;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Protected Member Functions; virtual void MakeTitle (const char *title);  Create attribute frame title. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * Get",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGedFrame.html:22120,inherit,inherited,22120,doc/master/classTGedFrame.html,https://root.cern,https://root.cern/doc/master/classTGedFrame.html,1,['inherit'],['inherited']
Modifiability,"onst TComplex& c); TComplex&operator=(const TComplex&); static TComplexPower(const TComplex& x, const TComplex& y); static TComplexPower(const TComplex& x, Double_t y); static TComplexPower(Double_t x, const TComplex& y); static TComplexPower(const TComplex& x, Int_t y); static TComplexRange(const TComplex& lb, const TComplex& ub, const TComplex& c); Double_tRe() const; Double_tRho() const; Double_tRho2() const; virtual voidShowMembers(TMemberInspector& insp) const; static TComplexSin(const TComplex& c); static TComplexSinH(const TComplex& c); static TComplexSqrt(const TComplex& c); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); static TComplexTan(const TComplex& c); static TComplexTanH(const TComplex& c); TComplex(); TComplex(const TComplex&); TComplex(Double_t re, Double_t im = 0, Bool_t polar = kFALSE); Double_tTheta() const. Data Members; protected:. Double_tfImimaginary part; Double_tfRereal part. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TComplex(Double_t re, Double_t im = 0, Bool_t polar = kFALSE); Standard constructor. TComplex(); ctors and dtors. {}. TComplex(Double_t re, Double_t im = 0, Bool_t polar = kFALSE). virtual ~TComplex(); {}. TComplex I(); constants. {return TComplex(0,1);}. TComplex One(); {return TComplex(1,0);}. Double_t Re() const; getters and setters. {return fRe;}. Double_t Im() const; {return fIm;}. Double_t Rho() const; {return TMath::Sqrt(fRe*fRe+fIm*fIm);}. Double_t Rho2() const; {return fRe*fRe+fIm*fIm;}. Double_t Theta() const; {return (fIm||fRe)?TMath::ATan2(fIm,fRe):0;}. TComplex operator()(Double_t x, Double_t y, Bool_t polar = kFALSE). TComplex Sqrt(const TComplex& c); TMath:: extensions. {return TComplex(TMath::Sqrt(c.Rho()),0.5*c.Theta(),kTRUE);}. TComplex Exp(const TComplex& c); {return TComplex(TMath::Exp(c.fRe),c.fIm,kTRUE);}. TComplex Log(const TComplex& c); {return TComplex(0.5*TMath::Log(c.Rho2()),c.Theta());}. TComplex Log2(const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TComplex.html:2892,Inherit,Inheritance,2892,root/html602/TComplex.html,https://root.cern,https://root.cern/root/html602/TComplex.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst TCut& rhs); Bool_toperator<=(const TCut& rhs); Bool_toperator>(const TCut& rhs); Bool_toperator>=(const TCut& rhs). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TCut(); Constructor. TCut(const char* title); Constructor. TCut(const char* name, const char* title); Constructor. TCut(const TCut& cut); Copy Constructor. ~TCut(); Typical destructor. Bool_t operator==(const char* rhs) const; Comparison. Bool_t operator==(const TCut& rhs) const; Comparison. Bool_t operator!=(const char* rhs) const; Comparison. Bool_t operator!=(const TCut& rhs) const; Comparison. TCut& operator=(const char* rhs); Assignment. TCut& operator=(const TCut& rhs); Assignment. TCut& operator+=(const char* rhs); Addition. TCut& operator+=(const TCut& rhs); Addition. TCut& operator*=(const char* rhs); Multiplication. TCut& operator*=(const TCut& rhs); Multiplication. Bool_t operator<(const TCut& rhs); Prevent meaningless operator (which otherwise can be reached via; the conversion to 'const char*'. Bool_t operator<=(const TCut& rhs). Bool_t operator>(const TCut& rhs). Bool_t operator>=(const TCut& rhs). » Author: Rene Brun 14/",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TCut.html:7054,Inherit,Inheritance,7054,root/html602/TCut.html,https://root.cern,https://root.cern/root/html602/TCut.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TParallelCoordEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Normal constructor. void MakeVariablesTab(); Make the ""variable"" tab. ~TParallelCoordEditor(); Destructor. void CleanUpSelections(); Clean up the selection combo box. void CleanUpVariables(); Clean up the variables combo box. void ConnectSignals2Slots(); Connect signals to slots. void DoActivateSelection(Bool_t ); Slot to activate or not a selection. void DoAddSelection(); Slot to add a selection. void DoAddVariable(); Slot to add a variable. void DoApplySelect(); Slot to apply a selection to the tree. void DoDelayDrawing(Bool_t ); Slot to delay the drawing. void DoDeleteSelection(); Slot to delete a selection. void DoDeleteVar(); Slot to delete a variable(). void DoDotsSpacing(); Slot to set the line dotspacing. void DoDotsSpacingField(); Slot to set the line dotspacing from the entry field. void DoAlphaField(); Slot to set the alpha value from the entry field. void DoAlpha(); Slot to set the alpha value. void DoEntriesToDraw(); Slot to select the entries to be drawn. void DoFirstEntry(); Slot to set the first entry. void DoGlo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TParallelCoordEditor.html:23156,variab,variable,23156,root/html534/TParallelCoordEditor.html,https://root.cern,https://root.cern/root/html534/TParallelCoordEditor.html,2,['variab'],['variable']
Modifiability,"onst TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TParallelCoordEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Normal constructor. void MakeVariablesTab(); Make the ""variable"" tab. ~TParallelCoordEditor(); Destructor. void CleanUpSelections(); Clean up the selection combo box. void CleanUpVariables(); Clean up the variables combo box. void ConnectSignals2Slots(); Connect signals to slots. void DoActivateSelection(Bool_t ); Slot to activate or not a selection. void DoAddSelection(); Slot to add a selection. void DoAddVariable(); Slot to add a variable. void DoApplySelect(); Slot to apply a selection to the tree. void DoDelayDrawing(Bool_t ); Slot to delay the drawing. void DoDeleteSelection(); Slot to delete a selection. void DoDeleteVar(); Slot to delete a variable(). void DoDotsSpacing(); Slot to set the line dotspacing. void DoDotsSpacingField(); Slot to set the line dotspacing from the entry field. void DoEntriesToDraw(); Slot to select the entries to be drawn. void DoFirstEntry(); Slot to set the first entry. void DoGlobalLineColor(Pixel_t ); Slot to set the global line color. void DoGlobalLineWidth(Int_t ); Slot to set the global li",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TParallelCoordEditor.html:23002,variab,variable,23002,root/html530/TParallelCoordEditor.html,https://root.cern,https://root.cern/root/html530/TParallelCoordEditor.html,3,['variab'],['variable']
Modifiability,"onst TGLBoxCut&); virtual~TGLBoxCut(); static TClass*Class(); voidDrawBox(Bool_t selectionPass, Int_t selected) const; Rgl::Range_tGetXRange() const; Rgl::Range_tGetYRange() const; Rgl::Range_tGetZRange() const; virtual TClass*IsA() const; Bool_tIsActive() const; Bool_tIsInCut(Double_t xMin, Double_t xMax, Double_t yMin, Double_t yMax, Double_t zMin, Double_t zMax) const; voidMoveBox(Int_t px, Int_t py, Int_t axisID); voidResetBoxGeometry(); voidSetActive(Bool_t a); voidSetFactor(Double_t f); virtual voidShowMembers(TMemberInspector& insp); voidStartMovement(Int_t px, Int_t py); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); voidTurnOnOff(). private:. voidAdjustBox(). Data Members; private:. Bool_tfActive; TGLVertex3fCenter; Double_tfFactor; TPointfMousePos; const TGLPlotBox *constfPlotBox; Double_tfXLength; pair<double,double>fXRange; Double_tfYLength; pair<double,double>fYRange; Double_tfZLength; pair<double,double>fZRange. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLBoxCut(const TGLPlotBox* plotBox); Constructor. ~TGLBoxCut(); Destructor. void TurnOnOff(); Turn the box cut on/off.; If it's on, it will be placed in front point of a plot. void SetActive(Bool_t a); Turn the box cut on/off. void ResetBoxGeometry(); Set geometry using plot's back box. void DrawBox(Bool_t selectionPass, Int_t selected) const; Draw cut as a semi-transparent box. void StartMovement(Int_t px, Int_t py); Start cut's movement. void MoveBox(Int_t px, Int_t py, Int_t axisID); Move box cut along selected direction. void AdjustBox(); Box cut is limited by plot's sizes. Bool_t IsInCut(Double_t xMin, Double_t xMax, Double_t yMin, Double_t yMax, Double_t zMin, Double_t zMax) const; Check, if box defined by xmin/xmax etc. is in cut. TGLBoxCut(const TGLPlotBox* plotBox). Bool_t IsActive() const; {return fActive;}. void SetFactor(Double_t f); {fFactor = f;}. Rgl::Range_t GetXRange() const; {return fXRange;}. Rgl::Range_t GetYRange(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLBoxCut.html:1408,Inherit,Inheritance,1408,root/html532/TGLBoxCut.html,https://root.cern,https://root.cern/root/html532/TGLBoxCut.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst TGLPlaneSet_t &planes);  Check if box is outside of all planes. ;  ; static void RGBAFromColorIdx (Float_t rgba[4], Color_t ci, Char_t transp=0);  Fill rgba color from ROOT color-index ci and transparency (0->100). ;  ;  Static Public Member Functions inherited from TGLSceneBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGLLockable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const char * LockName (ELock lock);  Return name-string for given lock-type. ;  ; static Bool_t LockValid (ELock lock);  Test if lock is a valid type to take/release. ;  . Protected Types; typedef std::pair< UInt_t, RootCsg::TBaseMesh * > CSPart_t;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Types inherited from TGLSceneBase; typedef std::list< TGLViewerBase * >::iterator ViewerList_i;  ; typedef std::list< TGLViewerBase * > ViewerList_t;  . Protected Member Functions; TGLLogicalShape * AttemptDirectRenderer (TObject *id);  Try to construct an appropriate logical-shape sub-class based on id'class, following convention that SomeClassGL is a suitable renderer for class SomeClass. ;  ; RootCsg::TBaseMesh * BuildComposite ();  Build and return composite shape mesh. ;  ; void ComposePolymarker (const TList *padPrimitives);  ; TGLLogicalShape * CreateNewLogical (const TBuffer3D &buffer) const;  Create and return a new TGLLogicalShape from the supplied buffer. ;  ; TGLPhysicalShape * CreateNewPhysical (UInt_t physicalID, const TBuffer3D &buffer, const TGLLogicalShape &logical) const;  Create and return a new TGLPhysicalShape with id 'ID', using 'buffer' placement information (translation etc), and bound to suppled 'logical'. ;  ; Int_t ValidateObjectBuffer (const TB",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLScenePad.html:19941,inherit,inherited,19941,doc/master/classTGLScenePad.html,https://root.cern,https://root.cern/doc/master/classTGLScenePad.html,2,['inherit'],['inherited']
Modifiability,"onst TGPicture * fDisabledPic;  picture to draw disabled slider ;  ; Bool_t fDragging;  true if in dragging mode ;  ; Int_t fPos;  logical position between fVmin and fVmax ;  ; Int_t fRelPos;  slider position in pixel coordinates ;  ; Int_t fScale;  tick mark scale ;  ; const TGPicture * fSliderPic;  picture to draw slider ;  ; Int_t fType;  slider type bits ;  ; Int_t fVmax;  logical upper limit of slider ;  ; Int_t fVmin;  logical lower limit of slider ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Protected Attributes inherited from TGWidget; TString fCommand;  command to be executed ;  ; const TGWindow * fMsgWindow;  window which handles widget events ;  ; Int_t fWidgetFlags;  widget status flags (OR of EWidgetStatus) ;  ; Int_t fWidgetId;  the widget id (used",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHSlider.html:26564,inherit,inherited,26564,doc/master/classTGHSlider.html,https://root.cern,https://root.cern/doc/master/classTGHSlider.html,3,['inherit'],['inherited']
Modifiability,"onst TGWindow *p=nullptr, const TGWindow *m=nullptr, Int_t *retc=nullptr, Pixel_t *color=nullptr, Bool_t wait=kTRUE);  Color selection dialog constructor. ;  ;  ~TGColorDialog () override;  TGColorDialog destructor. ;  ; virtual void AlphaColorSelected (ULongptr_t);  Emit signal about selected alpha and color. ;  ; virtual void ColorSelected (Pixel_t);  Emit signal about selected color. ;  ; void DoPreview ();  Slot method called when Preview button is clicked. ;  ; TGColorPalette * GetCustomPalette () const;  ; TGColorPalette * GetPalette () const;  ; TClass * IsA () const override;  ; void SetColorInfo (Int_t event, Int_t px, Int_t py, TObject *selected);  Set the color info in RGB and HLS parts. ;  ; virtual void SetCurrentColor (Pixel_t col);  Change current color. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGTransientFrame;  TGTransientFrame (const TGWindow *p=nullptr, const TGWindow *main=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame);  Create a transient window. ;  ; virtual void CenterOnParent (Bool_t croot=kTRUE, EPlacement pos=kCenter);  Position transient frame centered relative to the parent frame. ;  ; const TGWindow * GetMain () const;  ; TClass * IsA () const override;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a transient frame widget as a C++ statement(s) on output stream out. ;  ; void SaveSource (const char *filename=""Rootdlog.C"", Option_t *option="""") override;  Save the GUI transient frame widget in a C++ macro file. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGMainFrame;  TGMainFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame);  Create a top level main frame. ;  ;  ~TGMain",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGColorDialog.html:1510,inherit,inherited,1510,doc/master/classTGColorDialog.html,https://root.cern,https://root.cern/doc/master/classTGColorDialog.html,1,['inherit'],['inherited']
Modifiability,"onst TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMdiContainer.html:23029,inherit,inherited,23029,doc/master/classTGMdiContainer.html,https://root.cern,https://root.cern/doc/master/classTGMdiContainer.html,2,['inherit'],['inherited']
Modifiability,"onst TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TCla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoManagerEditor.html:36693,inherit,inherited,36693,doc/master/classTGeoManagerEditor.html,https://root.cern,https://root.cern/doc/master/classTGeoManagerEditor.html,3,['inherit'],['inherited']
Modifiability,"onst TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGLVEntry; static FontStruct_t GetDefaultFontStruct ();  Return the default font structure in use. ;  ; static const TGGC & GetDefaultGC ();  Return the default graphics context in use. ;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFileItem.html:28753,inherit,inherited,28753,doc/master/classTGFileItem.html,https://root.cern,https://root.cern/doc/master/classTGFileItem.html,1,['inherit'],['inherited']
Modifiability,"onst TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGMainFrame; enum  { kDontCallClose = (1ULL << ( 14 )); };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGMainFrame; TString GetMWMfuncString () const;  used in SaveSource() ;  ; TString GetMWMinpString () ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGCommandPlugin.html:32034,inherit,inherited,32034,doc/master/classTGCommandPlugin.html,https://root.cern,https://root.cern/doc/master/classTGCommandPlugin.html,1,['inherit'],['inherited']
Modifiability,"onst TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGMainFrame; enum  { kDontCallClose = (1ULL << ( 14 )); };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected M",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTASPaletteEditor.html:34594,inherit,inherited,34594,doc/master/classTASPaletteEditor.html,https://root.cern,https://root.cern/doc/master/classTASPaletteEditor.html,2,['inherit'],['inherited']
Modifiability,"onst TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TGLVEntry; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTVLVEntry.html:25231,inherit,inherited,25231,doc/master/classTTVLVEntry.html,https://root.cern,https://root.cern/doc/master/classTTVLVEntry.html,1,['inherit'],['inherited']
Modifiability,onst TGWindow*TGWindow::fParentParent window; Bool_tfShowSlider; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; Int_tTGWidget::fWidgetFlagswidget status flags (OR of EWidgetStatus); Int_tTGWidget::fWidgetIdthe widget id (used for event processing); UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveGValuatorBase& operator=(const TEveGValuatorBase& ). virtual ~TEveGValuatorBase(); {}. void Build(Bool_t connect = kTRUE). void SetLabelWidth(Int_t w); { fLabelWidth = w; }. void SetAlignRight(Bool_t a); { fAlignRight = a; }. void SetShowSlider(Bool_t s = kTRUE); { fShowSlider = s; }. void SetNELength(Int_t l); { fNELength = l; }. void SetNEHeight(Int_t h); { fNEHeight = h; }. TGLabel* GetLabel(); {return fLabel;}. » Last changed: root/eve:$Id: TEveGValuators.h 27157 2009-01-15 14:05:12Z brun $ » Last generated: 2011-11-03 20:11; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveGValuatorBase.html:19666,Inherit,Inheritance,19666,root/html532/TEveGValuatorBase.html,https://root.cern,https://root.cern/root/html532/TEveGValuatorBase.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst TGWindow*TGWindow::fParentParent window; TGLBEntry*TGComboBox::fSelEntryselected item frame; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TGTextEntry*TGComboBox::fTextEntrytext entry; Int_tTGWidget::fWidgetFlagswidget status flags (OR of EWidgetStatus); Int_tTGWidget::fWidgetIdthe widget id (used for event processing); UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLineStyleComboBox(const TGWindow* p = 0, Int_t id = -1, UInt_t options = kHorizontalFrame|kSunkenFrame|kDoubleBorder, Pixel_t back = GetWhitePixel()); Create a line style combo box. void SavePrimitive(ostream& out, Option_t* option = """"); Save a line style combo box widget as a C++ statement(s). » Author: Fons Rademakers 13/01/98 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-03-13 19:26; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGLineStyleComboBox.html:22004,Inherit,Inheritance,22004,root/html534/TGLineStyleComboBox.html,https://root.cern,https://root.cern/root/html534/TGLineStyleComboBox.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst TMVA::kNN::VarType var1, const UInt_t ivar) const; UInt_tGetNTgt() const; UInt_tGetNVar() const; const TMVA::kNN::VarVec&GetTargets() const; TMVA::kNN::VarTypeGetTgt(UInt_t i) const; TMVA::kNN::VarTypeGetTgt(const UInt_t i) const; Short_tGetType() const; TMVA::kNN::VarTypeGetVar(UInt_t i) const; TMVA::kNN::VarTypeGetVar(const UInt_t i) const; const TMVA::kNN::VarVec&GetVars() const; Double_tGetWeight() const; TMVA::kNN::Event&operator=(const TMVA::kNN::Event&); voidPrint() const; voidPrint(ostream& os) const; voidSetTargets(const TMVA::kNN::VarVec& tvec). Data Members; private:. TMVA::kNN::VarVecfTgttargets for regression analysis; Short_tfTypeevent type ==0 or == 1, expand it to arbitrary class types? ; TMVA::kNN::VarVecfVarcoordinates (variables) for knn search; Double_tfWeightevent weight. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Event(); Create an Event object.; When the constructor is invoked for the first time, the class static; variable fgTracks is 0 and the TClonesArray fgTracks is created. ~Event(). Event(). Event(const TMVA::kNN::VarVec& vec, Double_t weight, Short_t type). Event(const TMVA::kNN::VarVec& vec, Double_t weight, Short_t type, const TMVA::kNN::VarVec& tvec). Double_t GetWeight() const. VarType GetVar(UInt_t i) const. VarType GetTgt(UInt_t i) const. UInt_t GetNVar() const. UInt_t GetNTgt() const. Short_t GetType() const. VarType GetDist(TMVA::kNN::VarType var, UInt_t ivar) const; keep these two function separate. VarType GetDist(const TMVA::kNN::Event& other) const. void SetTargets(const TMVA::kNN::VarVec& tvec). const VarVec& GetTargets() const. const VarVec& GetVars() const. void Print() const. void Print(ostream& os) const. VarType GetDist(const TMVA::kNN::VarType var1, const UInt_t ivar) const. inlined functions for Event class. VarType GetVar(const UInt_t i) const. VarType GetTgt(const UInt_t i) const. » Author: Rustem Ospanov » Copyright (c) 2007: *; » Last changed: root/tmva $Id$ » L",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__kNN__Event.html:4616,variab,variable,4616,root/html534/TMVA__kNN__Event.html,https://root.cern,https://root.cern/root/html534/TMVA__kNN__Event.html,2,['variab'],['variable']
Modifiability,"onst TMVA::kNN::VarType var1, const UInt_t ivar) const; UInt_tGetNTgt() const; UInt_tGetNVar() const; const TMVA::kNN::VarVec&GetTargets() const; TMVA::kNN::VarTypeGetTgt(UInt_t i) const; TMVA::kNN::VarTypeGetTgt(const UInt_t i) const; Short_tGetType() const; TMVA::kNN::VarTypeGetVar(UInt_t i) const; TMVA::kNN::VarTypeGetVar(const UInt_t i) const; const TMVA::kNN::VarVec&GetVars() const; Double_tGetWeight() const; TMVA::kNN::Event&operator=(const TMVA::kNN::Event&); voidPrint() const; voidPrint(ostream& os) const; voidSetTargets(const TMVA::kNN::VarVec& tvec). Data Members; private:. TMVA::kNN::VarVecfTgttargets for regression analysis; Short_tfTypeevent type ==0 or == 1, expand it to arbitrary class types? ; TMVA::kNN::VarVecfVarcoordinates (variables) for knn search; Double_tfWeightevent weight. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Event(); Create an Event object.; When the constructor is invoked for the first time, the class static; variable fgTracks is 0 and the TClonesArray fgTracks is created. ~Event(). Event(). Event(const TMVA::kNN::VarVec& vec, Double_t weight, Short_t type). Event(const TMVA::kNN::VarVec& vec, Double_t weight, Short_t type, const TMVA::kNN::VarVec& tvec). Double_t GetWeight() const. VarType GetVar(UInt_t i) const. VarType GetTgt(UInt_t i) const. UInt_t GetNVar() const. UInt_t GetNTgt() const. Short_t GetType() const. VarType GetDist(TMVA::kNN::VarType var, UInt_t ivar) const; keep these two function separate. VarType GetDist(const TMVA::kNN::Event& other) const. void SetTargets(const TMVA::kNN::VarVec& tvec). const VarVec& GetTargets() const. const VarVec& GetVars() const. void Print() const. void Print(ostream& os) const. VarType GetDist(const TMVA::kNN::VarType var1, const UInt_t ivar) const. inlined functions for Event class. VarType GetVar(const UInt_t i) const. VarType GetTgt(const UInt_t i) const. » Author: Rustem Ospanov » Copyright (c) 2007: *; » Last changed: root/tmva $Id: Mod",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__kNN__Event.html:4616,variab,variable,4616,root/html528/TMVA__kNN__Event.html,https://root.cern,https://root.cern/root/html528/TMVA__kNN__Event.html,4,['variab'],['variable']
Modifiability,"onst TString & GetLabel () const;  ; Double_t GetMax () const;  ; Double_t GetMean () const;  ; Double_t GetMin () const;  ; Double_t GetRMS () const;  ; const TString & GetUnit () const;  ; Double_t GetVariance () const;  ; char GetVarType () const;  ; virtual TClass * IsA () const;  ; VariableInfo & operator= (const TMVA::VariableInfo &rhs);  comparison operator ;  ; void ReadFromStream (std::istream &istr);  read VariableInfo from stream ;  ; void ReadFromXML (void *varnode);  read VariableInfo from stream ;  ; void ResetMinMax ();  ; void SetExternalLink (void *p);  ; void SetInternalName (const char *name);  ; void SetMax (Double_t v);  ; void SetMean (Double_t v);  ; void SetMin (Double_t v);  ; void SetRMS (Double_t v);  ; void SetVariance (Double_t v);  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void WriteToStream (std::ostream &o) const;  write VariableInfo to stream ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const over",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariableInfo.html:1992,inherit,inherited,1992,doc/master/classTMVA_1_1VariableInfo.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariableInfo.html,1,['inherit'],['inherited']
Modifiability,"onst TString& theOption = """", TDirectory* theBaseDir = 0); TDirectory*MethodBaseDir() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::MethodBase&operator=(const TMVA::MethodBase&); virtual map<TString,Double_t>OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidPrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; virtual voidProcessOptions(); voidProcessSetup(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidReadStateFromFile(); voidReadStateFromStream(istream& tf); voidReadStateFromStream(TFile& rf); voidReadStateFromXMLString(const char* xmlstr); virtual voidTObject::RecursiveRemove(TObject* obj); voidRerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidReset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidSetAnalysisType(TMVA::Types::EAnalysisType type); voidSetBaseDir(TDirectory* methodDir); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configura",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodBase.html:10131,Config,Configurable,10131,root/html602/TMVA__MethodBase.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodBase.html,2,['Config'],['Configurable']
Modifiability,"onst TString& theOption = """", TDirectory* theTargetDir = 0); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::MethodDT&operator=(const TMVA::MethodDT&); virtual map<TString,Double_t>TMVA::MethodBase::OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::MethodBase::PrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; virtual voidProcessOptions(); voidTMVA::MethodBase::ProcessSetup(); Double_tPruneTree(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& istr); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodDT.html:13176,Config,Configurable,13176,root/html602/TMVA__MethodDT.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodDT.html,2,['Config'],['Configurable']
Modifiability,"onst TString& theOption = ""Fisher"", TDirectory* theTargetDir = 0); standard constructor for the ""Fisher"". MethodFisher(TMVA::DataSetInfo& dsi, const TString& theWeightFile, TDirectory* theTargetDir = NULL); constructor from weight file. void Init( void ); default initialization called by all constructors. void DeclareOptions(). MethodFisher options:; format and syntax of option string: ""type""; where type is ""Fisher"" or ""Mahalanobis"". void ProcessOptions(); process user options. ~MethodFisher( void ); destructor. Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); Fisher can only handle classification with 2 classes. void Train( void ); computation of Fisher coefficients by series of matrix operations. Double_t GetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); returns the Fisher value (no fixed range). void InitMatrices( void ); initializaton method; creates global matrices and vectors. void GetMean( void ); compute mean values of variables in each sample, and the overall means. void GetCov_WithinClass( void ); the matrix of covariance 'within class' reflects the dispersion of the; events relative to the center of gravity of their own class. void GetCov_BetweenClass( void ); the matrix of covariance 'between class' reflects the dispersion of the; events of a class relative to the global center of gravity of all the class; hence the separation between classes. void GetCov_Full( void ); compute full covariance matrix from sum of within and between matrices. void GetFisherCoeff( void ); Fisher = Sum { [coeff]*[variables] }. let Xs be the array of the mean values of variables for signal evts; let Xb be the array of the mean values of variables for backgd evts; let InvWith be the inverse matrix of the 'within class' correlation matrix. then the array of Fisher coefficients is; [coeff] =sqrt(fNsig*fNbgd)/fNevt*transpose{Xs-Xb}*InvWith. void GetDiscrimPower( void ); computation of discrimination power indicator for each",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodFisher.html:19508,variab,variables,19508,root/html528/TMVA__MethodFisher.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodFisher.html,6,['variab'],['variables']
Modifiability,"onst TString& theWeightFile, TDirectory* theTargetDir = __null); TMVA::MethodKNNMethodKNN(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = ""KNN"", TDirectory* theTargetDir = __null); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::MethodKNN&operator=(const TMVA::MethodKNN&); virtual map<TString,Double_t>TMVA::MethodBase::OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::MethodBase::PrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; voidTMVA::MethodBase::ProcessSetup(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& istr); virtual voidReadWeightsFromStream(TFile& rf); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidTMVA::MethodBase::Reset(); voidTObject::ResetBit(UInt_t f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodKNN.html:9722,Config,Configurable,9722,root/html602/TMVA__MethodKNN.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodKNN.html,2,['Config'],['Configurable']
Modifiability,"onst Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidsetBufferFraction(Double_t frac); voidsetBufferStrategy(RooFFTConvPdf::BufStrat bs); virtual voidRooAbsArg::setCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); voidsetCacheObservables(const RooArgSet& obs); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); virtual voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); static voidRooAbsReal::setHideOffset(Bool_t flag); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidRooAbsCachedPdf::setInterpolationOrder(Int_t order); voidRooAbsArg::setLocalNoDirtyInhibit(Bool_t flag) const; virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setParameterizeIntegral(const RooArgSet& paramVars); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidsetShift(Double_t val1, Double_t val2); voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooFFTConvPdf.html:34275,config,config,34275,root/html534/RooFFTConvPdf.html,https://root.cern,https://root.cern/root/html534/RooFFTConvPdf.html,6,['config'],['config']
Modifiability,"onst char * GetName() const overrideReturns name of object.Definition TNamed.h:47; TNamed::Streamervoid Streamer(TBuffer &) overrideStream an object of class TObject.; TObjStringCollectable string class.Definition TObjString.h:28; TObjString::SetStringvoid SetString(const char *s)Definition TObjString.h:45; TObjString::GetNameconst char * GetName() const overrideReturns name of object.Definition TObjString.h:38; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::TestBitR__ALWAYS_INLINE Bool_t TestBit(UInt_t f) constDefinition TObject.h:199; TObject::GetUniqueIDvirtual UInt_t GetUniqueID() constReturn the unique object id.Definition TObject.cxx:462; TObject::Warningvirtual void Warning(const char *method, const char *msgfmt,...) constIssue warning message.Definition TObject.cxx:979; TObject::SetBitvoid SetBit(UInt_t f, Bool_t set)Set or unset the user status bits as specified in f.Definition TObject.cxx:786; TObject::InheritsFromvirtual Bool_t InheritsFrom(const char *classname) constReturns kTRUE if object inherits from class ""classname"".Definition TObject.cxx:530; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TObject::SetUniqueIDvirtual void SetUniqueID(UInt_t uid)Set the unique object id.Definition TObject.cxx:797; TObject::ResetBitvoid ResetBit(UInt_t f)Definition TObject.h:198; TObject::Infovirtual void Info(const char *method, const char *msgfmt,...) constIssue info message.Definition TObject.cxx:967; TStringBasic string class.Definition TString.h:139; TString::LengthSsiz_t Length() constDefinition TString.h:417; TString::ToLowervoid ToLower()Change string to lower-case.Definition TString.cxx:1182; TString::Dataconst char * Data() constDefinition TString.h:376; TString::ReplaceAllTString & ReplaceAll(const TString &s1, const TString &s2)Definition TString.h:704; TString::IsNullBool_t IsNull() constDefinition TString.h:414; TString::RemoveTString & Remove(Ssiz_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TAxis_8cxx_source.html:65524,inherit,inherits,65524,doc/master/TAxis_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TAxis_8cxx_source.html,1,['inherit'],['inherits']
Modifiability,"onst char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; std::atomic< TApplication * > fApplication;  Pointer to current application. ;  ; Bool_t fBatch;  True if session without graphics. ;  ; TList * fBrowsables;  List of browsables. ;  ; TSeqCollection * fBrowsers;  List of browsers. ;  ; Int_t fBuiltDate;  Date of ROOT built. ;  ; Int_t fBuiltTime;  Time of ROOT built. ;  ; TSeqCollection * fCanvases;  List of canvases. ;  ; TCollection * fClasses;  List of classes definition. ;  ; TCollection * fClassGenerators;  List of user defined class generators;. ;  ; TSeqCollection * fCleanups;  List of recursiveRemove collections. ;  ; TSeqCollection * fClipboard;  List of clipboard objects. ;  ; TSeqCollection * fClosedObjects;  List of closed objects from the list of files and sockets, so we can delete them if neededCl. ;  ; TSeqCollection * fColors;  List of colors. ;  ; TString fConfigFeatures;  ROOT ./configure detected build features. ;  ; TString fConfigOptions;  ROOT ./configure set build options. ;  ; TString fCutClassName;  Name of default CutG class in graphics editor. ;  ; TSeqCollection * fDataSets;  List of data sets (TDSet or TChain) ;  ; TString fDefCanvasName;  Name of default canvas. ;  ; Bool_t fEditHistograms;  True if histograms can be edited with the mouse. ;  ; Int_t fEditorMode;  Current Editor mode. ;  ; AListOfEnums_t fEnums;  List of enum types. ;  ; Bool_t fEscape;  True if ESC has been pressed. ;  ; Bool_t fExecutingMacro;  True while executing a TMacro. ;  ; TSeqCollection * fFiles;  List of files. ;  ; Bool_t fForceStyle;  Force setting of current style when reading objects. ;  ; Bool_t fFromPopUp;  True if command executed from a popup menu. ;  ; TListOfFunctionTemplates * fFuncTemplate;  List of global function templates. ;  ; TCollection * fFunctions;  List of analytic functions. ;  ; TSeqCollection * fGeometries;  List of geometries. ;  ; TString fGitBranch;  Git branch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTROOT.html:34691,config,configure,34691,doc/v632/classTROOT.html,https://root.cern,https://root.cern/doc/v632/classTROOT.html,2,['config'],['configure']
Modifiability,"onst char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; MsgLogger * fLogger;  ! message logger ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions; template<class T > ; void AssignOpt (const TString &name, T &valAssign) const;  ; void SplitOptions (const TString &theOpt, TList &loo) const;  splits the option string at ':' and fills the list 'loo' with the primitive strings ;  . Private Attributes; TString fConfigDescription;  description of this configurable ;  ; OptionBase * fLastDeclaredOption;  ! last declared option ;  ; TList fListOfOptions;  option list ;  ; Bool_t fLooseOptionCheckingEnabled;  checker for option string ;  ; TString fOptions;  options string ;  ; TString fReferenceFile;  reference file for options writing ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TMVA/Configurable.h>. Inheritance diagram for TMVA::Configurable:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ Configurable(). TMVA::Configurable::Configurable ; (; const TString & ; theOption = """"). constructor ; Definition at line 66 of file Con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Configurable.html:13062,inherit,inherited,13062,doc/master/classTMVA_1_1Configurable.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Configurable.html,1,['inherit'],['inherited']
Modifiability,"onst char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TDSet; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Long64_t GetEntries (Bool_t isTree, const char *filename, const char *path, TString &objname);  Returns number of entries in tree or objects in file. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDSetProxy.html:13783,inherit,inherited,13783,doc/master/classTDSetProxy.html,https://root.cern,https://root.cern/doc/master/classTDSetProxy.html,1,['inherit'],['inherited']
Modifiability,onst char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TGSearchDialog *& SearchDialog ();  Return global search dialog. ;  ;  Static Public Member Functions inherited from TGTransientFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGMainFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context. ;  ; static const TGGC & GetWhiteGC ();  Get white graphics con,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGSearchDialog.html:25042,inherit,inherited,25042,doc/master/classTGSearchDialog.html,https://root.cern,https://root.cern/doc/master/classTGSearchDialog.html,4,['inherit'],['inherited']
Modifiability,"onst char *name);  ;  ~TDocDirective () override;  ; virtual void AddParameter (const TString &, const char *=0);  ; virtual void DeleteOutputFiles (const char *ext) const;  Delete all output generated by the directive beginning with Name() and ending with ext. ;  ; TDocOutput * GetDocOutput () const;  ; TDocParser * GetDocParser () const;  ; THtml * GetHtml () const;  ; const char * GetName () const override;  Returns name of object. ;  ; void GetName (TString &name) const;  Get the full name, based on fName, fTitle, fDocParser's tag. ;  ; const char * GetOutputDir () const;  Get the directory for documentation output. ;  ; void SetCounter (Int_t count);  ; void SetParameters (const char *params);  Given a string containing parameters in params, we call AddParameter() for each of them. ;  ; void SetParser (TDocParser *parser);  Set the parser, and fDocOutput, fHtml from that. ;  ; void SetTag (const char *tag);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fCounter;  ; TDocOutput * fDocOutput;  ; TDocParser * fDocParser;  ; THtml * fHtml;  ; TString fParameters;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Friends; class TDocParser;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDocDirective.html:11215,inherit,inherited,11215,doc/master/classTDocDirective.html,https://root.cern,https://root.cern/doc/master/classTDocDirective.html,1,['inherit'],['inherited']
Modifiability,"onst char *name);  ;  ~TDocDirective () override;  ; virtual void AddParameter (const TString &, const char *=0);  ; virtual void DeleteOutputFiles (const char *ext) const;  Delete all output generated by the directive beginning with Name() and ending with ext. ;  ; TDocOutput * GetDocOutput () const;  ; TDocParser * GetDocParser () const;  ; THtml * GetHtml () const;  ; const char * GetName () const override;  Returns name of object. ;  ; void GetName (TString &name) const;  Get the full name, based on fName, fTitle, fDocParser's tag. ;  ; const char * GetOutputDir () const;  Get the directory for documentation output. ;  ; void SetCounter (Int_t count);  ; void SetParameters (const char *params);  Given a string containing parameters in params, we call AddParameter() for each of them. ;  ; void SetParser (TDocParser *parser);  Set the parser, and fDocOutput, fHtml from that. ;  ; void SetTag (const char *tag);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TDocDirective; Int_t fCounter;  ; TDocOutput * fDocOutput;  ; TDocParser * fDocParser;  ; THtml * fHtml;  ; TString fParameters;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TDocDirective.h>. Inheritance diagram for TDocHtmlDirective:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDocHtmlDirective(). TDocHtmlDirective::TDocHtmlDirective ; (; ). inline . Definition at line 85 of file TDocDirective.h. ◆ ~TDocHtmlDirective(). TDocHtmlDirective::~TDocHtmlDirective ; (; ). inlineoverride . Definition at line 86 of file TDocDirective.h. Member Function Documentation. ◆ AddLine(). void TDocHtmlDirective::AddLine ; (; const TSubString & ; line). overridevirtual . Add a line of HT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDocHtmlDirective.html:12500,inherit,inherited,12500,doc/master/classTDocHtmlDirective.html,https://root.cern,https://root.cern/doc/master/classTDocHtmlDirective.html,1,['inherit'],['inherited']
Modifiability,"onst char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attributes. ;  ; virtual void SetMarkerColor (Color_t mcolor=1);  Set the marker color. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; virtual void SetMarkerSize (Size_t msize=1);  Set the marker size. ;  ; virtual void SetMarkerStyle (Style_t mstyle=1);  Set the marker style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TH2Poly; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TH2; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TH1; static void AddDirectory (Bool_t add=kTRUE);  Sets the flag controlling the automatic add of histograms in memory. ;  ; static Bool_t AddDirectoryStatus ();  Static function: cannot be inlined on Windows/NT. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Int_t FitOptionsMake (Option_t *option, Foption_t &Foption);  Decode string choptin and fill fitOption structure. ;  ; static Int_t GetDefaultBufferSize ();  Static function return the default buffer size for automatic histograms the parameter fgBufferSize may be changed via SetDefaultBufferSize. ;  ; static Bool_t GetDefaultSumw2 ();  Return kTRUE if",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile2Poly.html:44130,inherit,inherited,44130,doc/master/classTProfile2Poly.html,https://root.cern,https://root.cern/doc/master/classTProfile2Poly.html,3,['inherit'],['inherited']
Modifiability,"onst char *name, const char *formula="""", bool addToGlobList=true, bool vectorize=false);  ;  TFormula (const TFormula &formula);  ;  ~TFormula () override;  ; void AddParameter (const TString &name, Double_t value=0);  ; void AddVariable (const TString &name, Double_t value=0);  Adds variable to known variables, and reprocess formula. ;  ; void AddVariables (const TString *vars, const Int_t size);  Adds multiple variables. ;  ; void Clear (Option_t *option="""") override;  Clear the formula setting expression to empty and reset the variables and parameters containers. ;  ; Int_t Compile (const char *expression="""");  Compile the given expression with Cling backward compatibility method to be used in combination with the empty constructor if no expression is given , the current stored formula (retrieved with GetExpFormula()) or the title is used. ;  ; void Copy (TObject &f1) const override;  Copy this to obj. ;  ; template<typename... Args> ; Double_t Eval (Args... args) const;  Set first 1, 2, 3 or 4 variables (e.g. ;  ; Double_t EvalPar (const Double_t *x, const Double_t *params=nullptr) const;  ; template<class T > ; T EvalPar (const T *x, const Double_t *params=nullptr) const;  ; bool GenerateGradientPar ();  Generate gradient computation routine with respect to the parameters. ;  ; bool GenerateHessianPar ();  Generate hessian computation routine with respect to the parameters. ;  ; TString GetExpFormula (Option_t *option="""") const;  Return the expression formula. ;  ; TString GetGradientFormula () const;  ; TString GetHessianFormula () const;  ; const TObject * GetLinearPart (Int_t i) const;  Return linear part. ;  ; Int_t GetNdim () const;  ; Int_t GetNpar () const;  ; Int_t GetNumber () const;  ; Double_t GetParameter (const char *name) const;  Returns parameter value given by string. ;  ; Double_t GetParameter (Int_t param) const;  Return parameter value given by integer. ;  ; Double_t * GetParameters () const;  ; void GetParameters (Double_t *params) const;  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFormula.html:10183,variab,variables,10183,doc/master/classTFormula.html,https://root.cern,https://root.cern/doc/master/classTFormula.html,1,['variab'],['variables']
Modifiability,"onst char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static Int_t AddFormula (TFormulaPrimitive *formula);  Add formula to the list of primitive formulas. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TFormulaPrimitive * FindFormula (const char *name);  Find the formula in the list of formulas. ;  ; static TFormulaPrimitive * FindFormula (const char *name, const char *args);  Find the formula in the list of formulas. ;  ; static TFormulaPrimitive * FindFormula (const char *name, UInt_t nargs);  Find the formula in the list of formulas. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Static Protected Member Functions; static Int_t BuildBasicFormulas ();  list of global primitive formulas ;  . Protected Attributes; union { ;  ;    GenFunc0   fFunc0 ;  pointer to the TFormula generic function More...;  ;    GenFunc10   fFunc10 ;  pointer to the function More...;  ;    GenFunc110   fFunc110 ;  pointer to the function More...;  ;    GenFunc1110   fFunc1110 ;  pointer to the function More...;  ;    GenFuncG   fFuncG ;  ;    TFunc0   fTFunc0 ;  pointer to the TFormula generic function More..",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1v5_1_1TFormulaPrimitive.html:13729,inherit,inherited,13729,doc/master/classROOT_1_1v5_1_1TFormulaPrimitive.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1v5_1_1TFormulaPrimitive.html,2,['inherit'],['inherited']
Modifiability,"onst char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void ReadMatrixXML (void *xml, const char *name, TMatrixT< Double_t > &X);  ; static void WriteMatrixXML (void *parent, const char *name, const TMatrixT< Double_t > &X);  ;  Static Public Member Functions inherited from TMVA::MethodBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::IMethod; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::Configurable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodDNN.html:21920,inherit,inherited,21920,doc/master/classTMVA_1_1MethodDNN.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodDNN.html,5,['inherit'],['inherited']
Modifiability,"onst char *selec);  Find out if this is a standard selection used for Draw actions (either TSelectorDraw, TProofDraw or deriving from them). ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void DefVar () override;  ; void DoFill (Long64_t entry, Double_t w, const Double_t *v) override;  Fills the eventlist with given values. ;  ;  Protected Member Functions inherited from TProofDraw; virtual void ClearFormula ();  Delete internal buffers. ;  ; virtual Bool_t CompileVariables ();  Compiles each variable from fTreeDrawArgsParser for the tree fTree. ;  ; void FillWeight ();  Get weight from input list, if any. ;  ; virtual Bool_t ProcessSingle (Long64_t, Int_t);  Processes a single variable from an entry. ;  ; void SetCanvas (const char *objname);  Move to a canvas named <name>_canvas; create the canvas if not existing. ;  ; void SetDrawAtt (TObject *o);  Set the drawing attributes from the input list. ;  ; void SetError (const char *sub, const char *mesg);  Sets the error status. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TEntryList * fElist;  ;  Protected Attributes inherited from TProofDraw; Int_t fDimension;  ; TString fInitialExp;  ; TTreeFormulaManager * fManager;  ; Int_t fMultiplicity;  ; Bool_t fObjEval;  ; TTreeFormula * fSelect;  ; TString fSelection;  ; TStatus * fStatus; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawEntryList.html:11876,variab,variable,11876,doc/master/classTProofDrawEntryList.html,https://root.cern,https://root.cern/doc/master/classTProofDrawEntryList.html,1,['variab'],['variable']
Modifiability,"onst char *selec);  Find out if this is a standard selection used for Draw actions (either TSelectorDraw, TProofDraw or deriving from them). ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void DefVar () override;  ; void DoFill (Long64_t entry, Double_t w, const Double_t *v) override;  Fills the eventlist with given values. ;  ;  Protected Member Functions inherited from TProofDraw; virtual void ClearFormula ();  Delete internal buffers. ;  ; virtual Bool_t CompileVariables ();  Compiles each variable from fTreeDrawArgsParser for the tree fTree. ;  ; void FillWeight ();  Get weight from input list, if any. ;  ; virtual Bool_t ProcessSingle (Long64_t, Int_t);  Processes a single variable from an entry. ;  ; void SetCanvas (const char *objname);  Move to a canvas named <name>_canvas; create the canvas if not existing. ;  ; void SetDrawAtt (TObject *o);  Set the drawing attributes from the input list. ;  ; void SetError (const char *sub, const char *mesg);  Sets the error status. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TEventList * fElist;  ; TList * fEventLists;  ;  Protected Attributes inherited from TProofDraw; Int_t fDimension;  ; TString fInitialExp;  ; TTreeFormulaManager * fManager;  ; Int_t fMultiplicity;  ; Bool_t fObjEval;  ; TTreeFormula * fSelect;  ; TString fSelection",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawEventList.html:11876,variab,variable,11876,doc/master/classTProofDrawEventList.html,https://root.cern,https://root.cern/doc/master/classTProofDrawEventList.html,1,['variab'],['variable']
Modifiability,"onst char *selec);  Find out if this is a standard selection used for Draw actions (either TSelectorDraw, TProofDraw or deriving from them). ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void DefVar () override;  ; void DoFill (Long64_t entry, Double_t w, const Double_t *v) override;  Fills the graph with the given values. ;  ;  Protected Member Functions inherited from TProofDraw; virtual void ClearFormula ();  Delete internal buffers. ;  ; virtual Bool_t CompileVariables ();  Compiles each variable from fTreeDrawArgsParser for the tree fTree. ;  ; void FillWeight ();  Get weight from input list, if any. ;  ; virtual Bool_t ProcessSingle (Long64_t, Int_t);  Processes a single variable from an entry. ;  ; void SetCanvas (const char *objname);  Move to a canvas named <name>_canvas; create the canvas if not existing. ;  ; void SetDrawAtt (TObject *o);  Set the drawing attributes from the input list. ;  ; void SetError (const char *sub, const char *mesg);  Sets the error status. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TGraph * fGraph;  ;  Protected Attributes inherited from TProofDraw; Int_t fDimension;  ; TString fInitialExp;  ; TTreeFormulaManager * fManager;  ; Int_t fMultiplicity;  ; Bool_t fObjEval;  ; TTreeFormula * fSelect;  ; TString fSelection;  ; TStatus * fStatus;  ; T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawGraph.html:11898,variab,variable,11898,doc/master/classTProofDrawGraph.html,https://root.cern,https://root.cern/doc/master/classTProofDrawGraph.html,1,['variab'],['variable']
Modifiability,"onst char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; void * GetSender () override;  true when resizing the pad ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; Bool_t fResizing;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttPad; Float_t fAfile;  Alignment for the file name. ;  ; Float_t fAstat;  Alignment for the statistics. ;  ; Float_t fBottomMargin;  BottomMargin. ;  ; Int_t fFrameBorderMode;  Pad frame border mode. ;  ; Width_t fFrameBorderSize;  Pad frame border size. ;  ; Color_t fFrameFillColor;  Pad frame fill color. ;  ; Style_t fFrameFillStyle;  Pad frame fill style. ;  ; Color_t fFrameLineColor;  Pad frame line color. ;  ; Style_t fFrameLineStyle;  Pad frame line style. ;  ; Width_t fFrameLineWidth;  Pad frame line width. ;  ; Float_t fLeftMargin;  LeftMargin. ;  ; Float_t fRightMargin;  RightMargin. ;  ; Float_t fTopMargin;  TopMargin. ;  ; Float_t fXfile;  X position where to draw ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualPad.html:29457,inherit,inherited,29457,doc/master/classTVirtualPad.html,https://root.cern,https://root.cern/doc/master/classTVirtualPad.html,1,['inherit'],['inherited']
Modifiability,"onst char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions;  TGroupButton (const TGroupButton &)=delete;  ; TGroupButton & operator= (const TGroupButton &)=delete;  . Additional Inherited Members;  Public Types inherited from TPad; enum  { ;   kFraming = (1ULL << ( 6 )); , kHori = (1ULL << ( 9 )); , kClipFrame = (1ULL << ( 10 )); , kPrintingPS = (1ULL << ( 11 )); , ;   kCannotMove = (1ULL << ( 12 )); , kClearAfterCR = (1ULL << ( 14 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TPad; void DestroyExternalViewer3D ();  ; Int_t DistancetoPrimitive (Int_t px, Int_t py)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGroupButton.html:43636,inherit,inherited,43636,doc/master/classTGroupButton.html,https://root.cern,https://root.cern/doc/master/classTGroupButton.html,1,['inherit'],['inherited']
Modifiability,"onst char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGTransientFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGMainFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGCompositeFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get sha",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAdvancedGraphicsDialog.html:24980,inherit,inherited,24980,doc/master/classTAdvancedGraphicsDialog.html,https://root.cern,https://root.cern/doc/master/classTAdvancedGraphicsDialog.html,60,['inherit'],['inherited']
Modifiability,"onst char *slot);  Create connection between sender and receiver. ;  . Protected Attributes; ETextJustification fAlignment;  OPTION={GetMethod=""GetAlignment"";SetMethod=""SetAlignment"";Items=(kTextLeft=""Left"",kTextCenterX=""Center"",kTextRight=""Right"")} ;  ; Atom_t fClipboard;  clipboard property ;  ; TBlinkTimer * fCurBlink;  cursor blink timer ;  ; Int_t fCursorIX;  cursor position in characters ;  ; Bool_t fCursorOn;  cursor status (on/off) ;  ; Int_t fCursorX;  cursor position in pixels ;  ; UInt_t fDefHeight;  default height ;  ; UInt_t fDefWidth;  default width ;  ; EEchoMode fEchoMode;  OPTION={GetMethod=""GetEchoMode"";SetMethod=""SetEchoMode"";Items=(kNormal=""Normal"",kNoEcho=""No Echo"",kPassword=""Password"")} ;  ; Bool_t fEdited;  kFALSE, if the line edit's contents have not been changed since the construction ;  ; Int_t fEndIX;  selection end in characters ;  ; Int_t fEndX;  selection end in pixels ;  ; FontStruct_t fFontStruct;  text font ;  ; Bool_t fFrameDrawn;  kTRUE draw itself inside a two-pixel frame, kFALSE draw without any frame ;  ; Bool_t fHasOwnFont;  kTRUE - font defined locally, kFALSE - globally ;  ; EInsertMode fInsertMode;  OPTION={GetMethod=""GetInsertMode"";SetMethod=""SetInsertMode"";Items=(kInsert=""Insert"",kReplace=""Replace"")} ;  ; Int_t fMaxLen;  maximum length of text ;  ; TGGC fNormGC;  normal drawing context ;  ; Int_t fOffset;  start position of text (in pixels) ;  ; GContext_t fSelbackGC;  selected background drawing context ;  ; Bool_t fSelectionOn;  selection status (on/off) ;  ; TGGC fSelGC;  selected text drawing context ;  ; Int_t fStartIX;  selection begin in characters ;  ; Int_t fStartX;  selection begin in pixels ;  ; TGTextBuffer * fText;  text buffer ;  ; TGToolTip * fTip;  associated tooltip ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextEntry.html:38634,inherit,inherited,38634,doc/master/classTGTextEntry.html,https://root.cern,https://root.cern/doc/master/classTGTextEntry.html,1,['inherit'],['inherited']
Modifiability,"onst char *slot);  This method allows to make a connection from any object of the same class to a single slot. ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; void * GetSender () override;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; const TClass * fClass;  ; Int_t * fCnts;  ; Bool_t fDerived;  ; Long_t fMessId;  ; Long_t * fMessIds;  ; const TObject * fMessObj;  ; Int_t fSize;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMessageHandler.html:15179,inherit,inherited,15179,doc/master/classTMessageHandler.html,https://root.cern,https://root.cern/doc/master/classTMessageHandler.html,1,['inherit'],['inherited']
Modifiability,"onst char *title, Int_t x, Int_t y, UInt_t width, UInt_t height, Option_t *opt="""");  Factory method to create RWebBrowserImp via plugin. ;  ; static TBrowserImp * NewBrowser (TBrowser *b=nullptr, const char *title=""ROOT Browser"", UInt_t width=800, UInt_t height=500, Option_t *opt="""");  Factory method to create RWebBrowserImp via plugin. ;  ;  Static Public Member Functions inherited from TBrowserImp; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions; void ShowWarning ();  Show warning that RBrowser will be shown. ;  . Private Attributes; Int_t fHeight {0};  window coordinates ;  ; std::shared_ptr< RBrowser > fWebBrowser;  actual browser used ;  ; Int_t fWidth {0};  ; Int_t fX {-1};  ; Int_t fY {-1};  . Additional Inherited Members;  Protected Member Functions inherited from TBrowserImp;  TBrowserImp (const TBrowserImp &)=delete;  ; TBrowserImp & operator= (const TBrowserImp &br)=delete;  ;  Protected Attributes inherited from TBrowserImp; TBrowser * fBrowser {nullptr};  TBrowser associated with this implementation. ;  ; Bool_t fShowCycles {kFALSE};  Show object cycle numbers in browser. ;  . #include <ROOT/RWebBrowserImp.hxx>. Inheritance diagram for ROOT::RWebBrowserImp:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RWebBrowserImp() [1/3]. RWebBrowserImp::RWebBrowserImp ; (; TBrowser * ; b = nullptr). Default constructor. ; Definition at line 25 of file RWebBrowserImp.cxx. ◆ RWebBrowserImp() [2/3]. RWebBrowserImp::RWebBrowserImp ; (; TBrowser * ; b, . const char * ; title, . UInt_t ; width, . UInt_t ; height, . Option_t * ; opt = """" . ). Constructor with width and height parameters. ; Definition at line 36 of file RWebBrowserImp.cxx. ◆ RWebBrowserImp() [3/3]. RWebBrowserImp::RWebBrowserImp ; (; TBrowser * ; b, . const char * ; title, . Int_t ; x, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RWebBrowserImp.html:3485,inherit,inherited,3485,doc/v632/classROOT_1_1RWebBrowserImp.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RWebBrowserImp.html,4,['inherit'],['inherited']
Modifiability,"onst char * ; formula, . const RooArgList & ; varList, . bool ; checkVariables = true . ). Construct a new formula. ; Parameters. [in]nameName of the formula. ; [in]formulaFormula to be evaluated. Parameters/observables are identified by name or ordinal position in varList. ; [in]varListList of variables to be passed to the formula. ; [in]checkVariablesUnused parameter. . Definition at line 194 of file RooFormula.cxx. ◆ RooFormula() [2/2]. RooFormula::RooFormula ; (; const RooFormula & ; other, . const char * ; name = nullptr . ). Copy constructor. ; Definition at line 205 of file RooFormula.cxx. Member Function Documentation. ◆ actualDependents(). RooArgSet RooFormula::actualDependents ; (; ); const. inline . Return list of arguments which are used in the formula. ; Definition at line 39 of file RooFormula.h. ◆ changeDependents(). bool RooFormula::changeDependents ; (; const RooAbsCollection & ; newDeps, . bool ; mustReplaceAll, . bool ; nameChange . ). Change used variables to those with the same name in given list. ; Parameters. [in]newDepsNew dependents to replace the old ones. ; [in]mustReplaceAllWill yield an error if one dependent does not have a replacement. ; [in]nameChangePassed down to RooAbsArg::findNewServer(const RooAbsCollection&, bool) const. . Definition at line 344 of file RooFormula.cxx. ◆ Clone(). TObject * RooFormula::Clone ; (; const char * ; newname = nullptr); const. inlineoverridevirtual . Make a clone of an object using the Streamer facility. ; If the object derives from TNamed, this function is called by TNamed::Clone. TNamed::Clone uses the optional argument to set a new name to the newly created object.; If the object class has a DirectoryAutoAdd function, it will be called at the end of the function with the parameter gDirectory. This usually means that the object will be appended to the current ROOT directory. ; Reimplemented from TObject.; Definition at line 32 of file RooFormula.h. ◆ doEval(). void RooFormula::doEval ; (; RooFit::Eval",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFormula.html:18522,variab,variables,18522,doc/master/classRooFormula.html,https://root.cern,https://root.cern/doc/master/classRooFormula.html,1,['variab'],['variables']
Modifiability,"onst char * ; formula, . int ; ndim, . int ; npar, . bool ; addToGlobList = true . ). Constructor from a full compile-able C++ expression. ; Definition at line 528 of file TFormula.cxx. ◆ TFormula() [4/4]. TFormula::TFormula ; (; const TFormula & ; formula). Definition at line 575 of file TFormula.cxx. Member Function Documentation. ◆ AddParameter(). void TFormula::AddParameter ; (; const TString & ; name, . Double_t ; value = 0 . ). inline . Definition at line 194 of file TFormula.h. ◆ AddVariable(). void TFormula::AddVariable ; (; const TString & ; name, . Double_t ; value = 0 . ). Adds variable to known variables, and reprocess formula. ; Definition at line 2569 of file TFormula.cxx. ◆ AddVariables(). void TFormula::AddVariables ; (; const TString * ; vars, . const Int_t ; size . ). Adds multiple variables. ; First argument is an array of pairs<TString,Double>, where first argument is name of variable, second argument represents value. size - number of variables passed in first argument ; Definition at line 2602 of file TFormula.cxx. ◆ Class(). static TClass * TFormula::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TFormula::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TFormula::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 289 of file TFormula.h. ◆ Clear(). void TFormula::Clear ; (; Option_t * ; option = """"). overridevirtual . Clear the formula setting expression to empty and reset the variables and parameters containers. ; Reimplemented from TObject.; Definition at line 767 of file TFormula.cxx. ◆ Compile(). Int_t TFormula::Compile ; (; const char * ; expression = """"). Compile the given expression with Cling backward compatibility method to be used in combination with the empty constructor if no expression is given , the current stored formula (retrieved with GetExpFormula()) or the title is used. ; return",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFormula.html:31267,variab,variables,31267,doc/master/classTFormula.html,https://root.cern,https://root.cern/doc/master/classTFormula.html,1,['variab'],['variables']
Modifiability,"onst char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooAbsAnaConvPdf; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooAbsPdf; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static RooNumGenConfig * defaultGeneratorConfig ();  Returns the default numeric MC generator configuration for all RooAbsReals. ;  ; static int verboseEval ();  Return global level of verbosity for p.d.f. evaluations. ;  ; static void verboseEval (Int_t stat);  Change global level of verbosity for p.d.f. evaluations. ;  ;  Static Public Member Functions inherited from RooAbsReal; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void clearEvalErrorLog ();  Clear the stack of evaluation error messages. ;  ; static const char * DeclFileName ();  ; static RooNumIntConfig * defaultIntegratorConfig ();  Returns the default numeric integration configuration for all RooAbsReals. ;  ; static std::map< constRooAbsArg *, std::pair< std::string, std::list< RooAbsReal::EvalError > > >::iterator evalErrorIter ();  ; static ErrorLoggingMode evalErrorLoggingMode ();  Return current evaluation error logging mode. ;  ; static bool hideOffset ();  ; static void logEvalError (const RooAbsReal *originator, const char *origName, const char *message, const char *serverValueString=nullptr);  Interface to insert remote error logging messages received by RooRealMPFE into current error logging stream. ;  ; static Int_t numEvalErrorItems ();  ; static Int_t numEvalErrors ();  Return the number of logged evaluation errors since the last clearing. ;  ; static void printEvalErrors (s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBMixDecay.html:60712,inherit,inherited,60712,doc/master/classRooBMixDecay.html,https://root.cern,https://root.cern/doc/master/classRooBMixDecay.html,6,['inherit'],['inherited']
Modifiability,"onst char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void FillTableOfCoSin (Double_t phi, Double_t angstep, Int_t n) const override;  Fill the table of cos and sin to prepare drawing. ;  ;  Protected Member Functions inherited from TPCON;  TPCON (const TPCON &);  copy constructor ;  ; virtual void MakeTableOfCoSin () const;  Make table of cosine and sine. ;  ; TPCON & operator= (const TPCON &);  assignment operator ;  ; void SetPoints (Double_t *points) const override;  Create PCON points. ;  ; virtual Bool_t SetSegsAndPols (TBuffer3D &buffer) const;  Set segments and polygons. ;  ;  Protected Member Functions inherited from TShape; virtual void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections) const;  We have to set kRawSize (unless already done) to allocate buffer space before kRaw can be filled. ;  ; Int_t GetBasicColor () const;  Get basic color. ;  ; Int_t ShapeDistancetoPrimitive (Int_t numPoints, Int_t px, Int_t py);  Distance to primitive. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPGON.html:17208,inherit,inherited,17208,doc/master/classTPGON.html,https://root.cern,https://root.cern/doc/master/classTPGON.html,1,['inherit'],['inherited']
Modifiability,"onst char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAtt3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; TPolyMarker3D * fMarker;  ; TGeoHMatrix * fMatrix1;  ; TGeoHMatrix * fMatrix2;  ; Double_t fOverlap;  ; TGeoVolume * fVolume1;  ; TGeoVolume * fVolume2;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Private Member Functions;  TGeoOverlap (const TGeoOverlap &)=delete;  ; TGeoOverlap & operator= (const TGeoOverlap &)=delete;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGeoOverlap.h>. Inheritance diagram for TGeoOverlap:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EOverlapType. enum TGeoOverlap::EOverlapType. EnumeratorkGeoOverlap ; kGeoExtrusion . Definition at line 39 of file TGeoOverlap.h. Constructor & Destructor Documentation. ◆ TGeoOverlap() [1/3]. TGeoOverlap::TGeoOverlap ; (; const TGeoOverlap & ; ). pri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoOverlap.html:16337,inherit,inherited,16337,doc/master/classTGeoOverlap.html,https://root.cern,https://root.cern/doc/master/classTGeoOverlap.html,1,['inherit'],['inherited']
Modifiability,"onst char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fTwistAngle;  ;  Protected Attributes inherited from TGeoTrap; Double_t fAlpha1;  ; Double_t fAlpha2;  ; Double_t fBl1;  ; Double_t fBl2;  ; Double_t fH1;  ; Double_t fH2;  ; Double_t fPhi;  ; Double_t fTheta;  ; Double_t fTl1;  ; Double_t fTl2;  ;  Protected Attributes inherited from TGeoArb8; Double_t fDz {0};  ; Double_t * fTwist {nullptr};  ; Double_t fXY [8][2];  [4] tangents of twist angles ;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg = (1ULL << ( 3 )); , kGeoVisX = (1ULL << ( 4 )); , kGeoVisY = (1ULL << ( 5 )); , ;   kGeoVisZ = (1ULL << ( 6 )); , kGeoRunTimeShape = (1ULL << ( 7 )); , kGeoInvalidShape = (1ULL << ( 8 )); , kGeoTorus = (1ULL << ( 9 )); , ;   kGeoBox = (1ULL << ( 10 )); , kGeoPara = (1ULL << ( 11 )); , kGeoSph = (1ULL << ( 12 )); , kGeoTube = (1ULL << ( 13 )); , ;   kGeoTubeSeg = (1ULL << ( 14 )); , k",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoGtra.html:23128,inherit,inherited,23128,doc/master/classTGeoGtra.html,https://root.cern,https://root.cern/doc/master/classTGeoGtra.html,5,['inherit'],['inherited']
Modifiability,"onst char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; Float_t fA;  ; Float_t fDensity;  ; Float_t fInterLength;  ; Int_t fNumber;  ; Float_t fRadLength;  ; Float_t fZ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMaterial.html:12287,inherit,inherited,12287,doc/master/classTMaterial.html,https://root.cern,https://root.cern/doc/master/classTMaterial.html,2,['inherit'],['inherited']
Modifiability,"onst char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoGlobalMagField (const TGeoGlobalMagField &)=delete;  ; TGeoGlobalMagField & operator= (const TGeoGlobalMagField &)=delete;  ; void Unlock ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; TVirtualMagField * fField {nullptr};  ; Bool_t fLock {kFALSE};  . Static Private Attributes; static TGeoGlobalMagField * fgInstance = nullptr;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGeoGlobalMagField.h>. Inheritance diagram for TGeoGlobalMagField:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGeoGlobalMagField() [1/2]. TGeoGlobalMagField::TGeoGlobalMagField ; (; const TGeoGlobalMagField & ; ). protecteddelete . ◆ TGeoGlobalM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoGlobalMagField.html:11298,inherit,inherited,11298,doc/master/classTGeoGlobalMagField.html,https://root.cern,https://root.cern/doc/master/classTGeoGlobalMagField.html,1,['inherit'],['inherited']
Modifiability,"onst char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAttText; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; void DrawDashPolyLine (Int_t npoints, TPoint *pt, UInt_t nDash, const char *pDash, const char *col, UInt_t thick);  draw dashed polyline ;  ; Int_t XtoPixel (Double_t x);  x to pixel ;  ; Int_t YtoPixel (Double_t y);  y to pixel ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TImage * fImage {nullptr};  Image. ;  ; Int_t fType {0};  PostScript workstation type. ;  ;  Protected Attributes inherited from TVirtualPS; char * fBuffer {nullptr};  ; const char * fImplicitCREsc {nullptr};  ; Int_t fLenBuffer {0};  ; Int_t fNByte {0};  ; Bool_t fPrinted {kFALSE};  ; Int_t fSizBuffer {0};  ; std::ofstream * fStream {nullptr};  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTImageDump.html:20987,inherit,inherited,20987,doc/master/classTImageDump.html,https://root.cern,https://root.cern/doc/master/classTImageDump.html,1,['inherit'],['inherited']
Modifiability,"onst char* conffile = 0, const char* confdir = 0, Int_t loglevel = 0); Start a PROOF session on a specific cluster. If cluster is 0 (the; default) then the PROOF Session Viewer GUI pops up and 0 is returned.; If cluster is """" (empty string) then we connect to a PROOF session; on the localhost (""proof://localhost""). Via conffile a specific; PROOF config file in the confir directory can be specified.; Use loglevel to set the default loging level for debugging.; The appropriate instance of TProofMgr is created, if not; yet existing. The instantiated TProof object is returned.; Use TProof::cd() to switch between PROOF sessions.; For more info on PROOF see the TProof ctor. TProofMgr * Mgr(const char* url); Get instance of the effective manager for 'url'; Return 0 on failure. void Reset(const char* url, Bool_t hard = kFALSE); Wrapper around TProofMgr::Reset(...). const TList * GetEnvVars(); Get environemnt variables. void AddEnvVar(const char* name, const char* value); Add an variable to the list of environment variables passed to proofserv; on the master and slaves. void DelEnvVar(const char* name); Remove an variable from the list of environment variables passed to proofserv; on the master and slaves. void ResetEnvVars(); Clear the list of environment variables passed to proofserv; on the master and slaves. void SaveWorkerInfo(); Save informations about the worker set in the file .workers in the working; dir. Called each time there is a change in the worker setup, e.g. by; TProof::MarkBad(). Int_t GetParameter(TCollection* c, const char* par, TString& value); Get the value from the specified parameter from the specified collection.; Returns -1 in case of error (i.e. list is 0, parameter does not exist; or value type does not match), 0 otherwise. Int_t GetParameter(TCollection* c, const char* par, Int_t& value); Get the value from the specified parameter from the specified collection.; Returns -1 in case of error (i.e. list is 0, parameter does not exist; or value type do",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProof.html:85069,variab,variable,85069,root/html528/TProof.html,https://root.cern,https://root.cern/root/html528/TProof.html,2,['variab'],"['variable', 'variables']"
Modifiability,"onst char* current = classes, *prev = classes;; 4733 *current != 0;; 4734 ++current; 4735 ) {; 4736 if (*current == ';') {; 4737 listClasses.push_back(std::string(prev, current - prev));; 4738 prev = current + 1;; 4739 }; 4740 else if (*(current + 1) == 0) {; 4741 listClasses.push_back(std::string(prev, current + 1 - prev));; 4742 prev = current + 1;; 4743 }; 4744 }; 4745 std::vector<std::string> listIncludes;; 4746 if (!includes); 4747 includes = """";; 4748 for (; 4749 const char* current = includes, *prev = includes;; 4750 *current != 0;; 4751 ++current; 4752 ) {; 4753 if (*current == ';') {; 4754 listIncludes.push_back(std::string(prev, current - prev));; 4755 prev = current + 1;; 4756 }; 4757 else if (*(current + 1) == 0) {; 4758 listIncludes.push_back(std::string(prev, current + 1 - prev));; 4759 prev = current + 1;; 4760 }; 4761 }; 4762 // Generate the temporary dictionary file; 4763 return !TCling_GenerateDictionary(listClasses, listIncludes,; 4764 std::vector<std::string>(), std::vector<std::string>());; 4765}; 4766 ; 4767////////////////////////////////////////////////////////////////////////////////; 4768/// Return pointer to cling Decl of global/static variable that is located; 4769/// at the address given by addr.; 4770 ; 4771TInterpreter::DeclId_t TCling::GetDataMember(ClassInfo_t *opaque_cl, const char *name) const; 4772{; 4773 R__LOCKGUARD(gInterpreterMutex);; 4774 DeclId_t d;; 4775 TClingClassInfo *cl = (TClingClassInfo*)opaque_cl;; 4776 ; 4777 // Could trigger deserialization of decls.; 4778 cling::Interpreter::PushTransactionRAII RAII(GetInterpreterImpl());; 4779 ; 4780 if (cl) {; 4781 d = cl->GetDataMember(name);; 4782 // We check if the decl of the data member has an annotation which indicates; 4783 // an ioname.; 4784 // In case this is true, if the name requested is not the ioname, we; 4785 // return 0, as if the member did not exist. In some sense we override; 4786 // the information in the TClassInfo instance, isolating the typesystem in; 4787",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCling_8cxx_source.html:185459,variab,variable,185459,doc/master/TCling_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCling_8cxx_source.html,1,['variab'],['variable']
Modifiability,"onst char* filename); virtual voidListGui(const char* filename); TRecorderInactive&operator=(const TRecorderInactive&); virtual voidTRecorderState::Pause(TRecorder*); virtual voidPrevCanvases(const char* filename, Option_t* option); virtual Bool_tReplay(TRecorder* r, const char* filename, Bool_t showMouseCursor, TRecorder::EReplayModes mode); virtual voidTRecorderState::ReplayStop(TRecorder*); virtual voidTRecorderState::Resume(TRecorder*); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStart(TRecorder* r, const char* filename, Option_t* option, Window_t* w = 0, Int_t winCount = 0); virtual voidTRecorderState::Stop(TRecorder*, Bool_t); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TRecorderInactive(); TRecorderInactive(const TRecorderInactive&). protected:. voidTRecorderState::ChangeState(TRecorder* r, TRecorderState* s, Bool_t deletePreviousState). Data Members; private:. TSeqCollection*fCollect. Class Charts. Inheritance Chart:. TRecorderState. ←; TRecorderInactive. Function documentation; void Start(TRecorder* r, const char* filename, Option_t* option, Window_t* w = 0, Int_t winCount = 0); Switches from INACTIVE state to RECORDING and starts recording. Bool_t Replay(TRecorder* r, const char* filename, Bool_t showMouseCursor, TRecorder::EReplayModes mode); Switches from INACTIVE state of recorder to REPLAYING; Return kTRUE if replaying has started or kFALSE if it is not possible; (bad file etc.). void ListCmd(const char* filename); Prints out commandline events recorded in given file. void ListGui(const char* filename); Prints out GUI events recorded in given file. void DumpRootEvent(TRecGuiEvent* e, Int_t n); Prints out attributes of one GUI event TRecGuiEvent *e; Int_n n is number of event if called in cycle. void PrevCanvases(const char* filename, Option_t* option); Save previous canvases in a .root file. TRecorder & operator=(const TRecorderInactive& ). TRecorder::ERecorderState GetState() const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRecorderInactive.html:1663,Inherit,Inheritance,1663,root/html602/TRecorderInactive.html,https://root.cern,https://root.cern/root/html602/TRecorderInactive.html,2,['Inherit'],['Inheritance']
Modifiability,"onst char* fmt, va_list va) const; virtual voidDoFill(Long64_t entry, Double_t w, const Double_t* v); voidTProofDraw::FillWeight(); voidTObject::MakeZombie(); virtual Bool_tTProofDraw::ProcessSingle(Long64_t, Int_t); voidTProofDraw::SetCanvas(const char* objname); voidTProofDraw::SetDrawAtt(TObject* o); voidTProofDraw::SetError(const char* sub, const char* mesg). Data Members; public:. enum TProofDraw::[unnamed] { kWarn; };; enum TSelector::EAbort { kContinue; kAbortProcess; kAbortFile; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortAbort status; Int_tTProofDraw::fDimensionDimension of the current expression; TEventList*fElistevent list; TList*fEventListsa list of EventLists; TStringTProofDraw::fInitialExp; TList*TSelector::fInputList of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObject!Current object if processing object (vs. TTree); TStringTSelector::fOptionOption given to TTree::Process; TSelectorList*TSelector::fOutput!List of objects created during processing; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusSelector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TProofDrawEventList(); Destructor. void Init(TTree* ); See TProofDraw::Init(). void SlaveBegin(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofDrawEventList.html:7089,variab,variability,7089,root/html534/TProofDrawEventList.html,https://root.cern,https://root.cern/root/html534/TProofDrawEventList.html,2,['variab'],['variability']
Modifiability,"onst char* fmt, va_list va) const; virtual voidDoFill(Long64_t entry, Double_t w, const Double_t* v); voidTProofDraw::FillWeight(); voidTObject::MakeZombie(); virtual Bool_tTProofDraw::ProcessSingle(Long64_t, Int_t); voidTProofDraw::SetCanvas(const char* objname); voidTProofDraw::SetDrawAtt(TObject* o); voidTProofDraw::SetError(const char* sub, const char* mesg). Data Members; public:. enum TProofDraw::[unnamed] { kWarn; };; enum TSelector::EAbort { kContinue; kAbortProcess; kAbortFile; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortabort status; Int_tTProofDraw::fDimensionDimension of the current expression; TEventList*fElistevent list; TList*fEventListsa list of EventLists; TStringTProofDraw::fInitialExp; TList*TSelector::fInputlist of objects available during processing; TTreeFormulaManager*TProofDraw::fManager; Int_tTProofDraw::fMultiplicityIndicator of the variability of the size of entries; Bool_tTProofDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObjectcurrent object if processing object (vs. TTree); TStringTSelector::fOptionoption given to TTree::Process; TSelectorList*TSelector::fOutputlist of objects created during processing; TTreeFormula*TProofDraw::fSelectPointer to selection formula; TStringTProofDraw::fSelection; TStatus*TProofDraw::fStatus; Long64_tTSelector::fStatusselector status; TTree*TProofDraw::fTree; TTreeDrawArgsParserTProofDraw::fTreeDrawArgsParser; TTreeFormula*TProofDraw::fVar[4]Pointer to variable formula; Double_tTProofDraw::fWeightGlobal weight for fill actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~TProofDrawEventList(); Destructor. void Init(TTree* ); See TProofDraw::Init(). void SlaveBegin(TT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TProofDrawEventList.html:7023,variab,variability,7023,root/html530/TProofDrawEventList.html,https://root.cern,https://root.cern/root/html530/TProofDrawEventList.html,3,['variab'],['variability']
Modifiability,"onst char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. Long64_tfBytesRead; Double_tfCpuTime; Long64_tfEventsProcessed; TStringfEvtNodenode on which the event was generated; TStringfFileClass; TStringfFileName; Bool_tfIsOk; Bool_tfIsStart; Double_tfLatency; Long64_tfLen; TStringfNodeName; Double_tfProcTime; TStringfSlave; TStringfSlaveName; TTimeStampfTimeStamptime offset from start of run; TVirtualPerfStats::EEventTypefType; static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPerfEvent(TTimeStamp* offset = 0); Constructor. Int_t Compare(const TObject* obj) const; Compare method. Must return -1 if this is smaller than obj,; 0 if objects are equal and 1 if this is larger than obj. void Print(Option_t* option = """") const; Dump content of this instance. TPerfEvent(TTimeStamp* offset = 0). virtual ~TPerfEvent(); {}. Bool_t IsSortable() const; { return kTRUE; }. » Author: Kristjan Gulbrandsen 11/05/04 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-06-02 16:27; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TPerfEvent.html:6025,Inherit,Inheritance,6025,root/html604/TPerfEvent.html,https://root.cern,https://root.cern/root/html604/TPerfEvent.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. Long64_tfBytesRead; Double_tfCpuTime; Long64_tfEventsProcessed; TStringfEvtNodenode on which the event was generated; TStringfFileClass; TStringfFileName; Bool_tfIsOk; Bool_tfIsStart; Double_tfLatency; Long64_tfLen; TStringfNodeName; Double_tfProcTime; TStringfSlave; TStringfSlaveName; TTimeStampfTimeStamptime offset from start of run; TVirtualPerfStats::EEventTypefType; static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPerfEvent(TTimeStamp* offset = 0); Constructor. Int_t Compare(const TObject* obj) const; Compare method. Must return -1 if this is smaller than obj,; 0 if objects are equal and 1 if this is larger than obj. void Print(Option_t* option = """") const; Dump content of this instance. TPerfEvent(TTimeStamp* offset = 0). virtual ~TPerfEvent(); {}. Bool_t IsSortable() const; { return kTRUE; }. » Author: Kristjan Gulbrandsen 11/05/04 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-06-30 15:25; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPerfEvent.html:6025,Inherit,Inheritance,6025,root/html602/TPerfEvent.html,https://root.cern,https://root.cern/root/html602/TPerfEvent.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TPBHandleDSType::EHandleDSTypekCheckCache; static TPBHandleDSType::EHandleDSTypekCopyFiles; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TPBHandleDSType::EHandleDSTypekReleaseCache; static TPBHandleDSType::EHandleDSTypekRemoveFiles; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. TStringfName; TPBHandleDSType::EHandleDSTypefType. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; EReadType GetType() const; { return fType; }. const char * GetName() const; { return fName; }. TPBHandleDSType(EHandleDSType type = kReleaseCache); { }. virtual ~TPBHandleDSType(); { }. Bool_t IsReleaseCache() const; { return (fType == kReleaseCache) ? kTRUE : kFALSE; }. Bool_t IsCheckCache() const; { return (fType == kCheckCache) ? kTRUE : kFALSE; }. Bool_t IsRemoveFiles() const; { return (fType == kRemoveFiles) ? kTRUE : kFALSE; }. Bool_t IsCopyFiles() const; { return (fType == kCopyFiles) ? kTRUE : kFALSE; }. » Author: G. Ganis Oct 2010 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/proof:$Id$ » Last generated: 2015-06-30 15:23; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPBHandleDSType.html:6112,Inherit,Inheritance,6112,root/html602/TPBHandleDSType.html,https://root.cern,https://root.cern/root/html602/TPBHandleDSType.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TPBHandleDSType::EHandleDSTypekCheckCache; static TPBHandleDSType::EHandleDSTypekCopyFiles; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TPBHandleDSType::EHandleDSTypekReleaseCache; static TPBHandleDSType::EHandleDSTypekRemoveFiles; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. TStringfName; TPBHandleDSType::EHandleDSTypefType. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; EReadType GetType() const; { return fType; }. const char * GetName() const; { return fName; }. TPBHandleDSType(EHandleDSType type = kReleaseCache); { }. virtual ~TPBHandleDSType(); { }. Bool_t IsReleaseCache() const; { return (fType == kReleaseCache) ? kTRUE : kFALSE; }. Bool_t IsCheckCache() const; { return (fType == kCheckCache) ? kTRUE : kFALSE; }. Bool_t IsRemoveFiles() const; { return (fType == kRemoveFiles) ? kTRUE : kFALSE; }. Bool_t IsCopyFiles() const; { return (fType == kCopyFiles) ? kTRUE : kFALSE; }. » Author: G. Ganis Oct 2010 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/proof:$Id$ » Last generated: 2015-09-08 17:48; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TPBHandleDSType.html:6112,Inherit,Inheritance,6112,root/html604/TPBHandleDSType.html,https://root.cern,https://root.cern/root/html604/TPBHandleDSType.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst char* fmt, va_list va) const; voidTObject::MakeZombie(); voidSetBins(const RooAbsCollection& coll, Int_t numBins) const; voidSetupBasicUsage(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. RooArgList*fAxeswhich variables to put on each axis; RooArgSetfChainParamsparameters to store in the chain (if not specified they are all of them ); RooArgSetfConditionalObsconditional observables; RooAbsData*fDatapointer to the data (owned by the workspace); Double_tfDeltaacceptable error for Keys cutoffs being equal; Double_tfEpsilonacceptable error for Keys interval determination; RooStats::MCMCInterval::IntervalTypefIntervalTypetype of interval to find; Double_tfLeftSideTFleft side tail-fraction for interval; TStringTNamed::fNameobject identifier; RooArgSetfNuisParamsnuisance parameters for interval (not really used); Int_tfNumBinsset the number of bins to create for each; Int_tfNumBurnInStepsnumber of iterations to discard as burn-in, starting from the first; Int_tfNumItersnumber of iterations to run metropolis algorithm; RooArgSetfPOIparameters of interest for interval; RooAbsPdf*fPdfpointer to common PDF (owned by the workspace); RooAbsPdf*fPriorPdfpointer to prior PDF (owned by the workspace); RooStats::ProposalFunction*fPropFuncProposal function for MCMC integration; Double_tfSizesize of the test (eg. specified rate of Type I error); TStringTNamed::fTitleobject title; Bool_tfUseKeyswhether to use kernel estimation to determine interval; Bool_tfUseSparseHistwhether to use sparse histogram (if using hist at all). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MCMCCalculator(). MCMCCalculator(RooAbsData& data, const RooStats::ModelConfig& model). void SetModel(const RooStats::ModelConfig&",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__MCMCCalculator.html:7438,variab,variables,7438,root/html534/RooStats__MCMCCalculator.html,https://root.cern,https://root.cern/root/html534/RooStats__MCMCCalculator.html,2,['variab'],['variables']
Modifiability,"onst char* location, const char* fmt, va_list va) const; voidTMVA::Configurable::EnableLooseOptions(Bool_t b = kTRUE); voidForceNetworkCalculations(); voidForceNetworkInputs(const TMVA::Event* ev, Int_t ignoreIndex = -1); virtual voidTMVA::IMethod::GetHelpMessage() const; TMVA::TNeuron*GetInputNeuron(Int_t index); const TString&TMVA::MethodBase::GetInternalVarName(Int_t ivar) const; Double_tGetNetworkOutput(); const TString&TMVA::MethodBase::GetOriginalVarName(Int_t ivar) const; TMVA::TNeuron*GetOutputNeuron(Int_t index = 0); const TString&TMVA::Configurable::GetReferenceFile() const; static TMVA::MethodBase*TMVA::MethodBase::GetThisBase(); const TString&TMVA::MethodBase::GetWeightFileDir() const; Bool_tTMVA::MethodBase::HasTrainingTree() const; Bool_tTMVA::MethodBase::Help() const; Bool_tTMVA::MethodBase::IgnoreEventsWithNegWeightsInTraining() const; Bool_tTMVA::MethodBase::IsConstructedFromWeightFile() const; Bool_tTMVA::MethodBase::IsNormalised() const; TMVA::MsgLogger&TMVA::Configurable::Log() const; Bool_tTMVA::Configurable::LooseOptionCheckingEnabled() const; virtual voidMakeClassSpecific(ostream&, const TString&) const; virtual voidTMVA::MethodBase::MakeClassSpecificHeader(ostream&, const TString& = """") const; voidTObject::MakeZombie(); voidTMVA::MethodBase::NoErrorCalc(Double_t*const err, Double_t*const errUpper); Int_tNumCycles(); vector<Int_t>*ParseLayoutString(TString layerSpec); voidPrintMessage(TString message, Bool_t force = kFALSE) const; voidTMVA::Configurable::ResetSetFlag(); voidTMVA::MethodBase::SetNormalised(Bool_t norm); voidTMVA::MethodBase::SetWeightFileDir(TString fileDir); voidTMVA::MethodBase::SetWeightFileName(TString); voidTMVA::MethodBase::Statistics(TMVA::Types::ETreeType treeType, const TString& theVarName, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&, Double_t&); Bool_tTMVA::MethodBase::TxtWeightsOnly() const; Bool_tTMVA::MethodBase::Verbose() const; voidWaitForKeyboard(); voidTMVA::Configurable::WriteOptionsReferenceToFile().",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodANNBase.html:15166,Config,Configurable,15166,root/html602/TMVA__MethodANNBase.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodANNBase.html,8,"['Config', 'layerS']","['Configurable', 'layerSpec']"
Modifiability,"onst char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TListfDirs; TListfFiles; Int_tTHtml::TFileSysEntry::fLevellevel of directory; TStringTHtml::TFileSysEntry::fNamename of the element; THtml::TFileSysDir*THtml::TFileSysEntry::fParentparent directory. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Recurse(THtml::TFileSysDB* db, const char* path); Recursively fill entries by parsing the contents of path. TFileSysDir(const char* name, THtml::TFileSysDir* parent); { fFiles.SetOwner(); fDirs.SetOwner(); }. const TList* GetFiles() const; { return &fFiles; }. const TList* GetSubDirs() const; { return &fDirs; }. TFileSysDir(const char* name, THtml::TFileSysDir* parent); {}. TFileSysDir(const char* name, THtml::TFileSysDir* parent); { Fill(); }. TString fInputPath; // directories to look for classes; prepended to Decl/ ImplFileName(). » Author: Nenad Buncic 18/10/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/html:$Id$ » Last generated: 2015-06-30 15:12; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THtml__TFileSysDir.html:6607,Inherit,Inheritance,6607,root/html602/THtml__TFileSysDir.html,https://root.cern,https://root.cern/root/html602/THtml__TFileSysDir.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TListfDirs; TListfFiles; Int_tTHtml::TFileSysEntry::fLevellevel of directory; TStringTHtml::TFileSysEntry::fNamename of the element; THtml::TFileSysDir*THtml::TFileSysEntry::fParentparent directory. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Recurse(THtml::TFileSysDB* db, const char* path); Recursively fill entries by parsing the contents of path. TFileSysDir(const char* name, THtml::TFileSysDir* parent); { fFiles.SetOwner(); fDirs.SetOwner(); }. const TList* GetFiles() const; { return &fFiles; }. const TList* GetSubDirs() const; { return &fDirs; }. TFileSysDir(const char* name, THtml::TFileSysDir* parent); {}. TFileSysDir(const char* name, THtml::TFileSysDir* parent); { Fill(); }. TString fInputPath; // directories to look for classes; prepended to Decl/ ImplFileName(). » Author: Nenad Buncic 18/10/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/html:$Id$ » Last generated: 2015-09-08 17:45; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/THtml__TFileSysDir.html:6607,Inherit,Inheritance,6607,root/html604/THtml__TFileSysDir.html,https://root.cern,https://root.cern/root/html604/THtml__TFileSysDir.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TMVA::MsgLogger*fLogger! message logger. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; PDEFoamKernelBase(); Default constructor for streamer. PDEFoamKernelBase(const TMVA::PDEFoamKernelBase& ); Copy constructor. ~PDEFoamKernelBase(); Destructor. Float_t Estimate(TMVA::PDEFoam* , vector<Float_t>& , TMVA::ECellValue ); kernel estimator. » Author: Dominik Dannheim, Alexander Voigt » Copyright (c) 2010: *; » Last changed: root/tmva $Id$ » Last generated: 2015-06-02 16:17; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMVA__PDEFoamKernelBase.html:6298,Inherit,Inheritance,6298,root/html604/TMVA__PDEFoamKernelBase.html,https://root.cern,https://root.cern/root/html604/TMVA__PDEFoamKernelBase.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TMVA::MsgLogger*fLogger! message logger. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; PDEFoamKernelBase(); Default constructor for streamer. PDEFoamKernelBase(const TMVA::PDEFoamKernelBase& ); Copy constructor. ~PDEFoamKernelBase(); Destructor. Float_t Estimate(TMVA::PDEFoam* , vector<Float_t>& , TMVA::ECellValue ); kernel estimator. » Author: Dominik Dannheim, Alexander Voigt » Copyright (c) 2010: *; » Last changed: root/tmva $Id$ » Last generated: 2015-06-30 15:17; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__PDEFoamKernelBase.html:6290,Inherit,Inheritance,6290,root/html602/TMVA__PDEFoamKernelBase.html,https://root.cern,https://root.cern/root/html602/TMVA__PDEFoamKernelBase.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. TGGC(GCValues_t* values, Bool_t calledByGCPool); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; TStringGetMaskString() const; voidTObject::MakeZombie(); voidUpdateValues(GCValues_t* v). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum TRefCnt::EReferenceFlag { kStaticInit; };. protected:. GContext_tfContextgraphics context handle; UInt_tTRefCnt::fRefs(1 less than) number of references; GCValues_tfValuesgraphics context values + mask. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGGC(GCValues_t* values, Bool_t calledByGCPool); Create a graphics context (only called via TGGCPool::GetGC()). TGGC(GCValues_t* values = 0); Create a graphics context, registers GC in GCPool. TGGC(const TGGC& g); Copy a graphics context. ~TGGC(); Delete graphics context. TGGC & operator=(const TGGC& rhs); Graphics context assignment operator. GContext_t operator()() const; Not inline due to a bug in g++ 2.96 20000731 (Red Hat Linux 7.0). void UpdateValues(GCValues_t* v); Update values + mask. void SetAttributes(GCValues_t* values); Set attributes as specified in the values structure. void SetFunction(EGraphicsFunction v); Set graphics context drawing function. void SetPlaneMask(ULong_t v); Set plane mask. void SetForeground(Pixel_t v); Set foreground color. void SetBackground(Pixel_t v); Set background color. void SetLineWidth(Int_t v); Set line width. void SetLineStyle(Int_t v); Set line style (kLineSolid, kLineOnOffDash, kLineDouble",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGGC.html:7150,Inherit,Inheritance,7150,root/html532/TGGC.html,https://root.cern,https://root.cern/root/html532/TGGC.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; voidFormFrom(TTreeViewer* tv); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*GetUserCode() const; const char*GetX() const; const char*GetY() const; const char*GetZ() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; Bool_tHasUserCode() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Bool_tMustExecuteCode() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTVRecord.html:2515,Inherit,InheritsFrom,2515,root/html532/TTVRecord.html,https://root.cern,https://root.cern/root/html532/TTVRecord.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; voidFormFrom(TTreeViewer* tv); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*GetUserCode() const; const char*GetX() const; const char*GetY() const; const char*GetZ() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; Bool_tHasUserCode() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Bool_tMustExecuteCode() const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TTVRecord&operator=(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTVRecord.html:2497,Inherit,InheritsFrom,2497,root/html602/TTVRecord.html,https://root.cern,https://root.cern/root/html602/TTVRecord.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TH1*GetHistogram() const; virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; Int_tGetNPeaks() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_t*GetPositionX() const; Double_t*GetPositionY() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TSpectrum2&operator=(const TSpectrum2&); virtual void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSpectrum2.html:4731,Inherit,InheritsFrom,4731,root/html602/TSpectrum2.html,https://root.cern,https://root.cern/root/html602/TSpectrum2.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TH1*GetHistogram() const; virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; Int_tGetNPeaks() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_t*GetPositionX() const; Double_t*GetPositionY() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSpectrum.html:4241,Inherit,InheritsFrom,4241,root/html602/TSpectrum.html,https://root.cern,https://root.cern/root/html602/TSpectrum.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual const RooArgSet*generateEvent(UInt_t remaining, Double_t& resampleRatio); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tgetFuncMax(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tRooAbsNumGenerator::isValid() const; Bool_tRooAbsNumGenerator::isVerbose() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAcceptReject.html:3598,Inherit,InheritsFrom,3598,root/html534/RooAcceptReject.html,https://root.cern,https://root.cern/root/html534/RooAcceptReject.html,1,['Inherit'],['InheritsFrom']
Modifiability,"onst char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual const RooArgSet*generateEvent(UInt_t remaining, Double_t& resampleRatio); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tgetFuncMax(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tRooAbsNumGenerator::isValid() const; Bool_tRooAbsNumGenerator::isVerbose() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAcceptReject.html:3381,Inherit,InheritsFrom,3381,root/html602/RooAcceptReject.html,https://root.cern,https://root.cern/root/html602/RooAcceptReject.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual const RooArgSet*generateEvent(UInt_t remaining, Double_t& resampleRatio); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tgetFuncMax(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tisValid() const; Bool_tisVerbose() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsNumGenerator.html:3326,Inherit,InheritsFrom,3326,root/html534/RooAbsNumGenerator.html,https://root.cern,https://root.cern/root/html534/RooAbsNumGenerator.html,1,['Inherit'],['InheritsFrom']
Modifiability,"onst char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual const RooArgSet*generateEvent(UInt_t remaining, Double_t& resampleRatio); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tgetFuncMax(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tisValid() const; Bool_tisVerbose() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsNumGenerator.html:3326,Inherit,InheritsFrom,3326,root/html602/RooAbsNumGenerator.html,https://root.cern,https://root.cern/root/html602/RooAbsNumGenerator.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. TOrdCollection*fToggleslist of TToggle objects. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TToggleGroup(); Constructor. TToggleGroup(const TToggleGroup& ); Copy constructor. TToggleGroup & operator=(const TToggleGroup& ); Assignment operator. ~TToggleGroup(); Deletes togglegroup but does not disposes toggled objects!. Int_t Add(TToggle* t, Bool_t select = 1); Add a new toggle. Int_t InsertAt(TToggle* t, Int_t pos, Bool_t select = 1); Add a new toggle at a specific position. void Select(Int_t idx); Select a toggle. void Select(TToggle* t); Selector a toggle. void DeleteAll(); Disposes of all objects and clears array. Int_t GetTogglesCount(); {return fToggles->GetSize();}. TToggle * At(Int_t idx); {return (TToggle*)fToggles->At(idx);}. void Remove(TToggle* t); {fToggles->Remove(t);}. void Remove(Int_t pos); {fToggles->RemoveAt(pos);}. TToggle * First(); {return (TToggle*)fToggles->First();}. TToggle * Last(); {return (TToggle*)fToggles->Last();}. Int_t IndexOf(TToggle* t); {return fToggles->IndexOf(t);}. » Author: Piotr Golonk",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TToggleGroup.html:6037,Inherit,Inheritance,6037,root/html532/TToggleGroup.html,https://root.cern,https://root.cern/root/html532/TToggleGroup.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. TLeaf(const TLeaf&); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); TLeaf&operator=(const TLeaf&). Data Members; public:. enum { kIndirectAddress; kNewValue; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TBranch*fBranch! Pointer to supporting branch (we do not own the branch); Bool_tfIsRange(=kTRUE if leaf has a range, kFALSE otherwise); Bool_tfIsUnsigned(=kTRUE if unsigned, kFALSE otherwise); TLeaf*fLeafCountPointer to Leaf count if variable length (we do not own the counter); Int_tfLenNumber of fixed length elements; Int_tfLenTypeNumber of bytes for this data type; TStringTNamed::fNameobject identifier; Int_tfNdata! Number of elements in fAddress data buffer; Int_tfOffsetOffset in ClonesArray object (if one); TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TLeaf(). TLeaf(TBranch* parent, const char* name, const char* type); Create a Leaf. See the TTree and TBranch constructors for explanation of parameters. TLeaf(const TLeaf& ); copy constructor. TLeaf& operator=(const TLeaf& ); assignement operator. ~TLeaf(); -- Destructor. void Browse(TBrowser* b); Browse the content of this leaf. void FillBasket(TBuffer& b); -- Pack leaf elements in Basket output buffer. TLeaf* GetLeafCounter(Int_t& countval) const; -- Return a pointer to the counter of this leaf. If leaf name has the form var[nelem], where nelem is alphanumeric, then; If nelem is a leaf name, return countval = 1 and the po",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TLeaf.html:6809,variab,variable,6809,root/html528/TLeaf.html,https://root.cern,https://root.cern/root/html528/TLeaf.html,1,['variab'],['variable']
Modifiability,"onst char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. TLeaf(const TLeaf&); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); TLeaf&operator=(const TLeaf&). Data Members; public:. enum { kIndirectAddress; kNewValue; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TBranch*fBranch! Pointer to supporting branch (we do not own the branch); Bool_tfIsRange(=kTRUE if leaf has a range, kFALSE otherwise); Bool_tfIsUnsigned(=kTRUE if unsigned, kFALSE otherwise); TLeaf*fLeafCountPointer to Leaf count if variable length (we do not own the counter); Int_tfLenNumber of fixed length elements; Int_tfLenTypeNumber of bytes for this data type; TStringTNamed::fNameobject identifier; Int_tfNdata! Number of elements in fAddress data buffer; Int_tfOffsetOffset in ClonesArray object (if one); TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TLeaf(). TLeaf(TBranch* parent, const char* name, const char* type); Create a Leaf. See the TTree and TBranch constructors for explanation of parameters. TLeaf(const TLeaf& ); copy constructor. TLeaf& operator=(const TLeaf& ); assignement operator. ~TLeaf(); -- Destructor. void Browse(TBrowser* b); Browse the content of this leaf. void FillBasket(TBuffer& b); -- Pack leaf elements in Basket output buffer. TLeaf* GetLeafCounter(Int_t& countval) const; -- Return a pointer to the counter of this leaf. If leaf name has the form var[nelem], where nelem is alphanumeric, then; if nelem is a leaf name, return countval = 1 and the po",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TLeaf.html:6877,variab,variable,6877,root/html530/TLeaf.html,https://root.cern,https://root.cern/root/html530/TLeaf.html,1,['variab'],['variable']
Modifiability,"onst char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. TLeaf(const TLeaf&); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); TLeaf&operator=(const TLeaf&). Data Members; public:. enum { kIndirectAddress; kNewValue; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TBranch*fBranch! Pointer to supporting branch (we do not own the branch); Bool_tfIsRange(=kTRUE if leaf has a range, kFALSE otherwise); Bool_tfIsUnsigned(=kTRUE if unsigned, kFALSE otherwise); TLeaf*fLeafCountPointer to Leaf count if variable length (we do not own the counter); Int_tfLenNumber of fixed length elements; Int_tfLenTypeNumber of bytes for this data type; TStringTNamed::fNameobject identifier; Int_tfNdata! Number of elements in fAddress data buffer; Int_tfOffsetOffset in ClonesArray object (if one); TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TLeaf(). TLeaf(TBranch* parent, const char* name, const char* type); Create a Leaf. See the TTree and TBranch constructors for explanation of parameters. TLeaf(const TLeaf& ); copy constructor. TLeaf& operator=(const TLeaf& ); assignment operator. ~TLeaf(); -- Destructor. void Browse(TBrowser* b); Browse the content of this leaf. void FillBasket(TBuffer& b); -- Pack leaf elements in Basket output buffer. TLeaf* GetLeafCounter(Int_t& countval) const; -- Return a pointer to the counter of this leaf. If leaf name has the form var[nelem], where nelem is alphanumeric, then; if nelem is a leaf name, return countval = 1 and the poi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TLeaf.html:6877,variab,variable,6877,root/html532/TLeaf.html,https://root.cern,https://root.cern/root/html532/TLeaf.html,4,['variab'],['variable']
Modifiability,"onst char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; char*GetBuffer() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tGetFullSize() const; virtual const char*TObject::GetIconName() const; Int_t*GetLen() const; Int_tGetLen(Int_t) const; virtual const char*TObject::GetName() const; Int_tGetNoElem() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Long64_t*GetPos() const; Long64_tGetPos(Int_t) const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TFPBlock&operator=(cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFPBlock.html:2771,Inherit,InheritsFrom,2771,root/html532/TFPBlock.html,https://root.cern,https://root.cern/root/html532/TFPBlock.html,1,['Inherit'],['InheritsFrom']
Modifiability,"onst char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const Double_t*GetCurrentDirection() const; const Double_t*GetCurrentPoint() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tGetStep() const; virtual const char*TObject::GetTitle() const; Double_tGetTotalCurvature() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetXYcurvature() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInitDirection(Double_t* dir, Bool_t is_normalized = kTRUE); voidInitDirection(Double_t dirx, Double_t diry, Double_t dirz, Bool_t is_normalized = kTRUE); voidInitPoint(Double_t* point); voidInitPoint(Double_t x0, Double_t y0, Double_t z0); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tIsRightHanded() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoHelix.html:3684,Inherit,InheritsFrom,3684,root/html532/TGeoHelix.html,https://root.cern,https://root.cern/root/html532/TGeoHelix.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const Double_t*GetCurrentDirection() const; const Double_t*GetCurrentPoint() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tGetStep() const; virtual const char*TObject::GetTitle() const; Double_tGetTotalCurvature() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetXYcurvature() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInitDirection(Double_t* dir, Bool_t is_normalized = kTRUE); voidInitDirection(Double_t dirx, Double_t diry, Double_t dirz, Bool_t is_normalized = kTRUE); voidInitPoint(Double_t* point); voidInitPoint(Double_t x0, Double_t y0, Double_t z0); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tIsRightHanded() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoHelix.html:3595,Inherit,InheritsFrom,3595,root/html602/TGeoHelix.html,https://root.cern,https://root.cern/root/html602/TGeoHelix.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Int_tGetBufferSize() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Long64_tGetPrefetchedBlocks() const; virtual TFilePrefetch*GetPrefetchObj(); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Int_tGetUnzipBuffer(char**, Long64_t, Int_t, Bool_t*); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsAsyncReading() const; virtual Bool_tIsEnablePrefetching() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsLearning() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFileCacheRead.html:3204,Inherit,InheritsFrom,3204,root/html532/TFileCacheRead.html,https://root.cern,https://root.cern/root/html532/TFileCacheRead.html,1,['Inherit'],['InheritsFrom']
Modifiability,"onst char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const char*GetRegisteredType() const; const char*GetReplyDomain() const; const char*GetServiceName() const; virtual const char*TObject::GetTitle() const; const char*GetTXTRecords() const; Int_tGetTXTRecordsLength() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TBonjourRecord&operator=(const T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TBonjourRecord.html:2858,Inherit,InheritsFrom,2858,root/html532/TBonjourRecord.html,https://root.cern,https://root.cern/root/html532/TBonjourRecord.html,1,['Inherit'],['InheritsFrom']
Modifiability,"onst char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual const RooArgSet*generateEvent(UInt_t remaining, Double_t& resampleRatio); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tRooAbsNumGenerator::getFuncMax(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tRooAbsNumGenerator::isValid() const; Bool_tRooAbsNumGenerator::isVerbose() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooFoamGenerator.html:3641,Inherit,InheritsFrom,3641,root/html532/RooFoamGenerator.html,https://root.cern,https://root.cern/root/html532/RooFoamGenerator.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual const RooArgSet*generateEvent(UInt_t remaining, Double_t& resampleRatio); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tRooAbsNumGenerator::getFuncMax(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tRooAbsNumGenerator::isValid() const; Bool_tRooAbsNumGenerator::isVerbose() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooFoamGenerator.html:3420,Inherit,InheritsFrom,3420,root/html602/RooFoamGenerator.html,https://root.cern,https://root.cern/root/html602/RooFoamGenerator.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum EGradientType { kSimple; kExtended; };; enum TColorGradient::ECoordinateMode { kPadMode; kObjectBoundingMode; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; Int_tTColor::fNumberColor number identifier; TStringTNamed::fTitleobject title. private:. TColorGradient::PointfEnd; Double_tfR1; Double_tfR2; TColorGradient::PointfStart; TRadialGradient::EGradientTypefType. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TRadialGradient(). TRadialGradient(Color_t newColor, UInt_t nPoints, const Double_t* points, const Color_t* colorIndices, TColorGradient::ECoordinateMode mode = kObjectBoundingMode). TRadialGradient(Color_t newColor, UInt_t nPoints, const Double_t* points, const Double_t* colors, TColorGradient::ECoordinateMode mode = kObjectBoundingMode). void SetStartEndR1R2(const TColorGradient::Point& p1, Double_t r1, const TColorGradient::Point& p2, Double_t r2). const TColorGradient::Point & GetStart() const. Double_t GetR1() const. const TColorGradient::Point & GetEnd() const. Double_t GetR2() const. void SetRadialGradient(const TColorGradient::Point& center, Double_t radius). const TColorGradient::Point & GetCenter() const. Double_t GetRadius() const. TRadialGradient(). EGradientType GetGradientType() const; Extended gradient. » Last changed: root/base:$Id$ » Last generated: 2015-03-14 16:48; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TRadialGradient.html:11349,Extend,Extended,11349,root/html534/TRadialGradient.html,https://root.cern,https://root.cern/root/html534/TRadialGradient.html,1,['Extend'],['Extended']
Modifiability,"onst char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. ULong64_t*fData[fNumData] data; Int_tTNDArray::fNdimPlusOneNumber of dimensions plus one; intfNumDatanumber of bins, product of fSizes; Long64_t*TNDArray::fSizes[fNdimPlusOne] bin count. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Init(Int_t ndim, const Int_t* nbins, bool addOverflow = false). void Reset(Option_t* = """"). Double_t AtAsDouble(ULong64_t linidx) const. void SetAsDouble(ULong64_t linidx, Double_t value). void AddAt(ULong64_t linidx, Double_t value). TNDArray& operator=(const TNDArrayT<ULong64_t>& ). TNDArrayRef<T> operator[](Int_t idx) const. T At(const Int_t* idx) const. return At(GetBin(idx)). T& At(const Int_t* idx). return At(ULong64_t linidx). » Author: Axel Naumann, Nov 2011 » Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-06-30 15:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TNDArrayT_ULong64_t_.html:7056,Inherit,Inheritance,7056,root/html602/TNDArrayT_ULong64_t_.html,https://root.cern,https://root.cern/root/html602/TNDArrayT_ULong64_t_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. ULong64_t*fData[fNumData] data; Int_tTNDArray::fNdimPlusOneNumber of dimensions plus one; intfNumDatanumber of bins, product of fSizes; Long64_t*TNDArray::fSizes[fNdimPlusOne] bin count. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Init(Int_t ndim, const Int_t* nbins, bool addOverflow = false). void Reset(Option_t* = """"). Double_t AtAsDouble(ULong64_t linidx) const. void SetAsDouble(ULong64_t linidx, Double_t value). void AddAt(ULong64_t linidx, Double_t value). TNDArray& operator=(const TNDArrayT<ULong64_t>& ). TNDArrayRef<T> operator[](Int_t idx) const. T At(const Int_t* idx) const. return At(GetBin(idx)). T& At(const Int_t* idx). return At(ULong64_t linidx). » Author: Axel Naumann, Nov 2011 » Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-09-08 17:47; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TNDArrayT_ULong64_t_.html:7056,Inherit,Inheritance,7056,root/html604/TNDArrayT_ULong64_t_.html,https://root.cern,https://root.cern/root/html604/TNDArrayT_ULong64_t_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TFileInfo&operator=(const TFileInfo&); voidParseInput(const char* in). Data Members; public:. enum EStatusBits { kStaged; kCorrupted; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. TUrl*fCurrentUrl! current URL to access the file, points to URL; TMD5*fMD5-> md5 digest of the file; TList*fMetaDataListgeneric list of file meta data object(s); Long64_tfSizefile size; TUUID*fUUID-> uuid of the referenced file; TList*fUrlListlist of file URLs. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFileInfo(const char* url = 0, Long64_t size = -1, const char* uuid = 0, const char* md5 = 0, TObject* meta = 0); Constructor. TFileInfo(const TFileInfo& ); Copy constructor. ~TFileInfo(); Destructor. void ParseInput(const char* in); Parse the input line to extract init information from 'in'; the input; string is tokenized on ' '; the tokens can be prefixed by the following; keys:. url:<url1>,<url2>,... URLs for the file; stored in the order given; sz:<size> size of the file in bytes; md5:<md5_ascii> MD5 sum of the file in ASCII form; uuid:<uuid> UUID of the file. tree:<name>,<entries>,<first>,<last>; meta-information about a tree in the file; the; should be in the form <subdir>/tree-name;'entries' is; the number of entries in the tree; 'first' and 'last'; define the entry range. obj:<name>,<class>,<entries>; meta-information about a generic object in the file;; the should be in the form <subdir>/obj-name; 'class'; is the object class;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFileInfo.html:6533,Inherit,Inheritance,6533,root/html532/TFileInfo.html,https://root.cern,https://root.cern/root/html532/TFileInfo.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. TBenchmark(const TBenchmark&); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); TBenchmark&operator=(const TBenchmark&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Float_t*fCpuTime[fNbench] Cpu Time; TStringTNamed::fNameobject identifier; TString*fNames[fNbench] Names of benchmarks; Int_tfNbenchNumber of active benchmarks; Int_tfNmaxMaximum number of benchmarks initialized; Float_t*fRealTime[fNbench] Real Time; TStopwatch*fTimerTimers; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TBenchmark(); Benchmark default constructor*-*-*-; *-* =============================. TBenchmark(const TBenchmark& ); copy constructor. TBenchmark& operator=(const TBenchmark& ); assignment operator. ~TBenchmark(); Benchmark default destructor*-*-*-; *-* ============================. Int_t GetBench(const char* name) const; -*-*-*Returns index of Benchmark name; *-* ===============================. Float_t GetCpuTime(const char* name); -*-*-*Returns Cpu time used by Benchmark name; *-* =======================================. Float_t GetRealTime(const char* name); -*-*-*Returns Realtime used by Benchmark name; *-* =======================================. void Print(Option_t* name = """") const; -*Prints parameters of Benchmark name; *-* ===================================. void Reset(); -*Reset all Benchmarks; *-* ====================. void Show(const char* name); Stops Benchmark name and Prints results*-; *-* ============================",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TBenchmark.html:6061,Inherit,Inheritance,6061,root/html532/TBenchmark.html,https://root.cern,https://root.cern/root/html532/TBenchmark.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. TBenchmark(const TBenchmark&); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); TBenchmark&operator=(const TBenchmark&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Float_t*fCpuTime[fNbench] Cpu Time; TStringTNamed::fNameobject identifier; TString*fNames[fNbench] Names of benchmarks; Int_tfNbenchNumber of active benchmarks; Int_tfNmaxMaximum number of benchmarks initialized; Float_t*fRealTime[fNbench] Real Time; TStopwatch*fTimerTimers; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TBenchmark(); Benchmark default constructor. TBenchmark(const TBenchmark& ); Copy constructor. TBenchmark& operator=(const TBenchmark& ); Assignment operator. ~TBenchmark(); Benchmark destructor. Int_t GetBench(const char* name) const; Returns index of Benchmark name. Float_t GetCpuTime(const char* name); Returns Cpu time used by Benchmark name. Float_t GetRealTime(const char* name); Returns Realtime used by Benchmark name. void Print(Option_t* name = """") const; Prints parameters of Benchmark name. void Reset(); Reset all Benchmarks. void Show(const char* name); Stops Benchmark name and Prints results. void Start(const char* name); Starts Benchmark with the specified name. An independent timer (see class TStopwatch) is started.; The name of the benchmark is entered into the list of benchmarks.; Benchmark can be stopped via TBenchmark::Stop().; Results can be printed via TBenchmark::Print().; TBenchmark::Show() can be used to stop bench",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TBenchmark.html:6027,Inherit,Inheritance,6027,root/html534/TBenchmark.html,https://root.cern,https://root.cern/root/html534/TBenchmark.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TMVA::MsgLogger*TMVA::PDEFoamKernelBase::fLogger! message logger. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; PDEFoamKernelTrivial(); Default constructor for streamer. PDEFoamKernelTrivial(const TMVA::PDEFoamKernelTrivial& ); Copy constructor. Float_t Estimate(TMVA::PDEFoam* , vector<Float_t>& , TMVA::ECellValue ); Simple kernel estimator. It returns the cell value 'cv',; corresponding to the event vector 'txvec' (in foam coordinates). Parameters:. - foam - the pdefoam to search in. - txvec - event vector in foam coordinates [0,1]. - cv - cell value to estimate. virtual ~PDEFoamKernelTrivial(); {}. » Author: Dominik Dannheim, Alexander Voigt » Copyright (c) 2010: *; » Last changed: root/tmva $Id$ » Last generated: 2015-06-02 16:18; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMVA__PDEFoamKernelTrivial.html:6263,Inherit,Inheritance,6263,root/html604/TMVA__PDEFoamKernelTrivial.html,https://root.cern,https://root.cern/root/html604/TMVA__PDEFoamKernelTrivial.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TMVA::MsgLogger*TMVA::PDEFoamKernelBase::fLogger! message logger. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; PDEFoamKernelTrivial(); Default constructor for streamer. PDEFoamKernelTrivial(const TMVA::PDEFoamKernelTrivial& ); Copy constructor. Float_t Estimate(TMVA::PDEFoam* , vector<Float_t>& , TMVA::ECellValue ); Simple kernel estimator. It returns the cell value 'cv',; corresponding to the event vector 'txvec' (in foam coordinates). Parameters:. - foam - the pdefoam to search in. - txvec - event vector in foam coordinates [0,1]. - cv - cell value to estimate. virtual ~PDEFoamKernelTrivial(); {}. » Author: Dominik Dannheim, Alexander Voigt » Copyright (c) 2010: *; » Last changed: root/tmva $Id$ » Last generated: 2015-06-30 15:17; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__PDEFoamKernelTrivial.html:6255,Inherit,Inheritance,6255,root/html602/TMVA__PDEFoamKernelTrivial.html,https://root.cern,https://root.cern/root/html602/TMVA__PDEFoamKernelTrivial.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Bool_tGetAction(const char* filename, char* action) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const QIcon*GetIcon(const char* filename) const; const QIcon*GetIcon(const TSystemFile* filename); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; Bool_tGetType(const char* filename, char* type) const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tHasChanged() const; virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TQMimeTypes.html:2912,Inherit,InheritsFrom,2912,root/html602/TQMimeTypes.html,https://root.cern,https://root.cern/root/html602/TQMimeTypes.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; Int_tTPolyLine3D::GetLastPoint() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; Int_tTPolyLine3D::GetN() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*GetOption() const; Float_t*TPolyLine3D::GetP() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTPolyLine3D::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Int_tTPolyLine3D::Merge(TCollection* list); virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/THelix.html:4249,Inherit,InheritsFrom,4249,root/html532/THelix.html,https://root.cern,https://root.cern/root/html532/THelix.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; Int_tTPolyLine3D::GetLastPoint() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; Int_tTPolyLine3D::GetN() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*GetOption() const; Float_t*TPolyLine3D::GetP() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTPolyLine3D::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Int_tTPolyLine3D::Merge(TCollection* list); virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THelix.html:4225,Inherit,InheritsFrom,4225,root/html602/THelix.html,https://root.cern,https://root.cern/root/html602/THelix.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst char* options) const; Print out some information about the input models. HybridResult* GetHypoTest() const; perform the hypothesis test and return result of hypothesis test. bool DoCheckInputs() const. explicit HybridCalculatorOriginal(const char* name = 0); Dummy Constructor with only name. void SetCommonPdf(RooAbsPdf& pdf); Set a common PDF for both the null and alternate. { fSbModel = &pdf; }. void SetNullPdf(RooAbsPdf& pdf); Set the PDF for the null (only B). { fBModel = &pdf; }. void SetAlternatePdf(RooAbsPdf& pdf); Set the PDF for the alternate hypothesis ( i.e. S+B). { fSbModel = &pdf; }. void SetData(RooAbsData& data); Set the DataSet. { fData = &data; }. void SetNullParameters(const RooArgSet& ); set parameter values for the null if using a common PDF. { }. void SetAlternateParameters(const RooArgSet& ); set parameter values for the alternate if using a common PDF. {}. void SetNuisancePdf(RooAbsPdf& prior_pdf); additional methods specific for HybridCalculator; set a prior pdf for the nuisance parameters. void SetNuisanceParameters(const RooArgSet& params); set the nuisance parameters to be marginalized. { fNuisanceParameters = &params; }. void SetNumberOfToys(unsigned int ntoys); set number of toy MC (Default is 1000). { fNToys = ntoys; }. unsigned int GetNumberOfToys() const; return number of toys used. { return fNToys; }. void UseNuisance(bool on = true); control use of the pdf for the nuisance parameter and marginalize them. { fUsePriorPdf = on; }. void SetGenerateBinned(bool on = true); control to use bin data generation. { fGenerateBinned = on; }. void PatchSetExtended(bool on = true); { fTmpDoExtended = on; std::cout << ""extended patch set to "" << on << endl; }. » Last changed: root/roostats:$Id: HybridCalculatorOriginal.h 34109 2010-06-24 15:00:16Z moneta $ » Last generated: 2010-09-27 22:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooStats__HybridCalculatorOriginal.html:14932,extend,extended,14932,root/html528/RooStats__HybridCalculatorOriginal.html,https://root.cern,https://root.cern/root/html528/RooStats__HybridCalculatorOriginal.html,1,['extend'],['extended']
Modifiability,"onst char* options) const; Print out some information about the input models. HybridResult* GetHypoTest() const; perform the hypothesis test and return result of hypothesis test. bool DoCheckInputs() const. explicit HybridCalculatorOriginal(const char* name = 0); Dummy Constructor with only name. void SetCommonPdf(RooAbsPdf& pdf); Set a common PDF for both the null and alternate. { fSbModel = &pdf; }. void SetNullPdf(RooAbsPdf& pdf); Set the PDF for the null (only B). { fBModel = &pdf; }. void SetAlternatePdf(RooAbsPdf& pdf); Set the PDF for the alternate hypothesis ( i.e. S+B). { fSbModel = &pdf; }. void SetData(RooAbsData& data); Set the DataSet. { fData = &data; }. void SetNullParameters(const RooArgSet& ); set parameter values for the null if using a common PDF. { }. void SetAlternateParameters(const RooArgSet& ); set parameter values for the alternate if using a common PDF. {}. void SetNuisancePdf(RooAbsPdf& prior_pdf); additional methods specific for HybridCalculator; set a prior pdf for the nuisance parameters. void SetNuisanceParameters(const RooArgSet& params); set the nuisance parameters to be marginalized. { fNuisanceParameters = &params; }. void SetNumberOfToys(unsigned int ntoys); set number of toy MC (Default is 1000). { fNToys = ntoys; }. unsigned int GetNumberOfToys() const; return number of toys used. { return fNToys; }. void UseNuisance(bool on = true); control use of the pdf for the nuisance parameter and marginalize them. { fUsePriorPdf = on; }. void SetGenerateBinned(bool on = true); control to use bin data generation. { fGenerateBinned = on; }. void PatchSetExtended(bool on = true); { fTmpDoExtended = on; std::cout << ""extended patch set to "" << on << endl; }. » Last changed: root/roostats:$Id: HybridCalculatorOriginal.h 39391 2011-05-26 09:51:59Z moneta $ » Last generated: 2011-07-04 15:24; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooStats__HybridCalculatorOriginal.html:15011,extend,extended,15011,root/html530/RooStats__HybridCalculatorOriginal.html,https://root.cern,https://root.cern/root/html530/RooStats__HybridCalculatorOriginal.html,1,['extend'],['extended']
Modifiability,"onst char* options) const; Print out some information about the input models. HybridResult* GetHypoTest() const; perform the hypothesis test and return result of hypothesis test. bool DoCheckInputs() const. explicit HybridCalculatorOriginal(const char* name = 0); Dummy Constructor with only name. void SetCommonPdf(RooAbsPdf& pdf); Set a common PDF for both the null and alternate. { fSbModel = &pdf; }. void SetNullPdf(RooAbsPdf& pdf); Set the PDF for the null (only B). { fBModel = &pdf; }. void SetAlternatePdf(RooAbsPdf& pdf); Set the PDF for the alternate hypothesis ( i.e. S+B). { fSbModel = &pdf; }. void SetData(RooAbsData& data); Set the DataSet. { fData = &data; }. void SetNullParameters(const RooArgSet& ); set parameter values for the null if using a common PDF. { }. void SetAlternateParameters(const RooArgSet& ); set parameter values for the alternate if using a common PDF. {}. void SetNuisancePdf(RooAbsPdf& prior_pdf); additional methods specific for HybridCalculator; set a prior pdf for the nuisance parameters. void SetNuisanceParameters(const RooArgSet& params); set the nuisance parameters to be marginalized. { fNuisanceParameters = &params; }. void SetNumberOfToys(unsigned int ntoys); set number of toy MC (Default is 1000). { fNToys = ntoys; }. unsigned int GetNumberOfToys() const; return number of toys used. { return fNToys; }. void UseNuisance(bool on = true); control use of the pdf for the nuisance parameter and marginalize them. { fUsePriorPdf = on; }. void SetGenerateBinned(bool on = true); control to use bin data generation. { fGenerateBinned = on; }. void PatchSetExtended(bool on = true); { fTmpDoExtended = on; std::cout << ""extended patch set to "" << on << endl; }. » Last changed: root/roostats:$Id: HybridCalculatorOriginal.h 39391 2011-05-26 09:51:59Z moneta $ » Last generated: 2011-11-03 20:09; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__HybridCalculatorOriginal.html:15011,extend,extended,15011,root/html532/RooStats__HybridCalculatorOriginal.html,https://root.cern,https://root.cern/root/html532/RooStats__HybridCalculatorOriginal.html,2,['extend'],['extended']
Modifiability,"onst char* path, const char* proto). private:. TNetSystem(const TNetSystem&); virtual void*GetDirPtr() const; TNetSystem&operator=(const TNetSystem&). Data Members; public:. enum TSystem::EAclicMode { kDefault; kDebug; kOpt; };; enum TSystem::EAclicProperties { kFlatBuildDir; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSystem::EAclicModeTSystem::fAclicModeWhether the compilation should be done debug or opt; Int_tTSystem::fAclicPropertiesVarious boolean flag for change ACLiC's behavior.; Int_tTSystem::fBeepDurationUsed by Beep(); Int_tTSystem::fBeepFreqUsed by Beep(); TStringTSystem::fBuildArchArchitecure for which ROOT was built (passed to ./configure); TStringTSystem::fBuildCompilerCompiler used to build this ROOT; TStringTSystem::fBuildCompilerVersionCompiler version used to build this ROOT; TStringTSystem::fBuildDirLocation where to build ACLiC shared library and use as scratch area.; TStringTSystem::fBuildNodeDetailed information where ROOT was built; TSeqCollection*TSystem::fCompiledList of shared libs from compiled macros to be deleted; Bool_tTSystem::fDoneTrue if eventloop should be finished; TSeqCollection*TSystem::fFileHandlerList of file handlers; TStringTSystem::fFlagsDebugFlags for debug compilation; TStringTSystem::fFlagsOptFlags for optimized compilation; TSeqCollection*TSystem::fHelpersList of helper classes for alternative file/directory access; TStringTSystem::fHostnameHostname; Bool_tTSystem::fInControlTrue if in eventloop; TStringTSystem::fIncludePathUsed to expand $IncludePath in the directives given to SetMakeSharedLib and SetMakeExe; Bool_tTSystem::fInsideNotifyUsed by DispatchTimers(); Bool_tfIsLocalTRUE if the path points to this host; Int_tTSystem::fLevelLevel of nested eventloops; TStringTSystem::fLinkdefSuffixDefault ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TNetSystem.html:18378,config,configure,18378,root/html534/TNetSystem.html,https://root.cern,https://root.cern/root/html534/TNetSystem.html,2,['config'],['configure']
Modifiability,"onst char* path, const char* proto). private:. TNetSystem(const TNetSystem&); virtual void*GetDirPtr() const; TNetSystem&operator=(const TNetSystem&). Data Members; public:. enum TSystem::EAclicMode { kDefault; kDebug; kOpt; };; enum TSystem::EAclicProperties { kFlatBuildDir; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSystem::EAclicModeTSystem::fAclicModeWhether the compilation should be done debug or opt; Int_tTSystem::fAclicPropertiesVarious boolean flag for change ACLiC's behavior.; Int_tTSystem::fBeepDurationUsed by Beep(); Int_tTSystem::fBeepFreqUsed by Beep(); TStringTSystem::fBuildArchArchitecure for which ROOT was built (passed to ./configure); TStringTSystem::fBuildCompilerCompiler used to build this ROOT; TStringTSystem::fBuildCompilerVersionCompiler version used to build this ROOT; TStringTSystem::fBuildDirLocation where to build ACLiC shared library and use as scratch area.; TStringTSystem::fBuildNodeDetailed information where ROOT was built; TSeqCollection*TSystem::fCompiledList of shared libs from compiled macros to be deleted; Bool_tTSystem::fDoneTrue if eventloop should be finished; TSeqCollection*TSystem::fFileHandlerList of file handlers; TStringTSystem::fFlagsDebugFlags for debug compilation; TStringTSystem::fFlagsOptFlags for optimized compilation; TSeqCollection*TSystem::fHelpersList of helper classes for alternative file/directory access; TStringTSystem::fHostnameHostname; Bool_tTSystem::fInControlTrue if in eventloop; TStringTSystem::fIncludePathUsed to expand $IncludePath in the directives given to SetMakeSharedLib and SetMakeExe; Bool_tTSystem::fInsideNotifyUsed by DispatchTimers(); Bool_tfIsLocalTRUE if the path points to this host; TStringTSystem::fLastErrorStringLast system error message; Int_tTSystem::fLevelLevel o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TNetSystem.html:18011,config,configure,18011,root/html528/TNetSystem.html,https://root.cern,https://root.cern/root/html528/TNetSystem.html,4,['config'],['configure']
Modifiability,"onst char* server); TMap*GetFilesPerServer(const char* exclude = 0, Bool_t curronly = kFALSE); virtual const char*TObject::GetIconName() const; THashList*GetList(); TFileInfoMeta*GetMetaData(const char* meta = 0) const; virtual const char*TNamed::GetName() const; Long64_tGetNCorruptFiles() const; Long64_tGetNFiles() const; Long64_tGetNStagedFiles() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Float_tGetStagedPercentage() const; TFileCollection*GetStagedSubset(); virtual const char*TNamed::GetTitle() const; Long64_tGetTotalEntries(const char* tree) const; Long64_tGetTotalSize() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Long64_tMerge(TCollection* list); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFileCollection.html:3509,Inherit,InheritsFrom,3509,root/html532/TFileCollection.html,https://root.cern,https://root.cern/root/html532/TFileCollection.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst char* server); TMap*GetFilesPerServer(const char* exclude = 0, Bool_t curronly = kFALSE); virtual const char*TObject::GetIconName() const; THashList*GetList(); TFileInfoMeta*GetMetaData(const char* meta = 0) const; virtual const char*TNamed::GetName() const; Long64_tGetNCorruptFiles() const; Long64_tGetNFiles() const; Long64_tGetNStagedFiles() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Float_tGetStagedPercentage() const; TFileCollection*GetStagedSubset(); virtual const char*TNamed::GetTitle() const; Long64_tGetTotalEntries(const char* tree) const; Long64_tGetTotalSize() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Long64_tMerge(TCollection* list); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFileCollection.html:3385,Inherit,InheritsFrom,3385,root/html602/TFileCollection.html,https://root.cern,https://root.cern/root/html602/TFileCollection.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. static Int_tRooPrintable::_nameLength; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~RooTable(); Destructor. void fill(RooAbsCategory& cat, Double_t weight = 1.0). Bool_t isIdentical(const RooTable& other). » Last changed: Tue Mar 10 17:20:55 2015 » Last generated: 2015-03-10 17:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooTable.html:7075,Inherit,Inheritance,7075,root/html534/RooTable.html,https://root.cern,https://root.cern/root/html534/RooTable.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst char* title, Double_t minValue, Double_t maxValue, const char* unit = """"); Constructor with range and unit. Initial value is center of range. RooRealVar(const char* name, const char* title, Double_t value, Double_t minValue, Double_t maxValue, const char* unit = """"); Constructor with value, range and unit. RooRealVar(const RooRealVar& other, const char* name = 0); Copy Constructor. ~RooRealVar(); Destructor. Double_t getVal(const RooArgSet* nset = 0) const; Return value of variable. void setVal(Double_t value); Set value of variable to 'value'. If 'value' is outside; range of object, clip value into range. void setVal(Double_t value, const char* rangeName); Set value of variable to 'value'. If 'value' is outside; range named 'rangeName' of object, clip value into that range. RooErrorVar* errorVar() const; Return a RooAbsRealLValue representing the error associated; with this variable. The callers takes ownership of the; return object. Bool_t hasBinning(const char* name) const; Returns true if variable has a binning with 'name'. const RooAbsBinning& getBinning(const char* name = 0, Bool_t verbose = kTRUE, Bool_t createOnTheFly = kFALSE) const; Return binning definition with name. If binning with 'name' is not found it is created; on the fly as a clone of the default binning if createOnTheFly is true, otherwise; a reference to the default binning is returned. If verbose is true a message; is printed if a binning is created on the gly. RooAbsBinning& getBinning(const char* name = 0, Bool_t verbose = kTRUE, Bool_t createOnTheFly = kFALSE); Return binning definition with name. If binning with 'name' is not found it is created; on the fly as a clone of the default binning if createOnTheFly is true, otherwise; a reference to the default binning is returned. If verbose is true a message; is printed if a binning is created on the gly. void setBinning(const RooAbsBinning& binning, const char* name = 0); Add given binning under name 'name' with this variable. If name is nu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooRealVar.html:40278,variab,variable,40278,root/html528/RooRealVar.html,https://root.cern,https://root.cern/root/html528/RooRealVar.html,2,['variab'],['variable']
Modifiability,"onst char* title, Double_t minValue, Double_t maxValue, const char* unit = """"); Constructor with range and unit. Initial value is center of range. RooRealVar(const char* name, const char* title, Double_t value, Double_t minValue, Double_t maxValue, const char* unit = """"); Constructor with value, range and unit. RooRealVar(const RooRealVar& other, const char* name = 0); Copy Constructor. ~RooRealVar(); Destructor. Double_t getVal(const RooArgSet* nset = 0) const; Return value of variable. void setVal(Double_t value); Set value of variable to 'value'. If 'value' is outside; range of object, clip value into range. void setVal(Double_t value, const char* rangeName); Set value of variable to 'value'. If 'value' is outside; range named 'rangeName' of object, clip value into that range. RooErrorVar* errorVar() const; Return a RooAbsRealLValue representing the error associated; with this variable. The callers takes ownership of the; return object. Bool_t hasBinning(const char* name) const; Returns true if variable has a binning with 'name'. const RooAbsBinning& getBinning(const char* name, Bool_t verbose, Bool_t createOnTheFly); Return binning definition with name. If binning with 'name' is not found it is created; on the fly as a clone of the default binning if createOnTheFly is true, otherwise; a reference to the default binning is returned. If verbose is true a message; is printed if a binning is created on the gly. RooAbsBinning& getBinning(const char* name, Bool_t verbose, Bool_t createOnTheFly); Return binning definition with name. If binning with 'name' is not found it is created; on the fly as a clone of the default binning if createOnTheFly is true, otherwise; a reference to the default binning is returned. If verbose is true a message; is printed if a binning is created on the gly. void setBinning(const RooAbsBinning& binning, const char* name = 0); Add given binning under name 'name' with this variable. If name is null; the binning is installed as the default binn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooRealVar.html:39797,variab,variable,39797,root/html526/RooRealVar.html,https://root.cern,https://root.cern/root/html526/RooRealVar.html,1,['variab'],['variable']
Modifiability,"onst char*GetDefault() const; static TDictionary*TDictionary::GetDictionary(const char* name); static TDictionary*TDictionary::GetDictionary(const type_info& typeinfo); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const char*GetFullTypeName() const; virtual const char*TObject::GetIconName() const; TFunction*GetMethod() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TList*GetOptions() const; virtual const char*TNamed::GetTitle() const; const char*GetTypeName() const; stringGetTypeNormalizedName() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Pain",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMethodArg.html:3140,Inherit,InheritsFrom,3140,root/html534/TMethodArg.html,https://root.cern,https://root.cern/root/html534/TMethodArg.html,1,['Inherit'],['InheritsFrom']
Modifiability,"onst char*GetDefault() const; static TDictionary*TDictionary::GetDictionary(const char* name); static TDictionary*TDictionary::GetDictionary(const type_info& typeinfo); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const char*GetFullTypeName() const; virtual const char*TObject::GetIconName() const; TFunction*GetMethod() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TList*GetOptions() const; virtual const char*TNamed::GetTitle() const; const char*GetTypeName() const; stringGetTypeNormalizedName() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMethodArg.html:3079,Inherit,InheritsFrom,3079,root/html602/TMethodArg.html,https://root.cern,https://root.cern/root/html602/TMethodArg.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual voidGotoEvent(Int_t); virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual voidNextEvent(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual voidOpen(); static voidTObject::operator delete(void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveEventManager.html:9358,Inherit,InheritsFrom,9358,root/html532/TEveEventManager.html,https://root.cern,https://root.cern/root/html532/TEveEventManager.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual voidGotoEvent(Int_t); virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual voidNextEvent(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual voidOpen(); voidTObject::operator delete(void* ptr);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveEventManager.html:9284,Inherit,InheritsFrom,9284,root/html602/TEveEventManager.html,https://root.cern,https://root.cern/root/html602/TEveEventManager.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst char*TObject::GetIconName() const; Int_tGetId(); virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; Bool_tGetLogScale() const; voidGetMinMaxMean(); virtual const char*TNamed::GetName() const; Int_tGetNbins(); Long64_tGetNentries() const; virtual char*GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TParallelCoord*GetParallel(); voidGetQuantiles(); TList*GetRanges(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetValuefromXY(Double_t x, Double_t y); Double_t*GetValues(); Bool_tGetVert(); Double_tGetX(); voidGetXYfromValue(Double_t value, Double_t& x, Double_t& y); Double_tGetY(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInit(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TParallelCoordVar.html:4228,Inherit,InheritsFrom,4228,root/html532/TParallelCoordVar.html,https://root.cern,https://root.cern/root/html532/TParallelCoordVar.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst char*TObject::GetIconName() const; Int_tGetId(); virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; Bool_tGetLogScale() const; voidGetMinMaxMean(); virtual const char*TNamed::GetName() const; Int_tGetNbins(); Long64_tGetNentries() const; virtual char*GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TParallelCoord*GetParallel(); voidGetQuantiles(); TList*GetRanges(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetValuefromXY(Double_t x, Double_t y); Double_t*GetValues(); Bool_tGetVert(); Double_tGetX(); voidGetXYfromValue(Double_t value, Double_t& x, Double_t& y); Double_tGetY(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidInit(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTAttLine::Modify(); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TParallelCoordVar.html:4077,Inherit,InheritsFrom,4077,root/html602/TParallelCoordVar.html,https://root.cern,https://root.cern/root/html602/TParallelCoordVar.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst char*TObject::GetIconName() const; virtual Long64_t*GetIndex() const; virtual Long64_t*GetIndexValues() const; virtual Long64_t*GetIndexValuesMinor() const; virtual TTreeFormula*GetMajorFormula(); virtual TTreeFormula*GetMajorFormulaParent(const TTree* parent); virtual const char*GetMajorName() const; virtual TTreeFormula*GetMinorFormula(); virtual TTreeFormula*GetMinorFormulaParent(const TTree* parent); virtual const char*GetMinorName() const; virtual Long64_tGetN() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual TTree*TVirtualIndex::GetTree() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TTreeIndex.html:3276,Inherit,InheritsFrom,3276,root/html534/TTreeIndex.html,https://root.cern,https://root.cern/root/html534/TTreeIndex.html,1,['Inherit'],['InheritsFrom']
Modifiability,"onst char*TObject::GetIconName() const; virtual Long64_t*GetIndex() const; virtual Long64_t*GetIndexValues() const; virtual Long64_t*GetIndexValuesMinor() const; virtual TTreeFormula*GetMajorFormula(); virtual TTreeFormula*GetMajorFormulaParent(const TTree* parent); virtual const char*GetMajorName() const; virtual TTreeFormula*GetMinorFormula(); virtual TTreeFormula*GetMinorFormulaParent(const TTree* parent); virtual const char*GetMinorName() const; virtual Long64_tGetN() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual TTree*TVirtualIndex::GetTree() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTreeIndex.html:3212,Inherit,InheritsFrom,3212,root/html602/TTreeIndex.html,https://root.cern,https://root.cern/root/html602/TTreeIndex.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTXMLParser::GetParseCode() const; const char*TXMLParser::GetParseCodeMessage(Int_t parseCode) const; Bool_tTXMLParser::GetReplaceEntities() const; Bool_tTXMLParser::GetStopOnError() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Bool_tTXMLParser::GetValidate() const; const char*TXMLParser::GetValidateError() const; const char*TXMLParser::GetValidateWarning() const; virtual TXMLDocument*GetXMLDocument() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::opera",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDOMParser.html:5437,Inherit,InheritsFrom,5437,root/html532/TDOMParser.html,https://root.cern,https://root.cern/root/html532/TDOMParser.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tTXMLParser::GetParseCode() const; const char*TXMLParser::GetParseCodeMessage(Int_t parseCode) const; Bool_tTXMLParser::GetReplaceEntities() const; Bool_tTXMLParser::GetStopOnError() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Bool_tTXMLParser::GetValidate() const; const char*TXMLParser::GetValidateError() const; const char*TXMLParser::GetValidateWarning() const; virtual TXMLDocument*GetXMLDocument() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TDOMParser.html:5424,Inherit,InheritsFrom,5424,root/html602/TDOMParser.html,https://root.cern,https://root.cern/root/html602/TDOMParser.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst double* p) const; ROOT::Math::ParamFunction<ROOT::Math::IParametricGradFunctionOneDim>&operator=(const ROOT::Math::ParamFunction<ROOT::Math::IParametricGradFunctionOneDim>&); doubleROOT::Math::IParametricGradFunctionOneDim::ParameterDerivative(double x, unsigned int ipar = 0) const; doubleROOT::Math::IParametricGradFunctionOneDim::ParameterDerivative(const double* x, unsigned int ipar = 0) const; doubleROOT::Math::IParametricGradFunctionOneDim::ParameterDerivative(double x, const double* p, unsigned int ipar = 0) const; doubleROOT::Math::IParametricGradFunctionOneDim::ParameterDerivative(const double* x, const double* p, unsigned int ipar = 0) const; voidROOT::Math::IParametricGradFunctionOneDim::ParameterGradient(double x, double* grad) const; voidROOT::Math::IParametricGradFunctionOneDim::ParameterGradient(const double* x, double* grad) const; virtual voidROOT::Math::IParametricGradFunctionOneDim::ParameterGradient(double x, const double* p, double* grad) const; voidROOT::Math::IParametricGradFunctionOneDim::ParameterGradient(const double* x, const double* p, double* grad) const; virtual stringROOT::Math::IBaseParam::ParameterName(unsigned int i) const; virtual const double*Parameters() const; virtual voidSetParameters(const double* p). Data Members; protected:. vector<double>fParams. private:. unsigned intfNpar. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; const double * Parameters() const; copying constructors (can use default ones). Access the parameter values. { return &fParams.front(); }. void SetParameters(const double* p). Set the parameter values; @param p vector of doubles containing the parameter values. unsigned int NPar() const. Return the number of parameters. { return fNpar; }. » Last changed: root/mathmore:$Id$ » Last generated: 2015-09-08 16:59; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__ParamFunction_-p1IParametricGradFunctionOneDim_.html:3363,Inherit,Inheritance,3363,root/html534/ROOT__Math__ParamFunction_-p1IParametricGradFunctionOneDim_.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__ParamFunction_-p1IParametricGradFunctionOneDim_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst double* p) const; virtual doubleDoParameterDerivative(double x, const double* p, unsigned int ipar) const. Data Members; private:. TF1*fFuncpointer to ROOT function; boolfLinearflag for linear functions ; vector<double>fParamscached vector with parameter values; boolfPolynomialflag for polynomial functions ; doublefX[1]! cached vector for x value (needed for TF1::EvalPar signature) ; static doublefgEpsepsilon used in derivative calculation h ~ eps |x|. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; WrappedTF1(); {}. WrappedTF1( TF1 & f ). constructor from a TF1 function pointer. virtual ~WrappedTF1(). Destructor (no operations). TF1 Function pointer is not owned. {}. WrappedTF1(const WrappedTF1 & rhs). Copy constructor. ROOT::Math::IGenFunction * Clone() const; @name interface inherited from IFunction . Clone the wrapper but not the original function. const double * Parameters() const; @name interface inherited from IParamFunction ; get the parameter values (return values cachen inside, those inside TF1 might be different). void SetParameters(const double* p); set parameter values (only the cached one in this class,leave unchanges those of TF1). unsigned int NPar() const; return number of parameters. std::string ParameterName(unsigned int i) const; return parameter name (this is stored in TF1). void ParameterGradient(double x, const double* par, double* grad) const; evaluate the derivative of the function with respect to the parameters. void FdF(double x, double& f, double& deriv) const; calculate function and derivative at same time (required by IGradient interface). void SetDerivPrecision(double eps); precision value used for calculating the derivative step-size; h = eps * |x|. The default is 0.001, give a smaller in case function changes rapidly. double GetDerivPrecision(); get precision value used for calculating the derivative step-size. double DoEvalPar(double x, const double* p) const; evaluate function passing",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__WrappedTF1.html:3045,inherit,inherited,3045,root/html526/ROOT__Math__WrappedTF1.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__WrappedTF1.html,1,['inherit'],['inherited']
Modifiability,"onst override;  ; virtual Bool_t Notify ();  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; virtual Bool_t Process (Long64_t entry);  The Process() function is called for each entry in the tree (or possibly keyed object in the case of PROOF) to be processed. ;  ; virtual void SetInputList (TList *input);  ; virtual void SetObject (TObject *obj);  ; virtual void SetOption (const char *option);  ; virtual void SlaveBegin (TTree *tree);  The SlaveBegin() function is called after the Begin() function. ;  ; virtual void SlaveTerminate ();  The SlaveTerminate() function is called after all entries or objects have been processed. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Terminate ();  The Terminate() function is the last function to be called during a query. ;  ; virtual Int_t Version () const;  ;  Public Member Functions inherited from TSelector;  TSelector ();  Default selector ctor. ;  ;  ~TSelector () override;  Selector destructor. ;  ; virtual void Abort (const char *why, EAbort what=kAbortProcess);  Abort processing. ;  ; virtual EAbort GetAbort () const;  ; virtual Int_t GetEntry (Long64_t, Int_t=0);  ; virtual TList * GetInputList () const;  ; const char * GetOption () const override;  ; virtual Long64_t GetStatus () const;  ; virtual void ImportOutput (TList *output);  Imports the content of 'output' in the internal output list. ;  ; virtual bool ProcessCut (Long64_t);  This method is called before processing entry. ;  ; virtual void ProcessFill (Long64_t);  This method is called for all selected entries. ;  ; virtual void ResetAbort ();  ; virtual void SetStatus (Long64_t status);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSelEvent.html:2192,inherit,inherited,2192,doc/master/classTSelEvent.html,https://root.cern,https://root.cern/doc/master/classTSelEvent.html,1,['inherit'],['inherited']
Modifiability,"onst override;  Returns the type of the transform. ;  ; void Init (Option_t *flags, Int_t sign, const Int_t *kind) override;  Creates the fftw-plan. ;  ; TClass * IsA () const override;  ; Bool_t IsInplace () const override;  ; void SetPoint (const Int_t *ipoint, Double_t re, Double_t) override;  Since multidimensional R2HC and HC2R transforms are not supported, third parameter is dummy. ;  ; void SetPoint (Int_t ipoint, Double_t re, Double_t im=0) override;  ; void SetPointComplex (Int_t, TComplex &) override;  ; void SetPoints (const Double_t *data) override;  Sets all points. ;  ; void SetPointsComplex (const Double_t *, const Double_t *) override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Transform () override;  Computes the transform, specified in Init() function. ;  ;  Public Member Functions inherited from TVirtualFFT;  TVirtualFFT ();  ; virtual ~TVirtualFFT ();  destructor ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFFTReal.html:4651,inherit,inherited,4651,doc/master/classTFFTReal.html,https://root.cern,https://root.cern/doc/master/classTFFTReal.html,1,['inherit'],['inherited']
Modifiability,"onst override;  Returns title (title can contain 32x32 xpm thumbnail/icon). ;  ; Int_t GetVersion () const;  ; virtual void IncrementPidOffset (UShort_t offset);  Increment fPidOffset by 'offset'. ;  ; Bool_t IsFolder () const override;  Check if object referenced by the key is a folder. ;  ; virtual void ls (Bool_t current) const;  List Key contents. ;  ; void ls (Option_t *option="""") const override;  List Key contents. ;  ; void Print (Option_t *option="""") const override;  Print key contents. ;  ; void ReadKeyBuffer (char *&buffer);  Decode input buffer. ;  ; template<typename T > ; T * ReadObject ();  To read an object (non deriving from TObject) from the file. ;  ; void SetMotherDir (TDirectory *dir);  ; virtual void SetParent (const TObject *parent);  Set parent in key buffer. ;  ; Int_t Sizeof () const override;  Return the size in bytes of the key header structure. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TName",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTKeySQL.html:5758,inherit,inherited,5758,doc/master/classTKeySQL.html,https://root.cern,https://root.cern/doc/master/classTKeySQL.html,2,['inherit'],['inherited']
Modifiability,"onst override;  return pointer to gradient values at the minimum ;  ; bool Minimize () override;  method to perform the minimization ;  ; int MinosStatus () const override;  minos status code of last Minos run minos status = -1 : Minos is not run = 0 : last MINOS run was successful > 0 : some problems encountered when running MINOS ;  ; double MinValue () const override;  return minimum function value ;  ; unsigned int NCalls () const override;  number of function calls to reach the minimum ;  ; unsigned int NDim () const override;  this is <= Function().NDim() which is the total number of variables (free+ constrained ones) ;  ; unsigned int NFree () const override;  number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total ;  ; void PrintResults () override;  return reference to the objective function virtual const ROOT::Math::IGenFunction & Function() const = 0; ;  ; bool ProvidesError () const override;  minimizer provides error and error matrix ;  ; bool ReleaseVariable (unsigned int) override;  release an existing variable ;  ; bool Scan (unsigned int i, unsigned int &nstep, double *x, double *y, double xmin=0, double xmax=0) override;  scan a parameter i around the minimum. ;  ; bool SetDebug (bool on=true);  set debug mode. Return true if setting was successful ;  ; bool SetFixedVariable (unsigned int, const std::string &, double) override;  set fixed variable (override if minimizer supports them ) ;  ; void SetFunction (const ROOT::Math::IMultiGenFunction &func) override;  set the function to minimize ;  ; bool SetLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double, double) override;  set upper/lower limited variable (override if minimizer supports them ) ;  ; bool SetLowerLimitedVariable (unsigned int ivar, const std::string &name, double val, double step, double lower) override;  set lower limit variable (override if minimizer supports them ) ;  ; bool SetUpperLimitedVa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMinuitMinimizer.html:4251,variab,variable,4251,doc/master/classTMinuitMinimizer.html,https://root.cern,https://root.cern/doc/master/classTMinuitMinimizer.html,1,['variab'],['variable']
Modifiability,"onst std::type_info &typeinfo);  Forward to TROOT::GetClass(). ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TBufferText ();  Default constructor. ;  ;  TBufferText (TBuffer::EMode mode, TObject *parent=nullptr);  Normal constructor. ;  ;  Protected Member Functions inherited from TBufferIO;  TBufferIO ();  ;  TBufferIO (TBuffer::EMode mode);  constructor ;  ;  TBufferIO (TBuffer::EMode mode, Int_t bufsiz);  constructor ;  ;  TBufferIO (TBuffer::EMode mode, Int_t bufsiz, void *buf, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr);  constructor ;  ; virtual void CheckCount (UInt_t);  ; Long64_t GetObjectTag (const void *obj);  Returns tag for specified object from objects map (if exists) Returns 0 if object not included into objects map. ;  ; virtual void WriteObjectClass (const void *actualObjStart, const TClass *actualClass, Bool_t cacheReuse)=0;  ;  Protected Member Functions inherited from TBuffer;  TBuffer ();  ;  TBuffer (const TBuffer &)=delete;  ; void operator= (const TBuffer &)=delete;  ; Int_t Read (const char *name) override;  Read contents of object with specified name from the current directory. ;  ; Int_t Write (const char *name, Int_t opt, Int_t bufs) const override;  Write this object to the current directory. ;  ; Int_t Write (const char *name, Int_t opt, Int_t bufs) override;  Write this object to the current directory. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferText.html:29167,inherit,inherited,29167,doc/master/classTBufferText.html,https://root.cern,https://root.cern/doc/master/classTBufferText.html,1,['inherit'],['inherited']
Modifiability,"onst std::vector< Float_t >& EvaluateRegression(TMVA::MethodBase* method, Double_t aux = 0); evaluates the regression MVA. Float_t EvaluateRegression(UInt_t tgtNumber, const TString& methodTag, Double_t aux = 0); evaluates the regression MVA. const std::vector< Float_t >& EvaluateMulticlass(const TString& methodTag, Double_t aux = 0); evaluates MVA for given set of input variables. const std::vector< Float_t >& EvaluateMulticlass(TMVA::MethodBase* method, Double_t aux = 0); evaluates the multiclass MVA. Float_t EvaluateMulticlass(UInt_t clsNumber, const TString& methodTag, Double_t aux = 0); evaluates the multiclass MVA. TMVA::IMethod* FindMVA(const TString& methodTag); return pointer to method with tag ""methodTag"". TMVA::MethodCuts* FindCutsMVA(const TString& methodTag); special function for Cuts to avoid dynamic_casts in ROOT macros,; which are not properly handled by CINT. Double_t GetProba(const TString& methodTag, Double_t ap_sig = 0.5, Double_t mvaVal = -9999999); evaluates probability of MVA for given set of input variables. Double_t GetRarity(const TString& methodTag, Double_t mvaVal = -9999999); evaluates the MVA's rarity. void DecodeVarNames( const std::string& varNames ); decodes ""name1:name2:..."" form. void DecodeVarNames(const TString& varNames); decodes ""name1:name2:..."" form. Double_t GetMVAError() const; returns error on MVA response for given event; NOTE: must be called AFTER ""EvaluateMVA(...)"" call !. { return fMvaEventError; }. Double_t GetMVAErrorLower() const; { return fMvaEventError; }. Double_t GetMVAErrorUpper() const; { return fMvaEventErrorUpper; }. const char* GetName() const; accessors. { return ""Reader""; }. Bool_t Verbose( void ); { return fVerbose; }. void SetVerbose(Bool_t v); { fVerbose = v; }. const DataSetInfo& DataInfo() const; { return fDataSetInfo; }. DataSetInfo& DataInfo(); { return fDataSetInfo; }. » Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Kai Voss » Copyright (c) 2005: *; » Last changed: root/tmv",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__Reader.html:14253,variab,variables,14253,root/html528/TMVA__Reader.html,https://root.cern,https://root.cern/root/html528/TMVA__Reader.html,1,['variab'],['variables']
Modifiability,"onst std::vector< Float_t >& EvaluateRegression(TMVA::MethodBase* method, Double_t aux = 0); evaluates the regression MVA. Float_t EvaluateRegression(UInt_t tgtNumber, const TString& methodTag, Double_t aux = 0); evaluates the regression MVA. const std::vector< Float_t >& EvaluateMulticlass(const TString& methodTag, Double_t aux = 0); evaluates MVA for given set of input variables. const std::vector< Float_t >& EvaluateMulticlass(TMVA::MethodBase* method, Double_t aux = 0); evaluates the multiclass MVA. Float_t EvaluateMulticlass(UInt_t clsNumber, const TString& methodTag, Double_t aux = 0); evaluates the multiclass MVA. TMVA::IMethod* FindMVA(const TString& methodTag); return pointer to method with tag ""methodTag"". TMVA::MethodCuts* FindCutsMVA(const TString& methodTag); special function for Cuts to avoid dynamic_casts in ROOT macros,; which are not properly handled by CINT. Double_t GetProba(const TString& methodTag, Double_t ap_sig = 0.5, Double_t mvaVal = -9999999); evaluates probability of MVA for given set of input variables. Double_t GetRarity(const TString& methodTag, Double_t mvaVal = -9999999); evaluates the MVA's rarity. void DecodeVarNames( const std::string& varNames ); decodes ""name1:name2:..."" form. void DecodeVarNames(const TString& varNames); decodes ""name1:name2:..."" form. Double_t GetMVAError() const; returns error on MVA response for given event; NOTE: must be called AFTER ""EvaluateMVA(...)"" call !. { return fMvaEventError; }. Double_t GetMVAErrorLower() const; { return fMvaEventError; }. Double_t GetMVAErrorUpper() const; { return fMvaEventErrorUpper; }. const char* GetName() const; accessors. { return ""Reader""; }. Bool_t Verbose( void ); { return fVerbose; }. void SetVerbose(Bool_t v); { fVerbose = v; }. const DataSetInfo& DataInfo() const; { return fDataSetInfo; }. DataSetInfo& DataInfo(); { return fDataSetInfo; }. » Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne, Jan Therhaag » Copyright (c)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__Reader.html:14322,variab,variables,14322,root/html530/TMVA__Reader.html,https://root.cern,https://root.cern/root/html530/TMVA__Reader.html,3,['variab'],['variables']
Modifiability,"onst the return value is zero ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 835 of file Minuit2Minimizer.cxx. ◆ Hesse(). bool ROOT::Minuit2::Minuit2Minimizer::Hesse ; (; ). overridevirtual . perform a full calculation of the Hessian matrix for error calculation If a valid minimum exists the calculation is done on the minimum point otherwise is performed in the current set values of parameters Status code of minimizer is updated according to the following convention (in case Hesse failed) status += 100*hesseStatus where hesse status is: status = 1 : hesse failed status = 2 : matrix inversion failed status = 3 : matrix is not pos defined ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 1204 of file Minuit2Minimizer.cxx. ◆ IsFixedVariable(). bool ROOT::Minuit2::Minuit2Minimizer::IsFixedVariable ; (; unsigned int ; ivar); const. overridevirtual . query if an existing variable is fixed (i.e. ; considered constant in the minimization) note that by default all variables are not fixed ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 356 of file Minuit2Minimizer.cxx. ◆ MinGradient(). const double * ROOT::Minuit2::Minuit2Minimizer::MinGradient ; (; ); const. inlineoverridevirtual . return pointer to gradient values at the minimum ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 146 of file Minuit2Minimizer.h. ◆ Minimize(). bool ROOT::Minuit2::Minuit2Minimizer::Minimize ; (; ). overridevirtual . method to perform the minimization. ; Return false in case the minimization did not converge. In this case a status code different than zero is set (retrieved by the derived method Minimizer::Status() )""; status = 1 : Covariance was made pos defined status = 2 : Hesse is invalid status = 3 : Edm is above max status = 4 : Reached call limit status = 5 : Any other failure ; Implements ROOT::Math::Minimizer.; Definition at line 465 of file Minuit2Minimizer.cxx. ◆ MinosStatus(). int ROOT::Minuit2::Minuit2Minimizer::MinosStatus ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html:19905,variab,variables,19905,doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html,1,['variab'],['variables']
Modifiability,"onst void *end, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2097; TStreamerInfoActions::VectorPtrLooper::ConvertBasicType< NoFactorMarker< From >, To >::Actionstatic Int_t Action(TBuffer &buf, void *iter, const void *end, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2135; TStreamerInfoActions::VectorPtrLooper::ConvertBasicType< WithFactorMarker< From >, To >::Actionstatic Int_t Action(TBuffer &buf, void *iter, const void *end, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2118; TStreamerInfoActions::VectorPtrLooper::ConvertBasicTypeDefinition TStreamerInfoActions.cxx:2080; TStreamerInfoActions::VectorPtrLooper::ConvertBasicType::Actionstatic Int_t Action(TBuffer &buf, void *iter, const void *end, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2081; TStreamerInfoActions::VectorPtrLooperDefinition TStreamerInfoActions.cxx:2065; TStreamerInfoActions::VectorPtrLooper::ReadActionstatic Int_t ReadAction(TBuffer &buf, void *start, const void *end, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2163; TStreamerInfoActions::VectorPtrLooper::ReadBasestatic Int_t ReadBase(TBuffer &buf, void *start, const void *end, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2171; TStreamerInfoActions::VectorPtrLooper::ReadBasicTypestatic Int_t ReadBasicType(TBuffer &buf, void *iter, const void *end, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2068; TStreamerInfoActions::VectorPtrLooper::GenericReadstatic Int_t GenericRead(TBuffer &buf, void *iter, const void *end, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2179; TStreamerInfoActions::VectorPtrLooper::WriteBasicTypestatic Int_t WriteBasicType(TBuffer &buf, void *iter, const void *end, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2151; TStreamerInfoActions::VectorPtrLooper::GenericWritestatic Int_t GenericWrite(TBuffer &buf, void *iter, const void *end, const TConfigur",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:276556,config,config,276556,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"onst. ;  ; RooPlot * plotOn (RooPlot *frame, RooLinkedList &cmdList) const override;  Plot (project) PDF on specified frame. ;  ; GenSpec * prepareMultiGen (const RooArgSet &whatVars, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={});  Prepare GenSpec configuration object for efficient generation of multiple datasets from identical specification. ;  ; void printMultiline (std::ostream &os, Int_t contents, bool verbose=false, TString indent="""") const override;  Print multi line detailed information of this RooAbsPdf. ;  ; void printValue (std::ostream &os) const override;  Print value of p.d.f, also print normalization integral that was last used, if any. ;  ; virtual void resetErrorCounters (Int_t resetValue=10);  Reset error counter to given value, limiting the number of future error messages for this pdf to 'resetValue'. ;  ; void setGeneratorConfig ();  Remove the specialized numeric MC generator configuration associated with this object. ;  ; void setGeneratorConfig (const RooNumGenConfig &config);  Set the given configuration as default numeric MC generator configuration for this object. ;  ; void setNormRange (const char *rangeName);  ; void setNormRangeOverride (const char *rangeName);  ; void setTraceCounter (Int_t value, bool allNodes=false);  Reset trace counter to given value, limiting the number of future trace messages for this pdf to 'value'. ;  ; RooNumGenConfig * specialGeneratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumGenConfig * specialGeneratorConfig (bool createOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFixedProdPdf.html:12907,config,configuration,12907,doc/master/classRooFixedProdPdf.html,https://root.cern,https://root.cern/doc/master/classRooFixedProdPdf.html,4,['config'],['configuration']
Modifiability,"onst. ;  ; RooPlot * plotOn (RooPlot *frame, RooLinkedList &cmdList) const override;  Plot (project) PDF on specified frame. ;  ; GenSpec * prepareMultiGen (const RooArgSet &whatVars, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={});  Prepare GenSpec configuration object for efficient generation of multiple datasets from identical specification. ;  ; void printMultiline (std::ostream &os, Int_t contents, bool verbose=false, TString indent="""") const override;  Print multi line detailed information of this RooAbsPdf. ;  ; void printValue (std::ostream &os) const override;  Print value of p.d.f, also print normalization integral that was last used, if any. ;  ; virtual void resetErrorCounters (Int_t resetValue=10);  Reset error counter to given value, limiting the number of future error messages for this pdf to 'resetValue'. ;  ; void setGeneratorConfig ();  Remove the specialized numeric MC generator configuration associated with this object. ;  ; void setGeneratorConfig (const RooNumGenConfig &config);  Set the given configuration as default numeric MC generator configuration for this object. ;  ; void setNormRange (const char *rangeName);  ; void setNormRangeOverride (const char *rangeName);  ; void setTraceCounter (Int_t value, bool allNodes=false);  Reset trace counter to given value, limiting the number of future trace messages for this pdf to 'value'. ;  ; RooNumGenConfig * specialGeneratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumGenConfig * specialGeneratorConfig (bool createOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *u",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCachedPdf.html:14049,config,configuration,14049,doc/master/classRooCachedPdf.html,https://root.cern,https://root.cern/doc/master/classRooCachedPdf.html,14,['config'],['configuration']
Modifiability,"onst. compute the net with the given input and the given weights ; compute the neural net; Parameters. inputthe input data ; weightsthe weight data . Definition at line 1037 of file NeuralNet.icc. ◆ computeError(). template<typename ItWeight > . std::tuple< double, double > TMVA::DNN::Net::computeError ; (; const Settings & ; settings, . std::vector< LayerData > & ; lastLayerData, . Batch & ; batch, . ItWeight ; itWeightBegin, . ItWeight ; itWeightEnd . ); const. Definition at line 1321 of file NeuralNet.icc. ◆ dE(). void TMVA::DNN::Net::dE ; (; ). ◆ dropOutWeightFactor(). template<typename WeightsType , typename DropProbabilities > . void TMVA::DNN::Net::dropOutWeightFactor ; (; WeightsType & ; weights, . const DropProbabilities & ; drops, . bool ; inverse = false . ). set the drop out configuration ; compute the drop-out-weight factor; when using drop-out a fraction of the nodes is turned off at each cycle of the computation once all nodes are turned on again (for instances when the test samples are evaluated), the weights have to be adjusted to account for the different number of active nodes this function computes the factor and applies it to the weights ; Definition at line 652 of file NeuralNet.icc. ◆ E(). double TMVA::DNN::Net::E ; (; ). ◆ errorFunction(). template<typename Container , typename ItWeight > . double TMVA::DNN::Net::errorFunction ; (; LayerData & ; layerData, . Container ; truth, . ItWeight ; itWeight, . ItWeight ; itWeightEnd, . double ; patternWeight, . double ; factorWeightDecay, . EnumRegularization ; eRegularization . ); const. computes the error of the DNN ; compute the error function; Definition at line 1579 of file NeuralNet.icc. ◆ fetchOutput() [1/2]. template<typename OutputContainer > . void TMVA::DNN::Net::fetchOutput ; (; const LayerData & ; lastLayerData, . OutputContainer & ; outputContainer . ); const. Definition at line 1291 of file NeuralNet.icc. ◆ fetchOutput() [2/2]. template<typename OutputContainer > . void TMVA::DNN::Net::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1Net.html:9310,config,configuration,9310,doc/master/classTMVA_1_1DNN_1_1Net.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1Net.html,1,['config'],['configuration']
Modifiability,"onst. inline . Definition at line 323 of file THtml.h. ◆ GetCounterFormat(). const char * THtml::GetCounterFormat ; (; ); const. inline . Definition at line 303 of file THtml.h. ◆ GetDeclFileName(). bool THtml::GetDeclFileName ; (; TClass * ; cl, . Bool_t ; filesys, . TString & ; out_name . ); const. virtual . Return declaration file name; return the full path if filesys is true. ; Definition at line 2105 of file THtml.cxx. ◆ GetDeclImplFileName(). bool THtml::GetDeclImplFileName ; (; TClass * ; cl, . bool ; filesys, . bool ; decl, . TString & ; out_name . ); const. protectedvirtual . Combined implementation for GetDeclFileName(), GetImplFileName(): Return declaration / implementation file name (depending on decl); return the full path if filesys is true. ; Definition at line 2123 of file THtml.cxx. ◆ GetDerivedClasses(). void THtml::GetDerivedClasses ; (; TClass * ; cl, . std::map< TClass *, Int_t > & ; derived . ); const. fill derived with all classes inheriting from cl and their inheritance distance to cl ; Definition at line 1964 of file THtml.cxx. ◆ GetDirDelimiter(). static const char * THtml::GetDirDelimiter ; (; ). inlinestatic . Definition at line 327 of file THtml.h. ◆ GetDocStyle(). const TString & THtml::GetDocStyle ; (; ); const. inline . Definition at line 316 of file THtml.h. ◆ GetDotDir(). const TString & THtml::GetDotDir ; (; ); const. inline . Definition at line 299 of file THtml.h. ◆ GetEtcDir(). const char * THtml::GetEtcDir ; (; ); const. virtual . Get the directory containing THtml's auxiliary files ($ROOTSYS/etc/html) ; Definition at line 1352 of file THtml.cxx. ◆ GetFileDefinition(). const THtml::TFileDefinition & THtml::GetFileDefinition ; (; ); const. Return the TFileDefinition (or derived) object as set by SetFileDefinition(); create and return a TFileDefinition object if none was set. ; Definition at line 1325 of file THtml.cxx. ◆ GetFooter(). const TString & THtml::GetFooter ; (; ); const. inline . Definition at line 309 of file THtml.h. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTHtml.html:42038,inherit,inheriting,42038,doc/v632/classTHtml.html,https://root.cern,https://root.cern/doc/v632/classTHtml.html,4,['inherit'],"['inheritance', 'inheriting']"
Modifiability,"onst. inlineoverridevirtual . Copy this to obj. ; Reimplemented from TNamed.; Definition at line 59 of file TSystemFile.h. ◆ DeclFileName(). static const char * TSystemFile::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 61 of file TSystemFile.h. ◆ Delete() [1/2]. void TSystemFile::Delete ; (; ). virtual . delete this file ; Reimplemented in TSystemDirectory.; Definition at line 154 of file TSystemFile.cxx. ◆ Delete() [2/2]. void TSystemFile::Delete ; (; Option_t * ; option). inlineoverridevirtual . Delete this object. ; Typically called as a command via the interpreter. Normally use ""delete"" operator when object has been allocated on the heap. ; Reimplemented from TObject.; Definition at line 58 of file TSystemFile.h. ◆ DrawClass(). void TSystemFile::DrawClass ; (; ); const. inlineoverridevirtual . Draw class inheritance tree of the class to which this object belongs. ; If a class B inherits from a class A, description of B is drawn on the right side of description of A. Member functions overridden by B are shown in class A with a blue line crossing-out the corresponding member function. The following picture is the class inheritance tree of class TPaveLabel:. Reimplemented from TObject.; Definition at line 53 of file TSystemFile.h. ◆ DrawClone(). TObject * TSystemFile::DrawClone ; (; Option_t * ; option); const. inlineoverridevirtual . Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ; If pad was not selected - gPad will be used. ; Reimplemented from TObject.; Definition at line 54 of file TSystemFile.h. ◆ Dump(). void TSystemFile::Dump ; (; ); const. overridevirtual . dump this file ; Reimplemented from TObject.; Definition at line 177 of file TSystemFile.cxx. ◆ Edit(). void TSystemFile::Edit ; (; ). virtual . Invoke text editor on this file. ; Reimplemented in TSystemDirectory.; Definition at line 78 of file TSystemFile.cxx. ◆ GetIconName(). const char * TSy",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSystemFile.html:14262,inherit,inherits,14262,doc/master/classTSystemFile.html,https://root.cern,https://root.cern/doc/master/classTSystemFile.html,1,['inherit'],['inherits']
Modifiability,"onst. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. PyObject*fCallable! callable object to be dispatched. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPyDispatcher(PyObject* callable); Construct a TPyDispatcher from a callable python object. Applies python; object reference counting. TPyDispatcher(const TPyDispatcher& ); Copy constructor. Applies python object reference counting. TPyDispatcher& operator=(const TPyDispatcher& ); Assignment operator. Applies python object reference counting. ~TPyDispatcher(); Destructor. Reference counting for the held python object is in effect. PyObject* DispatchVA( const char* format, ... ); Dispatch the arguments to the held callable python object, using format to; interpret the types of the arguments. Note that format is in python style,; not in C printf style. See: https://docs.python.org/2/c-api/arg.html . PyObject* DispatchVA1( const char* clname, void* obj, const char* format, ... ). PyObject* Dispatch(TPad* selpad, TObject* selected, Int_t event). PyObject* Dispatch(Int_t event, Int_t x, Int_t y, TObject* selected). PyObject* Dispatch(TVirtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPyDispatcher.html:8806,Inherit,Inheritance,8806,root/html602/TPyDispatcher.html,https://root.cern,https://root.cern/root/html602/TPyDispatcher.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. voidCreate(const char* host, const char* user, Int_t nmeth = 0, Int_t* authmeth = 0, char** details = 0). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. Bool_tfActiveFlag used in cleaning/reset; TStringfDetails[6]AuthDetails; Int_tfFailure[6]Statistics of failed attempts / per method; TStringfHostHost; Int_tfMethods[6]AuthMethods; Int_tfNumMethodsNumber of AuthMethods; TList*fSecContextsList of TSecContexts related to this THostAuth; Char_tfServerServer (kSOCKD,kROOTD,kPROOFD); Int_tfSuccess[6]Statistics of successful attempts / per method; TStringfUserUsername. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; THostAuth(); Deafult constructor. THostAuth(const char* host, const char* user, Int_t nmeth = 0, Int_t* authmeth = 0, char** details = 0); Create hostauth object.; 'host' may contain also the server for whicb these directives; are valid in the form 'host:server' or 'server://host'; with server either ""sock[d]"", ""root[d]"", ""proof[d]"" or; 0, 1, 2, respectively. THostAuth(const char* host, Int_t server, const char* user, Int_t nmeth = 0, Int_t* authmeth = 0, char** details = 0); Create hostauth object.; 'host' may contain also the server for whicb these directives; are valid in the form 'host:server' or 'server://host'; with server either ""sock[d]"", ""root[d]"", ""proof[d]"" or; 0, 1, 2, respectively. THostAuth(const char* host, const char* user, Int_t authmeth, const char* details); Create hostauth object with one method only.; 'host' may contain also the server for whicb these directives; are valid in the form 'host:server' or 'server://hos",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/THostAuth.html:7339,Inherit,Inheritance,7339,root/html532/THostAuth.html,https://root.cern,https://root.cern/root/html532/THostAuth.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. voidCreate(const char* host, const char* user, Int_t nmeth = 0, Int_t* authmeth = 0, char** details = 0). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. Bool_tfActiveFlag used in cleaning/reset; TStringfDetails[6]AuthDetails; Int_tfFailure[6]Statistics of failed attempts / per method; TStringfHostHost; Int_tfMethods[6]AuthMethods; Int_tfNumMethodsNumber of AuthMethods; TList*fSecContextsList of TSecContexts related to this THostAuth; Char_tfServerServer (kSOCKD,kROOTD,kPROOFD); Int_tfSuccess[6]Statistics of successful attempts / per method; TStringfUserUsername. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; THostAuth(); Default constructor. THostAuth(const char* host, const char* user, Int_t nmeth = 0, Int_t* authmeth = 0, char** details = 0); Create hostauth object.; 'host' may contain also the server for whicb these directives; are valid in the form 'host:server' or 'server://host'; with server either ""sock[d]"", ""root[d]"", ""proof[d]"" or; 0, 1, 2, respectively. THostAuth(const char* host, Int_t server, const char* user, Int_t nmeth = 0, Int_t* authmeth = 0, char** details = 0); Create hostauth object.; 'host' may contain also the server for whicb these directives; are valid in the form 'host:server' or 'server://host'; with server either ""sock[d]"", ""root[d]"", ""proof[d]"" or; 0, 1, 2, respectively. THostAuth(const char* host, const char* user, Int_t authmeth, const char* details); Create hostauth object with one method only.; 'host' may contain also the server for whicb these directives; are valid in the form 'host:server' or 'server://hos",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/THostAuth.html:7358,Inherit,Inheritance,7358,root/html534/THostAuth.html,https://root.cern,https://root.cern/root/html534/THostAuth.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst; Bool_tIsDynamic() const; TMVA::Event&operator=(const TMVA::Event&); voidPrint(ostream& o) const; voidScaleBoostWeight(Double_t s); voidScaleWeight(Double_t s); voidSetBoostWeight(Double_t w); voidSetClass(UInt_t t); voidSetDoNotBoost(); voidSetSpectator(UInt_t ivar, Float_t value); voidSetTarget(UInt_t itgt, Float_t value); voidSetVal(UInt_t ivar, Float_t val); voidSetWeight(Double_t w). Data Members; private:. Double_tfBoostWeightinternal weight to be set by boosting algorithm; UInt_tfClassclass number; Bool_tfDoNotBoostmark event as not to be boosted (used to compensate for events with negative event weights; Bool_tfDynamicis set when the dynamic values are taken; vector<Float_t>fSpectators""visisting"" variables not used in MVAs; vector<Float_t>fTargetstarget values for regression; vector<Float_t>fValuesthe event values; vector<Float_t*>*fValuesDynamicthe event values; Double_tfWeightevent weight (product of global and individual weights). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Event(); Create an Event object.; When the constructor is invoked for the first time, the class static; variable fgTracks is 0 and the TClonesArray fgTracks is created. ~Event(). Event(); constructors. Event(const TMVA::Event& ). explicit Event(const vector<Float_t>& values, const vector<Float_t>& targetValues, const vector<Float_t>& spectatorValues, UInt_t theClass = 0, Double_t weight = 1.0, Double_t boostweight = 1.0). explicit Event(const vector<Float_t>& , UInt_t theClass, Double_t weight = 1.0, Double_t boostweight = 1.0). Bool_t IsDynamic() const; accessors. {return fDynamic; }. Double_t GetWeight() const; { return fWeight*fBoostWeight; }. Double_t GetOriginalWeight() const; { return fWeight; }. Double_t GetBoostWeight() const; { return TMath::Max(Double_t(0.0001),fBoostWeight); }. UInt_t GetClass() const; { return fClass; }. UInt_t GetNVariables() const. UInt_t GetNTargets() const. UInt_t GetNSpectators() const. Float_t GetValu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__Event.html:5228,Inherit,Inheritance,5228,root/html532/TMVA__Event.html,https://root.cern,https://root.cern/root/html532/TMVA__Event.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst; Bool_tTMVA::VariableTransformBase::IsNormalised() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; TMVA::MsgLogger&TMVA::VariableTransformBase::Log() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidMakeFunction(ostream& fout, const TString& fncName, Int_t part, UInt_t trCounter, Int_t cls); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::VariablePCATransform&operator=(const TMVA::VariablePCATransform&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual Bool_tPrepareTransformation(const vector<TMVA::Event*>&); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::VariableTransformBase::PrintTransformation(ostream&); virtual Int_tTObject::Read(const char* name); virtual voidReadFromXML(void* trfnode); virtual voidReadTransformationFromStream(istream&, const TString&); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariablePCATransform.html:4386,Variab,VariablePCATransform,4386,root/html602/TMVA__VariablePCATransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariablePCATransform.html,2,['Variab'],['VariablePCATransform']
Modifiability,"onst; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TEveHit(); TEveHit(const TEveHit&); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. UShort_tfDetIdCustom detector id.; Int_tfEvaLabelLabel of primary particle, ancestor of label.; Int_tfLabelLabel of particle that produced the hit.; UShort_tfSubdetIdCustom sub-detector id.; TEveVectorfVHit position.; static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveMCTrack& operator=(const TEveHit& ); { *((TParticle*)this) = p; return *this; }. TEveHit(); Float_t charge; probably specific. {}. virtual ~TEveHit(); {}. » Last changed: root/eve:$Id$ » Last generated: 2015-06-02 13:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveHit.html:5755,Inherit,Inheritance,5755,root/html602/TEveHit.html,https://root.cern,https://root.cern/root/html602/TEveHit.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TEveHit(); TEveHit(const TEveHit&); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. UShort_tfDetIdCustom detector id.; Int_tfEvaLabelLabel of primary particle, ancestor of label.; Int_tfLabelLabel of particle that produced the hit.; UShort_tfSubdetIdCustom sub-detector id.; TEveVectorfVHit position.; static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveMCTrack& operator=(const TEveHit& ); { *((TParticle*)this) = p; return *this; }. TEveHit(); Float_t charge; probably specific. {}. virtual ~TEveHit(); {}. » Last changed: root/eve:$Id$ » Last generated: 2015-06-02 15:44; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TEveHit.html:5755,Inherit,Inheritance,5755,root/html604/TEveHit.html,https://root.cern,https://root.cern/root/html604/TEveHit.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TProofResources(); TProofResources(const TProofResources&); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Bool_tfValidkTRUE if resource information was processed correctly. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofResources(); { }. virtual ~TProofResources(); { }. TProofNodeInfo * GetMaster(). TList * GetSubmasters(). TList * GetWorkers(). Bool_t IsValid() const; { return fValid; }. » Author: Paul Nilsson 7/12/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/proof:$Id$ » Last generated: 2015-06-30 15:28; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofResources.html:6195,Inherit,Inheritance,6195,root/html602/TProofResources.html,https://root.cern,https://root.cern/root/html602/TProofResources.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; TProofResources(); TProofResources(const TProofResources&); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Bool_tfValidkTRUE if resource information was processed correctly. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofResources(); { }. virtual ~TProofResources(); { }. TProofNodeInfo * GetMaster(). TList * GetSubmasters(). TList * GetWorkers(). Bool_t IsValid() const; { return fValid; }. » Author: Paul Nilsson 7/12/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/proof:$Id$ » Last generated: 2015-09-08 17:48; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TProofResources.html:6195,Inherit,Inheritance,6195,root/html604/TProofResources.html,https://root.cern,https://root.cern/root/html604/TProofResources.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TKSocket(TSocket* s = 0). Data Members; public:. enum EEncoding { kNone; kSafe; kPriv; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. void*fAuthContextper connection kerberos authentication context; void*fServerserver principal; TSocket*fSocketunderlying socket; static void*fgCCDefshared default credential cache; static void*fgClientclient principal; static void*fgContextshared kerberos context. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TKSocket(TSocket* s = 0); Constructor. ~TKSocket(); Destructor. TKSocket * Connect(const char* server, Int_t port); Connect to 'server' on 'port'. Int_t BlockRead(char*& buf, TKSocket::EEncoding& type); Read block on information from server. The result is stored in buf.; The number of read bytes is returned; -1 is returned in case of error. Int_t BlockWrite(const char* buf, Int_t len, TKSocket::EEncoding type); Block-send 'length' bytes to server from 'buf'. TKSocket(TSocket* s = 0). » Last changed: root/krb5auth:$Id: TKSocket.h 20882 2007-11-19 11:31:26Z rdm $ » Last generated: 2011-11-03 20:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TKSocket.html:5576,Inherit,Inheritance,5576,root/html532/TKSocket.html,https://root.cern,https://root.cern/root/html532/TKSocket.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst; Double_tYZ() const; Double_tZT() const; Double_tZX() const; Double_tZY() const; Double_tZZ() const. protected:. TLorentzRotation(Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); voidSetBoost(Double_t, Double_t, Double_t). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Double_tftt; Double_tftx; Double_tfty; Double_tftz; Double_tfxt; Double_tfxx; Double_tfxy; Double_tfxz; Double_tfyt; Double_tfyx; Double_tfyy; Double_tfyz; Double_tfzt; Double_tfzx; Double_tfzy; Double_tfzz. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TLorentzRotation(); {}. TLorentzRotation(const TRotation& ); {}. TLorentzRotation(const TLorentzRotation& ); {}. TLorentzRotation(Double_t , Double_t , Double_t , Double_t , Double_t , Double_t , Double_t , Double_t , Double_t , Double_t , Double_t , Double_t , Double_t , Double_t , Double_t , Double_t ); {}. TLorentzRotation(Double_t , Double_t , Double_t ); constructor. TLorentzRotation(const TVector3& ); copy constructor. void SetBoost(Double_t , Double_t , Double_t ); boost this Lorentz vector. TLorentzRotation MatrixMultiplication(const TLorentzRotation& ) const; multiply this vector by a matrix. Double_t XX() const; { return fxx; }. Double_t XY() const; { return fxy; }. Double_t XZ() const; { return fxz; }. Double_t XT() const; { return fxt; }. Double_t YX() const; { return fyx; }. Double_t YY() const; { return fyy; }. Double_t YZ() const; { return fyz; }. Double_t YT() const; { return fyt; }. Double_t ZX() const; { return fzx; }",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TLorentzRotation.html:10780,Inherit,Inheritance,10780,root/html532/TLorentzRotation.html,https://root.cern,https://root.cern/root/html532/TLorentzRotation.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst; Float_tGetTubeR() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveVectorGetVector(); TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveArrow.html:8998,Inherit,InheritsFrom,8998,root/html532/TEveArrow.html,https://root.cern,https://root.cern/root/html532/TEveArrow.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst; Float_tGetTubeR() const; virtual UInt_tTObject::GetUniqueID() const; void*TEveElement::GetUserData() const; TEveVectorGetVector(); TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual voidTEveElement::HighlightElement(Bool_t state); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); Int_tTEveElement::NumChildren() const; Int_tTEveElement::NumParents() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::ope",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveArrow.html:8879,Inherit,InheritsFrom,8879,root/html602/TEveArrow.html,https://root.cern,https://root.cern/root/html602/TEveArrow.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst; Int_tTStreamerElement::GetNewType() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tTStreamerElement::GetOffset() const; virtual Option_t*TObject::GetOption() const; virtual Int_tGetSize() const; TMemberStreamer*TStreamerElement::GetStreamer() const; virtual const char*TNamed::GetTitle() const; Int_tTStreamerElement::GetTObjectOffset() const; Int_tTStreamerElement::GetType() const; const char*TStreamerElement::GetTypeName() const; const char*TStreamerElement::GetTypeNameBasic() const; virtual UInt_tTObject::GetUniqueID() const; Double_tTStreamerElement::GetXmax() const; Double_tTStreamerElement::GetXmin() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTStreamerElement::HasCounter() const; virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(TObject* obj = 0); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tIsaPointer() const; virtual Bool_tTStreamerElement::IsBase() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTStreamerElement::IsOldFormat(const char* newTypeName); Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTStreamerElement::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TStreamerObjectAnyPointer.html:3722,Inherit,InheritsFrom,3722,root/html532/TStreamerObjectAnyPointer.html,https://root.cern,https://root.cern/root/html532/TStreamerObjectAnyPointer.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst; Int_tTStreamerElement::GetNewType() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tTStreamerElement::GetOffset() const; virtual Option_t*TObject::GetOption() const; virtual Int_tGetSize() const; TMemberStreamer*TStreamerElement::GetStreamer() const; virtual const char*TNamed::GetTitle() const; Int_tTStreamerElement::GetTObjectOffset() const; Int_tTStreamerElement::GetType() const; const char*TStreamerElement::GetTypeName() const; const char*TStreamerElement::GetTypeNameBasic() const; virtual UInt_tTObject::GetUniqueID() const; Double_tTStreamerElement::GetXmax() const; Double_tTStreamerElement::GetXmin() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTStreamerElement::HasCounter() const; virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(TObject* obj = 0); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTStreamerElement::IsaPointer() const; virtual Bool_tIsBase() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTStreamerElement::IsOldFormat(const char* newTypeName); Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TStreamerBase.html:3599,Inherit,InheritsFrom,3599,root/html532/TStreamerBase.html,https://root.cern,https://root.cern/root/html532/TStreamerBase.html,1,['Inherit'],['InheritsFrom']
Modifiability,"onst; Int_tTStreamerElement::GetNewType() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tTStreamerElement::GetOffset() const; virtual Option_t*TObject::GetOption() const; virtual Int_tGetSize() const; TMemberStreamer*TStreamerElement::GetStreamer() const; virtual const char*TNamed::GetTitle() const; Int_tTStreamerElement::GetTObjectOffset() const; Int_tTStreamerElement::GetType() const; const char*TStreamerElement::GetTypeName() const; const char*TStreamerElement::GetTypeNameBasic() const; virtual UInt_tTObject::GetUniqueID() const; Double_tTStreamerElement::GetXmax() const; Double_tTStreamerElement::GetXmin() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTStreamerElement::HasCounter() const; virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(TObject* obj = 0); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTStreamerElement::IsaPointer() const; virtual Bool_tTStreamerElement::IsBase() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTStreamerElement::IsOldFormat(const char* newTypeName); Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTStreamerElement::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TStreamerObject.html:3656,Inherit,InheritsFrom,3656,root/html532/TStreamerObject.html,https://root.cern,https://root.cern/root/html532/TStreamerObject.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst; Int_tTStreamerElement::GetNewType() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tTStreamerElement::GetOffset() const; virtual Option_t*TObject::GetOption() const; virtual Int_tGetSize() const; TMemberStreamer*TStreamerElement::GetStreamer() const; virtual const char*TNamed::GetTitle() const; Int_tTStreamerElement::GetTObjectOffset() const; Int_tTStreamerElement::GetType() const; const char*TStreamerElement::GetTypeName() const; const char*TStreamerElement::GetTypeNameBasic() const; virtual UInt_tTObject::GetUniqueID() const; Double_tTStreamerElement::GetXmax() const; Double_tTStreamerElement::GetXmin() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTStreamerElement::HasCounter() const; virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTStreamerElement::Init(TObject* obj = 0); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTStreamerElement::IsaPointer() const; virtual Bool_tTStreamerElement::IsBase() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTStreamerElement::IsOldFormat(const char* newTypeName); Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTStreamerElement::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator de",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TStreamerBasicType.html:3701,Inherit,InheritsFrom,3701,root/html532/TStreamerBasicType.html,https://root.cern,https://root.cern/root/html532/TStreamerBasicType.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst; RooSimWSTool::BuildConfig&operator=(const RooSimWSTool::BuildConfig&); voidrestrictBuild(const char* catName, const char* stateList); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). protected:. RooSimWSTool::BuildConfigBuildConfig(); voidinternalAddPdf(const char* pdfName, const char* miStateList, RooSimWSTool::SplitRule& sr). Data Members; protected:. RooCmdArg_conflProtocol; string_masterCatName; map<std::string,SplitRule>_pdfmap; map<std::string,std::string>_restr. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BuildConfig(const char* pdfName, RooSimWSTool::SplitRule& sr); Add prototype p.d.f pdfName to build configuration with associated split rules 'sr'. BuildConfig(const char* pdfName, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); Construct build configuration from single prototype 'pdfName' and list of arguments; that can be passed to RooSimWSTool::build() method. This routine parses SplitParam(); SplitParamConstrained() and Restrict() arguments. BuildConfig(const RooArgSet& legacyBuildConfig); Constructor to make BuildConfig from legacy RooSimPdfBuilder configuration; Empty for now. void internalAddPdf(const char* pdfName, const char* miStateList, RooSimWSTool::SplitRule& sr); Internal routine to add prototype pdf 'pdfName' with list of associated master states 'miStateNameList; and split rules 'sr' to configuration. void restrictBuild(const char* catName, const char* stateList); Restrict build by only considering state names in stateList for split in category catName. BuildConfig(const char* pdfName, RooSimWSTool::SplitRule& sr). BuildConfig(const char* pdfName, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooSimWSTool__BuildConfig.html:5357,config,configuration,5357,root/html528/RooSimWSTool__BuildConfig.html,https://root.cern,https://root.cern/root/html528/RooSimWSTool__BuildConfig.html,4,['config'],['configuration']
Modifiability,"onst; UInt_tTMVA::PDEFoam::GetMaxDepth() const; UInt_tTMVA::PDEFoam::GetNActiveCells() const; virtual const char*TObject::GetName() const; UInt_tTMVA::PDEFoam::GetNCells() const; UInt_tTMVA::PDEFoam::GetNInActiveCells() const; UInt_tTMVA::PDEFoam::GetNmin(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TMVA::PDEFoamCell*TMVA::PDEFoam::GetRootCell() const; virtual const char*TObject::GetTitle() const; Int_tTMVA::PDEFoam::GetTotDim() const; virtual UInt_tTObject::GetUniqueID() const; TObjString*TMVA::PDEFoam::GetVariableName(Int_t idx); Double_tTMVA::PDEFoam::GetXmax(Int_t idim) const; Double_tTMVA::PDEFoam::GetXmin(Int_t idim) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidTMVA::PDEFoam::Initialize(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; TMVA::MsgLogger&TMVA::PDEFoam::Log() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__PDEFoamDecisionTree.html:4301,Inherit,InheritsFrom,4301,root/html532/TMVA__PDEFoamDecisionTree.html,https://root.cern,https://root.cern/root/html532/TMVA__PDEFoamDecisionTree.html,10,['Inherit'],['InheritsFrom']
Modifiability,"onst; UInt_tTMVA::PDEFoam::GetMaxDepth() const; UInt_tTMVA::PDEFoam::GetNActiveCells() const; virtual const char*TObject::GetName() const; UInt_tTMVA::PDEFoam::GetNCells() const; UInt_tTMVA::PDEFoam::GetNInActiveCells() const; UInt_tTMVA::PDEFoam::GetNmin(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TMVA::PDEFoamCell*TMVA::PDEFoam::GetRootCell() const; virtual const char*TObject::GetTitle() const; Int_tTMVA::PDEFoam::GetTotDim() const; virtual UInt_tTObject::GetUniqueID() const; TObjString*TMVA::PDEFoam::GetVariableName(Int_t idx); Double_tTMVA::PDEFoam::GetXmax(Int_t idim) const; Double_tTMVA::PDEFoam::GetXmin(Int_t idim) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; voidTMVA::PDEFoam::Initialize(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; TMVA::MsgLogger&TMVA::PDEFoam::Log() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__PDEFoamDecisionTree.html:4303,Inherit,InheritsFrom,4303,root/html602/TMVA__PDEFoamDecisionTree.html,https://root.cern,https://root.cern/root/html602/TMVA__PDEFoamDecisionTree.html,10,['Inherit'],['InheritsFrom']
Modifiability,"onst; const ROOT::Fit::DataRange&ROOT::Fit::FitData::Range() const; doubleRefVolume() const; voidResize(unsigned int npoints); voidSetRefVolume(double value); unsigned intSize() const; doubleValue(unsigned int ipoint) const. protected:. voidSetNPoints(unsigned int n). Data Members; public:. enum ErrorType { kNoError; kValueError; kCoordError; kAsymError; };. private:. vector<double>fBinEdgevector containing the bin upper edge (coordinate will contain low edge) ; ROOT::Fit::DataVector*fDataVectorpointer to the copied in data vector; ROOT::Fit::DataWrapper*fDataWrapperpointer to the external data wrapper structure; unsigned intfDimcoordinate dimension; unsigned intfNPointsnumber of contained points in the data set (can be different than size of vector); unsigned intfPointSizetotal point size including value and errors (= fDim + 2 for error in only Y ) ; doublefRefVolumereference bin volume - used to normalize the bins in case of variable bins data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; unsigned int GetPointSize(ROOT::Fit::BinData::ErrorType err, unsigned int dim). ErrorType GetErrorType() const. explicit BinData(unsigned int maxpoints = 0, unsigned int dim = 1, ROOT::Fit::BinData::ErrorType err = kValueError). constructor from dimension of point and max number of points (to pre-allocate vector); Give a zero value and then use Initialize later one if the size is not known. explicit BinData(const ROOT::Fit::DataOptions& opt, unsigned int maxpoints = 0, unsigned int dim = 1, ROOT::Fit::BinData::ErrorType err = kValueError). constructor from option and default range. BinData(const ROOT::Fit::DataOptions& opt, const ROOT::Fit::DataRange& range, unsigned int maxpoints = 0, unsigned int dim = 1, ROOT::Fit::BinData::ErrorType err = kValueError). constructor from options and range; efault is 1D and value errors. BinData(unsigned int n, const double* dataX, const double* val, const double* ex, const double* eval); constructurs",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Fit__BinData.html:5633,Inherit,Inheritance,5633,root/html532/ROOT__Fit__BinData.html,https://root.cern,https://root.cern/root/html532/ROOT__Fit__BinData.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst; const TString&TEveElement::GetVizTag() const; Int_tGrowFor(Int_t n_points); virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInitFill(Int_t subIdNum); virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTPolyMarker3D::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Int_tTPolyMarker3D::Merge(TCollection* list); virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTAttMarker::Modify(); virtual voidTEveElement::N",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEvePointSet.html:13254,Inherit,InheritsFrom,13254,root/html532/TEvePointSet.html,https://root.cern,https://root.cern/root/html532/TEvePointSet.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst; const TString&TEveElement::GetVizTag() const; Int_tGrowFor(Int_t n_points); virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual Bool_tTEveProjectable::HasProjecteds() const; virtual voidTEveElement::HighlightElement(Bool_t state); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInitFill(Int_t subIdNum); virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTPolyMarker3D::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Int_tTPolyMarker3D::Merge(TCollection* list); virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTAttMarker::Modify(); virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEvePointSet.html:13008,Inherit,InheritsFrom,13008,root/html602/TEvePointSet.html,https://root.cern,https://root.cern/root/html602/TEvePointSet.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst; doubleROOT::Math::Minimizer::Precision() const; intROOT::Math::Minimizer::PrintLevel() const; virtual voidROOT::Math::Minimizer::PrintResults(); virtual boolProvidesError() const; virtual boolROOT::Math::Minimizer::Scan(unsigned int, unsigned int&, double*, double*, double = 0, double = 0); voidROOT::Math::Minimizer::SetDefaultOptions(); voidROOT::Math::Minimizer::SetErrorDef(double up); virtual boolSetFixedVariable(unsigned int, const string&, double); virtual voidSetFunction(const ROOT::Math::IMultiGenFunction& func); virtual voidSetFunction(const ROOT::Math::IMultiGradFunction& func); virtual boolSetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double, double); virtual boolSetLowerLimitedVariable(unsigned int ivar, const string& name, double val, double step, double lower); voidROOT::Math::Minimizer::SetMaxFunctionCalls(unsigned int maxfcn); voidROOT::Math::Minimizer::SetMaxIterations(unsigned int maxiter); voidROOT::Math::Minimizer::SetOptions(const ROOT::Math::MinimizerOptions& opt); voidROOT::Math::Minimizer::SetPrecision(double prec); voidROOT::Math::Minimizer::SetPrintLevel(int level); voidROOT::Math::Minimizer::SetStrategy(int strategyLevel); voidROOT::Math::Minimizer::SetTolerance(double tol); virtual boolSetUpperLimitedVariable(unsigned int ivar, const string& name, double val, double step, double upper); voidROOT::Math::Minimizer::SetValidError(bool on); virtual boolSetVariable(unsigned int ivar, const string& name, double val, double step); virtual boolSetVariableValue(unsigned int ivar, double val); virtual boolSetVariableValues(const double* x); intROOT::Math::Minimizer::Status() const; intROOT::Math::Minimizer::Strategy() const; doubleROOT::Math::Minimizer::Tolerance() const; const ROOT::Math::MinimTransformFunction*TransformFunction() const; virtual intROOT::Math::Minimizer::VariableIndex(const string&) const; virtual stringROOT::Math::Minimizer::VariableName(unsigned int) const; virtual const double*X() const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__GSLMinimizer.html:4392,Variab,VariableIndex,4392,root/html532/ROOT__Math__GSLMinimizer.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__GSLMinimizer.html,2,['Variab'],"['VariableIndex', 'VariableName']"
Modifiability,"onst; doubleoperator()(double x); ROOT::Math::IntegratorOneDimOptionsOptions() const; doubleResult() const; voidSetAbsTolerance(double absTolerance); voidSetFunction(const ROOT::Math::IGenFunction& f, bool copy = false); voidSetFunction(const ROOT::Math::IMultiGenFunction& f, unsigned int icoord, const double* x); voidSetOptions(const ROOT::Math::IntegratorOneDimOptions& opt); voidSetRelTolerance(double relTolerance); intStatus() const. protected:. ROOT::Math::VirtualIntegratorOneDim*CreateIntegrator(ROOT::Math::IntegrationOneDim::Type type, double absTol, double relTol, unsigned int size, int rule). private:. ROOT::Math::IntegratorOneDimIntegratorOneDim(const ROOT::Math::IntegratorOneDim&); ROOT::Math::IntegratorOneDim&operator=(const ROOT::Math::IntegratorOneDim&). Data Members; private:. auto_ptr<ROOT::Math::IBaseFunctionOneDim>fFuncpointer to owned function; ROOT::Math::VirtualIntegratorOneDim*fIntegratorpointer to integrator interface class. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetFunction( Function & f). double Integral(const ROOT::Math::IGenFunction& f, double a, double b). double Integral(double a, double b). double IntegralCauchy(const ROOT::Math::IGenFunction& f, double a, double b, double c). IntegratorOneDim(ROOT::Math::IntegrationOneDim::Type type = IntegrationOneDim::kDEFAULT, double absTol = 0, double relTol = 0, unsigned int size = 0, unsigned int rule = 0); constructors. Constructor of one dimensional Integrator, default type is adaptive. @param type integration type (adaptive, non-adaptive, etc..); @param absTol desired absolute Error; @param relTol desired relative Error; @param size maximum number of sub-intervals; @param rule Gauss-Kronrod integration rule (only for GSL kADAPTIVE type). Possible type values are : kGAUSS (simple Gauss method), kADAPTIVE (from GSL), kADAPTIVESINGULAR (from GSL), kNONADAPTIVE (from GSL); Possible rule values are kGAUS15 (rule = 1), kGAUS21( rule = 2), kGAUS3",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__IntegratorOneDim.html:4112,Inherit,Inheritance,4112,root/html532/ROOT__Math__IntegratorOneDim.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__IntegratorOneDim.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst; static Int_tGetBrowsables(TList& list, const TBranch* branch, const TVirtualBranchBrowsable* parent = 0); TClass*TVirtualBranchBrowsable::GetClassType() const; const char*GetDraw() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TVirtualBranchBrowsable::GetIconName() const; TList*TVirtualBranchBrowsable::GetLeaves() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TVirtualBranchBrowsable*TVirtualBranchBrowsable::GetParent() const; voidTVirtualBranchBrowsable::GetScope(TString& scope) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTVirtualBranchBrowsable::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TCollectionPropertyBrowsable.html:4845,Inherit,InheritsFrom,4845,root/html532/TCollectionPropertyBrowsable.html,https://root.cern,https://root.cern/root/html532/TCollectionPropertyBrowsable.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst; static Int_tGetBrowsables(TList& list, const TBranch* branch, const TVirtualBranchBrowsable* parent = 0); TClass*TVirtualBranchBrowsable::GetClassType() const; const char*GetDraw() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TVirtualBranchBrowsable::GetIconName() const; TList*TVirtualBranchBrowsable::GetLeaves() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TVirtualBranchBrowsable*TVirtualBranchBrowsable::GetParent() const; voidTVirtualBranchBrowsable::GetScope(TString& scope) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTVirtualBranchBrowsable::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TCollectionPropertyBrowsable.html:4778,Inherit,InheritsFrom,4778,root/html602/TCollectionPropertyBrowsable.html,https://root.cern,https://root.cern/root/html602/TCollectionPropertyBrowsable.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const TString&GetId() const; const TString&GetImage() const; const TString&GetMsd() const; virtual const char*GetName() const; const TString&GetNodeName() const; TProofNodeInfo::ENodeTypeGetNodeType() const; static TProofNodeInfo::ENodeTypeGetNodeType(const TString& type); Int_tGetNWrks() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TString&GetOrdinal() const; Int_tGetPerfIndex() const; Int_tGetPort() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const TString&GetWorkDir() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsMaster() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tIsSubMaster() const; Bool_tIsWorker() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofNodeInfo.html:2907,Inherit,InheritsFrom,2907,root/html602/TProofNodeInfo.html,https://root.cern,https://root.cern/root/html602/TProofNodeInfo.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual Int_tGetLastPosition() const; virtual Int_tTPoints3DABC::GetN() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*GetOption() const; virtual Float_t*TPoints3DABC::GetP() const; virtual void*GetTable(); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Float_tGetX(Int_t idx) const; virtual const Float_t*TPoints3DABC::GetXYZ(Int_t idx); virtual Float_t*TPoints3DABC::GetXYZ(Float_t* xyz, Int_t idx, Int_t num = 1) const; virtual Float_tGetY(Int_t idx) const; virtual Float_tGetZ(Int_t idx) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual Int_tIndx(Int_t sortedIndx) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTablePoints.html:3723,Inherit,InheritsFrom,3723,root/html532/TTablePoints.html,https://root.cern,https://root.cern/root/html532/TTablePoints.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual Int_tGetLastPosition() const; virtual Int_tTPoints3DABC::GetN() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*GetOption() const; virtual Float_t*TPoints3DABC::GetP() const; virtual void*GetTable(); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Float_tGetX(Int_t idx) const; virtual const Float_t*TPoints3DABC::GetXYZ(Int_t idx); virtual Float_t*TPoints3DABC::GetXYZ(Float_t* xyz, Int_t idx, Int_t num = 1) const; virtual Float_tGetY(Int_t idx) const; virtual Float_tGetZ(Int_t idx) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual Int_tIndx(Int_t sortedIndx) const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTablePoints.html:3747,Inherit,InheritsFrom,3747,root/html602/TTablePoints.html,https://root.cern,https://root.cern/root/html602/TTablePoints.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual TList*GetListOfMethodArgs(); virtual const char*TFunction::GetMangledName() const; virtual const char*TNamed::GetName() const; Int_tTFunction::GetNargs() const; Int_tTFunction::GetNargsOpt() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TFunction::GetPrototype() const; const char*TFunction::GetReturnTypeName() const; const char*TFunction::GetSignature(); virtual const char*Getter() const; virtual TMethodCall*GetterMethod(); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; void*TFunction::InterfaceMethod() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; EMenuItemKindIsMenuItem() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMethod.html:3272,Inherit,InheritsFrom,3272,root/html532/TMethod.html,https://root.cern,https://root.cern/root/html532/TMethod.html,1,['Inherit'],['InheritsFrom']
Modifiability,"onst; static RooArgSet*GetAsArgSet(RooFitResult* result, TString prefix = """", bool withErrorsAndPulls = false); RooDataSet*GetAsDataSet(TString name, TString title); virtual TClass*IsA() const; RooStats::DetailedOutputAggregator&operator=(const RooStats::DetailedOutputAggregator&); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; private:. RooArgList*fBuiltSet; RooDataSet*fResult. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~DetailedOutputAggregator(); destructor. RooArgSet * GetAsArgSet(RooFitResult* result, TString prefix = """", bool withErrorsAndPulls = false); static function to translate the given fit result to a RooArgSet in a generic way.; Prefix is prepended to all variable names.; LM: caller is responsible to delete the returned list and eventually also the content of the list; Note that the returned list is not owning the returned content. void AppendArgSet(const RooAbsCollection* aset, TString prefix = """"); For each variable in aset, prepend prefix to its name and add; to the internal store. Note this will not appear in the produced; dataset unless CommitSet is called. void CommitSet(double weight = 1.). RooDataSet * GetAsDataSet(TString name, TString title); Returns all detailed output as a dataset.; Ownership of the dataset is transferred to the caller. DetailedOutputAggregator(). const RooArgList* GetAsArgList() const; Returns this set of detailed output.; Note that the ownership of the returned list is not transfered; It is managed by the DetailedOutputAggregator class. » Author: Sven Kreiss, Kyle Cranmer Nov 2010 » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id$ » Last generated: 2015-06-30 14:36; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__DetailedOutputAggregator.html:1850,variab,variable,1850,root/html602/RooStats__DetailedOutputAggregator.html,https://root.cern,https://root.cern/root/html602/RooStats__DetailedOutputAggregator.html,2,['variab'],['variable']
Modifiability,"onst; static RooArgSet*GetAsArgSet(RooFitResult* result, TString prefix = """", bool withErrorsAndPulls = false); RooDataSet*GetAsDataSet(TString name, TString title); virtual TClass*IsA() const; RooStats::DetailedOutputAggregator&operator=(const RooStats::DetailedOutputAggregator&); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; private:. RooArgList*fBuiltSet; RooDataSet*fResult. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~DetailedOutputAggregator(); destructor. RooArgSet * GetAsArgSet(RooFitResult* result, TString prefix = """", bool withErrorsAndPulls = false); static function to translate the given fit result to a RooArgSet in a generic way.; Prefix is prepended to all variable names.; LM: caller is responsible to delete the returned list and eventually also the content of the list; Note that the returned list is not owning the returned content. void AppendArgSet(const RooAbsCollection* aset, TString prefix = """"); For each variable in aset, prepend prefix to its name and add; to the internal store. Note this will not appear in the produced; dataset unless CommitSet is called. void CommitSet(double weight = 1.). RooDataSet * GetAsDataSet(TString name, TString title); Returns all detailed output as a dataset.; Ownership of the dataset is transferred to the caller. DetailedOutputAggregator(). const RooArgList* GetAsArgList() const; Returns this set of detailed output.; Note that the ownership of the returned list is not transfered; It is managed by the DetailedOutputAggregator class. » Author: Sven Kreiss, Kyle Cranmer Nov 2010 » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id$ » Last generated: 2015-09-08 17:42; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooStats__DetailedOutputAggregator.html:1850,variab,variable,1850,root/html604/RooStats__DetailedOutputAggregator.html,https://root.cern,https://root.cern/root/html604/RooStats__DetailedOutputAggregator.html,2,['variab'],['variable']
Modifiability,"onst; static TClass*Class(); voidCopy(TArrayC& array) const; const Char_t*GetArray() const; Char_t*GetArray(); virtual Double_tGetAt(Int_t i) const; Int_tTArray::GetSize() const; Stat_tGetSum() const; virtual TClass*IsA() const; TArrayC&operator=(const TArrayC& rhs); Char_t&operator[](Int_t i); Char_toperator[](Int_t i) const; static TArray*TArray::ReadArray(TBuffer& b, const TClass* clReq); voidReset(Char_t val = 0); virtual voidSet(Int_t n); voidSet(Int_t n, const Char_t* array); virtual voidSetAt(Double_t v, Int_t i); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); static voidTArray::WriteArray(TBuffer& b, const TArray* a). protected:. Bool_tTArray::BoundsOk(const char* where, Int_t at) const; Bool_tTArray::OutOfBoundsError(const char* where, Int_t i) const. Data Members; public:. Char_t*fArray[fN] Array of fN chars; Int_tTArray::fNNumber of array elements. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TArrayC(); Default TArrayC ctor. TArrayC(Int_t n); Create TArrayC object and set array size to n chars. TArrayC(Int_t n, const Char_t* array); Create TArrayC object and initialize it with values of array. TArrayC(const TArrayC& array); Copy constructor. TArrayC & operator=(const TArrayC& rhs); TArrayC assignment operator. ~TArrayC(); Delete TArrayC object. void Adopt(Int_t n, Char_t* array); Adopt array arr into TArrayC, i.e. don't copy arr but use it directly; in TArrayC. User may not delete arr, TArrayC dtor will do it. void AddAt(Char_t c, Int_t i); Add char c at position i. Check for out of bounds. void Set(Int_t n); Set size of this array to n chars.; A new array is created, the old contents copied to the new array,; then the old array is deleted.; This function should not be called if the array was declared via Adopt. void Set(Int_t n, const Char_t* array); Set size of this array to n chars and set the contents.; This function sh",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TArrayC.html:1550,Inherit,Inheritance,1550,root/html534/TArrayC.html,https://root.cern,https://root.cern/root/html534/TArrayC.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst; virtual Bool_tTObject::IsFolder() const; Bool_tTMVA::VariableTransformBase::IsNormalised() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; TMVA::MsgLogger&TMVA::VariableTransformBase::Log() const; virtual voidTObject::ls(Option_t* option = """") const; virtual voidMakeFunction(ostream& fout, const TString& fncName, Int_t part, UInt_t trCounter, Int_t cls); voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::VariableDecorrTransform&operator=(const TMVA::VariableDecorrTransform&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual Bool_tPrepareTransformation(const vector<TMVA::Event*>&); virtual voidTObject::Print(Option_t* option = """") const; virtual voidPrintTransformation(ostream& o); virtual Int_tTObject::Read(const char* name); virtual voidReadFromXML(void* trfnode); virtual voidReadTransformationFromStream(istream&, const TString&); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::VariableTransformBase::SelectInput(const TString& inputVariables, Bool_t putIntoVariables = kFALSE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__VariableDecorrTransform.html:4326,Variab,VariableDecorrTransform,4326,root/html602/TMVA__VariableDecorrTransform.html,https://root.cern,https://root.cern/root/html602/TMVA__VariableDecorrTransform.html,2,['Variab'],['VariableDecorrTransform']
Modifiability,"onst; virtual Double_tGetSkewness(Int_t axis = 1) const; virtual voidGetStats(Double_t* stats) const; virtual Double_tGetStdDev(Int_t axis = 1) const; virtual Double_tGetStdDevError(Int_t axis = 1) const; virtual Double_tGetSumOfWeights() const; virtual TArrayD*GetSumw2(); virtual const TArrayD*GetSumw2() const; virtual Int_tGetSumw2N() const; virtual Float_tGetTickLength(Option_t* axis = ""X"") const; virtual const char*TNamed::GetTitle() const; virtual Style_tGetTitleFont(Option_t* axis = ""X"") const; virtual Float_tGetTitleOffset(Option_t* axis = ""X"") const; virtual Float_tGetTitleSize(Option_t* axis = ""X"") const; virtual UInt_tTObject::GetUniqueID() const; TAxis*GetXaxis(); const TAxis*GetXaxis() const; TAxis*GetYaxis(); const TAxis*GetYaxis() const; TAxis*GetZaxis(); const TAxis*GetZaxis() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual Double_tIntegral(Option_t* option = """") const; virtual Double_tIntegral(Int_t binx1, Int_t binx2, Option_t* option = """") const; virtual Double_tIntegralAndError(Int_t binx1, Int_t binx2, Double_t& err, Option_t* option = """") const; virtual Double_tInterpolate(Double_t x); virtual Double_tInterpolate(Double_t x, Double_t y); virtual Double_tInterpolate(Double_t x, Double_t y, Double_t z); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsBinOverflow(Int_t bin) const; Bool_tIsBinUnderflow(Int_t bin) const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTAttFill::IsTransparent() const; Bool_tTObject::IsZombie() const; virtual Double_tKolmogorovTest(const TH1* h2, Option_t* option = """")",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TH1.html:26155,Inherit,InheritsFrom,26155,root/html604/TH1.html,https://root.cern,https://root.cern/root/html604/TH1.html,1,['Inherit'],['InheritsFrom']
Modifiability,"onst; virtual Double_tgetValV(const RooArgSet* set = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; static Bool_thideOffset(); RooGenFunction*iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual voidRooAbsArg::ioStreamerPass2(); static voidRooAbsArg::ioStreamerPass2Finalize(); virtual TClass*IsA() const; virtual Bool_tisBinnedDistribution(const RooArgSet&) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tisIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tisOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* name) const; virtual Bool_tRooAbsArg:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsReal.html:15367,Inherit,InheritsFrom,15367,root/html534/RooAbsReal.html,https://root.cern,https://root.cern/root/html534/RooAbsReal.html,3,['Inherit'],['InheritsFrom']
Modifiability,"onst; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. static Int_tRooPrintable::_nameLength; Double_t_range[2]; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooRangeBinning(const char* name = 0); Default constructor. RooRangeBinning(Double_t xmin, Double_t xmax, const char* name = 0); Construct binning with range [xmin,xmax] with no binning substructure. RooRangeBinning(const RooRangeBinning& , const char* name = 0); Copy constructor. ~RooRangeBinning(); Destructor. void setRange(Double_t xlo, Double_t xhi); Change limits of the binning to [xlo,xhi]. RooAbsBinning* clone(const char* name = 0) const; { return new RooRangeBinning(*this,name?name:GetName()) ; }. Int_t numBoundaries() const; { return 2 ; }. Int_t binNumber(Double_t ) const; { return 0 ; }. Double_t binCenter(Int_t ) const; { return (_range[0] + _range[1]) / 2 ; }. Double_t binWidth(Int_t ) const; { return (_range[1] - _range[0]) ; }. Double_t binLow(Int_t ) const; { return _range[0] ; }. Double_t binHigh(Int_t ) const; { return _range[1] ; }. void setMin(Double_t xlo); { setRange(xlo,highBound()) ; }. void setMax(Double_t xhi)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooRangeBinning.html:8094,Inherit,Inheritance,8094,root/html532/RooRangeBinning.html,https://root.cern,https://root.cern/root/html532/RooRangeBinning.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst; virtual Long64_tTDirectory::GetSeekKeys() const; virtual Long64_tTDirectory::GetSeekParent() const; TVirtualPad*GetSelectedPad() const; const TObject*GetSelectedPrimitive() const; TStyle*GetStyle(const char* name) const; virtual const char*TNamed::GetTitle() const; static const char*GetTutorialsDir(); TDataType*GetType(const char* name, Bool_t load = kFALSE) const; virtual UInt_tTObject::GetUniqueID() const; TUUIDTDirectory::GetUUID() const; TProcessUUID*GetUUIDs() const; const char*GetVersion() const; Int_tGetVersionCode() const; Int_tGetVersionDate() const; Int_tGetVersionInt() const; Int_tGetVersionTime() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; voidIdle(UInt_t idleTimeInSec, const char* command = 0); Int_tIgnoreInclude(const char* fname, const char* expandedfname); static Int_tIncreaseDirLevel(); static voidIndentLevel(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; static Bool_tInitialized(); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsBatch() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; Bool_tIsEscaped() const; Bool_tIsExecutingMacro() const; virtual Bool_tIsFolder() const; Bool_tIsInterrupted() const; Bool_tIsLineProcessing() const; virtual Bool_tTDirectory::IsModified() const; Bool_tTObject::IsOnHeap() const; Bool_tIsProofServ() const; Bool_tIsRootFile(const char* filename) const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTDirectory::IsWritable() const; Bool_tTObject::IsZombie() const; TClass*LoadClass(const char* name, Bool_t silent = kFALSE) const; Int_tLoadClass(const char* classname, const char* libname, Bool_t check = kFALSE); Int_tLoadMacro(const char* filename, Int_t* error = 0, Bool_t check = kFALSE); virtual voidls(Option_t* option = """") ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TROOT.html:9790,Inherit,InheritsFrom,9790,root/html602/TROOT.html,https://root.cern,https://root.cern/root/html602/TROOT.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst; virtual Long64_tTDirectoryFile::GetSeekDir() const; virtual Long64_tTFile::GetSeekFree() const; virtual Long64_tTFile::GetSeekInfo() const; virtual Long64_tTDirectoryFile::GetSeekKeys() const; virtual Long64_tTDirectoryFile::GetSeekParent() const; virtual Long64_tTWebFile::GetSize() const; const TList*TFile::GetStreamerInfoCache(); virtual TList*TFile::GetStreamerInfoList(); virtual const char*TNamed::GetTitle() const; static TFile::EFileTypeTFile::GetType(const char* name, Option_t* option = """", TString* prefix = 0); virtual UInt_tTObject::GetUniqueID() const; TUrlGetUrl() const; TUUIDTDirectory::GetUUID() const; Int_tTFile::GetVersion() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; static voidTFile::IncrementFileCounter(); virtual voidTFile::IncrementProcessIDs(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTFile::IsArchive() const; Bool_tTFile::IsBinary() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTDirectory::IsFolder() const; virtual Bool_tTDirectoryFile::IsModified() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTWebFile::IsOpen() const; Bool_tTFile::IsRaw() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTDirectoryFile::IsWritable() const; Bool_tTObject::IsZombie() const; virtual voidTFile::ls(Option_t* option = """") const; virtual voidTFile::MakeFree(Long64_t first, Long64_t last); virtual voidTFile::MakeProject(const char* dirname, const char* classes = ""*"", Option_t* option = ""new"")MENU ; virtual voidTFile::Map()MENU ; virtual Bool_tTFile::Matches(const char* name); voidTObject::MayNotUse(const char* method) const; virtual TDirectory*TDirectoryFile::mkdir(const char* name, cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TAS3File.html:8553,Inherit,InheritsFrom,8553,root/html532/TAS3File.html,https://root.cern,https://root.cern/root/html532/TAS3File.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tGetDtot() const; Double_tGetExpectedCLb_b(Int_t sigma = 0) const; Double_tGetExpectedCLb_sb(Int_t sigma = 0) const; Double_tGetExpectedCLs_b(Int_t sigma = 0) const; Double_tGetExpectedCLsb_b(Int_t sigma = 0) const; Double_tGetExpectedStatistic_b(Int_t sigma = 0) const; Double_tGetExpectedStatistic_sb(Int_t sigma = 0) const; virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tGetStatistic() const; Double_tGetStot() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TConfidenceLevel.html:3074,Inherit,InheritsFrom,3074,root/html532/TConfidenceLevel.html,https://root.cern,https://root.cern/root/html532/TConfidenceLevel.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tGetDtot() const; Double_tGetExpectedCLb_b(Int_t sigma = 0) const; Double_tGetExpectedCLb_sb(Int_t sigma = 0) const; Double_tGetExpectedCLs_b(Int_t sigma = 0) const; Double_tGetExpectedCLsb_b(Int_t sigma = 0) const; Double_tGetExpectedStatistic_b(Int_t sigma = 0) const; Double_tGetExpectedStatistic_sb(Int_t sigma = 0) const; virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tGetStatistic() const; Double_tGetStot() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TConfidenceLevel.html:2966,Inherit,InheritsFrom,2966,root/html602/TConfidenceLevel.html,https://root.cern,https://root.cern/root/html602/TConfidenceLevel.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual voidForceDecay(); voidForceParticleDecay(Int_t particle, Int_t product, Int_t mult); voidForceParticleDecay(Int_t particle, Int_t* products, Int_t* mult, Int_t npart); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual Float_tGetLifetime(Int_t kf); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Float_tGetPartialBranchingRatio(Int_t ipart); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual Int_tImportParticles(TClonesArray* particles); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(); virtual voidTObject::Inspect() constMENU ; static TPythia6Decayer*Instance(); voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPythia6Decayer.html:2927,Inherit,InheritsFrom,2927,root/html532/TPythia6Decayer.html,https://root.cern,https://root.cern/root/html532/TPythia6Decayer.html,1,['Inherit'],['InheritsFrom']
Modifiability,"onst; virtual TObject*TObject::FindObject(const TObject* obj) const; voidfirstBox(UInt_t[] box) const; voidgeneratePoint(const UInt_t[] box, Double_t[] x, UInt_t[] bin, Double_t& vol, Bool_t useQuasiRandom = kTRUE) const; UInt_tgetDimension() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; UInt_tgetNBins() const; UInt_tgetNBoxes() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tgetVolume() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; Bool_tinitialize(const RooAbsFunc& function); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tisValid() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidRooPrintable::nameFieldLength(Int_t newLen); Bool_tnextBox(UInt_t[] box) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooGrid.html:3113,Inherit,InheritsFrom,3113,root/html602/RooGrid.html,https://root.cern,https://root.cern/root/html602/RooGrid.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*GetBlobPrefixName() const; const char*GetBlobTypeName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TSQLClassInfo*GetInfo() const; const char*GetLocatedField() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Long64_tGetObjId() const; virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*GetValue() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsBlobData() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; Bool_tLocateColumn(const char* colname, Bool_t isblob = kFALSE); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSQLObjectData.html:3149,Inherit,InheritsFrom,3149,root/html532/TSQLObjectData.html,https://root.cern,https://root.cern/root/html532/TSQLObjectData.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*GetBlobPrefixName() const; const char*GetBlobTypeName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TSQLClassInfo*GetInfo() const; const char*GetLocatedField() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Long64_tGetObjId() const; virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*GetValue() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsBlobData() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; Bool_tLocateColumn(const char* colname, Bool_t isblob = kFALSE); virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSQLObjectData.html:2971,Inherit,InheritsFrom,2971,root/html602/TSQLObjectData.html,https://root.cern,https://root.cern/root/html602/TSQLObjectData.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const Double_t*TGeoBBox::GetOrigin() const; Double_tTGeoTubeSeg::GetPhi1() const; Double_tTGeoTubeSeg::GetPhi2() const; const char*TGeoShape::GetPointerName() const; virtual Bool_tTGeoBBox::GetPointsOnFacet(Int_t index, Int_t npoints, Double_t* array) const; virtual Bool_tGetPointsOnSegments(Int_t npoints, Double_t* array) const; virtual Double_tTGeoTube::GetRmax() const; virtual Double_tTGeoTube::GetRmin() const; virtual const char*TNamed::GetTitle() const; static TGeoMatrix*TGeoShape::GetTransform(); virtual UInt_tTObject::GetUniqueID() const; Double_tGetZcoord(Double_t xc, Double_t yc, Double_t zc) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Bool_tTGeoTube::HasRmin() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual voidInspectShape() const; voidTObject::InvertBit(UInt_t f); voidTGeoShape::InvertShapeBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGeoShape::IsAssembly() const; static Bool_tTGeoShape::IsCloseToPhi(Double_t epsil, Double_t* point, Double_t c1, Double_t s1, Double_t c2, Double_t s2); virtual Bool_tTGeoShape::IsComposite() const; static Bool_tTGeoShape::IsCrossingSemiplane(Double_t* point, Double_t* dir, Double_t cphi, Double_t sphi, Double_t& snext, Double_t& rxy); virtual Bool_tTGeoTube::IsCylType() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tTGeoShape::IsInPhiRange(Double_t* point, Double_t phi1, Double_t phi2); virtual Bool_tTGeoBBox::IsNullBox() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTGeoShape::IsReflected() const; Bool_tTGeoShape::IsRu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoCtub.html:6777,Inherit,InheritsFrom,6777,root/html532/TGeoCtub.html,https://root.cern,https://root.cern/root/html532/TGeoCtub.html,1,['Inherit'],['InheritsFrom']
Modifiability,"onst; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const Double_t*TGeoBBox::GetOrigin() const; Double_tTGeoTubeSeg::GetPhi1() const; Double_tTGeoTubeSeg::GetPhi2() const; const char*TGeoShape::GetPointerName() const; virtual Bool_tTGeoBBox::GetPointsOnFacet(Int_t index, Int_t npoints, Double_t* array) const; virtual Bool_tGetPointsOnSegments(Int_t npoints, Double_t* array) const; virtual Double_tTGeoTube::GetRmax() const; virtual Double_tTGeoTube::GetRmin() const; virtual const char*TNamed::GetTitle() const; static TGeoMatrix*TGeoShape::GetTransform(); virtual UInt_tTObject::GetUniqueID() const; Double_tGetZcoord(Double_t xc, Double_t yc, Double_t zc) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; Bool_tTGeoTube::HasRmin() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; virtual voidInspectShape() const; voidTObject::InvertBit(UInt_t f); voidTGeoShape::InvertShapeBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGeoShape::IsAssembly() const; static Bool_tTGeoShape::IsCloseToPhi(Double_t epsil, const Double_t* point, Double_t c1, Double_t s1, Double_t c2, Double_t s2); virtual Bool_tTGeoShape::IsComposite() const; static Bool_tTGeoShape::IsCrossingSemiplane(const Double_t* point, const Double_t* dir, Double_t cphi, Double_t sphi, Double_t& snext, Double_t& rxy); virtual Bool_tTGeoTube::IsCylType() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; static Bool_tTGeoShape::IsInPhiRange(const Double_t* point, Double_t phi1, Double_t phi2); virtual Bool_tTGeoBBox::IsNullBox() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTGeoShape::IsReflected() cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoCtub.html:7532,Inherit,InheritsFrom,7532,root/html534/TGeoCtub.html,https://root.cern,https://root.cern/root/html534/TGeoCtub.html,3,['Inherit'],['InheritsFrom']
Modifiability,"onst; virtual const RooArgSet*get() const; virtual const RooArgSet*get(Int_t index) const; static RooAbsData::StorageTypeRooAbsData::getDefaultStorageType(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Bool_tRooAbsData::getRange(RooRealVar& var, Double_t& lowest, Double_t& highest, Double_t marginFrac = 0, Bool_t symMode = kFALSE) const; RooAbsData*RooAbsData::getSimData(const char* idxstate); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsData::hasFilledCache() const; virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tisNonPoissonWeighted() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tisWeighted() const; Bool_tTObject::IsZombie() const; Double_tRooAbsData::kurtosis(RooRealVar& var, const char* cutSpec = 0, const char* cutRange = 0) const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Double_tRooAbsData::mean(RooRealVar& var, const char* cutSpec = 0, const char* cutRange = 0) const; RooRealVar*RooAbsData::meanVar(RooRealVar& var, const char* cutSpec = 0, const char* cutRange = 0) const; Bool_tmerge(list<RooDataSet*> dsetList); Bool_tmerge(RooDataSet* data1, RooDataSet* data2 = 0, RooDa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooDataSet.html:6371,Inherit,InheritsFrom,6371,root/html534/RooDataSet.html,https://root.cern,https://root.cern/root/html534/RooDataSet.html,3,['Inherit'],['InheritsFrom']
Modifiability,"onst; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tGetOpenError() const; virtual Int_tTSocket::GetOption(ESockOptions opt, Int_t& val); Int_tTSocket::GetPort() const; Int_tTSocket::GetRemoteProtocol() const; TSecContext*TSocket::GetSecContext() const; const char*TSocket::GetService() const; Int_tGetServType() const; Int_tGetSessionID() const; static ULong64_tTSocket::GetSocketBytesRecv(); static ULong64_tTSocket::GetSocketBytesSent(); Int_tTSocket::GetTcpWindowSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*TSocket::GetUrl() const; Int_tGetXrdProofdVersion() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTSocket::IsAuthenticated() const; Bool_tIsAWait(); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsInterrupt(); Bool_tTObject::IsOnHeap() const; Bool_tIsServProofd(); virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidTSocket::NetError(const char* where, Int_t error); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TXSocket.html:4262,Inherit,InheritsFrom,4262,root/html532/TXSocket.html,https://root.cern,https://root.cern/root/html532/TXSocket.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tGetOpenError() const; virtual Int_tTSocket::GetOption(ESockOptions opt, Int_t& val); Int_tTSocket::GetPort() const; Int_tTSocket::GetRemoteProtocol() const; TSecContext*TSocket::GetSecContext() const; const char*TSocket::GetService() const; Int_tGetServType() const; Int_tGetSessionID() const; static ULong64_tTSocket::GetSocketBytesRecv(); static ULong64_tTSocket::GetSocketBytesSent(); Int_tTSocket::GetTcpWindowSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*TSocket::GetUrl() const; Int_tGetXrdProofdVersion() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTSocket::IsAuthenticated() const; Bool_tIsAWait(); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tIsInterrupt(); Bool_tTObject::IsOnHeap() const; Bool_tIsServProofd(); virtual Bool_tTNamed::IsSortable() const; virtual Bool_tIsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidTSocket::NetError(const char* where, Int_t error); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXSocket.html:4131,Inherit,InheritsFrom,4131,root/html602/TXSocket.html,https://root.cern,https://root.cern/root/html602/TXSocket.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst; virtual const char*TNamed::GetTitle() const; Double_tGetTmax() const; Bool_tGetTminTmax(Double_t& tmin, Double_t& tmax) const; TGeoNode*GetTopNode() const; TGeoVolume*GetTopVolume() const; TVirtualGeoTrack*GetTrack(Int_t index); Int_tGetTrackIndex(Int_t id) const; TVirtualGeoTrack*GetTrackOfId(Int_t id) const; Int_tGetUID(const char* volname) const; virtual UInt_tTObject::GetUniqueID() const; static Int_tGetVerboseLevel(); Int_tGetVirtualLevel(); Double_tGetVisDensity() const; Int_tGetVisLevel() const; Int_tGetVisOption() const; TGeoVolume*GetVolume(const char* name) const; TGeoVolume*GetVolume(Int_t uid) const; Bool_tGotoSafeLevel(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; static TGeoManager*Import(const char* filename, const char* name = """", Option_t* option = """"); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; TGeoNode*InitTrack(const Double_t* point, const Double_t* dir); TGeoNode*InitTrack(Double_t x, Double_t y, Double_t z, Double_t nx, Double_t ny, Double_t nz); virtual voidTObject::Inspect() constMENU ; voidInspectState() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsActivityEnabled() const; Bool_tIsAnimatingTracks() const; Bool_tIsCheckingOverlaps() const; Bool_tIsCleaning() const; Bool_tIsClosed() const; Bool_tIsCurrentOverlapping() const; Bool_tIsDrawingExtra() const; Bool_tIsEntering() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; Bool_tIsExiting() const; virtual Bool_tIsFolder() const; Bool_tIsInPhiRange() const; static Bool_tIsLocked(); Bool_tIsMatrixReflection() const; Bool_tIsMatrixTransform() const; Bool_tIsMultiThread() const; Bool_tIsNodeSelectable() const; Bool_tIsNullStep() const; Bool_tIsOnBoundary() const; Bool_tTObject::IsOnHeap() const; Bool_tIsOutside() const; Bool_tIsParallelWorldNav() co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoManager.html:19914,Inherit,InheritsFrom,19914,root/html534/TGeoManager.html,https://root.cern,https://root.cern/root/html534/TGeoManager.html,3,['Inherit'],['InheritsFrom']
Modifiability,"onst; virtual const char*TNamed::GetTitle() const; Double_tGetTmax() const; Bool_tGetTminTmax(Double_t& tmin, Double_t& tmax) const; TGeoNode*GetTopNode() const; TGeoVolume*GetTopVolume() const; TVirtualGeoTrack*GetTrack(Int_t index); Int_tGetTrackIndex(Int_t id) const; TVirtualGeoTrack*GetTrackOfId(Int_t id) const; Int_tGetUID(const char* volname) const; virtual UInt_tTObject::GetUniqueID() const; static Int_tGetVerboseLevel(); Int_tGetVirtualLevel(); Double_tGetVisDensity() const; Int_tGetVisLevel() const; Int_tGetVisOption() const; TGeoVolume*GetVolume(const char* name) const; TGeoVolume*GetVolume(Int_t uid) const; Bool_tGotoSafeLevel(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; static TGeoManager*Import(const char* filename, const char* name = """", Option_t* option = """"); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; TGeoNode*InitTrack(const Double_t* point, const Double_t* dir); TGeoNode*InitTrack(Double_t x, Double_t y, Double_t z, Double_t nx, Double_t ny, Double_t nz); virtual voidTObject::Inspect() constMENU ; voidInspectState() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; Bool_tIsActivityEnabled() const; Bool_tIsAnimatingTracks() const; Bool_tIsCheckingOverlaps() const; Bool_tIsClosed() const; Bool_tIsCurrentOverlapping() const; Bool_tIsDrawingExtra() const; Bool_tIsEntering() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; Bool_tIsExiting() const; virtual Bool_tIsFolder() const; Bool_tIsInPhiRange() const; static Bool_tIsLocked(); Bool_tIsMatrixReflection() const; Bool_tIsMatrixTransform() const; Bool_tIsMultiThread() const; Bool_tIsNodeSelectable() const; Bool_tIsNullStep() const; Bool_tIsOnBoundary() const; Bool_tTObject::IsOnHeap() const; Bool_tIsOutside() const; Bool_tIsSameLocation() const; Bool_tIsSameLocation(Doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoManager.html:19744,Inherit,InheritsFrom,19744,root/html532/TGeoManager.html,https://root.cern,https://root.cern/root/html532/TGeoManager.html,1,['Inherit'],['InheritsFrom']
Modifiability,"onst; virtual const char*TObject::GetIconName() const; virtual const TObject*GetLinearPart(Int_t i); virtual const char*TNamed::GetName() const; virtual Int_tGetNdim() const; virtual Int_tGetNpar() const; virtual Int_tGetNumber() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Double_tGetParameter(Int_t ipar) const; Double_tGetParameter(const char* name) const; virtual Double_t*GetParameters() const; virtual voidGetParameters(Double_t* params); virtual const char*GetParName(Int_t ipar) const; virtual Int_tGetParNumber(const char* name) const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsLinear(); virtual Bool_tIsNormalized(); Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFormula.html:7026,Inherit,InheritsFrom,7026,root/html532/TFormula.html,https://root.cern,https://root.cern/root/html532/TFormula.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst; virtual intPreAltHook(RooArgSet*, double obsTestStat) const; virtual voidRooStats::HypoTestCalculatorGeneric::PreHook() const; virtual intPreNullHook(RooArgSet*, double obsTestStat) const. Data Members; protected:. const RooStats::ModelConfig*RooStats::HypoTestCalculatorGeneric::fAltModel; unsigned intRooStats::HypoTestCalculatorGeneric::fAltToysSeedto have same toys for alternate; const RooAbsData*RooStats::HypoTestCalculatorGeneric::fData; RooStats::TestStatSampler*RooStats::HypoTestCalculatorGeneric::fDefaultSampler; RooStats::TestStatistic*RooStats::HypoTestCalculatorGeneric::fDefaultTestStat; intfNToysAlt; intfNToysAltTail; intfNToysNull; intfNToysNullTail; const RooStats::ModelConfig*RooStats::HypoTestCalculatorGeneric::fNullModel; RooAbsPdf*fPriorNuisanceAlt; Bool_tfPriorNuisanceAltExternal; RooAbsPdf*fPriorNuisanceNull; Bool_tfPriorNuisanceNullExternal; RooStats::TestStatSampler*RooStats::HypoTestCalculatorGeneric::fTestStatSampler. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; int CheckHook(void). int PreNullHook(RooArgSet* , double obsTestStat) const. int PreAltHook(RooArgSet* , double obsTestStat) const. HybridCalculator(const RooAbsData& data, const RooStats::ModelConfig& altModel, const RooStats::ModelConfig& nullModel, RooStats::TestStatSampler* sampler = 0). ~HybridCalculator(). void ForcePriorNuisanceNull(RooAbsPdf& priorNuisance); Override the distribution used for marginalizing nuisance parameters that is inferred from ModelConfig. void ForcePriorNuisanceAlt(RooAbsPdf& priorNuisance). void SetNullModel(const RooStats::ModelConfig& nullModel). void SetAlternateModel(const RooStats::ModelConfig& altModel). void SetToys(int toysNull, int toysAlt); set number of toys. { fNToysNull = toysNull; fNToysAlt = toysAlt; }. void SetNToysInTails(int toysNull, int toysAlt); set least number of toys in tails. { fNToysNullTail = toysNull; fNToysAltTail = toysAlt; }. » Author: Sven Kreiss, Kyle Cranmer Nov 2010 » Co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__HybridCalculator.html:3722,Inherit,Inheritance,3722,root/html602/RooStats__HybridCalculator.html,https://root.cern,https://root.cern/root/html602/RooStats__HybridCalculator.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst; virtual unsigned intROOT::Math::IBaseFunctionMultiDim::NDim() const; virtual unsigned intROOT::Math::IBaseParam::NPar() const; doubleROOT::Math::IParametricFunctionMultiDim::operator()(const double* x, const double* p) const; ROOT::Math::IParametricGradFunctionMultiDim&operator=(const ROOT::Math::IParametricGradFunctionMultiDim&); doubleParameterDerivative(const double* x, unsigned int ipar = 0) const; doubleParameterDerivative(const double* x, const double* p, unsigned int ipar = 0) const; voidParameterGradient(const double* x, double* grad) const; virtual voidParameterGradient(const double* x, const double* p, double* grad) const; virtual stringROOT::Math::IBaseParam::ParameterName(unsigned int i) const; virtual const double*ROOT::Math::IBaseParam::Parameters() const; virtual voidROOT::Math::IBaseParam::SetParameters(const double* p). private:. virtual doubleDoParameterDerivative(const double* x, const double* p, unsigned int ipar) const. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~IParametricGradFunctionMultiDim(). Virtual Destructor (no operations). {}. void ParameterGradient(const double* x, const double* p, double* grad) const. Evaluate the all the derivatives (gradient vector) of the function with respect to the parameters at a point x.; It is optional to be implemented by the derived classes for better efficiency. double ParameterDerivative(const double* x, const double* p, unsigned int ipar = 0) const. Evaluate the partial derivative w.r.t a parameter ipar from values and parameters. return DoParameterDerivative(x, p, ipar). void ParameterGradient(const double* x, double* grad) const. Evaluate all derivatives using cached parameter values. double ParameterDerivative(const double* x, unsigned int ipar = 0) const. Evaluate partial derivative using cached parameter values. » Author: L. Moneta Tue Nov 14 14:20:07 2006 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathcor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__IParametricGradFunctionMultiDim.html:2194,Inherit,Inheritance,2194,root/html532/ROOT__Math__IParametricGradFunctionMultiDim.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__IParametricGradFunctionMultiDim.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst; virtual voidParameterGradient(double x, const double* par, double* grad) const; virtual stringParameterName(unsigned int i) const; virtual const double*Parameters() const; static voidSetDerivPrecision(double eps); virtual voidSetParameters(const double* p); ROOT::Math::WrappedTF1WrappedTF1(TF1& f); ROOT::Math::WrappedTF1WrappedTF1(const ROOT::Math::WrappedTF1& rhs). private:. virtual doubleDoDerivative(double x) const; virtual doubleDoEval(double x) const; virtual doubleDoEvalPar(double x, const double* p) const; virtual doubleDoParameterDerivative(double x, const double* p, unsigned int ipar) const. Data Members; private:. TF1*fFuncpointer to ROOT function; boolfLinearflag for linear functions; vector<double>fParamscached vector with parameter values; boolfPolynomialflag for polynomial functions; doublefX[1]! cached vector for x value (needed for TF1::EvalPar signature); static doublefgEpsepsilon used in derivative calculation h ~ eps |x|. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; WrappedTF1(TF1& f); constructor from a TF1 function pointer. WrappedTF1(TF1& f); copy constructor. void ParameterGradient(double x, const double* par, double* grad) const; evaluate the derivative of the function with respect to the parameters. double DoDerivative(double x) const; return the function derivatives w.r.t. x. double DoParameterDerivative(double x, const double* p, unsigned int ipar) const; evaluate the derivative of the function with respect to the parameters; IMPORTANT NOTE: TF1::GradientPar returns 0 for fixed parameters to avoid computing useless derivatives; BUT the TLinearFitter wants to have the derivatives also for fixed parameters.; so in case of fLinear (or fPolynomial) a non-zero value will be returned for fixed parameters. void SetDerivPrecision(double eps); { fgEps = eps; }. double GetDerivPrecision(); { return fgEps; }. virtual ~WrappedTF1(). Destructor (no operations). TF1 Function pointer is not owned. {}. RO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__WrappedTF1.html:3775,Inherit,Inheritance,3775,root/html602/ROOT__Math__WrappedTF1.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__WrappedTF1.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidsetAllInterpCodes(int code); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidRooAbsArg::setCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); virtual voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidsetGlobalBoundary(double boundary); static voidRooAbsReal::setHideOffset(Bool_t flag); voidsetHigh(RooAbsReal& param, Double_t newHigh); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidsetInterpCode(RooAbsReal& param, int code); voidRooAbsArg::setLocalNoDirtyInhibit(Bool_t flag) const; voidsetLow(RooAbsReal& param, Double_t newLow); virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); voidsetNominal(Double_t newNominal); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setParameterizeIntegral(const RooArgSet& paramVars); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__HistFactory__FlexibleInterpVar.html:25175,config,config,25175,root/html534/RooStats__HistFactory__FlexibleInterpVar.html,https://root.cern,https://root.cern/root/html534/RooStats__HistFactory__FlexibleInterpVar.html,6,['config'],['config']
Modifiability,"onst; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); voidUseSameAltToys(). protected:. virtual intCheckHook() const; virtual voidPostHook() const; virtual intPreAltHook(RooArgSet*, double) const; virtual voidPreHook() const; virtual intPreNullHook(RooArgSet*, double) const. private:. RooStats::SamplingDistribution*GenerateSamplingDistribution(RooStats::ModelConfig* thisModel, double obsTestStat, RooAbsPdf* impDens = __null, const RooArgSet* impSnapshot = __null) const; voidSetAdaptiveLimits(Double_t obsTestStat, Bool_t forNull) const; voidSetupSampler(const RooStats::ModelConfig& model) const. Data Members; protected:. const RooStats::ModelConfig*fAltModel; unsigned intfAltToysSeedto have same toys for alternate; const RooAbsData*fData; RooStats::TestStatSampler*fDefaultSampler; RooStats::TestStatistic*fDefaultTestStat; const RooStats::ModelConfig*fNullModel; RooStats::TestStatSampler*fTestStatSampler. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; HypoTestCalculatorGeneric(const RooAbsData& data, const RooStats::ModelConfig& altModel, const RooStats::ModelConfig& nullModel, RooStats::TestStatSampler* sampler = 0); Constructor. When test stat sampler is not provided; uses ToyMCSampler and RatioOfProfiledLikelihoodsTestStat; and nToys = 1000.; User can : GetTestStatSampler()->SetNToys( # ). void SetupSampler(const RooStats::ModelConfig& model) const; common setup for both models. ~HypoTestCalculatorGeneric(). HypoTestResult* GetHypoTest() const. void UseSameAltToys(); to re-use same toys for alternate hypothesis. HypoTestCalculatorGeneric(const RooAbsData& data, const RooStats::ModelConfig& altModel, const RooStats::ModelConfig& nullModel, RooStats::TestStatSampler* sampler = 0). void SetNullModel(const RooStats::ModelConfig& nullModel); set the model for the null hypothesis (only B). { fNullModel = &nullModel; }. const RooAbsData * GetData(void); { return fData; }. const ModelCon",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__HypoTestCalculatorGeneric.html:2699,Inherit,Inheritance,2699,root/html602/RooStats__HypoTestCalculatorGeneric.html,https://root.cern,https://root.cern/root/html602/RooStats__HypoTestCalculatorGeneric.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); FontAttributes_tGetFontAttributes() const; FontH_tGetFontHandle() const; voidGetFontMetrics(FontMetrics_t* m) const; FontStruct_tGetFontStruct() const; virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Int_tMeasureChars(const char* source, Int_t numChars, Int_t maxLength, Int_t flags, Int_t* length) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGFont.html:3144,Inherit,InheritsFrom,3144,root/html532/TGFont.html,https://root.cern,https://root.cern/root/html532/TGFont.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); FontAttributes_tGetFontAttributes() const; FontH_tGetFontHandle() const; voidGetFontMetrics(FontMetrics_t* m) const; FontStruct_tGetFontStruct() const; virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; Int_tMeasureChars(const char* source, Int_t numChars, Int_t maxLength, Int_t flags, Int_t* length) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGFont.html:3144,Inherit,InheritsFrom,3144,root/html602/TGFont.html,https://root.cern,https://root.cern/root/html602/TGFont.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); virtual voidSetTablePointer(void* table). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_tfFirstRowThe first row to take in account; const void*fKeypointer to key value to select rows; void*fRowsPointer the first row of the STAF table; Int_tfSize; TTableSorter*fTableSorter. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Int_t DistancetoPrimitive(Int_t px, Int_t py); Compute distance from point px,py to a 3-D points ; *-* =====================================================; -; *-* Compute the closest distance of approach from point px,py to each segment; *-* of the polyline.; *-* Returns when the distance found is below DistanceMaximum.; *-* The distance is computed in pixels units.; -; -. void SetTablePointer(void* table). { fRows = table;}. Int_t Indx(Int_t sortedIndx) const. return the index of the origial row by its index from the sorted table. {return fTableSorter?fTableSorter->GetIndex(fFirstRow+sortedIndx):-1;}. void * GetTable(). return the pointer to the original table object. Int_t Size() const. { return fSize;}. Int_t GetLastPosition() const. {return Size()-1;}. Int_t SetLastPosition(Int_t idx). ~TTablePoints(); {}. Float_t GetX(Int_t idx) const. Float_t GetY(Int_t idx) const. Float_t GetZ(Int_t idx) const. Option_t * GetOption() const; { ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTablePoints.html:7149,Inherit,Inheritance,7149,root/html532/TTablePoints.html,https://root.cern,https://root.cern/root/html532/TTablePoints.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual voidTEveElement::HighlightElement(Bool_t state); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; static voidTQObject::LoadRQ_OBJECT(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveParamList.html:11614,Inherit,InheritsFrom,11614,root/html532/TEveParamList.html,https://root.cern,https://root.cern/root/html532/TEveParamList.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst; void*TEveElement::GetUserData() const; TEveElement*TEveElement::GetVizModel() const; const TString&TEveElement::GetVizTag() const; virtual Bool_tTEveElement::HandleElementPaste(TEveElement* el); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tTEveElement::HasChild(TEveElement* el); Bool_tTEveElement::HasChildren() const; virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTNamed::Hash() const; virtual Bool_tTEveElement::HasMainColor() const; virtual Bool_tTEveElement::HasMainTrans() const; Bool_tTEveElement::HasParents() const; virtual voidTEveElement::HighlightElement(Bool_t state); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidTEveElement::IncDenyDestroy(); virtual voidTEveElement::IncImpliedHighlighted(); virtual voidTEveElement::IncImpliedSelected(); voidTEveElement::IncParentIgnoreCnt(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTEveElement::InitMainTrans(Bool_t can_edit = kTRUE); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tTEveElement::IsPickable() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; TEveElement*TEveElement::LastChild() const; virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTEveElement::NameTitleChanged(); virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; Int_tTEveElement::Nu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveParamList.html:11522,Inherit,InheritsFrom,11522,root/html602/TEveParamList.html,https://root.cern,https://root.cern/root/html602/TEveParamList.html,2,['Inherit'],['InheritsFrom']
Modifiability,"onst; voidTObject::MakeZombie(). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; RooDataSet*fSData; RooArgListfSWeightVars; TStringTNamed::fTitleobject title; static RooStats::SPlot::(anonymous)kOwnData. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~SPlot(). SPlot(); Default constructor. SPlot(const char* name, const char* title). SPlot(const char* name, const char* title, const RooDataSet& data); Constructor from a RooDataSet; No sWeighted variables are present. SPlot(const RooStats::SPlot& other); Copy Constructor from another SPlot. SPlot(const char* name, const char* title, RooDataSet& data, RooAbsPdf* pdf, const RooArgList& yieldsList, const RooArgSet& projDeps = RooArgSet(), bool includeWeights = kTRUE, bool copyDataSet = kFALSE, const char* newName = """"). RooDataSet* SetSData(RooDataSet* data). RooDataSet* GetSDataSet() const. Double_t GetSWeight(Int_t numEvent, const char* sVariable) const. Double_t GetSumOfEventSWeight(Int_t numEvent) const. Double_t GetYieldFromSWeight(const char* sVariable) const. RooArgList GetSWeightVars() const. Int_t GetNumSWeightVars() const; Return the number of SWeights; In other words, return the number of; species that we are trying to extract",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__SPlot.html:7644,Inherit,Inheritance,7644,root/html602/RooStats__SPlot.html,https://root.cern,https://root.cern/root/html602/RooStats__SPlot.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onst; voidTObject::MakeZombie(). private:. TSemaphore&operator=(const TSemaphore& s); TSemaphore(const TSemaphore& s). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. TConditionfCondsemaphore condition variable; TMutexfMutexsemaphare mutex; Int_tfValuecounter. Class Charts. Inheritance Chart:. TObject. ←; TSemaphore. Function documentation; TSemaphore(UInt_t initial = 1); Create counting semaphore. Int_t Wait(Int_t millisec = 0); If semaphore value is > 0 then decrement it and carry on. If it's; already 0 then block. If millisec > 0, apply a relative timeout; of millisec milliseconds. Returns 0 in case of success, or mutex errno. Int_t TryWait(); If semaphore value is > 0 then decrement it and return 0. If it's; already 0 then return 1 or mutex errno. Int_t Post(); If any threads are blocked in Wait(), wake one of them up and; increment the value of the semaphore. Returns 0 in case of success, or; mutex errno. TSemaphore(const TSemaphore& s). TSemaphore& operator=(const TSemaphore& s). virtual ~TSemaphore(); { }. » Author: Fons Rademakers 02/07/97 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/thread:$Id$ » Last generated: 2015-06-02 16:32; This page has been automatically generated. For comments or suggestions regarding the docu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TSemaphore.html:5866,Inherit,Inheritance,5866,root/html604/TSemaphore.html,https://root.cern,https://root.cern/root/html604/TSemaphore.html,1,['Inherit'],['Inheritance']
Modifiability,"onst; voidTObject::MakeZombie(). private:. TSemaphore&operator=(const TSemaphore& s); TSemaphore(const TSemaphore& s). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. TConditionfCondsemaphore condition variable; TMutexfMutexsemaphare mutex; Int_tfValuecounter. Class Charts. Inheritance Chart:. TObject. ←; TSemaphore. Function documentation; TSemaphore(UInt_t initial = 1); Create counting semaphore. Int_t Wait(Int_t millisec = 0); If semaphore value is > 0 then decrement it and carry on. If it's; already 0 then block. If millisec > 0, apply a relative timeout; of millisec milliseconds. Returns 0 in case of success, or mutex errno. Int_t TryWait(); If semaphore value is > 0 then decrement it and return 0. If it's; already 0 then return 1 or mutex errno. Int_t Post(); If any threads are blocked in Wait(), wake one of them up and; increment the value of the semaphore. Returns 0 in case of success, or; mutex errno. TSemaphore(const TSemaphore& s). TSemaphore& operator=(const TSemaphore& s). virtual ~TSemaphore(); { }. » Author: Fons Rademakers 02/07/97 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/thread:$Id$ » Last generated: 2015-06-30 15:29; This page has been automatically generated. For comments or suggestions regarding the docu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSemaphore.html:5866,Inherit,Inheritance,5866,root/html602/TSemaphore.html,https://root.cern,https://root.cern/root/html602/TSemaphore.html,1,['Inherit'],['Inheritance']
Modifiability,"onst; voidTObject::MakeZombie(); TVirtualMCGeometry&operator=(const TVirtualMCGeometry&); TVirtualMCGeometry(const TVirtualMCGeometry&). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TVirtualMCGeometry. ←. TGeoMCGeometry. Function documentation; TVirtualMCGeometry(const char* name, const char* title). Standard constructor. TVirtualMCGeometry(). Default constructor. ~TVirtualMCGeometry(). Destructor. TVirtualMCGeometry(const char* name, const char* title); Standard constructor. void Material(Int_t& kmat, const char* name, Double_t a, Double_t z, Double_t dens, Double_t radl, Double_t absl, Float_t* buf, Int_t nwbuf). detector composition. Define a material; kmat number assigned to the material; name material name; a atomic mass in au; z atomic number; dens density in g/cm3; absl absorption length in cm;; if >=0 it is ignored and the program; calculates it, if <0. -absl is taken; radl radiation length in cm; if >=0 it is ignored and the program; calculates it, if <0. -radl is taken; buf pointer to an array of user words; nwbuf number of user words. void Mixture(Int_t& kmat, const char* name, Float_t* a, Float_t* z, Double_t dens, Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualMCGeometry.html:9572,Inherit,Inheritance,9572,root/html602/TVirtualMCGeometry.html,https://root.cern,https://root.cern/root/html602/TVirtualMCGeometry.html,2,['Inherit'],['Inheritance']
Modifiability,"onst; { if (num < ((TObjNum*)obj)->num) return -1;; else if (num > ((TObjNum*)obj)->num) return 1;; else return 0; }; ULong_t Hash() const { return num; }; };; 16.5 The TIter Generic Iterator; As stated above, the TIterator class is abstract; it is not possible to create TIterator objects. However, it should be possible to write generic code to process all members of a collection so there is a need for a generic iterator object. A TIter object acts as generic iterator. It provides the same Next() and Reset() methods as TIterator although it has no idea how to support them! It works as follows:. To create a TIter object its constructor must be passed an object that inherits from TCollection. The TIter constructor calls the MakeIterator() method of this collection to get the appropriate iterator object that inherits from TIterator.; The Next() and Reset() methods of TIter simply call the Next() and Reset() methods of the iterator object. Therefore, TIter simply acts as a wrapper for an object of a concrete class inheriting from TIterator.; To see this working in practice, consider the TObjArray collection. Its associated iterator is TObjArrayIter. Suppose myarray is a pointer to a TObjArray that contains MyClass objects, i.e.; TObjArray *myarray;; To create a TIter object called myiter:; TIter myiter(myarray);. As shown in the diagram, this results in several methods being called:. The TIter constructor is passed a TObjArray; TIter asks embedded TCollection to make an iterator; TCollection asks TObjArray to make an iterator; TObjArray returns a TObjArrayIter. Now define a pointer for MyClass objects and set it to each member of the TObjArray:; MyClass *myobject;; while ((myobject = (MyClass *)myiter.Next())) {; // process myobject; }; The heart of this is the myiter.Next() expression which does the following:. The Next() method of the TIter object myiter is called; The TIter forwards the call to the TIterator embedded in the TObjArrayIter; TIterator forwards the call t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:849589,inherit,inheriting,849589,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['inherit'],['inheriting']
Modifiability,"onst;  ; Int_t * GetNTried () const;  ; Int_t * GetPTried () const;  ; Double_t * GetXN () const;  ; Double_t GetXNmax () const;  ; Double_t GetXNmin () const;  ; Double_t * GetYN () const;  ; Double_t GetYNmax () const;  ; Double_t GetYNmin () const;  ; Double_t Interpolate (Double_t x, Double_t y);  Finds the Delaunay triangle that the point (xi,yi) sits in (if any) and calculate a z-value for it by linearly interpolating the z-values that make up that triangle. ;  ; TClass * IsA () const override;  ; void SetMarginBinsContent (Double_t z=0.);  Sets the histogram bin height for points lying outside the convex hull ie: the bins in the margin. ;  ; void SetMaxIter (Int_t n=100000);  Defines the number of triangles tested for a Delaunay triangle (number of iterations) before abandoning the search. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphDelaunay.html:3046,inherit,inherited,3046,doc/master/classTGraphDelaunay.html,https://root.cern,https://root.cern/doc/master/classTGraphDelaunay.html,1,['inherit'],['inherited']
Modifiability,"onst;  ; Int_t GetStep () const;  ; Int_t GetStop () const;  ; TClass * IsA () const override;  ; void Print (Option_t *option="""") const override;  Show settings. ;  ; void Run (const char *, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t) override;  ; void Run (Long64_t nevents, Int_t start, Int_t stop, Int_t step, Int_t ntries, Int_t debug, Int_t draw) override;  Run benchmark Input parameters nevents: Number of events to run per file. ;  ; void SetDebug (Int_t debug);  ; void SetDirProofBench (TDirectory *dir);  ; void SetDraw (Int_t draw);  ; void SetHistType (TPBHistType *histtype);  Set histogram type. ;  ; void SetNEvents (Long64_t nevents);  ; void SetNHists (Int_t nhists);  ; void SetNTries (Int_t ntries);  ; void SetStart (Int_t start);  ; void SetStep (Int_t step);  ; void SetStop (Int_t stop);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TProofBenchRun;  TProofBenchRun (TProof *proof=0, const char *sel=0);  Constructor: check PROOF and load selectors PAR. ;  ;  ~TProofBenchRun () override;  destructor ;  ; virtual const char * GetParList ();  ; virtual const char * GetSelName ();  ; virtual void SetParList (const char *pars);  ; virtual void SetSelName (const char *sel);  ; virtual void SetSelOption (const char *opt);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t Ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofBenchRunCPU.html:2380,inherit,inherited,2380,doc/master/classTProofBenchRunCPU.html,https://root.cern,https://root.cern/doc/master/classTProofBenchRunCPU.html,1,['inherit'],['inherited']
Modifiability,"onst;  ; TMethodCall * GetMethodCall (const char *name);  Returns pointer to method corresponding to name. ;  ; TObject * GetObject () const;  ; const char * GetTypeName () const override;  Returns name of leaf type. ;  ; void * GetValuePointer () const override;  ; TClass * IsA () const override;  ; bool IsOnTerminalBranch () const override;  Return true if this leaf is does not have any sub-branch/leaf. ;  ; bool IsVirtual () const;  ; bool Notify () override;  This method must be overridden to handle object notification. ;  ; void PrintValue (Int_t i=0) const override;  Prints leaf value. ;  ; void ReadBasket (TBuffer &b) override;  Read leaf elements from Basket input buffer. ;  ; void SetAddress (void *add=nullptr) override;  Set leaf buffer data address. ;  ; virtual void SetVirtual (bool virt=true);  ; void Streamer (TBuffer &) override;  Stream an object of class TLeafObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TLeaf;  TLeaf ();  ;  TLeaf (TBranch *parent, const char *name, const char *type);  Create a Leaf. ;  ;  ~TLeaf () override;  Destructor. ;  ; void Browse (TBrowser *b) override;  Browse the content of this leaf. ;  ; virtual void Export (TClonesArray *, Int_t);  ; virtual Int_t * GenerateOffsetArray (Int_t base, Int_t events);  ; TBranch * GetBranch () const;  ; virtual DeserializeType GetDeserializeType () const;  ; virtual TString GetFullName () const;  Return the full name (including the parent's branch names) of the leaf. ;  ; virtual TLeaf * GetLeafCount () const;  If this leaf stores a variable-sized array or a multi-dimensional array whose last dimension has variable size, return a pointer to the TLeaf that stores such size. ;  ; virtual TLeaf * GetLeafCounter (Int_t &countval) const;  Return a pointer to the counter of this leaf (if any) or store the number of elements that the leaf contains in countval. ;  ; virtual const Counts_t * GetLeafCountValues (Long64_t start, L",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafObject.html:2999,inherit,inherited,2999,doc/master/classTLeafObject.html,https://root.cern,https://root.cern/doc/master/classTLeafObject.html,1,['inherit'],['inherited']
Modifiability,"onst;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TLeaf; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Char_t fMaximum;  Maximum value if leaf range is specified. ;  ; Char_t fMinimum;  Minimum value if leaf range is specified. ;  ; Char_t ** fPointer;  ! Address of a pointer to data buffer! ;  ; Char_t * fValue;  ! Pointer to data buffer ;  ;  Protected Attributes inherited from TLeaf; TBranc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafB.html:13072,inherit,inherited,13072,doc/master/classTLeafB.html,https://root.cern,https://root.cern/doc/master/classTLeafB.html,3,['inherit'],['inherited']
Modifiability,"onst;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TLeaf; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fMaximum;  Maximum value if leaf range is specified. ;  ; Double_t fMinimum;  Minimum value if leaf range is specified. ;  ; Double_t ** fPointer;  ! Address of pointer to data buffer ;  ; Double_t * fValue;  ! Pointer to data buffer ;  ;  Protected Attributes inherited from TLeaf; T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafD.html:12906,inherit,inherited,12906,doc/master/classTLeafD.html,https://root.cern,https://root.cern/doc/master/classTLeafD.html,3,['inherit'],['inherited']
Modifiability,"onst;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TLeaf; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Float_t fMaximum;  Maximum value if leaf range is specified. ;  ; Float_t fMinimum;  Minimum value if leaf range is specified. ;  ; Float_t ** fPointer;  ! Address of pointer to data buffer! ;  ; Float_t * fValue;  ! Pointer to data buffer ;  ;  Protected Attributes inherited from TLeaf; TBra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafF.html:12905,inherit,inherited,12905,doc/master/classTLeafF.html,https://root.cern,https://root.cern/doc/master/classTLeafF.html,3,['inherit'],['inherited']
Modifiability,"onst;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TLeaf; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Int_t fMaximum;  Maximum value if leaf range is specified. ;  ; Int_t fMinimum;  Minimum value if leaf range is specified. ;  ; Char_t ** fPointer;  ! Address of pointer to data buffer ;  ; Char_t * fValue;  ! Pointer to data buffer ;  ;  Protected Attributes inherited from TLeaf; TBranch * f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafC.html:13149,inherit,inherited,13149,doc/master/classTLeafC.html,https://root.cern,https://root.cern/doc/master/classTLeafC.html,3,['inherit'],['inherited']
Modifiability,"onst;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TLeaf; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Int_t fMaximum;  Maximum value if leaf range is specified. ;  ; Int_t fMinimum;  Minimum value if leaf range is specified. ;  ; Int_t ** fPointer;  ! Address of pointer to data buffer ;  ; Int_t * fValue;  ! Pointer to data buffer ;  ;  Protected Attributes inherited from TLeaf; TBranch * fBr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafI.html:13179,inherit,inherited,13179,doc/master/classTLeafI.html,https://root.cern,https://root.cern/doc/master/classTLeafI.html,3,['inherit'],['inherited']
Modifiability,"onst;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TLeaf; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Long64_t fMaximum;  Maximum value if leaf range is specified. ;  ; Long64_t fMinimum;  Minimum value if leaf range is specified. ;  ; Long64_t ** fPointer;  ! Address of pointer to data buffer ;  ; Long64_t * fValue;  ! Pointer to data buffer ;  ;  Protected Attributes inherited from TLeaf; T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafL.html:13231,inherit,inherited,13231,doc/master/classTLeafL.html,https://root.cern,https://root.cern/doc/master/classTLeafL.html,3,['inherit'],['inherited']
Modifiability,"onst;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TLeaf; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Long_t fMaximum;  Maximum value if leaf range is specified. ;  ; Long_t fMinimum;  Minimum value if leaf range is specified. ;  ; Long_t ** fPointer;  ! Address of pointer to data buffer ;  ; Long_t * fValue;  ! Pointer to data buffer ;  ;  Protected Attributes inherited from TLeaf; TBranch *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafG.html:13227,inherit,inherited,13227,doc/master/classTLeafG.html,https://root.cern,https://root.cern/doc/master/classTLeafG.html,3,['inherit'],['inherited']
Modifiability,"onst;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TLeaf; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Short_t fMaximum;  Maximum value if leaf range is specified. ;  ; Short_t fMinimum;  Minimum value if leaf range is specified. ;  ; Short_t ** fPointer;  ! Address of pointer to data buffer ;  ; Short_t * fValue;  ! Pointer to data buffer ;  ;  Protected Attributes inherited from TLeaf; TBran",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafS.html:13196,inherit,inherited,13196,doc/master/classTLeafS.html,https://root.cern,https://root.cern/doc/master/classTLeafS.html,3,['inherit'],['inherited']
Modifiability,"onst;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TLeaf; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TClassRef fClass;  ! pointer to class ;  ; void ** fObjAddress;  ! Address of Pointer to object ;  ; bool fVirtual;  Support for polymorphism, when set classname is written with object. ;  ;  Protected Attributes inherited from TLeaf; TBranch * fBranch;  ! Pointer to supporting branch (we do ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafObject.html:14174,inherit,inherited,14174,doc/master/classTLeafObject.html,https://root.cern,https://root.cern/doc/master/classTLeafObject.html,3,['inherit'],['inherited']
Modifiability,"onst;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TLeaf; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TStreamerElement * fElement;  ! StreamerElement used for TBuffer read / write ;  ; Double32_t fMaximum;  Maximum value if leaf range is specified. ;  ; Double32_t fMinimum;  Minimum value if leaf range is specified. ;  ; Double32_t ** fPointer;  ! Address of pointer to data buffer ;  ; Double",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafD32.html:12946,inherit,inherited,12946,doc/master/classTLeafD32.html,https://root.cern,https://root.cern/doc/master/classTLeafD32.html,3,['inherit'],['inherited']
Modifiability,"onst;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TLeaf; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TStreamerElement * fElement;  ! StreamerElement used for TBuffer read / write ;  ; Float16_t fMaximum;  Maximum value if leaf range is specified. ;  ; Float16_t fMinimum;  Minimum value if leaf range is specified. ;  ; Float16_t ** fPointer;  ! Address of pointer to data buffer! ;  ; Float16_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafF16.html:12945,inherit,inherited,12945,doc/master/classTLeafF16.html,https://root.cern,https://root.cern/doc/master/classTLeafF16.html,3,['inherit'],['inherited']
Modifiability,"onst;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TLeaf; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; bool fMaximum;  Maximum value if leaf range is specified. ;  ; bool fMinimum;  Minimum value if leaf range is specified. ;  ; bool ** fPointer;  ! Address of a pointer to data buffer! ;  ; bool * fValue;  ! Pointer to data buffer ;  ;  Protected Attributes inherited from TLeaf; TBranch * fBra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafO.html:13082,inherit,inherited,13082,doc/master/classTLeafO.html,https://root.cern,https://root.cern/doc/master/classTLeafO.html,3,['inherit'],['inherited']
Modifiability,"onst;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TLeaf; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; char * fAbsAddress;  ! Absolute leaf Address ;  ; std::atomic< EDataType > fDataTypeCache {EDataType::kOther_t};  ! Cache of the EDataType of deserialization. ;  ; std::atomic< DeserializeType > fDeserializeTypeCache { DeserializeType::kInvalid };  ! Cache of the type of deserialization. ;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafElement.html:13270,inherit,inherited,13270,doc/master/classTLeafElement.html,https://root.cern,https://root.cern/doc/master/classTLeafElement.html,3,['inherit'],['inherited']
Modifiability,"onst;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMacro; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL <",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveMacro.html:11015,inherit,inherited,11015,doc/master/classTEveMacro.html,https://root.cern,https://root.cern/doc/master/classTEveMacro.html,3,['inherit'],['inherited']
Modifiability,"onst;  ; void GetPlaneVertices (Int_t iz, Int_t ivert, Double_t *vert) const;  ; Bool_t IsPointInsidePlane (const Double_t *point, Double_t *vert, Double_t *norm) const;  ; TGeoXtru & operator= (const TGeoXtru &)=delete;  ; Double_t SafetyToSector (const Double_t *point, Int_t iz, Double_t safmin, Bool_t in);  ; void SetIz (Int_t iz);  ; void SetSeg (Int_t iseg);  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; std::mutex fMutex;  size of thread-specific array ;  ; Int_t fNvert;  ; Int_t fNz;  ; Double_t * fScale;  ; std::vector< ThreadData_t * > fThreadData;  ; Int_t fThreadSize;  Navigation data per thread. ;  ; Double_t * fX;  ; Double_t * fX0;  ; Double_t * fY;  ; Double_t * fY0;  ; Double_t * fZ;  ; Double_t fZcurrent;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoXtru.html:20251,inherit,inherited,20251,doc/master/classTGeoXtru.html,https://root.cern,https://root.cern/doc/master/classTGeoXtru.html,1,['inherit'],['inherited']
Modifiability,"onst;  ; void validateAbsMin () const;  Check that parameters and likelihood value for 'best fit' are still valid. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that creates the actual integral object. ;  ; void fillTreeBranch (TTree &t) override;  Fill the tree branch that associated with this object with its current value. ;  ; void findInnerMostIntegration (const RooArgSet &allObs, RooArgSet &innerObs, const char *rangeName) const;  Utility function for createIntObj() that aids in the construct of recursive integrals over functions with multiple observables with parameterized ranges. ;  ; TString integralNameSuffix (const RooArgSet &iset, const RooArgSet *nset=nullptr, const char *rangeName=nullptr, bool omitEmpty=false) const;  Construct string with unique suffix name to give to integral object that encodes integrated observables, normalization observables and the integration range name. ;  ; bool isValid () const override;  Check if current value is valid. ;  ; virtual bool isValidReal (double, bool printError=false) const;  Interface function to check if given value is a valid value for this object. Returns true unless overridden. ;  ; void makeProjectionSet (const RooAbsArg *plotVar, const RooArgSet *allVars, RooArgSet &projectedVars, bool silent) const;  Utility function for plotOn() that constructs the set of observables to project when plotting ourselves as function of 'plotVar'. ;  ; bool matchArgs (const RooArgSet &allDeps, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooProfileLL.html:49679,parameteriz,parameterized,49679,doc/master/classRooProfileLL.html,https://root.cern,https://root.cern/doc/master/classRooProfileLL.html,1,['parameteriz'],['parameterized']
Modifiability,"onst;  Get the scatter's x axis. ;  ; TAxis * GetYaxis () const;  Get the scatter's y axis. ;  ; TAxis * GetZaxis () const;  Get the scatter's z axis. ;  ; TClass * IsA () const override;  ; void Paint (Option_t *chopt="""") override;  Paint this scatter plot with its current attributes. ;  ; void Print (Option_t *chopt="""") const override;  Print graph and errors values. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitive as a C++ statement(s) on output stream out. ;  ; void SetHistogram (TH2F *h);  ; void SetMargin (Double_t);  Set the margin around the plot in %. ;  ; void SetMaxMarkerSize (Double_t max);  Set the largest marker size used to paint the markers. ;  ; void SetMinMarkerSize (Double_t min);  Set the smallest marker size used to paint the markers. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTScatter.html:4489,inherit,inherited,4489,doc/master/classTScatter.html,https://root.cern,https://root.cern/doc/master/classTScatter.html,1,['inherit'],['inherited']
Modifiability,"onst;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from RooAbsProxy; virtual void changeNormSet (const RooArgSet *newNormSet);  Destructor. ;  . Protected Attributes; RooAbsArg * _arg = nullptr;  Pointer to content of proxy. ;  ; bool _isFund = true;  If true proxy contains an lvalue. ;  ; bool _ownArg = false;  If true proxy owns contents. ;  ; RooAbsArg * _owner = nullptr;  Pointer to owner of proxy. ;  ; bool _shapeServer = false;  If true contents is shape server of owner. ;  ; bool _valueServer = false;  If true contents is value server of owner. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from RooAbsProxy; RooArgSet * _nset = nullptr;  ! Normalization set to be used for evaluation of RooAbsPdf contents ;  . Friends; class RooRealIntegral;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <RooArgProxy.h>. Inheritance diagram for RooArgProxy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooArgProxy() [1/6]. RooArgProxy::RooArgProxy ; (; ). default . Default constructor. . ◆ RooArgProxy() [2/6]. RooArgProxy::RooArgProxy ; (; const cha",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooArgProxy.html:13819,inherit,inherited,13819,doc/master/classRooArgProxy.html,https://root.cern,https://root.cern/doc/master/classRooArgProxy.html,1,['inherit'],['inherited']
Modifiability,"onst;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Double_t Phi_0_2pi (Double_t x);  Returns phi angle in the interval [0,2*PI) ;  ; static Double_t Phi_mpi_pi (Double_t x);  Returns phi angle in the interval [-PI,PI) ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; Double_t fX;  ; Double_t fY;  . Friends; Double_t operator* (const TVector2 &, const TVector2 &);  ; TVector2 operator* (const TVector2 &, Double_t);  ; TVector2 operator* (Double_t, const TVector2 &);  ; TVector2 operator+ (const TVector2 &, const TVector2 &);  ; TVector2 operator+ (const TVector2 &, Double_t);  ; TVector2 operator+ (Double_t, const TVector2 &);  ; TVector2 operator- (const TVector2 &, const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVector2.html:10758,inherit,inherited,10758,doc/master/classTVector2.html,https://root.cern,https://root.cern/doc/master/classTVector2.html,1,['inherit'],['inherited']
Modifiability,"onst;  Issue warning message. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TClass * GetClass (const char *className);  Forward to TROOT::GetClass(). ;  ; static TClass * GetClass (const std::type_info &typeinfo);  Forward to TROOT::GetClass(). ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; typedef std::vector< TVirtualArray * > CacheList_t;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions;  TBuffer ();  ;  TBuffer (const TBuffer &)=delete;  ; void operator= (const TBuffer &)=delete;  ; Int_t Read (const char *name) override;  Read contents of object with specified name from the current directory. ;  ; Int_t Write (const char *name, Int_t opt, Int_t bufs) const override;  Write this object to the current directory. ;  ; Int_t Write (const char *name, Int_t opt, Int_t bufs) override;  Write this object to the current directory. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; char * fBufCur;  ; char * fBuffer;  ; char * fBufMax;  ; Int_t fBufSize;  ; CacheList_t fCacheStack;  Realloc function to be used when extending the buffer. ;  ; Bool_t fMode;  ; TObject * fParent;  ; ReAlloc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBuffer.html:24049,inherit,inherited,24049,doc/master/classTBuffer.html,https://root.cern,https://root.cern/doc/master/classTBuffer.html,1,['inherit'],['inherited']
Modifiability,"onst;  Return true if there is any object connected to this signal. ;  ; virtual void HighPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void LowPriority (const char *signal_name, const char *slot_name=nullptr);  ; virtual void Message (const char *msg);  ; virtual Int_t NumberOfConnections () const;  Return number of connections for this object. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TEveElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TPointSet3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TPolyMarker3D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void PaintH3 (TH1 *h, Option_t *option);  Paint 3-d histogram h with 3-d polymarkers. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Publi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEvePointSet.html:35397,inherit,inherited,35397,doc/master/classTEvePointSet.html,https://root.cern,https://root.cern/doc/master/classTEvePointSet.html,3,['inherit'],['inherited']
Modifiability,"onst;  Write this object to the current directory. ;  . Private Attributes; Int_t fLockId;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TProofServ.h>. Inheritance diagram for TProofLockPath:. This browser is not able to show SVG: try Firefox, Chrome, Safa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofLockPath.html:9753,inherit,inherited,9753,doc/master/classTProofLockPath.html,https://root.cern,https://root.cern/doc/master/classTProofLockPath.html,2,['inherit'],['inherited']
Modifiability,"onst;  Write this object to the current directory. ;  . Public Attributes; TList fPackets;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Inheritance diagram for TProofPerfAnalysis::TWrkInfoFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofPerfAnalysis_1_1TWrkInfoFile.html:9692,inherit,inherited,9692,doc/master/classTProofPerfAnalysis_1_1TWrkInfoFile.html,https://root.cern,https://root.cern/doc/master/classTProofPerfAnalysis_1_1TWrkInfoFile.html,2,['inherit'],['inherited']
Modifiability,"onst;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void SetEnablePrefetchingImpl (Bool_t setPrefetching=kFALSE);  TFileCacheRead implementation of SetEnablePrefetching. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Bool_t fAsyncReading;  ; Bool_t fBIsSorted;  ; Bool_t fBIsTransferred;  ; Int_t * fBLen;  [fBNb] ;  ; Int_t fBNb;  ; Int_t fBNseek;  ; Int_t fBNtot;  ; Long64_t * fBPos;  [fBNb] ;  ; Long64_t * fBSeek;  [fBNseek] ;  ; Int_t * fBSeekIndex;  [fBNseek] ;  ; Int_t * fBSeekLen;  [fBNseek] ;  ; Int_t * fBSeekPos;  [fBNseek] ;  ; Int_t fBSeekSize;  ; Long64_t * fBSeekSort;  [fBNseek] ;  ; Int_t * fBSeekSortLen;  [fBNseek] ;  ; char * fBuffer;  [fBufferSize] buffer of contiguous prefetched blocks ;  ; Int_t fBufferLen;  Current buffer length (<= fBufferSize) ;  ; Int_t fBufferSize;  Allocated size of fBuffer (at a given time) ;  ; Int_t fBufferSizeMin;  Original size of fBuffer. ;  ; Long64_t fBytesRead;  Number of bytes read for this cache. ;  ; Long64_t fBytesReadExtra;  Number of extra bytes (overhead) read by the readahead buffer. ;  ; Bool_t fEna",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFileCacheRead.html:12028,inherit,inherited,12028,doc/master/classTFileCacheRead.html,https://root.cern,https://root.cern/doc/master/classTFileCacheRead.html,1,['inherit'],['inherited']
Modifiability,"onst;  Write this object to the current directory. ;  ;  Public Member Functions inherited from RooPrintable;  RooPrintable ();  ; virtual ~RooPrintable ();  ; virtual StyleOption defaultPrintStyle (Option_t *opt) const;  ; virtual void printExtras (std::ostream &os) const;  Interface to print extras of object. ;  ; virtual void printStream (std::ostream &os, Int_t contents, StyleOption style, TString indent="""") const;  Print description of object on ostream, printing contents set by contents integer, which is interpreted as an OR of 'enum ContentsOptions' values and in the style given by 'enum StyleOption'. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void clearEvalErrorLog ();  Clear the stack of evaluation error messages. ;  ; static const char * DeclFileName ();  ; static RooNumIntConfig * defaultIntegratorConfig ();  Returns the default numeric integration configuration for all RooAbsReals. ;  ; static EvalErrorIter evalErrorIter ();  ; static ErrorLoggingMode evalErrorLoggingMode ();  Return current evaluation error logging mode. ;  ; static bool hideOffset ();  ; static void logEvalError (const RooAbsReal *originator, const char *origName, const char *message, const char *serverValueString=nullptr);  Interface to insert remote error logging messages received by RooRealMPFE into current error logging stream. ;  ; static Int_t numEvalErrorItems ();  ; static Int_t numEvalErrors ();  Return the number of logged evaluation errors since the last clearing. ;  ; static void printEvalErrors (std::ostream &os=std::cout, Int_t maxPerNode=10000000);  Print all outstanding logged evaluation error on the given ostream. ;  ; static void setEvalErrorLoggingMode (ErrorLoggingMode m);  Set evaluation error logging mode. ;  ; static void setHideOffset (bool flag);  ;  Static Public Member Functions in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAbsReal.html:48650,config,configuration,48650,doc/v632/classRooAbsReal.html,https://root.cern,https://root.cern/doc/v632/classRooAbsReal.html,1,['config'],['configuration']
Modifiability,"onst;  Write this object to the current directory. ;  ;  Public Member Functions inherited from RooPrintable;  RooPrintable ();  ; virtual ~RooPrintable ();  ; virtual StyleOption defaultPrintStyle (Option_t *opt) const;  ; virtual void printExtras (std::ostream &os) const;  Interface to print extras of object. ;  ; virtual void printStream (std::ostream &os, Int_t contents, StyleOption style, TString indent="""") const;  Print description of object on ostream, printing contents set by contents integer, which is interpreted as an OR of 'enum ContentsOptions' values and in the style given by 'enum StyleOption'. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void clearEvalErrorLog ();  Clear the stack of evaluation error messages. ;  ; static const char * DeclFileName ();  ; static RooNumIntConfig * defaultIntegratorConfig ();  Returns the default numeric integration configuration for all RooAbsReals. ;  ; static std::map< constRooAbsArg *, std::pair< std::string, std::list< RooAbsReal::EvalError > > >::iterator evalErrorIter ();  ; static ErrorLoggingMode evalErrorLoggingMode ();  Return current evaluation error logging mode. ;  ; static bool hideOffset ();  ; static void logEvalError (const RooAbsReal *originator, const char *origName, const char *message, const char *serverValueString=nullptr);  Interface to insert remote error logging messages received by RooRealMPFE into current error logging stream. ;  ; static Int_t numEvalErrorItems ();  ; static Int_t numEvalErrors ();  Return the number of logged evaluation errors since the last clearing. ;  ; static void printEvalErrors (std::ostream &os=std::cout, Int_t maxPerNode=10000000);  Print all outstanding logged evaluation error on the given ostream. ;  ; static void setEvalErrorLoggingMode (ErrorLoggingMode m);  Set evaluation error logging ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsReal.html:47335,config,configuration,47335,doc/master/classRooAbsReal.html,https://root.cern,https://root.cern/doc/master/classRooAbsReal.html,1,['config'],['configuration']
Modifiability,"onstMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual Bool_tRooAbsPdf::selfNormalized() const; TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidsetAnaIntZ(Double_t z); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); voidRooAbsPdf::setNormValueCaching(Int_t minNumIntDim, Int_t ipOrder = 2); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooMultiVarGaussian.html:28544,config,config,28544,root/html532/RooMultiVarGaussian.html,https://root.cern,https://root.cern/root/html532/RooMultiVarGaussian.html,2,['config'],['config']
Modifiability,"onstMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::PDF&operator=(const TMVA::PDF&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); TMVA::PDFPDF(const TMVA::PDF&); TMVA::PDFPDF(const TString& name, Bool_t norm = kTRUE); TMVA::PDFPDF(const TString& name, const TString& options, const TString& suffix = """", TMVA::PDF* defaultPDF = 0, Bool_t norm = kTRUE); TMVA::PDFPDF(const TString& name, const TH1* theHist, TMVA::PDF::EInterpolateMethod method = kSpline2, Int_t minnsmooth = 0, Int_t maxnsmooth = 0, Bool_t checkHist = kFALSE, Bool_t norm = kTRUE); TMVA::PDFPDF(const TString& name, const TH1* theHist, TMVA::KDEKernel::EKernelType ktype, TMVA::KDEKernel::EKernelIter kiter, TMVA::KDEKernel::EKernelBorder kborder, Float_t FineFactor, Bool_t norm = kTRUE); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; voidTMVA::Configurable::PrintOptions() const; voidProcessOptions(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidReadXML(void* pdfnode); virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__PDF.html:4402,Config,Configurable,4402,root/html602/TMVA__PDF.html,https://root.cern,https://root.cern/root/html602/TMVA__PDF.html,2,['Config'],['Configurable']
Modifiability,"onstPrint description of object on ostream, printing contents set by contents integer,...Definition RooPrintable.cxx:72; RooRealIntegralPerforms hybrid numerical/analytical integrals of RooAbsReal objects.Definition RooRealIntegral.h:29; RooRealIntegral::numIntRealVarsconst RooArgSet & numIntRealVars() constDefinition RooRealIntegral.h:48; RooRealIntegral::setAllowComponentSelectionvoid setAllowComponentSelection(bool allow)Set component selection to be allowed/forbidden.Definition RooRealIntegral.cxx:1031; RooRealIntegral::Classstatic TClass * Class(); RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; RooRealVar::setValvoid setVal(double value) overrideSet value of variable to 'value'.Definition RooRealVar.cxx:242; RooRealVar::setBinningvoid setBinning(const RooAbsBinning &binning, const char *name=nullptr)Add given binning under name 'name' with this variable.Definition RooRealVar.cxx:403; RooRealVar::setBinsvoid setBins(Int_t nBins, const char *name=nullptr)Create a uniform binning under name 'name' for this variable.Definition RooRealVar.cxx:396; RooSecondMomentDefinition RooSecondMoment.h:27; RooStringViewThe RooStringView is a wrapper around a C-style string that can also be constructed from a std::strin...Definition RooStringView.h:27; RooVectorDataStore::RealVector::setBuffervoid setBuffer(RooAbsReal *real, double *newBuf)Definition RooVectorDataStore.h:248; RooVectorDataStoreUses std::vector to store data columns.Definition RooVectorDataStore.h:41; RooVectorDataStore::addRealRealVector * addReal(RooAbsReal *real)Definition RooVectorDataStore.cxx:1244; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TAttFill::SetFillStylevirtual void SetFillStyle(Style_t fstyle)Set the fill area style.Definition TAttFill.h:39; TAttLineLine Attributes class.Definition TAttLine.h:18; TAttLine::SetLineStylevirtual void SetLineStyle(Style_t lstyle)Set the line style.Definition TAtt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:249615,variab,variable,249615,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['variab'],['variable']
Modifiability,"onst_iterator Set_ci;  ; typedef Set_t::iterator Set_i;  ; typedef std::set< TEveElement * > Set_t;  ; typedef sLTI_t::iterator sLTI_i;  ; typedef sLTI_t::reverse_iterator sLTI_ri;  ; typedef std::set< TEveListTreeInfo > sLTI_t;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TEvePointSelectorConsumer; enum  ETreeVarType_e { kTVT_XYZ; , kTVT_RPhiZ; };  ;  Public Types inherited from TEveProjectable; typedef std::list< TEveProjected * >::iterator ProjList_i;  ; typedef std::list< TEveProjected * > ProjList_t;  . Public Member Functions;  TEveTrack ();  Default constructor. ;  ;  TEveTrack (const TEveTrack &t);  Copy constructor. ;  ;  TEveTrack (TEveMCTrack *t, TEveTrackPropagator *prop=nullptr);  ;  TEveTrack (TEveRecTrack *t, TEveTrackPropagator *prop=nullptr);  Constructor from TEveRecTrack<float> reconstructed track. ;  ;  TEveTrack (TEveRecTrackD *t, TEveTrackPropagator *prop=nullptr);  Constructor from TEveRecTrack<double> reconstructed track. ;  ;  TEveTrack (TParticle *t, Int_t label, TEveTrackPropagator *prop=nullptr);  Constructor from TParticle. ;  ;  ~TEveTrack () override;  Destructor. ;  ; void AddPathMark (const TEvePathMark &pm);  ; void AddPathMark (const TEvePathMarkD &pm);  ; void ComputeBBox () override;  Compute the bounding box of the track. ;  ; void CopyVizParams (const TEveElement *el) override;  Copy visualization parameters from el",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveTrack.html:2189,inherit,inherited,2189,doc/master/classTEveTrack.html,https://root.cern,https://root.cern/doc/master/classTEveTrack.html,2,['inherit'],['inherited']
Modifiability,"onst_iterator vpPolygon_ci;  ; typedef vpPolygon_t::iterator vpPolygon_i;  ; typedef std::list< Polygon_t > vpPolygon_t;  ;  Protected Types inherited from TEveElement; enum  ECompoundSelectionColorBits { ;   kCSCBImplySelectAllChildren = (1ULL << ( 0 )); , kCSCBTakeAnyParentAsMaster = (1ULL << ( 1 )); , kCSCBApplyMainColorToAllChildren = (1ULL << ( 2 )); , kCSCBApplyMainColorToMatchingChildren = (1ULL << ( 3 )); , ;   kCSCBApplyMainTransparencyToAllChildren = (1ULL << ( 4 )); , kCSCBApplyMainTransparencyToMatchingChildren = (1ULL << ( 5 )). };  ; enum  EDestruct { kNone; , kStandard; , kAnnihilate; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; Float_t PolygonSurfaceXY (const Polygon_t &poly) const;  Calculate XY surface of a polygon. ;  ; void SetDepthLocal (Float_t d) override;  Set depth (z-coordinate) of the projected points. ;  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TAttBBox;  TAttBBox (const TAttBBox &tab);  ; void AssertBBoxExtents (Float_t epsilon=0.005);  Assert extents of all sides of the bounding-box are at least epsilon. ;  ; void BBoxCheckPoint (const Float_t *p);  ; void BBoxCheckPoint (Float_t x, Float_t y, Float_t z);  ; void BBoxClear ();  Remove BBox information. ;  ; void BBoxInit (Float_t infinity=1e6);  Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max) ;  ; void BBoxZero (Float_t epsilon=0, Float_t x=0, Float_t y=0, Float_t z=0);  Create cub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEvePolygonSetProjected.html:34237,inherit,inherited,34237,doc/master/classTEvePolygonSetProjected.html,https://root.cern,https://root.cern/doc/master/classTEvePolygonSetProjected.html,1,['inherit'],['inherited']
Modifiability,"onstexpr Double_t TMath::Na ();  Avogadro constant (Avogadro's Number) in \( mol^{-1} \). ;  ; constexpr Double_t TMath::NaUncertainty ();  Avogadro constant (Avogadro's Number) uncertainty. ;  ; template<typename T > ; Int_t TMath::Nint (T x);  Round to nearest integer. Rounds half integers to the nearest even integer. ;  ; template<typename T > ; T * TMath::Normal2Plane (const T v1[3], const T v2[3], const T v3[3], T normal[3]);  Calculates a normal vector of a plane. ;  ; Double_t TMath::Normalize (Double_t v[3]);  Normalize a vector v in place. ;  ; Float_t TMath::Normalize (Float_t v[3]);  Normalize a vector v in place. ;  ; template<typename T > ; T TMath::NormCross (const T v1[3], const T v2[3], T out[3]);  Calculates the Normalized Cross Product of two vectors. ;  ; Double_t TMath::NormQuantile (Double_t p);  Computes quantiles for standard normal distribution N(0, 1) at probability p. ;  ; Bool_t TMath::Permute (Int_t n, Int_t *a);  Simple recursive algorithm to find the permutations of n natural numbers, not necessarily all distinct adapted from CERNLIB routine PERMU. ;  ; constexpr Double_t TMath::Pi ();  \( \pi\) ;  ; constexpr Double_t TMath::PiOver2 ();  \( \frac{\pi}{2} \) ;  ; constexpr Double_t TMath::PiOver4 ();  \( \frac{\pi}{4} \) ;  ; Double_t TMath::Poisson (Double_t x, Double_t par);  Computes the Poisson distribution function for (x,par). ;  ; Double_t TMath::PoissonI (Double_t x, Double_t par);  Computes the Discrete Poisson distribution function for (x,par). ;  ; Double_t TMath::Power (Double_t x, Double_t y);  Returns x raised to the power y. ;  ; Double_t TMath::Power (Double_t x, Int_t y);  Returns x raised to the power y. ;  ; LongDouble_t TMath::Power (Long64_t x, Long64_t y);  Returns x raised to the power y. ;  ; LongDouble_t TMath::Power (LongDouble_t x, Long64_t y);  Returns x raised to the power y. ;  ; LongDouble_t TMath::Power (LongDouble_t x, LongDouble_t y);  Returns x raised to the power y. ;  ; Double_t TMath::Prob (Double_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMath_8h.html:14749,adapt,adapted,14749,doc/master/TMath_8h.html,https://root.cern,https://root.cern/doc/master/TMath_8h.html,1,['adapt'],['adapted']
Modifiability,"onstexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions;  TGeoVolumeMulti (const TGeoVolumeMulti &)=delete;  ; TGeoVolumeMulti & operator= (const TGeoVolumeMulti &)=delete;  . Private Attributes; Bool_t fAttSet;  ; Int_t fAxis;  ; TGeoVolumeMulti * fDivision;  ; Int_t fNdiv;  ; Int_t fNumed;  ; Double_t fStart;  ; Double_t fStep;  ; TObjArray * fVolumes;  . Additional Inherited Members;  Public Types inherited from TGeoVolume; enum  EGeoVolumeTypes { ;   kVolumeReplicated = (1ULL << ( 14 )); , kVolumeSelected = (1ULL << ( 15 )); , kVolumeDiv = (1ULL << ( 16 )); , kVolumeOverlap = (1ULL << ( 17 )); , ;   kVolumeImportNodes = (1ULL << ( 18 )); , kVolumeMulti = (1ULL << ( 19 )); , kVoxelsXYZ = (1ULL << ( 20 )); , kVoxelsCyl = (1ULL << ( 21 )); , ;   kVolumeClone = (1ULL << ( 22 )); , kVolumeAdded = (1ULL << ( 23 )); , kVolumeOC = (1ULL << ( 21 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TGeoAtt; enum  { kBitMask = 0x00ffffff; };  ; enum  EGeoActivityAtt { kActOverride = (1ULL << ( 8 )); , kActNone = (1ULL << ( 9 )); , kActThis = (1ULL << ( 10 )); , kActDaughters = (1ULL << ( 11 )); };  ; enum  EGeoOptimizationAtt { kUseBoundingBox = (1ULL << ( 16 )); , kUseVoxels = (1ULL << ( 17 )); , kUseGsord = (1ULL << ( 18 )); };  ; enum  EGeoSavePrimitiveAtt { kSavePrimitiveAtt = (1ULL << ( 19 )); , kSaveNodesAtt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoVolumeMulti.html:35164,inherit,inherited,35164,doc/master/classTGeoVolumeMulti.html,https://root.cern,https://root.cern/doc/master/classTGeoVolumeMulti.html,1,['inherit'],['inherited']
Modifiability,"onstexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGGC (GCValues_t *values, Bool_t calledByGCPool);  Create a graphics context (only called via TGGCPool::GetGC()). ;  ; TString GetMaskString () const;  Returns GC mask as a string - used in SavePrimitive(). ;  ; void UpdateValues (GCValues_t *v);  Update values + mask. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; GContext_t fContext;  graphics context handle ;  ; GCValues_t fValues = {};  graphics context values + mask ;  ;  Protected Attributes inherited from TRefCnt; UInt_t fRefs;  . Friends; class TGGCPool;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TRefCnt; enum  EReferenceFlag { kStaticInit; };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGGC.h>. Inheritance diagr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGGC.html:13010,inherit,inherited,13010,doc/master/classTGGC.html,https://root.cern,https://root.cern/doc/master/classTGGC.html,1,['inherit'],['inherited']
Modifiability,"onstexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoPcon (const TGeoPcon &)=delete;  Cosine of dphi. ;  ; Bool_t HasInsideSurface () const;  ; TGeoPcon & operator= (const TGeoPcon &)=delete;  ; void SetSegsAndPolsNoInside (TBuffer3D &buff) const;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t fC1 = 0;  Full phi range flag. ;  ; Double_t fC2 = 0;  Sine of phi1. ;  ; Double_t fCdphi = 0;  Sine of (phi1+phi2)/2. ;  ; Double_t fCm = 0;  Sine of phi1+dphi. ;  ; Double_t fDphi = 0;  ; Bool_t fFullPhi = false;  ; Int_t fNz = 0;  ; Double_t fPhi1 = 0;  ; Double_t * fRmax = nullptr;  ; Double_t * fRmin = nullptr;  ; Double_t fS1 = 0;  Cosine of phi1. ;  ; Double_t fS2 = 0;  Cosine of phi1+dphi. ;  ; Double_t fSm = 0;  Cosine of (phi1+phi2)/2. ;  ; Double_t * fZ = nullptr;  ;  Protected Attributes inherited from TGeoB",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPcon.html:19795,inherit,inherited,19795,doc/master/classTGeoPcon.html,https://root.cern,https://root.cern/doc/master/classTGeoPcon.html,1,['inherit'],['inherited']
Modifiability,"onstexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  . Protected Member Functions;  TH2 ();  2-D histogram default constructor. ;  ;  TH2 (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins, Int_t nbinsy, const Double_t *ybins);  Constructor for Double_t variable bin size 2-D histograms. ;  ;  TH2 (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins, Int_t nbinsy, Double_t ylow, Double_t yup);  Constructor for variable bin size (along X axis) 2-D histograms using an input array of type double. ;  ;  TH2 (const char *name, const char *title, Int_t nbinsx, const Float_t *xbins, Int_t nbinsy, const Float_t *ybins);  Constructor for variable bin size (along X and Y axis) 2-D histograms using input arrays of type float. ;  ;  TH2 (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, const Double_t *ybins);  Constructor for Double_t variable bin size (along Y axis) 2-D histograms. ;  ;  TH2 (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup);  Constructor for fix bin size 2-D histograms. ;  ; virtual Int_t BufferFill (Double_t x, Double_t y, Double_t w);  accumulate arguments in buffer. ;  ; Int_t BufferFill (Double_t, Double_t) override;  accumulate arguments in buffer. ;  ; virtual void DoFitSlices (bool onX, TF1 *f1, Int_t firstbin, Int_t lastbin, Int_t cut, Option_t *option, TObjArray *arr);  ; virtual TProfile * DoProfile (bool onX, const char *name, Int_t firstbin, Int_t lastbin, Option_t *option) const;  ; virtual TH1D * DoProjection (bool onX, const char *name, Int_t firs",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2.html:46354,variab,variable,46354,doc/master/classTH2.html,https://root.cern,https://root.cern/doc/master/classTH2.html,1,['variab'],['variable']
Modifiability,"onstexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; double _cl;  ; RooDataSet * _data;  Summary dataset to store results. ;  ; RooAbsPdf * _model;  ; std::string _parName;  Name of Nsignal parameter. ;  ; RooStats::ProfileLikelihoodCalculator * _plc;  ; const RooArgSet * _poi;  parameters of interest ;  ; RooRealVar * _ul;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from RooAbsMCStudyModule; RooArgSet * allDependents ();  Return all observables. ;  ; bool binGenData ();  If true binning of data between generating and fitting is requested. ;  ; RooArgSet * dependents ();  Return fit model observables. ;  ; bool extendedGen ();  If true extended mode generation is requested. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1UpperLimitMCSModule.html:12095,inherit,inherited,12095,doc/master/classRooStats_1_1UpperLimitMCSModule.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1UpperLimitMCSModule.html,1,['inherit'],['inherited']
Modifiability,"onstraintSum (const char *name, const char *title, const RooArgSet &constraintSet, const RooArgSet &paramSet, bool takeGlobalObservablesFromData=false);  Constructor with set of constraint p.d.f.s. All elements in constraintSet must inherit from RooAbsPdf. ;  ;  RooConstraintSum (const RooConstraintSum &other, const char *name=nullptr);  Copy constructor. ;  ; TObject * clone (const char *newname) const override;  ; std::unique_ptr< RooAbsArg > compileForNormSet (RooArgSet const &normSet, RooFit::Detail::CompileContext &ctx) const override;  ; void doEval (RooFit::EvalContext &) const override;  Base function for computing multiple values of a RooAbsReal. ;  ; TClass * IsA () const override;  ; const RooArgList & list ();  ; bool setData (RooAbsData &data, bool cloneData=true) override;  Replace the variables in this RooConstraintSum with the global observables in the dataset if they match by name. ;  ; bool setData (RooAbsData const &data, bool cloneData=true);  Replace the variables in this RooConstraintSum with the global observables in the dataset if they match by name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void translate (RooFit::Detail::CodeSquashContext &ctx) const override;  This function defines a translation for each RooAbsReal based object that can be used to express the class as simple C++ code. ;  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (const char *name, const char *title, double minVal, double maxVal, const char *unit="""");  Constructor with plot range and unit label. ;  ;  RooAbsReal (const RooAbsReal &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooAbsReal () override;  Destructor. ;  ; virtual double analyticalIntegral (Int_t code, con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooConstraintSum.html:1698,variab,variables,1698,doc/master/classRooConstraintSum.html,https://root.cern,https://root.cern/doc/master/classRooConstraintSum.html,1,['variab'],['variables']
Modifiability,"onstructible, copy-constructible and copy-assignable. Automatically deduced. ; TThe type of the column to apply the reduction to. Automatically deduced. . Parameters. [in]aggregatorA callable with signature U(U,T) or void(U&,T), where T is the type of the column, U is the type of the aggregator variable ; [in]mergerA callable with signature U(U,U) or void(std::vector<U>&) used to merge the results of the accumulations of each thread ; [in]columnNameThe column to be aggregated. If omitted, the first default column is used instead. ; [in]aggIdentityThe aggregator variable of each thread is initialized to this value (or is default-constructed if the parameter is omitted) . Returnsthe result of the aggregation wrapped in a RResultPtr.; An aggregator callable takes two values, an aggregator variable and a column value. The aggregator variable is initialized to aggIdentity or default-constructed if aggIdentity is omitted. This action calls the aggregator callable for each processed entry, passing in the aggregator variable and the value of the column columnName. If the signature is U(U,T) the aggregator variable is then copy-assigned the result of the execution of the callable. Otherwise the signature of aggregator must be void(U&,T).; The merger callable is used to merge the partial accumulation results of each processing thread. It is only called in multi-thread executions. If its signature is U(U,U) the aggregator variables of each thread are merged two by two. If its signature is void(std::vector<U>& a) it is assumed that it merges all aggregators in a[0].; This action is lazy: upon invocation of this method the calculation is booked but not executed. Also see RResultPtr.; Example usage: auto aggregator = [](double acc, double x) { return acc * x; };; ROOT::EnableImplicitMT();; // If multithread is enabled, the aggregator function will be called by more threads; // and will produce a vector of partial accumulators.; // The merger function performs the final aggregation",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html:32414,variab,variable,32414,doc/master/classROOT_1_1RDF_1_1RInterface.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html,1,['variab'],['variable']
Modifiability,"ont() const; virtual Float_tGetTextSize() const; virtual TClass*IsA() const; virtual voidModify(); TAttText&operator=(const TAttText&); virtual voidResetAttText(Option_t* toption = """"); virtual voidSaveTextAttributes(ostream& out, const char* name, Int_t alidef = 12, Float_t angdef = 0, Int_t coldef = 1, Int_t fondef = 61, Float_t sizdef = 1); virtual voidSetTextAlign(Short_t align = 11); virtual voidSetTextAngle(Float_t tangle = 0)MENU ; virtual voidSetTextAttributes()MENU ; virtual voidSetTextColor(Color_t tcolor = 1); virtual voidSetTextFont(Font_t tfont = 62); virtual voidSetTextSize(Float_t tsize = 1); virtual voidSetTextSizePixels(Int_t npixels); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Data Members; protected:. Short_tfTextAlignText alignment; Float_tfTextAngleText angle; Color_tfTextColorText color index; Font_tfTextFontText font number; Float_tfTextSizeText size. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TAttText(); AttText default constructor. Default text attributes are taken from the current style. TAttText(Int_t align, Float_t angle, Color_t color, Style_t font, Float_t tsize); AttText normal constructor. Text attributes are taken from the argument list. ~TAttText(); AttText destructor. void Copy(TAttText& atttext) const; Copy this text attributes to a new TAttText. void Modify(); Change current text attributes if necessary. void ResetAttText(Option_t* toption = """"); Reset this text attributes to default values. void SaveTextAttributes(ostream& out, const char* name, Int_t alidef = 12, Float_t angdef = 0, Int_t coldef = 1, Int_t fondef = 61, Float_t sizdef = 1); Save text attributes as C++ statement(s) on output stream out. void SetTextAttributes(); Invoke the DialogCanvas Text attributes. void SetTextSizePixels(Int_t npixels); Set the text size in pixels.; If the font precision is greater than 2, the text size is set to npixels,; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TAttText.html:8956,Inherit,Inheritance,8956,root/html532/TAttText.html,https://root.cern,https://root.cern/root/html532/TAttText.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ontPtr); TGFont*GetNativeFont(const char* name, Bool_t fixedDefault = kTRUE); const char*GetUid(const char* string); TGFont*MakeFont(TGFont* font, FontStruct_t fontStruct, const char* fontName); voidTObject::MakeZombie(); Bool_tParseXLFD(const char* string, XLFDAttributes_t* xa). private:. TGFontPool(const TGFontPool& fp); TGFontPool&operator=(const TGFontPool& fp). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TGClient*TGObject::fClientConnection to display server; Handle_tTGObject::fIdX11/Win32 Window identifier. private:. THashTable*fListTGFont objects pool; THashTable*fNamedTableMap a name to a set of attributes for a font; THashTable*fUidTableHash table for some used string values like family names, etc. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGFontPool(TGClient* client); Create a font pool. ~TGFontPool(); Cleanup font pool. TGFont * GetFont(const char* font, Bool_t fixedDefault = kTRUE); Get the specified font.; The font can be one of the following forms:; XLFD (see X documentation); ""Family [size [style] [style ...]]""; Returns 0 if error or no font can be found.; If fixedDefault is false the ""fixed"" font will not be substituted; as fallback when the asked for font does not exist. TGFont * GetFont(const TGFont* font); Use font, i.e. increases ref count of specified font. Returns 0; if font is not found. TGFont * GetFont(FontStruct_t font); Use font, i.e. increases ref count of specified font. TGFont * GetFont(const char* family, Int_t ptsize, Int_t weight, Int_t slant); Returns font specified bay family, pixel/point size, weight and slant; negative value of ptsize means size in pixels; positive value of ptsize means size in points. For example:; TGFont *font = fpool->GetFo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGFontPool.html:6799,Inherit,Inheritance,6799,root/html532/TGFontPool.html,https://root.cern,https://root.cern/root/html532/TGFontPool.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ontainer object that can hold multiple RooAbsArg objects.Definition RooArgSet.h:24; RooCmdArgNamed container for two doubles, two integers two object points and three string pointers that can be...Definition RooCmdArg.h:26; RooCurve::WingModeWingModeDefinition RooCurve.h:39; RooCurve::Extended@ ExtendedDefinition RooCurve.h:39; RooDataHistContainer class to hold N-dimensional binned data.Definition RooDataHist.h:40; RooDataSetContainer class to hold unbinned data.Definition RooDataSet.h:33; RooDerivativeRepresents the first, second, or third order derivative of any RooAbsReal as calculated (numerically)...Definition RooDerivative.h:30; RooFitResultRooFitResult is a container class to hold the input and output of a PDF fit to a dataset.Definition RooFitResult.h:40; RooFit::Detail::CodeSquashContextA class to maintain the context for squashing of RooFit models into code.Definition CodeSquashContext.h:42; RooFit::EvalContextDefinition EvalContext.h:84; RooFunctorLightweight interface adaptor that exports a RooAbsPdf as a functor.Definition RooFunctor.h:25; RooLinkedListCollection class for internal use, storing a collection of RooAbsArg pointers in a doubly linked list...Definition RooLinkedList.h:44; RooNumIntConfigHolds the configuration parameters of the various numeric integrators used by RooRealIntegral.Definition RooNumIntConfig.h:25; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooRealBindingLightweight interface adaptor that binds a RooAbsReal object to a subset of its servers and present i...Definition RooRealBinding.h:30; RooRealSumFuncDefinition RooRealSumFunc.h:26; RooRealSumPdfImplements a PDF constructed from a sum of functions:Definition RooRealSumPdf.h:24; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; RooStringViewThe RooStringView is a wrapper around a C-style string that can also be constructed from a std::strin...Definition RooStringView.h:27; RooVectorDataStor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8h_source.html:56287,adapt,adaptor,56287,doc/master/RooAbsReal_8h_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8h_source.html,1,['adapt'],['adaptor']
Modifiability,"ontal; ""v"" draw labels vertical; ""u"" draw labels up (end of label right adjusted); ""d"" draw labels down (start of label left adjusted) . Definition at line 662 of file TAxis.cxx. ◆ operator=(). TAxis & TAxis::operator= ; (; const TAxis & ; axis). Assignment operator. ; Definition at line 118 of file TAxis.cxx. ◆ RotateTitle(). void TAxis::RotateTitle ; (; Bool_t ; rotate = kTRUE). inline . Rotate title by 180 degrees. ; By default the title is drawn right adjusted. If rotate is TRUE, the title is left adjusted at the end of the axis and rotated by 180 degrees ; Definition at line 203 of file TAxis.h. ◆ SaveAttributes(). void TAxis::SaveAttributes ; (; std::ostream & ; out, . const char * ; name, . const char * ; subname . ). overridevirtual . Save axis attributes as C++ statement(s) on output stream out. ; Reimplemented from TAttAxis.; Definition at line 710 of file TAxis.cxx. ◆ Set() [1/3]. void TAxis::Set ; (; Int_t ; nbins, . const Double_t * ; xbins . ). virtual . Initialize axis with variable bins. ; Reimplemented in Axis2.; Definition at line 824 of file TAxis.cxx. ◆ Set() [2/3]. void TAxis::Set ; (; Int_t ; nbins, . const Float_t * ; xbins . ). virtual . Initialize axis with variable bins. ; Reimplemented in Axis2.; Definition at line 806 of file TAxis.cxx. ◆ Set() [3/3]. void TAxis::Set ; (; Int_t ; nbins, . Double_t ; xmin, . Double_t ; xmax . ). virtual . Initialize axis with fix bins. ; Reimplemented in Axis2.; Definition at line 794 of file TAxis.cxx. ◆ SetAlphanumeric(). void TAxis::SetAlphanumeric ; (; Bool_t ; alphanumeric = kTRUE). Set axis alphanumeric. ; Definition at line 842 of file TAxis.cxx. ◆ SetBinLabel(). void TAxis::SetBinLabel ; (; Int_t ; bin, . const char * ; label . ). virtual . Set label for bin. ; If no label list exists, it is created. If all the bins have labels, the axis becomes alphanumeric and extendable. New labels will not be added with the Fill method but will end-up in the underflow bin. See documentation of TAxis::FindBin(co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAxis.html:39031,variab,variable,39031,doc/master/classTAxis.html,https://root.cern,https://root.cern/doc/master/classTAxis.html,1,['variab'],['variable']
Modifiability,"ontent(stringstream& s); reading attributes from tree node (well, was used in BinarySearchTree,; and somehow I guess someone programmed it such that we need this in; this tree too, although we don't..). TMVA::MsgLogger& Log(). Node* CreateNode() const; { return new DecisionTreeNode(); }. void SetNFisherCoeff(Int_t nvars); {fFisherCoeff.resize(nvars);}. UInt_t GetNFisherCoeff() const; set fisher coefficients. { return fFisherCoeff.size();}. Double_t GetFisherCoeff(Int_t ivar) const; get fisher coefficients. {return fFisherCoeff.at(ivar);}. void SetSelector(Short_t i); set index of variable used for discrimination at this node. { fSelector = i; }. Short_t GetSelector() const; return index of variable used for discrimination at this node. { return fSelector; }. void SetCutValue(Float_t c); set the cut value applied at this node. { fCutValue = c; }. Float_t GetCutValue( void ); return the cut value applied at this node. { return fCutValue; }. void SetCutType(Bool_t t); set true: if event variable > cutValue ==> signal , false otherwise. { fCutType = t; }. Bool_t GetCutType( void ); return kTRUE: Cuts select signal, kFALSE: Cuts select bkg. { return fCutType; }. void SetNodeType(Int_t t); set node type: 1 signal node, -1 bkg leave, 0 intermediate Node. { fNodeType = t;}. Int_t GetNodeType( void ); return node type: 1 signal node, -1 bkg leave, 0 intermediate Node. { return fNodeType; }. Float_t GetPurity( void ); return S/(S+B) (purity) at this node (from training). { return fPurity;}. void SetResponse(Float_t r); set the response of the node (for regression). { fResponse = r;}. Float_t GetResponse( void ); return the response of the node (for regression). { return fResponse;}. void SetRMS(Float_t r); set the RMS of the response of the node (for regression). { fRMS = r;}. Float_t GetRMS( void ); return the RMS of the response of the node (for regression). { return fRMS;}. void SetNSigEvents(Float_t s); set the sum of the signal weights in the node. { fTrainInfo->fNSigEve",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__DecisionTreeNode.html:9956,variab,variable,9956,root/html602/TMVA__DecisionTreeNode.html,https://root.cern,https://root.cern/root/html602/TMVA__DecisionTreeNode.html,4,['variab'],['variable']
Modifiability,ontents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; RooAICRegistryRooAbsAnaConvPdf::_codeReg! Registry of analytical integration codes; RooObjCacheManagerRooAbsAnaConvPdf::_coefNormMgrCoefficient normalization manager; RooArgSet*RooAbsAnaConvPdf::_convNormSet! Subset of last normalization that applies to convolutions; RooListProxyRooAbsAnaConvPdf::_convSetSet of (resModel (x) basisFunc) convolution objects; TIterator*RooAbsAnaConvPdf::_convSetIter! Iterator over _convNormSet; RooRealProxyRooAbsAnaConvPdf::_convVarConvolution variable; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; Bool_tRooAbsAnaConvPdf::_isCopy; TStringRooAbsReal::_labelPlot label for objects value;,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooDecay.html:41464,variab,variable,41464,root/html534/RooDecay.html,https://root.cern,https://root.cern/root/html534/RooDecay.html,2,['variab'],['variable']
Modifiability,ontents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; RooAICRegistryRooAbsAnaConvPdf::_codeReg! Registry of analytical integration codes; RooObjCacheManagerRooAbsAnaConvPdf::_coefNormMgrCoefficient normalization manager; RooArgSet*RooAbsAnaConvPdf::_convNormSet! Subset of last normalization that applies to convolutions; RooListProxyRooAbsAnaConvPdf::_convSetSet of (resModel (x) basisFunc) convolution objects; TIterator*RooAbsAnaConvPdf::_convSetIter! Iterator over _convNormSet; RooRealProxyRooAbsAnaConvPdf::_convVarConvolution variable; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooRealProxy_dgamma; RooRealProxy_dm; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; RooRealProxy_f0; RooRealProxy_f1; RooRealProxy_f2; RooRealProxy_f3; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached i,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooBDecay.html:41674,variab,variable,41674,root/html534/RooBDecay.html,https://root.cern,https://root.cern/root/html534/RooBDecay.html,2,['variab'],['variable']
Modifiability,ontents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; RooAICRegistryRooAbsAnaConvPdf::_codeReg! Registry of analytical integration codes; RooObjCacheManagerRooAbsAnaConvPdf::_coefNormMgrCoefficient normalization manager; RooArgSet*RooAbsAnaConvPdf::_convNormSet! Subset of last normalization that applies to convolutions; RooListProxyRooAbsAnaConvPdf::_convSetSet of (resModel (x) basisFunc) convolution objects; TIterator*RooAbsAnaConvPdf::_convSetIter! Iterator over _convNormSet; RooRealProxyRooAbsAnaConvPdf::_convVarConvolution variable; RooRealProxy_correctQ; RooRealProxy_delC; RooRealProxy_delS; RooRealProxy_delW; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooRealProxy_dm; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; Double_t_genB0Frac; Double_t_genRhoPlusFrac; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bo,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooNonCPEigenDecay.html:42665,variab,variable,42665,root/html534/RooNonCPEigenDecay.html,https://root.cern,https://root.cern/root/html534/RooNonCPEigenDecay.html,2,['variab'],['variable']
Modifiability,ontents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; RooAICRegistryRooAbsAnaConvPdf::_codeReg! Registry of analytical integration codes; RooObjCacheManagerRooAbsAnaConvPdf::_coefNormMgrCoefficient normalization manager; RooArgSet*RooAbsAnaConvPdf::_convNormSet! Subset of last normalization that applies to convolutions; RooListProxyRooAbsAnaConvPdf::_convSetSet of (resModel (x) basisFunc) convolution objects; TIterator*RooAbsAnaConvPdf::_convSetIter! Iterator over _convNormSet; RooRealProxyRooAbsAnaConvPdf::_convVarConvolution variable; RooRealProxy_delMistag; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooRealProxy_dm; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; Double_t_genB0Frac; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; Bool_tRooAbsAnaConvPdf::_i,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooBCPGenDecay.html:41713,variab,variable,41713,root/html534/RooBCPGenDecay.html,https://root.cern,https://root.cern/root/html534/RooBCPGenDecay.html,2,['variab'],['variable']
Modifiability,ontents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; RooAICRegistryRooAbsAnaConvPdf::_codeReg! Registry of analytical integration codes; RooObjCacheManagerRooAbsAnaConvPdf::_coefNormMgrCoefficient normalization manager; RooArgSet*RooAbsAnaConvPdf::_convNormSet! Subset of last normalization that applies to convolutions; RooListProxyRooAbsAnaConvPdf::_convSetSet of (resModel (x) basisFunc) convolution objects; TIterator*RooAbsAnaConvPdf::_convSetIter! Iterator over _convNormSet; RooRealProxyRooAbsAnaConvPdf::_convVarConvolution variable; RooRealProxy_delMistag; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooRealProxy_dm; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; Double_t_genFlavFrac!; Double_t_genFlavFracMix!; Double_t_genFlavFracUnmix!; Double_t_genMixFrac! do not persist; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooBMixDecay.html:41696,variab,variable,41696,root/html534/RooBMixDecay.html,https://root.cern,https://root.cern/root/html534/RooBMixDecay.html,2,['variab'],['variable']
Modifiability,ontents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; RooAICRegistryRooAbsAnaConvPdf::_codeReg! Registry of analytical integration codes; RooObjCacheManagerRooAbsAnaConvPdf::_coefNormMgrCoefficient normalization manager; RooArgSet*RooAbsAnaConvPdf::_convNormSet! Subset of last normalization that applies to convolutions; RooListProxyRooAbsAnaConvPdf::_convSetSet of (resModel (x) basisFunc) convolution objects; TIterator*RooAbsAnaConvPdf::_convSetIter! Iterator over _convNormSet; RooRealProxyRooAbsAnaConvPdf::_convVarConvolution variable; RooRealProxy_delMistag; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooRealProxy_dm; RooRealProxy_effRatio; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; Double_t_genB0Frac; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; Boo,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooBCPEffDecay.html:41848,variab,variable,41848,root/html534/RooBCPEffDecay.html,https://root.cern,https://root.cern/root/html534/RooBCPEffDecay.html,2,['variab'],['variable']
Modifiability,"ontents, bool verbose=false, TString indent="""") const override;  Detailed printing interface. ;  ; void printValue (std::ostream &os) const override;  Print value of variable. ;  ; bool readFromStream (std::istream &is, bool compact, bool verbose=false) override;  Read object contents from given stream. ;  ; void removeAsymError ();  ; void removeError ();  ; void removeMax (const char *name=nullptr);  Remove upper range limit for binning with given name. Empty name means default range. ;  ; void removeMin (const char *name=nullptr);  Remove lower range limit for binning with given name. Empty name means default range. ;  ; void removeRange (const char *name=nullptr);  Remove range limits for binning with given name. Empty name means default range. ;  ; void setAsymError (double lo, double hi);  ; void setBinning (const RooAbsBinning &binning, const char *name=nullptr);  Add given binning under name 'name' with this variable. ;  ; void setBins (Int_t nBins, const char *name=nullptr);  Create a uniform binning under name 'name' for this variable. ;  ; void setError (double value);  ; void setMax (const char *name, double value);  Set maximum of name range to given value. ;  ; void setMax (double value);  ; void setMin (const char *name, double value);  Set minimum of name range to given value. ;  ; void setMin (double value);  ; void setRange (const char *name, double min, double max);  Set a fit or plotting range. ;  ; void setRange (const char *name, RooAbsReal &min, RooAbsReal &max);  Set or modify a parameterised range, i.e., a range the varies in dependence of parameters. ;  ; void setRange (double min, double max);  Set the limits of the default range. ;  ; void setRange (RooAbsReal &min, RooAbsReal &max);  Set parameterised limits of the default range. See setRange(const char*, RooAbsReal&, RooAbsReal&). ;  ; void setVal (double value) override;  Set value of variable to 'value'. ;  ; void setVal (double value, const char *rangeName) override;  Set value of va",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealVar.html:4717,variab,variable,4717,doc/master/classRooRealVar.html,https://root.cern,https://root.cern/doc/master/classRooRealVar.html,1,['variab'],['variable']
Modifiability,"ontents. -case 2 xbins!=0; a new profile is created (you should specify newname).; The parameter ngroup is the number of variable size bins in the created profile; The array xbins must contain ngroup+1 elements that represent the low-edge; of the bins.; The data of the old bins are added to the new bin which contains the bin center; of the old bins. It is possible that information from the old binning are attached; to the under-/overflow bins of the new binning. examples: if hp is an existing TProfile with 100 bins; Double_t xbins[25] = {...} array of low-edges (xbins[25] is the upper edge of last bin; hp->Rebin(24,""hpnew"",xbins); //creates a new variable bin size profile hpnew. void ExtendAxis(Double_t x, TAxis* axis); Profile histogram is resized along x axis such that x is in the axis range.; The new axis limits are recomputed by doubling iteratively; the current axis range until the specified value x is within the limits.; The algorithm makes a copy of the histogram, then loops on all bins; of the old histogram to fill the extended histogram.; Takes into account errors (Sumw2) if any.; The axis must be extendable before invoking this function.; Ex: h->GetXaxis()->SetCanExtend(kTRUE). void Reset(Option_t* option = """"); -*Reset contents of a Profile histogram; *-* =====================================. void SavePrimitive(ostream& out, Option_t* option = """"); Save primitive as a C++ statement(s) on output stream out. void Scale(Double_t c1 = 1, Option_t* option = """"); *-*-*-*-*Multiply this profile by a constant c1*-*-*-*-*-*-*-*-*; *-* ======================================. this = c1*this. This function uses the services of TProfile::Add. void SetBinEntries(Int_t bin, Double_t w); Set the number of entries in bin*-*-*-; *-* ================================. void SetBins(Int_t nbins, Double_t xmin, Double_t xmax); Redefine x axis parameters*-*-*-; *-* ===========================. void SetBins(Int_t nx, const Double_t* xbins); Redefine x axis parameters*-*-*-; *-* =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProfile.html:45107,extend,extended,45107,root/html602/TProfile.html,https://root.cern,https://root.cern/root/html602/TProfile.html,4,['extend'],['extended']
Modifiability,"ontext ; (; const RooArgSet & ; vars, . const RooDataSet * ; prototype = nullptr, . const RooArgSet * ; auxProto = nullptr, . bool ; verbose = false . ); const. virtual . Interface function to create a generator context from a p.d.f. ; This default implementation returns a 'standard' context that works for any p.d.f ; Reimplemented in RooEffProd, RooAbsAnaConvPdf, RooAddModel, RooAddPdf, RooFFTConvPdf, RooNumConvPdf, RooProdPdf, and RooSimultaneous.; Definition at line 1127 of file RooAbsPdf.cxx. ◆ generate() [1/6]. RooAbsPdf::generate ; (; const RooArgSet & ; whatVars, . const RooCmdArg & ; arg1 = {}, . const RooCmdArg & ; arg2 = {}, . const RooCmdArg & ; arg3 = {}, . const RooCmdArg & ; arg4 = {}, . const RooCmdArg & ; arg5 = {}, . const RooCmdArg & ; arg6 = {} . ). Generate a new dataset containing the specified variables with events sampled from our distribution. ; Generate the specified number of events or expectedEvents() if not specified. Parameters. [in]whatVarsChoose variables in which to generate events. Variables not listed here will remain constant and not be used for event generation. ; [in]arg1,arg2,arg3,arg4,arg5,arg6Optional RooCmdArg() to change behaviour of generate(). . ReturnsRooDataSet *, owned by caller.; Any variables of this PDF that are not in whatVars will use their current values and be treated as fixed parameters. Returns zero in case of an error. Type of CmdArg Effect on generate . Name(const char* name) Name of the output dataset . Verbose(bool flag) Print informational messages during event generation . NumEvents(int nevt) Generate specified number of events . Extended() If no number of events to be generated is given, use expected number of events from extended likelihood term. This evidently only works for extended PDFs. . GenBinned(const char* tag) Use binned generation for all component pdfs that have 'setAttribute(tag)' set . AutoBinned(bool flag) Automatically deploy binned generation for binned distributions (e.g. RooHistPdf, su",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsPdf.html:113414,variab,variables,113414,doc/master/classRooAbsPdf.html,https://root.cern,https://root.cern/doc/master/classRooAbsPdf.html,1,['variab'],['variables']
Modifiability,"ontext(const RooArgSet& vars, Bool_t verbose = kFALSE) const; RooFitResult*RooAbsReal::chi2FitDriver(RooAbsReal& fcn, RooLinkedList& cmdList); TStringRooAbsArg::cleanBranchName() const; virtual voidRooAbsReal::copyCache(const RooAbsArg* source, Bool_t valueOnly = kFALSE, Bool_t setValDirty = kTRUE); RooAbsReal*RooAbsReal::createIntObj(const RooArgSet& iset, const RooArgSet* nset, const RooNumIntConfig* cfg, const char* rangeName) const; virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; const RooAbsReal*eff() const; virtual Double_tevaluate() const; virtual voidRooAbsReal::fillTreeBranch(TTree& t); voidRooAbsReal::findInnerMostIntegration(const RooArgSet& allObs, RooArgSet& innerObs, const char* rangeName) const; RooDataSet*RooAbsPdf::generate(RooAbsGenContext& context, const RooArgSet& whatVars, const RooDataSet* prototype, Double_t nEvents, Bool_t verbose, Bool_t randProtoOrder, Bool_t resampleProto, Bool_t skipInit = kFALSE, Bool_t extended = kFALSE) const; virtual voidRooAbsArg::getObservablesHook(const RooArgSet*, RooArgSet*) const; virtual voidRooAbsArg::getParametersHook(const RooArgSet*, RooArgSet*, Bool_t) const; RooAbsProxy*RooAbsArg::getProxy(Int_t index) const; static voidRooAbsReal::globalSelectComp(Bool_t flag); voidRooAbsArg::graphVizAddConnections(set<pair<RooAbsArg*,RooAbsArg*> >&); Bool_tRooAbsArg::inhibitDirty() const; TStringRooAbsReal::integralNameSuffix(const RooArgSet& iset, const RooArgSet* nset = 0, const char* rangeName = 0, Bool_t omitEmpty = kFALSE) const; Bool_tRooAbsReal::isSelectedComp() const; virtual Bool_tRooAbsReal::isValid() const; virtual Bool_tRooAbsReal::isValidReal(Double_t value, Bool_t printError = kFALSE) const; voidRooAbsReal::makeProjectionSet(const RooAbsArg* plotVar, const RooArgSet* allVars, RooArgSet& projectedVars, Bool_t silent) const; voidTObject::MakeZombie(); Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgProxy& a) const; Bool_tR",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooEffProd.html:33969,extend,extended,33969,root/html602/RooEffProd.html,https://root.cern,https://root.cern/root/html602/RooEffProd.html,4,['extend'],['extended']
Modifiability,"ontext(const RooArgSet& vars, Bool_t verbose = kFALSE) const; RooFitResult*RooAbsReal::chi2FitDriver(RooAbsReal& fcn, RooLinkedList& cmdList); TStringRooAbsArg::cleanBranchName() const; virtual voidRooAbsReal::copyCache(const RooAbsArg* source, Bool_t valueOnly = kFALSE, Bool_t setValDirty = kTRUE); RooAbsReal*RooAbsReal::createIntObj(const RooArgSet& iset, const RooArgSet* nset, const RooNumIntConfig* cfg, const char* rangeName) const; virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; const RooAbsReal*eff() const; virtual Double_tevaluate() const; virtual voidRooAbsReal::fillTreeBranch(TTree& t); voidRooAbsReal::findInnerMostIntegration(const RooArgSet& allObs, RooArgSet& innerObs, const char* rangeName) const; RooDataSet*RooAbsPdf::generate(RooAbsGenContext& context, const RooArgSet& whatVars, const RooDataSet* prototype, Double_t nEvents, Bool_t verbose, Bool_t randProtoOrder, Bool_t resampleProto, Bool_t skipInit = kFALSE, Bool_t extended = kFALSE) const; virtual voidRooAbsArg::getObservablesHook(const RooArgSet*, RooArgSet*) const; virtual voidRooAbsArg::getParametersHook(const RooArgSet*, RooArgSet*, Bool_t) const; RooAbsProxy*RooAbsArg::getProxy(Int_t index) const; static voidRooAbsReal::globalSelectComp(Bool_t flag); voidRooAbsArg::graphVizAddConnections(set<std::pair<RooAbsArg*,RooAbsArg*> >&); Bool_tRooAbsArg::inhibitDirty() const; TStringRooAbsReal::integralNameSuffix(const RooArgSet& iset, const RooArgSet* nset = 0, const char* rangeName = 0, Bool_t omitEmpty = kFALSE) const; Bool_tRooAbsReal::isSelectedComp() const; virtual Bool_tRooAbsReal::isValid() const; virtual Bool_tRooAbsReal::isValidReal(Double_t value, Bool_t printError = kFALSE) const; voidRooAbsReal::makeProjectionSet(const RooAbsArg* plotVar, const RooArgSet* allVars, RooArgSet& projectedVars, Bool_t silent) const; voidTObject::MakeZombie(); Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgProxy& a) const; Bo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooEffProd.html:33982,extend,extended,33982,root/html534/RooEffProd.html,https://root.cern,https://root.cern/root/html534/RooEffProd.html,2,['extend'],['extended']
Modifiability,"ontext*_modelGenResolution model generator context; RooArgSet*_modelVarsHolder of resModel event; RooArgSet*_modelVarsOwnedOwning version of modelVars ;; static Int_tRooPrintable::_nameLength; Int_tRooAbsGenContext::_nextProtoIndexNext prototype event to load according to LUT; TStringRooAbsGenContext::_normRangeNormalization range of pdf; RooArgSet*_pdfCloneSetOwner of PDF clone; RooAbsGenContext*_pdfGenPhysics model generator context; RooArgSet*_pdfVarsHolder of PDF x truth event; RooArgSet*_pdfVarsOwnedOwning version of pdfVars ;; Int_t*RooAbsGenContext::_protoOrderLUT with traversal order of prototype data; RooArgSetRooAbsGenContext::_protoVarsPrototype observables; const RooDataSet*RooAbsGenContext::_prototypePointer to prototype dataset; RooArgSet*RooAbsGenContext::_theEventPointer to observable event being generated; Bool_tRooAbsGenContext::_verboseVerbose messaging?; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooConvGenContext(const RooAbsAnaConvPdf& model, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t _verbose = kFALSE); Constructor for specialized generator context for analytical convolutions. Builds a generator for the physics PDF convoluted with the truth model; and a generator for the resolution model as PDF. Events are generated; by sampling events from the p.d.f and smearings from the resolution model; and adding these to obtain a distribution of events consistent with the; convolution of these two. The advantage of this procedure is so that; both p.d.f and resolution model can take advantage of any internal; generators that may be defined. RooConvGenContext(const RooNumConvPdf& model, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t _verbose = kFALSE); Constructor for specialized generator context for numerical convolutions. Builds a generat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooConvGenContext.html:9630,Inherit,Inheritance,9630,root/html532/RooConvGenContext.html,https://root.cern,https://root.cern/root/html532/RooConvGenContext.html,8,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ontextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TBranch*TLeaf::fBranch! Pointer to supporting branch (we do not own the branch); Bool_tTLeaf::fIsRange(=kTRUE if leaf has a range, kFALSE otherwise); Bool_tTLeaf::fIsUnsigned(=kTRUE if unsigned, kFALSE otherwise); TLeaf*TLeaf::fLeafCountPointer to Leaf count if variable length (we do not own the counter); Int_tTLeaf::fLenNumber of fixed length elements; Int_tTLeaf::fLenTypeNumber of bytes for this data type; Int_tfMaximumMaximum value if leaf range is specified; Int_tfMinimumMinimum value if leaf range is specified; TStringTNamed::fNameobject identifier; Int_tTLeaf::fNdata! Number of elements in fAddress data buffer; Int_tTLeaf::fOffsetOffset in ClonesArray object (if one); Int_t**fPointer!Address of pointer to data buffer; TStringTNamed::fTitleobject title; Int_t*fValue!Pointer to data buffer. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TLeafI(); Default constructor for LeafI*-*-*-*-*-*-*-*-; *-* ============================. TLeafI(TBranch* parent, const char* name, const char* type); Create a LeafI*-*-; *-* ==============; -. ~TLeafI(); Default destructor for a LeafI*-*-*-*-*-*-; *-* ===============================. void Export(TClonesArray* list, Int_t n); -*Export element from local leaf buffer to ClonesArray; *-* ======================================================. void FillBasket(TBuffer& b); -*-*-*-*Pack leaf elements in Basket output buffer; *-* =========================================. const char * GetTypeName() const; Returns name of leaf type*-*-*-*-; *-* =========================. Double_t GetValue(Int_t i = 0) const; Returns current value of leaf; if leaf is a simple type, i must be set to 0; if leaf is an array, i is the array element number to be returned. void Import(TClonesArray* list, Int_t n); -*Import element from ClonesArray into local leaf bu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TLeafI.html:7674,Inherit,Inheritance,7674,root/html532/TLeafI.html,https://root.cern,https://root.cern/root/html532/TLeafI.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ontextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TStreamerInfoActions::TActionSequence * CreateReadMemberWiseActions(TVirtualStreamerInfo* info, TVirtualCollectionProxy& proxy); Create the bundle of the actions necessary for the streaming memberwise of the content described by 'info' into the collection described by 'proxy'. TStreamerInfoActions::TActionSequence * CreateWriteMemberWiseActions(TVirtualStreamerInfo* info, TVirtualCollectionProxy& proxy); Create the bundle of the actions necessary for the streaming memberwise of the content described by 'info' into the collection described by 'proxy'. void AddToOffset(Int_t delta); Add the (potentially negative) delta to all the configuration's offset. This is used by; TBranchElement in the case of split sub-object. TStreamerInfoActions::TActionSequence * CreateCopy(); Create a copy of this sequence. TStreamerInfoActions::TActionSequence * CreateSubSequence(const vector<Int_t>& element_ids, size_t offset); Create a sequence containing the subset of the action corresponding to the SteamerElement whose ids is contained in the vector.; 'offset' is the location of this 'class' within the object (address) that will be passed to ReadBuffer when using this sequence. void Print(Option_t* = """") const; Add the (potentially negative) delta to all the configuration's offset. This is used by; TTBranchElement in the case of split sub-object.; If opt contains 'func', also print the (mangled) name of the function that will be executed. TConfiguredAction & operator=(const TStreamerInfoActions::TActionSequence& ); WARNING: Technically this is a move assignment!. TActionSequence(); {}. TActionSequence",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TStreamerInfoActions__TActionSequence.html:7386,config,configuration,7386,root/html604/TStreamerInfoActions__TActionSequence.html,https://root.cern,https://root.cern/root/html604/TStreamerInfoActions__TActionSequence.html,2,['config'],['configuration']
Modifiability,"ontextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Bool_tTVirtualPacketizer::fAWLastFillWhether to fill the last measurement; Int_tTVirtualPacketizer::fActWrksLastActive workers at fProcTimeLast; Long_tTVirtualPacketizer::fCircNCircularity; TNtupleD*TVirtualPacketizer::fCircProgKeeps circular info for ""instantenous""; TList*TVirtualPacketizer::fConfigParamsList of configuration parameters; TStringTVirtualPacketizer::fDataSetName of the dataset being processed (for dataset-driven runs); Float_tTVirtualPacketizer::fEffSessLastNumber of effective sessions at fProcTimeLast; Float_tTVirtualPacketizer::fEvtRateLastEvt rate at fProcTimeLast; TList*TVirtualPacketizer::fFailedPacketsa list of packets that failed while processing; Float_tTVirtualPacketizer::fInitTimetime before processing; TList*TVirtualPacketizer::fInputInput list; Float_tTVirtualPacketizer::fMBsReadLastMBs read at fProcTimeLast; Double_tTVirtualPacketizer::fMaxPacketTimemaximum packet time; Double_tTVirtualPacketizer::fMinPacketTimeminimum packet time; Float_tTVirtualPacketizer::fProcTimetime since start of processing; Float_tTVirtualPacketizer::fProcTimeLastTime of the last measurement; TTimer*TVirtualPacketizer::fProgressprogress updates timer; TNtuple*TVirtualPacketizer::fProgressPerf{Active workers, evt rate, MBs read} as a function of processing time; TProofProgressStatus*TVirtualPacketizer::fProgressStatuspointer to status in the player.; Float_tTVirtualPacketizer::fReportPeriodTime between reports if nothing changes (estimated proc time / 100); TMap*TVirtualPacketizer::fSlaveStatsslave status, keyed by correspondig TSlave; TTimeTVirtualPacketizer::fStartTimetime offset; Bool_tTVirtualPacketizer::fStopTermination of Process() requested?; Float_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TPacketizer.html:8821,config,configuration,8821,root/html604/TPacketizer.html,https://root.cern,https://root.cern/root/html604/TPacketizer.html,10,['config'],['configuration']
Modifiability,"ontinue; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TSelector::EAbortTSelector::fAbortAbort status; TList*TSelector::fInputList of objects available during processing; TObject*TSelector::fObject!Current object if processing object (vs. TTree); TStringTSelector::fOptionOption given to TTree::Process; TSelectorList*TSelector::fOutput!List of objects created during processing; Long64_tTSelector::fStatusSelector status. Class Charts. Inheritance Chart:. TObject. ←; TSelector. ←; TSelectorEntries. Function documentation; TSelectorEntries(TTree* tree = 0, const char* selection = 0); Default, constructor. TSelectorEntries(const char* selection); Constructor. ~TSelectorEntries(); Destructor. void Begin(TTree* tree); The Begin() function is called at the start of the query.; When running with PROOF Begin() is only called on the client.; The tree argument is deprecated (on PROOF 0 is passed). void SlaveBegin(TTree* tree); The SlaveBegin() function is called after the Begin() function.; When running with PROOF SlaveBegin() is called on each slave server.; The tree argument is deprecated (on PROOF 0 is passed). Int_t GetEntry(Long64_t entry, Int_t getall = 0); read entry. void Init(TTree* tree); The Init() function is called when the selector needs to initialize; a new tree or chain. Typically here the branch addresses and branch; pointers of the tree will be set.; It is normaly not necessary to make changes to the generated; code,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSelectorEntries.html:7543,Inherit,Inheritance,7543,root/html602/TSelectorEntries.html,https://root.cern,https://root.cern/root/html602/TSelectorEntries.html,1,['Inherit'],['Inheritance']
Modifiability,"ontour levels. ;  ; virtual void SetContourLevel (Int_t level, Double_t value);  Set value for one contour level. ;  ; virtual void SetNpy (Int_t npy=100);  Set the number of points used to draw the function. ;  ; void SetRange (Double_t xmin, Double_t xmax) override;  Initialize the upper and lower bounds to draw the function. ;  ; void SetRange (Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax) override;  Initialize the upper and lower bounds to draw the function-. ;  ; void SetRange (Double_t xmin, Double_t ymin, Double_t zmin, Double_t xmax, Double_t ymax, Double_t zmax) override;  ; void Streamer (TBuffer &) override;  Stream an object of class TF2. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Double_t Variance2X (Double_t ax, Double_t bx, Double_t ay, Double_t by, Double_t epsilon=0.000001);  ; virtual Double_t Variance2Y (Double_t ax, Double_t bx, Double_t ay, Double_t by, Double_t epsilon=0.000001);  ;  Public Member Functions inherited from TF1;  TF1 ();  TF1 default constructor. ;  ;  TF1 (const char *name, const char *formula, Double_t xmin, Double_t xmax, Option_t *option);  Same constructor as above (for TFormula based function) but passing an option strings available options VEC - vectorize the formula expressions (not possible for lambda based expressions) NL - function is not stores in the global list of functions GL - function will be always stored in the global list of functions , independently of the global setting of TF1::DefaultAddToGlobalList. ;  ;  TF1 (const char *name, const char *formula, Double_t xmin=0, Double_t xmax=1, EAddToList addToGlobList=EAddToList::kDefault, bool vectorize=false);  TF1 constructor using a formula definition. ;  ; template<class PtrObj , typename MemFn > ;  TF1 (const char *name, const PtrObj &p, MemFn memFn, Double_t xmin, Double_t xmax, Int_t npar, const char *, const char *, EAddToList addToGlobList=EAddToList::kDefault);  ; template<class PtrObj , typename MemFn > ;  TF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF2.html:9883,inherit,inherited,9883,doc/master/classTF2.html,https://root.cern,https://root.cern/doc/master/classTF2.html,1,['inherit'],['inherited']
Modifiability,"ontp[j];; 490 }; 491 cle->Streamer(cont, buf);; 492 }; 493 // }; 494 } else {; 495 (*pstreamer)(buf, (char *)addr + ioffset, config->fCompInfo->fLength);; 496 }; 497 buf.CheckByteCount(start, count, aElement->GetFullName());; 498 ; 499 return 0;; 500 }; 501 ; 502 /** Direct copy of code from TStreamerInfo::WriteBufferAux,; 503 * potentially can be used later for non-text streaming */; 504 template<bool kIsTextT>; 505 INLINE_TEMPLATE_ARGS Int_t WriteStreamerLoop(TBuffer &buf, void *addr, const TConfiguration *config); 506 {; 507 UInt_t eoffset = 0; // extra parameter of TStreamerInfo::WriteBufferAux, 0 for all kind of objects writing; 508 UInt_t ioffset = eoffset + config->fOffset;; 509 ; 510 if (!kIsTextT && config->fCompInfo->fStreamer) {; 511 // Get any private streamer which was set for the data member.; 512 TMemberStreamer* pstreamer = config->fCompInfo->fStreamer;; 513 // -- We have a private streamer.; 514 UInt_t pos = buf.WriteVersion(config->fInfo->IsA(), kTRUE);; 515 // Loop over the entries in the clones array or the STL container.; 516 //for (int k = 0; k < narr; ++k) {; 517 // Get a pointer to the counter for the varying length array.; 518 Int_t* counter = (Int_t*) ((char *) addr /*entry pointer*/ + eoffset /*entry offset*/ + config->fCompInfo->fMethod /*counter offset*/);; 519 ; 520 // And call the private streamer, passing it the buffer, the object, and the counter.; 521 (*pstreamer)(buf, (char *) addr /*entry pointer*/ + ioffset /*object offset*/, *counter);; 522 //} for k; 523 buf.SetByteCount(pos, kTRUE);; 524 // We are done, next streamer element.; 525 return 0;; 526 }; 527 ; 528 // Get the class of the data member.; 529 TClass* cl = config->fCompInfo->fClass;; 530 // Which are we, an array of objects or an array of pointers to objects?; 531 Bool_t isPtrPtr = (strstr(config->fCompInfo->fElem->GetTypeName(), ""**"") != 0);; 532 ; 533 // By default assume the file version is the newest.; 534 Int_t fileVersion = kMaxInt;; 535 ; 536 if (!kIsTextT) {; 537",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:20034,config,config,20034,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"ontrolling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooAddPdf(); Default constructor used for persistence. RooAddPdf(const char* name, const char* title = 0); Dummy constructor. RooAddPdf(const char* name, const char* title, RooAbsPdf& pdf1, RooAbsPdf& pdf2, RooAbsReal& coef1); Constructor with two PDFs and one coefficient. RooAddPdf(const char* name, const char* title, const RooArgList& pdfList, const RooArgList& coefList, Bool_t recursiveFraction = kFALSE); Generic constructor from list of PDFs and list of coefficients.; Each pdf list element (i) is paired with coefficient list element (i).; The number of coefficients must be either equal to the number of PDFs,; in which case extended MLL fitting is enabled, or be one less. All PDFs must inherit from RooAbsPdf. All coefficients must inherit from RooAbsReal. If the recursiveFraction flag is true, the coefficients are interpreted as recursive; coefficients as explained in the class description. RooAddPdf(const char* name, const char* title, const RooArgList& pdfList); Generic constructor from list of extended PDFs. There are no coefficients as the expected; number of events from each components determine the relative weight of the PDFs. All PDFs must inherit from RooAbsPdf. RooAddPdf(const RooAddPdf& other, const char* name = 0); Copy constructor. ~RooAddPdf(); Destructor. void fixCoefNormalization(const RooArgSet& refCoefNorm); By default the interpretation of the fraction coefficients is; performed in the contextual choice of observables. This makes the; shape of the p.d.f explicitly dependent on the choice of; observables. This method instructs RooAddPdf to freeze the; interpretation of the coefficients to be done in the given set of; observables. If frozen, fractions are automatically transformed; from the refere",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAddPdf.html:43268,inherit,inherit,43268,root/html528/RooAddPdf.html,https://root.cern,https://root.cern/root/html528/RooAddPdf.html,9,['inherit'],['inherit']
Modifiability,"onvCrit was achieved within the last fNsteps: cycle has ""converged""; Int_tfPopSizenumber of individuals to start with; Double_tfSC_factor... with fSC_factor; if there were less improvements: divide by that factor; if there were exactly fSC_rate improvements, dont change anything; Int_tfSC_rate... fSC_rate improvements, than multiply the sigma of the gaussion which defines how the random numbers are generated ...; Int_tfSC_stepsregulates how strong the mutations for the coordinates are: if within fSC_steps there were more than...; Int_tfSaveBestFromCyclestore the best individuals from one cycle (these are included as ""hints"" in the last cycle of GA calculation); Int_tfSaveBestFromGenerationstore the best individuals from one generation (these are included as ""hints"" in the last cycle of GA calculation); UInt_tfSeedSeed for the random generator (0 takes random seeds); Bool_tfTrimtake care, that the number of individuals is less fPopSize (trimming is done after the fitness of the individuals is assessed). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GeneticFitter(TMVA::IFitterTarget& target, const TString& name, const vector<TMVA::Interval*>& ranges, const TString& theOption); constructor. void DeclareOptions(); declare GA options. void SetParameters(Int_t cycles, Int_t nsteps, Int_t popSize, Int_t SC_steps, Int_t SC_rate, Double_t SC_factor, Double_t convCrit); set GA configuration parameters. Double_t Run(vector<Double_t>& pars); Execute fitting. GeneticFitter(TMVA::IFitterTarget& target, const TString& name, const vector<TMVA::Interval*>& ranges, const TString& theOption); {}. Double_t NewFitness(Double_t oldF, Double_t newF); { return oldF + newF; }. » Author: Peter Speckmayer » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-06-02 16:16; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMVA__GeneticFitter.html:9770,config,configuration,9770,root/html604/TMVA__GeneticFitter.html,https://root.cern,https://root.cern/root/html604/TMVA__GeneticFitter.html,4,"['Inherit', 'config']","['Inheritance', 'Inherited', 'configuration']"
Modifiability,"onvCrit was achieved within the last fNsteps: cycle has ""converged""; Int_tfPopSizenumber of individuals to start with; Double_tfSC_factor... with fSC_factor; if there were less improvements: divide by that factor; if there were exactly fSC_rate improvements, dont change anything; Int_tfSC_rate... fSC_rate improvements, than multiply the sigma of the gaussion which defines how the random numbers are generated ...; Int_tfSC_stepsregulates how strong the mutations for the coordinates are: if within fSC_steps there were more than...; Int_tfSaveBestFromCyclestore the best individuals from one cycle (these are included as ""hints"" in the last cycle of GA calculation); Int_tfSaveBestFromGenerationstore the best individuals from one generation (these are included as ""hints"" in the last cycle of GA calculation); UInt_tfSeedSeed for the random generator (0 takes random seeds); Bool_tfTrimtake care, that the number of individuals is less fPopSize (trimming is done after the fitness of the individuals is assessed). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GeneticFitter(TMVA::IFitterTarget& target, const TString& name, const vector<TMVA::Interval*>& ranges, const TString& theOption); constructor. void DeclareOptions(); declare GA options. void SetParameters(Int_t cycles, Int_t nsteps, Int_t popSize, Int_t SC_steps, Int_t SC_rate, Double_t SC_factor, Double_t convCrit); set GA configuration parameters. Double_t Run(vector<Double_t>& pars); Execute fitting. GeneticFitter(TMVA::IFitterTarget& target, const TString& name, const vector<TMVA::Interval*>& ranges, const TString& theOption); {}. Double_t NewFitness(Double_t oldF, Double_t newF); { return oldF + newF; }. » Author: Peter Speckmayer » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-06-30 15:15; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__GeneticFitter.html:9762,config,configuration,9762,root/html602/TMVA__GeneticFitter.html,https://root.cern,https://root.cern/root/html602/TMVA__GeneticFitter.html,4,"['Inherit', 'config']","['Inheritance', 'Inherited', 'configuration']"
Modifiability,onvIntConfig;  Configuration of numeric convolution integral ;. ;  ; bool _doProf;  Switch to activate profiling option. ;  ; bool _init;  ; RooConvIntegrandBinding * _integrand;  ! Binding of Convolution Integrand function ;  ; std::unique_ptr< RooAbsIntegrator > _integrator;  ! Numeric integrator of convolution integrand ;  ; RooRealProxy _origModel;  Original resolution model. ;  ; RooRealProxy _origPdf;  Original input PDF. ;  ; RooRealProxy _origVar;  Original convolution variable. ;  ; RooArgSet _ownedClonedModelSet;  Owning set of cloned model components. ;  ; RooArgSet _ownedClonedPdfSet;  Owning set of cloned PDF components. ;  ; bool _useWindow;  Switch to activate window convolution. ;  ; Int_t _verboseThresh;  Call count threshold for verbose printing. ;  ; RooListProxy _windowParam;  Holder for optional convolution integration window scaling parameter. ;  ; double _windowScale;  Scale factor for window parameter. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNumConvolution.html:59266,inherit,inherited,59266,doc/master/classRooNumConvolution.html,https://root.cern,https://root.cern/doc/master/classRooNumConvolution.html,1,['inherit'],['inherited']
Modifiability,"onvPdf::convVar() const; virtual voidRooAbsReal::copyCache(const RooAbsArg* source, Bool_t valueOnly = kFALSE, Bool_t setValDirty = kTRUE); RooAbsReal*RooAbsReal::createIntObj(const RooArgSet& iset, const RooArgSet* nset, const RooNumIntConfig* cfg, const char* rangeName) const; virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual Double_tRooAbsAnaConvPdf::evaluate() const; virtual voidRooAbsReal::fillTreeBranch(TTree& t); voidRooAbsReal::findInnerMostIntegration(const RooArgSet& allObs, RooArgSet& innerObs, const char* rangeName) const; virtual RooAbsGenContext*RooAbsAnaConvPdf::genContext(const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE) const; RooDataSet*RooAbsPdf::generate(RooAbsGenContext& context, const RooArgSet& whatVars, const RooDataSet* prototype, Double_t nEvents, Bool_t verbose, Bool_t randProtoOrder, Bool_t resampleProto, Bool_t skipInit = kFALSE, Bool_t extended = kFALSE) const; Double_tRooAbsAnaConvPdf::getCoefNorm(Int_t coefIdx, const RooArgSet* nset, const TNamed* rangeName) const; virtual voidRooAbsArg::getObservablesHook(const RooArgSet*, RooArgSet*) const; virtual voidRooAbsArg::getParametersHook(const RooArgSet*, RooArgSet*, Bool_t) const; RooAbsProxy*RooAbsArg::getProxy(Int_t index) const; static voidRooAbsReal::globalSelectComp(Bool_t flag); voidRooAbsArg::graphVizAddConnections(set<pair<RooAbsArg*,RooAbsArg*> >&); Bool_tRooAbsArg::inhibitDirty() const; TStringRooAbsReal::integralNameSuffix(const RooArgSet& iset, const RooArgSet* nset = 0, const char* rangeName = 0, Bool_t omitEmpty = kFALSE) const; Bool_tRooAbsReal::isSelectedComp() const; virtual Bool_tRooAbsReal::isValid() const; virtual Bool_tRooAbsReal::isValidReal(Double_t value, Bool_t printError = kFALSE) const; voidRooAbsAnaConvPdf::makeCoefVarList(RooArgList&) const; voidRooAbsReal::makeProjectionSet(const RooAbsArg* plotVar, const RooArgSet* allVars, RooArgSet& projecte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooBCPEffDecay.html:34917,extend,extended,34917,root/html602/RooBCPEffDecay.html,https://root.cern,https://root.cern/root/html602/RooBCPEffDecay.html,24,['extend'],['extended']
Modifiability,"onvPdf::convVar() const; virtual voidRooAbsReal::copyCache(const RooAbsArg* source, Bool_t valueOnly = kFALSE, Bool_t setValDirty = kTRUE); RooAbsReal*RooAbsReal::createIntObj(const RooArgSet& iset, const RooArgSet* nset, const RooNumIntConfig* cfg, const char* rangeName) const; virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual Double_tRooAbsAnaConvPdf::evaluate() const; virtual voidRooAbsReal::fillTreeBranch(TTree& t); voidRooAbsReal::findInnerMostIntegration(const RooArgSet& allObs, RooArgSet& innerObs, const char* rangeName) const; virtual RooAbsGenContext*RooAbsAnaConvPdf::genContext(const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE) const; RooDataSet*RooAbsPdf::generate(RooAbsGenContext& context, const RooArgSet& whatVars, const RooDataSet* prototype, Double_t nEvents, Bool_t verbose, Bool_t randProtoOrder, Bool_t resampleProto, Bool_t skipInit = kFALSE, Bool_t extended = kFALSE) const; Double_tRooAbsAnaConvPdf::getCoefNorm(Int_t coefIdx, const RooArgSet* nset, const TNamed* rangeName) const; virtual voidRooAbsArg::getObservablesHook(const RooArgSet*, RooArgSet*) const; virtual voidRooAbsArg::getParametersHook(const RooArgSet*, RooArgSet*, Bool_t) const; RooAbsProxy*RooAbsArg::getProxy(Int_t index) const; static voidRooAbsReal::globalSelectComp(Bool_t flag); voidRooAbsArg::graphVizAddConnections(set<std::pair<RooAbsArg*,RooAbsArg*> >&); Bool_tRooAbsArg::inhibitDirty() const; TStringRooAbsReal::integralNameSuffix(const RooArgSet& iset, const RooArgSet* nset = 0, const char* rangeName = 0, Bool_t omitEmpty = kFALSE) const; Bool_tRooAbsReal::isSelectedComp() const; virtual Bool_tRooAbsReal::isValid() const; virtual Bool_tRooAbsReal::isValidReal(Double_t value, Bool_t printError = kFALSE) const; voidRooAbsAnaConvPdf::makeCoefVarList(RooArgList&) const; voidRooAbsReal::makeProjectionSet(const RooAbsArg* plotVar, const RooArgSet* allVars, RooArgSet& pro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooBCPEffDecay.html:34922,extend,extended,34922,root/html534/RooBCPEffDecay.html,https://root.cern,https://root.cern/root/html534/RooBCPEffDecay.html,12,['extend'],['extended']
Modifiability,onvPdf; RooArgList _basisList;  ! List of created basis functions ;  ; RooAICRegistry _codeReg;  ! Registry of analytical integration codes ;  ; RooObjCacheManager _coefNormMgr;  ! Coefficient normalization manager ;  ; RooListProxy _convSet;  Set of (resModel (x) basisFunc) convolution objects. ;  ; RooRealProxy _convVar;  Convolution variable. ;  ; bool _isCopy;  ; RooRealProxy _model;  Original model. ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ;,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBMixDecay.html:64985,config,configuration,64985,doc/master/classRooBMixDecay.html,https://root.cern,https://root.cern/doc/master/classRooBMixDecay.html,6,['config'],['configuration']
Modifiability,"onventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » ROOT 6 Analysis Workshop 1. Extracting an object from a TFile. File can be local on your disk or remote accessible for instance through http:; root [0] TFile* file = TFile::Open(""http://someserver/somefile.root"");. You can list the objects inside the file using .ls:; root [1] .ls; TFile** hsimple.root Demo ROOT file with histograms; TFile* hsimple.root Demo ROOT file with histograms; KEY: TH1F hpx;1 This is the px distribution; KEY: TH2F hpxpy;1 py vs px; KEY: TProfile hprof;1 Profile of pz versus px; KEY: TNtuple ntuple;1 Demo ntuple. You can access objects inside the files by their names, either by using this name as a variable on the prompt:; root [2] hpx->Draw();. In regular code you should use TFile::GetObject():; root [3] TH1* readThis = 0;; root [4] file->GetObject(""hpx"", readThis);. Now let's try this out: get the TTree called ""MyTree"" from a file located at http://root.cern.ch/root/files/tutorials/mockupx.root Note that you don't need to download it with your browser: you just specify the http:// location as an argument to TFile::Open(). Once you have the TTree object, call Print() on it to see its structure.; . ‹ 0. Setting up ROOT; up; 2. Running code in ROOT ›. Navigate through this book; 0. Setting up ROOT; 1. Extracting an object from a TFile; 2. Running code in ROOT; 4. Histogramming; 3. Examining a TTree's data; 5. Fitting; 6. Multivariate Analysis; 7. Using the TTreeReader; 8. Efficiency Calculation; 9. Fitting By Coding; 10. Go Parallel!; TutorialSelector.C; 11. Done!. Sitemap. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/1-extracting-object-tfile.html:2502,variab,variable,2502,d/1-extracting-object-tfile.html,https://root.cern,https://root.cern/d/1-extracting-object-tfile.html,1,['variab'],['variable']
Modifiability,"onvertActionstatic void ConvertAction(From *items, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *)Definition TStreamerInfoActions.cxx:2409; TStreamerInfoActions::GenericLooperDefinition TStreamerInfoActions.cxx:2320; TStreamerInfoActions::GenericLooper::ReadBasicTypestatic Int_t ReadBasicType(TBuffer &buf, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2323; TStreamerInfoActions::GenericLooper::ReadCollectionFloat16static Int_t ReadCollectionFloat16(TBuffer &buf, void *addr, const TConfiguration *conf)Definition TStreamerInfoActions.cxx:2602; TStreamerInfoActions::GenericLooper::ReadBasestatic Int_t ReadBase(TBuffer &buf, void *start, const void *end, const TLoopConfiguration *loopconfig, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2522; TStreamerInfoActions::GenericLooper::WriteBasicTypestatic Int_t WriteBasicType(TBuffer &buf, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2344; TStreamerInfoActions::GenericLooper::GenericReadstatic Int_t GenericRead(TBuffer &buf, void *, const void *, const TLoopConfiguration *loopconf, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2530; TStreamerInfoActions::GenericLooper::SimpleReadFloat16static void SimpleReadFloat16(TBuffer &buf, void *addr)Definition TStreamerInfoActions.cxx:2550; TStreamerInfoActions::GenericLooper::ReadNumericalCollectionstatic Int_t ReadNumericalCollection(TBuffer &buf, void *addr, const TConfiguration *conf)Definition TStreamerInfoActions.cxx:2564; TStreamerInfoActions::GenericLooper::GenericWritestatic Int_t GenericWrite(TBuffer &buf, void *, const void *, const TLoopConfiguration *loopconf, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2537; TStreamerInfoActions::GenericLooper::ReadCollectionBasicTypestatic Int_t ReadCollectionBasicType(T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:268222,config,config,268222,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"onverter * Instance (TGeoManager *geom=nullptr);  Static function returning a pointer to the current geometry converter. ;  ; static void SetConverter (const TVirtualGeoConverter *conv);  Static function to set an alternative converter. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Attributes; TGeoManager * fGeom;  . Static Protected Attributes; static TVirtualGeoConverter * fgGeoConverter = nullptr;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TVirtualGeoConverter.h>. Inheritance diagram for TVirtualGeoConverter:. This browser is not able to show SVG: try Firefox, Chrome,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualGeoConverter.html:9608,inherit,inherited,9608,doc/master/classTVirtualGeoConverter.html,https://root.cern,https://root.cern/doc/master/classTVirtualGeoConverter.html,1,['inherit'],['inherited']
Modifiability,"onverter >::Actionstatic Int_t Action(TBuffer &buf, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2484; TStreamerInfoActions::GenericLooper::ConvertBasicTypeDefinition TStreamerInfoActions.cxx:2428; TStreamerInfoActions::GenericLooper::ConvertBasicType::Actionstatic Int_t Action(TBuffer &buf, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2429; TStreamerInfoActions::GenericLooper::ConvertCollectionBasicTypeDefinition TStreamerInfoActions.cxx:2623; TStreamerInfoActions::GenericLooper::ConvertCollectionBasicType::Actionstatic Int_t Action(TBuffer &buf, void *addr, const TConfiguration *conf)Definition TStreamerInfoActions.cxx:2624; TStreamerInfoActions::GenericLooper::GenericDefinition TStreamerInfoActions.cxx:2385; TStreamerInfoActions::GenericLooper::Generic::ConvertActionstatic void ConvertAction(From *items, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2386; TStreamerInfoActions::GenericLooper::NumericDefinition TStreamerInfoActions.cxx:2408; TStreamerInfoActions::GenericLooper::Numeric::ConvertActionstatic void ConvertAction(From *items, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *)Definition TStreamerInfoActions.cxx:2409; TStreamerInfoActions::GenericLooperDefinition TStreamerInfoActions.cxx:2320; TStreamerInfoActions::GenericLooper::ReadBasicTypestatic Int_t ReadBasicType(TBuffer &buf, void *start, const void *end, const TLoopConfiguration *loopconf, const TConfiguration *config)Definition TStreamerInfoActions.cxx:2323; TStreamerInfoActions::GenericLooper::ReadCollectionFloat16static Int_t ReadCollectionFloat16(TBuffer &buf, void *addr, const TConfiguration *conf)Definition TStreamerInfoActions.cxx:2602; TStreamerInfoActions::GenericLooper::ReadBasestatic Int_t ReadBas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:266964,config,config,266964,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"onvirtual Int_t GetDimension() constDefinition TH1.h:283; TH1::Streamervoid Streamer(TBuffer &) overrideStream a class object.Definition TH1.cxx:6933; TH1::AddDirectorystatic void AddDirectory(Bool_t add=kTRUE)Sets the flag controlling the automatic add of histograms in memory.Definition TH1.cxx:1294; TH1::kIsAverage@ kIsAverageBin contents are average (used by Add)Definition TH1.h:171; TH1::kUserContour@ kUserContourUser specified contour levels.Definition TH1.h:166; TH1::kNoStats@ kNoStatsDon't draw stats box.Definition TH1.h:165; TH1::kAutoBinPTwo@ kAutoBinPTwodifferent than 1.Definition TH1.h:174; TH1::kIsNotW@ kIsNotWHistogram is forced to be not weighted even when the histogram is filled with weighted.Definition TH1.h:172; TH1::kIsHighlight@ kIsHighlightbit set if histo is highlightDefinition TH1.h:175; TH1::SetContourLevelvirtual void SetContourLevel(Int_t level, Double_t value)Set value for one contour level.Definition TH1.cxx:8522; TH1::CanExtendAllAxesvirtual Bool_t CanExtendAllAxes() constReturns true if all axes are extendable.Definition TH1.cxx:6636; TH1::fDirectoryTDirectory * fDirectory! Pointer to directory holding this histogramDefinition TH1.h:109; TH1::Resetvirtual void Reset(Option_t *option="""")Reset this histogram: contents, errors, etc.Definition TH1.cxx:7103; TH1::SetNameTitlevoid SetNameTitle(const char *name, const char *title) overrideChange the name and title of this histogram.Definition TH1.cxx:8974; TH1::GetXaxisTAxis * GetXaxis()Definition TH1.h:324; TH1::GetBinXYZvirtual void GetBinXYZ(Int_t binglobal, Int_t &binx, Int_t &biny, Int_t &binz) constReturn binx, biny, binz corresponding to the global bin number globalbin see TH1::GetBin function abo...Definition TH1.cxx:4974; TH1::GetCumulativeTH1 * GetCumulative(Bool_t forward=kTRUE, const char *suffix=""_cumulative"") constReturn a pointer to a histogram containing the cumulative content.Definition TH1.cxx:2616; TH1::AutoP2GetPower2static Double_t AutoP2GetPower2(Double_t x, Bool_t next=kT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:440542,extend,extendable,440542,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['extend'],['extendable']
Modifiability,"onymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Option_t*fOptiondraw option; TProof*fProofhandle to PROOF session; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. private:. Bool_tfAlldraw all or selected objects; TStringfNameIdentfier for this object; THashList*fNamesselected objects. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDrawFeedback(TProof* proof = 0, TSeqCollection* names = 0); Constructor. ~TDrawFeedback(); Destructor. void Feedback(TList* objs); Display feedback. TDrawFeedback(TProof* proof = 0, TSeqCollection* names = 0). const char * GetName() const; { return fName.Data(); }. ULong_t Hash() const; { return fName.Hash(); }. void SetOption(Option_t* option); { fOption = option; }. » Author: Maarten Ballintijn 28/10/2003 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-06-02 15:41; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TDrawFeedback.html:9721,Inherit,Inheritance,9721,root/html604/TDrawFeedback.html,https://root.cern,https://root.cern/root/html604/TDrawFeedback.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Option_t*fOptiondraw option; TProof*fProofhandle to PROOF session; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. private:. Bool_tfAlldraw all or selected objects; TStringfNameIdentfier for this object; THashList*fNamesselected objects. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDrawFeedback(TProof* proof = 0, TSeqCollection* names = 0); Constructor. ~TDrawFeedback(); Destructor. void Feedback(TList* objs); Display feedback. TDrawFeedback(TProof* proof = 0, TSeqCollection* names = 0). const char * GetName() const; { return fName.Data(); }. ULong_t Hash() const; { return fName.Hash(); }. void SetOption(Option_t* option); { fOption = option; }. » Author: Maarten Ballintijn 28/10/2003 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id$ » Last generated: 2015-06-30 14:42; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TDrawFeedback.html:9721,Inherit,Inheritance,9721,root/html602/TDrawFeedback.html,https://root.cern,https://root.cern/root/html602/TDrawFeedback.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. TGedEditor*fGedEditorParent editor; TGeoTransientPanel*fMaterialPanelPanel for editing materials; TGeoTransientPanel*fMatrixPanelPanel for editing matrices; TGeoTransientPanel*fMediumPanelPanel for editing media; TVirtualPad*fPadPad to which this applies; TGeoTransientPanel*fShapePanelPanel for editing shapes; TGTab*fTabParent tab; TGeoVolume*fVolumeEdited volume; TGCompositeFrame*fVolumeTabVolume tab; static TMapfgEditorToMgrMapMap from ged-editor to associated tab-manager. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoTabManager(TGedEditor* ged); Ctor. ~TGeoTabManager(); Dtor. void Cleanup(TGCompositeFrame* frame); Static method to cleanup hirarchically all daughters of a composite frame.; Does not remove the frame itself. void GetShapeEditor(TGeoShape* shape); Get editor for a shape. void GetVolumeEditor(TGeoVolume* vol); Get editor for a volume. void GetMatrixEditor(TGeoMatrix* matrix); Get editor for a matrix. void GetMediumEditor(TGeoMedium* medium); Get editor for a medium. void GetMaterialEditor(TGeoMaterial* material); Get editor for a material. void GetEditors(TClass* cl); Get editor for a class.; Look in fVolumeTab for any object deriving from TGedFrame,. TGeoTabManager * GetMakeTabManager(TGedEditor* ged); Static method to return the tab manager currently appended to the pad or create one; if not existing. Int_t GetTabIndex() const; Get index for a given tab element. void MoveFrame(TGCompositeFrame* fr, TGCompositeFrame* p); Move frame",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoTabManager.html:7318,Inherit,Inheritance,7318,root/html602/TGeoTabManager.html,https://root.cern,https://root.cern/root/html602/TGeoTabManager.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TBrowser*fBrowserselected browser (if exist); TObject*fCalledObjectobject to call; TContextMenuImp*fContextMenuImp!Context menu system specific implementation; TStringTNamed::fNameobject identifier; TVirtualPad*fSelectedCanvasselected canvas (if exist); TClassMenuItem*fSelectedMenuItemselected class menu item; TFunction*fSelectedMethodselected method; TObject*fSelectedObjectselected object; TVirtualPad*fSelectedPadselected pad (if exist); TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TContextMenu(const char* name, const char* title = ""Context sensitive popup menu""); Create a context menu. ~TContextMenu(); Destroy a context menu. void Action(TObject* object, TMethod* method); Action to be performed when this menu item is selected.; If the selected method requires arguments we popup an; automatically generated dialog, otherwise the method is; directly executed. void Action(TClassMenuItem* classmenuitem); Action to be performed when this menu item is selected.; If the selected method requires arguments we popup an; automatically generated dialog, otherwise the method is; directly executed. void Action(TObject* object, TToggle* toggle); Action to be performed when this toggle menu item is selected. const char * CreateArgumentTitle(TMethodArg* argument); Create string describing argument (for use in dialog box). const char * CreateDialogTitle(TObject* object, TFunction* method); Create title for dialog box retrieving ar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TContextMenu.html:8341,Inherit,Inheritance,8341,root/html602/TContextMenu.html,https://root.cern,https://root.cern/root/html602/TContextMenu.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TVectorDfCloIndex; TVectorDfCupIndex; TVectorDfDdtemporary storage vectors; TVectorDfDq; TQpProbBase*fFactory; Int_tfMclo; Int_tfMcup; Int_tfMy; Int_tfMz; TVectorDfNomegaInvstores a critical diagonal matrix as a vector; Int_tfNxdimensions of the vectors in the general QP formulation; Int_tfNxlo; Int_tfNxupdimensions of the upper and lower bound vectors; TVectorDfRhsright-hand side of the system; TVectorDfXloIndex; TVectorDfXupIndexindex matrices for the upper and lower bounds on x and Cx. Class Charts. Inheritance Chart:. TObject. ←; TQpLinSolverBase. ←. TQpLinSolverDens. TQpLinSolverSparse. Function documentation; TQpLinSolverBase(); Default constructor. TQpLinSolverBase(TQpProbBase* factory, TQpDataBase* data); Constructor. TQpLinSolverBase(const TQpLinSolverBase& another); Copy constructor. void Factor(TQpDataBase* prob, TQpVar* vars); Sets up the matrix for the main linear system in ""augmented system"" form. The; actual factorization is performed by a routine specific to either the sparse; or dense case. void ComputeDiagonals(TVectorD& dd, TVectorD& omega, TVectorD& t, TVectorD& lambda, TVectorD& u, TVectorD& pi, TVectorD& v, TVectorD& gamma, TVectorD& w, TVectorD& phi); Computes the diagonal matrices in the augmented system from the current set of variables. void Solve(TQpDataBase* prob, TQpVar* vars, TQpResidual* resids, TQpVar* step); Solves the system for a given set of residuals. Assembles the right-hand side appropriate; to the matrix factored in factor, solves the system using the f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TQpLinSolverBase.html:7156,Inherit,Inheritance,7156,root/html602/TQpLinSolverBase.html,https://root.cern,https://root.cern/root/html602/TQpLinSolverBase.html,2,['Inherit'],['Inheritance']
Modifiability,"onymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_tTGeoPatternFinder::fDivIndexindex of first div. node; Double_tTGeoPatternFinder::fEndending point; Int_tTGeoPatternFinder::fNdivisionsnumber of divisions; Double_tTGeoPatternFinder::fStartstarting point on divided axis; Double_tTGeoPatternFinder::fStepdivision step length; vector<TGeoPatternFinder::ThreadData_t*>TGeoPatternFinder::fThreadData! Vector of thread private transient data; Int_tTGeoPatternFinder::fThreadSize! Size of the thread vector; TGeoVolume*TGeoPatternFinder::fVolumevolume to which applies; static TGeoPatternFinder::EGeoPatternFlagsTGeoPatternFinder::kPatternReflected; static TGeoPatternFinder::EGeoPatternFlagsTGeoPatternFinder::kPatternSpacedOut. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoPatternCylR(); Default constructor. TGeoPatternCylR(TGeoVolume* vol, Int_t ndivisions); constructor. TGeoPatternCylR(TGeoVolume* vol, Int_t ndivisions, Double_t step); constructor. TGeoPatternCylR(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); constructor. TGeoPatternCylR(const TGeoPatternCylR& pf); copy constructor. TGeoPatternCylR& operator=(const TGeoPatternCylR& ); assignment operator. ~TGeoPatternCylR(); Destructor. Bool_t IsOnBoundary(const Double_t* point) const; Checks if the current point is on division boundary. void cd(Int_t idiv); Update current division index and global matrix to point to a given slice. TGeoNode * FindNode(Double_t* point, const Double_t* dir = 0); find the node containing the query point. TGeoPatternFinder * MakeCopy(Bool_t reflect = kFALSE); Make a copy of this finder. Reflect by Z if required. void SavePrimitive(ostream& out, Option_t* option = """"); Save a primitive as a C++ state",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoPatternCylR.html:8933,Inherit,Inheritance,8933,root/html602/TGeoPatternCylR.html,https://root.cern,https://root.cern/root/html602/TGeoPatternCylR.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_tTGeoPatternFinder::fDivIndexindex of first div. node; Double_tTGeoPatternFinder::fEndending point; Int_tTGeoPatternFinder::fNdivisionsnumber of divisions; Double_tTGeoPatternFinder::fStartstarting point on divided axis; Double_tTGeoPatternFinder::fStepdivision step length; vector<TGeoPatternFinder::ThreadData_t*>TGeoPatternFinder::fThreadData! Vector of thread private transient data; Int_tTGeoPatternFinder::fThreadSize! Size of the thread vector; TGeoVolume*TGeoPatternFinder::fVolumevolume to which applies; static TGeoPatternFinder::EGeoPatternFlagsTGeoPatternFinder::kPatternReflected; static TGeoPatternFinder::EGeoPatternFlagsTGeoPatternFinder::kPatternSpacedOut. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoPatternParaX(); Default constructor. TGeoPatternParaX(TGeoVolume* vol, Int_t ndivisions); constructor. TGeoPatternParaX(TGeoVolume* vol, Int_t ndivisions, Double_t step); constructor. TGeoPatternParaX(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); constructor. TGeoPatternParaX(const TGeoPatternParaX& pf); copy constructor. TGeoPatternParaX& operator=(const TGeoPatternParaX& ); assignment operator. ~TGeoPatternParaX(); Destructor. void cd(Int_t idiv); Update current division index and global matrix to point to a given slice. Bool_t IsOnBoundary(const Double_t* point) const; Checks if the current point is on division boundary. TGeoNode * FindNode(Double_t* point, const Double_t* dir = 0); get the node division containing the query point. TGeoPatternFinder * MakeCopy(Bool_t reflect = kFALSE); Make a copy of this finder. Reflect by Z if required. void SavePrimitive(ostream& out, Option_t* option = """"); Save a primiti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoPatternParaX.html:8945,Inherit,Inheritance,8945,root/html602/TGeoPatternParaX.html,https://root.cern,https://root.cern/root/html602/TGeoPatternParaX.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_tTGeoPatternFinder::fDivIndexindex of first div. node; Double_tTGeoPatternFinder::fEndending point; Int_tTGeoPatternFinder::fNdivisionsnumber of divisions; Double_tTGeoPatternFinder::fStartstarting point on divided axis; Double_tTGeoPatternFinder::fStepdivision step length; vector<TGeoPatternFinder::ThreadData_t*>TGeoPatternFinder::fThreadData! Vector of thread private transient data; Int_tTGeoPatternFinder::fThreadSize! Size of the thread vector; TGeoVolume*TGeoPatternFinder::fVolumevolume to which applies; static TGeoPatternFinder::EGeoPatternFlagsTGeoPatternFinder::kPatternReflected; static TGeoPatternFinder::EGeoPatternFlagsTGeoPatternFinder::kPatternSpacedOut. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoPatternSphR(); Default constructor. TGeoPatternSphR(TGeoVolume* vol, Int_t ndivisions); constructor; compute step, start, end. TGeoPatternSphR(TGeoVolume* vol, Int_t ndivisions, Double_t step); constructor. TGeoPatternSphR(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); constructor. TGeoPatternSphR(const TGeoPatternSphR& pf); copy constructor. TGeoPatternSphR& operator=(const TGeoPatternSphR& ); assignment operator. ~TGeoPatternSphR(); Destructor. void cd(Int_t idiv); Update current division index and global matrix to point to a given slice. TGeoNode * FindNode(Double_t* point, const Double_t* dir = 0); find the node containing the query point. TGeoPatternFinder * MakeCopy(Bool_t reflect = kFALSE); Make a copy of this finder. Reflect by Z if required. void SavePrimitive(ostream& out, Option_t* option = """"); Save a primitive as a C++ statement(s) on output stream ""out"". TGeoMatrix* CreateMatrix() const; Return new ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoPatternSphR.html:8946,Inherit,Inheritance,8946,root/html602/TGeoPatternSphR.html,https://root.cern,https://root.cern/root/html602/TGeoPatternSphR.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_tTGeoPatternFinder::fDivIndexindex of first div. node; Double_tTGeoPatternFinder::fEndending point; Int_tTGeoPatternFinder::fNdivisionsnumber of divisions; Double_tTGeoPatternFinder::fStartstarting point on divided axis; Double_tTGeoPatternFinder::fStepdivision step length; vector<TGeoPatternFinder::ThreadData_t*>TGeoPatternFinder::fThreadData! Vector of thread private transient data; Int_tTGeoPatternFinder::fThreadSize! Size of the thread vector; TGeoVolume*TGeoPatternFinder::fVolumevolume to which applies; static TGeoPatternFinder::EGeoPatternFlagsTGeoPatternFinder::kPatternReflected; static TGeoPatternFinder::EGeoPatternFlagsTGeoPatternFinder::kPatternSpacedOut. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoPatternSphTheta(); Default constructor. TGeoPatternSphTheta(TGeoVolume* vol, Int_t ndivisions); constructor; compute step, start, end. TGeoPatternSphTheta(TGeoVolume* vol, Int_t ndivisions, Double_t step); constructor. TGeoPatternSphTheta(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); constructor. TGeoPatternSphTheta(const TGeoPatternSphTheta& pf); copy constructor. TGeoPatternSphTheta& operator=(const TGeoPatternSphTheta& ); assignment operator. ~TGeoPatternSphTheta(); Destructor. void cd(Int_t idiv); Update current division index and global matrix to point to a given slice. TGeoNode * FindNode(Double_t* point, const Double_t* dir = 0); find the node containing the query point. TGeoPatternFinder * MakeCopy(Bool_t reflect = kFALSE); Make a copy of this finder. Reflect by Z if required. void SavePrimitive(ostream& out, Option_t* option = """"); Save a primitive as a C++ statement(s) on output stream ""out"". TGeoMatri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoPatternSphTheta.html:8994,Inherit,Inheritance,8994,root/html602/TGeoPatternSphTheta.html,https://root.cern,https://root.cern/root/html602/TGeoPatternSphTheta.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_tTGeoPatternFinder::fDivIndexindex of first div. node; Double_tTGeoPatternFinder::fEndending point; Int_tTGeoPatternFinder::fNdivisionsnumber of divisions; Double_tTGeoPatternFinder::fStartstarting point on divided axis; Double_tTGeoPatternFinder::fStepdivision step length; vector<TGeoPatternFinder::ThreadData_t*>TGeoPatternFinder::fThreadData! Vector of thread private transient data; Int_tTGeoPatternFinder::fThreadSize! Size of the thread vector; TGeoVolume*TGeoPatternFinder::fVolumevolume to which applies; static TGeoPatternFinder::EGeoPatternFlagsTGeoPatternFinder::kPatternReflected; static TGeoPatternFinder::EGeoPatternFlagsTGeoPatternFinder::kPatternSpacedOut. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoPatternX(); Default constructor. TGeoPatternX(TGeoVolume* vol, Int_t ndivisions); constructor. TGeoPatternX(TGeoVolume* vol, Int_t ndivisions, Double_t step); constructor. TGeoPatternX(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); constructor. TGeoPatternX(const TGeoPatternX& pf); copy constructor. TGeoPatternX& operator=(const TGeoPatternX& ); assignment operator. ~TGeoPatternX(); Destructor. void cd(Int_t idiv); Update current division index and global matrix to point to a given slice. TGeoMatrix* CreateMatrix() const; Return new matrix of type used by this finder. void UpdateMatrix(Int_t idiv, TGeoHMatrix& matrix) const; Fills external matrix with the local one corresponding to the given division; index. Bool_t IsOnBoundary(const Double_t* point) const; Checks if the current point is on division boundary. TGeoNode * FindNode(Double_t* point, const Double_t* dir = 0); Find the cell corresponding to point and n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoPatternX.html:8979,Inherit,Inheritance,8979,root/html602/TGeoPatternX.html,https://root.cern,https://root.cern/root/html602/TGeoPatternX.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_tTGeoPatternFinder::fDivIndexindex of first div. node; Double_tTGeoPatternFinder::fEndending point; Int_tTGeoPatternFinder::fNdivisionsnumber of divisions; Double_tTGeoPatternFinder::fStartstarting point on divided axis; Double_tTGeoPatternFinder::fStepdivision step length; vector<TGeoPatternFinder::ThreadData_t*>TGeoPatternFinder::fThreadData! Vector of thread private transient data; Int_tTGeoPatternFinder::fThreadSize! Size of the thread vector; TGeoVolume*TGeoPatternFinder::fVolumevolume to which applies; static TGeoPatternFinder::EGeoPatternFlagsTGeoPatternFinder::kPatternReflected; static TGeoPatternFinder::EGeoPatternFlagsTGeoPatternFinder::kPatternSpacedOut. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoPatternY(); Default constructor. TGeoPatternY(TGeoVolume* vol, Int_t ndivisions); constructor. TGeoPatternY(TGeoVolume* vol, Int_t ndivisions, Double_t step); constructor. TGeoPatternY(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); constructor. TGeoPatternY(const TGeoPatternY& pf); copy constructor. TGeoPatternY& operator=(const TGeoPatternY& ); assignment operator. ~TGeoPatternY(); Destructor. void cd(Int_t idiv); Update current division index and global matrix to point to a given slice. TGeoMatrix* CreateMatrix() const; Return new matrix of type used by this finder. void UpdateMatrix(Int_t idiv, TGeoHMatrix& matrix) const; Fills external matrix with the local one corresponding to the given division; index. Bool_t IsOnBoundary(const Double_t* point) const; Checks if the current point is on division boundary. TGeoNode * FindNode(Double_t* point, const Double_t* dir = 0); Find the cell corresponding to point and n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoPatternY.html:8979,Inherit,Inheritance,8979,root/html602/TGeoPatternY.html,https://root.cern,https://root.cern/root/html602/TGeoPatternY.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Int_tTGeoPatternFinder::fDivIndexindex of first div. node; Double_tTGeoPatternFinder::fEndending point; Int_tTGeoPatternFinder::fNdivisionsnumber of divisions; Double_tTGeoPatternFinder::fStartstarting point on divided axis; Double_tTGeoPatternFinder::fStepdivision step length; vector<TGeoPatternFinder::ThreadData_t*>TGeoPatternFinder::fThreadData! Vector of thread private transient data; Int_tTGeoPatternFinder::fThreadSize! Size of the thread vector; TGeoVolume*TGeoPatternFinder::fVolumevolume to which applies; static TGeoPatternFinder::EGeoPatternFlagsTGeoPatternFinder::kPatternReflected; static TGeoPatternFinder::EGeoPatternFlagsTGeoPatternFinder::kPatternSpacedOut. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoPatternZ(); Default constructor. TGeoPatternZ(TGeoVolume* vol, Int_t ndivisions); constructor. TGeoPatternZ(TGeoVolume* vol, Int_t ndivisions, Double_t step); constructor. TGeoPatternZ(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); constructor. TGeoPatternZ(const TGeoPatternZ& pf); copy constructor. TGeoPatternZ& operator=(const TGeoPatternZ& ); assignment operator. ~TGeoPatternZ(); Destructor. void cd(Int_t idiv); Update current division index and global matrix to point to a given slice. TGeoMatrix* CreateMatrix() const; Return new matrix of type used by this finder. void UpdateMatrix(Int_t idiv, TGeoHMatrix& matrix) const; Fills external matrix with the local one corresponding to the given division; index. Bool_t IsOnBoundary(const Double_t* point) const; Checks if the current point is on division boundary. TGeoNode * FindNode(Double_t* point, const Double_t* dir = 0); Find the cell corresponding to point and n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoPatternZ.html:8979,Inherit,Inheritance,8979,root/html602/TGeoPatternZ.html,https://root.cern,https://root.cern/root/html602/TGeoPatternZ.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onymous)TObject::kZombie. protected:. Double_tfAxis[3]Direction unit vector of the helix axis; Int_tTPolyLine3D::fLastPointThe index of the last filled point; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; Int_tTPolyLine3D::fNNumber of points; TStringTPolyLine3D::fOptionoptions; Float_t*TPolyLine3D::fP[3*fN] Array of 3-D coordinates (x,y,z); Double_tfPhi0Initial phase, so vx0 = fVt*cos(fPhi0); Double_tfRange[2]Range of helix parameter t; TRotMatrix*fRotMatRotation matrix: axis // z --> axis // fAxis; Double_tfVtTransverse velocity (constant of motion); Double_tfVzZ velocity (constant of motion); Double_tfWAngular frequency; Double_tfX0Pivot's x position (see parametrization in class doc); Double_tfY0Pivot's y position (see parametrization in class doc); Double_tfZ0Pivot's z position (see parametrization in class doc); static Int_tfgMinNSegminimal number of segments in polyline. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetHelix(Double_t* xyz, Double_t* v, Double_t w, Double_t* range = 0, EHelixRangeType type = kUnchanged, Double_t* axis = 0); Set all helix parameters. THelix(); Helix default constructor. THelix(Double_t x, Double_t y, Double_t z, Double_t vx, Double_t vy, Double_t vz, Double_t w); Helix normal constructor. THelix(Double_t* xyz, Double_t* v, Double_t w, Double_t* range = 0, EHelixRangeType rtype = kHelixZ, Double_t* axis = 0); Helix normal constructor. THelix(const THelix& helix); Helix copy constructor. THelix& operator=(const THelix& ); assignement operator. ~THelix(); Helix destructor. void Copy(TObject& helix) const; Copy this helix to obj. void Draw(Option_t* option = """"); Draw this helix with its current attributes. void Print(Option_t* option = """") const; Dump this helix with its attributes. void SavePrimitive(ostream& out, Option_t* option = """"); Save primitive as a C++ statement(s) on output stream out. void SetAxis(Doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THelix.html:10140,Inherit,Inheritance,10140,root/html602/THelix.html,https://root.cern,https://root.cern/root/html602/THelix.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"onymous)TObject::kZombie. protected:. char*TBuffer::fBufCurCurrent position in buffer; char*TBuffer::fBufMaxEnd of buffer; Int_tTBuffer::fBufSizeSize of buffer; char*TBuffer::fBufferBuffer used to store objects; TBuffer::CacheList_tTBuffer::fCacheStackStack of pointers to the cache where to temporarily store the value of 'missing' data members; TExMap*fClassMapMap containing object,class pairs for reading; Int_tfDisplacementValue to be added to the map offsets; TStreamerInfo*fInfoPointer to TStreamerInfo object writing/reading the buffer; TBufferFile::InfoList_tfInfoStackStack of pointers to the TStreamerInfos; TExMap*fMapMap containing object,offset pairs for reading/writing; Int_tfMapCountNumber of objects or classes in map; Int_tfMapSizeDefault size of map; Bool_tTBuffer::fModeRead or write mode; TObject*TBuffer::fParentPointer to parent object owning this buffer; UShort_tfPidOffsetOffset to be added to the pid index in this key/buffer.; ReAllocCharFun_tTBuffer::fReAllocFunc! Realloc function to be used when extending the buffer.; Int_tTBuffer::fVersionBuffer format version; static Int_tfgMapSizeDefault map size for all TBuffer objects. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TBufferFile(TBuffer::EMode mode); Create an I/O buffer object. Mode should be either TBuffer::kRead or; TBuffer::kWrite. By default the I/O buffer has a size of; TBuffer::kInitialSize (1024) bytes. TBufferFile(TBuffer::EMode mode, Int_t bufsiz); Create an I/O buffer object. Mode should be either TBuffer::kRead or; TBuffer::kWrite. TBufferFile(TBuffer::EMode mode, Int_t bufsiz, void* buf, Bool_t adopt = kTRUE, ReAllocCharFun_t reallocfunc = 0); Create an I/O buffer object. Mode should be either TBuffer::kRead or; TBuffer::kWrite. By default the I/O buffer has a size of; TBuffer::kInitialSize (1024) bytes. An external buffer can be passed; to TBuffer via the buf argument. By default this buffer will be adopted; unless adopt is false.; If the ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TBufferFile.html:19140,extend,extending,19140,root/html602/TBufferFile.html,https://root.cern,https://root.cern/root/html602/TBufferFile.html,4,['extend'],['extending']
Modifiability,"on GetSize () const;  ; virtual Int_t GetTextJustify () const;  ; virtual UInt_t GetWidth () const;  ; TClass * IsA () const override;  ; virtual void Select ();  Select this TGTableCell. ;  ; virtual void SelectColumn ();  Select the column that this TGTableCell belongs to. ;  ; virtual void SelectRow ();  Select the row that this TGTableCell belongs to. ;  ; virtual void SetFont (const char *fontName);  Changes text font specified by name. ;  ; virtual void SetFont (FontStruct_t font);  Changes text font. ;  ; virtual void SetImage (TGPicture *image);  Set the image that this cell contains to image. ;  ; virtual void SetLabel (const char *label);  Set the label of this cell to label. ;  ; virtual void SetTextJustify (Int_t tmode);  Set the text justify mode of the cell to mode. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; virtual void ChangeOptions (UInt_t options);  Change frame options. Options is an OR of the EFrameTypes. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const overrid",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTableCell.html:2481,inherit,inherited,2481,doc/master/classTGTableCell.html,https://root.cern,https://root.cern/doc/master/classTGTableCell.html,1,['inherit'],['inherited']
Modifiability,"ooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; TMatrixD_mref; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; Int_t_npoints; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Roo2DMomentMorphFunction::Setting_setting; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; int_squareIdx[4]; TMatrixD_squareVec; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; Bool_t_verbose; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxym1; RooRealProxym2. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Roo2DMomentMorphFunction(const char* name, const char* title, RooAbsReal& _m1, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/Roo2DMomentMorphFunction.html:36493,config,configuration,36493,root/html534/Roo2DMomentMorphFunction.html,https://root.cern,https://root.cern/root/html534/Roo2DMomentMorphFunction.html,2,['config'],['configuration']
Modifiability,"ooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,double,double,bool>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& ); Custo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction3Binding_double_double_double_bool_.html:35689,config,configuration,35689,root/html534/RooCFunction3Binding_double_double_double_bool_.html,https://root.cern,https://root.cern/root/html534/RooCFunction3Binding_double_double_double_bool_.html,2,['config'],['configuration']
Modifiability,"ooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,double,double,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooCFunction3PdfBinding_double_double_double_double_.html:39775,config,configuration,39775,root/html530/RooCFunction3PdfBinding_double_double_double_double_.html,https://root.cern,https://root.cern/root/html530/RooCFunction3PdfBinding_double_double_double_double_.html,1,['config'],['configuration']
Modifiability,"ooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooObjCacheManagerRooSimultaneous::_partIntMgrComponent normalization manager; TListRooSimultaneous::_pdfProxyListList of PDF proxies (named after applicable category state); Int_tRooAbsReal::_plotBinsNumber of plot bins; const TNamed*RooSimultaneous::_plotCoefNormRange; RooSetProxyRooSimultaneous::_plotCoefNormSet; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__HistFactory__HistFactorySimultaneous.html:46196,config,configuration,46196,root/html602/RooStats__HistFactory__HistFactorySimultaneous.html,https://root.cern,https://root.cern/root/html602/RooStats__HistFactory__HistFactorySimultaneous.html,8,['config'],['configuration']
Modifiability,"ooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooTFnBinding(const char* name, const char* title, TF1* func, const RooArgList& list). RooTFnBinding(const char* name, const char* title, TF1* func, const RooArgList& list, const RooArgList& plist). RooTFnBinding(const RooTFnBinding& other, const char* name = 0). Double_t evaluate() const. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. RooTFnBinding(); {}. TObject* clone(const char* newname) const; { return new RooTFnBinding(*this,newname); }. virtual ~RooTFnBinding(); { }. » Last changed: Tue Jun 2 13:14:40 2015 » Last generated: 2015-06-02 13:14; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooTFnBinding.html:37055,Inherit,Inheritance,37055,root/html602/RooTFnBinding.html,https://root.cern,https://root.cern/root/html602/RooTFnBinding.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooTFnBinding(const char* name, const char* title, TF1* func, const RooArgList& list). RooTFnBinding(const char* name, const char* title, TF1* func, const RooArgList& list, const RooArgList& plist). RooTFnBinding(const RooTFnBinding& other, const char* name = 0). Double_t evaluate() const. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. RooTFnBinding(); {}. TObject* clone(const char* newname) const; { return new RooTFnBinding(*this,newname); }. virtual ~RooTFnBinding(); { }. » Last changed: Tue Jun 2 15:36:06 2015 » Last generated: 2015-06-02 15:36; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooTFnBinding.html:37055,Inherit,Inheritance,37055,root/html604/RooTFnBinding.html,https://root.cern,https://root.cern/root/html604/RooTFnBinding.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. RooListProxy_coefList; RooRealProxy_x. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooBernstein(). RooBernstein(const char* name, const char* title, RooAbsReal& _x, const RooArgList& _coefList); Constructor. RooBernstein(const RooBernstein& other, const char* name = 0). Double_t evaluate() const. Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; No analytical calculation available (yet) of integrals over subranges. Double_t analyticalIntegral(Int_t code, const char* rangeName = 0) const. TObject* clone(const char* newname) const; { return new RooBernstein(*this, newname); }. virtual ~RooBernstein(); { }. » Last changed: Tue Mar 10 17:14:35 2015 » Last generated: 2015-03-10 17:14; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooBernstein.html:43481,Inherit,Inheritance,43481,root/html534/RooBernstein.html,https://root.cern,https://root.cern/root/html534/RooBernstein.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ooAbsArg::_serverListlist of server objects; Roo2DMomentMorphFunction::Setting_setting; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; int_squareIdx[4]; TMatrixD_squareVec; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; Bool_t_verbose; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxym1; RooRealProxym2. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Roo2DMomentMorphFunction(const char* name, const char* title, RooAbsReal& _m1, RooAbsReal& _m2, const TMatrixD& mrefpoints, const Roo2DMomentMorphFunction::Setting& setting = Linear, const Bool_t& verbose = false); cross-check that we have enough reference points. Roo2DMomentMorphFunction(const char* name, const char* title, RooAbsReal& _m1, RooAbsReal& _m2, const Int_t& nrows, const Double_t* dm1arr, const Double_t* dm2arr, const Double_t* dvalarr, const Roo2DMomentMorphFunction::Setting& setting = Linear, const Bool_t& verbose = false); cross-check that we have enough reference points. Roo2DMomentMorphFunction(const Roo2DMomentMorphFunction& other, const char* name = 0). ~Roo2DMomentMorphFunction(). initialize(). evaluate() const. calculateFractions(Bool_t verbose = kTRUE) const. findSquare(const double& x, const double& y) const. Bool_t onSameSide(const double& p1x, const double& p1y, const double& p2x, const double& p2y, const doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/Roo2DMomentMorphFunction.html:38813,Inherit,Inheritance,38813,root/html602/Roo2DMomentMorphFunction.html,https://root.cern,https://root.cern/root/html602/Roo2DMomentMorphFunction.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_t_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_t_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~RooAbsPdf(); Destructor. Double_t getValV(const RooArgSet* set = 0) const; Return current value, normalizated by integrating over; the observables in 'nset'. If 'nset' is 0, the unnormalized value.; is returned. All elements of 'nset' must be lvalues. Unnormalized values are not cached; Doing so would be complicated as _norm->getVal() could; spoil the cache and interfere with returning the cached; return value. Since unnormalized calls are typically; done in integration calls, there is no performance hit. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Analytical integral with normalization (see RooAbsReal::analyticalIntegralWN() for further information). This function applies the normalization specified by 'normSet' to the integral returned; by RooAbsReal::analyticalIntegral(). The passthrough scenario (code=0) is also changed; to return a normalized answer. Bool_t traceEvalPdf(Do",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsPdf.html:45944,Inherit,Inheritance,45944,root/html534/RooAbsPdf.html,https://root.cern,https://root.cern/root/html534/RooAbsPdf.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,double,int,int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Mar 10 17:15:1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction3Binding_double_double_int_int_.html:36466,Inherit,Inheritance,36466,root/html534/RooCFunction3Binding_double_double_int_int_.html,https://root.cern,https://root.cern/root/html534/RooCFunction3Binding_double_double_int_int_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ooAbsArg::_stringAttribString attributes; RooListProxy_sumCat! do not persist ; TIterator*_sumCatIter!; RooSetProxy_sumListSet of discrete observable over which is summed numerically; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Bool_t_valid; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooRealIntegral(). RooRealIntegral(const char* name, const char* title, const RooAbsReal& function, const RooArgSet& depList, const RooArgSet* funcNormSet = 0, const RooNumIntConfig* config = 0, const char* rangeName = 0); Construct integral of 'function' over observables in 'depList'; in range 'rangeName' with normalization observables 'funcNormSet'; (for p.d.f.s). In the integral is performed to the maximum extent; possible the internal (analytical) integrals advertised by function.; The other integrations are performed numerically. The optional; config object prescribes how these numeric integrations are configured. void autoSelectDirtyMode(); Set appropriate cache operation mode for integral depending on cache operation; mode of server objects. Bool_t servesExclusively(const RooAbsArg* server, const RooArgSet& exclLVBranches, const RooArgSet& allBranches) const; Utility function that returns true if 'object server' is a server; to exactly one of the RooAbsArgs in 'exclLVBranches'. Bool_t initNumIntegrator() const; (Re)Initialize numerical integration engine if necessary. Return kTRUE if; successful, or otherwise kFALSE. RooRealIntegral(const RooRealIntegral& other, co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooRealIntegral.html:34112,config,config,34112,root/html526/RooRealIntegral.html,https://root.cern,https://root.cern/root/html526/RooRealIntegral.html,7,['config'],['config']
Modifiability,"ooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); voidsetCallProfiling(Bool_t flag, Int_t nbinX = 40, Int_t nbinCall = 40, Int_t nCallHigh = 1000); voidsetCallWarning(Int_t threshold = 2000); voidsetConvolutionWindow(RooAbsReal& centerParam, RooAbsReal& widthParam, Double_t widthScaleFactor = 1); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormValueCaching(Int_t minNumIntDim, Int_t ipOrder = 2); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; virtual voidShowMembers(TMemberInspector& insp, char* parent)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooNumConvPdf.html:29468,config,config,29468,root/html526/RooNumConvPdf.html,https://root.cern,https://root.cern/root/html526/RooNumConvPdf.html,1,['config'],['config']
Modifiability,"ooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); voidsetCallProfiling(Bool_t flag, Int_t nbinX = 40, Int_t nbinCall = 40, Int_t nCallHigh = 1000); voidsetCallWarning(Int_t threshold = 2000); voidsetConvolutionWindow(RooAbsReal& centerParam, RooAbsReal& widthParam, Double_t widthScaleFactor = 1); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); voidRooAbsPdf::setNormValueCaching(Int_t minNumIntDim, Int_t ipOrder = 2); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); voidRooAbsArg::setValueDirty() const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooNumConvPdf.html:29671,config,config,29671,root/html528/RooNumConvPdf.html,https://root.cern,https://root.cern/root/html528/RooNumConvPdf.html,1,['config'],['config']
Modifiability,"ooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tRooAbsReal::findRoot(RooRealVar& x, Double_t xmin, Double_t xmax, Double_t yval); RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAbsArg& arg) const; RooAbsArg*RooAbsArg::findServer(Int_t index) const; virtual voidRooAbsReal::fixAddCoefNormalization(const RooArgSet& addNormSet = RooArgSet(), Bool_t force = kTRUE); virtual voidRooAbsReal::fixAddCoefRange(const char* rangeName = 0, Bool_t force = kTRUE); RooStats::HistFactory::FlexibleInterpVarFlexibleInterpVar(); RooStats::HistFactory::FlexibleInterpVarFlexibleInterpVar(const RooStats::HistFactory::FlexibleInterpVar&); RooStats::HistFactory::FlexibleInterpVarFlexibleInterpVar(const char* name, const char* title); RooStats::HistFactory::FlexibleInterpVarFlexibleInterpVar(const RooStats::HistFactory::FlexibleInterpVar&, const char*); RooStats::HistFactory::FlexibleInterpVarFlexibleInterpVar(const char* name, const char* title, const RooArgList& _paramList, Double_t nominal, const RooArgList& low, const RooArgList& high); RooStats::HistFactory::FlexibleInterpVarFlexibleInterpVar(const char* name, const char* title, const RooArgList& _paramList, double nominal, vector<double> low, vector<double> high); RooStats::HistFactory::FlexibleInterpVarFlexibleInterpVar(const char* name, const char* title, const RooArgList& _paramList, double nominal, vector<double> low, vector<double> high, vector<int> code); static UInt_tRooAbsArg::fnv1a32(const char* data); static UInt_tRooAbsArg::fnv1a32(const char* data, ULong_t sz, UInt_t hash = fnv1a32start); static ULong64_tRooAbsArg::fnv1a64(const char* data); static ULong64_tRooAbsArg::fnv1a64(const char* data, ULong_t sz, ULong64_t hash = fnv1a64start); virtual Bool_tRooAbsReal::forceAnalyticalInt(const RooAbsArg&) const; virtual voidRooAbsReal::forceNumInt(B",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__HistFactory__FlexibleInterpVar.html:11938,Flexible,FlexibleInterpVar,11938,root/html602/RooStats__HistFactory__FlexibleInterpVar.html,https://root.cern,https://root.cern/root/html602/RooStats__HistFactory__FlexibleInterpVar.html,2,['Flexible'],['FlexibleInterpVar']
Modifiability,"ooAbsData::createHistogramTH1 * createHistogram(const char *name, const RooAbsRealLValue &xvar, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}) constCalls createHistogram(const char *name, const RooAbsRealLValue& xvar, const RooLinkedList& argList) c...Definition RooAbsData.cxx:561; yDouble_t y[n]Definition legend1.C:17; The caller takes ownership of the returned histogram ; Definition at line 673 of file RooAbsData.cxx. ◆ createHistogram() [3/5]. TH1 * RooAbsData::createHistogram ; (; const char * ; varNameList, . const RooCmdArg & ; binArgX = {}, . const RooCmdArg & ; binArgY = {}, . const RooCmdArg & ; binArgZ = {} . ); const. Create and fill a ROOT histogram TH1,TH2 or TH3 with the values of this dataset for the variables with given names. ; Parameters. [in]varNameListComma-separated variable names. ; [in]binArgXControl the binning for the x variable. ; [in]binArgYControl the binning for the y variable. ; [in]binArgZControl the binning for the z variable. . ReturnsHistogram now owned by user.; The possible binning command arguments for each axis are:. AutoBinning(Int_t nbins, Double_y margin) Automatically calculate range with given added fractional margin, set binning to nbins . AutoSymBinning(Int_t nbins, Double_y margin) Automatically calculate range with given added fractional margin, with additional constraint that mean of data is in center of range, set binning to nbins . Binning(const char* name) Apply binning with given name to x axis of histogram . Binning(RooAbsBinning& binning) Apply specified binning to x axis of histogram . Binning(int nbins, double lo, double hi) Apply specified binning to x axis of histogram. YVar(const RooAbsRealLValue& var,...) Observable to be mapped on y axis of ROOT histogram . ZVar(const RooAbsRealLValue& var,...) Observable to be mapped on z axis of ROOT histogram . D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsData.html:41748,variab,variable,41748,doc/master/classRooAbsData.html,https://root.cern,https://root.cern/doc/master/classRooAbsData.html,1,['variab'],['variable']
Modifiability,"ooAbsGenContext > _pdfGen;  Physics model generator context. ;  ; std::unique_ptr< RooArgSet > _pdfVars;  Holder of PDF x truth event. ;  ; std::unique_ptr< RooArgSet > _pdfVarsOwned;  Owning version of pdfVars ;. ;  ;  Protected Attributes inherited from RooAbsGenContext; UInt_t _expectedEvents;  Number of expected events from extended p.d.f. ;  ; RooAbsPdf::ExtendMode _extendMode;  Extended mode capabilities of p.d.f. ;  ; RooDataSet * _genData = nullptr;  ! Data being generated ;  ; bool _isValid;  Is context in valid state? ;  ; Int_t _nextProtoIndex;  Next prototype event to load according to LUT. ;  ; TString _normRange;  Normalization range of pdf. ;  ; std::vector< Int_t > _protoOrder;  LUT with traversal order of prototype data. ;  ; const RooDataSet * _prototype;  Pointer to prototype dataset. ;  ; RooArgSet _protoVars;  Prototype observables. ;  ; RooArgSet _theEvent;  Pointer to observable event being generated. ;  ; bool _verbose;  Verbose messaging? ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooConvGenContext.html:17194,inherit,inherited,17194,doc/master/classRooConvGenContext.html,https://root.cern,https://root.cern/doc/master/classRooConvGenContext.html,1,['inherit'],['inherited']
Modifiability,"ooAbsIntegrator::_validIs integrator in valid state?; void*_workspaceGSL workspace ; Double_t*_x! Current coordinate; Double_t_xmax! Upper integration bound; Double_t_xmin! Lower integration bound. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void registerIntegrator(RooNumIntFactory& fact); Register this class with RooNumIntConfig as a possible choice of numeric; integrator for one-dimensional integrals over finite and infinite domains. RooAdaptiveGaussKronrodIntegrator1D(); coverity[UNINIT_CTOR]; Default constructor. RooAdaptiveGaussKronrodIntegrator1D(const RooAbsFunc& function, const RooNumIntConfig& config); Constructor taking a function binding and a configuration object. RooAdaptiveGaussKronrodIntegrator1D(const RooAbsFunc& function, Double_t xmin, Double_t xmax, const RooNumIntConfig& config); Constructor taking a function binding, an integration range and a configuration object. RooAbsIntegrator* clone(const RooAbsFunc& function, const RooNumIntConfig& config) const; Virtual constructor. Bool_t initialize(); Initialize integrator allocate buffers and setup GSL workspace. ~RooAdaptiveGaussKronrodIntegrator1D(); Destructor. Bool_t setLimits(Double_t* xmin, Double_t* xmax); Change our integration limits. Return kTRUE if the new limits are; ok, or otherwise kFALSE. Always returns kFALSE and does nothing; if this object was constructed to always use our integrand's limits. Bool_t checkLimits() const; Check that our integration range is finite and otherwise return kFALSE.; Update the limits from the integrand if requested. Double_t integral(const Double_t* yvec = 0); Calculate and return integral at at given parameter values. RooAdaptiveGaussKronrodIntegrator1D(); Constructors, assignment etc. Bool_t setUseIntegrandLimits(Bool_t flag); If flag is true, intergration limits are taken from definition in input function binding. Bool_t canIntegrate1D() const; We can integrate 1-dimensional functions. Bool_t canIntegrate2D() ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooAdaptiveGaussKronrodIntegrator1D.html:8957,config,config,8957,root/html530/RooAdaptiveGaussKronrodIntegrator1D.html,https://root.cern,https://root.cern/root/html530/RooAdaptiveGaussKronrodIntegrator1D.html,4,['config'],['config']
Modifiability,"ooAbsPdf.; Definition at line 1208 of file RooSimultaneous.cxx. ◆ DeclFileName(). static const char * RooSimultaneous::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 147 of file RooSimultaneous.h. ◆ evaluate(). double RooSimultaneous::evaluate ; (; ); const. overridevirtual . Return the current value: the value of the PDF associated with the current index category state. ; Implements RooAbsReal.; Definition at line 474 of file RooSimultaneous.cxx. ◆ expectedEvents(). double RooSimultaneous::expectedEvents ; (; const RooArgSet * ; nset); const. overridevirtual . Return the number of expected events: If the index is in nset, then return the sum of the expected events of all components, otherwise return the number of expected events of the PDF associated with the current index category state. ; Reimplemented from RooAbsPdf.; Definition at line 506 of file RooSimultaneous.cxx. ◆ extendMode(). RooAbsPdf::ExtendMode RooSimultaneous::extendMode ; (; ); const. overridevirtual . Examine the pdf components and check if one of them can be extended or must be extended. ; It is enough to have one component that can be extended or must be extended to return the flag in the total simultaneous pdf. ; Reimplemented from RooAbsPdf.; Definition at line 434 of file RooSimultaneous.cxx. ◆ fillDataHist(). RooDataHist * RooSimultaneous::fillDataHist ; (; RooDataHist * ; hist, . const RooArgSet * ; nset, . double ; scaleFactor, . bool ; correctForBinVolume = false, . bool ; showProgress = false . ); const. virtual . Definition at line 1025 of file RooSimultaneous.cxx. ◆ flattenedCatList(). RooArgSet const & RooSimultaneous::flattenedCatList ; (; ); const. protected . Internal utility function to get a list of all category components for this RooSimultaneous. ; The output contains only the index category if it is a RooCategory, or the list of all category components if it is a RooSuperCategory. ; Definition at line 1161 of fi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSimultaneous.html:84517,extend,extendMode,84517,doc/master/classRooSimultaneous.html,https://root.cern,https://root.cern/doc/master/classRooSimultaneous.html,1,['extend'],['extendMode']
Modifiability,"ooAbsPdf.cxx:1557; RooAbsPdf::randomizeProtoOrderInt_t * randomizeProtoOrder(Int_t nProto, Int_t nGen, bool resample=false) constReturn lookup table with randomized order for nProto prototype events.Definition RooAbsPdf.cxx:1485; RooAbsPdf::setNormRangevoid setNormRange(const char *rangeName)Definition RooAbsPdf.cxx:2726; RooAbsPdf::~RooAbsPdf~RooAbsPdf() overrideDestructor.Definition RooAbsPdf.cxx:277; RooAbsPdf::_normSetRooArgSet const * _normSetNormalization integral (owned by _normMgr)Definition RooAbsPdf.h:320; RooAbsPdf::plotOnRooPlot * plotOn(RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}, const RooCmdArg &arg9={}, const RooCmdArg &arg10={}) const overrideHelper calling plotOn(RooPlot*, RooLinkedList&) const.Definition RooAbsPdf.h:124; RooAbsPdf::specialGeneratorConfigRooNumGenConfig * specialGeneratorConfig() constReturns the specialized integrator configuration for this RooAbsReal.Definition RooAbsPdf.cxx:2623; RooAbsPdf::selfNormalizedvirtual bool selfNormalized() constShows if a PDF is self-normalized, which means that no attempt is made to add a normalization term.Definition RooAbsPdf.h:207; RooAbsPdf::printMultilinevoid printMultiline(std::ostream &os, Int_t contents, bool verbose=false, TString indent="""") const overridePrint multi line detailed information of this RooAbsPdf.Definition RooAbsPdf.cxx:1100; RooAbsPdf::_traceCountInt_t _traceCountNumber of traces remaining to print.Definition RooAbsPdf.h:335; RooAbsPdf::canBeExtendedbool canBeExtended() constIf true, PDF can provide extended likelihood term.Definition RooAbsPdf.h:218; RooAbsPdf::_normRooAbsReal * _normDefinition RooAbsPdf.h:319; RooAbsPdf::setTraceCountervoid setTraceCounter(Int_t value, bool allNodes=false)Reset trace counter to given value, limiting the number of future trace messages for this pdf to 'val...Definiti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:147288,config,configuration,147288,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['config'],['configuration']
Modifiability,"ooAbsPdf::_normMgrThe cache manager; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction2Ref<double,double,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction2PdfBinding_double_double_double_.html:38649,config,configuration,38649,root/html526/RooCFunction2PdfBinding_double_double_double_.html,https://root.cern,https://root.cern/root/html526/RooCFunction2PdfBinding_double_double_double_.html,1,['config'],['configuration']
Modifiability,"ooAbsPdf::_normMgrThe cache manager; TStringRooAbsPdf::_normRangeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxyk; RooRealProxym0; RooRealProxyx.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooLognormal.html:44089,config,configuration,44089,root/html602/RooLognormal.html,https://root.cern,https://root.cern/root/html602/RooLognormal.html,8,['config'],['configuration']
Modifiability,"ooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxymean; RooRealProxysigma; RooRealProxyx.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooGaussian.html:39205,config,configuration,39205,root/html530/RooGaussian.html,https://root.cern,https://root.cern/root/html530/RooGaussian.html,4,['config'],['configuration']
Modifiability,"ooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxymean; RooRealProxywidth; RooRealProxyx.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooBreitWigner.html:39333,config,configuration,39333,root/html530/RooBreitWigner.html,https://root.cern,https://root.cern/root/html530/RooBreitWigner.html,2,['config'],['configuration']
Modifiability,"ooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,double,double,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction3PdfBinding_double_double_double_double_.html:42622,config,configuration,42622,root/html534/RooCFunction3PdfBinding_double_double_double_double_.html,https://root.cern,https://root.cern/root/html534/RooCFunction3PdfBinding_double_double_double_double_.html,2,['config'],['configuration']
Modifiability,"ooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,unsigned int,double,unsigned int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction3PdfBinding_double_unsigned_int_double_unsigned_int_.html:44930,config,configuration,44930,root/html602/RooCFunction3PdfBinding_double_unsigned_int_double_unsigned_int_.html,https://root.cern,https://root.cern/root/html602/RooCFunction3PdfBinding_double_unsigned_int_double_unsigned_int_.html,4,['config'],['configuration']
Modifiability,"ooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,unsigned int,unsigned int,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction3PdfBinding_double_unsigned_int_unsigned_int_double_.html:44930,config,configuration,44930,root/html602/RooCFunction3PdfBinding_double_unsigned_int_unsigned_int_double_.html,https://root.cern,https://root.cern/root/html602/RooCFunction3PdfBinding_double_unsigned_int_unsigned_int_double_.html,4,['config'],['configuration']
Modifiability,"ooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction1Ref<double,int>funcFunction pointer reference; RooRealProxyxArgument reference.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooCFunction1PdfBinding_double_int_.html:39569,config,configuration,39569,root/html530/RooCFunction1PdfBinding_double_int_.html,https://root.cern,https://root.cern/root/html530/RooCFunction1PdfBinding_double_int_.html,1,['config'],['configuration']
Modifiability,"ooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. Bool_t_disableCacheFlag to run object in passthrough (= non-caching mode). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooAbsCachedPdf(const char* name, const char* title, Int_t ipOrder = 0); Constructor. RooAbsCachedPdf(const RooAbsCachedPdf& other, const char* name = 0); Copy constructor. ~RooAbsCachedPdf(); Destructor. Double_t getValV(const RooArgSet* set = 0) const; Implementation of getVal() overriding default implementation; of RooAbsPdf. Return normalized value stored in cache p.d.f; rather than return value of evaluate() which is undefined; for RooAbsCachedPdf. RooAbsPdf* getCachePdf(const RooArgSet* nset = 0) const; Return pointer to RooHistPdf cache pdf for given choice of observables. RooDataHist* getCacheHist(const RooArgSet* nset = 0) const; Return pointer to RooDataHist cache histogram for given choice of observables. void clearCacheObject(RooAbsCachedPdf::PdfCacheElem& cache) const; Mark all bins of given cache as unitialized (value -1). TString cacheNameSuffix(const RooArgSet& nset) const; Construct string with unique suffix for cache ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsCachedPdf.html:46838,Inherit,Inheritance,46838,root/html602/RooAbsCachedPdf.html,https://root.cern,https://root.cern/root/html602/RooAbsCachedPdf.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooRealSumPdf(); Default constructor; coverity[UNINIT_CTOR]. RooRealSumPdf(const char* name, const char* title); Constructor with name and title. RooRealSumPdf(const char* name, const char* title, RooAbsReal& func1, RooAbsReal& func2, RooAbsReal& coef1); Construct p.d.f consisting of coef1*func1 + (1-coef1)*func2; The input coefficients and functions are allowed to be negative; but the resulting sum is not, which is enforced at runtime. RooRealSumPdf(const char* name, const char* title, const RooArgList& funcList, const RooArgList& coefList, Bool_t extended = kFALSE); Constructor p.d.f implementing sum_i [ coef_i * func_i ], if N_coef==N_func; or sum_i [ coef_i * func_i ] + (1 - sum_i [ coef_i ] )* func_N if Ncoef==N_func-1. All coefficients and functions are allowed to be negative; but the sum is not, which is enforced at runtime. RooRealSumPdf(const RooRealSumPdf& other, const char* name = 0); Copy constructor. ~RooRealSumPdf(); Destructor. RooAbsPdf::ExtendMode extendMode() const. Double_t evaluate() const; Calculate the current value. Bool_t checkObservables(const RooArgSet* nset) const; Check if FUNC is valid for given normalization set.; Coeffient and FUNC must be non-overlapping, but func-coefficient; pairs may overlap each other. In the present implementation, coefficients may not be observables or derive; from observables. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& numVars, const RooArgSet* normSet, const char* rangeName = 0) const; Advertise that all integrals ca",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooRealSumPdf.html:41262,extend,extended,41262,root/html528/RooRealSumPdf.html,https://root.cern,https://root.cern/root/html528/RooRealSumPdf.html,2,['extend'],['extended']
Modifiability,"ooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooRealSumPdf(); Default constructor; coverity[UNINIT_CTOR]. RooRealSumPdf(const char* name, const char* title); Constructor with name and title. RooRealSumPdf(const char* name, const char* title, RooAbsReal& func1, RooAbsReal& func2, RooAbsReal& coef1); Construct p.d.f consisting of coef1*func1 + (1-coef1)*func2; The input coefficients and functions are allowed to be negative; but the resulting sum is not, which is enforced at runtime. RooRealSumPdf(const char* name, const char* title, const RooArgList& funcList, const RooArgList& coefList, Bool_t extended = kFALSE); Constructor p.d.f implementing sum_i [ coef_i * func_i ], if N_coef==N_func; or sum_i [ coef_i * func_i ] + (1 - sum_i [ coef_i ] )* func_N if Ncoef==N_func-1. All coefficients and functions are allowed to be negative; but the sum is not, which is enforced at runtime. RooRealSumPdf(const RooRealSumPdf& other, const char* name = 0); Copy constructor. ~RooRealSumPdf(); Destructor. RooAbsPdf::ExtendMode extendMode() const. Double_t evaluate() const; Calculate the current value. Bool_t checkObservables(const RooArgSet* nset) const; Check if FUNC is valid for given normalization set.; Coeffient and FUNC must be non-overlapping, but func-coefficient; pairs may overlap each other. In the present implementation, coefficients may not be observables or derive; from observables. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& numVars, const RooArgSet* normSet, const char* rangeName = 0) const; cout << ""RooRealSumPdf::getAnal",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooRealSumPdf.html:43045,extend,extended,43045,root/html532/RooRealSumPdf.html,https://root.cern,https://root.cern/root/html532/RooRealSumPdf.html,2,['extend'],['extended']
Modifiability,"ooAbsReal &z, RooAbsReal &w);  ; RooAbsReal * bindFunction (const char *name, CFUNCD4DDDD func, RooAbsReal &x, RooAbsReal &y, RooAbsReal &z, RooAbsReal &w);  ; RooAbsReal * bindFunction (const char *name, CFUNCD4DDDI func, RooAbsReal &x, RooAbsReal &y, RooAbsReal &z, RooAbsReal &w);  ; RooAbsReal * bindFunction (const char *name, const ROOT::Math::IBaseFunctionMultiDim &ftor, const RooArgList &vars);  ; RooAbsReal * bindFunction (const char *name, const ROOT::Math::IBaseFunctionOneDim &ftor, RooAbsReal &vars);  ; RooAbsReal * bindFunction (TF1 *func, RooAbsReal &x);  Bind a TFx function to RooFit variables. Also see RooTFnBinding. ;  ; RooAbsReal * bindFunction (TF1 *func, RooAbsReal &x, const RooArgList &params);  Bind a TFx function to RooFit variables. Also see RooTFnBinding. ;  ; RooAbsReal * bindFunction (TF2 *func, RooAbsReal &x, RooAbsReal &y);  Bind a TFx function to RooFit variables. Also see RooTFnBinding. ;  ; RooAbsReal * bindFunction (TF2 *func, RooAbsReal &x, RooAbsReal &y, const RooArgList &params);  Bind a TFx function to RooFit variables. Also see RooTFnBinding. ;  ; RooAbsReal * bindFunction (TF3 *func, RooAbsReal &x, RooAbsReal &y, RooAbsReal &z);  Bind a TFx function to RooFit variables. Also see RooTFnBinding. ;  ; RooAbsReal * bindFunction (TF3 *func, RooAbsReal &x, RooAbsReal &y, RooAbsReal &z, const RooArgList &params);  Bind a TFx function to RooFit variables. Also see RooTFnBinding. ;  ; RooAbsPdf * bindPdf (const char *name, CFUNCD1D func, RooAbsReal &x);  ; RooAbsPdf * bindPdf (const char *name, CFUNCD1I func, RooAbsReal &x);  ; RooAbsPdf * bindPdf (const char *name, CFUNCD2DD func, RooAbsReal &x, RooAbsReal &y);  ; RooAbsPdf * bindPdf (const char *name, CFUNCD2DI func, RooAbsReal &x, RooAbsReal &y);  ; RooAbsPdf * bindPdf (const char *name, CFUNCD2ID func, RooAbsReal &x, RooAbsReal &y);  ; RooAbsPdf * bindPdf (const char *name, CFUNCD2II func, RooAbsReal &x, RooAbsReal &y);  ; RooAbsPdf * bindPdf (const char *name, CFUNCD2UD func, RooAbs",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceRooFit.html:6296,variab,variables,6296,doc/master/namespaceRooFit.html,https://root.cern,https://root.cern/doc/master/namespaceRooFit.html,1,['variab'],['variables']
Modifiability,"ooAbsReal & pdf () const;  ; const TH2 * profileData () const;  ; void setCallProfiling (bool flag, Int_t nbinX=40, Int_t nbinCall=40, Int_t nCallHigh=1000);  Activate call profile if flag is set to true. ;  ; void setCallWarning (Int_t threshold=2000);  Activate warning messages if number of function calls needed for evaluation of convolution integral exceeds given threshold. ;  ; void setConvolutionWindow (RooAbsReal &centerParam, RooAbsReal &widthParam, double widthScaleFactor=1);  Restrict convolution integral to finite range [ x - C - S*W, x - C + S*W ] where x is current value of convolution variablem, C = centerParam, W=widthParam and S = widthScaleFactor Inputs centerParam and withParam can be function expressions (RooAbsReal, RooFormulaVar) etc. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; RooRealVar & var () const;  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (const char *name, const char *title, double minVal, double maxVal, const char *unit="""");  Constructor with plot range and unit label. ;  ;  RooAbsReal (const RooAbsReal &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooAbsReal () override;  Destructor. ;  ; virtual double analyticalIntegral (Int_t code, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; virtual double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; TF1 * asTF (const RooArgList &obs, const RooArgList &pars=RooArgList(), const RooArgSet &nset=RooArgSet()) const;  Return a ROOT TF1,2,3 object bound to this RooAbsReal with gi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNumConvolution.html:4291,inherit,inherited,4291,doc/master/classRooNumConvolution.html,https://root.cern,https://root.cern/doc/master/classRooNumConvolution.html,1,['inherit'],['inherited']
Modifiability,"ooAbsReal& fcn, RooLinkedList& cmdList); TStringRooAbsArg::cleanBranchName() const; virtual voidRooAbsReal::copyCache(const RooAbsArg* source, Bool_t valueOnly = kFALSE, Bool_t setValDirty = kTRUE); RooAbsReal*RooAbsReal::createIntObj(const RooArgSet& iset, const RooArgSet* nset, const RooNumIntConfig* cfg, const char* rangeName) const; virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual voidRooAbsReal::fillTreeBranch(TTree& t); voidRooAbsReal::findInnerMostIntegration(const RooArgSet& allObs, RooArgSet& innerObs, const char* rangeName) const; virtual RooAbsGenContext*RooAbsPdf::genContext(const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE) const; RooDataSet*RooAbsPdf::generate(RooAbsGenContext& context, const RooArgSet& whatVars, const RooDataSet* prototype, Double_t nEvents, Bool_t verbose, Bool_t randProtoOrder, Bool_t resampleProto, Bool_t skipInit = kFALSE, Bool_t extended = kFALSE) const; virtual voidRooAbsArg::getObservablesHook(const RooArgSet*, RooArgSet*) const; virtual voidRooAbsArg::getParametersHook(const RooArgSet*, RooArgSet*, Bool_t) const; RooAbsProxy*RooAbsArg::getProxy(Int_t index) const; static voidRooAbsReal::globalSelectComp(Bool_t flag); voidRooAbsArg::graphVizAddConnections(set<pair<RooAbsArg*,RooAbsArg*> >&); Bool_tRooAbsArg::inhibitDirty() const; TStringRooAbsReal::integralNameSuffix(const RooArgSet& iset, const RooArgSet* nset = 0, const char* rangeName = 0, Bool_t omitEmpty = kFALSE) const; Bool_tRooAbsReal::isSelectedComp() const; virtual Bool_tRooAbsReal::isValid() const; virtual Bool_tRooAbsReal::isValidReal(Double_t value, Bool_t printError = kFALSE) const; voidRooAbsReal::makeProjectionSet(const RooAbsArg* plotVar, const RooArgSet* allVars, RooArgSet& projectedVars, Bool_t silent) const; voidTObject::MakeZombie(); Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgProxy& a) const; Bool_tR",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/Roo2DKeysPdf.html:34363,extend,extended,34363,root/html602/Roo2DKeysPdf.html,https://root.cern,https://root.cern/root/html602/Roo2DKeysPdf.html,28,['extend'],['extended']
Modifiability,"ooAbsReal& fcn, RooLinkedList& cmdList); TStringRooAbsArg::cleanBranchName() const; virtual voidRooAbsReal::copyCache(const RooAbsArg* source, Bool_t valueOnly = kFALSE, Bool_t setValDirty = kTRUE); RooAbsReal*RooAbsReal::createIntObj(const RooArgSet& iset, const RooArgSet* nset, const RooNumIntConfig* cfg, const char* rangeName) const; virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual voidRooAbsReal::fillTreeBranch(TTree& t); voidRooAbsReal::findInnerMostIntegration(const RooArgSet& allObs, RooArgSet& innerObs, const char* rangeName) const; virtual RooAbsGenContext*RooAbsPdf::genContext(const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE) const; RooDataSet*RooAbsPdf::generate(RooAbsGenContext& context, const RooArgSet& whatVars, const RooDataSet* prototype, Double_t nEvents, Bool_t verbose, Bool_t randProtoOrder, Bool_t resampleProto, Bool_t skipInit = kFALSE, Bool_t extended = kFALSE) const; virtual voidRooAbsArg::getObservablesHook(const RooArgSet*, RooArgSet*) const; virtual voidRooAbsArg::getParametersHook(const RooArgSet*, RooArgSet*, Bool_t) const; RooAbsProxy*RooAbsArg::getProxy(Int_t index) const; static voidRooAbsReal::globalSelectComp(Bool_t flag); voidRooAbsArg::graphVizAddConnections(set<std::pair<RooAbsArg*,RooAbsArg*> >&); Bool_tRooAbsArg::inhibitDirty() const; TStringRooAbsReal::integralNameSuffix(const RooArgSet& iset, const RooArgSet* nset = 0, const char* rangeName = 0, Bool_t omitEmpty = kFALSE) const; Bool_tRooAbsReal::isSelectedComp() const; virtual Bool_tRooAbsReal::isValid() const; virtual Bool_tRooAbsReal::isValidReal(Double_t value, Bool_t printError = kFALSE) const; voidRooAbsReal::makeProjectionSet(const RooAbsArg* plotVar, const RooArgSet* allVars, RooArgSet& projectedVars, Bool_t silent) const; voidTObject::MakeZombie(); Bool_tRooAbsReal::matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgProxy& a) const; Bo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/Roo2DKeysPdf.html:34373,extend,extended,34373,root/html534/Roo2DKeysPdf.html,https://root.cern,https://root.cern/root/html534/Roo2DKeysPdf.html,14,['extend'],['extended']
Modifiability,"ooAbsReal() ;; 80 RooAbsReal(const char *name, const char *title, const char *unit= """") ;; 81 RooAbsReal(const char *name, const char *title, double minVal, double maxVal,; 82 const char *unit= """") ;; 83 RooAbsReal(const RooAbsReal& other, const char* name=nullptr);; 84 ~RooAbsReal() override;; 85 ; 86 ; 87 ; 88 ; 89 //////////////////////////////////////////////////////////////////////////////////; 90 /// Evaluate object. Returns either cached value or triggers a recalculation.; 91 /// The recalculation happens by calling getValV(), which in the end calls the; 92 /// virtual evaluate() functions of the respective PDFs.; 93 /// \param[in] normalisationSet getValV() reacts differently depending on the value of the normalisation set.; 94 /// If the set is `nullptr`, an unnormalised value is returned.; 95 /// \note The normalisation is arbitrary, because it is up to the implementation; 96 /// of the PDF to e.g. leave out normalisation constants for speed reasons. The range; 97 /// of the variables is also ignored.; 98 ///; 99 /// To normalise the result properly, a RooArgSet has to be passed, which contains; 100 /// the variables to normalise over.; 101 /// These are integrated over their current ranges to compute the normalisation constant,; 102 /// and the unnormalised result is divided by this value.; 103 inline double getVal(const RooArgSet* normalisationSet = nullptr) const {; 104 // Sometimes, the calling code uses an empty RooArgSet to request evaluation; 105 // without normalization set instead of following the `nullptr` convention.; 106 // To remove this ambiguity which might not always be correctly handled in; 107 // downstream code, we set `normalisationSet` to nullptr if it is pointing; 108 // to an empty set.; 109 if(normalisationSet && normalisationSet->empty()) {; 110 normalisationSet = nullptr;; 111 }; 112#ifdef ROOFIT_CHECK_CACHED_VALUES; 113 return _DEBUG_getVal(normalisationSet);; 114#else; 115 ; 116#ifndef _WIN32; 117 return (_fast && !_inhibitDirty",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8h_source.html:3627,variab,variables,3627,doc/master/RooAbsReal_8h_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8h_source.html,1,['variab'],['variables']
Modifiability,"ooAbsReal.cxx. ◆ createIntRI(). RooFit::OwningPtr< RooAbsReal > RooAbsReal::createIntRI ; (; const RooArgSet & ; iset, . const RooArgSet & ; nset = {} . ). Utility function for createRunningIntegral. ; It creates an object implementing the standard (analytical) integration technique for calculating the running integral. ; Definition at line 3827 of file RooAbsReal.cxx. ◆ createPlotProjection() [1/2]. const RooAbsReal * RooAbsReal::createPlotProjection ; (; const RooArgSet & ; dependentVars, . const RooArgSet * ; projectedVars, . RooArgSet *& ; cloneSet, . const char * ; rangeName = nullptr, . const RooArgSet * ; condObs = nullptr . ); const. Utility function for plotOn() that creates a projection of a function or p.d.f to be plotted on a RooPlot. ; Create a new object \( G \) that represents the normalized projection: ; \[; G[x,p] = \frac{\int F[x,y,p] \; \mathrm{d}\{y\}}; {\int F[x,y,p] \; \mathrm{d}\{x\} \, \mathrm{d}\{y\}}; \]. where \( F[x,y,p] \) is the function we represent, and \( \{ p \} \) are the remaining variables (""parameters"").; Parameters. [in]dependentVarsDependent variables over which to normalise, \( \{x\} \). ; [in]projectedVarsVariables to project out, \( \{ y \} \). ; [out]cloneSetWill be set to a RooArgSet*, which will contain a clone of *this plus its projection integral object. The latter will also be returned. The caller takes ownership of this set. ; [in]rangeNameOptional range for projection integrals ; [in]condObsConditional observables, which are not integrated for normalisation, even if they are in dependentVars or projectedVars. . ReturnsA pointer to the newly created object, or zero in case of an error. The caller is responsible for deleting the cloneSet (which includes the returned projection object). ; Definition at line 816 of file RooAbsReal.cxx. ◆ createPlotProjection() [2/2]. const RooAbsReal * RooAbsReal::createPlotProjection ; (; const RooArgSet & ; depVars, . const RooArgSet & ; projVars, . RooArgSet *& ; cloneSet . ); const. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsReal.html:91174,variab,variables,91174,doc/master/classRooAbsReal.html,https://root.cern,https://root.cern/doc/master/classRooAbsReal.html,1,['variab'],['variables']
Modifiability,"ooAbsReal.cxx. ◆ createIntRI(). RooFit::OwningPtr< RooAbsReal > RooAbsReal::createIntRI ; (; const RooArgSet & ; iset, . const RooArgSet & ; nset = {} . ). Utility function for createRunningIntegral. ; It creates an object implementing the standard (analytical) integration technique for calculating the running integral. ; Definition at line 3903 of file RooAbsReal.cxx. ◆ createPlotProjection() [1/2]. const RooAbsReal * RooAbsReal::createPlotProjection ; (; const RooArgSet & ; dependentVars, . const RooArgSet * ; projectedVars, . RooArgSet *& ; cloneSet, . const char * ; rangeName = nullptr, . const RooArgSet * ; condObs = nullptr . ); const. Utility function for plotOn() that creates a projection of a function or p.d.f to be plotted on a RooPlot. ; Create a new object \( G \) that represents the normalized projection: ; \[; G[x,p] = \frac{\int F[x,y,p] \; \mathrm{d}\{y\}}; {\int F[x,y,p] \; \mathrm{d}\{x\} \, \mathrm{d}\{y\}}; \]. where \( F[x,y,p] \) is the function we represent, and \( \{ p \} \) are the remaining variables (""parameters"").; Parameters. [in]dependentVarsDependent variables over which to normalise, \( \{x\} \). ; [in]projectedVarsVariables to project out, \( \{ y \} \). ; [out]cloneSetWill be set to a RooArgSet*, which will contain a clone of *this plus its projection integral object. The latter will also be returned. The caller takes ownership of this set. ; [in]rangeNameOptional range for projection integrals ; [in]condObsConditional observables, which are not integrated for normalisation, even if they are in dependentVars or projectedVars. . ReturnsA pointer to the newly created object, or zero in case of an error. The caller is responsible for deleting the cloneSet (which includes the returned projection object). ; Definition at line 842 of file RooAbsReal.cxx. ◆ createPlotProjection() [2/2]. const RooAbsReal * RooAbsReal::createPlotProjection ; (; const RooArgSet & ; depVars, . const RooArgSet & ; projVars, . RooArgSet *& ; cloneSet . ); const. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAbsReal.html:92442,variab,variables,92442,doc/v632/classRooAbsReal.html,https://root.cern,https://root.cern/doc/v632/classRooAbsReal.html,1,['variab'],['variables']
Modifiability,"ooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; static Int_tRooPrintable::_nameLength; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; const ROOT::Math::IBaseFunctionOneDim*funcFunctor; RooRealProxyvarArgument reference.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooFunctor1DBinding.html:32780,config,configuration,32780,root/html530/RooFunctor1DBinding.html,https://root.cern,https://root.cern/root/html530/RooFunctor1DBinding.html,1,['config'],['configuration']
Modifiability,"ooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; RooRealProxy_true; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooPullVar(); Default constructor. RooPullVar(const char* name, const char* title, RooRealVar& measurement, RooAbsReal& truth); Construct RooAbsReal representing the pull of a RooRealVar 'meas' providing the; measured value and its error and a RooAbsReal 'truth' providing the true value. RooPullVar(const RooPullVar& other, const char* name = 0); Copy constructor. ~RooPullVar(); Destructor. Double_t evaluate() const; Calculate pull. Use asymmetric error if defined in measurement,; otherwise use symmetric error. If measurement has no error; return zero. TObject* clone(const char* newname) const; { return new RooPullVar(*this, newname); }. » Last changed: Tue Jun 2 15:33:13 2015 » Last generated: 2015-06-02 15:33; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooPullVar.html:37260,Inherit,Inheritance,37260,root/html604/RooPullVar.html,https://root.cern,https://root.cern/root/html604/RooPullVar.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; RooRealProxy_xObservable; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooDerivative(); Default constructor. RooDerivative(const char* name, const char* title, RooAbsReal& func, RooRealVar& x, Int_t order = 1, Double_t eps = 0.001). RooDerivative(const char* name, const char* title, RooAbsReal& func, RooRealVar& x, const RooArgSet& nset, Int_t order = 1, Double_t eps = 0.001). RooDerivative(const RooDerivative& other, const char* name = 0). ~RooDerivative(); Destructor. Double_t evaluate() const; Calculate value. Bool_t redirectServersHook(const RooAbsCollection& , Bool_t , Bool_t , Bool_t ); Zap functor and derivator ;. TObject* clone(const char* newname) const; { return new RooDerivative(*this, newname); }. Int_t order() const; { return _order ; }. Double_t eps() const; { return _eps ; }. void setEps(Double_t e); { _eps = e ; }. » Last changed: Thu Nov 3 20:07:57 2011 » Last generated: 2011-11-03 20:07; This page has been automatically generated. For comments or suggestions regarding the documentation o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooDerivative.html:33888,Inherit,Inheritance,33888,root/html532/RooDerivative.html,https://root.cern,https://root.cern/root/html532/RooDerivative.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; RooRealProxy_xObservable; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooDerivative(); Default constructor. RooDerivative(const char* name, const char* title, RooAbsReal& func, RooRealVar& x, Int_t order = 1, Double_t eps = 0.001). RooDerivative(const char* name, const char* title, RooAbsReal& func, RooRealVar& x, const RooArgSet& nset, Int_t order = 1, Double_t eps = 0.001). RooDerivative(const RooDerivative& other, const char* name = 0). ~RooDerivative(); Destructor. Double_t evaluate() const; Calculate value. Bool_t redirectServersHook(const RooAbsCollection& , Bool_t , Bool_t , Bool_t ); Zap functor and derivator ;. TObject* clone(const char* newname) const; { return new RooDerivative(*this, newname); }. Int_t order() const; { return _order ; }. Double_t eps() const; { return _eps ; }. void setEps(Double_t e); { _eps = e ; }. » Last changed: Tue Mar 10 17:16:16 2015 » Last generated: 2015-03-10 17:16; This page has been automatically generated. For comments or suggestions regarding the documentation ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooDerivative.html:36061,Inherit,Inheritance,36061,root/html534/RooDerivative.html,https://root.cern,https://root.cern/root/html534/RooDerivative.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; RooSetProxy_varSetNot used anymore?; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooConvCoefVar(const char* name, const char* title, const RooAbsAnaConvPdf& input, Int_t coefIdx, const RooArgSet* varList = 0); Constuctor given a RooAbsAnaConvPdf a coefficient index and a set with the; convoluted observable(s). RooConvCoefVar(const RooConvCoefVar& other, const char* name = 0); Copy constructor. Double_t getValV(const RooArgSet* nset = 0) const; Return value of chosen coefficient. Double_t evaluate() const; Return value of chosen coefficient. Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; Return analytical integration capabilities of chosen coefficient. Double_t analyticalIntegral(Int_t code, const char* rangeName = 0) const; Return analytical integral of chosen coefficient. inline RooConvCoefVar(); Constructors, assignment etc. TObject* clone(const char* newname) const; { return new RooConvCoefVar(*this,newname); }. virtual ~RooConvCoefVar(); Destructor. » Last",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooConvCoefVar.html:37321,Inherit,Inheritance,37321,root/html602/RooConvCoefVar.html,https://root.cern,https://root.cern/root/html602/RooConvCoefVar.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,double,double,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& ); Custom streamer for function pointer reference object. When writing,; the function pointer is substituted by its registerd name. When function; is unregistered name 'UNKNOWN' is written and a warning is issues. When; reading back, the embedded name is converted back to a function pointer; using the mapping service. When name UNKNOWN is encountered a warning is; issues and a dummy null function is substituted. When the registered function; name can not be mapped to a function pointer an ERROR is issued and a pointer; to the dummy null function is substituted. TObject* clone(const char* newname) const; { return new RooCFunction3Binding(*this,newname); }. void printArgs(ostream& os) const; Print object arguments and name/address of function pointer. Double_t evaluate() const; Return value of embedded function using value of referenced variable x. » Last changed: Tue Sep 8 17:02:55",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction3PdfBinding_double_double_double_double_.html:43546,Inherit,Inheritance,43546,root/html534/RooCFunction3PdfBinding_double_double_double_double_.html,https://root.cern,https://root.cern/root/html534/RooCFunction3PdfBinding_double_double_double_double_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxyk; RooRealProxym0; RooRealProxyx. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooLognormal(const char* name, const char* title, RooAbsReal& _x, RooAbsReal& _m0, RooAbsReal& _k). RooLognormal(const RooLognormal& other, const char* name = 0). Double_t evaluate() const; ln(k)<1 would correspond to sigma < 0 in the parametrization; resulting by transforming a normal random variable in its; standard parametrization to a lognormal random variable; => treat ln(k) as -ln(k) for k<1. Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const. Double_t analyticalIntegral(Int_t code, const char* rangeName = 0) const. Int_t getGenerator(const RooArgSet& directVars, RooArgSet& generateVars, Bool_t staticInitOK = kTRUE) const. void generateEvent(Int_t code). RooLognormal(); {}. TObject* clone(const char* newname) const; { return new RooLognormal(*this,newname); }. virtual ~RooLognormal(); { }. » Last changed: Tue Jun 2 15:31:56 2015 » Last generated: 2015-06-02 15:31; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooLognormal.html:45351,variab,variable,45351,root/html604/RooLognormal.html,https://root.cern,https://root.cern/root/html604/RooLognormal.html,4,['variab'],['variable']
Modifiability,"ooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxyRooResolutionModel::xDependent/convolution variable. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooAddModel(). RooAddModel(const char* name, const char* title, const RooArgList& pdfList, const RooArgList& coefList, Bool_t ownPdfList = kFALSE); Generic constructor from list of PDFs and list of coefficients.; Each pdf list element (i) is paired with coefficient list element (i).; The number of coefficients must be either equal to the number of PDFs,; in which case extended MLL fitting is enabled, or be one less. All PDFs must inherit from RooAbsPdf. All coefficients must inherit from RooAbsReal. RooAddModel(const RooAddModel& other, const char* name = 0); Copy constructor. ~RooAddModel(); Destructor. void fixCoefNormalization(const RooArgSet& refCoefNorm); By default the interpretation of the fraction coefficients is; performed in the contextual choice of observables. This makes the; shape of the p.d.f explicitly dependent on the choice of; observables. This method instructs RooAddPdf to freeze the; interpretation of the coefficients to be done in the given set of; observables. If frozen, fractions are automatically transformed; from the reference normalization set to the contextual normalization; set by ratios of integrals. void fixCoefRange(const char* rangeName); By default the interpretation of the fraction coefficients is; performed in the default range. This make the shape of a RooAddPdf; explicitly dependent on the range of the observables. To allow; a range independent definition of the fraction this function; instructs RooAddPdf to freeze its i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAddModel.html:47044,inherit,inherit,47044,root/html534/RooAddModel.html,https://root.cern,https://root.cern/root/html534/RooAddModel.html,6,['inherit'],['inherit']
Modifiability,"ooAbsReal::derivativeRooDerivative * derivative(RooRealVar &obs, Int_t order=1, double eps=0.001)Return function representing first, second or third order derivative of this function.Definition RooAbsReal.cxx:3987; RooAbsReal::chi2FitTovirtual RooFit::OwningPtr< RooFitResult > chi2FitTo(RooDataHist &data, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={})Perform a fit to given histogram.Definition RooAbsReal.cxx:4105; RooAbsReal::asTFTF1 * asTF(const RooArgList &obs, const RooArgList &pars=RooArgList(), const RooArgSet &nset=RooArgSet()) constReturn a ROOT TF1,2,3 object bound to this RooAbsReal with given definition of observables and parame...Definition RooAbsReal.cxx:3911; RooAbsReal::_unitTString _unitUnit for objects value.Definition RooAbsReal.h:537; RooAbsReal::defaultIntegratorConfigstatic RooNumIntConfig * defaultIntegratorConfig()Returns the default numeric integration configuration for all RooAbsReals.Definition RooAbsReal.cxx:3272; RooAbsReal::readFromStreambool readFromStream(std::istream &is, bool compact, bool verbose=false) overrideRead object contents from stream (dummy for now)Definition RooAbsReal.cxx:426; RooAbsReal::matchArgsbool matchArgs(const RooArgSet &allDeps, RooArgSet &numDeps, const RooArgProxy &a) constUtility function for use in getAnalyticalIntegral().Definition RooAbsReal.cxx:3146; RooAbsReal::fillTreeBranchvoid fillTreeBranch(TTree &t) overrideFill the tree branch that associated with this object with its current value.Definition RooAbsReal.cxx:3099; RooAbsReal::printMultilinevoid printMultiline(std::ostream &os, Int_t contents, bool verbose=false, TString indent="""") const overrideStructure printing.Definition RooAbsReal.cxx:455; RooAbsReal::plotAsymOnvirtual RooPlot * plotAsymOn(RooPlot *frame, const RooAbsCategoryLValue &asymCat, PlotOpt o) constDefinition RooAbsReal.cxx:2199;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:222332,config,configuration,222332,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['config'],['configuration']
Modifiability,"ooAddModel will clone all the component models to create a composite convolution object ; Reimplemented from RooResolutionModel.; Definition at line 224 of file RooAddModel.cxx. ◆ DeclFileName(). static const char * RooAddModel::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 131 of file RooAddModel.h. ◆ doEval(). void RooAddModel::doEval ; (; RooFit::EvalContext & ; ctx); const. overridevirtual . Base function for computing multiple values of a RooAbsReal. ; Parameters. ctxAn evaluation context object . Reimplemented from RooAbsReal.; Definition at line 378 of file RooAddModel.cxx. ◆ evaluate(). double RooAddModel::evaluate ; (; ); const. overridevirtual . Calculate the current value. ; Implements RooAbsReal.; Definition at line 347 of file RooAddModel.cxx. ◆ expectedEvents(). double RooAddModel::expectedEvents ; (; const RooArgSet * ; nset); const. overridevirtual . Return expected number of events for extended likelihood calculation, which is the sum of all coefficients. ; Return the number of expected events, which is either the sum of all coefficients or the sum of the components extended terms. ; Reimplemented from RooAbsPdf.; Definition at line 569 of file RooAddModel.cxx. ◆ extendMode(). ExtendMode RooAddModel::extendMode ; (; ); const. inlineoverridevirtual . Return extended mode capabilities. ; Reimplemented from RooAbsPdf.; Definition at line 57 of file RooAddModel.h. ◆ fixCoefNormalization(). void RooAddModel::fixCoefNormalization ; (; const RooArgSet & ; refCoefNorm). By default the interpretation of the fraction coefficients is performed in the contextual choice of observables. ; This makes the shape of the p.d.f explicitly dependent on the choice of observables. This method instructs RooAddModel to freeze the interpretation of the coefficients to be done in the given set of observables. If frozen, fractions are automatically transformed from the reference normalization set to the contex",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAddModel.html:83304,extend,extended,83304,doc/master/classRooAddModel.html,https://root.cern,https://root.cern/doc/master/classRooAddModel.html,1,['extend'],['extended']
Modifiability,"ooAddModel::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from RooAbsPdf. ◆ StreamerNVirtual(). void RooAddModel::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 131 of file RooAddModel.h. ◆ updateCoefficients(). void RooAddModel::updateCoefficients ; (; AddCacheElem & ; cache, . const RooArgSet * ; nset . ); const. protected . Update the coefficient values in the given cache element: calculate new remainder fraction, normalize fractions obtained from extended ML terms to unity, and multiply the various range and dimensional corrections needed in the current use context. ; Definition at line 333 of file RooAddModel.cxx. Friends And Related Symbol Documentation. ◆ RooAddGenContext. friend class RooAddGenContext. friend . Definition at line 89 of file RooAddModel.h. Member Data Documentation. ◆ _allExtendable. bool RooAddModel::_allExtendable = false. protected . Flag indicating if all PDF components are extendable. ; Definition at line 123 of file RooAddModel.h. ◆ _codeReg. RooAICRegistry RooAddModel::_codeReg = 10. mutableprotected . ! Registry of component analytical integration codes ; Definition at line 116 of file RooAddModel.h. ◆ _coefCache. std::vector<double> RooAddModel::_coefCache. mutableprotected . ! Transient cache with transformed values of coefficients ; Definition at line 99 of file RooAddModel.h. ◆ _coefErrCount. Int_t RooAddModel::_coefErrCount. mutableprotected . ! Coefficient error counter ; Definition at line 125 of file RooAddModel.h. ◆ _coefList. RooListProxy RooAddModel::_coefList. protected . List of coefficients. ; Definition at line 119 of file RooAddModel.h. ◆ _haveLastCoef. bool RooAddModel::_haveLastCoef = false. protected . Flag indicating if last PDFs coefficient was supplied in the constructor. ; Definition at line 122 of file RooAddModel.h. ◆ _intCacheMgr. RooObjCacheManager RooAddModel::_intCacheMgr. mutableprotected . ! Manager of ca",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAddModel.html:91199,extend,extendable,91199,doc/master/classRooAddModel.html,https://root.cern,https://root.cern/doc/master/classRooAddModel.html,1,['extend'],['extendable']
Modifiability,"ooAddPdf::doEval ; (; RooFit::EvalContext & ; ctx); const. overrideprotectedvirtual . Compute addition of PDFs in batches. ; Reimplemented from RooAbsReal.; Definition at line 555 of file RooAddPdf.cxx. ◆ evaluate(). double RooAddPdf::evaluate ; (; ); const. inlineoverrideprotectedvirtual . Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ; Implements RooAbsReal.; Definition at line 121 of file RooAddPdf.h. ◆ expectedEvents(). double RooAddPdf::expectedEvents ; (; const RooArgSet * ; nset); const. overridevirtual . Return expected number of events for extended likelihood calculation, which is the sum of all coefficients. ; Return the number of expected events, which is either the sum of all coefficients or the sum of the components extended terms, multiplied with the fraction that is in the current range w.r.t the reference range. ; Reimplemented from RooAbsPdf.; Definition at line 756 of file RooAddPdf.cxx. ◆ extendMode(). ExtendMode RooAddPdf::extendMode ; (; ); const. inlineoverridevirtual . Returns ability of PDF to provide extended likelihood terms. ; Possible answers are in the enumerator RooAbsPdf::ExtendMode. This default implementation always returns CanNotBeExtended. ; Reimplemented from RooAbsPdf.; Definition at line 60 of file RooAddPdf.h. ◆ finalizeConstruction(). void RooAddPdf::finalizeConstruction ; (; ). private . Definition at line 111 of file RooAddPdf.cxx. ◆ fixCoefNormalization(). void RooAddPdf::fixCoefNormalization ; (; const RooArgSet & ; refCoefNorm). By default the interpretation of the fraction coefficients is performed in the contextual choice of observables. ; This makes the shape of the p.d.f explicitly dependent on the choice of observables. This method instructs RooAddPdf to freeze the interpretation of the coefficients to be done in the given set of observables. If frozen, fractions are automatically transformed from the reference normalization set to the contextual normalization set by ratios o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAddPdf.html:85386,extend,extendMode,85386,doc/v632/classRooAddPdf.html,https://root.cern,https://root.cern/doc/v632/classRooAddPdf.html,2,['extend'],['extendMode']
Modifiability,"ooArgList& parameters); RooFunctor(const RooAbsReal& func, const RooArgList& observables, const RooArgList& parameters, const RooArgSet& nset); virtual~RooFunctor(); RooAbsFunc&binding(); static TClass*Class(); Double_teval(const Double_t*) const; Double_teval(Double_t) const; Double_teval(const Double_t*, const Double_t*) const; virtual TClass*IsA() const; Int_tnObs() const; Int_tnPar() const; Double_toperator()(Double_t x) const; Double_toperator()(const Double_t* x) const; Double_toperator()(const Double_t* x, const Double_t* p) const; RooFunctor&operator=(const RooFunctor&); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Data Members; protected:. RooAbsFunc*_bindingFunction binding; Int_t_nobs! Number of observables ;; Int_t_npar! Number of parameters ;; RooArgSet_nsetNormalization observables; Bool_t_ownBindingDo we own the binding function ; Double_t*_x! Transfer array ;. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooFunctor(const RooAbsFunc& func). RooFunctor(const RooAbsReal& func, const RooArgList& observables, const RooArgList& parameters); Store list of observables. RooFunctor(const RooAbsReal& func, const RooArgList& observables, const RooArgList& parameters, const RooArgSet& nset); Store normalization set. RooFunctor(const RooFunctor& ). ~RooFunctor(); Destructor. Double_t eval(const Double_t* ) const. Double_t eval(Double_t ) const. Double_t eval(const Double_t* , const Double_t* ) const. Int_t nObs() const; Number of observables. Int_t nPar() const; Number of parameters;. Double_t operator()(Double_t x) const; Int_t numCall() const { return _binding->numCall() ; }; void resetNumCall() const { _binding->resetNumCall() ; }. { return eval(x) ; }. Double_t operator()(const Double_t* x, const Double_t* p) const; { return eval(x,p) ; }. Double_t operator()(const Double_t* x) const; { return eval(x) ; }. RooAbsFunc& binding(); { return *_bindi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooFunctor.html:1506,Inherit,Inheritance,1506,root/html532/RooFunctor.html,https://root.cern,https://root.cern/root/html532/RooFunctor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ooArgSet &iset, const RooCmdArg &arg1, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={});  Create an object that represents the integral of the function over one or more observables listed in iset. ;  ; template<typename... CmdArgs_t> ; RooFit::OwningPtr< RooAbsReal > createNLL (RooAbsData &data, CmdArgs_t const &... cmdArgs);  Construct representation of -log(L) of PDF with given dataset. ;  ; virtual RooAbsPdf * createProjection (const RooArgSet &iset);  Return a p.d.f that represent a projection of this p.d.f integrated over given observables. ;  ; RooFit::OwningPtr< RooAbsReal > createScanCdf (const RooArgSet &iset, const RooArgSet &nset, Int_t numScanBins, Int_t intOrder);  ; double expectedEvents (const RooArgSet &nset) const;  Return expected number of events to be used in calculation of extended likelihood. ;  ; double extendedTerm (double sumEntries, double expected, double sumEntriesW2=0.0, bool doOffset=false) const;  ; double extendedTerm (double sumEntries, RooArgSet const *nset, double sumEntriesW2=0.0, bool doOffset=false) const;  Return the extended likelihood term ( \( N_\mathrm{expect} - N_\mathrm{observed} \cdot \log(N_\mathrm{expect} \)) of this PDF for the given number of observed events. ;  ; double extendedTerm (RooAbsData const &data, bool weightSquared, bool doOffset=false) const;  Return the extended likelihood term ( \( N_\mathrm{expect} - N_\mathrm{observed} \cdot \log(N_\mathrm{expect} \)) of this PDF for the given number of observed events. ;  ; template<typename... CmdArgs_t> ; RooFit::OwningPtr< RooFitResult > fitTo (RooAbsData &data, CmdArgs_t const &... cmdArgs);  Fit PDF to given dataset. ;  ; RooFit::OwningPtr< RooDataSet > generate (const RooArgSet &whatVars, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdAr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAddPdf.html:8711,extend,extendedTerm,8711,doc/v632/classRooAddPdf.html,https://root.cern,https://root.cern/doc/v632/classRooAddPdf.html,3,['extend'],['extendedTerm']
Modifiability,"ooArgSet &iset, const RooCmdArg &arg1, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={});  Create an object that represents the integral of the function over one or more observables listed in iset. ;  ; template<typename... CmdArgs_t> ; RooFit::OwningPtr< RooAbsReal > createNLL (RooAbsData &data, CmdArgs_t const &... cmdArgs);  Construct representation of -log(L) of PDF with given dataset. ;  ; virtual RooAbsPdf * createProjection (const RooArgSet &iset);  Return a p.d.f that represent a projection of this p.d.f integrated over given observables. ;  ; RooFit::OwningPtr< RooAbsReal > createScanCdf (const RooArgSet &iset, const RooArgSet &nset, Int_t numScanBins, Int_t intOrder);  ; double expectedEvents (const RooArgSet &nset) const;  Return expected number of events to be used in calculation of extended likelihood. ;  ; double extendedTerm (double sumEntries, double expected, double sumEntriesW2=0.0, bool doOffset=false) const;  ; double extendedTerm (double sumEntries, RooArgSet const *nset, double sumEntriesW2=0.0, bool doOffset=false) const;  Return the extended likelihood term ( \( N_\mathrm{expect} - N_\mathrm{observed} \cdot \log(N_\mathrm{expect} \)) of this PDF for the given number of observed events. ;  ; double extendedTerm (RooAbsData const &data, bool weightSquared, bool doOffset=false) const;  Return the extended likelihood term ( \( N_\mathrm{expect} - N_\mathrm{observed} \cdot \log(N_\mathrm{expect} \)) of this PDF for the given number of observed events. ;  ; template<typename... CmdArgs_t> ; RooFit::OwningPtr< RooFitResult > fitTo (RooAbsData &data, CmdArgs_t const &... cmdArgs);  Fit PDF to given dataset. ;  ; virtual RooAbsGenContext * genContext (const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool verbose=false) const;  Interface function to create a generator context fr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooRealSumPdf.html:7906,extend,extendedTerm,7906,doc/v632/classRooRealSumPdf.html,https://root.cern,https://root.cern/doc/v632/classRooRealSumPdf.html,7,['extend'],['extendedTerm']
Modifiability,"ooArgSet &nset) const override;  If this pdf is operated with a fixed set of observables, return the subset of the fixed observables that are actual dependents of the external input p.d.f. ;  ; RooFit::OwningPtr< RooArgSet > actualParameters (const RooArgSet &nset) const override;  If this p.d.f is operated with a fixed set of observables, return all variables of the external input p.d.f that are not one of the cache observables. ;  ; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ; void fillCacheObject (PdfCacheElem &cachePdf) const override;  Update contents of cache histogram by resampling the input p.d.f. ;  ; const char * inputBaseName () const override;  Return the base name for cache objects, in this case the name of the cached p.d.f. ;  ; const char * payloadUniqueSuffix () const override;  ;  Protected Member Functions inherited from RooAbsCachedPdf; virtual const char * binningName () const;  ; std::string cacheNameSuffix (const RooArgSet &nset) const;  Construct string with unique suffix for cache objects based on observable names that define cache configuration. ;  ; virtual PdfCacheElem * createCache (const RooArgSet *nset) const;  ; void disableCache (bool flag);  ; void doEval (RooFit::EvalContext &) const override;  Base function for computing multiple values of a RooAbsReal. ;  ; PdfCacheElem * getCache (const RooArgSet *nset, bool recalculate=true) const;  Retrieve cache object associated with given choice of observables. ;  ; virtual TString histNameSuffix () const;  ; virtual RooAbsArg & pdfObservable (RooAbsArg &histObservable) const;  ;  Protected Member Functions inherited from RooAbsPdf;  RooAbsPdf (const RooAbsPdf &other, const char *name=nullptr);  Copy constructor. ;  ; virtual std::unique_ptr< RooAbsReal > createNLLImpl (RooAbsData &data, const RooLinkedList &cmdList);  Protected implementation of the NLL creation routine. ;  ; virtual std::unique_ptr< RooFitRe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCachedPdf.html:61524,inherit,inherited,61524,doc/master/classRooCachedPdf.html,https://root.cern,https://root.cern/doc/master/classRooCachedPdf.html,2,"['config', 'inherit']","['configuration', 'inherited']"
Modifiability,"ooArgSet &nset) const;  Get normalisation term needed to normalise the raw values returned by getVal(). ;  ; virtual double getNorm (const RooArgSet *set=nullptr) const;  Get normalisation term needed to normalise the raw values returned by getVal(). ;  ; const RooAbsReal * getNormIntegral (const RooArgSet &nset) const;  ; virtual const RooAbsReal * getNormObj (const RooArgSet *set, const RooArgSet *iset, const TNamed *rangeName=nullptr) const;  Return pointer to RooAbsReal object that implements calculation of integral over observables iset in range rangeName, optionally taking the integrand normalized over observables nset. ;  ; double getValV (const RooArgSet *set=nullptr) const override;  Return current value, normalized by integrating over the observables in nset. ;  ; virtual bool isDirectGenSafe (const RooAbsArg &arg) const;  Check if given observable can be safely generated using the pdfs internal generator mechanism (if that existsP). ;  ; bool mustBeExtended () const;  If true PDF must provide extended likelihood term. ;  ; const char * normRange () const;  ; virtual RooPlot * paramOn (RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={});  Add a box with parameter values (and errors) to the specified frame. ;  ; RooPlot * plotOn (RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}, const RooCmdArg &arg9={}, const RooCmdArg &arg10={}) const override;  Helper calling plotOn(RooPlot*, RooLinkedList&) const. ;  ; RooPlot * plotOn (RooPlot *frame, RooLinkedList &cmdList) const override;  Plot (project) PDF on specified frame. ;  ; GenSpec * prepareMultiGen (const RooArgSet &whatVars, const RooCmdArg &arg1={}, const RooCmdArg &",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classxRooProjectedPdf.html:10953,extend,extended,10953,doc/master/classxRooProjectedPdf.html,https://root.cern,https://root.cern/doc/master/classxRooProjectedPdf.html,3,['extend'],['extended']
Modifiability,"ooArgSet & ; iset, . const RooArgSet & ; nset = {} . ). Calls createRunningIntegral(const RooArgSet&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&) ; Definition at line 3706 of file RooAbsReal.cxx. ◆ createRunningIntegral() [2/2]. RooAbsReal::createRunningIntegral ; (; const RooArgSet & ; iset, . const RooCmdArg & ; arg1, . const RooCmdArg & ; arg2 = {}, . const RooCmdArg & ; arg3 = {}, . const RooCmdArg & ; arg4 = {}, . const RooCmdArg & ; arg5 = {}, . const RooCmdArg & ; arg6 = {}, . const RooCmdArg & ; arg7 = {}, . const RooCmdArg & ; arg8 = {} . ). Create an object that represents the running integral of the function over one or more observables listed in iset, i.e. . \[; \int_{x_\mathrm{lo}}^x f(x') \, \mathrm{d}x'; \]. The actual integration calculation is only performed when the return object is evaluated. The name of the integral object is automatically constructed from the name of the input function, the variables it integrates and the range integrates over. The default strategy to calculate the running integrals is. If the integrand (this object) supports analytical integration, construct an integral object that calculate the running integrals value by calculating the analytical integral each time the running integral object is evaluated; If the integrand (this object) requires numeric integration to construct the running integral create an object of class RooNumRunningInt which first samples the entire function and integrates the sampled function numerically. This method has superior performance as there is no need to perform a full (numeric) integration for each evaluation of the running integral object, but only when one of its parameters has changed. The choice of strategy can be changed with the ScanAll() argument, which forces the use of the scanning technique implemented in RooNumRunningInt for all use cases, and with the ScanNone() argument which forces",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsReal.html:93873,variab,variables,93873,doc/master/classRooAbsReal.html,https://root.cern,https://root.cern/doc/master/classRooAbsReal.html,1,['variab'],['variables']
Modifiability,"ooArgSet & ; iset, . const RooArgSet & ; nset = {} . ). Calls createRunningIntegral(const RooArgSet&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&) ; Definition at line 3782 of file RooAbsReal.cxx. ◆ createRunningIntegral() [2/2]. RooAbsReal::createRunningIntegral ; (; const RooArgSet & ; iset, . const RooCmdArg & ; arg1, . const RooCmdArg & ; arg2 = {}, . const RooCmdArg & ; arg3 = {}, . const RooCmdArg & ; arg4 = {}, . const RooCmdArg & ; arg5 = {}, . const RooCmdArg & ; arg6 = {}, . const RooCmdArg & ; arg7 = {}, . const RooCmdArg & ; arg8 = {} . ). Create an object that represents the running integral of the function over one or more observables listed in iset, i.e. . \[; \int_{x_\mathrm{lo}}^x f(x') \, \mathrm{d}x'; \]. The actual integration calculation is only performed when the return object is evaluated. The name of the integral object is automatically constructed from the name of the input function, the variables it integrates and the range integrates over. The default strategy to calculate the running integrals is. If the integrand (this object) supports analytical integration, construct an integral object that calculate the running integrals value by calculating the analytical integral each time the running integral object is evaluated; If the integrand (this object) requires numeric integration to construct the running integral create an object of class RooNumRunningInt which first samples the entire function and integrates the sampled function numerically. This method has superior performance as there is no need to perform a full (numeric) integration for each evaluation of the running integral object, but only when one of its parameters has changed. The choice of strategy can be changed with the ScanAll() argument, which forces the use of the scanning technique implemented in RooNumRunningInt for all use cases, and with the ScanNone() argument which forces",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAbsReal.html:95141,variab,variables,95141,doc/v632/classRooAbsReal.html,https://root.cern,https://root.cern/doc/v632/classRooAbsReal.html,1,['variab'],['variables']
Modifiability,"ooArgSet & ; observables, . RooAbsPdf & ; pdf, . RooArgList & ; obsTerms, . RooArgList & ; constraints . ). Definition at line 91 of file RooStatsUtils.cxx. ◆ FactorizePdf() [2/2]. void RooStats::FactorizePdf ; (; RooStats::ModelConfig & ; model, . RooAbsPdf & ; pdf, . RooArgList & ; obsTerms, . RooArgList & ; constraints . ). Definition at line 124 of file RooStatsUtils.cxx. ◆ FillTree(). void RooStats::FillTree ; (; TTree & ; myTree, . const RooDataSet & ; data . ). Definition at line 297 of file RooStatsUtils.cxx. ◆ GetAsTTree(). TTree * RooStats::GetAsTTree ; (; TString ; name, . TString ; desc, . const RooDataSet & ; data . ). Create a TTree with the given name and description. All RooRealVars in the RooDataSet are represented as branches that contain values of type double. ; Definition at line 321 of file RooStatsUtils.cxx. ◆ GetGlobalRooStatsConfig(). RooStatsConfig & RooStats::GetGlobalRooStatsConfig ; (; ). Retrieve the config object which can be used to set flags for things like offsetting the likelihood or using the error wall for the minimiser. ; Definition at line 54 of file RooStatsUtils.cxx. ◆ IsNLLOffset(). bool RooStats::IsNLLOffset ; (; ). function returning if the flag to check if the flag to use NLLOffset is set ; Test of RooStats should by default offset NLL calculations. ; Definition at line 87 of file RooStatsUtils.cxx. ◆ MakeNuisancePdf() [1/2]. RooAbsPdf * RooStats::MakeNuisancePdf ; (; const RooStats::ModelConfig & ; model, . const char * ; name . ). Definition at line 147 of file RooStatsUtils.cxx. ◆ MakeNuisancePdf() [2/2]. RooAbsPdf * RooStats::MakeNuisancePdf ; (; RooAbsPdf & ; pdf, . const RooArgSet & ; observables, . const char * ; name . ). extract constraint terms from pdf ; Definition at line 135 of file RooStatsUtils.cxx. ◆ MakeReducedWorkspace(). RooWorkspace * RooStats::MakeReducedWorkspace ; (; RooWorkspace * ; oldWS, . const char * ; newName, . bool ; copySnapshots, . const char * ; mcname, . const char * ; newmcname, . bool ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceRooStats.html:14022,config,config,14022,doc/master/namespaceRooStats.html,https://root.cern,https://root.cern/doc/master/namespaceRooStats.html,1,['config'],['config']
Modifiability,"ooArgSet* allVars, RooArgSet& projectedVars, Bool_t silent) const; Utility function for plotOn() that constructs the set of; observables to project when plotting ourselves as function of; 'plotVar'. 'allVars' is the list of variables that must be; projected, but may contain variables that we do not depend on. If; 'silent' is cleared, warnings about inconsistent input parameters; will be printed. Bool_t isSelectedComp() const; If true, the current pdf is a selected component (for use in plotting). void globalSelectComp(Bool_t flag); Global switch controlling the activation of the selectComp() functionality. RooAbsFunc * bindVars(const RooArgSet& vars, const RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE) const; Create an interface adaptor f(vars) that binds us to the specified variables; (in arbitrary order). For example, calling bindVars({x1,x3}) on an object; F(x1,x2,x3,x4) returns an object f(x1,x3) that is evaluated using the; current values of x2 and x4. The caller takes ownership of the returned adaptor. void copyCache(const RooAbsArg* source, Bool_t valueOnly = kFALSE); Copy the cached value of another RooAbsArg to our cache.; Warning: This function copies the cached values of source,; it is the callers responsibility to make sure the cache is clean. void attachToTree(TTree& t, Int_t bufSize = 32000); Attach object to a branch of given TTree. By default it will; register the internal value cache RooAbsReal::_value as branch; buffer for a Double_t tree branch with the same name as this; object. If no Double_t branch is found with the name of this; object, this method looks for a Float_t Int_t, UChar_t and UInt_t; branch in that order. If any of these are found the buffer for; that branch is set to a correctly typed conversion buffer in this; RooRealVar. A flag is set that will cause copyCache to copy the; object value from the appropriate conversion buffer instead of; the _value buffer. void fillTreeBranch(TTree& t); Fill the tree branch that associated with ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsReal.html:55515,adapt,adaptor,55515,root/html526/RooAbsReal.html,https://root.cern,https://root.cern/root/html526/RooAbsReal.html,3,['adapt'],['adaptor']
Modifiability,"ooArgSet* allVars, RooArgSet& projectedVars, Bool_t silent) const; Utility function for plotOn() that constructs the set of; observables to project when plotting ourselves as function of; 'plotVar'. 'allVars' is the list of variables that must be; projected, but may contain variables that we do not depend on. If; 'silent' is cleared, warnings about inconsistent input parameters; will be printed. Bool_t isSelectedComp() const; If true, the current pdf is a selected component (for use in plotting). void globalSelectComp(Bool_t flag); Global switch controlling the activation of the selectComp() functionality. RooAbsFunc * bindVars(const RooArgSet& vars, const RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE) const; Create an interface adaptor f(vars) that binds us to the specified variables; (in arbitrary order). For example, calling bindVars({x1,x3}) on an object; F(x1,x2,x3,x4) returns an object f(x1,x3) that is evaluated using the; current values of x2 and x4. The caller takes ownership of the returned adaptor. void copyCache(const RooAbsArg* source, Bool_t valueOnly = kFALSE, Bool_t setValDirty = kTRUE); Copy the cached value of another RooAbsArg to our cache.; Warning: This function copies the cached values of source,; it is the callers responsibility to make sure the cache is clean. void attachToVStore(RooVectorDataStore& vstore). void attachToTree(TTree& t, Int_t bufSize = 32000); Attach object to a branch of given TTree. By default it will; register the internal value cache RooAbsReal::_value as branch; buffer for a Double_t tree branch with the same name as this; object. If no Double_t branch is found with the name of this; object, this method looks for a Float_t Int_t, UChar_t and UInt_t; branch in that order. If any of these are found the buffer for; that branch is set to a correctly typed conversion buffer in this; RooRealVar. A flag is set that will cause copyCache to copy the; object value from the appropriate conversion buffer instead of; the _value buff",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooAbsReal.html:57030,adapt,adaptor,57030,root/html532/RooAbsReal.html,https://root.cern,https://root.cern/root/html532/RooAbsReal.html,7,['adapt'],['adaptor']
Modifiability,"ooArgSet* dset, Bool_t adjustProxies = kTRUE) const; Double_tRooAbsReal::traceEval(const RooArgSet* set) const; virtual Bool_tRooResolutionModel::traceEvalHook(Double_t value) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). Data Members; public:. enum RooTruthBasis { noBasis; expBasisMinus; expBasisSum; expBasisPlus; sinBasisMinus; sinBasisSum; sinBasisPlus; cosBasisMinus; cosBasisSum; cosBasisPlus; linBasisPlus; quadBasisPlus; coshBasisMinus; coshBasisSum; coshBasisPlus; sinhBasisMinus; sinhBasisSum; sinhBasisPlus; genericBasis; };; enum BasisType { none; expBasis; sinBasis; cosBasis; linBasis; quadBasis; coshBasis; sinhBasis; };; enum BasisSign { Both; Plus; Minus; };; enum RooAbsPdf::ExtendMode { CanNotBeExtended; CanBeExtended; MustBeExtended; };; enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. RooFormulaVar*RooResolutionModel::_basisBasis function convolved with this resolution model; Int_tRooResolutionModel::_basisCodeIdentifier code for selected basis function; set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); UChar_tRooAbsReal:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooTruthModel.html:37015,Extend,ExtendMode,37015,root/html532/RooTruthModel.html,https://root.cern,https://root.cern/root/html532/RooTruthModel.html,2,"['Config', 'Extend']","['ConfigChange', 'ExtendMode']"
Modifiability,"ooArgSet* getAllConstraints(const RooArgSet& observables, RooArgSet& constrainedParams, Bool_t stripDisconnected = kTRUE) const; This helper function finds and collects all constraints terms of all coponent p.d.f.s; and returns a RooArgSet with all those terms. void clearEvalError(); Clear the evaluation error flag. Bool_t evalError(); Return the evaluation error flag. void raiseEvalError(); Raise the evaluation error flag. RooNumGenConfig* defaultGeneratorConfig(); Returns the default numeric MC generator configuration for all RooAbsReals. RooNumGenConfig* specialGeneratorConfig() const; Returns the specialized integrator configuration for _this_ RooAbsReal.; If this object has no specialized configuration, a null pointer is returned. RooNumGenConfig* specialGeneratorConfig(Bool_t createOnTheFly); Returns the specialized integrator configuration for _this_ RooAbsReal.; If this object has no specialized configuration, a null pointer is returned,; unless createOnTheFly is kTRUE in which case a clone of the default integrator; configuration is created, installed as specialized configuration, and returned. const RooNumGenConfig* getGeneratorConfig() const; Return the numeric MC generator configuration used for this object. If; a specialized configuration was associated with this object, that configuration; is returned, otherwise the default configuration for all RooAbsReals is returned. void setGeneratorConfig(const RooNumGenConfig& config); Set the given configuration as default numeric MC generator; configuration for this object. void setGeneratorConfig(); Remove the specialized numeric MC generator configuration associated; with this object. void setNormRange(const char* rangeName). void setNormRangeOverride(const char* rangeName). GenSpec* prepareMultiGen(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAbsPdf.html:78007,config,configuration,78007,root/html528/RooAbsPdf.html,https://root.cern,https://root.cern/root/html528/RooAbsPdf.html,27,['config'],['configuration']
Modifiability,"ooArgSet* getParameters(const RooAbsData* set, Bool_t stripDisconnected); Create a list of leaf nodes in the arg tree starting with; ourself as top node that don't match any of the names of the variable list; of the supplied data set (the dependents). The caller of this; function is responsible for deleting the returned argset.; The complement of this function is getObservables(). void addParameters(RooArgSet& params, const RooArgSet* nset = 0, Bool_t stripDisconnected = kTRUE) const; INTERNAL helper function for getParameters(). RooArgSet* getParameters(const RooArgSet* nset, Bool_t stripDisconnected); Create a list of leaf nodes in the arg tree starting with; ourself as top node that don't match any of the names the args in the; supplied argset. The caller of this function is responsible; for deleting the returned argset. The complement of this function; is getObservables(). RooArgSet* getObservables(const RooAbsData* set); Create a list of leaf nodes in the arg tree starting with; ourself as top node that match any of the names of the variable list; of the supplied data set (the dependents). The caller of this; function is responsible for deleting the returned argset.; The complement of this function is getObservables(). RooArgSet* getObservables(const RooArgSet* dataList, Bool_t valueOnly); Create a list of leaf nodes in the arg tree starting with; ourself as top node that match any of the names the args in the; supplied argset. The caller of this function is responsible; for deleting the returned argset. The complement of this function; is getObservables(). RooArgSet* getComponents() const; Return a RooArgSet with all component (branch nodes) of the; expression tree headed by this object. Bool_t checkObservables(const RooArgSet* nset) const; Overloadable function in which derived classes can implement; consistency checks of the variables. If this function returns; true, indicating an error, the fitter or generator will abort. Bool_t recursiveCheckObservables(co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsArg.html:21620,variab,variable,21620,root/html526/RooAbsArg.html,https://root.cern,https://root.cern/root/html526/RooAbsArg.html,1,['variab'],['variable']
Modifiability,"ooArgSet* nset = 0) const; RooArgSet*RooAbsArg::getVariables(Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; virtual Bool_tRooAbsArg::hasRange(const char*) const; static Bool_tRooAbsReal::hideOffset(); RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tRooAbsArg::inRange(const char*) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual voidRooAbsArg::ioStreamerPass2(); static voidRooAbsArg::ioStreamerPass2Finalize(); virtual TClass*IsA() const; virtual Bool_tRooAbsReal::isBinnedDistribution(const RooArgSet&) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tRooAbsArg::isLValue() const; virtual Bool_tRooAbsReal::isOffsetting() const; Bool_tTObject::IsOnHeap() const; Bool_tRooAbsArg::isShapeDirty() const; Bool_tRooAbsArg::isShapeServer(const RooAbsArg& arg) const; Bool_tRooAbsArg::isShapeServer(const char* n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooConvCoefVar.html:16066,Inherit,InheritsFrom,16066,root/html534/RooConvCoefVar.html,https://root.cern,https://root.cern/root/html534/RooConvCoefVar.html,6,['Inherit'],['InheritsFrom']
Modifiability,"ooArgSet*RooAbsMCStudyModule::genParams(); const RooDataSet*RooAbsMCStudyModule::genProtoData(); RooAbsData*RooAbsMCStudyModule::genSample(); voidTObject::MakeZombie(); RooRealVar*RooAbsMCStudyModule::nllVar(); Double_tRooAbsMCStudyModule::numExpGen(); RooArgSet*RooAbsMCStudyModule::projDeps(); Bool_tRooAbsMCStudyModule::randProto(); RooFitResult*RooAbsMCStudyModule::refit(RooAbsData* inGenSample = 0); Bool_tRooAbsMCStudyModule::verboseGen(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. RooDataSet*_dataSummary dataset to store results; RooRealVar*_dll0hContainer variable for delta NLL ; RooRealVar*_nll0hContainer variable for NLL result on null hypothesis; Double_t_nullValueNumeric value of Nsignal parameter representing the null hypothesis; string_parNameName of Nsignal parameter; RooRealVar*_sig0hContainer variable for NLL result with signal. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooDLLSignificanceMCSModule(const RooRealVar& param, Double_t nullHypoValue = 0); Constructor of module with parameter to be interpreted as nSignal and the value of the; null hypothesis for nSignal (usually zero). RooDLLSignificanceMCSModule(const char* parName, Double_t nullHypoValue = 0); Constructor of module with parameter name to be interpreted as nSignal and the value of the; null hypothesis for nSignal (usually zero). RooDLLSignificanceMCSModule(const RooDLLSignificanceMCSModule& other); Copy constructor. Bool_t initializeInstance(); Initialize module after attachment to RooMCStudy object. Bool_t initializeRun(Int_t ); Initialize module at beginning of RooCMStudy run. RooDataSet* finalizeRun(); Return auxiliar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooDLLSignificanceMCSModule.html:7627,variab,variable,7627,root/html528/RooDLLSignificanceMCSModule.html,https://root.cern,https://root.cern/root/html528/RooDLLSignificanceMCSModule.html,18,['variab'],['variable']
Modifiability,"ooArgSet*RooAbsMCStudyModule::genParams(); const RooDataSet*RooAbsMCStudyModule::genProtoData(); RooAbsData*RooAbsMCStudyModule::genSample(); voidTObject::MakeZombie(); RooRealVar*RooAbsMCStudyModule::nllVar(); Double_tRooAbsMCStudyModule::numExpGen(); RooArgSet*RooAbsMCStudyModule::projDeps(); Bool_tRooAbsMCStudyModule::randProto(); RooFitResult*RooAbsMCStudyModule::refit(RooAbsData* inGenSample = 0); Bool_tRooAbsMCStudyModule::verboseGen(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. RooDataSet*_dataSummary dataset to store results; RooRealVar*_dll0hContainer variable for delta NLL ; RooRealVar*_nll0hContainer variable for NLL result on null hypothesis; Double_t_nullValueNumeric value of Nsignal parameter representing the null hypothesis; string_parNameName of Nsignal parameter; RooRealVar*_sig0hContainer variable for NLL result with signal. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooDLLSignificanceMCSModule(const RooRealVar& param, Double_t nullHypoValue); Constructor of module with parameter to be interpreted as nSignal and the value of the; null hypothesis for nSignal (usually zero). RooDLLSignificanceMCSModule(const char* parName, Double_t nullHypoValue); Constructor of module with parameter name to be interpreted as nSignal and the value of the; null hypothesis for nSignal (usually zero). RooDLLSignificanceMCSModule(const RooDLLSignificanceMCSModule& other); Copy constructor. Bool_t initializeInstance(); Initialize module after attachment to RooMCStudy object. Bool_t initializeRun(Int_t ); Initialize module at beginning of RooCMStudy run. RooDataSet* finalizeRun(); Return auxiliary datase",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooDLLSignificanceMCSModule.html:7641,variab,variable,7641,root/html526/RooDLLSignificanceMCSModule.html,https://root.cern,https://root.cern/root/html526/RooDLLSignificanceMCSModule.html,3,['variab'],['variable']
Modifiability,"ooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,unsigned int,double,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument refer",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction3PdfBinding_double_unsigned_int_double_double_.html:44756,config,configuration,44756,root/html602/RooCFunction3PdfBinding_double_unsigned_int_double_double_.html,https://root.cern,https://root.cern/root/html602/RooCFunction3PdfBinding_double_unsigned_int_double_double_.html,4,['config'],['configuration']
Modifiability,"ooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,unsigned int,double,unsigned int>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction3PdfBinding_double_unsigned_int_double_unsigned_int_.html:44822,config,configuration,44822,root/html602/RooCFunction3PdfBinding_double_unsigned_int_double_unsigned_int_.html,https://root.cern,https://root.cern/root/html602/RooCFunction3PdfBinding_double_unsigned_int_double_unsigned_int_.html,4,['config'],['configuration']
Modifiability,"ooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,unsigned int,unsigned int,double>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction3PdfBinding_double_unsigned_int_unsigned_int_double_.html:44822,config,configuration,44822,root/html602/RooCFunction3PdfBinding_double_unsigned_int_unsigned_int_double_.html,https://root.cern,https://root.cern/root/html602/RooCFunction3PdfBinding_double_unsigned_int_unsigned_int_double_.html,4,['config'],['configuration']
Modifiability,"ooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction4Ref<double,double,double,double,bool>funcFunction pointer reference; RooRealProxywArgument reference; RooRealProxyxArgument reference; RooRealProxyyArgument refere",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction4PdfBinding_double_double_double_double_bool_.html:44761,config,configuration,44761,root/html602/RooCFunction4PdfBinding_double_double_double_double_bool_.html,https://root.cern,https://root.cern/root/html602/RooCFunction4PdfBinding_double_double_double_double_bool_.html,4,['config'],['configuration']
Modifiability,"ooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction4Ref<double,double,double,double,double>funcFunction pointer reference; RooRealProxywArgument reference; RooRealProxyxArgument reference; RooRealProxyyArgument refe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction4PdfBinding_double_double_double_double_double_.html:44783,config,configuration,44783,root/html602/RooCFunction4PdfBinding_double_double_double_double_double_.html,https://root.cern,https://root.cern/root/html602/RooCFunction4PdfBinding_double_double_double_double_double_.html,4,['config'],['configuration']
Modifiability,"ooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction4Ref<double,double,double,double,int>funcFunction pointer reference; RooRealProxywArgument reference; RooRealProxyxArgument reference; RooRealProxyyArgument referen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction4PdfBinding_double_double_double_double_int_.html:44750,config,configuration,44750,root/html602/RooCFunction4PdfBinding_double_double_double_double_int_.html,https://root.cern,https://root.cern/root/html602/RooCFunction4PdfBinding_double_double_double_double_int_.html,4,['config'],['configuration']
Modifiability,"ooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,double,double,bool>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction3PdfBinding_double_double_double_bool_.html:38717,config,configuration,38717,root/html526/RooCFunction3PdfBinding_double_double_double_bool_.html,https://root.cern,https://root.cern/root/html526/RooCFunction3PdfBinding_double_double_double_bool_.html,2,['config'],['configuration']
Modifiability,"ooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; TIterator*_pdfItr!; RooListProxy_pdfList; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; RooMomentMorph::Setting_setting; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; bool_useHorizMorph; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; TIterator*_varItr! do not persist; RooSetProxy_varList; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxym.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooMomentMorph.html:42910,config,configuration,42910,root/html534/RooMomentMorph.html,https://root.cern,https://root.cern/root/html534/RooMomentMorph.html,4,['config'],['configuration']
Modifiability,"ooArgSet_allDependentsList of generate + prototype dependents; Bool_t_binGenDataBin data between generating and fitting; Bool_t_canAddFitResultsAllow adding of external fit results?; RooAbsGenContext*_constrGenContextGenerator context for constraints p.d.f; RooAbsPdf*_constrPdfConstraints p.d.f; RooArgSet_dependentsList of dependents ; Bool_t_extendedGenAdd poisson term to number of events to generate?; RooArgSet*_fitInitParamsList of initial values of fit parameters; RooAbsPdf*_fitModelFit model ; RooLinkedList_fitOptListFit option command list ; TString_fitOptionsFit options string; RooDataSet*_fitParDataData set of fit parameters of each sample; RooArgSet*_fitParamsList of actual fit parameters; TList_fitResListList of RooFitResult fit output objects; RooAbsGenContext*_genContextGenerator context ; TList_genDataListList of generated data sample; RooArgSet*_genInitParamsList of originalgenerator parameters; RooAbsPdf*_genModelGenerator model ; RooDataSet*_genParDataList of of generated parameters of each sample; RooArgSet*_genParamsList of actual generator parameters; const RooDataSet*_genProtoDataGenerator prototype data set; RooAbsData*_genSampleCurrently generated sample ; list<RooAbsMCStudyModule*>_modListList of additional study modules ;; Double_t_nExpGenNumber of expected events to generate in extended mode; RooRealVar*_ngenVar; RooRealVar*_nllVar; Bool_t_perExptGenParamsDo generation parameter change per event?; RooArgSet_projDepsList of projected dependents in fit; Bool_t_randProtoRandomize order of prototype data access; Bool_t_silenceSilent running mode?; Bool_t_verboseGenVerbose generation?; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooMCStudy(const RooAbsPdf& model, const RooArgSet& observables, RooCmdArg arg1 = RooCmdArg::none(), RooCmdArg arg2 = RooCmdArg::none(), RooCmdArg arg3 = RooCmdArg::none(), RooCmdArg arg4 = RooCmdArg::n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooMCStudy.html:11676,extend,extended,11676,root/html526/RooMCStudy.html,https://root.cern,https://root.cern/root/html526/RooMCStudy.html,1,['extend'],['extended']
Modifiability,"ooArgSet_allDependentsList of generate + prototype dependents; Bool_t_binGenDataBin data between generating and fitting; Bool_t_canAddFitResultsAllow adding of external fit results?; RooAbsGenContext*_constrGenContextGenerator context for constraints p.d.f; RooAbsPdf*_constrPdfConstraints p.d.f; RooArgSet_dependentsList of dependents ; Bool_t_extendedGenAdd poisson term to number of events to generate?; RooArgSet*_fitInitParamsList of initial values of fit parameters; RooAbsPdf*_fitModelFit model ; RooLinkedList_fitOptListFit option command list ; TString_fitOptionsFit options string; RooDataSet*_fitParDataData set of fit parameters of each sample; RooArgSet*_fitParamsList of actual fit parameters; TList_fitResListList of RooFitResult fit output objects; RooAbsGenContext*_genContextGenerator context ; TList_genDataListList of generated data sample; RooArgSet*_genInitParamsList of originalgenerator parameters; RooAbsPdf*_genModelGenerator model ; RooDataSet*_genParDataList of of generated parameters of each sample; RooArgSet*_genParamsList of actual generator parameters; const RooDataSet*_genProtoDataGenerator prototype data set; RooAbsData*_genSampleCurrently generated sample ; list<RooAbsMCStudyModule*>_modListList of additional study modules ;; Double_t_nExpGenNumber of expected events to generate in extended mode; RooRealVar*_ngenVar; RooRealVar*_nllVar; Bool_t_perExptGenParamsDo generation parameter change per event?; RooArgSet_projDepsList of projected dependents in fit; Bool_t_randProtoRandomize order of prototype data access; Bool_t_silenceSilent running mode?; Bool_t_verboseGenVerbose generation?; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooMCStudy(const RooAbsPdf& model, const RooArgSet& observables, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const Ro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooMCStudy.html:11718,extend,extended,11718,root/html528/RooMCStudy.html,https://root.cern,https://root.cern/root/html528/RooMCStudy.html,6,['extend'],['extended']
Modifiability,"ooArgSetfAlternateParamsRooArgSet specifying alternate parameters for hypothesis test // Is it used ????; RooArgSetfConditionalObsRooArgSet specifying the conditional observables; RooAbsData*fData; RooArgSetfNuisParamsRooArgSet specifying nuisance parameters for interval; RooArgSetfNullParamsRooArgSet specifying null parameters for hypothesis test; RooArgSetfPOIRooArgSet specifying parameters of interest for interval; RooAbsPdf*fPdf; Double_tfSizesize of the test (eg. specified rate of Type I error). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; CombinedCalculator(); {}. CombinedCalculator(RooAbsData& data, RooAbsPdf& pdf, const RooArgSet& paramsOfInterest, Double_t size = 0.050000000000000003, const RooArgSet* nullParams = 0, const RooArgSet* altParams = 0, const RooArgSet* nuisParams = 0). SetTestSize(Double_t size). CombinedCalculator(RooAbsData& data, const RooStats::ModelConfig& model, Double_t size = 0.050000000000000003); constructor from data and model configuration. SetModel(const RooStats::ModelConfig& model). virtual ~CombinedCalculator(); destructor. { }. ConfInterval* GetInterval() const; Main interface to get a ConfInterval, pure virtual. HypoTestResult* GetHypoTest() const; main interface to get a HypoTestResult, pure virtual. void SetConfidenceLevel(Double_t cl); set the confidence level for the interval (eg. 0.95 for a 95% Confidence Interval). {fSize = 1.-cl;}. Double_t Size() const; Get the size of the test (eg. rate of Type I error). {return fSize;}. Double_t ConfidenceLevel() const; Get the Confidence level for the test. {return 1.-fSize;}. void SetData(RooAbsData& data); Set the DataSet, add to the the workspace if not already there. void SetNullModel(const RooStats::ModelConfig& ). void SetAlternateModel(const RooStats::ModelConfig& ). void SetPdf(RooAbsPdf& pdf); specific setting - keep for convenience- some of them could be removed; Set the Pdf. { fPdf = &pdf; }. void SetParameters(const RooArgSet&",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__CombinedCalculator.html:5169,config,configuration,5169,root/html602/RooStats__CombinedCalculator.html,https://root.cern,https://root.cern/root/html602/RooStats__CombinedCalculator.html,4,['config'],['configuration']
Modifiability,"ooArgusBG(""argus"", ""argus"", m, m0, k); ; # Sample 1000 events in m from argus; data = argus.generate({m}, 1000); ; # Plot model and data; # --------------------------------------; ; frame1 = m.frame(Bins=40, Title=""Argus model and data""); data.plotOn(frame1); argus.plotOn(frame1); ; # Fit model to data; # ---------------------------------; ; # The ARGUS background shape has a sharp kinematic cutoff at m=m0; # and is prone to evaluation errors if the cutoff parameter m0; # is floated: when the pdf cutoff value is lower than that in data; # events with m>m0 will have zero probability; ; # Perform unbinned ML fit. Print detailed error messages for up to; # 10 events per likelihood evaluation. The default error handling strategy; # is to return a very high value of the likelihood to MINUIT if errors occur,; # which will force MINUIT to retreat from the problematic area; ; argus.fitTo(data, PrintEvalErrors=10); ; # Perform another fit. In self configuration only the number of errors per; # likelihood evaluation is shown, it is greater than zero. The; # EvalErrorWall(kFALSE) arguments disables the default error handling strategy; # and will cause the actual (problematic) value of the likelihood to be passed; # to MINUIT.; #; # NB: Use of self option is NOT recommended as default strategt as broken -log(L) values; # can often be lower than 'good' ones because offending events are removed.; # ROOT.This may effectively create a False minimum in problem areas. ROOT.This is clearly; # illustrated in the second plot; ; m0.setError(0.1); argus.fitTo(data, PrintEvalErrors=0, EvalErrorWall=False); ; # Plot likelihood as function of m0; # ------------------------------------------------------------------; ; # Construct likelihood function of model and data; nll = argus.createNLL(data); ; # Plot likelihood in m0 in range that includes problematic values; # In self configuration no messages are printed for likelihood evaluation errors,; # but if an likelihood value evaluates with err",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf606__nllerrorhandling_8py.html:1633,config,configuration,1633,doc/master/rf606__nllerrorhandling_8py.html,https://root.cern,https://root.cern/doc/master/rf606__nllerrorhandling_8py.html,1,['config'],['configuration']
Modifiability,"ooCachedReal() [4/4]. RooCachedReal::RooCachedReal ; (; const RooCachedReal & ; other, . const char * ; name = nullptr . ). Copy constructor. ; Definition at line 87 of file RooCachedReal.cxx. Member Function Documentation. ◆ actualObservables(). RooFit::OwningPtr< RooArgSet > RooCachedReal::actualObservables ; (; const RooArgSet & ; nset); const. overrideprotectedvirtual . If this pdf is operated with a fixed set of observables, return the subset of the fixed observables that are actual dependents of the external input p.d.f. ; If this p.d.f is operated without a fixed set of cache observables, return the actual observables of the external input p.d.f given the choice of observables defined in nset ; Implements RooAbsCachedReal.; Definition at line 165 of file RooCachedReal.cxx. ◆ actualParameters(). RooFit::OwningPtr< RooArgSet > RooCachedReal::actualParameters ; (; const RooArgSet & ; nset); const. overrideprotectedvirtual . If this p.d.f is operated with a fixed set of observables, return all variables of the external input p.d.f that are not one of the cache observables. ; If this p.d.f is operated in automatic mode, return the parameters of the external input p.d.f ; Implements RooAbsCachedReal.; Definition at line 178 of file RooCachedReal.cxx. ◆ cacheSource(). bool RooCachedReal::cacheSource ; (; ); const. inline . Definition at line 42 of file RooCachedReal.h. ◆ Class(). static TClass * RooCachedReal::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * RooCachedReal::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t RooCachedReal::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 72 of file RooCachedReal.h. ◆ clone(). TObject * RooCachedReal::clone ; (; const char * ; newname); const. inlineoverridevirtual . Implements RooAbsArg.; Definition at line 28 of file RooCachedReal.h. ◆ createCache(). RooAbsCachedReal::FuncC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCachedReal.html:65704,variab,variables,65704,doc/master/classRooCachedReal.html,https://root.cern,https://root.cern/doc/master/classRooCachedReal.html,1,['variab'],['variables']
Modifiability,"ooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}) constAs RooAbsPdf::generateBinned(const RooArgSet&, const RooCmdArg&,const RooCmdArg&, const RooCmdArg&,...Definition RooAbsPdf.h:110; RooAbsPdf::createProjectionvirtual RooAbsPdf * createProjection(const RooArgSet &iset)Return a p.d.f that represent a projection of this p.d.f integrated over given observables.Definition RooAbsPdf.cxx:2446; RooArgListRooArgList is a container object that can hold multiple RooAbsArg objects.Definition RooArgList.h:22; RooFFTConvPdfPDF for the numerical (FFT) convolution of two PDFs.Definition RooFFTConvPdf.h:25; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooGenericPdfImplementation of a probability density function that takes a RooArgList of servers and a C++ express...Definition RooGenericPdf.h:25; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::SetTitlevoid SetTitle(const char *title) overrideChange/set the title.Definition TH1.cxx:6718; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf211__paramconv_8C.html:4688,variab,variable,4688,doc/master/rf211__paramconv_8C.html,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8C.html,1,['variab'],['variable']
Modifiability,"ooCmdArg & ; arg7 = {}, . const RooCmdArg & ; arg8 = {} . ). virtual . Perform a \( \chi^2 \) fit to given histogram. ; By default the fit is executed through the MINUIT commands MIGRAD, HESSE in succession; The following named arguments are supported. Options to control construction of chi2 . Extended(bool flag) Only applicable when fitting a RooAbsPdf. Scale the normalized pdf by the number of events predicted by the model instead of scaling by the total data weight. This imposes a constraint on the predicted number of events analogous to the extended term in a likelihood fit.; If you don't pass this command, an extended fit will be done by default if the pdf makes a prediction on the number of events (in RooFit jargon, ""if the pdf can be extended"").; Passing Extended(true) when the the pdf makes no prediction on the expected number of events will result in error messages, and the chi2 will fall back to the total data weight to scale the normalized pdf.; There are cases where the fit must be done in extended mode. This happens for example when you have a RooAddPdf where the coefficients represent component yields. If the fit is not extended, these coefficients will not be well-defined, as the RooAddPdf always normalizes itself. If you pass Extended(false) in such a case, an error will be printed and you'll most likely get garbage results. . Range(const char* name) Fit only data inside range with given name . Range(double lo, double hi) Fit only data inside given range. A range named ""fit"" is created on the fly on all observables. Multiple comma separated range names can be specified. . NumCPU(int num) Parallelize NLL calculation on num CPUs . Optimize(bool flag) Activate constant term optimization (on by default) . IntegrateBins() Integrate PDF within each bin. This sets the desired precision. Options to control flow of fit procedure . InitialHesse(bool flag) Flag controls if HESSE before MIGRAD as well, off by default . Hesse(bool flag) Flag controls if HESSE is ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAbsReal.html:70132,extend,extended,70132,doc/v632/classRooAbsReal.html,https://root.cern,https://root.cern/doc/v632/classRooAbsReal.html,2,['extend'],['extended']
Modifiability,"ooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&) const; 1181///; 1182 ; 1183TH1* RooAbsReal::createHistogram(RooStringView varNameList, Int_t xbins, Int_t ybins, Int_t zbins) const; 1184{; 1185 std::unique_ptr<RooArgSet> vars{getVariables()};; 1186 ; 1187 auto varNames = ROOT::Split(varNameList, "",:"");; 1188 std::vector<RooRealVar*> histVars(3, nullptr);; 1189 ; 1190 for(std::size_t iVar = 0; iVar < varNames.size(); ++iVar) {; 1191 if(varNames[iVar].empty()) continue;; 1192 if(iVar >= 3) {; 1193 std::stringstream errMsg;; 1194 errMsg << ""RooAbsPdf::createHistogram("" << GetName() << "") ERROR more than three variable names passed, but maximum number of supported variables is three"";; 1195 coutE(Plotting) << errMsg.str() << std::endl;; 1196 throw std::invalid_argument(errMsg.str());; 1197 }; 1198 auto var = static_cast<RooRealVar*>(vars->find(varNames[iVar].c_str()));; 1199 if(!var) {; 1200 std::stringstream errMsg;; 1201 errMsg << ""RooAbsPdf::createHistogram("" << GetName() << "") ERROR variable "" << varNames[iVar] << "" does not exist in argset: "" << *vars;; 1202 coutE(Plotting) << errMsg.str() << std::endl;; 1203 throw std::runtime_error(errMsg.str());; 1204 }; 1205 histVars[iVar] = var;; 1206 }; 1207 ; 1208 // Construct list of named arguments to pass to the implementation version of createHistogram(); 1209 ; 1210 RooLinkedList argList ;; 1211 if (xbins>0) {; 1212 argList.Add(RooFit::Binning(xbins).Clone()) ;; 1213 }; 1214 ; 1215 if (histVars[1]) {; 1216 argList.Add(RooFit::YVar(*histVars[1], ybins > 0 ? RooFit::Binning(ybins) : RooCmdArg::none()).Clone()) ;; 1217 }; 1218 ; 1219 if (histVars[2]) {; 1220 argList.Add(RooFit::ZVar(*histVars[2], zbins > 0 ? RooFit::Binning(zbins) : RooCmdArg::none()).Clone()) ;; 1221 }; 1222 ; 1223 // Call implementation function; 1224 TH1* result = createHistogram(GetName(), *histVars[0], argList) ;; 1225 ; 1226 // Delete temporary list of RooCmdArgs; 1227 argList.Delete() ;; 1228 ; 1229 return result ;; 1230}; 1231 ; 1232",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:48946,variab,variable,48946,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['variab'],['variable']
Modifiability,"ooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual RooPlot*RooSimultaneous::plotOn(RooPlot* frame, RooLinkedList& cmdList) const; virtual RooPlot*RooSimultaneous::plotOn(RooPlot* frame, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg(), const RooCmdArg& arg4 = RooCmdArg(), const RooCmdArg& arg5 = RooCmdArg(), const RooCmdArg& arg6 = RooCmdArg(), const RooCmdArg& arg7 = RooCmdArg(), const RooCmdArg& arg8 = RooCmdArg(), const RooCmdArg& arg9 = RooCmdArg(), const RooCmdArg& arg10 = RooCmdArg()) const; virtual RooPlot*RooSimultaneous::plotOn(RooPlot* frame, Option_t* drawOptions, Double_t scaleFactor = 1., RooAbsReal::ScaleType stype = Relative, const RooAbsData* projData = 0, const RooArgSet* projSet = 0, Double_t precision = 0.001, Bool_t shiftToZero = kFALSE, const RooArgSet* projDataSet = 0, Double_t rangeLo = 0, Double_t rangeHi = 0, RooCurve::WingMode wmode = RooCurve::Extended) const; virtual list<Double_t>*RooAbsReal::plotSamplingHint(RooAbsRealLValue&, Double_t, Double_t) const; virtual RooPlot*RooAbsReal::plotSliceOn(RooPlot* frame, const RooArgSet& sliceSet, Option_t* drawOptions = ""L"", Double_t scaleFactor = 1., RooAbsReal::ScaleType stype = Relative, const RooAbsData* projData = 0) const; virtual voidTObject::Pop(); virtual voidRooAbsReal::preferredObservableScanOrder(const RooArgSet& obs, RooArgSet& orderedObs) const; RooAbsPdf::GenSpec*RooAbsPdf::prepareMultiGen(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); virtual voidRooAbsArg::Print(Option_t* options = 0) const; virtual voidRooAbsArg::printAddress(ostream& os) const; virtual voidRooAbsArg::printArgs(ostream& os) const; virtual voidRooAbsArg::printClassName(ostream& os) const; voidRooAbsArg::printCompactT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__HistFactory__HistFactorySimultaneous.html:26613,Extend,Extended,26613,root/html602/RooStats__HistFactory__HistFactorySimultaneous.html,https://root.cern,https://root.cern/root/html602/RooStats__HistFactory__HistFactorySimultaneous.html,2,['Extend'],['Extended']
Modifiability,"ooCompositeDataStore.cxx. Member Function Documentation. ◆ addColumn(). RooAbsArg * RooCompositeDataStore::addColumn ; (; RooAbsArg & ; var, . bool ; adjustRange = true . ). overridevirtual . WVE ownership issue here!! Caller (a RooAbsData) should take ownership of all arguments, but only does for the first one here... ; Implements RooAbsDataStore.; Definition at line 320 of file RooCompositeDataStore.cxx. ◆ append(). void RooCompositeDataStore::append ; (; RooAbsDataStore & ; other). overridevirtual . Implements RooAbsDataStore.; Definition at line 346 of file RooCompositeDataStore.cxx. ◆ attachBuffers(). void RooCompositeDataStore::attachBuffers ; (; const RooArgSet & ; extObs). overridevirtual . Implements RooAbsDataStore.; Definition at line 435 of file RooCompositeDataStore.cxx. ◆ attachCache(). void RooCompositeDataStore::attachCache ; (; const RooAbsArg * ; newOwner, . const RooArgSet & ; cachedVars . ). overrideprotectedvirtual . Initialize cache of dataset: attach variables of cache ArgSet to the corresponding TTree branches. ; Implements RooAbsDataStore.; Definition at line 411 of file RooCompositeDataStore.cxx. ◆ cacheArgs(). void RooCompositeDataStore::cacheArgs ; (; const RooAbsArg * ; owner, . RooArgSet & ; varSet, . const RooArgSet * ; nset = nullptr, . bool ; skipZeroWeights = false . ). overridevirtual . Implements RooAbsDataStore.; Definition at line 384 of file RooCompositeDataStore.cxx. ◆ cacheOwner(). const RooAbsArg * RooCompositeDataStore::cacheOwner ; (; ). inlineoverridevirtual . Implements RooAbsDataStore.; Definition at line 94 of file RooCompositeDataStore.h. ◆ changeObservableName(). bool RooCompositeDataStore::changeObservableName ; (; const char * ; from, . const char * ; to . ). overridevirtual . Change name of internal observable named 'from' into 'to'. ; Implements RooAbsDataStore.; Definition at line 290 of file RooCompositeDataStore.cxx. ◆ Class(). static TClass * RooCompositeDataStore::Class ; (; ). static . ReturnsTClass describi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCompositeDataStore.html:22242,variab,variables,22242,doc/master/classRooCompositeDataStore.html,https://root.cern,https://root.cern/doc/master/classRooCompositeDataStore.html,1,['variab'],['variables']
Modifiability,"ooDataSet > _data;  ; std::list< GausParam > _gausParams;  ! ;  ; std::list< GausParamSet > _gausParamSets;  ! ;  ; RooArgSet _genParSet;  ; std::list< UniParam > _unifParams;  ! ;  ; std::list< UniParamSet > _unifParamSets;  ! ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from RooAbsMCStudyModule; RooArgSet * allDependents ();  Return all observables. ;  ; bool binGenData ();  If true binning of data between generating and fitting is requested. ;  ; RooArgSet * dependents ();  Return fit model observables. ;  ; bool extendedGen ();  If true extended mode generation is requested. ;  ; RooArgSet * fitInitParams ();  Return initial value of parameters of fit model. ;  ; RooAbsPdf * fitModel ();  Return fit model. ;  ; RooLinkedList * fitOptList ();  Return list of fit options provided by user. ;  ; RooArgSet * fitParams ();  Return current value of parameters of fit model. ;  ; RooAbsGenContext * genContext ();  ; RooArgSet * genInitParams ();  Return initial value of generator model parameters. ;  ; RooAbsPdf * genModel ();  Return generator pdf. ;  ; RooArgSet * genParams ();  Return current value of generator model parameters. ;  ; const RooDataSet * genProtoData ();  Return generator prototype data provided by user. ;  ; RooAb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRandomizeParamMCSModule.html:14083,inherit,inherited,14083,doc/master/classRooRandomizeParamMCSModule.html,https://root.cern,https://root.cern/doc/master/classRooRandomizeParamMCSModule.html,2,['inherit'],['inherited']
Modifiability,"ooDataSet* protoData = static_cast<RooDataSet*>(pc.getObject(""proto"",nullptr)) ;; 1237 const char* dsetName = pc.getString(""dsetName"") ;; 1238 bool verbose = pc.getInt(""verbose"") ;; 1239 bool randProto = pc.getInt(""randProto"") ;; 1240 bool resampleProto = pc.getInt(""resampleProto"") ;; 1241 bool extended = pc.getInt(""extended"") ;; 1242 bool autoBinned = pc.getInt(""autoBinned"") ;; 1243 const char* binnedTag = pc.getString(""binnedTag"") ;; 1244 Int_t nEventsI = pc.getInt(""nEvents"") ;; 1245 double nEventsD = pc.getInt(""nEventsD"") ;; 1246 //bool verbose = pc.getInt(""verbose"") ;; 1247 bool expectedData = pc.getInt(""expectedData"") ;; 1248 ; 1249 double nEvents = (nEventsD>0) ? nEventsD : double(nEventsI);; 1250 ; 1251 // Force binned mode for expected data mode; 1252 if (expectedData) {; 1253 binnedTag=""*"" ;; 1254 }; 1255 ; 1256 if (extended) {; 1257 if (nEvents == 0) nEvents = expectedEvents(&whatVars);; 1258 } else if (nEvents==0) {; 1259 cxcoutI(Generation) << ""No number of events specified , number of events generated is ""; 1260 << GetName() << ""::expectedEvents() = "" << expectedEvents(&whatVars)<< endl ;; 1261 }; 1262 ; 1263 if (extended && protoData && !randProto) {; 1264 cxcoutI(Generation) << ""WARNING Using generator option Extended() (Poisson distribution of #events) together ""; 1265 << ""with a prototype dataset implies incomplete sampling or oversampling of proto data. ""; 1266 << ""Set randomize flag in ProtoData() option to randomize prototype dataset order and thus ""; 1267 << ""to randomize the set of over/undersampled prototype events for each generation cycle."" << endl ;; 1268 }; 1269 ; 1270 ; 1271 // Forward to appropriate implementation; 1272 std::unique_ptr<RooDataSet> data;; 1273 if (protoData) {; 1274 data = std::unique_ptr<RooDataSet>{generate(whatVars,*protoData,Int_t(nEvents),verbose,randProto,resampleProto)};; 1275 } else {; 1276 data = std::unique_ptr<RooDataSet>{generate(whatVars,nEvents,verbose,autoBinned,binnedTag,expectedData, extended)};; 1277 }; 1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:62161,extend,extended,62161,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,2,['extend'],['extended']
Modifiability,"ooExponential.h; RooExtendPdf.h; RooFitResult.h; RooGaussian.h; RooPlot.h; RooRealVar.h; TCanvas.h; N#define N; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; widthOption_t Option_t widthDefinition TGWin32VirtualXProxy.cxx:56; RooAbsPdf::fitToRooFit::OwningPtr< RooFitResult > fitTo(RooAbsData &data, CmdArgs_t const &... cmdArgs)Fit PDF to given dataset.Definition RooAbsPdf.h:157; RooAddPdfEfficient implementation of a sum of PDFs of the form.Definition RooAddPdf.h:33; RooExponentialExponential PDF.Definition RooExponential.h:22; RooExtendPdfRooExtendPdf is a wrapper around an existing PDF that adds a parameteric extended likelihood term to ...Definition RooExtendPdf.h:22; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TCanvasThe Canvas class.Definition TCanvas.h:23; RooFit::LayoutRooCmdArg Layout(double xmin, double xmax=0.99, double ymin=0.95)Definition RooGlobalFunc.cxx:783; RooFit::SaveRooCmdArg Save(bool flag=true)Definition RooGlobalFunc.cxx:649; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc.cxx:657; RooFit::VisualizeErrorRooCmdA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html:8623,extend,extended,8623,doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,https://root.cern,https://root.cern/doc/master/rf204b__extendedLikelihood__rangedFit_8C.html,1,['extend'],['extended']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooAddition.h>. Inheritance diagram for RooAddition:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooAddition() [1/4]. RooAddition::RooAddition ; (; ). inline . Definition at line 30 of file RooAddition.h. ◆ RooAddition() [2/4]. RooAddition::RooAddition ; (; const char * ; name, . const char * ; title, . const RooArgList & ; sumSet . ). Constructor with a single set consisting of RooAbsReal. ; Parameters. [in]nameName of the PDF ; [in]titleTitle ; [in]sumSetThe value of the function will be the sum of the values in this set . Definition at line 58 of file RooAddition.cxx. ◆ RooAddition() [3/4]. RooAddition::RooAddition ; (; const char * ; name, . const char * ; title, . const RooArgList & ; sumSet1,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAddition.html:59969,inherit,inherited,59969,doc/master/classRooAddition.html,https://root.cern,https://root.cern/doc/master/classRooAddition.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooCFunction1Binding.h>. Inheritance diagram for RooCFunction1Binding< VO, VI >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooCFunction1Binding() [1/3]. template<class VO , class VI > . RooCFunction1Binding< VO, VI >::RooCFunction1Binding ; (; ). inline . Definition at line 220 of file RooCFunction1Binding.h. ◆ RooCFunction1Binding() [2/3]. template<class VO , class VI > . RooCFunction1Binding< VO, VI >::RooCFunction1Binding ; (; const char * ; name, . const char * ; title, . VO(*)(VI) ; _func, . RooAbsReal & ; _x . ). Definition at line 257 of file RooCFunction1Binding.h. ◆ RooCFunction1Binding() [3/3]. template<class VO , class VI > . RooCFunction1Binding< VO, VI >::RooCFunction1Binding ; (; co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCFunction1Binding.html:59967,inherit,inherited,59967,doc/master/classRooCFunction1Binding.html,https://root.cern,https://root.cern/doc/master/classRooCFunction1Binding.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooCFunction2Binding.h>. Inheritance diagram for RooCFunction2Binding< VO, VI1, VI2 >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooCFunction2Binding() [1/3]. template<class VO , class VI1 , class VI2 > . RooCFunction2Binding< VO, VI1, VI2 >::RooCFunction2Binding ; (; ). inline . Definition at line 230 of file RooCFunction2Binding.h. ◆ RooCFunction2Binding() [2/3]. template<class VO , class VI1 , class VI2 > . RooCFunction2Binding< VO, VI1, VI2 >::RooCFunction2Binding ; (; const char * ; name, . const char * ; title, . VO(*)(VI1, VI2) ; _func, . RooAbsReal & ; _x, . RooAbsReal & ; _y . ). Definition at line 267 of file RooCFunction2Binding.h. ◆ RooCFunction2Binding() [3/3]. template<class VO , cl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCFunction2Binding.html:60047,inherit,inherited,60047,doc/master/classRooCFunction2Binding.html,https://root.cern,https://root.cern/doc/master/classRooCFunction2Binding.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooCFunction3Binding.h>. Inheritance diagram for RooCFunction3Binding< VO, VI1, VI2, VI3 >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooCFunction3Binding() [1/3]. template<class VO , class VI1 , class VI2 , class VI3 > . RooCFunction3Binding< VO, VI1, VI2, VI3 >::RooCFunction3Binding ; (; ). inline . Definition at line 240 of file RooCFunction3Binding.h. ◆ RooCFunction3Binding() [2/3]. template<class VO , class VI1 , class VI2 , class VI3 > . RooCFunction3Binding< VO, VI1, VI2, VI3 >::RooCFunction3Binding ; (; const char * ; name, . const char * ; title, . VO(*)(VI1, VI2, VI3) ; _func, . RooAbsReal & ; _x, . RooAbsReal & ; _y, . RooAbsReal & ; _z . ). Definition at line 280 of file RooCFunction3",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCFunction3Binding.html:60121,inherit,inherited,60121,doc/master/classRooCFunction3Binding.html,https://root.cern,https://root.cern/doc/master/classRooCFunction3Binding.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooCFunction4Binding.h>. Inheritance diagram for RooCFunction4Binding< VO, VI1, VI2, VI3, VI4 >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooCFunction4Binding() [1/3]. template<class VO , class VI1 , class VI2 , class VI3 , class VI4 > . RooCFunction4Binding< VO, VI1, VI2, VI3, VI4 >::RooCFunction4Binding ; (; ). inline . Definition at line 227 of file RooCFunction4Binding.h. ◆ RooCFunction4Binding() [2/3]. template<class VO , class VI1 , class VI2 , class VI3 , class VI4 > . RooCFunction4Binding< VO, VI1, VI2, VI3, VI4 >::RooCFunction4Binding ; (; const char * ; name, . const char * ; title, . VO(*)(VI1, VI2, VI3, VI4) ; _func, . RooAbsReal & ; _x, . RooAbsReal & ; _y, . RooAbsReal & ; _z, . Ro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCFunction4Binding.html:60192,inherit,inherited,60192,doc/master/classRooCFunction4Binding.html,https://root.cern,https://root.cern/doc/master/classRooCFunction4Binding.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooChangeTracker.h>. Inheritance diagram for RooChangeTracker:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooChangeTracker() [1/3]. RooChangeTracker::RooChangeTracker ; (; ). default . ◆ RooChangeTracker() [2/3]. RooChangeTracker::RooChangeTracker ; (; const char * ; name, . const char * ; title, . const RooArgSet & ; trackSet, . bool ; checkValues = false . ). Constructor. ; The set trackSet contains the observables to be tracked for changes. If checkValues is true an additional validation step is activated where the numeric values of the tracked arguments are compared with reference values ensuring that values have actually changed. ; Definition at line 52 of file RooChangeTracker.cxx. ◆ RooChan",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooChangeTracker.html:60347,inherit,inherited,60347,doc/master/classRooChangeTracker.html,https://root.cern,https://root.cern/doc/master/classRooChangeTracker.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooConstraintSum.h>. Inheritance diagram for RooConstraintSum:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooConstraintSum() [1/3]. RooConstraintSum::RooConstraintSum ; (; ). inline . Definition at line 30 of file RooConstraintSum.h. ◆ RooConstraintSum() [2/3]. RooConstraintSum::RooConstraintSum ; (; const char * ; name, . const char * ; title, . const RooArgSet & ; constraintSet, . const RooArgSet & ; paramSet, . bool ; takeGlobalObservablesFromData = false . ). Constructor with set of constraint p.d.f.s. All elements in constraintSet must inherit from RooAbsPdf. ; Definition at line 46 of file RooConstraintSum.cxx. ◆ RooConstraintSum() [3/3]. RooConstraintSum::RooConstraintSum ; (; const RooCons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooConstraintSum.html:60261,inherit,inherited,60261,doc/master/classRooConstraintSum.html,https://root.cern,https://root.cern/doc/master/classRooConstraintSum.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooDerivative.h>. Inheritance diagram for RooDerivative:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooDerivative() [1/4]. RooDerivative::RooDerivative ; (; ). default . Default constructor. . ◆ RooDerivative() [2/4]. RooDerivative::RooDerivative ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; func, . RooRealVar & ; x, . Int_t ; order = 1, . double ; eps = 0.001 . ). Definition at line 53 of file RooDerivative.cxx. ◆ RooDerivative() [3/4]. RooDerivative::RooDerivative ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; func, . RooRealVar & ; x, . const RooArgSet & ; nset, . Int_t ; order = 1, . double ; eps = 0.001 . ). Definition at line 68 of file RooDerivative.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDerivative.html:59913,inherit,inherited,59913,doc/master/classRooDerivative.html,https://root.cern,https://root.cern/doc/master/classRooDerivative.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooErrorVar.h>. Inheritance diagram for RooErrorVar:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooErrorVar() [1/3]. RooErrorVar::RooErrorVar ; (; ). inline . Default constructor. ; Definition at line 32 of file RooErrorVar.h. ◆ RooErrorVar() [2/3]. RooErrorVar::RooErrorVar ; (; const char * ; name, . const char * ; title, . const RooRealVar & ; input . ). Construct an lvalue variable representing the error of RooRealVar input. ; Definition at line 44 of file RooErrorVar.cxx. ◆ RooErrorVar() [3/3]. RooErrorVar::RooErrorVar ; (; const RooErrorVar & ; other, . const char * ; name = nullptr . ). Definition at line 55 of file RooErrorVar.cxx. ◆ ~RooErrorVar(). RooErrorVar::~RooErrorVar ; (; ). overrid",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooErrorVar.html:69309,inherit,inherited,69309,doc/master/classRooErrorVar.html,https://root.cern,https://root.cern/doc/master/classRooErrorVar.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooExtendedBinding.h>. Inheritance diagram for RooExtendedBinding:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooExtendedBinding() [1/3]. RooExtendedBinding::RooExtendedBinding ; (; ). inline . Definition at line 22 of file RooExtendedBinding.h. ◆ RooExtendedBinding() [2/3]. RooExtendedBinding::RooExtendedBinding ; (; const char * ; name, . const char * ; title, . RooAbsPdf & ; _pdf . ). Definition at line 20 of file RooExtendedBinding.cxx. ◆ RooExtendedBinding() [3/3]. RooExtendedBinding::RooExtendedBinding ; (; const RooExtendedBinding & ; other, . const char * ; name = nullptr . ). Definition at line 27 of file RooExtendedBinding.cxx. Member Function Documentation. ◆ Class(). static TClass * Ro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooExtendedBinding.html:59269,inherit,inherited,59269,doc/master/classRooExtendedBinding.html,https://root.cern,https://root.cern/doc/master/classRooExtendedBinding.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooFirstMoment.h>. Inheritance diagram for RooFirstMoment:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooFirstMoment() [1/4]. RooFirstMoment::RooFirstMoment ; (; ). default . ◆ RooFirstMoment() [2/4]. RooFirstMoment::RooFirstMoment ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; func, . RooRealVar & ; x . ). Definition at line 43 of file RooFirstMoment.cxx. ◆ RooFirstMoment() [3/4]. RooFirstMoment::RooFirstMoment ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; func, . RooRealVar & ; x, . const RooArgSet & ; nset, . bool ; intNSet = false . ). Definition at line 75 of file RooFirstMoment.cxx. ◆ RooFirstMoment() [4/4]. RooFirstMoment::RooFirstMoment ; (; const R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFirstMoment.html:60510,inherit,inherited,60510,doc/master/classRooFirstMoment.html,https://root.cern,https://root.cern/doc/master/classRooFirstMoment.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooFracRemainder.h>. Inheritance diagram for RooFracRemainder:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooFracRemainder() [1/3]. RooFracRemainder::RooFracRemainder ; (; ). inline . Default constructor. ; Definition at line 29 of file RooFracRemainder.h. ◆ RooFracRemainder() [2/3]. RooFracRemainder::RooFracRemainder ; (; const char * ; name, . const char * ; title, . const RooArgSet & ; sumSet . ). Constructor with given set of input fractions. All arguments in sumSet must be of type RooAbsReal. ; Definition at line 48 of file RooFracRemainder.cxx. ◆ RooFracRemainder() [3/3]. RooFracRemainder::RooFracRemainder ; (; const RooFracRemainder & ; other, . const char * ; name = nullptr . ). Copy const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFracRemainder.html:59607,inherit,inherited,59607,doc/master/classRooFracRemainder.html,https://root.cern,https://root.cern/doc/master/classRooFracRemainder.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooFunctor1DBinding.h>. Inheritance diagram for RooFunctor1DBinding:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooFunctor1DBinding() [1/3]. RooFunctor1DBinding::RooFunctor1DBinding ; (; ). inline . Definition at line 35 of file RooFunctor1DBinding.h. ◆ RooFunctor1DBinding() [2/3]. RooFunctor1DBinding::RooFunctor1DBinding ; (; const char * ; name, . const char * ; title, . const ROOT::Math::IBaseFunctionOneDim & ; ftor, . RooAbsReal & ; var . ). Definition at line 39 of file RooFunctor1DBinding.cxx. ◆ RooFunctor1DBinding() [3/3]. RooFunctor1DBinding::RooFunctor1DBinding ; (; const RooFunctor1DBinding & ; other, . const char * ; name = nullptr . ). Definition at line 48 of file RooFunctor1DBinding.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFunctor1DBinding.html:59900,inherit,inherited,59900,doc/master/classRooFunctor1DBinding.html,https://root.cern,https://root.cern/doc/master/classRooFunctor1DBinding.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooFunctorBinding.h>. Inheritance diagram for RooFunctorBinding:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooFunctorBinding() [1/3]. RooFunctorBinding::RooFunctorBinding ; (; ). default . ◆ RooFunctorBinding() [2/3]. RooFunctorBinding::RooFunctorBinding ; (; const char * ; name, . const char * ; title, . const ROOT::Math::IBaseFunctionMultiDim & ; ftor, . const RooArgList & ; v . ). Create a RooFit function that makes ftor usable in RooFit. ; Parameters. nameName of the object. ; titleTitle (e.g. for plotting) ; ftorFunctor instance to be evaluated. ; vRooFit variables to be passed to the function. . Definition at line 56 of file RooFunctorBinding.cxx. ◆ RooFunctorBinding() [3/3]. RooFunctorBind",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFunctorBinding.html:60046,inherit,inherited,60046,doc/master/classRooFunctorBinding.html,https://root.cern,https://root.cern/doc/master/classRooFunctorBinding.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooHistFunc.h>. Inheritance diagram for RooHistFunc:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooHistFunc() [1/6]. RooHistFunc::RooHistFunc ; (; ). inline . Definition at line 33 of file RooHistFunc.h. ◆ RooHistFunc() [2/6]. RooHistFunc::RooHistFunc ; (; const char * ; name, . const char * ; title, . const RooArgSet & ; vars, . const RooDataHist & ; dhist, . Int_t ; intOrder = 0 . ). Constructor from a RooDataHist. ; The variable listed in 'vars' control the dimensionality of the function. Any additional dimensions present in 'dhist' will be projected out. RooDataHist dimensions can be either real or discrete. See RooDataHist::RooDataHist for details on the binning. RooHistFunc neither owns or c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooHistFunc.html:62215,inherit,inherited,62215,doc/master/classRooHistFunc.html,https://root.cern,https://root.cern/doc/master/classRooHistFunc.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooLegendre.h>. Inheritance diagram for RooLegendre:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooLegendre() [1/4]. RooLegendre::RooLegendre ; (; ). Definition at line 56 of file RooLegendre.cxx. ◆ RooLegendre() [2/4]. RooLegendre::RooLegendre ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; ctheta, . int ; l, . int ; m = 0 . ). TODO: for now, we assume that ctheta has a range [-1,1] should map the ctheta range onto this interval, and adjust integrals... ; Definition at line 65 of file RooLegendre.cxx. ◆ RooLegendre() [3/4]. RooLegendre::RooLegendre ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; ctheta, . int ; l1, . int ; m1, . int ; l2, . int ; m2 . ). Defi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLegendre.html:59801,inherit,inherited,59801,doc/master/classRooLegendre.html,https://root.cern,https://root.cern/doc/master/classRooLegendre.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooLinearVar.h>. Inheritance diagram for RooLinearVar:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooLinearVar() [1/3]. RooLinearVar::RooLinearVar ; (; ). inline . Definition at line 32 of file RooLinearVar.h. ◆ RooLinearVar() [2/3]. RooLinearVar::RooLinearVar ; (; const char * ; name, . const char * ; title, . RooAbsRealLValue & ; variable, . const RooAbsReal & ; slope, . const RooAbsReal & ; offset, . const char * ; unit = """" . ). Constructor with RooAbsRealLValue variable and RooAbsReal slope and offset. ; Definition at line 57 of file RooLinearVar.cxx. ◆ RooLinearVar() [3/3]. RooLinearVar::RooLinearVar ; (; const RooLinearVar & ; other, . const char * ; name = nullptr . ). Copy constructor. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLinearVar.html:68791,inherit,inherited,68791,doc/master/classRooLinearVar.html,https://root.cern,https://root.cern/doc/master/classRooLinearVar.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooMoment.h>. Inheritance diagram for RooMoment:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooMoment() [1/4]. RooMoment::RooMoment ; (; ). default . ◆ RooMoment() [2/4]. RooMoment::RooMoment ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; func, . RooRealVar & ; x, . Int_t ; order = 1, . bool ; central = false, . bool ; takeRoot = false . ). Definition at line 46 of file RooMoment.cxx. ◆ RooMoment() [3/4]. RooMoment::RooMoment ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; func, . RooRealVar & ; x, . const RooArgSet & ; nset, . Int_t ; order = 1, . bool ; central = false, . bool ; takeRoot = false, . bool ; intNSet = false . ). Definition at line 90 of file R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMoment.html:60582,inherit,inherited,60582,doc/master/classRooMoment.html,https://root.cern,https://root.cern/doc/master/classRooMoment.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooMomentMorphFunc.h>. Inheritance diagram for RooMomentMorphFunc:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ Setting. enum RooMomentMorphFunc::Setting. EnumeratorLinear ; NonLinear ; NonLinearPosFractions ; NonLinearLinFractions ; SineLinear . Definition at line 32 of file RooMomentMorphFunc.h. Constructor & Destructor Documentation. ◆ RooMomentMorphFunc() [1/4]. RooMomentMorphFunc::RooMomentMorphFunc ; (; ). Definition at line 38 of file RooMomentMorphFunc.cxx. ◆ RooMomentMorphFunc() [2/4]. RooMomentMorphFunc::RooMomentMorphFunc ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; _m, . const RooArgList & ; varList, . const RooArgList & ; pdfList, . const RooArgList & ; mrefList, . Setti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMomentMorphFunc.html:60575,inherit,inherited,60575,doc/master/classRooMomentMorphFunc.html,https://root.cern,https://root.cern/doc/master/classRooMomentMorphFunc.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooMomentMorphFuncND.h>. Inheritance diagram for RooMomentMorphFuncND:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Base_t. using RooMomentMorphFuncND::Base_t = RooAbsReal. Definition at line 36 of file RooMomentMorphFuncND.h. ◆ Grid. using RooMomentMorphFuncND::Grid = Grid2. Definition at line 79 of file RooMomentMorphFuncND.h. Member Enumeration Documentation. ◆ Setting. enum RooMomentMorphFuncND::Setting. EnumeratorLinear ; SineLinear ; NonLinear ; NonLinearPosFractions ; NonLinearLinFractions . Definition at line 97 of file RooMomentMorphFuncND.h. Constructor & Destructor Documentation. ◆ RooMomentMorphFuncND() [1/5]. RooMomentMorphFuncND::RooMomentMorphFuncND ; (; ). Definition at line 49 of file RooMome",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMomentMorphFuncND.html:61074,inherit,inherited,61074,doc/master/classRooMomentMorphFuncND.html,https://root.cern,https://root.cern/doc/master/classRooMomentMorphFuncND.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooNumConvolution.h>. Inheritance diagram for RooNumConvolution:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooNumConvolution() [1/3]. RooNumConvolution::RooNumConvolution ; (; ). Definition at line 80 of file RooNumConvolution.cxx. ◆ RooNumConvolution() [2/3]. RooNumConvolution::RooNumConvolution ; (; const char * ; name, . const char * ; title, . RooRealVar & ; convVar, . RooAbsReal & ; inPdf, . RooAbsReal & ; resmodel, . const RooNumConvolution * ; proto = nullptr . ). Constructor of convolution operator PDF. ; convVar : convolution variable (on which both pdf and resmodel should depend) pdf : input 'physics' pdf resmodel : input 'resolution' pdf; output is pdf(x) (X) resmodel(x) = Int [ pdf(x'",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNumConvolution.html:64110,inherit,inherited,64110,doc/master/classRooNumConvolution.html,https://root.cern,https://root.cern/doc/master/classRooNumConvolution.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooParamHistFunc.h>. Inheritance diagram for RooParamHistFunc:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooParamHistFunc() [1/3]. RooParamHistFunc::RooParamHistFunc ; (; ). inline . Definition at line 26 of file RooParamHistFunc.h. ◆ RooParamHistFunc() [2/3]. RooParamHistFunc::RooParamHistFunc ; (; const char * ; name, . const char * ; title, . RooDataHist & ; dh, . const RooAbsArg & ; x, . const RooParamHistFunc * ; paramSource = nullptr, . bool ; paramRelative = true . ). Definition at line 32 of file RooParamHistFunc.cxx. ◆ RooParamHistFunc() [3/3]. RooParamHistFunc::RooParamHistFunc ; (; const RooParamHistFunc & ; other, . const char * ; name = nullptr . ). Definition at line 62 of file RooP",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooParamHistFunc.html:60334,inherit,inherited,60334,doc/master/classRooParamHistFunc.html,https://root.cern,https://root.cern/doc/master/classRooParamHistFunc.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooPolyFunc.h>. Inheritance diagram for RooPolyFunc:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooPolyFunc() [1/5]. RooPolyFunc::RooPolyFunc ; (; ). Default constructor. ; Definition at line 133 of file RooPolyFunc.cxx. ◆ RooPolyFunc() [2/5]. RooPolyFunc::RooPolyFunc ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; x, . const RooAbsCollection & ; coefList . ). ◆ RooPolyFunc() [3/5]. RooPolyFunc::RooPolyFunc ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; x, . RooAbsReal & ; y, . const RooAbsCollection & ; coefList . ). ◆ RooPolyFunc() [4/5]. RooPolyFunc::RooPolyFunc ; (; const char * ; name, . const char * ; title, . const RooAbsCollection & ; vars . ). Parame",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPolyFunc.html:60884,inherit,inherited,60884,doc/master/classRooPolyFunc.html,https://root.cern,https://root.cern/doc/master/classRooPolyFunc.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooPolyVar.h>. Inheritance diagram for RooPolyVar:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooPolyVar() [1/4]. RooPolyVar::RooPolyVar ; (; ). inline . Definition at line 27 of file RooPolyVar.h. ◆ RooPolyVar() [2/4]. RooPolyVar::RooPolyVar ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; x . ). Constructor of flat polynomial function. ; Definition at line 69 of file RooPolyVar.cxx. ◆ RooPolyVar() [3/4]. RooPolyVar::RooPolyVar ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; x, . const RooArgList & ; coefList, . Int_t ; lowestOrder = 0 . ). Construct polynomial in x with coefficients in coefList. ; If lowestOrder is not zero, then the first element in coefList",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPolyVar.html:59993,inherit,inherited,59993,doc/master/classRooPolyVar.html,https://root.cern,https://root.cern/doc/master/classRooPolyVar.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooProduct.h>. Inheritance diagram for RooProduct:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooProduct() [1/4]. RooProduct::RooProduct ; (; ). Default constructor. ; Definition at line 52 of file RooProduct.cxx. ◆ RooProduct() [2/4]. RooProduct::RooProduct ; (; const char * ; name, . const char * ; title, . const RooArgList & ; prodSet . ). Construct function representing the product of functions in prodSet. ; Definition at line 71 of file RooProduct.cxx. ◆ RooProduct() [3/4]. RooProduct::RooProduct ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; real1, . RooAbsReal & ; real2 . ). Definition at line 84 of file RooProduct.cxx. ◆ RooProduct() [4/4]. RooProduct::RooProduct ; (; c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooProduct.html:60598,inherit,inherited,60598,doc/master/classRooProduct.html,https://root.cern,https://root.cern/doc/master/classRooProduct.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooProfileLL.h>. Inheritance diagram for RooProfileLL:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooProfileLL() [1/3]. RooProfileLL::RooProfileLL ; (; ). Default constructor Should only be used by proof. ; Definition at line 42 of file RooProfileLL.cxx. ◆ RooProfileLL() [2/3]. RooProfileLL::RooProfileLL ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; nllIn, . const RooArgSet & ; observables . ). Constructor of profile likelihood given input likelihood nll w.r.t the given set of variables. ; The input log likelihood is minimized w.r.t to all other variables of the likelihood at each evaluation and the value of the global log likelihood minimum is always subtracted. ; Definition ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooProfileLL.html:60927,inherit,inherited,60927,doc/master/classRooProfileLL.html,https://root.cern,https://root.cern/doc/master/classRooProfileLL.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooPullVar.h>. Inheritance diagram for RooPullVar:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooPullVar() [1/3]. RooPullVar::RooPullVar ; (; ). default . ◆ RooPullVar() [2/3]. RooPullVar::RooPullVar ; (; const char * ; name, . const char * ; title, . RooRealVar & ; meas, . RooAbsReal & ; truth . ). Construct the pull of the RooRealVar 'meas'. ; Parameters. [in]nameName of the pull variable. ; [in]titleThe title (for plotting). ; [in]measThe measurement. This variable needs to have an error, and therefore is a RooRealVar. ; [in]truthThe true value. . Definition at line 46 of file RooPullVar.cxx. ◆ RooPullVar() [3/3]. RooPullVar::RooPullVar ; (; const RooPullVar & ; other, . const char * ; name = n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPullVar.html:59681,inherit,inherited,59681,doc/master/classRooPullVar.html,https://root.cern,https://root.cern/doc/master/classRooPullVar.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooRangeBoolean.h>. Inheritance diagram for RooRangeBoolean:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooRangeBoolean() [1/3]. RooRangeBoolean::RooRangeBoolean ; (; ). default . ◆ RooRangeBoolean() [2/3]. RooRangeBoolean::RooRangeBoolean ; (; const char * ; name, . const char * ; title, . RooAbsRealLValue & ; x, . const char * ; rangeName . ). Definition at line 38 of file RooRangeBoolean.cxx. ◆ RooRangeBoolean() [3/3]. RooRangeBoolean::RooRangeBoolean ; (; const RooRangeBoolean & ; other, . const char * ; name = nullptr . ). Copy constructor. ; Definition at line 50 of file RooRangeBoolean.cxx. Member Function Documentation. ◆ Class(). static TClass * RooRangeBoolean::Class ; (; ). static . Ret",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRangeBoolean.html:59371,inherit,inherited,59371,doc/master/classRooRangeBoolean.html,https://root.cern,https://root.cern/doc/master/classRooRangeBoolean.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooRatio.h>. Inheritance diagram for RooRatio:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooRatio() [1/7]. RooRatio::RooRatio ; (; ). Definition at line 40 of file RooRatio.cxx. ◆ RooRatio() [2/7]. RooRatio::RooRatio ; (; const char * ; name, . const char * ; title, . double ; numerator, . double ; denominator . ). Definition at line 75 of file RooRatio.cxx. ◆ RooRatio() [3/7]. RooRatio::RooRatio ; (; const char * ; name, . const char * ; title, . double ; numerator, . RooAbsReal & ; denominator . ). Definition at line 64 of file RooRatio.cxx. ◆ RooRatio() [4/7]. RooRatio::RooRatio ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; numerator, . double ; denominator . ). Definition",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRatio.html:59710,inherit,inherited,59710,doc/master/classRooRatio.html,https://root.cern,https://root.cern/doc/master/classRooRatio.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooRecursiveFraction.h>. Inheritance diagram for RooRecursiveFraction:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooRecursiveFraction() [1/3]. RooRecursiveFraction::RooRecursiveFraction ; (; ). default . ◆ RooRecursiveFraction() [2/3]. RooRecursiveFraction::RooRecursiveFraction ; (; const char * ; name, . const char * ; title, . const RooArgList & ; fracSet . ). Constructor of plain RooAddPdf fraction from list of recursive fractions. ; Definition at line 45 of file RooRecursiveFraction.cxx. ◆ RooRecursiveFraction() [3/3]. RooRecursiveFraction::RooRecursiveFraction ; (; const RooRecursiveFraction & ; other, . const char * ; name = nullptr . ). Copy constructor. ; Definition at line 68 of file Roo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRecursiveFraction.html:59636,inherit,inherited,59636,doc/master/classRooRecursiveFraction.html,https://root.cern,https://root.cern/doc/master/classRooRecursiveFraction.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooSecondMoment.h>. Inheritance diagram for RooSecondMoment:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooSecondMoment() [1/4]. RooSecondMoment::RooSecondMoment ; (; ). default . ◆ RooSecondMoment() [2/4]. RooSecondMoment::RooSecondMoment ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; func, . RooRealVar & ; x, . bool ; central = false, . bool ; takeRoot = false . ). Definition at line 49 of file RooSecondMoment.cxx. ◆ RooSecondMoment() [3/4]. RooSecondMoment::RooSecondMoment ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; func, . RooRealVar & ; x, . const RooArgSet & ; nset, . bool ; central = false, . bool ; takeRoot = false, . bool ; intNSet = false . ). D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSecondMoment.html:60648,inherit,inherited,60648,doc/master/classRooSecondMoment.html,https://root.cern,https://root.cern/doc/master/classRooSecondMoment.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooStats/Heaviside.h>. Inheritance diagram for RooStats::Heaviside:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ Heaviside() [1/3]. RooStats::Heaviside::Heaviside ; (; ). inline . Definition at line 23 of file Heaviside.h. ◆ Heaviside() [2/3]. Heaviside::Heaviside ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; _x, . RooAbsReal & ; _c . ). Definition at line 32 of file Heaviside.cxx. ◆ Heaviside() [3/3]. Heaviside::Heaviside ; (; const Heaviside & ; other, . const char * ; name = nullptr . ). Definition at line 43 of file Heaviside.cxx. Member Function Documentation. ◆ Class(). static TClass * RooStats::Heaviside::Class ; (; ). static . ReturnsTClass describing this class . ◆ Clas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1Heaviside.html:59491,inherit,inherited,59491,doc/master/classRooStats_1_1Heaviside.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1Heaviside.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooStats/HistFactory/FlexibleInterpVar.h>. Inheritance diagram for RooStats::HistFactory::FlexibleInterpVar:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ FlexibleInterpVar() [1/5]. FlexibleInterpVar::FlexibleInterpVar ; (; ). Default constructor. ; Definition at line 36 of file FlexibleInterpVar.cxx. ◆ FlexibleInterpVar() [2/5]. FlexibleInterpVar::FlexibleInterpVar ; (; const char * ; name, . const char * ; title, . const RooArgList & ; _paramList, . double ; nominal, . std::vector< double > const & ; low, . std::vector< double > const & ; high . ). Definition at line 44 of file FlexibleInterpVar.cxx. ◆ FlexibleInterpVar() [3/5]. FlexibleInterpVar::FlexibleInterpVar ; (; const char * ; name, . const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1FlexibleInterpVar.html:60803,inherit,inherited,60803,doc/master/classRooStats_1_1HistFactory_1_1FlexibleInterpVar.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1FlexibleInterpVar.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooStats/HistFactory/LinInterpVar.h>. Inheritance diagram for RooStats::HistFactory::LinInterpVar:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ LinInterpVar() [1/4]. RooStats::HistFactory::LinInterpVar::LinInterpVar ; (; ). default . ◆ LinInterpVar() [2/4]. LinInterpVar::LinInterpVar ; (; const char * ; name, . const char * ; title, . const RooArgList & ; _paramList, . double ; nominal, . std::vector< double > ; low, . std::vector< double > ; high . ). Definition at line 37 of file LinInterpVar.cxx. ◆ LinInterpVar() [3/4]. LinInterpVar::LinInterpVar ; (; const char * ; name, . const char * ; title . ). Constructor of flat polynomial function. ; Definition at line 58 of file LinInterpVar.cxx. ◆ LinIn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1LinInterpVar.html:59695,inherit,inherited,59695,doc/master/classRooStats_1_1HistFactory_1_1LinInterpVar.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1LinInterpVar.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooStats/HistFactory/PiecewiseInterpolation.h>. Inheritance diagram for PiecewiseInterpolation:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ PiecewiseInterpolation() [1/3]. PiecewiseInterpolation::PiecewiseInterpolation ; (; ). Definition at line 49 of file PiecewiseInterpolation.cxx. ◆ PiecewiseInterpolation() [2/3]. PiecewiseInterpolation::PiecewiseInterpolation ; (; const char * ; name, . const char * ; title, . const RooAbsReal & ; nominal, . const RooArgList & ; lowSet, . const RooArgList & ; highSet, . const RooArgList & ; paramSet . ). Construct a new interpolation. ; The value of the function will be ; \[; A = \sum_i \mathrm{Interpolate}(\mathrm{low}_i, \mathrm{nominal}, \mathrm{high}_i).; \",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classPiecewiseInterpolation.html:61705,inherit,inherited,61705,doc/master/classPiecewiseInterpolation.html,https://root.cern,https://root.cern/doc/master/classPiecewiseInterpolation.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooStats/HistFactory/RooBarlowBeestonLL.h>. Inheritance diagram for RooStats::HistFactory::RooBarlowBeestonLL:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooBarlowBeestonLL() [1/3]. RooStats::HistFactory::RooBarlowBeestonLL::RooBarlowBeestonLL ; (; ). Default constructor. Should only be used by proof. ; Definition at line 50 of file RooBarlowBeestonLL.cxx. ◆ RooBarlowBeestonLL() [2/3]. RooStats::HistFactory::RooBarlowBeestonLL::RooBarlowBeestonLL ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; nll . ). Definition at line 57 of file RooBarlowBeestonLL.cxx. ◆ RooBarlowBeestonLL() [3/3]. RooStats::HistFactory::RooBarlowBeestonLL::RooBarlowBeestonLL ; (; const RooBarlowBeestonLL & ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1RooBarlowBeestonLL.html:60310,inherit,inherited,60310,doc/master/classRooStats_1_1HistFactory_1_1RooBarlowBeestonLL.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1HistFactory_1_1RooBarlowBeestonLL.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooTFnBinding.h>. Inheritance diagram for RooTFnBinding:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooTFnBinding() [1/4]. RooTFnBinding::RooTFnBinding ; (; ). default . ◆ RooTFnBinding() [2/4]. RooTFnBinding::RooTFnBinding ; (; const char * ; name, . const char * ; title, . TF1 * ; func, . const RooArgList & ; list . ). Definition at line 30 of file RooTFnBinding.cxx. ◆ RooTFnBinding() [3/4]. RooTFnBinding::RooTFnBinding ; (; const char * ; name, . const char * ; title, . TF1 * ; func, . const RooArgList & ; list, . const RooArgList & ; plist . ). Definition at line 40 of file RooTFnBinding.cxx. ◆ RooTFnBinding() [4/4]. RooTFnBinding::RooTFnBinding ; (; const RooTFnBinding & ; other, . const char",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooTFnBinding.html:59758,inherit,inherited,59758,doc/master/classRooTFnBinding.html,https://root.cern,https://root.cern/doc/master/classRooTFnBinding.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/roofit/roofitcore/src/RooRealMPFE.h>. Inheritance diagram for RooRealMPFE:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ Message. enum RooRealMPFE::Message. protected . EnumeratorSendReal ; SendCat ; Calculate ; Retrieve ; ReturnValue ; Terminate ; ConstOpt ; Verbose ; LogEvalError ; ApplyNLLW2 ; EnableOffset ; CalculateNoOffset . Definition at line 62 of file RooRealMPFE.h. ◆ State. enum RooRealMPFE::State. protected . EnumeratorInitialize ; Client ; Server ; Inline . Definition at line 59 of file RooRealMPFE.h. Constructor & Destructor Documentation. ◆ RooRealMPFE() [1/2]. RooRealMPFE::RooRealMPFE ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; arg, . bool ; calcInline = false . ). Construct front-end object for object 'arg' whose evaluation will be ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealMPFE.html:62962,inherit,inherited,62962,doc/master/classRooRealMPFE.html,https://root.cern,https://root.cern/doc/master/classRooRealMPFE.html,1,['inherit'],['inherited']
Modifiability,"ooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooAbsCachedReal.h>. Inheritance diagram for RooAbsCachedReal:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ CacheElem. using RooAbsCachedReal::CacheElem = FuncCacheElem. protected . Definition at line 89 of file RooAbsCachedReal.h. Constructor & Destructor Documentation. ◆ RooAbsCachedReal() [1/3]. RooAbsCachedReal::RooAbsCachedReal ; (; ). inline . Definition at line 27 of file RooAbsCachedReal.h. ◆ RooAbsCachedReal() [2/3]. RooAbsCachedReal::RooAbsCachedReal ; (; const char * ; name, . const char * ; title, . Int_t ; ipOrder = 0 . ). Constructor. ; Definition at line 50 of file RooAbsCachedReal.cxx. ◆ RooAbsCachedReal() [3/3]. RooAbsCachedReal::RooAbsCachedReal ; (; const RooAbsCachedReal & ; other, . const char * ; name = nullptr . ). Copy constructor. ; Definition at line 63 of file RooAbsCachedReal.cxx. Member Function Documentation. ◆ actual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsCachedReal.html:61858,inherit,inherited,61858,doc/master/classRooAbsCachedReal.html,https://root.cern,https://root.cern/doc/master/classRooAbsCachedReal.html,1,['inherit'],['inherited']
Modifiability,"ooFit::MsgLevel_lastMsgLevel; Bool_t_showPid; Bool_t_silentMode; vector<StreamConfig>_streams; stack<std::vector<StreamConfig> >_streamsSaved. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void cleanup(); Cleanup function called by atexit() handler installed by RooSentinel; to delete all global object upon program termination. RooMsgService(); Constructor. Defines names of message levels; and mapping of topic codes to topic names; Install default message streams. ~RooMsgService(); Destructor. Bool_t anyDebug(); Returns true if any debug level stream is active. Int_t addStream(RooFit::MsgLevel level, const RooCmdArg& arg1 = RooCmdArg(), const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg(), const RooCmdArg& arg4 = RooCmdArg(), const RooCmdArg& arg5 = RooCmdArg(), const RooCmdArg& arg6 = RooCmdArg()); Add a message logging stream for message with given RooFit::MsgLevel or higher (i.e. more severe); This method accepts the following arguments to configure the stream. Output Style options. Prefix(Bool_t flag=kTRUE) -- Prefix all messages in this stream with Topic/Originator information. Filtering options. Topic(const char*) -- Restrict stream to messages on given topic; ObjectName(const char*) -- Restrict stream to messages from object with given name; ClassName(const char*) -- Restrict stream to messages from objects with given class name; BaseClassName(const char*)-- Restrict stream to messages from objects with given base class name; LabelName(const chat*) -- Restrict stream to messages from objects setAtrribute(const char*) tag with given name. Output redirection options. OutputFile(const char*) -- Send output to file with given name. Multiple streams can write to same file.; OutputStream(ostream&) -- Send output to given C++ stream. Multiple message streams can write to same c++ stream. The return value is the unique ID code of the defined stream. void deleteStream(Int_t id); Delete stream with given un",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooMsgService.html:8834,config,configure,8834,root/html526/RooMsgService.html,https://root.cern,https://root.cern/root/html526/RooMsgService.html,1,['config'],['configure']
Modifiability,"ooFit::OwningPtr< RooDataHist > GetChainAsDataHist (RooArgSet *whichVars=nullptr);  Get a clone of the markov chain on which this interval is based as a RooDataHist. ;  ; virtual RooFit::OwningPtr< RooDataSet > GetChainAsDataSet (RooArgSet *whichVars=nullptr);  Get a clone of the markov chain on which this interval is based as a RooDataSet. ;  ; virtual THnSparse * GetChainAsSparseHist (RooArgSet *whichVars=nullptr);  Get a clone of the markov chain on which this interval is based as a THnSparse. ;  ; virtual Int_t GetDimension () const;  Get the number of parameters of interest in this interval. ;  ; virtual double GetHistCutoff ();  get the cutoff bin height for being considered in the confidence interval ;  ; virtual enum IntervalType GetIntervalType ();  Return the type of this interval. ;  ; double GetKeysMax ();  Determine the approximate maximum value of the Keys PDF. ;  ; virtual double GetKeysPdfCutoff ();  get the cutoff RooNDKeysPdf value for being considered in the confidence interval ;  ; virtual RooRealVar * GetNLLVar () const;  Get a clone of the NLL variable from the markov chain. ;  ; virtual Int_t GetNumBurnInSteps ();  get the number of steps in the chain to discard as burn-in, ;  ; RooArgSet * GetParameters () const override;  return a set containing the parameters of this interval the caller owns the returned RooArgSet* ;  ; virtual TH1 * GetPosteriorHist ();  set the number of bins to use (same for all axes, for now) virtual void SetNumBins(Int_t numBins); ;  ; virtual RooNDKeysPdf * GetPosteriorKeysPdf ();  Get a clone of the keys pdf of the posterior. ;  ; virtual RooProduct * GetPosteriorKeysProduct ();  Get a clone of the (keyspdf * heaviside) product of the posterior. ;  ; virtual bool GetUseKeys ();  get whether we used kernel estimation to determine the interval ;  ; virtual RooRealVar * GetWeightVar () const;  Get a clone of the weight variable from the markov chain. ;  ; TClass * IsA () const override;  ; bool IsInInterval (const RooAr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1MCMCInterval.html:5475,variab,variable,5475,doc/master/classRooStats_1_1MCMCInterval.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1MCMCInterval.html,1,['variab'],['variable']
Modifiability,"ooFit::SupNormSet(nset)) ;; 2471}; 2472 ; 2473 ; 2474 ; 2475////////////////////////////////////////////////////////////////////////////////; 2476/// Create an object that represents the integral of the function over one or more observables listed in `iset`.; 2477/// The actual integration calculation is only performed when the return object is evaluated. The name; 2478/// of the integral object is automatically constructed from the name of the input function, the variables; 2479/// it integrates and the range integrates over; 2480///; 2481/// The following named arguments are accepted; 2482/// | Type of CmdArg | Effect on CDF; 2483/// | ---------------------|-------------------; 2484/// | SupNormSet(const RooArgSet&) | Observables over which should be normalized _in addition_ to the integration observables; 2485/// | ScanNumCdf() | Apply scanning technique if cdf integral involves numeric integration [ default ]; 2486/// | ScanAllCdf() | Always apply scanning technique; 2487/// | ScanNoCdf() | Never apply scanning technique; 2488/// | ScanParameters(Int_t nbins, Int_t intOrder) | Parameters for scanning technique of making CDF: number of sampled bins and order of interpolation applied on numeric cdf; 2489 ; 2490RooFit::OwningPtr<RooAbsReal> RooAbsPdf::createCdf(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2,; 2491 const RooCmdArg& arg3, const RooCmdArg& arg4, const RooCmdArg& arg5,; 2492 const RooCmdArg& arg6, const RooCmdArg& arg7, const RooCmdArg& arg8); 2493{; 2494 // Define configuration for this method; 2495 RooCmdConfig pc(""RooAbsReal::createCdf("" + std::string(GetName()) + "")"");; 2496 pc.defineSet(""supNormSet"",""SupNormSet"",0,nullptr) ;; 2497 pc.defineInt(""numScanBins"",""ScanParameters"",0,1000) ;; 2498 pc.defineInt(""intOrder"",""ScanParameters"",1,2) ;; 2499 pc.defineInt(""doScanNum"",""ScanNumCdf"",0,1) ;; 2500 pc.defineInt(""doScanAll"",""ScanAllCdf"",0,0) ;; 2501 pc.defineInt(""doScanNon"",""ScanNoCdf"",0,0) ;; 2502 pc.defineMutex(""ScanNumCdf"",""ScanAll",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:118986,variab,variables,118986,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,2,"['config', 'variab']","['configuration', 'variables']"
Modifiability,"ooLagrangianMorphFunc.cxx. ◆ init(). void RooLagrangianMorphFunc::init ; (; ). private . initialise inputs required for the morphing function ; Definition at line 1910 of file RooLagrangianMorphFunc.cxx. ◆ insert(). void RooLagrangianMorphFunc::insert ; (; RooWorkspace * ; ws). ◆ IsA(). TClass * RooLagrangianMorphFunc::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooAbsReal.; Definition at line 257 of file RooLagrangianMorphFunc.h. ◆ isBinnedDistribution(). bool RooLagrangianMorphFunc::isBinnedDistribution ; (; const RooArgSet & ; obs); const. overridevirtual . check if this PDF is a binned distribution in the given observable ; Reimplemented from RooAbsReal.; Definition at line 2922 of file RooLagrangianMorphFunc.cxx. ◆ isCouplingUsed(). bool RooLagrangianMorphFunc::isCouplingUsed ; (; const char * ; couplname). check if there is any morphing power provided for the given coupling morphing power is provided as soon as any two samples provide different, non-zero values for this coupling ; Definition at line 2634 of file RooLagrangianMorphFunc.cxx. ◆ isParameterConstant(). bool RooLagrangianMorphFunc::isParameterConstant ; (; const char * ; paramname); const. return true if the parameter with the given name is set constant, false otherwise ; Definition at line 2412 of file RooLagrangianMorphFunc.cxx. ◆ isParameterUsed(). bool RooLagrangianMorphFunc::isParameterUsed ; (; const char * ; paramname); const. check if there is any morphing power provided for the given parameter morphing power is provided as soon as any two samples provide different, non-zero values for this parameter ; Definition at line 2613 of file RooLagrangianMorphFunc.cxx. ◆ makeRatio(). std::unique_ptr< RooRatio > RooLagrangianMorphFunc::makeRatio ; (; const char * ; name, . const char * ; title, . RooArgList & ; nr, . RooArgList & ; dr . ). static . Return the RooRatio form of products and denominators of morphing functions. ; Definition at l",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLagrangianMorphFunc.html:85727,coupling,coupling,85727,doc/master/classRooLagrangianMorphFunc.html,https://root.cern,https://root.cern/doc/master/classRooLagrangianMorphFunc.html,2,['coupling'],['coupling']
Modifiability,"ooMsgService & instance()Return reference to singleton instance.Definition RooMsgService.cxx:345; RooMsgService::addStreamInt_t addStream(RooFit::MsgLevel level, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={})Add a message logging stream for message with given RooFit::MsgLevel or higher.Definition RooMsgService.cxx:177; RooNumIntConfigHolds the configuration parameters of the various numeric integrators used by RooRealIntegral.Definition RooNumIntConfig.h:25; RooNumIntConfig::Printvoid Print(Option_t *options=nullptr) const overrideThis method must be overridden when a class wants to print itself.Definition RooNumIntConfig.h:70; RooNumIntConfig::setEpsRelvoid setEpsRel(double newEpsRel)Set relative convergence criteria (convergence if std::abs(Err)/abs(Int)<newEpsRel)Definition RooNumIntConfig.cxx:260; RooNumIntConfig::getConfigSectionconst RooArgSet & getConfigSection(const char *name) constRetrieve configuration information specific to integrator with given name.Definition RooNumIntConfig.cxx:214; RooNumIntConfig::method1DRooCategory & method1D()Definition RooNumIntConfig.h:34; RooNumIntConfig::setEpsAbsvoid setEpsAbs(double newEpsAbs)Set absolute convergence criteria (convergence if std::abs(Err)<newEpsAbs)Definition RooNumIntConfig.cxx:230; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; xDouble_t x[n]Definition legend1.C:17; RooFit::Detail::MathFuncs::landaudouble landau(double x, double mu, double sigma)Definition MathFuncs.h:331; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf901_numintconfigDefinition rf901_numintconfig.py:1; ; Requested precision: 1e-07 absolute, 1e-07 relative; ; 1-D integration method: RooIntegrator1D (RooImproperIntegrator1D if open-ended); 2-D integration method: RooAdaptiveIntegratorND (N/A if open-ended); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf901__numintconfig_8C.html:7084,config,configuration,7084,doc/master/rf901__numintconfig_8C.html,https://root.cern,https://root.cern/doc/master/rf901__numintconfig_8C.html,1,['config'],['configuration']
Modifiability,"ooNode xRooNode::shallowCopy ; (; const std::string & ; name, . std::shared_ptr< xRooNode > ; parent = nullptr . ). private . Definition at line 2282 of file xRooNode.cxx. ◆ sterilize(). void xRooNode::sterilize ; (; ); const. private . Definition at line 7445 of file xRooNode.cxx. ◆ Streamer(). void ROOT::Experimental::XRooFit::xRooNode::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TNamed. ◆ StreamerNVirtual(). void ROOT::Experimental::XRooFit::xRooNode::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 503 of file xRooNode.h. ◆ style(). std::shared_ptr< TStyle > xRooNode::style ; (; TObject * ; initObject = nullptr, . bool ; autoCreate = true . ); const. Definition at line 4550 of file xRooNode.cxx. ◆ variations(). xRooNode xRooNode::variations ; (; ); const. Definition at line 5904 of file xRooNode.cxx. ◆ vars(). xRooNode xRooNode::vars ; (; ); const. List of variables (observables and parameters) of this node. ; Definition at line 5424 of file xRooNode.cxx. ◆ Vary(). xRooNode xRooNode::Vary ; (; const xRooNode & ; child). Definition at line 3107 of file xRooNode.cxx. ◆ ws(). RooWorkspace * xRooNode::ws ; (; ); const. The RooWorkspace this node belong to, if any. ; Definition at line 4249 of file xRooNode.cxx. ◆ xget() [1/2]. TObject * ROOT::Experimental::XRooFit::xRooNode::xget ; (; ); const. inlineprivate . Definition at line 238 of file xRooNode.h. ◆ xget() [2/2]. template<typename T > . T * ROOT::Experimental::XRooFit::xRooNode::xget ; (; ); const. inline . Definition at line 240 of file xRooNode.h. Member Data Documentation. ◆ auxFunctions. std::map< std::string, std::tuple< std::function< double(double, double, double)>, bool > > xRooNode::auxFunctions. static . Definition at line 58 of file xRooNode.h. ◆ fAcquirer. bool ROOT::Experimental::XRooFit::xRooNode::fAcquirer = false. Definition at line 489 of file xRooNode.h. ◆ fBinNumber. int ROOT::Experimental",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode.html:48293,variab,variables,48293,doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode.html,1,['variab'],['variables']
Modifiability,"ooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; TIterator*_varItr! do not persist; RooSetProxy_varList; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxym. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooMomentMorph(); coverity[UNINIT_CTOR]. RooMomentMorph(const char* name, const char* title, RooAbsReal& _m, const RooArgList& varList, const RooArgList& pdfList, const TVectorD& mrefpoints, const RooMomentMorph::Setting& setting = NonLinearPosFractions); CTOR. RooMomentMorph(const char* name, const char* title, RooAbsReal& _m, const RooArgList& varList, const RooArgList& pdfList, const RooArgList& mrefList, const RooMomentMorph::Setting& setting = NonLinearPosFractions); CTOR. RooMomentMorph(const RooMomentMorph& other, const char* name = 0). ~RooMomentMorph(). void initialize(). Double_t getVal(const RooArgSet* set = 0) const; Special version of getVal() overrides RooAbsReal::getVal() to save value of current normalization set. RooAbsPdf* sumPdf(const RooArgSet* nset). Double_t evaluate() const. int idxmin(const double& m) const. int idxmax(const double& m) const. TObject* clone(const char* newname) const; { return new RooMomentMorph",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooMomentMorph.html:41500,Inherit,Inheritance,41500,root/html532/RooMomentMorph.html,https://root.cern,https://root.cern/root/html532/RooMomentMorph.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ooObjCacheManagerRooAbsPdf::_normMgrThe cache manager; TStringRooAbsPdf::_normRangeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; RooRealProxy_x; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooKeysPdf.html:43212,config,configuration,43212,root/html534/RooKeysPdf.html,https://root.cern,https://root.cern/root/html534/RooKeysPdf.html,12,['config'],['configuration']
Modifiability,"ooObjCacheManagerRooAbsPdf::_normMgrThe cache manager; TStringRooAbsPdf::_normRangeNormalization range; static TStringRooAbsPdf::_normRangeOverride; RooArgSet*RooAbsPdf::_normSet! Normalization set with for above integral; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; RooListProxy_x; Double_t_z; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooMultiVarGaussian.html:44927,config,configuration,44927,root/html602/RooMultiVarGaussian.html,https://root.cern,https://root.cern/root/html602/RooMultiVarGaussian.html,8,['config'],['configuration']
Modifiability,"ooPrintable::ContentsOptionRooPrintable::kName; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static RooPrintable::StyleOptionRooPrintable::kSingleLine; static RooPrintable::StyleOptionRooPrintable::kStandard; static RooPrintable::ContentsOptionRooPrintable::kTitle; static RooPrintable::StyleOptionRooPrintable::kTreeStructure; static RooPrintable::ContentsOptionRooPrintable::kValue; static RooPrintable::StyleOptionRooPrintable::kVerbose; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TIterator*_cacheIter! Iterator over cached variables; RooArgSet_cachedVars! External variables cached with this data set; RooAbsDataStore*_dstoreData storage implementation; TIterator*_iterator! Iterator over dimension variables; static Int_tRooPrintable::_nameLength; map<string,RooAbsData*>_ownedComponentsOwned external components; RooArgSet_varsDimensions of this data set; static RooAbsData::StorageTypedefaultStorageType; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void setDefaultStorageType(RooAbsData::StorageType s). void claimVars(RooAbsData* ). Bool_t releaseVars(RooAbsData* ); If return value is true variables can be deleted. RooAbsData(); Default constructor. RooAbsData(const char* name, const char* title, const RooArgSet& vars, RooAbsDataStore* store = 0); Constructor from a set of variables. Only fundamental elements of vars; (RooRealVar,RooCategory etc) are stored as part of the dataset. RooAbsData(const RooAbsData& other, const char* newname = 0); Copy constructor. ~RooAbsData(); Destructor. void convertToVectorStore(); Convert tree-based storage to vector-based storage. Bool_t changeObservableName(c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsData.html:15601,variab,variables,15601,root/html602/RooAbsData.html,https://root.cern,https://root.cern/root/html602/RooAbsData.html,12,['variab'],['variables']
Modifiability,"ooPrintable::kName; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static RooPrintable::StyleOptionRooPrintable::kSingleLine; static RooPrintable::StyleOptionRooPrintable::kStandard; static RooPrintable::ContentsOptionRooPrintable::kTitle; static RooPrintable::StyleOptionRooPrintable::kTreeStructure; static RooPrintable::ContentsOptionRooPrintable::kValue; static RooPrintable::StyleOptionRooPrintable::kVerbose; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie; static RooGrid::(anonymous)maxBins. protected:. UInt_t_binsNumber of dimensions, bins and boxes; UInt_t_boxesNumber of dimensions, bins and boxes; Double_t*_d! Internal workspace; Double_t*_delx! Internal workspace; UInt_t_dimNumber of dimensions, bins and boxes; static Int_tRooPrintable::_nameLength; Bool_t_validIs configuration valid; Double_t_volVolume; Double_t*_weight! Internal workspace; Double_t*_xi! Internal workspace; Double_t*_xin! Internal workspace; Double_t*_xl! Internal workspace; Double_t*_xu! Internal workspace. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooGrid(); Default constructor. RooGrid(const RooAbsFunc& function); Constructor with given function binding. ~RooGrid(); Destructor. Bool_t initialize(const RooAbsFunc& function); Calculate and store the grid dimensions and volume using the; specified function, and initialize the grid using a single bin.; Return kTRUE, or else kFALSE if the range is not valid. void resize(UInt_t bins); Adjust the subdivision of each axis to give the specified; number of bins, using an algorithm that preserves relative; bin density. The new binning can be finer or coarser than; the original binning. void resetValues(); Reset the values associated with each grid cell. void g",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooGrid.html:8524,config,configuration,8524,root/html602/RooGrid.html,https://root.cern,https://root.cern/root/html602/RooGrid.html,4,['config'],['configuration']
Modifiability,"ooPrintable::kTitle; static RooPrintable::StyleOptionRooPrintable::kTreeStructure; static RooPrintable::ContentsOptionRooPrintable::kValue; static RooPrintable::StyleOptionRooPrintable::kVerbose; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Bool_tRooAbsCollection::_allRRVAll contents are RRV; Bool_t_defShapeServerPropagate shape dirty flags?; Bool_t_defValueServerPropagate value dirty flags?; TIterator*_iter! do not persist; RooLinkedListRooAbsCollection::_listActual object store; TStringRooAbsCollection::_nameOur name.; static Int_tRooPrintable::_nameLength; RooArgSet*RooAbsProxy::_nset! Normalization set to be used for evaluation of RooAbsPdf contents; Bool_tRooAbsCollection::_ownContFlag to identify a list that owns its contents.; RooAbsArg*_ownerPointer to owner; TNamed*RooAbsCollection::_structureTag! Structure tag; TNamed*RooAbsCollection::_typedStructureTag! Typed structure tag. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooListProxy(const char* name, const char* desc, RooAbsArg* owner, Bool_t defValueServer = kTRUE, Bool_t defShapeServer = kFALSE); Constructor with proxy name, description and pointer to ownder of; the RooListProxy. The default strategy for value/shape dirty flag; propagation of the list contents to the list owner is controlled; by the defValueServer and defShapeServer flags. RooListProxy(const char* name, RooAbsArg* owner, const RooListProxy& other); Copy constructor with name of proxy, pointer to owner of this proxy and; reference to list proxy to be copied. ~RooListProxy(); Destructor. Bool_t add(const RooAbsArg& var, Bool_t valueServer, Bool_t shapeServer, Bool_t silent); Add object to list with explicitl directives on value and shape dirty flag propagation; of inserted object to list owner. Bool_t add(const RooAbsArg& var, Bool_t silent = kFALSE); Reimplementation of standard RooArgList::add(). Bool_t addOwned(RooAbsArg& var, Bool",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooListProxy.html:13018,Inherit,Inheritance,13018,root/html602/RooListProxy.html,https://root.cern,https://root.cern/root/html602/RooListProxy.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,ooRealMPFE.h. ◆ _constChanged. std::vector<bool> RooRealMPFE::_constChanged. mutableprotected . ! Flags if variable needs update on server-side ; Definition at line 84 of file RooRealMPFE.h. ◆ _evalCarry. double RooRealMPFE::_evalCarry. mutableprotected . ! ; Definition at line 87 of file RooRealMPFE.h. ◆ _forceCalc. bool RooRealMPFE::_forceCalc. mutableprotected . Definition at line 78 of file RooRealMPFE.h. ◆ _inlineMode. bool RooRealMPFE::_inlineMode. protected . Definition at line 77 of file RooRealMPFE.h. ◆ _pipe. RooFit::BidirMMapPipe* RooRealMPFE::_pipe. protected . ! connection to child ; Definition at line 81 of file RooRealMPFE.h. ◆ _remoteEvalErrorLoggingState. RooAbsReal::ErrorLoggingMode RooRealMPFE::_remoteEvalErrorLoggingState. mutableprotected . Definition at line 79 of file RooRealMPFE.h. ◆ _retrieveDispatched. bool RooRealMPFE::_retrieveDispatched. mutableprotected . ! ; Definition at line 86 of file RooRealMPFE.h. ◆ _saveVars. RooArgList RooRealMPFE::_saveVars. protected . Copy of variables. ; Definition at line 73 of file RooRealMPFE.h. ◆ _state. State RooRealMPFE::_state. protected . Definition at line 60 of file RooRealMPFE.h. ◆ _updateMaster. RooRealMPFE* RooRealMPFE::_updateMaster. protected . ! Update master ; Definition at line 85 of file RooRealMPFE.h. ◆ _valueChanged. std::vector<bool> RooRealMPFE::_valueChanged. mutableprotected . ! Flags if variable needs update on server-side ; Definition at line 83 of file RooRealMPFE.h. ◆ _vars. RooListProxy RooRealMPFE::_vars. protected . Variables. ; Definition at line 72 of file RooRealMPFE.h. ◆ _verboseClient. bool RooRealMPFE::_verboseClient. protected . Definition at line 75 of file RooRealMPFE.h. ◆ _verboseServer. bool RooRealMPFE::_verboseServer. protected . Definition at line 76 of file RooRealMPFE.h. roofit/roofitcore/src/RooRealMPFE.h; roofit/roofitcore/src/RooRealMPFE.cxx. RooRealMPFE. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:07 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealMPFE.html:69732,variab,variables,69732,doc/master/classRooRealMPFE.html,https://root.cern,https://root.cern/doc/master/classRooRealMPFE.html,2,['variab'],"['variable', 'variables']"
Modifiability,"ooRealVar kSM(""kSM"", ""sm modifier"", 1.0);; RooRealVar cHq3(""cHq3"", ""EFT modifier"", -10.0, 10.0);; cHq3.setAttribute(""NewPhysics"", true);; RooRealVar cHl3(""cHl3"", ""EFT modifier"", -10.0, 10.0);; cHl3.setAttribute(""NewPhysics"", true);; RooRealVar cHDD(""cHDD"", ""EFT modifier"", -10.0, 10.0);; cHDD.setAttribute(""NewPhysics"", true);; ; // I n p u t s n e e d e d f o r c o n f i g; // ---------------------------------------------; std::string infilename = std::string(gROOT->GetTutorialDir()) + ""/roofit/input_histos_rf_lagrangianmorph.root"";; std::vector<std::string> samplelist = {""SM_NPsq0"", ""cHq3_NPsq1"", ""cHq3_NPsq2"", ""cHl3_NPsq1"",; ""cHl3_NPsq2"", ""cHDD_NPsq1"", ""cHDD_NPsq2"", ""cHl3_cHDD_NPsq2"",; ""cHq3_cHDD_NPsq2"", ""cHl3_cHq3_NPsq2""};; ; // S e t u p C o n f i g; // ---------------------------------------------; RooLagrangianMorphFunc::Config config;; config.fileName = infilename;; config.observableName = observablename;; config.folderNames = samplelist;; config.couplings.add(cHq3);; config.couplings.add(cHl3);; config.couplings.add(cHDD);; config.couplings.add(kSM);; ; // C r e a t e m o r p h i n g f u n c t i o n; // ---------------------------------------------; RooLagrangianMorphFunc morphfunc(""morphfunc"", ""morphed dist. of pTV"", config);; ; // C r e a t e p s e u d o d a t a h i s t o g r a m; // f o r f i t; // ---------------------------------------------; morphfunc.setParameter(""cHq3"", 0.01);; morphfunc.setParameter(""cHl3"", 1.0);; morphfunc.setParameter(""cHDD"", 0.2);; ; auto pseudo_hist = morphfunc.createTH1(""pseudo_hist"");; auto pseudo_dh = new RooDataHist(""pseudo_dh"", ""pseudo_dh"", RooArgList(obsvar), pseudo_hist);; ; // reset parameters to zeros before fit; morphfunc.setParameter(""cHq3"", 0.0);; morphfunc.setParameter(""cHl3"", 0.0);; morphfunc.setParameter(""cHDD"", 0.0);; ; // error set used as initial step size; cHq3.setError(0.1);; cHl3.setError(0.1);; cHDD.setError(0.1);; ; // W r a p p d f o n m o r p h f u n c a n d; // f i t t o d a t a h i s t o g r a m; // ----",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf712__lagrangianmorphfit_8C.html:1925,coupling,couplings,1925,doc/master/rf712__lagrangianmorphfit_8C.html,https://root.cern,https://root.cern/doc/master/rf712__lagrangianmorphfit_8C.html,1,['coupling'],['couplings']
Modifiability,"ooRealVar.h; kBlue@ kBlueDefinition Rtypes.h:66; TAxis.h; TCanvas.h; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; TH1.h; gPad#define gPadDefinition TVirtualPad.h:308; RooDecaySingle or double sided decay function that can be analytically convolved with any RooResolutionModel ...Definition RooDecay.h:22; RooDecay::DoubleSided@ DoubleSidedDefinition RooDecay.h:25; RooGaussModelClass RooGaussModel implements a RooResolutionModel that models a Gaussian distribution.Definition RooGaussModel.h:25; RooHistPdfA propability density function sampled from a multidimensional histogram.Definition RooHistPdf.h:30; RooLandauLandau distribution p.d.f.Definition RooLandau.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooProdPdfEfficient implementation of a product of PDFs of the form.Definition RooProdPdf.h:33; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::GetZaxisTAxis * GetZaxis()Definition TH1.h:326; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf307__fullpereventerrors_8C.html:5115,variab,variable,5115,doc/master/rf307__fullpereventerrors_8C.html,https://root.cern,https://root.cern/doc/master/rf307__fullpereventerrors_8C.html,1,['variab'],['variable']
Modifiability,"ooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxyrho1; RooRealProxyrho2; RooRealProxysigp; RooRealProxyx; RooRealProxyxi. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooBukinPdf(const char* name, const char* title, RooAbsReal& _x, RooAbsReal& _Xp, RooAbsReal& _sigp, RooAbsReal& _xi, RooAbsReal& _rho1, RooAbsReal& _rho2); The two addresses refer to our first dependent variable and; parameter, respectively, as declared in the rdl file; Constructor. RooBukinPdf(const RooBukinPdf& other, const char* name = 0); Copy constructor. Double_t evaluate() const; Implementation. RooBukinPdf(); {}. TObject* clone(const char* newname) const; { return new RooBukinPdf(*this,newname);	}. virtual ~RooBukinPdf(); { }. » Last changed: Tue Jun 30 14:31:15 2015 » Last generated: 2015-06-30 14:31; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooBukinPdf.html:45089,variab,variable,45089,root/html602/RooBukinPdf.html,https://root.cern,https://root.cern/root/html602/RooBukinPdf.html,4,"['Inherit', 'variab']","['Inheritance', 'Inherited', 'variable']"
Modifiability,"ooRefCountListRooAbsArg::_serverListlist of server objects; Roo1DMomentMorphFunction::Setting_setting; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; TIterator*_varItr! do not persist; RooSetProxy_varList; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxym. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Roo1DMomentMorphFunction(). Roo1DMomentMorphFunction(const char* name, const char* title, RooAbsReal& _m, const RooArgList& varList, const TVectorD& mrefpoints, const Roo1DMomentMorphFunction::Setting& setting = Linear); CTOR. Roo1DMomentMorphFunction(const Roo1DMomentMorphFunction& other, const char* name = 0). ~Roo1DMomentMorphFunction(). void initialize(). Double_t evaluate() const. void calculateFractions() const. int idxmin(const double& m) const. int idxmax(const double& m) const. TObject* clone(const char* newname) const; { return new Roo1DMomentMorphFunction(*this,newname); }. void setMode(const Roo1DMomentMorphFunction::Setting& setting); { _setting = setting; }. Int_t ij(const Int_t& i, const Int_t& j) const; { return (i*_varList.getSize()+j); }. » Last changed: Tue Jun 2 15:26:41 2015 » Last generated: 2015-06-02 15:26; This page has been automatically generated. For comments or suggestions regarding the documentation or ROO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/Roo1DMomentMorphFunction.html:37720,Inherit,Inheritance,37720,root/html604/Roo1DMomentMorphFunction.html,https://root.cern,https://root.cern/root/html604/Roo1DMomentMorphFunction.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ooRefCountListRooAbsArg::_serverListlist of server objects; Roo1DMomentMorphFunction::Setting_setting; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; TIterator*_varItr! do not persist; RooSetProxy_varList; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxym. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Roo1DMomentMorphFunction(). Roo1DMomentMorphFunction(const char* name, const char* title, RooAbsReal& _m, const RooArgList& varList, const TVectorD& mrefpoints, const Roo1DMomentMorphFunction::Setting& setting = Linear); CTOR. Roo1DMomentMorphFunction(const Roo1DMomentMorphFunction& other, const char* name = 0). ~Roo1DMomentMorphFunction(). void initialize(). Double_t evaluate() const. void calculateFractions() const. int idxmin(const double& m) const. int idxmax(const double& m) const. TObject* clone(const char* newname) const; { return new Roo1DMomentMorphFunction(*this,newname); }. void setMode(const Roo1DMomentMorphFunction::Setting& setting); { _setting = setting; }. Int_t ij(const Int_t& i, const Int_t& j) const; { return (i*_varList.getSize()+j); }. » Last changed: Tue Jun 30 14:29:41 2015 » Last generated: 2015-06-30 14:29; This page has been automatically generated. For comments or suggestions regarding the documentation or RO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/Roo1DMomentMorphFunction.html:37720,Inherit,Inheritance,37720,root/html602/Roo1DMomentMorphFunction.html,https://root.cern,https://root.cern/root/html602/Roo1DMomentMorphFunction.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ooSetProxy &proxy);  Register an RooSetProxy in the proxy list. ;  ; void setProxyNormSet (const RooArgSet *nset);  Forward a change in the cached normalization argset to all the registered proxies. ;  ; void setShapeDirty (const RooAbsArg *source);  Notify that a shape-like property (e.g. binning) has changed. ;  ; void setValueDirty (const RooAbsArg *source);  Force element to re-evaluate itself when a value is requested. ;  ; void unRegisterProxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; const ROOT::Math::IBaseFunctionMultiDim * func = nullptr;  ; RooListProxy vars;  ; double * x = nullptr;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFunctorPdfBinding.html:68079,inherit,inherited,68079,doc/master/classRooFunctorPdfBinding.html,https://root.cern,https://root.cern/doc/master/classRooFunctorPdfBinding.html,1,['inherit'],['inherited']
Modifiability,"ooSetProxyintobsobservables that p.d.f is integrated over; RooRealProxyintpdfp.d.f that is integrated. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooProjectedPdf(); Default constructor. RooProjectedPdf(const char* name, const char* title, RooAbsReal& _intpdf, const RooArgSet& intObs); Construct projection of input pdf '_intpdf' over observables 'intObs'. RooProjectedPdf(const RooProjectedPdf& other, const char* name = 0); Copy constructor. Double_t getVal(const RooArgSet* set = 0) const; Special version of getVal() overrides RooAbsReal::getVal() to save value of current normalization set. Double_t evaluate() const; Evaluate projected p.d.f. const RooAbsReal* getProjection(const RooArgSet* iset, const RooArgSet* nset, const char* rangeName, int& code) const; Retrieve object representing projection integral of input p.d.f; over observables iset, while normalizing over observables; nset. The code argument returned by reference is the unique code; defining this particular projection configuration. RooAbsPdf* createProjection(const RooArgSet& iset); Special version of RooAbsReal::createProjection that deals with; projections of projections. Instead of integrating twice, a new; RooProjectedPdf is returned that is configured to perform the; complete integration in one step. Bool_t forceAnalyticalInt(const RooAbsArg& dep) const; Force RooRealIntegral to relegate integration of all observables to internal logic. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Mark all requested variables as internally integrated. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Return analytical integral represent by appropriate element of projection cache. Int_t getGenerator(const RooArgSet& directVars, RooArgSet& generateVars, Bool_t staticInitOK = kTRUE) const; No internal generator is implemented. void gener",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooProjectedPdf.html:41080,config,configuration,41080,root/html526/RooProjectedPdf.html,https://root.cern,https://root.cern/root/html526/RooProjectedPdf.html,3,['config'],['configuration']
Modifiability,"ooStats::HistFactory::ShapeFactor. Function Members (Methods); public:. ~ShapeFactor(); stringGetHistoName(); stringGetHistoPath(); TH1*GetInitialShape(); stringGetInputFile(); stringGetName(); boolHasInitialShape(); boolIsConstant(); RooStats::HistFactory::ShapeFactor&operator=(const RooStats::HistFactory::ShapeFactor&); voidPrint(ostream& = std::cout); voidPrintXML(ostream&); voidSetConstant(bool constant); voidSetHistoName(const string& HistoName); voidSetHistoPath(const string& HistoPath); voidSetInitialShape(TH1* shape); voidSetInputFile(const string& InputFile); voidSetName(const string& Name); RooStats::HistFactory::ShapeFactorShapeFactor(); RooStats::HistFactory::ShapeFactorShapeFactor(const RooStats::HistFactory::ShapeFactor&); voidwriteToFile(const string& FileName, const string& DirName). Data Members; protected:. boolfConstant; boolfHasInitialShape; stringfHistoName; stringfHistoPath; stringfInputFile; stringfName; TH1*fhInitialShape. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetName(const string& Name); { fName = Name; }. std::string GetName(); { return fName; }. void Print(ostream& = std::cout). void PrintXML(ostream& ). void writeToFile(const string& FileName, const string& DirName). void SetInputFile(const string& InputFile); { fInputFile = InputFile; }. std::string GetInputFile(); { return fInputFile; }. void SetHistoName(const string& HistoName); { fHistoName = HistoName; }. std::string GetHistoName(); { return fHistoName; }. void SetHistoPath(const string& HistoPath); { fHistoPath = HistoPath; }. std::string GetHistoPath(); { return fHistoPath; }. ShapeFactor(). void SetInitialShape(TH1* shape); { fhInitialShape = shape; }. TH1* GetInitialShape(); { return fhInitialShape; }. void SetConstant(bool constant); { fConstant = constant; }. bool IsConstant(); { return fConstant; }. bool HasInitialShape(); { return fHasInitialShape; }. » Author: George Lewis, Kyle Cranmer » Copyright (C) 1995-2008, Rene",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__HistFactory__ShapeFactor.html:1272,Inherit,Inheritance,1272,root/html534/RooStats__HistFactory__ShapeFactor.html,https://root.cern,https://root.cern/root/html534/RooStats__HistFactory__ShapeFactor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ooVectorDataStore &other, const char *newname=nullptr);  Regular copy constructor. ;  ;  RooVectorDataStore (const RooVectorDataStore &other, const RooArgSet &vars, const char *newname=nullptr);  Clone constructor, must connect internal storage to given new external set of variables. ;  ;  RooVectorDataStore (RooStringView name, RooStringView title, const RooArgSet &vars, const char *wgtVarName=nullptr);  ;  RooVectorDataStore (RooStringView name, RooStringView title, RooAbsDataStore &tds, const RooArgSet &vars, const RooFormulaVar *cutVar, const char *cutRange, std::size_t nStart, std::size_t nStop, const char *wgtVarName=nullptr);  ;  ~RooVectorDataStore () override;  Destructor. ;  ; RooAbsArg * addColumn (RooAbsArg &var, bool adjustRange=true) override;  Add a new column to the data set which holds the pre-calculated values of 'newVar'. ;  ; void append (RooAbsDataStore &other) override;  ; void attachBuffers (const RooArgSet &extObs) override;  ; void attachCache (const RooAbsArg *newOwner, const RooArgSet &cachedVars) override;  Initialize cache of dataset: attach variables of cache ArgSet to the corresponding TTree branches. ;  ; const RooVectorDataStore * cache () const;  ; void cacheArgs (const RooAbsArg *owner, RooArgSet &varSet, const RooArgSet *nset=nullptr, bool skipZeroWeights=true) override;  Cache given RooAbsArgs: The tree is given direct write access of the args internal cache the args values is pre-calculated for all data points in this data collection. ;  ; const RooAbsArg * cacheOwner () override;  ; std::vector< CatVector * > & catStoreList ();  ; bool changeObservableName (const char *from, const char *to) override;  ; RooAbsDataStore * clone (const char *newname=nullptr) const override;  ; RooAbsDataStore * clone (const RooArgSet &vars, const char *newname=nullptr) const override;  ; void dump () override;  ; Int_t fill () override;  Interface function to TTree::Fill. ;  ; virtual const RooArgSet * get () const;  ; const RooArgSet * get (Int_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooVectorDataStore.html:2536,variab,variables,2536,doc/master/classRooVectorDataStore.html,https://root.cern,https://root.cern/doc/master/classRooVectorDataStore.html,1,['variab'],['variables']
Modifiability,"ood.class.C␛[0m; : Higgs_ClassificationOutput.root:/dataset/Method_Likelihood/Likelihood; Factory : Training finished; : ; Factory : Train method: Fisher for Classification; : ; : ; : ␛[1m================================================================␛[0m; : ␛[1mH e l p f o r M V A m e t h o d [ Fisher ] :␛[0m; : ; : ␛[1m--- Short description:␛[0m; : ; : Fisher discriminants select events by distinguishing the mean ; : values of the signal and background distributions in a trans- ; : formed variable space where linear correlations are removed.; : ; : (More precisely: the ""linear discriminator"" determines; : an axis in the (correlated) hyperspace of the input ; : variables such that, when projecting the output classes ; : (signal and background) upon this axis, they are pushed ; : as far as possible away from each other, while events; : of a same class are confined in a close vicinity. The ; : linearity property of this classifier is reflected in the ; : metric with which ""far apart"" and ""close vicinity"" are ; : determined: the covariance matrix of the discriminating; : variable space.); : ; : ␛[1m--- Performance optimisation:␛[0m; : ; : Optimal performance for Fisher discriminants is obtained for ; : linearly correlated Gaussian-distributed variables. Any deviation; : from this ideal reduces the achievable separation power. In ; : particular, no discrimination at all is achieved for a variable; : that has the same sample mean for signal and background, even if ; : the shapes of the distributions are very different. Thus, Fisher ; : discriminants often benefit from suitable transformations of the ; : input variables. For example, if a variable x in [-1,1] has a ; : a parabolic signal distributions, and a uniform background; : distributions, their mean value is zero in both cases, leading ; : to no separation. The simple transformation x -> |x| renders this ; : variable powerful for the use in a Fisher discriminant.; : ; : ␛[1m--- Performance tuning via configuration",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__Higgs__Classification_8C.html:19398,variab,variable,19398,doc/master/TMVA__Higgs__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__Higgs__Classification_8C.html,2,['variab'],['variable']
Modifiability,"oofMgr*TProof::fManagermanager to which this session belongs (if any); Bool_tTProof::fMasterServtrue if we are a master server; TStringTNamed::fNameobject identifier; Int_tTProof::fProtocolremote PROOF server protocol version number; TProof::EQueryModeTProof::fQueryModedefault query mode; TList*TProof::fRunningDSetsTemporary datasets used for async running; TSelector*TProof::fSelectorSelector to be processed, if any; TProofMgr::EServTypeTProof::fServTypetype of server: proofd, XrdProofd; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TList*TProof::fSlaveslist of all slave servers as in config file; TList*TProof::fTerminatedSlaveInfoslist of unique infos of terminated slaves; TStringTNamed::fTitleobject title; Long64_tTProof::fTotalBytesnumber of bytes to be analyzed; TUrlTProof::fUrlUrl of the master; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TSemaphore*TProof::fgSemaphoresemaphore to control no of parallel startup threads. private:. TCondor*fCondorproxy for our Condor pool; TTimer*fTimertimer for delayed Condor COD suspend. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofCondor(const char* masterurl, const char* conffile = kPROOF_ConfFile, const char* confdir = kPROOF_ConfDir, Int_t loglevel = 0, const char* alias = 0, TProofMgr* mgr = 0); Start proof using condor. ~TProofCondor(); Clean up Condor PROOF environment. Bool_t StartSlaves(Bool_t ); Setup Condor workers using dynamic information. void SetActive(Bool_t active); Suspend or resume PROOF via Condor. TString GetJobAd(); Get job Ad. void SetActive(); { TProof::SetActive(); }. » Author: Fons Rademakers 13/02/97 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/proof:$Id$ » Last generated: 2015-03-14 16:47; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofCondor.html:26620,Inherit,Inheritance,26620,root/html534/TProofCondor.html,https://root.cern,https://root.cern/root/html534/TProofCondor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"oofMgr::UploadFiles. Upload files listed in ""file"" to PROOF cluster.; Where file = name of file containing list of files and; dataset = dataset name and opt is a combination of EUploadOpt bits.; Each file description (line) can include wildcards.; Check TFileInfo compatibility. Bool_t RegisterDataSet(const char* name, TFileCollection* dataset, const char* optStr = """"); Register the 'dataSet' on the cluster under the current; user, group and the given 'dataSetName'.; If a dataset with the same name already exists the action fails unless 'opts'; contains 'O', in which case the old dataset is overwritten, or contains 'U',; in which case 'newDataSet' is added to the existing dataset (duplications are; ignored, if any).; If 'opts' contains 'V' the dataset files are also verified (if the dataset manager; is configured to allow so). By default the dataset is not verified.; If 'opts' contains 'T' the in the dataset object (status bits, meta,...); is trusted, i.e. not reset (if the dataset manager is configured to allow so).; If 'opts' contains 'S' validation would be run serially (meaningful only if; validation is required).; Returns kTRUE on success. Int_t SetDataSetTreeName(const char* dataset, const char* treename); Set/Change the name of the default tree. The tree name may contain; subdir specification in the form ""subdir/name"".; Returns 0 on success, -1 otherwise. TMap * GetDataSets(const char* uri = """", const char* optStr = """"); Lists all datasets that match given uri.; The 'optStr' can contain a comma-separated list of servers for which the; information is wanted. If ':lite:' (case insensitive) is specified in 'optStr'; only the global information in the TFileCollection is retrieved; useful to only; get the list of available datasets. void ShowDataSets(const char* uri = """", const char* optStr = """"); Shows datasets in locations that match the uri.; By default shows the user's datasets and global ones. Bool_t ExistsDataSet(const char* dataset); Returns kTRUE if 'datase",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProof.html:91779,config,configured,91779,root/html534/TProof.html,https://root.cern,https://root.cern/root/html534/TProof.html,6,['config'],['configured']
Modifiability,"oofNodeInfo () override;  ; void Assign (const TProofNodeInfo &n);  Asssign content of node n to this node. ;  ; const TString & GetConfig () const;  ; const TString & GetId () const;  ; const TString & GetImage () const;  ; const TString & GetMsd () const;  ; const char * GetName () const override;  Returns name of object. ;  ; const TString & GetNodeName () const;  ; ENodeType GetNodeType () const;  ; Int_t GetNWrks () const;  ; const TString & GetOrdinal () const;  ; Int_t GetPerfIndex () const;  ; Int_t GetPort () const;  ; const TString & GetWorkDir () const;  ; TClass * IsA () const override;  ; Bool_t IsMaster () const;  ; Bool_t IsSubMaster () const;  ; Bool_t IsWorker () const;  ; void Print (const Option_t *) const override;  Print the TProofNodeInfo structure. ;  ; void SetNodeType (ENodeType nt);  ; void SetNWrks (Int_t nw);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofNodeInfo.html:2522,inherit,inherited,2522,doc/master/classTProofNodeInfo.html,https://root.cern,https://root.cern/doc/master/classTProofNodeInfo.html,1,['inherit'],['inherited']
Modifiability,"ook for a method in this class that has the interface function; address faddr. TMethod * GetClassMethod(const char* name, const char* signature); Look for a method in this class that has the name and; signature. Int_t GetNdata(); Return the number of data members of this class; Note that in case the list of data members is not yet created, it will be done; by GetListOfDataMembers(). Int_t GetNmethods(); Return the number of methods of this class; Note that in case the list of methods is not yet created, it will be done; by GetListOfMethods(). TVirtualStreamerInfo* GetStreamerInfo(Int_t version = 0) const; returns a pointer to the TVirtualStreamerInfo object for version; If the object doest not exist, it is created. Note: There are two special version numbers:. 0: Use the class version from the currently loaded class library.; -1: Assume no class library loaded (emulated class). Warning: If we create a new streamer info, whether or not the build; optimizes is controlled externally to us by a global variable!; Don't call us unless you have set that variable properly; with TStreamer::Optimize()!. void IgnoreTObjectStreamer(Bool_t ignore = kTRUE); When the class kIgnoreTObjectStreamer bit is set, the automatically; generated Streamer will not call TObject::Streamer.; This option saves the TObject space overhead on the file.; However, the information (fBits, fUniqueID) of TObject is lost. Note that this function must be called for the class deriving; directly from TObject, eg, assuming that BigTrack derives from Track; and Track derives from TObject, one must do:; Track::Class()->IgnoreTObjectStreamer();; and not:; BigTrack::Class()->IgnoreTObjectStreamer();. Bool_t InheritsFrom(const char *classname); Return kTRUE if this class inherits from a class with name ""classname"".; note that the function returns KTRUE in case classname is the class itself. Bool_t InheritsFrom(const TClass *cl); Return kTRUE if this class inherits from class cl.; note that the function returns KT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TClass.html:29426,variab,variable,29426,root/html526/TClass.html,https://root.cern,https://root.cern/root/html526/TClass.html,2,['variab'],['variable']
Modifiability,"ook for a method in this class that has the interface function; address faddr. TMethod * GetClassMethod(const char* name, const char* signature); Look for a method in this class that has the name and; signature. Int_t GetNdata(); Return the number of data members of this class; Note that in case the list of data members is not yet created, it will be done; by GetListOfDataMembers(). Int_t GetNmethods(); Return the number of methods of this class; Note that in case the list of methods is not yet created, it will be done; by GetListOfMethods(). TVirtualStreamerInfo* GetStreamerInfo(Int_t version = 0) const; returns a pointer to the TVirtualStreamerInfo object for version; If the object doest not exist, it is created. Note: There are two special version numbers:. 0: Use the class version from the currently loaded class library.; -1: Assume no class library loaded (emulated class). Warning: If we create a new streamer info, whether or not the build; optimizes is controlled externally to us by a global variable!; Don't call us unless you have set that variable properly; with TStreamer::Optimize()!. void IgnoreTObjectStreamer(Bool_t ignore = kTRUE); When the class kIgnoreTObjectStreamer bit is set, the automatically; generated Streamer will not call TObject::Streamer.; This option saves the TObject space overhead on the file.; However, the information (fBits, fUniqueID) of TObject is lost. Note that this function must be called for the class deriving; directly from TObject, eg, assuming that BigTrack derives from Track; and Track derives from TObject, one must do:; Track::Class()->IgnoreTObjectStreamer();; and not:; BigTrack::Class()->IgnoreTObjectStreamer();. Bool_t InheritsFrom(const char* cl) const; Return kTRUE if this class inherits from a class with name ""classname"".; note that the function returns KTRUE in case classname is the class itself. Bool_t InheritsFrom(const TClass* cl) const; Return kTRUE if this class inherits from class cl.; note that the function retur",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TClass.html:32826,variab,variable,32826,root/html528/TClass.html,https://root.cern,https://root.cern/root/html528/TClass.html,2,['variab'],['variable']
Modifiability,"ook for a method in this class that has the interface function; address faddr. TMethod * GetClassMethod(const char* name, const char* signature); Look for a method in this class that has the name and; signature. Int_t GetNdata(); Return the number of data members of this class; Note that in case the list of data members is not yet created, it will be done; by GetListOfDataMembers(). Int_t GetNmethods(); Return the number of methods of this class; Note that in case the list of methods is not yet created, it will be done; by GetListOfMethods(). TVirtualStreamerInfo* GetStreamerInfo(Int_t version = 0) const; returns a pointer to the TVirtualStreamerInfo object for version; If the object doest not exist, it is created. Note: There are two special version numbers:. 0: Use the class version from the currently loaded class library.; -1: Assume no class library loaded (emulated class). Warning: If we create a new streamer info, whether or not the build; optimizes is controlled externally to us by a global variable!; Don't call us unless you have set that variable properly; with TStreamer::Optimize()!. void IgnoreTObjectStreamer(Bool_t ignore = kTRUE); When the class kIgnoreTObjectStreamer bit is set, the automatically; generated Streamer will not call TObject::Streamer.; This option saves the TObject space overhead on the file.; However, the information (fBits, fUniqueID) of TObject is lost. Note that to be effective for objects streamed object-wise this function; must be called for the class deriving directly from TObject, eg, assuming; that BigTrack derives from Track and Track derives from TObject, one must do:; Track::Class()->IgnoreTObjectStreamer();; and not:; BigTrack::Class()->IgnoreTObjectStreamer();; To be effective for object streamed member-wise or split in a TTree,; this function must be called for the most derived class (i.e. BigTrack). Bool_t InheritsFrom(const char* cl) const; Return kTRUE if this class inherits from a class with name ""classname"".; note that",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TClass.html:33143,variab,variable,33143,root/html530/TClass.html,https://root.cern,https://root.cern/root/html530/TClass.html,6,['variab'],['variable']
Modifiability,"ook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidRooAbsRealLValue::setBin(Int_t ibin, const char* rangeName = 0); virtual voidRooAbsRealLValue::setBin(Int_t ibin, const RooAbsBinning& binning); virtual voidRooAbsRealLValue::setBinFast(Int_t ibin, const RooAbsBinning& binning); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); voidRooAbsRealLValue::setConstant(Bool_t value = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit(const char* unit); virtual voidsetVal(Double_t value); voidRooAbsArg::setValueDirty() const; TIterator*RooAbsArg::shapeClientIterator() const; virtual voidShowMembers(TMemberInspector& insp); RooMoment*RooAbsReal::sigma(RooRealVar& obs); RooMoment*RooAbsReal::sigma(RooRealVar& obs, const RooArgSet& nset); virtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooLinearVar.html:27182,config,config,27182,root/html528/RooLinearVar.html,https://root.cern,https://root.cern/root/html528/RooLinearVar.html,1,['config'],['config']
Modifiability,"ook, section 6.5.2.3 . The set of CP parameters used in this class is equivalent to the one used in the Physics Book, but it is not exactly the same. Starting from the set in the BaBar Book, in order to get the parameters used here you have to change the sign of both \(a_c^+\) and \(a_c^-\), and then substitute: ; \[; a_s^Q = S + Q \cdot \delta S \\; a_c^Q = C + Q \cdot \delta C; \]. where Q denotes the charge of the \(\rho\) meson. ; Definition at line 33 of file RooNonCPEigenDecay.h. Public Types; enum  DecayType { SingleSided; , DoubleSided; , Flipped; };  ;  Public Types inherited from RooAbsPdf; enum  ExtendMode { CanNotBeExtended; , CanBeExtended; , MustBeExtended; };  ;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNonCPEigenDecay.html:1093,inherit,inherited,1093,doc/master/classRooNonCPEigenDecay.html,https://root.cern,https://root.cern/doc/master/classRooNonCPEigenDecay.html,4,['inherit'],['inherited']
Modifiability,"ooking method: ␛[1mKNN␛[0m; : ; Factory : Booking method: ␛[1mLD␛[0m; : ; Factory : Booking method: ␛[1mDNN_CPU␛[0m; : ; : Parsing option string: ; : ... ""!H:V:ErrorStrategy=SUMOFSQUARES:VarTransform=G:WeightInitialization=XAVIERUNIFORM:Architecture=CPU:Layout=TANH|50,TANH|50,TANH|50,LINEAR:TrainingStrategy=LearningRate=1e-3,Momentum=0.3,ConvergenceSteps=20,BatchSize=50,TestRepetitions=1,WeightDecay=0.0,Regularization=None,Optimizer=Adam""; : The following options are set:; : - By User:; : <none>; : - Default:; : Boost_num: ""0"" [Number of times the classifier will be boosted]; : Parsing option string: ; : ... ""!H:V:ErrorStrategy=SUMOFSQUARES:VarTransform=G:WeightInitialization=XAVIERUNIFORM:Architecture=CPU:Layout=TANH|50,TANH|50,TANH|50,LINEAR:TrainingStrategy=LearningRate=1e-3,Momentum=0.3,ConvergenceSteps=20,BatchSize=50,TestRepetitions=1,WeightDecay=0.0,Regularization=None,Optimizer=Adam""; : The following options are set:; : - By User:; : V: ""True"" [Verbose output (short form of ""VerbosityLevel"" below - overrides the latter one)]; : VarTransform: ""G"" [List of variable transformations performed before training, e.g., ""D_Background,P_Signal,G,N_AllClasses"" for: ""Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed)""]; : H: ""False"" [Print method-specific help message]; : Layout: ""TANH|50,TANH|50,TANH|50,LINEAR"" [Layout of the network.]; : ErrorStrategy: ""SUMOFSQUARES"" [Loss function: Mean squared error (regression) or cross entropy (binary classification).]; : WeightInitialization: ""XAVIERUNIFORM"" [Weight initialization strategy]; : Architecture: ""CPU"" [Which architecture to perform the training on.]; : TrainingStrategy: ""LearningRate=1e-3,Momentum=0.3,ConvergenceSteps=20,BatchSize=50,TestRepetitions=1,WeightDecay=0.0,Regularization=None,Optimizer=Adam"" [Defines the training strategies.]; : - Default:; : VerbosityLevel: ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:3072,variab,variable,3072,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['variab'],['variable']
Modifiability,"ool & operator= (const TGSplitTool &)=delete;  . Private Attributes; TContextMenu * fContextMenu;  Context menu for the splitter. ;  ; TMap fMap;  map of rectangles/subframes ;  ; TGGC fRectGC;  rectangles drawing context ;  ; const TGFrame * fWindow;  frame to which tool tip is associated ;  ; Int_t fX;  X position in fWindow where to popup. ;  ; Int_t fY;  Y position in fWindow where to popup. ;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option st",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGSplitTool.html:26018,inherit,inherited,26018,doc/master/classTGSplitTool.html,https://root.cern,https://root.cern/doc/master/classTGSplitTool.html,1,['inherit'],['inherited']
Modifiability,"ool ROOT::Fit::Fitter::CalculateHessErrors ; (; ). perform an error analysis on the result using the Hessian Errors are obtained from the inverse of the Hessian matrix To be called only after fitting and when a minimizer supporting the Hessian calculations is used otherwise an error (false) is returned. ; A new FitResult with the Hessian result will be produced ; Definition at line 530 of file Fitter.cxx. ◆ CalculateMinosErrors(). bool ROOT::Fit::Fitter::CalculateMinosErrors ; (; ). perform an error analysis on the result using MINOS To be called only after fitting and when a minimizer supporting MINOS is used otherwise an error (false) is returned. ; The result will be appended in the fit result class Optionally a vector of parameter indices can be passed for selecting the parameters to analyse using FitConfig::SetMinosErrors ; Definition at line 593 of file Fitter.cxx. ◆ Config() [1/2]. FitConfig & ROOT::Fit::Fitter::Config ; (; ). inline . access to the configuration (non const method) ; Definition at line 427 of file Fitter.h. ◆ Config() [2/2]. const FitConfig & ROOT::Fit::Fitter::Config ; (; ); const. inline . access to the fit configuration (const method) ; Definition at line 422 of file Fitter.h. ◆ DoBinnedLikelihoodFit(). bool ROOT::Fit::Fitter::DoBinnedLikelihoodFit ; (; bool ; extended = true, . const ROOT::EExecutionPolicy & ; executionPolicy = ROOT::EExecutionPolicy::kSequential . ). protected . binned likelihood fit ; Definition at line 360 of file Fitter.cxx. ◆ DoInitMinimizer(). bool ROOT::Fit::Fitter::DoInitMinimizer ; (; ). protected . Definition at line 692 of file Fitter.cxx. ◆ DoLeastSquareFit(). bool ROOT::Fit::Fitter::DoLeastSquareFit ; (; const ROOT::EExecutionPolicy & ; executionPolicy = ROOT::EExecutionPolicy::kSequential). protected . least square fit ; Definition at line 309 of file Fitter.cxx. ◆ DoLinearFit(). bool ROOT::Fit::Fitter::DoLinearFit ; (; ). protected . linear least square fit ; Definition at line 513 of file Fitter.cxx. ◆ DoM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1Fitter.html:18412,config,configuration,18412,doc/master/classROOT_1_1Fit_1_1Fitter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1Fitter.html,1,['config'],['configuration']
Modifiability,"ool ROOT::Fit::Fitter::LikelihoodFit ; (; const std::shared_ptr< BinData > & ; data, . bool ; extended = true, . const ROOT::EExecutionPolicy & ; executionPolicy = ROOT::EExecutionPolicy::kSequential . ). inline . Binned Likelihood fit using a shared_ptr for NOT copying the input data. ; Default is extended. ; Definition at line 212 of file Fitter.h. ◆ LikelihoodFit() [4/5]. bool ROOT::Fit::Fitter::LikelihoodFit ; (; const std::shared_ptr< UnBinData > & ; data, . bool ; extended = false, . const ROOT::EExecutionPolicy & ; executionPolicy = ROOT::EExecutionPolicy::kSequential . ). inline . Un-binned Likelihood fit using a shared_ptr for NOT copying the input data. ; Default is NOT extended ; Definition at line 229 of file Fitter.h. ◆ LikelihoodFit() [5/5]. bool ROOT::Fit::Fitter::LikelihoodFit ; (; const UnBinData & ; data, . bool ; extended = false, . const ROOT::EExecutionPolicy & ; executionPolicy = ROOT::EExecutionPolicy::kSequential . ). inline . Un-binned Likelihood fit copying the input data Default is NOT extended. ; Definition at line 221 of file Fitter.h. ◆ LinearFit() [1/2]. bool ROOT::Fit::Fitter::LinearFit ; (; const BinData & ; data). inline . Do a linear fit copying the input data. ; Definition at line 247 of file Fitter.h. ◆ LinearFit() [2/2]. bool ROOT::Fit::Fitter::LinearFit ; (; const std::shared_ptr< BinData > & ; data). inline . Do a linear fit using a shared_ptr for NOT copying the input data. ; Definition at line 254 of file Fitter.h. ◆ ObjFunction(). const ROOT::Math::IBaseFunctionMultiDimTempl< double > * ROOT::Fit::Fitter::ObjFunction ; (; ); const. inlineprotected . Return pointer to the used objective function for fitting. ; If using an external function (e.g. given in SetFCN), return the cached pointer, otherwise use the one stored as shared ptr and managed by the Fitter class ; Definition at line 544 of file Fitter.h. ◆ operator=(). Fitter & ROOT::Fit::Fitter::operator= ; (; const Fitter & ; ). delete . Assignment operator (disabled, clas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1Fitter.html:30518,extend,extended,30518,doc/master/classROOT_1_1Fit_1_1Fitter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1Fitter.html,1,['extend'],['extended']
Modifiability,"ool ReInitDiscrDist(unsigned int npar, double * params);; 193 ; 194 /**; 195 Sample 1D distribution.; 196 User is responsible for having previously correctly initialized with TUnuran::Init; 197 */; 198 double Sample();; 199 ; 200 /**; 201 Sample multidimensional distributions.; 202 User is responsible for having previously correctly initialized with TUnuran::Init; 203 */; 204 bool SampleMulti(double * x);; 205 ; 206 /**; 207 Sample discrete distributions.; 208 User is responsible for having previously correctly initialized with TUnuran::Init; 209 */; 210 int SampleDiscr();; 211 ; 212 /**; 213 Set the random engine.; 214 Must be called before init to have effect; 215 */; 216 void SetRandom(TRandom * r) {; 217 fRng = r;; 218 }; 219 ; 220 /**; 221 Return instance of the random engine used.; 222 */; 223 TRandom * GetRandom() {; 224 return fRng;; 225 }; 226 ; 227 /**; 228 Return an information string about the used Unuran generator method.; 229 @param extended : if true return some helper information about the existing options of the method.; 230 */; 231 std::string GetInfo(bool extended = false);; 232 ; 233 /**; 234 Return an ID string about the unuran generator method.; 235 */; 236 std::string GetGenId() const;; 237 ; 238 /**; 239 Return the dimension of unuran generator method.; 240 For 1D method returns 1 and for the multi-dimensional case; 241 must be equal to the distribution dimension.; 242 */; 243 int GetDimension() const;; 244 ; 245 /**; 246 Return the type of the distribution.; 247 See documentation of `unuran_distr_get_type` for the possible; 248 types of distributions.; 249 */; 250 int GetDistType() const;; 251 ; 252 /// Return true for a univariate continuous distribution.; 253 bool IsDistCont() const;; 254 /// Return true for a multivariate continuous distribution.; 255 bool IsDistMultiCont() const;; 256 /// Return true for a discrete distribution.; 257 bool IsDistDiscrete() const;; 258 /// Return true for an empirical distribution.; 259 bool IsDistEmpirica",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnuran_8h_source.html:9162,extend,extended,9162,doc/master/TUnuran_8h_source.html,https://root.cern,https://root.cern/doc/master/TUnuran_8h_source.html,1,['extend'],['extended']
Modifiability,"ool chi2fit = false). bool SetFCN(ROOT::Fit::Fitter::MinuitFCN_t fcn, int npar = 0, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false). Fitter(). Default constructor. ~Fitter(). Destructor. Fitter(const ROOT::Fit::Fitter& ). Copy constructor (disabled, class is not copyable). bool Fit( const Data & data, const Function & func ). fit a data set using any generic model function; If data set is binned a least square fit is performed; If data set is unbinned a maximum likelihood fit (not extended) is done; Pre-requisite on the function:; it must implement the 1D or multidimensional parametric function interface. SetFunction(func). return Fit(const ROOT::Fit::BinData& data). bool Fit(const ROOT::Fit::BinData& data). Fit a binned data set using a least square fit (default method). return DoLeastSquareFit(const ROOT::Fit::BinData& data). bool LeastSquareFit(const ROOT::Fit::BinData& data). Fit a binned data set using a least square fit. bool Fit(const ROOT::Fit::UnBinData& data, bool extended = false). fit an unbinned data set using loglikelihood method. return DoLikelihoodFit(data, extended). bool LikelihoodFit(const Data & data ). Likelihood fit (unbinned or unbinned) depending on the type of data; If Binned default is extended; If Unbinned default is NOT extended (for backward compatibility). return DoLikelihoodFit(data). bool LikelihoodFit(const Data & data, bool extended ). Likelihood fit using extended or not extended method. bool LikelihoodFit( const Data & data, const Function & func, bool extended). fit a data set using any generic model function; Pre-requisite on the function:. SetFunction(func). bool FitFCN(ROOT::Fit::Fitter::MinuitFCN_t fcn, int npar = 0, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false). Fit using the a generic FCN function as a C++ callable object implementing; double () (const double *); Note that the function dimension (i.e. the number of parameter) is needed in this case; For the options see ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Fit__Fitter.html:7005,extend,extended,7005,root/html534/ROOT__Fit__Fitter.html,https://root.cern,https://root.cern/root/html534/ROOT__Fit__Fitter.html,2,['extend'],['extended']
Modifiability,"ool chi2fit = false). bool SetFCN(ROOT::Fit::Fitter::MinuitFCN_t fcn, int npar = 0, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false). Fitter(). Default constructor. ~Fitter(). Destructor. Fitter(const ROOT::Fit::Fitter& ). Copy constructor (disabled, class is not copyable). bool Fit( const Data & data, const Function & func ). fit a data set using any generic model function; If data set is binned a least square fit is performed; If data set is unbinned a maximum likelihood fit (not extended) is done; Pre-requisite on the function:; it must implement the 1D or multidimensional parametric function interface. SetFunction(func). return Fit(const ROOT::Fit::BinData& data). bool Fit(const ROOT::Fit::BinData& data). Fit a binned data set using a least square fit (default method). return DoLeastSquareFit(const ROOT::Fit::BinData& data). bool LeastSquareFit(const ROOT::Fit::BinData& data). Fit a binned data set using a least square fit. bool Fit(const ROOT::Fit::UnBinData& data, bool extended = false). fit an unbinned data set using loglikelihood method. return DoLikelihoodFit(data, extended). bool LikelihoodFit(const Data & data ). Likelihood fit (unbinned or unbinned) depending on the type of data; If Binned default is extended; If Unbinned defult is NOT extended (for backward compatibility). return DoLikelihoodFit(data). bool LikelihoodFit(const Data & data, bool extended ). Likelihood fit using extended or not extended method. bool LikelihoodFit( const Data & data, const Function & func, bool extended). fit a data set using any generic model function; Pre-requisite on the function:. SetFunction(func). bool FitFCN(ROOT::Fit::Fitter::MinuitFCN_t fcn, int npar = 0, const double* params = 0, unsigned int dataSize = 0, bool chi2fit = false). Fit using the a generic FCN function as a C++ callable object implementing; double () (const double *); Note that the function dimension (i.e. the number of parameter) is needed in this case; For the options see d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Fit__Fitter.html:7005,extend,extended,7005,root/html532/ROOT__Fit__Fitter.html,https://root.cern,https://root.cern/root/html532/ROOT__Fit__Fitter.html,2,['extend'],['extended']
Modifiability,"ool=kFALSE);  Set up packages, loaded macros, include and lib paths ... ;  ; virtual Bool_t StartSlaves (Bool_t attach=kFALSE);  Start up PROOF slaves. ;  ; void UpdateDialog ();  Final update of the progress dialog. ;  ; virtual void ValidateDSet (TDSet *dset);  Validate a TDSet. ;  ; Int_t VerifyDataSetParallel (const char *uri, const char *optStr);  Internal function for parallel dataset verification used TProof::VerifyDataSet and TProofLite::VerifyDataSet. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual void * GetSender ();  ; virtual const char * GetSenderClassName () const;  . Private Member Functions;  TProofLite (const TProofLite &);  ; Int_t CleanupSandbox ();  Remove old sessions dirs keep at most 'Proof.MaxOldSessions' (default 10) ;  ; Int_t CreateSandbox ();  Create the sandbox for this session. ;  ; void FindUniqueSlaves () override;  Add to the fUniqueSlave list the active slaves that have a unique (user) file system image. ;  ; Int_t InitDataSetManager ();  Initialize the dataset manager from directives or from defaults Return 0 on success, -1 on failure. ;  ; void NotifyStartUp (const char *action, Int_t done, Int_t tot);  Notify setting-up operation message. ;  ; void operator= (const TProofLite &);  ; void ResolveKeywords (TString &s, const char *ord, const char *logfile);  Resolve some keywords in 's' <logfilewrk>, <user>, <rootsys>, <cpupin> ;  ; void SendInputDataFile () override;  Make sure that the input data objects are available to the workers in a dedicated file in the cache; the objects are taken from the dedicated list and / or the specified file. ;  ; Int_t SetProofServEnv (const char *ord);  Create environment files for worker 'ord'. ;  ; void ShowDataDir (const char *dirname);  List contents of the data directo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofLite.html:39808,sandbox,sandbox,39808,doc/master/classTProofLite.html,https://root.cern,https://root.cern/doc/master/classTProofLite.html,1,['sandbox'],['sandbox']
Modifiability,"ool=true);  ; void setIntegratorConfig ();  Remove the specialized numeric integration configuration associated with this object. ;  ; void setIntegratorConfig (const RooNumIntConfig &config);  Set the given integrator configuration as default numeric integration configuration for this object. ;  ; void setParameterizeIntegral (const RooArgSet &paramVars);  ; void setPlotLabel (const char *label);  Set the label associated with this variable. ;  ; void setUnit (const char *unit);  ; RooAbsMoment * sigma (RooRealVar &obs);  ; RooAbsMoment * sigma (RooRealVar &obs, const RooArgSet &nset);  ; RooNumIntConfig * specialIntegratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumIntConfig * specialIntegratorConfig (bool createOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void writeToStream (std::ostream &os, bool compact) const override;  Write object contents to stream (dummy for now) ;  ;  Public Member Functions inherited from RooAbsArg;  RooAbsArg ();  Default constructor. ;  ;  RooAbsArg (const char *name, const char *title);  Create an object with the specified name and descriptive title. ;  ;  RooAbsArg (const RooAbsArg &other, const char *name=nullptr);  Copy constructor transfers all boolean and string properties of the original object. ;  ;  ~RooAbsArg () override;  Destructor. ;  ; bool addOwnedComponents (const RooAbsCollection &comps);  Take ownership of the contents of 'comps'. ;  ; bool addOwnedComponents (RooAbsCollection &&comps);  Take ownership of the contents of 'comps'. ;  ; bool addOwnedComponents (RooArgList &&comps);  Take ownership of the contents of 'comps'. ;  ; template<typename... Args_t> ; bool addOwnedComponents (std::unique_ptr< Args_t >... comps);  ; virtual void applyWeightSquared (bool flag);  Disables or enables the usage of squared weights. ;  ; void attachArgs (const RooAbsCollectio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBMixDecay.html:32837,inherit,inherited,32837,doc/master/classRooBMixDecay.html,https://root.cern,https://root.cern/doc/master/classRooBMixDecay.html,116,['inherit'],['inherited']
Modifiability,"oolBarapplication tool bar; TGCanvas*fTreeViewmain right sessions/queries tree view; UserGroup_t*fUserGroupuser connected to session; TGVerticalFrame*fV1; TGVerticalFrame*fV2; TEnv*fViewerEnvviewer's configuration. Class Charts. Inheritance Chart:. TObject. ←; TGObject. ←; TGWindow. TQObject. ←; TGFrame. ←; TGCompositeFrame. ←; TGMainFrame. ←; TSessionViewer. Function documentation; TSessionViewer(const char* title = ""ROOT Session Viewer"", UInt_t w = 550, UInt_t h = 320); Main Session viewer constructor. TSessionViewer(const char* title, Int_t x, Int_t y, UInt_t w, UInt_t h); Main Session viewer constructor. void ReadConfiguration(const char* filename = 0); Read configuration file and populate list of sessions; list of queries and list of packages.; Read and set also global options as feedback histos. void UpdateListOfProofs(); Update list of existing Proof sessions. void UpdateListOfSessions(); Update list of existing Proof sessions. void WriteConfiguration(const char* filename = 0); Save actual configuration in config file ""filename"". void Build(); Build main session viewer frame and subframes. ~TSessionViewer(); Destructor. void OnListTreeClicked(TGListTreeItem* entry, Int_t btn, Int_t x, Int_t y); Handle mouse clicks in list tree. void OnListTreeDoubleClicked(TGListTreeItem* entry, Int_t btn); Handle mouse double clicks in list tree (connect to server). void Terminate(); Terminate Session : save configuration, clean temporary files and close; Proof connections. void CloseWindow(); Close main Session Viewer window. void ChangeRightLogo(const char* name); Change the right logo (used for animation). void EnableTimer(); Enable animation timer. void DisableTimer(); Disable animation timer. Bool_t HandleTimer(TTimer* ); Handle animation timer. void LogMessage(const char* msg, Bool_t all); Load/append a log msg in the log frame. void QueryResultReady(char* query); Handle signal ""query result ready"" coming from Proof session. void CleanupSession(); Clean-up Proof sessio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSessionViewer.html:27159,config,configuration,27159,root/html602/TSessionViewer.html,https://root.cern,https://root.cern/root/html602/TSessionViewer.html,8,['config'],"['config', 'configuration']"
Modifiability,"ool_t adjustRange = kTRUE); Add a column with the values of the given (function) argument; to this dataset. The function value is calculated for each; event using the observable values of each event in case the; function depends on variables with names that are identical; to the observable names in the dataset. RooArgSet* addColumns(const RooArgList& varList); Add a column with the values of the given list of (function); argument to this dataset. Each function value is calculated for; each event using the observable values of the event in case the; function depends on variables with names that are identical to; the observable names in the dataset. TH2F* createHistogram(const RooAbsRealLValue& var1, const RooAbsRealLValue& var2, const char* cuts = """", const char* name = ""hist"") const; Create a TH2F histogram of the distribution of the specified variable; using this dataset. Apply any cuts to select which events are used.; The variable being plotted can either be contained directly in this; dataset, or else be a function of the variables in this dataset.; The histogram will be created using RooAbsReal::createHistogram() with; the name provided (with our dataset name prepended). TH2F* createHistogram(const RooAbsRealLValue& var1, const RooAbsRealLValue& var2, Int_t nx, Int_t ny, const char* cuts = """", const char* name = ""hist"") const; Create a TH2F histogram of the distribution of the specified variable; using this dataset. Apply any cuts to select which events are used.; The variable being plotted can either be contained directly in this; dataset, or else be a function of the variables in this dataset.; The histogram will be created using RooAbsReal::createHistogram() with; the name provided (with our dataset name prepended). RooPlot* plotOnXY(RooPlot* frame, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooDataSet.html:27755,variab,variable,27755,root/html526/RooDataSet.html,https://root.cern,https://root.cern/root/html526/RooDataSet.html,22,['variab'],"['variable', 'variables']"
Modifiability,"ool_t b = kTRUE); const TString&GetReferenceFile() const; TMVA::MsgLogger&Log() const; Bool_tLooseOptionCheckingEnabled() const; voidTObject::MakeZombie(); voidResetSetFlag(); voidWriteOptionsReferenceToFile(). private:. voidSplitOptions(const TString& theOpt, TList& loo) const. Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. TStringfConfigDescriptiondescription of this configurable; TStringfConfigNamethe name of this configurable; TMVA::OptionBase*fLastDeclaredOption! last declared option; TListfListOfOptions! option list; TMVA::MsgLogger*fLogger! message logger; Bool_tfLooseOptionCheckingEnabled! checker for option string; TStringfOptions! options string; TStringfReferenceFilereference file for options writing. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Configurable(const TString& theOption = """"); constructor. ~Configurable(); default destructur. void SplitOptions(const TString& theOpt, TList& loo) const; splits the option string at ':' and fills the list 'loo' with the primitive strings. void ResetSetFlag(); resets the IsSet falg for all declare options; to be called before options are read from stream. void ParseOptions(); options parser. void CheckForUnusedOptions() const; checks for unused options in option string. void PrintOptions() const; prints out the options set in the options string and the defaults. void WriteOptionsToStream(ostream& o, const TString& prefix) const; write options to output stream (e.g. in writing the MVA weight files. void AddOptionsXMLTo(void* parent) const; write options to XML file. void ReadOptionsFromXML(void* node). void WriteOptionsReferenceToFile(); write complete options to output stream. void ReadOptionsFromStream(istream& istr); read option back",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__Configurable.html:6365,Inherit,Inheritance,6365,root/html532/TMVA__Configurable.html,https://root.cern,https://root.cern/root/html532/TMVA__Configurable.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ool_t checkHist = kFALSE, Bool_t norm = kTRUE); TMVA::PDFPDF(const TString& name, const TH1* theHist, TMVA::KDEKernel::EKernelType ktype, TMVA::KDEKernel::EKernelIter kiter, TMVA::KDEKernel::EKernelBorder kborder, Float_t FineFactor, Bool_t norm = kTRUE); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; voidTMVA::Configurable::PrintOptions() const; voidProcessOptions(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidReadXML(void* pdfnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidSetReadingVersion(UInt_t rv); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); voidValidatePDF(TH1* original = 0) const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__PDF.html:5797,Config,Configurable,5797,root/html602/TMVA__PDF.html,https://root.cern,https://root.cern/root/html602/TMVA__PDF.html,2,['Config'],['Configurable']
Modifiability,"ool_t checkHist = kFALSE, Bool_t norm = kTRUE); TMVA::PDFPDF(const TString& name, const TH1* theHist, TMVA::KDEKernel::EKernelType ktype, TMVA::KDEKernel::EKernelIter kiter, TMVA::KDEKernel::EKernelBorder kborder, Float_t FineFactor, Bool_t norm = kTRUE); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; voidTMVA::Configurable::PrintOptions() const; voidProcessOptions(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidReadXML(void* pdfnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidSetReadingVersion(UInt_t rv); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); voidValidatePDF(TH1* original = 0) const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; voidT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__PDF.html:5698,Config,Configurable,5698,root/html532/TMVA__PDF.html,https://root.cern,https://root.cern/root/html532/TMVA__PDF.html,1,['Config'],['Configurable']
Modifiability,"ool_t checkHist = kFALSE, Bool_t norm = kTRUE); TMVA::PDFPDF(const TString& name, const TH1* theHist, TMVA::KDEKernel::EKernelType ktype, TMVA::KDEKernel::EKernelIter kiter, TMVA::KDEKernel::EKernelBorder kborder, Float_t FineFactor, Bool_t norm = kTRUE); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; voidTMVA::Configurable::PrintOptions() const; voidProcessOptions(); virtual Int_tTObject::Read(const char* name); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidReadXML(void* pdfnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); voidTMVA::Configurable::SetConfigName(const char* n); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTMVA::Configurable::SetMsgType(TMVA::EMsgType t); static voidTObject::SetObjectStat(Bool_t stat); voidTMVA::Configurable::SetOptions(const TString& s); voidSetReadingVersion(UInt_t rv); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); voidValidatePDF(TH1* original = 0) const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsiz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__PDF.html:5723,Config,Configurable,5723,root/html534/TMVA__PDF.html,https://root.cern,https://root.cern/root/html534/TMVA__PDF.html,1,['Config'],['Configurable']
Modifiability,"ool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; Generate a new dataset containing the specified variables with; events sampled from our distribution. Generate the specified; number of events or else try to use expectedEvents() if nEvents <= 0. If expectedData is kTRUE (it is kFALSE by default), the returned histogram returns the 'expected'; data sample, i.e. no statistical fluctuations are present. Any variables of this PDF that are not in whatVars will use their; current values and be treated as fixed parameters. Returns zero; in case of an error. The caller takes ownership of the returned; dataset. RooPlot* plotOn(RooPlot* frame, RooLinkedList& cmdList) const; Plot (project) PDF on specified frame. If a PDF is plotted in an empty frame, it; will show a unit normalized curve in the frame variable, taken at the present value; of other observables defined for this PDF. If a PDF is plotted in a frame in which a dataset has already been plotted, it will; show a projected curve integrated over all variables that were present in the shown; dataset except for the one on the x-axis. The normalization of the curve will also; be adjusted to the event count of the plotted dataset. An informational message; will be printed for each projection step that is performed. This function takes the following named arguments. Projection control. Slice(const RooArgSet& set) -- Override default projection behaviour by omittting observables listed; in set from the projection, resulting a 'slice' plot. Slicing is usually; only sensible in discrete observables; Project(const RooArgSet& set) -- Override default projection behaviour by projecting over observables; given in set and complete ignoring the default projection behavior. Advanced use only.; ProjWData(const RooAbsData& d) -- Override default projection _technique_ (integration). For observables present in given dataset; projection of PDF is achieved by constructing an average over all observable values in given set.; Con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAbsPdf.html:67414,variab,variables,67414,root/html528/RooAbsPdf.html,https://root.cern,https://root.cern/root/html528/RooAbsPdf.html,1,['variab'],['variables']
Modifiability,"ool_t fromInput = kFALSE) const; virtual voidGetPointComplex(const Int_t* ipoint, Double_t& re, Double_t& im, Bool_t fromInput = kFALSE) const; virtual Double_tGetPointReal(Int_t ipoint, Bool_t fromInput = kFALSE) const; virtual Double_tGetPointReal(const Int_t* ipoint, Bool_t fromInput = kFALSE) const; virtual voidGetPoints(Double_t* data, Bool_t fromInput = kFALSE) const; virtual voidGetPointsComplex(Double_t* data, Bool_t fromInput = kFALSE) const; virtual voidGetPointsComplex(Double_t* re, Double_t* im, Bool_t fromInput = kFALSE) const; virtual Double_t*GetPointsReal(Bool_t fromInput = kFALSE) const; virtual Int_tGetSign() const; virtual const char*TObject::GetTitle() const; virtual Option_t*GetTransformFlag() const; virtual Option_t*GetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(Option_t* flag, Int_t sign, const Int_t* kind); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsInplace() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TVirtualFFT.html:6033,Inherit,InheritsFrom,6033,root/html532/TVirtualFFT.html,https://root.cern,https://root.cern/root/html532/TVirtualFFT.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ool_t fromInput = kFALSE) const; virtual voidGetPointComplex(const Int_t* ipoint, Double_t& re, Double_t& im, Bool_t fromInput = kFALSE) const; virtual Double_tGetPointReal(Int_t ipoint, Bool_t fromInput = kFALSE) const; virtual Double_tGetPointReal(const Int_t* ipoint, Bool_t fromInput = kFALSE) const; virtual voidGetPoints(Double_t* data, Bool_t fromInput = kFALSE) const; virtual voidGetPointsComplex(Double_t* data, Bool_t fromInput = kFALSE) const; virtual voidGetPointsComplex(Double_t* re, Double_t* im, Bool_t fromInput = kFALSE) const; virtual Double_t*GetPointsReal(Bool_t fromInput = kFALSE) const; virtual Int_tGetSign() const; virtual const char*TObject::GetTitle() const; virtual Option_t*GetTransformFlag() const; virtual Option_t*GetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidInit(Option_t* flag, Int_t sign, const Int_t* kind); virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsInplace() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTObject::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualFFT.html:6057,Inherit,InheritsFrom,6057,root/html602/TVirtualFFT.html,https://root.cern,https://root.cern/root/html602/TVirtualFFT.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ool_t logtomacro = kFALSE); Send command to be executed on node of ordinal 'ord' (use ""0"" for master).; Command can be any legal command line command. Commands like; "".x file.C"" or "".L file.C"" will cause the file file.C to be send; to the PROOF cluster.; If logtomacro is TRUE the text result of the action is saved in the fMacroLog; TMacro, accessible via TMacro::GetMacroLog();; Returns -1 in case of error, >=0 in case of succes. Int_t SendCommand(const char* cmd, TProof::ESlaves list = kActive); Send command to be executed on the PROOF master and/or slaves.; Command can be any legal command line command, however commands; like "".x file.C"" or "".L file.C"" will not cause the file.C to be; transfered to the PROOF cluster. In that case use TProof::Exec().; Returns the status send by the remote server as part of the; kPROOF_LOGDONE message. Typically this is the return code of the; command on the remote side. Returns -1 in case of error. TString Getenv(const char* env, const char* ord = ""0""); Get value of environment variable 'env' on node 'ord'. Int_t GetRC(const char* RCenv, Int_t& env, const char* ord = ""0""); Get into 'env' the value of integer RC env variable 'rcenv' on node 'ord'. Int_t GetRC(const char* RCenv, Double_t& env, const char* ord = ""0""); Get into 'env' the value of double RC env variable 'rcenv' on node 'ord'. Int_t GetRC(const char* RCenv, TString& env, const char* ord = ""0""); Get into 'env' the value of string RC env variable 'rcenv' on node 'ord'. Int_t SendCurrentState(TList* list); Transfer the current state of the master to the active slave servers.; The current state includes: the current working directory, etc.; Returns the number of active slaves. Returns -1 in case of error. Int_t SendCurrentState(TProof::ESlaves list = kActive); Transfer the current state of the master to the active slave servers.; The current state includes: the current working directory, etc.; Returns the number of active slaves. Returns -1 in case of error. Int_t SendInitialS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProof.html:62997,variab,variable,62997,root/html534/TProof.html,https://root.cern,https://root.cern/root/html534/TProof.html,4,['variab'],['variable']
Modifiability,"ool_t logtomacro = kFALSE); Send command to be executed on node of ordinal 'ord' (use ""0"" for master).; Command can be any legal command line command. Commands like; "".x file.C"" or "".L file.C"" will cause the file file.C to be send; to the PROOF cluster.; If logtomacro is TRUE the text result of the action is saved in the fMacroLog; TMacro, accessible via TMacro::GetMacroLog();; Returns -1 in case of error, >=0 in case of succes. Int_t SendCommand(const char* cmd, TProof::ESlaves list = kActive); Send command to be executed on the PROOF master and/or slaves.; Command can be any legal command line command, however commands; like "".x file.C"" or "".L file.C"" will not cause the file.C to be; transfered to the PROOF cluster. In that case use TProof::Exec().; Returns the status send by the remote server as part of the; kPROOF_LOGDONE message. Typically this is the return code of the; command on the remote side. Returns -1 in case of error. TString Getenv(const char* env, const char* ord = ""0""); Get value of environment variable 'env' on node 'ord'. Int_t GetRC(const char* RCenv, Int_t& env, const char* ord = ""0""); Get into 'env' the value of integer RC env variable 'rcenv' on node 'ord'. Int_t GetRC(const char* RCenv, Double_t& env, const char* ord = ""0""); Get into 'env' the value of double RC env variable 'rcenv' on node 'ord'. Int_t GetRC(const char* RCenv, TString& env, const char* ord = ""0""); Get into 'env' the value of string RC env variable 'rcenv' on node 'ord'. Int_t SendCurrentState(TProof::ESlaves list = kActive); Transfer the current state of the master to the active slave servers.; The current state includes: the current working directory, etc.; Returns the number of active slaves. Returns -1 in case of error. Int_t SendInitialState(); Transfer the initial (i.e. current) state of the master to all; slave servers. Currently the initial state includes: log level.; Returns the number of active slaves. Returns -1 in case of error. Bool_t CheckFile(const char* file, T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProof.html:65386,variab,variable,65386,root/html602/TProof.html,https://root.cern,https://root.cern/root/html602/TProof.html,2,['variab'],['variable']
Modifiability,"ool_t stripDisconnected = kTRUE) const; voidRooAbsArg::graphVizTree(const char* fileName, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); voidRooAbsArg::graphVizTree(ostream& os, const char* delimiter = ""\n"", bool useTitle = false, bool useLatex = false); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_thasBinning(const char* name) const; Bool_tRooAbsArg::hasClients() const; virtual ULong_tTNamed::Hash() const; Bool_thasMax(const char* name = 0) const; Bool_thasMin(const char* name = 0) const; virtual Bool_thasRange(const char* name) const; static Bool_tRooAbsReal::hideOffset(); RooGenFunction*RooAbsReal::iGenFunction(RooRealVar& x, const RooArgSet& nset = RooArgSet()); RooMultiGenFunction*RooAbsReal::iGenFunction(const RooArgSet& observables, const RooArgSet& nset = RooArgSet()); virtual Bool_tRooAbsArg::importWorkspaceHook(RooWorkspace&); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual Bool_tinRange(const char* name) const; Bool_tinRange(Double_t value, const char* rangeName, Double_t* clippedValue = 0) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual voidRooAbsArg::ioStreamerPass2(); static voidRooAbsArg::ioStreamerPass2Finalize(); virtual TClass*IsA() const; virtual Bool_tRooAbsReal::isBinnedDistribution(const RooArgSet&) const; Bool_tRooAbsArg::isCloneOf(const RooAbsArg& other) const; Bool_tRooAbsArg::isConstant() const; virtual Bool_tRooAbsArg::isDerived() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tRooAbsArg::isFundamental() const; virtual Bool_tRooAbsReal::isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE); virtual Bool_tisJacobianOK(const RooArgSet& depList) const; virtual Bool_tisLValue() const; virtual Bool_tRooAbsReal::i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsRealLValue.html:18839,Inherit,InheritsFrom,18839,root/html534/RooAbsRealLValue.html,https://root.cern,https://root.cern/root/html534/RooAbsRealLValue.html,3,['Inherit'],['InheritsFrom']
Modifiability,"ool_t&Zoom(). protected:. virtual voidCopy(TObject& hnew) const; virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidInitSet(); voidTObject::MakeZombie(); Bool_tSwitchZoom(). private:. Int_tAxisChoice(Option_t* axis) const; voidBuild(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TAxisfAxis[3]X/Y/Z axis; TStringTNamed::fNameobject identifier; TStringfOptionOptions (is not use yet); TAxis*fSelected! The selected axis to play with; Bool_tfStickyZoomStickyZoom mode: zoom will not be disabled after zooming attempt if true; TStringTNamed::fTitleobject title; Bool_tfZoomModeZoom mode for the entire parent TPad; static const char*fgRulerNameThe default object name. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TAxis3D(); Normal constructor. TAxis3D(Option_t* option); Normal constructor. TAxis3D(const TAxis3D& axis); Copy constructor. void Copy(TObject& hnew) const; Copy axis3d. void InitSet(); Initialization. void Browse(TBrowser* b); Add all 3 axes to the TBrowser. Int_t DistancetoPrimitive(Int_t px, Int_t py); Compute distance from point px,py to a line. void ExecuteEvent(Int_t event, Int_t px, Int_t py); Execute action corresponding to one event. This member function is called when an axis is clicked with the locator. char * GetObjectInfo(Int_t px, Int_t py) const; Dummy method; returns the const char * to ""axis3d"". void Paint(Option_t* option = """"); Paint axis over 3D view on the TPad. void PaintAxis(TGaxis* axis, Float_t ang); Draw the axis for TView object. The original idea belongs:. void THistPainter::PaintLegoAxis(TGaxis *axis, Double_t ang). Double_t * PixeltoXYZ(Double_t px, Double_t py, Double_t* point3D, TView* view = 0); Conver",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TAxis3D.html:9344,Inherit,Inheritance,9344,root/html532/TAxis3D.html,https://root.cern,https://root.cern/root/html532/TAxis3D.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ool_t> TMVA::MethodBDT::fIsLowSigCut. private . Definition at line 289 of file MethodBDT.h. ◆ fITree. Int_t TMVA::MethodBDT::fITree. private . ntuple var: ith tree ; Definition at line 265 of file MethodBDT.h. ◆ fLossFunctionEventInfo. std::map< const TMVA::Event*, LossFunctionEventInfo> TMVA::MethodBDT::fLossFunctionEventInfo. private . map event to true value, predicted value, and weight used by different loss functions for BDT regression ; Definition at line 224 of file MethodBDT.h. ◆ fLowBkgCut. std::vector<Double_t> TMVA::MethodBDT::fLowBkgCut. private . Definition at line 285 of file MethodBDT.h. ◆ fLowSigCut. std::vector<Double_t> TMVA::MethodBDT::fLowSigCut. private . Definition at line 284 of file MethodBDT.h. ◆ fMaxDepth. UInt_t TMVA::MethodBDT::fMaxDepth. private . max depth ; Definition at line 242 of file MethodBDT.h. ◆ fMinLinCorrForFisher. Double_t TMVA::MethodBDT::fMinLinCorrForFisher. private . the minimum linear correlation between two variables demanded for use in fisher criterium in node splitting ; Definition at line 237 of file MethodBDT.h. ◆ fMinNodeEvents. Int_t TMVA::MethodBDT::fMinNodeEvents. private . min number of events in node ; Definition at line 231 of file MethodBDT.h. ◆ fMinNodeSize. Float_t TMVA::MethodBDT::fMinNodeSize. private . min percentage of training events in node ; Definition at line 232 of file MethodBDT.h. ◆ fMinNodeSizeS. TString TMVA::MethodBDT::fMinNodeSizeS. private . string containing min percentage of training events in node ; Definition at line 233 of file MethodBDT.h. ◆ fMonitorNtuple. TTree* TMVA::MethodBDT::fMonitorNtuple. private . monitoring ntuple ; Definition at line 264 of file MethodBDT.h. ◆ fNCuts. Int_t TMVA::MethodBDT::fNCuts. private . grid used in cut applied in node splitting ; Definition at line 235 of file MethodBDT.h. ◆ fNegWeightTreatment. TString TMVA::MethodBDT::fNegWeightTreatment. private . variable that holds the option of how to treat negative event weights in training ; Definition at line",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodBDT.html:65443,variab,variables,65443,doc/master/classTMVA_1_1MethodBDT.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodBDT.html,1,['variab'],['variables']
Modifiability,"ool_tExecuteHttp(THttpCallArg* arg); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; static const char*GetMimeType(const char* path); virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TRootSniffer*GetSniffer() const; virtual const char*TNamed::GetTitle() const; const char*GetTopName() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; Bool_tIsFileRequested(const char* uri, TString& res) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; Bool_tIsReadOnly() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THttpServer.html:2583,Inherit,InheritsFrom,2583,root/html602/THttpServer.html,https://root.cern,https://root.cern/root/html602/THttpServer.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ool_tHandleMotion(const Event_t& event, const TGLCamera& camera); virtual TClass*IsA() const; virtual Bool_tTGLManip::Select(const TGLCamera&, const TGLRect&, const TGLBoundingBox&); voidTGLManip::SetActive(Bool_t a); voidTGLManip::SetSelectedWidget(UInt_t s); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). protected:. voidTGLManip::CalcDrawScale(const TGLBoundingBox& box, const TGLCamera& camera, Double_t& base, TGLVector3* axis) const; const UChar_t*TGLManip::ColorFor(UInt_t widget) const; TGLManip&TGLManip::operator=(const TGLManip&). Data Members; protected:. Bool_tTGLManip::fActive! manipulator is active?; TPointTGLManip::fFirstMouse! first (start) mouse position (in WINDOW coords); TPointTGLManip::fLastMouse! last (latest) mouse position (in WINDOW coords); UInt_tTGLManip::fSelectedWidget! active width (axis) component; TGLPhysicalShape*TGLManip::fShape! manipulated shape. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLTransManip(); Construct translation manipulator not bound to any physical shape. TGLTransManip(TGLPhysicalShape* shape); Construct translation manipulator, attached to supplied TGLViewer; 'viewer', bound to TGLPhysicalShape 'shape'. ~TGLTransManip(); Destory the translation manipulator. void Draw(const TGLCamera& camera) const; Draw translation manipulator - tubes with arrow heads, in local axes of; attached shape, in red(X), green(Y) and blue(Z), with white center sphere.; If selected widget (mouse over) this is drawn in active colour (yellow). Bool_t HandleMotion(const Event_t& event, const TGLCamera& camera); Handle mouse motion over manipulator - if active (selected; widget) translate physical along selected widget (axis) of the; manipulator, so it tracks mouse action. Returns kTRUE if redraw; required kFALSE otherwise. TGLTransManip(). » Author: Richard Maunder 16/09/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLTransManip.html:2041,Inherit,Inheritance,2041,root/html532/TGLTransManip.html,https://root.cern,https://root.cern/root/html532/TGLTransManip.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ool_tHasDepth() const; Bool_tHasMultiSampling() const; Bool_tHasStencil() const; virtual TClass*IsA() const; Bool_tIsDoubleBuffered() const; Bool_tIsStereo() const; Bool_toperator!=(const TGLFormat& rhs) const; TGLFormat&operator=(const TGLFormat&); Bool_toperator==(const TGLFormat& rhs) const; voidSetAccumSize(Int_t accum); voidSetDepthSize(Int_t depth); voidSetDoubleBuffered(Bool_t db); voidSetSamples(Int_t samples); voidSetStencilSize(Int_t stencil); voidSetStereo(Bool_t db); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TGLFormat(); TGLFormat(Rgl::EFormatOptions options); TGLFormat(const TGLFormat&). private:. static Int_tGetDefaultSamples(); static voidInitAvailableSamples(). Data Members; private:. Int_tfAccumSize; Int_tfDepthSize; Bool_tfDoubleBuffered; Int_tfSamples; Int_tfStencilSize; Bool_tfStereo; static vector<Int_t>fgAvailableSamples. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLFormat(); 16-bits needed for some virtual machines (VirtualBox) and Xming-mesa; (when running ssh from windows to linux).; All others seem to have 24-bit depth-buffers only and use this anyway.; Default ctor. Default surface is:; -double buffered; -RGBA; -with depth buffer; -no accumulation buffer; -with stencil; -multi-sampling depends on seeting of ""OpenGL.Framebuffer.Multisample"". TGLFormat(Rgl::EFormatOptions options); Define surface using options. ~TGLFormat(); Destructor. Int_t GetDepthSize() const; Get the size of depth buffer. void SetDepthSize(Int_t depth); Set the size of color buffer. Bool_t HasDepth() const; Check, if this surface has depth buffer. Int_t GetStencilSize() const; Get the size of stencil buffer. void SetStencilSize(Int_t stencil); Set the size of stencil buffer. Bool_t HasStencil() const; Check, if this surface has stencil buffer. Int_t GetAccumSize() const; Get the size of accum buffer. void SetAccumSize(I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLFormat.html:1523,Inherit,Inheritance,1523,root/html602/TGLFormat.html,https://root.cern,https://root.cern/root/html602/TGLFormat.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ool_tReadDataRecord(istream&, UInt_t tmva_Version_Code = TMVA_VERSION_CODE); voidReadXML(void* node, UInt_t tmva_Version_Code = TMVA_VERSION_CODE); voidSetDepth(UInt_t d); virtual voidSetLeft(TMVA::Node* l); virtual voidSetParent(TMVA::Node* p); virtual voidSetParentTree(TMVA::BinaryTree* t); voidSetPos(char s); virtual voidSetRight(TMVA::Node* r); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Data Members; protected:. UInt_tfDepthdepth of the node within the tree (seen from root node); TMVA::Node*fLeftpointers to the two ""daughter"" nodes; TMVA::Node*fParentthe previous (parent) node; TMVA::BinaryTree*fParentTreepointer to the parent tree to which the Node belongs ; charfPosposition, i.e. it is a left (l) or right (r) daughter ; TMVA::Node*fRightpointers to the two ""daughter"" nodes. private:. static Int_tfgCountcounter of all nodes present.. for debug.. to spot memory leaks... Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~Node(); node destructor. int GetCount(); retuns the global number of instantiated nodes. Int_t CountMeAndAllDaughters() const; recursively go through the part of the tree below this node and count all daughters. void* AddXMLTo(void* parent) const; add attributes to XML. void ReadXML(void* node, UInt_t tmva_Version_Code = TMVA_VERSION_CODE); read attributes from XML. Node* CreateNode() const. Bool_t GoesRight(const TMVA::Event& ) const; test event if i{ decends the tree at this node to the right. Bool_t GoesLeft(const TMVA::Event& ) const; test event if it decends the tree at this node to the left. Node* GetLeft() const; test event if it is equal to the event that ""makes the node"" (just for the ""search tree""; return pointer to the left/right daughter or parent node. { return fLeft; }. Node* GetRight() const; { return fRight; }. Node* GetParent() const; { return fParent; }. void SetLeft(TMVA::Node* l); set pointer to the left/right daug",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__Node.html:2590,Inherit,Inheritance,2590,root/html532/TMVA__Node.html,https://root.cern,https://root.cern/root/html532/TMVA__Node.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; TMatrixD_mref; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; Int_t_npoints; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Roo2DMomentMorphFunction::Setting_setting; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; int_squareIdx[4]; TMatrixD_squareVec; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; Bool_t_verbose; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxym1; RooRealProxym2. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Roo2DMomentMorphFunction(const char* name, const char* title, RooAbsReal& _m1, RooAbs",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/Roo2DMomentMorphFunction.html:38091,config,configuration,38091,root/html602/Roo2DMomentMorphFunction.html,https://root.cern,https://root.cern/root/html602/Roo2DMomentMorphFunction.html,4,['config'],['configuration']
Modifiability,"ool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist. Pointer to global instance of string that matches object named; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooCFunction3Ref<double,double,double,bool>funcFunction pointer reference; RooRealProxyxArgument reference; RooRealProxyyArgument reference; RooRealProxyzArgument reference. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCFunction3Ref<VO,VI1,VI2,VI3> Streamer(TBuffer& ); Custom stre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction3Binding_double_double_double_bool_.html:37162,config,configuration,37162,root/html602/RooCFunction3Binding_double_double_double_bool_.html,https://root.cern,https://root.cern/root/html602/RooCFunction3Binding_double_double_double_bool_.html,4,['config'],['configuration']
Modifiability,"ool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FlexibleInterpVar(); Default constructor. FlexibleInterpVar(const char* name, const char* title, const RooArgList& _paramList, double nominal, vector<double> low, vector<double> high). FlexibleInterpVar(const char* name, const char* title, const RooArgList& _paramList, double nominal, vector<double> low, vector<double> high, vector<int> code). FlexibleInterpVar(const char* name, const char* title); Constructor of flat polynomial function. FlexibleInterpVar(const RooStats::HistFactory::FlexibleInterpVar& , const char* ); Copy constructor. ~FlexibleInterpVar(); Destructor. void setInterpCode(RooAbsReal& param, int code). void setAllInterpCodes(int code). void printAllInterpCodes(). Double_t evaluate() const; Calculate and return value of polynomial. TObject* clone(const char* newname) const; { return new FlexibleInterpVar(*this, newname); }. » Author: Kyle Cranmer, Akira Shibata » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id: cranmer $ » Last generated: 2011-11-03 20:09; This page has been automatically generated. For comments or suggestions regarding",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__HistFactory__FlexibleInterpVar.html:34179,Flexible,FlexibleInterpVar,34179,root/html532/RooStats__HistFactory__FlexibleInterpVar.html,https://root.cern,https://root.cern/root/html532/RooStats__HistFactory__FlexibleInterpVar.html,1,['Flexible'],['FlexibleInterpVar']
Modifiability,"ool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooAddPdf(); Default constructor used for persistence. RooAddPdf(const char* name, const char* title = 0); Dummy constructor. RooAddPdf(const char* name, const char* title, RooAbsPdf& pdf1, RooAbsPdf& pdf2, RooAbsReal& coef1); Constructor with two PDFs and one coefficient. RooAddPdf(const char* name, const char* title, const RooArgList& pdfList, const RooArgList& coefList, Bool_t recursiveFraction = kFALSE); Generic constructor from list of PDFs and list of coefficients.; Each pdf list element (i) is paired with coefficient list element (i).; The number of coefficients must be either equal to the number of PDFs,; in which case extended MLL fitting is enabled, or be one less. All PDFs must inherit from RooAbsPdf. All coefficients must inherit from RooAbsReal. If the recursiveFraction flag is true, the coefficients are interpreted as recursive; coefficients as explained in the class description. RooAddPdf(const char* name, const char* title, const RooArgList& pdfList); Generic constructor from list of extended PDFs. There are no coefficients as the expected; number of events from each components determine the relative weight of the PDFs. All PDFs must inherit from RooAbsPdf. RooAddPdf(const RooAddPdf& other, const char* name = 0); Copy constructor. ~RooAddPdf(); Destructor. void fixCoefNormalization(const RooArgSet& refCoefNorm); By default the interpretation of the fraction coefficients is; performed in the contextual choice of observables. This makes the; shape of the p.d.f explicitly dependent on the choice of; observables. This method instructs RooAddPdf to freeze the; interpretation of the coefficients to be done in the given set of; observables. If frozen, fractions are",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAddPdf.html:43222,inherit,inherit,43222,root/html528/RooAddPdf.html,https://root.cern,https://root.cern/root/html528/RooAddPdf.html,9,['inherit'],['inherit']
Modifiability,"ool_tRooAbsCachedPdf::selfNormalized() const; TIterator*RooAbsArg::serverIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); static voidRooAbsArg::setACleanADirty(Bool_t flag); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidRooAbsCachedPdf::setInterpolationOrder(Int_t order); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); voidRooAbsPdf::setNormValueCaching(Int_t minNumIntDim, Int_t ipOrder = 2); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsPdf::setTraceCounter(Int_t value, Bool_t allNodes = kFALSE); voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voidTObject::SetUniqueID(UInt_t uid); voidRooAbsReal::setUnit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooAbsSelfCachedPdf.html:28385,config,config,28385,root/html530/RooAbsSelfCachedPdf.html,https://root.cern,https://root.cern/root/html530/RooAbsSelfCachedPdf.html,2,['config'],['config']
Modifiability,"ool_tRooAbsGenContext::_isValidIs context in valid state?; static Int_tRooPrintable::_nameLength; Int_tRooAbsGenContext::_nextProtoIndexNext prototype event to load according to LUT; TStringRooAbsGenContext::_normRangeNormalization range of pdf; RooArgSet_ownedMultiProdsOwned auxilary multi-term product PDFs; const RooProdPdf*_pdfOriginal PDF; RooRealIntegral*_pdfCcdInt; RooAbsPdf*_pdfClone; RooArgSet*_pdfCloneSet; Int_t*RooAbsGenContext::_protoOrderLUT with traversal order of prototype data; RooArgSetRooAbsGenContext::_protoVarsPrototype observables; const RooDataSet*RooAbsGenContext::_prototypePointer to prototype dataset; RooArgSet*RooAbsGenContext::_theEventPointer to observable event being generated; TIterator*_uniIterIterator over uniform observables; RooArgSet_uniObsObservable to be generated with flat distribution; Bool_tRooAbsGenContext::_verboseVerbose messaging?; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooProdGenContext(const RooProdPdf& model, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t _verbose = kFALSE). ~RooProdGenContext(); Destructor. Delete all owned subgenerator contexts. void attach(const RooArgSet& params); Attach generator to given event buffer. void initGenerator(const RooArgSet& theEvent); One-time initialization of generator context, forward to component generators. void generateEvent(RooArgSet& theEvent, Int_t remaining); Generate a single event of the product by generating the components; of the products sequentially. The subcontext have been order such; that all conditional dependencies are correctly taken into account; when processed in sequential order. void setProtoDataOrder(Int_t* lut); Set the traversal order of the prototype dataset by the; given lookup table. void printMultiline(ostream& os, Int_t content, Bool_t verbose = kFALSE, TString indent = """") const; De",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooProdGenContext.html:9114,Inherit,Inheritance,9114,root/html532/RooProdGenContext.html,https://root.cern,https://root.cern/root/html532/RooProdGenContext.html,8,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ool_tRooAbsIntegrator::_validIs integrator in valid state?; Bool_t_verboseVerbosity control; Double_t_wtd_int_sum. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void registerIntegrator(RooNumIntFactory& fact); This function registers class RooMCIntegrator, its configuration options; and its capabilities with RooNumIntFactory. RooMCIntegrator(); Default constructor. RooMCIntegrator(const RooAbsFunc& function, RooMCIntegrator::SamplingMode mode = Importance, RooMCIntegrator::GeneratorType genType = QuasiRandom, Bool_t verbose = kFALSE); Construct an integrator over 'function' with given sampling mode; and generator type. The sampling mode can be 'Importance'; (default), 'ImportanceOnly' and 'Stratified'. The generator type; can be 'QuasiRandom' (default) and 'PseudoRandom'. Consult the original; VEGAS documentation on details of the mode and type parameters. RooMCIntegrator(const RooAbsFunc& function, const RooNumIntConfig& config); Construct an integrator over 'function' where the configuration details; are taken from 'config'. RooAbsIntegrator* clone(const RooAbsFunc& function, const RooNumIntConfig& config) const; Return clone of this generator operating on given function with given configuration; Needed to support RooNumIntFactory. ~RooMCIntegrator(); Destructor. Bool_t checkLimits() const; Check if we can integrate over the current domain. If return value; is kTRUE we cannot handle the current limits (e.g. where the domain; of one or more observables is open ended. Double_t integral(const Double_t* yvec = 0); Evaluate the integral using a fixed number of calls to evaluate the integrand; equal to about 10k per dimension. Use the first 5k calls to refine the grid; over 5 iterations of 1k calls each, and the remaining 5k calls for a single; high statistics integration. Double_t vegas(RooMCIntegrator::Stage stage, UInt_t calls, UInt_t iterations, Double_t* absError = 0); Perform one step of Monte Carlo integration using th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooMCIntegrator.html:8817,config,config,8817,root/html526/RooMCIntegrator.html,https://root.cern,https://root.cern/root/html526/RooMCIntegrator.html,3,['config'],"['config', 'configuration']"
Modifiability,"ool_tTEveElement::fCanEditMainTransAllow editing of main transformation.; Bool_tTEveElement::fCanEditMainTransparencyAllow editing of main transparency.; UChar_tTEveElement::fChangeBits!; TClass*TEveElementList::fChildClassClass of acceptable children, others are rejected.; TEveElement::List_tTEveElement::fChildrenList of children.; Color_tTEveElementList::fColorColor of the object.; TEveCompound*TEveElement::fCompoundCompound this object belongs to.; Int_tTEveElement::fDenyDestroy! Deny-destroy count.; Bool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tfDrawFramedraw frame; Color_tfFillColorfill color of polygons; Bool_tfHighlightFramehighlight frame / all shape; Bool_tTEveElement::fHighlighted!; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; TEveElement::sLTI_tTEveElement::fItems! Set of list-tree-items.; Color_tfLineColoroutline color of polygons; Float_tfLineWidthoutline width of polygons; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Bool_tfMiniFramedraw minimal frame; TStringTNamed::fNameobject identifier; Int_tTEveElement::fNumChildren!; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; TEveElement::List_tTEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveProjectable::ProjList_tTEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; TRefTEveElement::fSourceExternal object that is represented by this element.; TStringTNamed::fTitleobject title; Int_tTEveElement::fTopItemCnt! Counter for top-level list-tree items that prevent automatic destruction.; void*TEveElement::fUserData! Externall",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveShape.html:20614,variab,variable,20614,root/html602/TEveShape.html,https://root.cern,https://root.cern/root/html602/TEveShape.html,4,['variab'],['variable']
Modifiability,"ool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; TRefArrayTPointSet3D::fIdsUser-provided point identifications; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; TArrayI*TEvePointSet::fIntIdsOptional array of integer ideices.; Int_tTEvePointSet::fIntIdsPerPointNumber of integer indices assigned to each point.; TEveElement::sLTI_tTEveElement::fItems! Set of list-tree-items.; Int_tTPolyMarker3D::fLastPointThe index of the last filled point; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; Int_tTPolyMarker3D::fNNumber of allocated points; TStringTPolyMarker3D::fNameName of polymarker; Int_tTEveElement::fNumChildren!; TStringTPolyMarker3D::fOptionOptions; Bool_tTPointSet3D::fOwnIdsFlag specifying id-objects are owned by the point-set; Float_t*TPolyMarker3D::fP[3*fN] Array of X,Y,Z coordinates; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; TEveElement::List_tTEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveProjectable::ProjList_tTEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tfRnrLine; Bool_tfRnrPoints; Bool_tTEveElement::fRnrSelfRender this element.; Bool_tTEveElement::fSelected!; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveLine.html:26838,variab,variable,26838,root/html602/TEveLine.html,https://root.cern,https://root.cern/root/html602/TEveLine.html,4,['variab'],['variable']
Modifiability,"ool_tTEveElement::fDestroyOnZeroRefCntAuto-destruct when ref-count reaches zero.; Char_tTEveElement::fDestructing!; Bool_tTEveElement::fHighlighted!; TRefArrayTPointSet3D::fIdsUser-provided point identifications; Short_tTEveElement::fImpliedHighlighted!; Short_tTEveElement::fImpliedSelected!; TArrayI*TEvePointSet::fIntIdsOptional array of integer ideices.; Int_tTEvePointSet::fIntIdsPerPointNumber of integer indices assigned to each point.; TEveElement::sLTI_tTEveElement::fItems! Set of list-tree-items.; Int_tTPolyMarker3D::fLastPointThe index of the last filled point; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Color_t*TEveElement::fMainColorPtrPointer to main-color variable.; TEveTrans*TEveElement::fMainTransPointer to main transformation matrix.; Char_tTEveElement::fMainTransparencyMain-transparency variable.; TEveProjectionManager*TEveProjected::fManagermanager; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; Int_tTPolyMarker3D::fNNumber of allocated points; TStringTPolyMarker3D::fNameName of polymarker; Int_tTEveElement::fNumChildren!; TStringTPolyMarker3D::fOptionOptions; Bool_tTPointSet3D::fOwnIdsFlag specifying id-objects are owned by the point-set; Float_t*TPolyMarker3D::fP[3*fN] Array of X,Y,Z coordinates; Int_tTEveElement::fParentIgnoreCnt! Counter for parents that are ignored in ref-counting.; TEveElement::List_tTEveElement::fParentsList of parents.; Bool_tTEveElement::fPickable; TEveProjectable*TEveProjected::fProjectablelink to original object; TEveProjectable::ProjList_tTEveProjectable::fProjectedListreferences to projected instances.; Bool_tTEveElement::fRnrChildrenRender children of this element.; Bool_tTEveLine::fRnrLine; Bool_tTEveLine::fRnrPoints; Bool_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveLineProjected.html:27517,variab,variable,27517,root/html602/TEveLineProjected.html,https://root.cern,https://root.cern/root/html602/TEveLineProjected.html,4,['variab'],['variable']
Modifiability,"ool_tTGCompositeFrame::HandleDragMotion(TGFrame*); virtual Bool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tHandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tHandleKey(Event_t* event); virtual Bool_tHandleMotion(Event_t* event); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidHome(Bool_t select = kFALSE); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual voidInvertSelection()SIGNAL ; virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* pt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGContainer.html:11236,Inherit,InheritsFrom,11236,root/html532/TGContainer.html,https://root.cern,https://root.cern/root/html532/TGContainer.html,4,['Inherit'],['InheritsFrom']
Modifiability,"ool_tTGFrame::HandleEvent(Event_t* event); virtual Bool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGMainFrame::HandleKey(Event_t* event); virtual Bool_tTGMainFrame::HandleMotion(Event_t* event); virtual Bool_tTGMainFrame::HandleSelection(Event_t* event); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGMainFrame::HandleSelectionRequest(Event_t* event); virtual voidHandleShiftTab(); virtual voidHandleTab(); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFitParametersDialog.html:10174,Inherit,InheritsFrom,10174,root/html534/TFitParametersDialog.html,https://root.cern,https://root.cern/root/html534/TFitParametersDialog.html,3,['Inherit'],['InheritsFrom']
Modifiability,"ool_tTGLPlotPainter::fDrawPalette; Bool_tTGLPlotPainter::fHighColor; TH1*TGLPlotPainter::fHist; TPointTGLPlotPainter::fMousePosition; Double_tTGLPlotPainter::fPadPhi; Double_tTGLPlotPainter::fPadTheta; const Float_t*TGLPlotPainter::fPhysicalShapeColor; Int_tTGLPlotPainter::fSelectedPart; TGLSelectionBufferTGLPlotPainter::fSelection; Int_tTGLPlotPainter::fSelectionBase; Bool_tTGLPlotPainter::fSelectionPass; Bool_tTGLPlotPainter::fUpdateSelection; TAxis*TGLPlotPainter::fXAxis; Double_tTGLPlotPainter::fXOYSectionPos; Double_tTGLPlotPainter::fXOZSectionPos; TAxis*TGLPlotPainter::fYAxis; Double_tTGLPlotPainter::fYOZSectionPos; TAxis*TGLPlotPainter::fZAxis; vector<Double_t>TGLPlotPainter::fZLevels. private:. vector<Int_t>fBinColors; TStringfBinInfoUsed by GetPlotInfo.; list<Rgl::Pad::Tesselation_t>fCapsCaps for all bins.; vector<Double_t>fPolygonTemporary array for polygon's vertices.; Bool_tfZLogChange in logZ updates only bin heights.; Double_tfZMin. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLH2PolyPainter(TH1* hist, TGLPlotCamera* camera, TGLPlotCoordinates* coord); Ctor. char * GetPlotInfo(Int_t px, Int_t py); Show number of bin and bin contents, if bin is under the cursor. Bool_t InitGeometry(); Tesselate polygons, if not done yet.; All pointers are validated here (and in functions called from here).; If any pointer is invalid - zero, or has unexpected type (dynamic_cast fails) -; InitGeometry will return false and nothing will be painted later.; That's why there are no checks in other functions. void StartPan(Int_t px, Int_t py); User clicks on a lego with middle mouse button (middle for pad). void Pan(Int_t px, Int_t py); Mouse events handler. void AddOption(const TString& stringOption); No additional options. void ProcessEvent(Int_t event, Int_t px, Int_t py); No events. void InitGL() const; Initialize some gl state variables. void DeInitGL() const; Return some gl states to original values. void DrawPlot() const; D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLH2PolyPainter.html:4334,Inherit,Inheritance,4334,root/html532/TGLH2PolyPainter.html,https://root.cern,https://root.cern/root/html532/TGLH2PolyPainter.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ool_tTGLViewer::GetResetCamerasOnUpdate() const; TGLRnrCtx*TGLViewerBase::GetRnrCtx() const; TGLSceneInfo*TGLViewerBase::GetSceneInfo(TGLSceneBase* scene); const TGLPhysicalShape*TGLViewer::GetSelected() const; TGLSelectRecord&TGLViewer::GetSelRec(); Bool_tTGLViewer::GetSmartRefresh() const; Bool_tTGLViewer::GetSmoothLines() const; Bool_tTGLViewer::GetSmoothPoints() const; Bool_tTGLViewer::GetStereo() const; Float_tTGLViewer::GetStereoEyeOffsetFac() const; Float_tTGLViewer::GetStereoFrustumAsymFac() const; Float_tTGLViewer::GetStereoZeroParallax() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGLViewerBase::IsChanged() const; Bool_tTGLViewer::IsColorSetDark() const; Bool_tTGLLockable::IsDrawOrSelectLock() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTGLLockable::IsLocked() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGLViewer::IsUsingDefaultColorSet() const; static Bool_tTGLViewer::IsUsingDefaultColorSetForNewViewers(); Bool_tTObject::IsZombie() const; static voidTQObject::LoadRQ_OBJECT(); virtual const char*TGLViewerBase::LockIdStr() const; static const char*TGLLockable::LockName(TGLLockable::ELock lock); static Bool_tTGLLockable::LockValid(TGLLockable::ELock lock); Short_tTGLViewerBase::LOD() const; virtual voidTQObject::LowPriority(const char* signa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLEmbeddedViewer.html:8792,Inherit,InheritsFrom,8792,root/html532/TGLEmbeddedViewer.html,https://root.cern,https://root.cern/root/html532/TGLEmbeddedViewer.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ool_tTGLViewer::GetResetCamerasOnUpdate() const; TGLRnrCtx*TGLViewerBase::GetRnrCtx() const; TGLSceneInfo*TGLViewerBase::GetSceneInfo(TGLSceneBase* scene); const TGLPhysicalShape*TGLViewer::GetSelected() const; TGLSelectRecord&TGLViewer::GetSelRec(); Bool_tTGLViewer::GetSmartRefresh() const; Bool_tTGLViewer::GetSmoothLines() const; Bool_tTGLViewer::GetSmoothPoints() const; Bool_tTGLViewer::GetStereo() const; Float_tTGLViewer::GetStereoEyeOffsetFac() const; Float_tTGLViewer::GetStereoFrustumAsymFac() const; Float_tTGLViewer::GetStereoZeroParallax() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTObject::Hash() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGLViewerBase::IsChanged() const; Bool_tTGLViewer::IsColorSetDark() const; Bool_tTGLLockable::IsDrawOrSelectLock() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTGLLockable::IsLocked() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGLViewer::IsUsingDefaultColorSet() const; static Bool_tTGLViewer::IsUsingDefaultColorSetForNewViewers(); Bool_tTObject::IsZombie() const; virtual const char*TGLViewerBase::LockIdStr() const; static const char*TGLLockable::LockName(TGLLockable::ELock lock); static Bool_tTGLLockable::LockValid(TGLLockable::ELock lock); Short_tTGLViewerBase::LOD() const; virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLEmbeddedViewer.html:8741,Inherit,InheritsFrom,8741,root/html602/TGLEmbeddedViewer.html,https://root.cern,https://root.cern/root/html602/TGLEmbeddedViewer.html,2,['Inherit'],['InheritsFrom']
Modifiability,"ool_tTGView::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGTextView::HandleMotion(Event_t* event); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGTextView::HandleSelectionClear(Event_t* event); virtual Bool_tTGTextView::HandleSelectionRequest(Event_t* event); virtual Bool_tTGTextView::HandleTimer(TTimer* t); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; Bool_tTGWidget::IsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTGTextView::IsMarked() const; Bool_tTObject::IsOnHeap() const; Bool_tTGTextView::IsReadOnly() const; virtual Bool_tTGTextView::IsSaved(); virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGTextViewostream.html:11299,Inherit,InheritsFrom,11299,root/html534/TGTextViewostream.html,https://root.cern,https://root.cern/root/html534/TGTextViewostream.html,1,['Inherit'],['InheritsFrom']
Modifiability,"ool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTEveCompositeFrame::HideAllDecorations(); virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; virtual voidTGCompositeFrame::Layout(); static voidTQObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveCompositeFrameInMainFrame.html:9317,Inherit,InheritsFrom,9317,root/html532/TEveCompositeFrameInMainFrame.html,https://root.cern,https://root.cern/root/html532/TEveCompositeFrameInMainFrame.html,6,['Inherit'],['InheritsFrom']
Modifiability,"ool_tTGWindow::HandleExpose(Event_t* event); virtual Bool_tTGCompositeFrame::HandleFocusChange(Event_t*); virtual Bool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tTGCompositeFrame::HandleKey(Event_t*); virtual Bool_tTGCompositeFrame::HandleMotion(Event_t*); virtual Bool_tTGCompositeFrame::HandleSelection(Event_t*); virtual Bool_tTGFrame::HandleSelectionClear(Event_t*); virtual Bool_tTGFrame::HandleSelectionRequest(Event_t*); virtual Bool_tTGWindow::HandleTimer(TTimer*); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; virtual ULong_tTGObject::Hash() const; virtual voidTEveCompositeFrame::HideAllDecorations(); virtual voidTGCompositeFrame::HideFrame(TGFrame* f); virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); virtual voidTGWindow::IconifyWindow(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGFrame::Inspect() const; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; Bool_tTGCompositeFrame::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; virtual voidTGCompositeFrame::Layout(); virtual voidTGWindow:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveCompositeFrameInMainFrame.html:9220,Inherit,InheritsFrom,9220,root/html602/TEveCompositeFrameInMainFrame.html,https://root.cern,https://root.cern/root/html602/TEveCompositeFrameInMainFrame.html,6,['Inherit'],['InheritsFrom']
Modifiability,"ool_tTGWindow::HandleIdleEvent(TGIdleHandler*); virtual Bool_tHandleKey(Event_t* event); virtual Bool_tTGTextEntry::HandleMotion(Event_t* event); virtual Bool_tTGTextEntry::HandleSelection(Event_t* event); virtual Bool_tTGTextEntry::HandleSelectionClear(Event_t* event); virtual Bool_tTGTextEntry::HandleSelectionRequest(Event_t* event); virtual Bool_tTGTextEntry::HandleTimer(TTimer* t); virtual Bool_tTQObject::HasConnection(const char* signal_name) const; Bool_tTGWidget::HasFocus() const; virtual ULong_tTGObject::Hash() const; Bool_tTGTextEntry::HasMarkedText() const; Bool_tTGTextEntry::HasOwnFont() const; virtual voidTQObject::HighPriority(const char* signal_name, const char* slot_name = 0); voidTGTextEntry::Home(Bool_t mark = kFALSE); virtual voidTGWindow::IconifyWindow(); virtual voidIncreaseNumber(TGNumberFormat::EStepSize step = kNSSSmall, Int_t sign = 1, Bool_t logstep = kFALSE); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTGTextEntry::Insert(const char*); virtual voidTGTextEntry::InsertText(const char* text, Int_t pos); virtual voidTGFrame::Inspect() const; virtual voidInvalidInput(const char* instr)SIGNAL ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTGFrame::IsActive() const; virtual Bool_tTGFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tIsEditable() const; Bool_tTGTextEntry::IsEdited() const; Bool_tTGWidget::IsEnabled() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTGTextEntry::IsFrameDrawn() const; virtual Bool_tTGFrame::IsLayoutBroken() const; virtual Bool_tIsLogStep() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGWindow::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGNumberEntryField.html:13321,Inherit,InheritsFrom,13321,root/html532/TGNumberEntryField.html,https://root.cern,https://root.cern/root/html532/TGNumberEntryField.html,4,['Inherit'],['InheritsFrom']
Modifiability,"ool_tTGWindow::fNeedRedrawkTRUE if window needs to be redrawn; UInt_tTGFrame::fOptionsframe options; const TGWindow*TGWindow::fParentParent window; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TGTable*fTableTable that this frame belongs to; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tfX0X coordinate of the header frame ; Int_tTGFrame::fYframe y position; Int_tfY0Y coordinate of the header frame; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGTableHeaderFrame(const TGWindow* p, TGTable* table = 0, UInt_t w = 1, UInt_t h = 1, EHeaderType type = kColumnHeader, UInt_t option = 0); TGTableHeaderFrame constuctor. void DrawRegion(Int_t x, Int_t y, UInt_t w, UInt_t h); Draw a region of container in viewport. ~TGTableHeaderFrame(); {}. » Author: Roel Aaij 14/08/2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: Thu Nov 3 20:16:03 2011 » Last generated: 2011-11-03 20:16; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGTableHeaderFrame.html:19044,Inherit,Inheritance,19044,root/html532/TGTableHeaderFrame.html,https://root.cern,https://root.cern/root/html532/TGTableHeaderFrame.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ool_tTObjArray::BoundsOk(const char* where, Int_t at) const; virtual voidTSeqCollection::Changed(); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; Int_tTObjArray::GetAbsLast() const; virtual const char*TCollection::GetCollectionEntryName(TObject* entry) const; voidTObjArray::Init(Int_t s, Int_t lowerBound); voidTObject::MakeZombie(); Bool_tTObjArray::OutOfBoundsError(const char* where, Int_t i) const; virtual voidTCollection::PrintCollectionEntry(TObject* entry, Option_t* option, Int_t recurse) const; virtual voidTCollection::PrintCollectionHeader(Option_t* option) const. Data Members; public:. enum TCollection::[unnamed] { kIsOwner; kInitCapacity; kInitHashTableCapacity; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TObject**TObjArray::fCont!Array contents; Int_tTObjArray::fLastLast element in array containing an object; Int_tTObjArray::fLowerBoundLower bound of the array; TStringTCollection::fNamename of the collection; Int_tTCollection::fSizenumber of elements in collection; Bool_tTSeqCollection::fSortedtrue if collection has been sorted. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~TSchemaMatch(); {}. const TSchemaRule* GetRuleWithSource(const TString& name) const. const TSchemaRule* GetRuleWithTarget(const TString& name) const. Bool_t HasRuleWithSource(const TString& name, Bool_t needingAlloc) const. Bool_t HasRuleWithTarget(const TString& name, Bool_t willset) const. » Last changed: root/core:$Id: TSchemaRuleSet.h 38140 2011-02-18 10:52:47Z pcanal $ » Last generated: 2011-11-03 20:06; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__TSchemaMatch.html:10056,Inherit,Inheritance,10056,root/html532/ROOT__TSchemaMatch.html,https://root.cern,https://root.cern/root/html532/ROOT__TSchemaMatch.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TEveGValuator*fTubeR; TEveGTriVecValuator*fVector; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveArrowEditor(const TGWindow* p = 0, Int_t width = 170, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor. void SetModel(TObject* obj); Set model object. void DoTubeR(); Slot for TubeR. void DoConeR(); Slot for ConeR. void DoConeL(); Slot for ConeL. void DoVertex(); Slot for origin and vector. TEveArrowEditor(const TEveArrowEditor& ). TEveArrowEditor& operator=(const TEveArrowEditor& ). virtual ~TEveArrowEditor(); {}. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-06-02 15:42; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TEveArrowEditor.html:20716,Inherit,Inheritance,20716,root/html604/TEveArrowEditor.html,https://root.cern,https://root.cern/root/html604/TEveArrowEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TEveGValuator*fTubeR; TEveGTriVecValuator*fVector; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveArrowEditor(const TGWindow* p = 0, Int_t width = 170, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor. void SetModel(TObject* obj); Set model object. void DoTubeR(); Slot for TubeR. void DoConeR(); Slot for ConeR. void DoConeL(); Slot for ConeL. void DoVertex(); Slot for origin and vector. TEveArrowEditor(const TEveArrowEditor& ). TEveArrowEditor& operator=(const TEveArrowEditor& ). virtual ~TEveArrowEditor(); {}. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-06-30 14:43; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveArrowEditor.html:20716,Inherit,Inheritance,20716,root/html602/TEveArrowEditor.html,https://root.cern,https://root.cern/root/html602/TEveArrowEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TEveTransSubEditor*fTrans; TGNumberEntry*fTransparency; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveElementEditor(const TGWindow* p = 0, Int_t width = 170, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor. void SetModel(TObject* obj); Set model object. void DoRnrSelf(); Slot for RnrSelf. void DoRnrChildren(); Slot for RnrChildren. void DoRnrState(); Slot for RnrState. void DoMainColor(Pixel_t color); Slot for MainColor. void DoTransparency(); Slot for Transparency. TEveElementEditor(const TEveElementEditor& ). TEveElementEditor& operator=(const TEveElementEditor& ). virtual ~TEveElementEditor(); {}. » Last changed: root/eve:$Id: TEveElementEditor.h 22539 2008-03-08 14:36:37Z rdm $ » Last generated: 2011-11-03 20:11; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveElementEditor.html:20030,Inherit,Inheritance,20030,root/html532/TEveElementEditor.html,https://root.cern,https://root.cern/root/html532/TEveElementEditor.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ool_tfAutomaticuse user given prune strength or automatically determined one using a validation sample; Bool_tfBaggedBoostturn bagging in combination with boost on/off; Bool_tfBaggedGradBoostturn bagging in combination with grad boost on/off; Double_tfBaggedSampleFractionrelative size of bagged event sample to original sample size; TStringfBoostTypestring specifying the boost type; Double_tfBoostWeightntuple var: boost weight; vector<double>fBoostWeightsthe weights applied in the individual boosts; Double_tfCbbCost factor; Double_tfCssCost factor; Double_tfCtb_ssCost factor; Double_tfCts_sbCost factor; Bool_tfDoBoostMonitorcreate control plot with ROC integral vs tree number; Bool_tfDoPreselectiondo or do not perform automatic pre-selection of 100% eff. cuts; Double_tfErrorFractionntuple var: misclassification error fraction; vector<const TMVA::Event*>fEventSamplethe training events; Double_tfFValidationEventsfraction of events to use for pruning; vector<TMVA::DecisionTree*>fForestthe collection of decision trees; vector<Double_t>fHighBkgCut; vector<Double_t>fHighSigCut; Bool_tfHistoricBoolhistoric variable, only needed for ""CompatibilityOptions""; Int_tfITreentuple var: ith tree; Bool_tfInverseBoostNegWeightsboost ev. with neg. weights with 1/boostweight rathre than boostweight; vector<Bool_t>fIsHighBkgCut; vector<Bool_t>fIsHighSigCut; vector<Bool_t>fIsLowBkgCut; vector<Bool_t>fIsLowSigCut; vector<Double_t>fLowBkgCut; vector<Double_t>fLowSigCut; UInt_tfMaxDepthmax depth; Double_tfMinLinCorrForFisherthe minimum linear correlation between two variables demanded for use in fisher criterium in node splitting; Int_tfMinNodeEventsmin number of events in node; Float_tfMinNodeSizemin percentage of training events in node; TStringfMinNodeSizeSstring containing min percentage of training events in node; TTree*fMonitorNtuplemonitoring ntuple; Int_tfNCutsgrid used in cut applied in node splitting; UInt_tfNNodesMaxmax # of nodes; Int_tfNTreesnumber of decision trees requested; T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodBDT.html:24023,variab,variable,24023,root/html602/TMVA__MethodBDT.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodBDT.html,4,['variab'],['variable']
Modifiability,"ool_tfCanNormalizethe tree can be normalised; UInt_tfCurrentDepthinternal variable, counting the depth of the tree during insertion ; vector<Float_t>fMax[2]RMS for signal and background for each variable; vector<Float_t>fMeans[2]mean for signal and background for each variable; vector<Float_t>fMin[2]RMS for signal and background for each variable; Double_tfNEventsW[2]Number of events per class, taking into account event weights; vector<std::pair<Double_t,const TMVA::Event*> >fNormalizeTreeTable; UInt_tfPeriodperiode (number of event variables); vector<Float_t>fRMS[2]RMS for signal and background for each variable; Bool_tfStatisticsIsValidflag if last stat calculation is still valid, set to false if new node is insert; vector<Double_t>fSum[2]Sum for signal and background for each variable; Double_tfSumOfWeightsTotal number of events (weigthed) counted during filling; vector<Double_t>fSumSq[2]Squared Sum for signal and background for each variable. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BinarySearchTree(const TMVA::BinarySearchTree& b); default constructor. BinarySearchTree(const TMVA::BinarySearchTree& b); copy constructor that creates a true copy, i.e. a completely independent tree. ~BinarySearchTree( void ); destructor. TMVA::BinarySearchTree* CreateFromXML(void* node, UInt_t tmva_Version_Code = TMVA_VERSION_CODE); re-create a new tree (decision tree or search tree) from XML. void Insert(const TMVA::Event* ); insert a new ""event"" in the binary tree. void Insert(const TMVA::Event* , TMVA::Node* ); private internal function to insert a event (node) at the proper position. TMVA::BinarySearchTreeNode* Search(TMVA::Event* event) const; search the tree to find the node matching ""event"". TMVA::BinarySearchTreeNode* Search(TMVA::Event* , TMVA::Node* ) const; Private, recursive, function for searching. Double_t GetSumOfWeights(Int_t theType) const; return the sum of event (node) weights. Double_t GetSumOfWeights(Int_t theTy",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__BinarySearchTree.html:4783,Inherit,Inheritance,4783,root/html532/TMVA__BinarySearchTree.html,https://root.cern,https://root.cern/root/html532/TMVA__BinarySearchTree.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"ool_tfIsGlobalplugin ctor is a global function; Bool_tfIsMacroplugin is a macro and not a library; TFunction*fMethod!ctor method or global function; TStringfOriginorigin of plugin handler definition; TStringfPluginplugin library which should contain fClass; TStringfRegexpregular expression which must be matched in URI. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPluginHandler(const char* base, const char* regexp, const char* className, const char* pluginName, const char* ctor, const char* origin); Create a plugin handler. Called by TPluginManager. Bool_t CanHandle(const char* base, const char* uri); Check if regular expression appears in the URI, if so return kTRUE.; If URI = 0 always return kTRUE. void SetupCallEnv(); Setup ctor or static method call environment. Int_t CheckPlugin() const; Check if the plugin library for this handler exits. Returns 0; when it exists and -1 in case the plugin does not exist. Int_t LoadPlugin(); Load the plugin library for this handler. Returns 0 on successful loading; and -1 in case the library does not exist or in case of error. Long_t ExecPlugin(Int_t va_(nargs), ...); Execute ctor for this plugin and return pointer to object of specific; class. User must cast the returned long to the correct class.; This method accepts a variable number of arguments to be passed; to the ctor, where nargs is the number of arguments, followed; by nargs arguments. Returns 0 in case of error. void Print(Option_t* opt = """") const; Print info about the plugin handler. If option is ""a"" print; also the ctor's that will be used. TPluginHandler(); { }. TPluginHandler(const char* base, const char* regexp, const char* className, const char* pluginName, const char* ctor, const char* origin). TPluginHandler& operator=(const TPluginHandler& ). const char * GetBase() const; { return fBase; }. const char * GetRegexp() const; { return fRegexp; }. const char * GetPlugin() const; { return fPlugin; }. const char * GetCt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPluginHandler.html:9906,plugin,plugin,9906,root/html528/TPluginHandler.html,https://root.cern,https://root.cern/root/html528/TPluginHandler.html,6,['plugin'],['plugin']
Modifiability,"ool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGedFrame.html:30075,inherit,inherited,30075,doc/master/classTGedFrame.html,https://root.cern,https://root.cern/doc/master/classTGedFrame.html,1,['inherit'],['inherited']
Modifiability,"ool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGLVContainer; void ActivateItem (TGFrameElement *el) override;  Select/activate item. ;  ; void DeActivateItem (TGFrameElement *el) override;  Unselect/deactivate item. ;  ;  Protected Member Functions inherited from TGContainer; void DoRedraw () override;  Redraw content of container in the viewport region. ;  ; virtual void OnAutoScroll ();  Autoscroll while close to & beyond The Wall. ;  ; virtual void RepeatSearch ();  Repeats search. ;  ; virtual void SearchPattern ();  Search for entry which name begins with pattern. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * Get",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTVLVContainer.html:34327,inherit,inherited,34327,doc/master/classTTVLVContainer.html,https://root.cern,https://root.cern/doc/master/classTTVLVContainer.html,1,['inherit'],['inherited']
Modifiability,"ool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Member Functions; void * GetSender () override;  true when resizing the pad ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Protected Attributes; Bool_t fResizing;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttPad; Float_t fAfile;  Alignment for the file name. ;  ; Float_t fAstat;  Alignment for the statistics. ;  ; Float_t fBottomMargin;  BottomMargin. ;  ; Int_t fFrameBorderMode;  Pad frame border mode. ;  ; Width_t fFrameBorderSize;  Pad frame border size. ;  ; Color_t fFrameFillColor;  Pad frame fill color. ;  ; Style_t fFrameFillStyle;  Pad frame fill style. ;  ; Color_t fFrameLineColor;  Pad frame line color. ;  ; Style_t fFrameLineStyle;  Pad frame line style. ;  ; Width_t fFrameLineWidth;  Pad frame line width. ;  ; Float_t fLeftMargin;  LeftMargin. ;  ; Float_t fRightMargin;  RightMargin. ;  ; Float_t fTopMargin;  TopMargin. ;  ; Float_t fXfile;  X position where to draw the file name. ;  ; Float_t fXstat;  X position where to draw the statistics. ;  ; Float_t fYfile;  Y position where to draw the file name. ;  ; Float_t fYstat;  Y position where to ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualPad.html:29618,inherit,inherited,29618,doc/master/classTVirtualPad.html,https://root.cern,https://root.cern/doc/master/classTVirtualPad.html,1,['inherit'],['inherited']
Modifiability,"ool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; const TMatrixDBase & GetDecompMatrix () const override;  ;  Protected Member Functions inherited from TDecompBase; Int_t Hager (Double_t &est, Int_t iter=5);  ; void ResetStatus ();  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t * fIpiv;  ; Int_t fNIpiv;  ; TMatrixD fU;  ;  Protected Attributes inherited from TDecompBase; Int_t fColLwb;  ; Double_t fCondition;  ; Double_t fDet1;  ; Double_t fDet2;  ; Int_t fRowLwb;  ; Double_t fTol;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDecompBase; enum  { kWorkMax = 100; };  ; enum  EMatrixDecompStat { ;   kInit = (1ULL << ( 14 )); , kPatternSet = (1ULL << ( 15 )); , kValuesSet = (1ULL << ( 16 )); , kMatrixSet = (1ULL << ( 17 )); , ;   kDecomposed = (1ULL << ( 18 )); , kDetermined = (1ULL << ( 19 )); , kCondition = (1ULL << ( 20 )); , kSingular = (1ULL << ( 21 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDecompBK.html:13690,inherit,inherited,13690,doc/master/classTDecompBK.html,https://root.cern,https://root.cern/doc/master/classTDecompBK.html,1,['inherit'],['inherited']
Modifiability,"ool_t HandleDoubleClick (Event_t *ev) override;  Delegate call to the owner. ;  ; Bool_t HandleFocusChange (Event_t *) override;  Delegate call to the owner. ;  ; Bool_t HandleKey (Event_t *ev) override;  Delegate call to the owner. ;  ; Bool_t HandleMotion (Event_t *ev) override;  Delegate call to the owner. ;  ; virtual void InitGL ();  Call glEnable(... in overrider of InitGL. ;  ; TClass * IsA () const override;  ; Bool_t MakeCurrent () override;  Make the gl-context current. ;  ; virtual void PaintGL ();  Do actual drawing in overrider of PaintGL. ;  ; void SetEventHandler (TGEventHandler *eh);  Set event-handler. All events are passed to this object. ;  ; void SetFormat ();  Set pixel format. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void SwapBuffers () override;  Swap buffers. ;  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; virtual void ChangeOptions (UInt_t options);  Change frame options. Options is an OR of the EFrameTypes. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; virtual void DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLWidget.html:3547,inherit,inherited,3547,doc/master/classTGLWidget.html,https://root.cern,https://root.cern/doc/master/classTGLWidget.html,1,['inherit'],['inherited']
Modifiability,"ool_t MakeCurrent (Int_t devInd) override;  ; void MarkForDirectCopy (Int_t devInd, Bool_t) override;  ; void PaintSingleObject (TVirtualGLPainter *) override;  ; void PanObject (TVirtualGLPainter *o, Int_t x, Int_t y) override;  ; Bool_t PlotSelected (TVirtualGLPainter *plot, Int_t px, Int_t py) override;  ; void PrintViewer (TVirtualViewer3D *vv) override;  ; void ReadGLBuffer (Int_t devInd) override;  ; Bool_t ResizeOffScreenDevice (Int_t devInd, Int_t x, Int_t y, UInt_t w, UInt_t h) override;  ; Bool_t SelectManip (TVirtualGLManip *manip, const TGLCamera *camera, const TGLRect *rect, const TGLBoundingBox *sceneBox) override;  ; void SelectOffScreenDevice (Int_t devInd) override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGLManager;  TGLManager ();  ;  TGLManager (const TGLManager &)=delete;  ; TGLManager & operator= (const TGLManager &)=delete;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGOSXGLManager.html:1861,inherit,inherited,1861,doc/master/classTGOSXGLManager.html,https://root.cern,https://root.cern/doc/master/classTGOSXGLManager.html,2,['inherit'],['inherited']
Modifiability,"ool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ;  Public Member Functions inherited from TXMLSetup;  TXMLSetup ()=default;  ;  TXMLSetup (const char *opt);  creates TXMLSetup object getting values from string ;  ;  TXMLSetup (const TXMLSetup &src);  copy constructor of TXMLSetup class ;  ; virtual ~TXMLSetup ()=default;  ; Int_t GetNextRefCounter ();  ; TString GetSetupAsString ();  return setup values as string ;  ; EXMLLayout GetXmlLayout () const;  ; Bool_t IsStoreStreamerInfos () const;  ; Bool_t IsUseDtd () const;  ; Bool_t IsUseNamespaces () const;  ; TXMLSetup & operator= (const TXMLSetup &rhs);  assign operator ;  ; void PrintSetup ();  show setup values ;  ; virtual void SetStoreStreamerInfos (Bool_t iConvert=kTRUE);  ; virtual void SetUsedDtd (Bool_t use=kTRUE);  ; virtual void SetUseNamespaces (Bool_t iUseNamespaces=kTRUE);  ; virtual void SetXmlLayout (EXMLLayout layout);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; const char * XmlClassNameSpaceRef (const TClass *cl);  produce string which used as reference in class namespace definition ;  ; const char * XmlConvertClassName (const char *name);  convert class name to exclude any special symbols like ':', '<' '>' ',' and spaces ;  ; const char * XmlGetElementName (const TStreamerElement *el);  return converted name for TStreamerElement ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TObject * ConvertFromXML (const char *str, Bool_t GenericLayout=kFALSE, Bool_t UseNamespaces=kFALSE);  Read object from XML, produced by ConvertToXML() method. ;  ; static void * ConvertFromXMLA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferXML.html:32849,inherit,inherited,32849,doc/master/classTBufferXML.html,https://root.cern,https://root.cern/doc/master/classTBufferXML.html,1,['inherit'],['inherited']
Modifiability,"ool IsSymmetric (RooArgSet &x1, RooArgSet &x2) override;  Determine whether or not the proposal density is symmetric for points x1 and x2 - that is, whether the probability of reaching x2 from x1 is equal to the probability of reaching x1 from x2. ;  ; virtual void printMappings ();  ; void Propose (RooArgSet &xPrime, RooArgSet &x) override;  Populate xPrime with a new proposed point. ;  ; virtual void Reset ();  ; virtual void SetCacheSize (Int_t size);  Set how many points to generate each time we propose from a new point Default (and minimum) is 1. ;  ; virtual void SetOwnsPdf (bool ownsPdf);  set whether we own the PDF that serves as the proposal density function By default, when constructed, PdfProposal does NOT own the PDF. ;  ; virtual void SetPdf (RooAbsPdf &pdf);  Set the PDF to be the proposal density function. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooStats::ProposalFunction;  ProposalFunction ();  Default constructor. ;  ; virtual bool CheckParameters (RooArgSet &params);  Check the parameters for which the ProposalFunction will propose values to make sure they are all RooRealVars Return true if all objects are RooRealVars, false otherwise. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1PdfProposal.html:3783,inherit,inherited,3783,doc/master/classRooStats_1_1PdfProposal.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1PdfProposal.html,1,['inherit'],['inherited']
Modifiability,"oopManagerUnchecked ();  ; const std::vector< std::string > & GetVariations () const;  ; virtual std::shared_ptr< RNodeBase > GetVariedFilter (const std::string &);  Return a clone of this node that acts as a Filter working with values in the variationName ""universe"". ;  ; virtual void IncrChildrenCount ()=0;  ; virtual void PartialReport (ROOT::RDF::RCutFlowReport &) const =0;  ; virtual void Report (ROOT::RDF::RCutFlowReport &) const =0;  ; virtual void ResetChildrenCount ();  ; virtual void StopProcessing ()=0;  . Protected Attributes; bool fHasStopped {false};  True if the end of the range has been reached. ;  ; Long64_t fLastCheckedEntry {-1};  ; bool fLastResult {true};  ; ULong64_t fNProcessedEntries {0};  ; const unsigned int fNSlots;  Number of thread slots used by this node, inherited from parent node. ;  ; unsigned int fStart;  ; unsigned int fStop;  ; unsigned int fStride;  ; std::unordered_map< std::string, std::shared_ptr< RRangeBase > > fVariedRanges;  ;  Protected Attributes inherited from ROOT::Detail::RDF::RNodeBase; RLoopManager * fLoopManager;  ; unsigned int fNChildren {0};  Number of nodes of the functional graph hanging from this object. ;  ; unsigned int fNStopsReceived {0};  Number of times that a children node signaled to stop processing entries. ;  ; std::vector< std::string > fVariations;  List of systematic variations that affect this node. ;  . #include <ROOT/RDF/RRangeBase.hxx>. Inheritance diagram for ROOT::Detail::RDF::RRangeBase:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RRangeBase(). RRangeBase::RRangeBase ; (; RLoopManager * ; implPtr, . unsigned int ; start, . unsigned int ; stop, . unsigned int ; stride, . const unsigned int ; nSlots, . const std::vector< std::string > & ; prevVariations . ). Definition at line 15 of file RRangeBase.cxx. ◆ ~RRangeBase(). RRangeBase::~RRangeBase ; (; ). override . Definition at line 29 of file RRangeBa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Detail_1_1RDF_1_1RRangeBase.html:2177,inherit,inherited,2177,doc/master/classROOT_1_1Detail_1_1RDF_1_1RRangeBase.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Detail_1_1RDF_1_1RRangeBase.html,1,['inherit'],['inherited']
Modifiability,"oordModeOrigin);  ; virtual void PutPixel (Int_t, Int_t, const char *=""#000000"");  ; virtual void ReadImage (const char *, EImageFileTypes=TImage::kUnknown);  ; virtual void Scale (UInt_t, UInt_t);  ; virtual void SetEditable (Bool_t=kTRUE);  ; virtual void SetImage (const Double_t *, UInt_t, UInt_t, TImagePalette *=nullptr);  ; virtual void SetImage (const TArrayD &, UInt_t, TImagePalette *=nullptr);  ; virtual void SetImage (const TVectorD &, UInt_t, TImagePalette *=nullptr);  ; virtual void SetImage (Pixmap_t, Pixmap_t=0);  ; virtual Bool_t SetImageBuffer (char **, EImageFileTypes=TImage::kPng);  ; virtual void Slice (UInt_t, UInt_t, UInt_t, UInt_t, UInt_t, UInt_t);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Tile (UInt_t, UInt_t);  ; virtual void UnZoom ();  ; virtual Double_t * Vectorize (UInt_t=256, UInt_t=4, Int_t=0);  ; virtual void WriteImage (const char *, EImageFileTypes=TImage::kUnknown);  ; virtual void Zoom (UInt_t, UInt_t, UInt_t, UInt_t);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTImage.html:8339,inherit,inherited,8339,doc/master/classTImage.html,https://root.cern,https://root.cern/doc/master/classTImage.html,1,['inherit'],['inherited']
Modifiability,"oordinateSystemTag>::Scalar b, ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar c); ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>&SetY(ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar yy); ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>&SetZ(ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar zz); ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarTheta() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalartheta() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarX() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarx() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarY() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalary() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarZ() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarz() const. Data Members; private:. ROOT::Math::CylindricalEta3D<double>fCoordinates. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/mathcore:$Id$ » Last generated: 2015-06-30 14:24; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__PositionVector3D_-p1CylindricalEta3D_double__-p1DefaultCoordinateSystemTag_.html:9781,Inherit,Inheritance,9781,root/html602/ROOT__Math__PositionVector3D_-p1CylindricalEta3D_double__-p1DefaultCoordinateSystemTag_.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__PositionVector3D_-p1CylindricalEta3D_double__-p1DefaultCoordinateSystemTag_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"oordinateSystemTag>::Scalar b, ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar c); ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>&SetY(ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar yy); ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>&SetZ(ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalar zz); ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarTheta() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalartheta() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarX() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarx() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarY() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalary() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::ScalarZ() const; ROOT::Math::PositionVector3D<ROOT::Math::CylindricalEta3D<double>,ROOT::Math::DefaultCoordinateSystemTag>::Scalarz() const. Data Members; private:. ROOT::Math::CylindricalEta3D<double>fCoordinates. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: root/mathcore:$Id$ » Last generated: 2015-09-08 17:35; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__PositionVector3D_-p1CylindricalEta3D_double__-p1DefaultCoordinateSystemTag_.html:9781,Inherit,Inheritance,9781,root/html604/ROOT__Math__PositionVector3D_-p1CylindricalEta3D_double__-p1DefaultCoordinateSystemTag_.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__PositionVector3D_-p1CylindricalEta3D_double__-p1DefaultCoordinateSystemTag_.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"oose its optimal value automatically, i.e. ;  ; void SetPrintLevel (int level);  set print level ;  ; void SetStrategy (int strategyLevel);  set the strategy ;  ; void SetTolerance (double tol);  set the tolerance ;  ; void SetValidError (bool on);  flag to check if minimizer needs to perform accurate error analysis (e.g. run Hesse for Minuit) ;  ; virtual bool SetVariableInitialRange (unsigned int, double, double);  set the initial range of an existing variable ;  ; template<class VariableIterator > ; int SetVariables (const VariableIterator &begin, const VariableIterator &end);  add variables . Return number of variables successfully added ;  ; int Status () const;  status code of minimizer ;  ; int Strategy () const;  strategy ;  ; double Tolerance () const;  absolute tolerance ;  . Protected Attributes; std::string fMethod;  minimizer method to be used, must be of a type listed in R optim or optimx descriptions ;  ;  Protected Attributes inherited from ROOT::Math::Minimizer; MinimizerOptions fOptions;  minimizer options ;  ; int fStatus = -1;  status of minimizer ;  ; bool fValidError = false;  flag to control if errors have been validated (Hesse has been run in case of Minuit) ;  . Private Attributes; TMatrixD fCovMatrix;  covariant matrix ;  ; std::vector< double > fErrors;  vector of parameter errors ;  ; TMatrixD fHessMatrix;  Hessian matrix. ;  . Additional Inherited Members;  Protected Member Functions inherited from ROOT::Math::BasicMinimizer; bool CheckDimension () const;  ; bool CheckObjFunction () const;  ; MinimTransformFunction * CreateTransformation (std::vector< double > &startValues, const ROOT::Math::IMultiGradFunction *func=nullptr);  ; void SetFinalValues (const double *x, const MinimTransformFunction *func=nullptr);  ; void SetMinValue (double val);  . #include <Math/RMinimizer.h>. Inheritance diagram for ROOT::Math::RMinimizer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destru",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1RMinimizer.html:10879,inherit,inherited,10879,doc/master/classROOT_1_1Math_1_1RMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1RMinimizer.html,1,['inherit'],['inherited']
Modifiability,"oost(); voidTObject::AbstractMethod(const char* method) const; voidTMVA::Configurable::AddOptionsXMLTo(void* parent) const; voidTMVA::MethodBase::AddOutput(TMVA::Types::ETreeType type, TMVA::Types::EAnalysisType analysisType); virtual voidTMVA::MethodCompositeBase::AddWeightsXMLTo(void* parent) const; virtual voidTObject::AppendPad(Option_t* option = """"); TDirectory*TMVA::MethodBase::BaseDir() const; Bool_tBookMethod(TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption); virtual voidTObject::Browse(TBrowser* b); voidTMVA::Configurable::CheckForUnusedOptions() const; static TClass*Class(); virtual const char*TObject::ClassName() const; voidCleanBoostOptions(); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; TMVA::ConfigurableTMVA::Configurable::Configurable(const TString& theOption = """"); TMVA::ConfigurableTMVA::Configurable::Configurable(const TMVA::Configurable&); virtual voidTObject::Copy(TObject& object) const; virtual const TMVA::Ranking*CreateRanking(); TMVA::DataSet*TMVA::MethodBase::Data() const; TMVA::DataSetInfo&TMVA::MethodBase::DataInfo() const; virtual voidTObject::Delete(Option_t* option = """")MENU ; voidTMVA::MethodBase::DisableWriting(Bool_t setter); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); Bool_tTMVA::MethodBase::DoMulticlass() const; Bool_tTMVA::MethodBase::DoRegression() const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodBoost.html:1589,Config,Configurable,1589,root/html602/TMVA__MethodBoost.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodBoost.html,2,['Config'],['Configurable']
Modifiability,"oot. ;  ; virtual void SetChat (Int_t Chat);  ; virtual void SetEvPerBin (Int_t EvPerBin);  ; virtual void SetInhiDiv (Int_t, Int_t);  This can be called before Initialize, after setting kDim It defines which variables are excluded in the process of the cell division. ;  ; virtual void SetkDim (Int_t kDim);  ; virtual void SetMaxWtRej (Double_t MaxWtRej);  ; virtual void SetnBin (Int_t nBin);  ; virtual void SetnCells (Long_t nCells);  ; virtual void SetnSampl (Long_t nSampl);  ; virtual void SetOptDrive (Int_t OptDrive);  ; virtual void SetOptRej (Int_t OptRej);  ; virtual void SetPseRan (TRandom *PseRan);  ; virtual void SetRho (TFoamIntegrand *Rho);  User may use this method to set the distribution object. ;  ; virtual void SetRhoInt (Double_t(*fun)(Int_t, Double_t *));  User may use this method to set the distribution object as a global function pointer (and not as an interpreted function). ;  ; virtual void SetXdivPRD (Int_t, Int_t, Double_t[]);  This should be called before Initialize, after setting kDim It predefines values of the cell division for certain variable iDim. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Varedu (Double_t[5], Int_t &, Double_t &, Double_t &);  Internal method used by Initialize. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) an",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFoam.html:11633,variab,variable,11633,doc/master/classTFoam.html,https://root.cern,https://root.cern/doc/master/classTFoam.html,1,['variab'],['variable']
Modifiability,"oot/treename"");; 295/// // DO THIS INSTEAD; 296/// c.Add(""myfile.root?#treename"");; 297/// ~~~; 298/// - Wildcard treatment is triggered by any of the special characters:; 299/// <b>[]*?</b> which may be used in the file name or subdirectory name,; 300/// eg. specifying ""xxx*.root"" adds all files starting with xxx in the; 301/// current file system directory and ""*/*.root"" adds all the files in the; 302/// current subdirectories (but not in the subsubdirectories).; 303///; 304/// The second format accepted for \p name may have the form of a URL, e.g.:; 305///; 306/// ~~~ {.cpp}; 307/// root://machine/path/file_name[?[query][#tree_name]]; 308/// or root://machine/path/file_name; 309/// or root://machine/path/file_name.root[.oext]/tree_name; 310/// or root://machine/path/file_name.root[.oext]/tree_name?query; 311/// ~~~; 312///; 313/// Note the following:; 314/// - The optional ""query"" token is to be interpreted by the remote server.; 315/// - Wildcards may be supported in URLs, depending on the protocol plugin and; 316/// the remote server.; 317/// - \p http or \p https URLs can contain a query identifier without; 318/// \p tree_name, but generally URLs can not be written with them because of; 319/// ambiguity with the wildcard character. (Also see the documentation for; 320/// TChain::AddFile, which does not support wildcards but allows the URL name; 321/// to contain a query).; 322/// - The rules for tagging the name of the tree in the file are the same as; 323/// in the format above.; 324///; 325/// <h4>Details of the nentries parameter</h4>; 326/// Depending on the value of the parameter, the number of entries in the file; 327/// is retrieved differently:; 328/// - If <tt>nentries <= 0</tt>, the file is connected and the tree header read; 329/// in memory to get the number of entries.; 330/// - If <tt>nentries > 0</tt>, the file is not connected, \p nentries is; 331/// assumed to be the number of entries in the file. In this case, no check is; 332/// made that th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TChain_8cxx_source.html:11205,plugin,plugin,11205,doc/master/TChain_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TChain_8cxx_source.html,1,['plugin'],['plugin']
Modifiability,"ootBrowser.h. Public Types; enum  EInsertPosition { kLeft; , kRight; , kBottom; };  ; enum  ENewBrowserMessages { ;   kBrowse = 11011; , kOpenFile; , kClone; , kHelpAbout; , ;   kHelpOnBrowser; , kHelpOnCanvas; , kHelpOnMenus; , kHelpOnGraphicsEd; , ;   kHelpOnObjects; , kHelpOnPS; , kHelpOnRemote; , kNewEditor; , ;   kNewCanvas; , kNewHtml; , kExecPluginMacro; , kExecPluginCmd; , ;   kCloseTab; , kCloseWindow; , kQuitRoot. };  ;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TRootBrowser (TBrowser *b, const char *name, Int_t x, Int_t y, UInt_t width, UInt_t height, Option_t *opt="""", Bool_t initshow=kTRUE);  Create browser with a specified width and height and at position x, y. ;  ;  TRootBrowser (TBrowser *b=nullptr, const char *name=""ROOT Browser"", UInt_t width=800, UInt_t height=500, Option_t *opt="""", Bool_t initshow=kTRUE);  Create browser with a specified widt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootBrowser.html:2794,inherit,inherited,2794,doc/master/classTRootBrowser.html,https://root.cern,https://root.cern/doc/master/classTRootBrowser.html,1,['inherit'],['inherited']
Modifiability,"oot[] li->SetLineColor(color); The argument color is a color number. The colors are described in “Color and Color Palettes”; The line style may be set by a method call. What is said here applies to all objects deriving from TAttLine, and there are many (histograms, plots). We will take an example that may be transposed to other types. Suppose “li” is a TLine object. The line style is set with:; root[] li->SetLineStyle(style); The argument style is one of: 1=solid, 2=dash, 3=dot, 4=dash-dot.; The line width may be set by a method call. What is said here applies to all objects deriving from TAttLine, and there are many (histograms, plots). We will take an example that may be transposed to other types. Suppose “li” is a TLine object. The line width is set with:; root[] li->SetLineWidth(width); The width is the width expressed in pixel units.; The user interface for changing the line color, line width and style looks like shown in this picture. It takes place in the editor frame anytime the selected object inherits the class TAttLine.; 9.6.3 Fill Attributes; Almost all graphics classes have a fill area somewhere. These classes have to deal with fill attributes. This is done by using secondary inheritance of the class TAttFill. Fill color may be set by a method call. What is said here applies to all objects deriving from TAttFill, and there are many (histograms, plots). We will take an example that may be transposed to other types. Suppose “h” is a TH1F (1 dim histogram) object. The histogram fill color is set with:; root[] h->SetFillColor(color); The color is a color number. The colors are described in “Color and color palettes”; Fill style may be set by a method call. What is said here applies to all objects deriving from TAttFill, and there are many (histograms, plots). We will take an example that may be transposed to other types. Suppose “h” is a TH1F (1 dim histogram) object. The histogram fill style is set with:; root[] h->SetFillStyle(style); The convention for s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:359228,inherit,inherits,359228,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['inherit'],['inherits']
Modifiability,"opPrivate flag to signal that the iterator has finished.; TGeoIteratorPlugin*fPluginUser iterator plugin; Bool_tfPluginAutoexecPlugin automatically executed during next(); TGeoVolume*fTopTop volume of the iterated branch; TStringfTopNameUser name for top; Int_tfTypeType of iteration. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoIterator(TGeoVolume* top); Geometry iterator for a branch starting with a TOP node. TGeoIterator(const TGeoIterator& iter); Copy ctor. ~TGeoIterator(); Destructor. TGeoIterator & operator=(const TGeoIterator& iter); Assignment. TGeoNode * Next(); Returns next node. TGeoNode * operator()(); Returns next node. const TGeoMatrix * GetCurrentMatrix() const; Returns global matrix for current node. TGeoNode * GetNode(Int_t level) const; Returns current node at a given level. void GetPath(TString& path) const; Returns the path for the current node. void IncreaseArray(); Increase by 30 the size of the array. void Reset(TGeoVolume* top = 0); Resets the iterator for volume TOP. void SetTopName(const char* name); Set the top name for path. void Skip(); Stop iterating the current branch. The iteration of the next node will; behave as if the branch starting from the current node (included) is not existing. void SetUserPlugin(TGeoIteratorPlugin* plugin); Set a plugin. Int_t GetIndex(); {return 0;}. TGeoIterator(); { }. Int_t GetLevel() const; {return fLevel;}. * GetUserPlugin() const; {return fPlugin;}. TGeoVolume * GetTopVolume() const; {return fTop;}. Int_t GetType() const; {return fType;}. void SetPluginAutoexec(Bool_t mode); {fPluginAutoexec = mode;}. void SetType(Int_t type); {fType = type;}. » Author: Andrei Gheata 24/10/01 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/geom:$Id$ » Last generated: 2015-06-02 16:01; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGeoIterator.html:5714,plugin,plugin,5714,root/html604/TGeoIterator.html,https://root.cern,https://root.cern/root/html604/TGeoIterator.html,4,['plugin'],['plugin']
Modifiability,"opPrivate flag to signal that the iterator has finished.; TGeoIteratorPlugin*fPluginUser iterator plugin; Bool_tfPluginAutoexecPlugin automatically executed during next(); TGeoVolume*fTopTop volume of the iterated branch; TStringfTopNameUser name for top; Int_tfTypeType of iteration. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoIterator(TGeoVolume* top); Geometry iterator for a branch starting with a TOP node. TGeoIterator(const TGeoIterator& iter); Copy ctor. ~TGeoIterator(); Destructor. TGeoIterator & operator=(const TGeoIterator& iter); Assignment. TGeoNode * Next(); Returns next node. TGeoNode * operator()(); Returns next node. const TGeoMatrix * GetCurrentMatrix() const; Returns global matrix for current node. TGeoNode * GetNode(Int_t level) const; Returns current node at a given level. void GetPath(TString& path) const; Returns the path for the current node. void IncreaseArray(); Increase by 30 the size of the array. void Reset(TGeoVolume* top = 0); Resets the iterator for volume TOP. void SetTopName(const char* name); Set the top name for path. void Skip(); Stop iterating the current branch. The iteration of the next node will; behave as if the branch starting from the current node (included) is not existing. void SetUserPlugin(TGeoIteratorPlugin* plugin); Set a plugin. Int_t GetIndex(); {return 0;}. TGeoIterator(); { }. Int_t GetLevel() const; {return fLevel;}. * GetUserPlugin() const; {return fPlugin;}. TGeoVolume * GetTopVolume() const; {return fTop;}. Int_t GetType() const; {return fType;}. void SetPluginAutoexec(Bool_t mode); {fPluginAutoexec = mode;}. void SetType(Int_t type); {fType = type;}. » Author: Andrei Gheata 24/10/01 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/geom:$Id$ » Last generated: 2015-06-30 15:01; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoIterator.html:5714,plugin,plugin,5714,root/html602/TGeoIterator.html,https://root.cern,https://root.cern/root/html602/TGeoIterator.html,4,['plugin'],['plugin']
Modifiability,"opagation mode; Bool_tRooResolutionModel::_ownBasisFlag indicating ownership of _basis ; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title; RooRealProxymean; RooRealProxymsf; RooRealProxysigma; RooRealProxyssf; RooRealProxyRooResolutionModel::xDependent/convolution variable.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooGaussModel.html:41758,config,configuration,41758,root/html530/RooGaussModel.html,https://root.cern,https://root.cern/root/html530/RooGaussModel.html,2,"['config', 'variab']","['configuration', 'variable']"
Modifiability,"opagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; RooRefArrayRooAbsArg::_proxyListlist of proxies; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; map<string,string>RooAbsArg::_stringAttribString attributes; TIterator*_threshIter! do not persist; TSortedList_threshList; Bool_tRooAbsCategory::_treeVar! do not persist; TIterator*RooAbsCategory::_typeIter!; TObjArrayRooAbsCategory::_typesArray of allowed values; RooCatTypeRooAbsCategory::_valueCurrent value; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooThresholdCategory(const char* name, const char* title, RooAbsReal& inputVar, const char* defCatName = ""Default"", Int_t defCatIdx = 0); Constructor with input function to be mapped and name and index of default; output state of unmapped values. RooThresholdCategory(const RooThresholdCategory& other, const char* name = 0); Copy constructor. ~RooThresholdCategory(); Destructor. Bool_t addThreshold(Double_t upperLimit, const char* catName, Int_t catIdx = -99999); Insert threshold at value upperLimit. All values below upper limit (and above any lower; thresholds, if any) will be mapped to a state name 'catName' with index 'catIdx'. RooCatType evaluate() const; Calculate and return the value of the mapping function. void writeToStream(ostream& os, Bool_t compact) const; Write object contents to given stream. void printMultiline(ostream& os, Int_t content, Bool_t verbose = kFALSE, TString indent = """") const; Print info about this threshold",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooThresholdCategory.html:24141,Inherit,Inheritance,24141,root/html602/RooThresholdCategory.html,https://root.cern,https://root.cern/root/html602/RooThresholdCategory.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Attributes; bool _disableCache = false;  Flag to run object in passthrough (= non-caching mode) ;  . Friends; class PdfCacheElem;  . Additional Inherited Members;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Static Protected Attributes inherited from RooAbsPdf; static TString _normRangeOverride;  ; static Int_t _verboseEval = 0;  ;  Static Protected Attributes inherited from RooAbsReal; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #incl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsCachedPdf.html:75591,inherit,inherited,75591,doc/master/classRooAbsCachedPdf.html,https://root.cern,https://root.cern/doc/master/classRooAbsCachedPdf.html,2,['inherit'],['inherited']
Modifiability,"operModeDirty state propagation mode; TString_options; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; map<pair<string,int>,BoxInfo*>_rangeBoxInfo; Double_tRooAbsPdf::_rawValue; vector<Double_t>_rho; TMatrixD*_rotMat; Bool_t_rotate; vector<Int_t>_sIdcs; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; vector<Double_t>_sigma; Double_t_sigmaAvgR; TVectorD*_sigmaR; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; Double_t_sqrt2pi; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; TIterator*_varItr! do not persist; RooListProxy_varList; vector<string>_varName; Bool_t_verbose; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; map<Int_t,Double_t>_wMap; vector<ve",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooNDKeysPdf.html:41121,config,configuration,41121,root/html526/RooNDKeysPdf.html,https://root.cern,https://root.cern/root/html526/RooNDKeysPdf.html,2,['config'],['configuration']
Modifiability,"operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TMVA::IMethod&TMVA::IMethod::operator=(const TMVA::IMethod&); virtual map<TString,Double_t>TMVA::MethodBase::OptimizeTuningParameters(TString fomType = ""ROCIntegral"", TString fitType = ""FitGA""); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTMVA::Configurable::ParseOptions(); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual voidTMVA::MethodBase::PrintHelpMessage() const; voidTMVA::Configurable::PrintOptions() const; voidTMVA::MethodBase::ProcessSetup(); virtual Int_tTObject::Read(const char* name); TMVA::PDEFoam*ReadClonedFoamFromFile(TFile*, const TString&); voidReadFoamsFromFile(); voidTMVA::Configurable::ReadOptionsFromStream(istream& istr); voidTMVA::Configurable::ReadOptionsFromXML(void* node); voidTMVA::MethodBase::ReadStateFromFile(); voidTMVA::MethodBase::ReadStateFromStream(istream& tf); voidTMVA::MethodBase::ReadStateFromStream(TFile& rf); voidTMVA::MethodBase::ReadStateFromXMLString(const char* xmlstr); virtual voidReadWeightsFromStream(istream& i); virtual voidReadWeightsFromXML(void* wghtnode); virtual voidTObject::RecursiveRemove(TObject* obj); voidTMVA::MethodBase::RerouteTransformationHandler(TMVA::TransformationHandler* fTargetTransformation); virtual voidReset(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual voidTMVA::MethodBase::SetAnalysisType(TMVA::Types::EAnalysisType type); voidTMVA::MethodBase::SetBaseDir(TDirectory* methodDir); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidTMVA::Configurable::SetConfigDescription(const char* d); vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodPDEFoam.html:10420,Config,Configurable,10420,root/html532/TMVA__MethodPDEFoam.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodPDEFoam.html,2,['Config'],['Configurable']
Modifiability,"operator*=(double val); voidoperator*=(const TMatrixTFlat_const<double>& f); voidoperator+=(double val); voidoperator+=(const TMatrixTFlat_const<double>& f); voidoperator=(double val); voidoperator=(const TMatrixTFlat_const<double>& f); TMatrixTFlat<double>&operator=(const TMatrixTFlat<double>& f); voidoperator=(const TVectorT<double>& vec); const double&operator[](Int_t i) const; double&operator[](Int_t i); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); TMatrixTFlat<double>(); TMatrixTFlat<double>(TMatrixT<double>& matrix); TMatrixTFlat<double>(TMatrixTSym<double>& matrix); TMatrixTFlat<double>(const TMatrixTFlat<double>& mf). Data Members; protected:. TMatrixTBase<double>*TMatrixTFlat_const<double>::fMatrixthe matrix I am the diagonal of; Int_tTMatrixTFlat_const<double>::fNelems; const double*TMatrixTFlat_const<double>::fPtrpointer to the a[0,0]. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void TMatrixTFlat<Element> operator=(Element val); Assign val to every element of the matrix. void TMatrixTFlat<Element> operator+=(Element val); Add val to every element of the matrix. void TMatrixTFlat<Element> operator*=(Element val); Multiply every element of the matrix with val. void TMatrixTFlat<Element> operator=(const TMatrixTFlat_const<Element> &mf); Assignment operator. void TMatrixTFlat<Element> operator=(const TVectorT<Element> &vec); Assign a vector to the matrix. The matrix is traversed row-wise. void TMatrixTFlat<Element> operator+=(const TMatrixTFlat_const<Element> &mf); Add to every element of the matrix the corresponding element of matrix mf. void TMatrixTFlat<Element> operator*=(const TMatrixTFlat_const<Element> &mf); Multiply every element of the matrix with the corresponding element of diagonal mf. TElementActionT& operator=(const TElementActionT<Element> &); {return *this;}. const Element * GetPtr() const; { retur",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMatrixTFlat_double_.html:2078,Inherit,Inheritance,2078,root/html602/TMatrixTFlat_double_.html,https://root.cern,https://root.cern/root/html602/TMatrixTFlat_double_.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"operator-=(const TComplex& c); TComplexoperator/(const TComplex& c) const; TComplexoperator/(Double_t c) const; TComplexoperator/=(const TComplex& c); TComplex&operator=(const TComplex&); static TComplexPower(const TComplex& x, const TComplex& y); static TComplexPower(const TComplex& x, Double_t y); static TComplexPower(Double_t x, const TComplex& y); static TComplexPower(const TComplex& x, Int_t y); static TComplexRange(const TComplex& lb, const TComplex& ub, const TComplex& c); Double_tRe() const; Double_tRho() const; Double_tRho2() const; virtual voidShowMembers(TMemberInspector& insp); static TComplexSin(const TComplex& c); static TComplexSinH(const TComplex& c); static TComplexSqrt(const TComplex& c); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); static TComplexTan(const TComplex& c); static TComplexTanH(const TComplex& c); Double_tTheta() const. Data Members; protected:. Double_tfImimaginary part; Double_tfRereal part. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TComplex(Double_t re, Double_t im = 0, Bool_t polar = kFALSE); Standard constructor. TComplex(); ctors and dtors. {}. TComplex(Double_t re, Double_t im = 0, Bool_t polar = kFALSE). virtual ~TComplex(); {}. TComplex I(); constants. {return TComplex(0,1);}. TComplex One(); {return TComplex(1,0);}. Double_t Re() const; getters and setters. {return fRe;}. Double_t Im() const; {return fIm;}. Double_t Rho() const; {return TMath::Sqrt(fRe*fRe+fIm*fIm);}. Double_t Rho2() const; {return fRe*fRe+fIm*fIm;}. Double_t Theta() const; {return (fIm||fRe)?TMath::ATan2(fIm,fRe):0;}. TComplex operator()(Double_t x, Double_t y, Bool_t polar = kFALSE). operator Double_t() const; Convertors. {return fRe;}. operator Float_t() const; {return static_cast<Float_t>(fRe);}. operator Int_t() const; {return static_cast<Int_t>(fRe);}. TComplex Sqrt(const TComplex& c); TMath:: extensions. {return TComplex(TMath::Sqrt(c.Rho()),0.5*c.Theta(),kTRUE);}. TComplex Exp(cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TComplex.html:2868,Inherit,Inheritance,2868,root/html532/TComplex.html,https://root.cern,https://root.cern/root/html532/TComplex.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"operly initialized and is usable.Definition TMethodCall.cxx:376; TMethodCall::InitWithPrototypevoid InitWithPrototype(TClass *cl, const char *method, const char *proto, Bool_t objectIsConst=kFALSE, ROOT::EFunctionMatchMode mode=ROOT::kConversionMatch)Initialize the method invocation environment.Definition TMethodCall.cxx:342; TMethodCall::SetParamvoid SetParam(Long_t l)Add a long method parameter.Definition TMethodCall.cxx:606; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::IsEqualvirtual Bool_t IsEqual(const TObject *obj) constDefault equal comparison (objects are equal if they have the same address in memory).Definition TObject.cxx:570; TObject::ClassNamevirtual const char * ClassName() constReturns name of class to which the object belongs.Definition TObject.cxx:213; TObject::Warningvirtual void Warning(const char *method, const char *msgfmt,...) constIssue warning message.Definition TObject.cxx:979; TObject::InheritsFromvirtual Bool_t InheritsFrom(const char *classname) constReturns kTRUE if object inherits from class ""classname"".Definition TObject.cxx:530; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TObject::IsAvirtual TClass * IsA() constDefinition TObject.h:243; TSeqCollectionSequenceable collection abstract base class.Definition TSeqCollection.h:28; TSeqCollection::LastIndexInt_t LastIndex() constDefinition TSeqCollection.h:55; TSeqCollection::IndexOfvirtual Int_t IndexOf(const TObject *obj) constReturn index of object in collection.Definition TSeqCollection.cxx:30; TSeqCollection::Classstatic TClass * Class(); TSeqCollection::IsATClass * IsA() const overrideDefinition TSeqCollection.h:67; TSeqCollection::Lastvirtual TObject * Last() const =0; TSeqCollection::QSortstatic void QSort(TObject **a, Int_t first, Int_t last)Sort array of TObject pointers using a quicksort algorithm.Definition TSeqCollection.cxx:70; TSeqCollection::MergeLong64_t Merge(TCollect",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSeqCollection_8cxx_source.html:12599,inherit,inherits,12599,doc/master/TSeqCollection_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSeqCollection_8cxx_source.html,1,['inherit'],['inherits']
Modifiability,"operties and checks. Beside reproducing the true distribution, ; bear remarkable properties:. Each -distribution is properly normalized:. (4). For any event:. (5). That is to say that, summing up the ; ; , one recovers the data sample distribution in , and summing up the number of events entering in a ; for a given species, one recovers the yield of the species, as provided by the fit. The property 4 is implemented in the TSPlot class as a check. the sum of the statistical uncertainties per bin. (6). reproduces the statistical uncertainty on the yield , as provided by the fit: ; .; Because of that and since the determination of the yields is optimal; when obtained using a Likelihood fit, one can conclude that the; technique is itself an optimal method to reconstruct distributions of control variables. Different steps followed by TSPlot. A maximum Likelihood fit is performed to obtain the yields of the various species. ; The fit relies on discriminating variables  uncorrelated with a control variable :; the later is therefore totally absent from the fit. . The weights are calculated using Eq. (2) where the covariance matrix is taken from Minuit. Histograms of  are filled by weighting the events with . . Error bars per bin are given by Eq. (6). . The ; reproduce the true distributions of the species in the control variable , within the above defined statistical uncertainties. Illustrations. To illustrate the technique, one considers an example derived from the analysis where . have been first used (charmless B decays). One is dealing with a data; sample in which two species are present: the first is termed signal and; the second background. A maximum Likelihood fit is performed to obtain; the two yields and . The fit relies on two discriminating variables collectively denoted  which are chosen within three possible variables denoted , and .; The variable which is not incorporated in  is used as the control variable . The six distributions of the three variables are as",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSPlot.html:4480,variab,variables,4480,root/html528/TSPlot.html,https://root.cern,https://root.cern/root/html528/TSPlot.html,12,['variab'],"['variable', 'variables']"
Modifiability,"operties::setInSharedList(); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. RooLinkedList_altRangesOptional alternative ranges ; Int_tRooSharedProperties::_inSharedList! Is in shared list; Int_tRooSharedProperties::_refCount! Use count ; TUUIDRooSharedProperties::_uuidUnique object ID. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooCategorySharedProperties(); Constructor. RooCategorySharedProperties(const char* uuidstr); Constructor with unique-id string. RooCategorySharedProperties(const RooCategorySharedProperties& other). ~RooCategorySharedProperties(); Destructor. RooSharedProperties* clone(); { return new RooCategorySharedProperties(*this) ; }. » Last changed: Tue Mar 10 17:15:54 2015 » Last generated: 2015-03-10 17:15; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCategorySharedProperties.html:6186,Inherit,Inheritance,6186,root/html534/RooCategorySharedProperties.html,https://root.cern,https://root.cern/root/html534/RooCategorySharedProperties.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"opic/RooFit::MsgLevel combination. Int_t activeStream(const RooAbsArg* self, RooFit::MsgTopic facility, RooFit::MsgLevel level); Find appropriate logging stream for message from given object with given topic and message level. Int_t activeStream(const TObject* self, RooFit::MsgTopic facility, RooFit::MsgLevel level); Find appropriate logging stream for message from given object with given topic and message level. ostream& log(const RooAbsArg* self, RooFit::MsgLevel level, RooFit::MsgTopic facility, Bool_t forceSkipPrefix = kFALSE); Log error message associated with RooAbsArg object self at given level and topic. If skipPrefix; is true the standard RooMsgService prefix is not added. ostream& log(const TObject* self, RooFit::MsgLevel level, RooFit::MsgTopic facility, Bool_t forceSkipPrefix = kFALSE); Log error message associated with TObject object self at given level and topic. If skipPrefix; is true the standard RooMsgService prefix is not added. void Print(Option_t* options = 0) const; Print configuration of message service. If ""v"" option is given also; inactive streams are listed. StreamConfig& getStream(Int_t id); { return _streams[id] ; }. Int_t numStreams() const; { return _streams.size() ; }. void reset(); { cleanup() ; }. void setGlobalKillBelow(RooFit::MsgLevel level); { _globMinLevel = level ; }. RooFit::MsgLevel globalKillBelow() const; { return _globMinLevel ; }. void showPid(Bool_t flag); { _showPid = flag ; }. Bool_t silentMode() const; Print level support for RooFit-related messages that are not routed through RooMsgService (such as Minuit printouts). { return _silentMode ; }. void setSilentMode(Bool_t flag); { _silentMode = flag ; }. Int_t errorCount() const; { return _errorCount ; }. void clearErrorCount(); { _errorCount = 0 ; }. Int_t& debugCode(); { return _debugCode ; }. RooMsgService(); Private ctor -- singleton class. » Last changed: Fri Dec 10 17:05:04 2010 » Last generated: 2010-12-10 17:05; This page has been automatically generated. For comme",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooMsgService.html:11629,config,configuration,11629,root/html528/RooMsgService.html,https://root.cern,https://root.cern/root/html528/RooMsgService.html,1,['config'],['configuration']
Modifiability,"opic/RooFit::MsgLevel combination. Int_t activeStream(const RooAbsArg* self, RooFit::MsgTopic facility, RooFit::MsgLevel level); Find appropriate logging stream for message from given object with given topic and message level. Int_t activeStream(const TObject* self, RooFit::MsgTopic facility, RooFit::MsgLevel level); Find appropriate logging stream for message from given object with given topic and message level. ostream& log(const RooAbsArg* self, RooFit::MsgLevel level, RooFit::MsgTopic facility, Bool_t forceSkipPrefix = kFALSE); Log error message associated with RooAbsArg object self at given level and topic. If skipPrefix; is true the standard RooMsgService prefix is not added. ostream& log(const TObject* self, RooFit::MsgLevel level, RooFit::MsgTopic facility, Bool_t forceSkipPrefix = kFALSE); Log error message associated with TObject object self at given level and topic. If skipPrefix; is true the standard RooMsgService prefix is not added. void Print(Option_t* options = 0) const; Print configuration of message service. If ""v"" option is given also; inactive streams are listed. StreamConfig& getStream(Int_t id); { return _streams[id] ; }. Int_t numStreams() const; { return _streams.size() ; }. void reset(); { cleanup() ; }. void setGlobalKillBelow(RooFit::MsgLevel level); { _globMinLevel = level ; }. RooFit::MsgLevel globalKillBelow() const; { return _globMinLevel ; }. void showPid(Bool_t flag); { _showPid = flag ; }. Bool_t silentMode() const; Print level support for RooFit-related messages that are not routed through RooMsgService (such as Minuit printouts). { return _silentMode ; }. void setSilentMode(Bool_t flag); { _silentMode = flag ; }. Int_t errorCount() const; { return _errorCount ; }. void clearErrorCount(); { _errorCount = 0 ; }. Int_t& debugCode(); { return _debugCode ; }. RooMsgService(); Private ctor -- singleton class. » Last changed: Mon Jul 4 15:23:22 2011 » Last generated: 2011-07-04 15:23; This page has been automatically generated. For commen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooMsgService.html:11698,config,configuration,11698,root/html530/RooMsgService.html,https://root.cern,https://root.cern/root/html530/RooMsgService.html,1,['config'],['configuration']
