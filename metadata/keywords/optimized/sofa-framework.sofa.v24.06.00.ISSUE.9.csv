quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Security,lvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.UncheckedReturn.html) | [modernize-replace-auto-ptr](https://clang.llvm.org/extra/clang-tidy/checks/modernize-replace-auto-ptr.html) |; | [clang-analyzer-security.insecureAPI.getpw](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.getpw.html) | [modernize-replace-random-shuffle](https://clang.llvm.org/extra/clang-tidy/checks/modernize-replace-random-shuffle.html) |; | [clang-analyzer-security.insecureAPI.gets](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.gets.html) | [modernize-return-braced-init-list](https://clang.llvm.org/extra/clang-tidy/checks/modernize-return-braced-init-list.html) |; | [clang-analyzer-security.insecureAPI.mkstemp](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.mkstemp.html) | [modernize-shrink-to-fit](https://clang.llvm.org/extra/clang-tidy/checks/modernize-shrink-to-fit.html) |; | [clang-analyzer-security.insecureAPI.mktemp](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.mktemp.html) | [modernize-unary-static-assert](https://clang.llvm.org/extra/clang-tidy/checks/modernize-unary-static-assert.html) |; | [clang-analyzer-security.insecureAPI.rand](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.rand.html) | [modernize-use-auto](https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-auto.html) |; | [clang-analyzer-security.insecureAPI.strcpy](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.strcpy.html) | [modernize-use-bool-literals](https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-bool-literals.html) |; | [clang-analyzer-security.insecureAPI.vfork](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.vfork.html) | [modernize-use-default-member-init](https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-default-me,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:17077,secur,security,17077,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['secur'],['security']
Security,lyzer-optin.mpi.MPI-Checker.html) | [modernize-make-unique](https://clang.llvm.org/extra/clang-tidy/checks/modernize-make-unique.html) |; | [clang-analyzer-optin.performance.Padding](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.performance.Padding.html) | [modernize-pass-by-value](https://clang.llvm.org/extra/clang-tidy/checks/modernize-pass-by-value.html) |; | [clang-analyzer-optin.portability.UnixAPI](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.portability.UnixAPI.html) | [modernize-raw-string-literal](https://clang.llvm.org/extra/clang-tidy/checks/modernize-raw-string-literal.html) |; | [clang-analyzer-security.FloatLoopCounter](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.FloatLoopCounter.html) | [modernize-redundant-void-arg](https://clang.llvm.org/extra/clang-tidy/checks/modernize-redundant-void-arg.html) |; | [clang-analyzer-security.insecureAPI.UncheckedReturn](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.UncheckedReturn.html) | [modernize-replace-auto-ptr](https://clang.llvm.org/extra/clang-tidy/checks/modernize-replace-auto-ptr.html) |; | [clang-analyzer-security.insecureAPI.getpw](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.getpw.html) | [modernize-replace-random-shuffle](https://clang.llvm.org/extra/clang-tidy/checks/modernize-replace-random-shuffle.html) |; | [clang-analyzer-security.insecureAPI.gets](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.gets.html) | [modernize-return-braced-init-list](https://clang.llvm.org/extra/clang-tidy/checks/modernize-return-braced-init-list.html) |; | [clang-analyzer-security.insecureAPI.mkstemp](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.mkstemp.html) | [modernize-shrink-to-fit](https://clang.llvm.org/extra/clang-tidy/checks/modernize-shrink-to-fit.html) |; | [clang-analyzer-security.insecureAPI.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:16115,secur,security,16115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['secur'],['security']
Security,"method `computePrincipalStress `and `computePrincipalStrain` where used inside loop such as this:; ```; type::vector<TriangleInformation>& triangleInf = *(triangleInfo.beginEdit());; for (unsigned int i = 0; i < nbTriangles; ++i); computePrincipalStress(i, triangleInf[i].stress);; triangleInfo.endEdit();; ```; but computePrincipalStress is accessing triangleInfo in write mode as well inside its code. (same for computePrincipalStrain); It was not blocking because writeOnlyAccessor were used and therefore no updateIfDirty was call but this design is dangerous. . Change to Use only one accessor and pass ref to one element to the method. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3412:342,access,accessing,342,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3412,4,"['Certificate', 'access', 'certificate']","['Certificate', 'accessing', 'accessor', 'certificate-of-origin-dco']"
Security,mework/Versions/A/IOMobileFramebuffer; 0x7fff29c0f000 - 0x7fff29ce1fff com.apple.framework.CoreWLAN (16.0 - 1657) <35927D28-3324-3CAB-9255-276A7022EADC> /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN; 0x7fff29ce2000 - 0x7fff29ee1fff com.apple.CoreUtils (6.5 - 650.6) <184C48A4-7F66-395B-81DB-DAA1641383CF> /System/Library/PrivateFrameworks/CoreUtils.framework/Versions/A/CoreUtils; 0x7fff29ee2000 - 0x7fff29f04fff com.apple.MobileKeyBag (2.0 - 1.0) <0F83FED4-709A-37A0-9E04-EFFD71CB1272> /System/Library/PrivateFrameworks/MobileKeyBag.framework/Versions/A/MobileKeyBag; 0x7fff29f05000 - 0x7fff29f15fff com.apple.AssertionServices (1.0 - 505.80.1) <A00B802D-7BB8-3F6B-A79D-E9697F7D0ABB> /System/Library/PrivateFrameworks/AssertionServices.framework/Versions/A/AssertionServices; 0x7fff29f16000 - 0x7fff29fa2fff com.apple.securityfoundation (6.0 - 55240.40.4) <72AC63B1-0B72-394F-97E8-BA9B114DD0A9> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation; 0x7fff29fa3000 - 0x7fff29facfff com.apple.coreservices.BackgroundTaskManagement (1.0 - 104) <EC15118E-62BD-3C24-A880-3B9B74318B0B> /System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement; 0x7fff29fad000 - 0x7fff29fb1fff com.apple.xpc.ServiceManagement (1.0 - 1) <FD031028-B702-3909-B2AF-3916404DD4A8> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement; 0x7fff29fb2000 - 0x7fff29fb4fff libquarantine.dylib (119.40.2) <40D35D75-524B-3DA6-8159-E7E0FA66F5BC> /usr/lib/system/libquarantine.dylib; 0x7fff29fb5000 - 0x7fff29fc0fff libCheckFix.dylib (31) <74E17BB2-1A3C-3574-92DD-63ABE39E3FF9> /usr/lib/libCheckFix.dylib; 0x7fff29fc1000 - 0x7fff29fd8fff libcoretls.dylib (169) <B33BEF87-3275-356D-9815-D0E94122D2EB> /usr/lib/libcoretls.dylib; 0x7fff29fd9000 - 0x7fff29fe9fff libbsm.0.dylib (68.40.1) <D71EF121-D4B0-306E-9843-9FAFD558E3A4> /usr/lib/libbsm.0.dylib; 0x7fff29fea000 - 0x7fff2a033fff libmecab.dylib (929.1.1) <1F,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:37521,Secur,SecurityFoundation,37521,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['Secur'],['SecurityFoundation']
Security,"miniFlowVR, an extlib of Sofa, is used for ; - managing a file format for DistanceGrid (component of plugin SofaDistanceGrid); - as a dependency for meshconv, a commandline utility for meshes and used mainly to create the previous file format for DistanceGrid. So as it seems all was related to DistanceGrid:; - miniFlowVR was moved into SofaDistanceGrid (and thus depolluting the main tree of Sofa with the extlib thing); - as a small consequence, move meshconv into SofaDistanceGrid. It is deemed OK as:; - it seems not a lof of people uses meshconv as it is (I remember fixing the compilation ages ago and nobody said anything). Moreover, even its CMakefile was quite ill-formed. ; - meshconv was originally a part of FlowVR itself apparently, so it makes sense to regroup of all of these codes. Additionnally, SofaDistanceGrid was cleanup (reorganizing files like the template, cleaner CMake etc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1616:1065,Certificate,Certificate,1065,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1616,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"move all tests related to BaseMatrix into Sofa.LinearAlgebra.test, ; and create Sofa.LinearAlgera.Testing (testing toolkit related to Sofa.LinearAlgebra). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2383:318,Certificate,Certificate,318,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2383,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"n 16/01/18) it crash at runtime. > [INFO] [runSofa] No plugin will be automatically loaded; > - No custom list found at C:\sofaBuild\bin/bin/plugin_list.conf; > - No default list found at C:\sofaBuild\bin/bin/plugin_list.conf.default; > The constructor with a QGLFormat is deprecated, use the regular contructor instead.; > [ERROR] [FileRepository] File icons/back.png NOT FOUND in :C:\sofaBuild\bin/share/sofa/gui/runSofa/resources/:C:\sofaBuild\bin/share/sofa/gui/qt/resources/; > [ERROR] [FileRepository] File icons/home.png NOT FOUND in :C:\sofaBuild\bin/share/sofa/gui/runSofa/resources/:C:\sofaBuild\bin/share/sofa/gui/qt/resources/; > [ERROR] [BaseViewer] Could not create file 'C:/sofa/share/textures/SOFA_logo.bmp'; > Valid extensions: dds; > ; > [ERROR] [Image] Could not load image with extension png. Valid extensions: dds; > [ERROR] [OglModel(VisualBody)] couldn't create an image from file textures/snakeColorMap.png; > [ERROR] [OglModel(VisualBody)] 1 textures couldn't be loaded; > [ERROR] [FileRepository] File docs/runsofa.html NOT FOUND in :C:\sofaBuild\bin/share/sofa/gui/runSofa/resources/:C:\sofaBuild\bin/share/sofa/gui/qt/resources/; > [INFO] [SceneChecker] The 'APIVersion' directive is missing in the current scene. Switching to the default APIVersion level '17.06'; > [INFO] [SceneChecker] Validating node ''.; > Activate checkers:; > - SceneCheckAPIChange; > - SceneCheckDuplicatedName; > - SceneCheckMissingRequiredPlugin; > ; > [ERROR] [FileSystem::listDirectory()] C:\sofaBuild\bin/bin: error 3: Le chemin dÆaccÞs spÚcifiÚ est introuvable.; > ; > [ERROR] [FileSystem::listDirectory()] C:\sofaBuild\bin/bin: error 3: Le chemin dÆaccÞs spÚcifiÚ est introuvable. Plus, I had many troubles compiling it. I have to uncheck PSL (require SofaPython), but when SofaPython is checked there is many link problems. Finally, I both unchecked them. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/561:1353,Validat,Validating,1353,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/561,1,['Validat'],['Validating']
Security,"n"" />; <MechanicalObject name=""fp"" free_position=""@p.position"" />; <MechanicalObject name=""fv"" free_velocity=""@p.position"" />; <MechanicalObject name=""rp"" rest_position=""@p.position"" />; <MechanicalObject name=""rep"" reset_position=""@p.position"" />; <MechanicalObject name=""rev"" reset_velocity=""@p.position"" />; <MechanicalObject name=""dx"" derivX=""@p.position"" />; </Node>; ```; Before PR:; ```; [WARNING] [MechanicalObject(p)] Writing to State vector position(V_COORD) with incorrect size : 4 != 1; [WARNING] [MechanicalObject(v)] Writing to State vector velocity(V_DERIV) with incorrect size : 4 != 1; [WARNING] [MechanicalObject(f)] Writing to State vector position(V_COORD) with incorrect size : 4 != 1; [WARNING] [MechanicalObject(rp)] Accessing State vector restPosition(V_COORD) with incorrect size : 4 != 1; [WARNING] [MechanicalObject(rp)] Accessing State vector restPosition(V_COORD) with incorrect size : 4 != 1; [WARNING] [MechanicalObject(rep)] Writing to State vector resetPosition(V_COORD) with incorrect size : 4 != 1; [WARNING] [MechanicalObject(fp)] Writing to State vector freePosition(V_COORD) with incorrect size : 4 != 1; [WARNING] [MechanicalObject(fv)] Writing to State vector freeVelocity(V_DERIV) with incorrect size : 4 != 1; [WARNING] [MechanicalObject(rep)] Accessing State vector resetPosition(V_COORD) with incorrect size : 4 != 1; [WARNING] [MechanicalObject(rev)] Accessing State vector resetVelocity(V_DERIV) with incorrect size : 4 != 1; ```; After PR:; ```; [WARNING] [MechanicalObject(f)] One or more of the state vectors passed as argument don't match the size of the others : position(size 4) force(size 3) ; ```. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compati",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/406:1243,Access,Accessing,1243,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/406,4,['Access'],['Accessing']
Security,"n, perl and C++). If you change the behavior of the default serialization mechanism all of them will stop working and required to be updated. This is a very, very, very nasty thing to impose to other users of Sofa. A PR doing has no changes to be accepted. . Actually tests is part of our guard line because they validates the API compatibility and allow us to detect changes that breaks it. The existing tests should be considered as validating the ""the existing"" sofa API. It was normal to have them to fail on your PR because it shows that the PR was breaking the compatibility. . I really like the idea of keeping the old serialization behavior as it is and add the other deserialization as an extra feature. This will make the whole PR transparent for users that don't want to update their code base. It thus it can be merged very quickly. . About the test: ; You are right that it would be better if we had test specific tests to validate the serialization alone.; I personally would like to have tests to validate that getValueString() return ""1 2 3"" and that getValueAsPythonString() return ""[1 2 3]"" . And also as you said having tests to validate against the real values instead of their serialization would be nice. . . About the branches:; The rule is to never work directly on the sofa-framework repository. There is no reason to do so (if you really want to make two PR one in anatoscope and one in sofa ... you need to to that from two branches located in the anatoscope repo). Otherwise this consume a lot of disk space on the CI servers that we have to fix manually. Now fundamentally from my experience in playing with PR and branches I think that making two PR will be very complex for you to handle. Because the PR you issued to anatoscope and the one you issued to sofa-framework may diverge ... so it will cost you to switch from one to the other and handle the changes. . PS: I'm not very good to explains things in english so if you want we can continue in by email in french.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/330#issuecomment-315028626:1433,validat,validate,1433,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/330#issuecomment-315028626,2,['validat'],['validate']
Security,"nalForceField`; - `TetrahedralCorotationalFEMForceField`; - `TetrahedronFEMForceField`. The 3 components have similarities (even duplicated code), but don't share anything. It's time for refactoring!. My focus was the refactoring of the unit tests. Before the PR, a unique class tested the 3 components using a series of `if`. I refactored the 3 classes in order to reduce the specific processing in the unit test, i.e. reduce the number of `if`. - The 3 classes now inherit from a common base class `BaseLinearElasticityFEMForceField`. I moved everything that was common (only regarding the unit test. More common code is remaining) in this class. It includes:; - A common `Data` for Young's modulus and Poisson's ratio. This way, they share type, the same default value, and the same description. Note that Young's modulus in `FastTetrahedralCorotationalForceField` and `TetrahedralCorotationalFEMForceField` was a scalar, and now it's a vector of scalars. This requires to add a common way to access the Young's modulus of the i-th element. This is also a breaking change. This allows to define a typed unit test for all 3 classes. The particularities of the classes are defined in a derived class of the unit test. To me, a great advantage, is that we identify clearly that there are unit tests for the 3 components, because there a file for each class. It was not obvious before. [ci-depends-on https://github.com/SofaDefrost/ModelOrderReduction/pull/133]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4778:1084,access,access,1084,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4778,1,['access'],['access']
Security,"ne is used for the benchmarks on 1000 time steps. The timer to focus on is `buildStiffness`. But be aware that this timer also includes the computation of the contributions in addition to the assembly itself. 1. The scene without modification, i.e. with `<ConstantSparsityPatternSystem template=""CompressedRowSparseMatrixd"" name=""A"" printLog=""true""/>`. ```; [INFO] [BatchGUI] 1000 iterations done in 12.3859 s ( 80.7368 FPS). LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 7 0.82 1 1.57 8.67 1.81 0.34 1.81 14.74 .......buildStiffness; ```. 2. The scene with a regular matrix assembly, i.e. with `<MatrixLinearSystem template=""CompressedRowSparseMatrixd"" name=""A"" printLog=""true""/>`. ```; [INFO] [BatchGUI] 1000 iterations done in 15.0063 s ( 66.6387 FPS). LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 7 0.69 1 4.69 6.45 4.95 0.18 4.95 33.30 .......buildStiffness; ```. 3. The scene with a regular matrix assembly, i.e. with `<MatrixLinearSystem template=""CompressedRowSparseMatrixMat3x3d"" name=""A"" printLog=""true""/>` (blocks of 3x3). ```; [INFO] [BatchGUI] 1000 iterations done in 16.765 s ( 59.648 FPS). LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 7 0.84 1 4.71 13.93 5.51 1.11 5.51 33.16 .......buildStiffness; ```. In benchmark 1, we have a x2.7 speed-up compared to benchmark 2. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4158:3069,Certificate,Certificate,3069,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4158,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,ng-tidy/checks/readability-redundant-declaration.html) |; | [google-readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-redundant-smartptr-get.html) | [readability-redundant-function-ptr-dereference](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-function-ptr-dereference.html) |; | [google-readability-todo](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-todo.html) | [readability-redundant-member-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-member-init.html) |; | [google-runtime-int](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-int.html) | [readability-redundant-smartptr-get](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-smartptr-get.html) |; | [google-runtime-member-string-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-member-string-references.html) | [readability-redundant-string-cstr](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-cstr.html) |; | [google-runtime-operator](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-operator.html) | [readability-redundant-string-init](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-string-init.html) |; | [google-runtime-references](https://clang.llvm.org/extra/clang-tidy/checks/google-runtime-references.html) | [readability-simplify-boolean-expr](https://clang.llvm.org/extra/clang-tidy/checks/readability-simplify-boolean-expr.html) |; | | [readability-static-accessed-through-instance](https://clang.llvm.org/extra/clang-tidy/checks/readability-static-accessed-through-instance.html) |; | | [readability-static-definition-in-anonymous-namespace](https://clang.llvm.org/extra/clang-tidy/checks/readability-static-definition-in-anonymous-namespace.html) |; | | [readability-uniqueptr-delete-release](https://clang.llvm.org/extra/clang-tidy/checks/readability-uniqueptr-delete-release.html) |,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:30117,access,accessed-through-instance,30117,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,2,['access'],['accessed-through-instance']
Security,"nment commits. ## issofa_python. ### New features; Add binding python to get slaves and names on baseObjects.; Add Python bindings for triangle and point topology modifiers. Example scene which show triangle refining.; Creation of Binding_BaseTopologyObject common to PointSetTopologyModifier and TriangleSetTopologyModifier.; Add a getObjects() method to python BaseContext interface. Allow selection of objects based on type and name. May be extended to include more search options later. ### Improvements; SendScriptEvent should only be applied on a specified node, not on root !; WARNING: may affect python script behavior.; Allow to get the value of a data as a string when its type is not handle by the binding.; Object and type names are now both optional when calling BaseContext_getObjects(). Moreover the search direction can now optionally be passed to BaseContext_getObjects() (default is 'Local').; Binding_Data expose fullPath read only parameter for BaseData that derive from DataFileName, which as the name suggests, returns the fullPath to the file pointed by that data. Returns None otherwise. ### Bugfixes; If the data to be gotten using the bind is a vector of type 'unknown' then the text of the data is returned as a whole.; Fix compilation and warnings with gcc.; Fix SofaPython build on linux.; Fix undefined behaviour and potential crash in Python BaseContext.getObjects() due to PyList accessed out of bounds. ; Fix a memory leak which happens whenever an object is transferred from C++ to Python. _______________________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/171:1653,access,accessed,1653,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/171,1,['access'],['accessed']
Security,"node_1 = articulation_center_node_1.addChild(""articulation_1""); articulation_node_1.addObject(; ""Articulation"",; translation=False,; rotation=True,; rotationAxis=[0, 0, 1],; articulationIndex=0,; ). articulation_center_node_2 = articulation_hierarchy_node.addChild(""center_2""); articulation_center_node_2.addObject(; ""ArticulationCenter"",; parentIndex=0,; childIndex=2,; posOnParent=[0, 0, 0],; posOnChild=[0, 0, 0],; ). articulation_node_2 = articulation_center_node_2.addChild(""articulation_2""); articulation_node_2.addObject(; ""Articulation"",; translation=False,; rotation=True,; rotationAxis=[0, 0, 1],; articulationIndex=1,; ). # place light and a camera; root.addObject(""LightManager""); root.addObject(""DirectionalLight"", direction=[0, 1, 0]); root.addObject(""InteractiveCamera"", name=""camera"", position=[0, 0, 5], lookAt=[0, 0, 0], distance=37, fieldOfView=45, zNear=0.63, zFar=55.69). if __name__ == ""__main__"":; root = Sofa.Core.Node(""myroot""); createScene(root); Sofa.Simulation.init(root); init_display(root); try:; while True:; Sofa.Simulation.animate(root, root.getDt()); Sofa.Simulation.updateVisual(root); simple_render(root); time.sleep(root.getDt()); except KeyboardInterrupt:; pass; ```. To reproduce the issue, run `python3 test_articulation.py` and `runSofa test_articulation.py`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3095:5699,Certificate,Certificate,5699,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3095,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,nt-void-arg](https://clang.llvm.org/extra/clang-tidy/checks/modernize-redundant-void-arg.html) |; | [clang-analyzer-security.insecureAPI.UncheckedReturn](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.UncheckedReturn.html) | [modernize-replace-auto-ptr](https://clang.llvm.org/extra/clang-tidy/checks/modernize-replace-auto-ptr.html) |; | [clang-analyzer-security.insecureAPI.getpw](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.getpw.html) | [modernize-replace-random-shuffle](https://clang.llvm.org/extra/clang-tidy/checks/modernize-replace-random-shuffle.html) |; | [clang-analyzer-security.insecureAPI.gets](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.gets.html) | [modernize-return-braced-init-list](https://clang.llvm.org/extra/clang-tidy/checks/modernize-return-braced-init-list.html) |; | [clang-analyzer-security.insecureAPI.mkstemp](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.mkstemp.html) | [modernize-shrink-to-fit](https://clang.llvm.org/extra/clang-tidy/checks/modernize-shrink-to-fit.html) |; | [clang-analyzer-security.insecureAPI.mktemp](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.mktemp.html) | [modernize-unary-static-assert](https://clang.llvm.org/extra/clang-tidy/checks/modernize-unary-static-assert.html) |; | [clang-analyzer-security.insecureAPI.rand](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.rand.html) | [modernize-use-auto](https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-auto.html) |; | [clang-analyzer-security.insecureAPI.strcpy](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.strcpy.html) | [modernize-use-bool-literals](https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-bool-literals.html) |; | [clang-analyzer-security.insecureAPI.vfork](https://clang.llvm.org/extra/clang-,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:16916,secur,security,16916,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['secur'],['security']
Security,"o work with especially in scene building.; - In SpringFF every spring is listed in a data list of LinearSpring. Along with this the two topologySubestIndices where here to cope for topological changes; - In StiffSpringFF, along with the inherited data from SpringFF, lied the indices lists and a single data for stiffness and damping. . In order to be as conservative as possible, I tried in this PR to only do the merge while keeping every current features enabled. This leads in a double representation of the spring list: the list `d_springs` and the tuple `d_springsIndices[0], d_springsIndices[1], d_ks, d_kd, d_lengths, d_elongationOnly, d_enabled` that needs to be kept coherent constantly through call back. This is cumbersome because we cannot have a circular dependency, and has thus been solved by implicitly defining a hierarchy between the two representation : the tuple representation is the master one, and the spring list follows it. This would be better if we could have a read only data so that the user cannot access the spring list. . The spring list is still useful for three things :; 1. the CUDA implementation (but not mandatory, removing it would require a significant refactoring); 2. the huge number of existing example scenes using SpringForceField that uses this representation in the scene; 3. the extensive use of this representation in the python bindings (especially the linearSpring that has no other purpose that this API). Other than that, it has no real superiority over the proposed parallel representation using a single vector for each spring parameter except for the fact that we don't need to keep coherency over all of the vectors... ; Although the tuple enable more versatile scene description. For example, the input indices can now come from other component while no difficult assembling is needed to build the spring list, we only need to link the data and specify one stiffness that will be generalized to all the springs. . So this is a **_first step_*",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4649#issuecomment-2252777879:2478,access,access,2478,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4649#issuecomment-2252777879,1,['access'],['access']
Security,"ocations at every step of the loops. Same benchs as ; - https://github.com/sofa-framework/sofa/pull/4132. ```; (mu=0.1); LCP : 5000 iterations done in 58.1724 s ( 85.9514 FPS); GCS before: 5000 iterations done in 83.4733 s ( 59.8994 FPS); GCS after: 5000 iterations done in 69.2669 s ( 72.1846 FPS); ```; ```; (mu=0.0); LCP : 5000 iterations done in 44.0637 s ( 113.472 FPS); GCS before: 5000 iterations done in 69.1173 s ( 72.3408 FPS); GCS after: 5000 iterations done in 53.8957 s ( 92.7719 FPS); ```. Speedup of ~20-30% but still slower than LCP (but much less though ).; But this improvement should be felt whenever the GCS is using the unbuilt method (contrary to #4132 which was specialized for LinearConstraintCorrection with wire optimization). Other bench on caduceus (5000 steps); ```; LCP; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 4 1.11 1 0 0.69 0.14 0.04 0.14 9.10 ....SolveConstraint: POSITION AND VELOCITY - SolveSystem; ```; ```; GCSunbuilt before; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 4 1.28 1 0 33.01 0.24 1.45 0.24 13.24 ....SolveConstraint: POSITION AND VELOCITY - SolveSystem; ```; ```; GCSunbuilt after; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 4 1.28 1 0 19.89 0.16 0.98 0.16 9.38 ....SolveConstraint: POSITION AND VELOCITY - SolveSystem; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4195:1527,Certificate,Certificate,1527,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4195,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"om/56633656/234046608-193dee0f-9771-4526-be96-6987aa0b87d1.png). However, my desired color map of the stress is like the following image (using node stress data):; ![VisualStress04](https://user-images.githubusercontent.com/56633656/234047053-0d382e09-243c-470b-8f49-ebbc6b756482.png); Compared to the visualization with ""_showVonMisesStressPerElement_"", this color map accords more with my intuition of the stress forces (while the feet are pressed).; Therefore, I would like to add a new option ""_showVonMisesStressPerNodeColorMap_"" to show this color map. 2) I would like to add an option ""_showGapBetweenElements_"" to activate/deactivate drawing the gap between the elements, in order to show a smooth color map:; ![VisualStress07](https://user-images.githubusercontent.com/56633656/234049502-781340eb-e323-402d-8aeb-fc4f14c0e722.png). 3) I would like to add an option ""_showForceField_"" to decide if we draw the forcefield of the current object or not. This will be useful when we have several soft tissues and we want to focus on one of the objects:; ![VisualStress08](https://user-images.githubusercontent.com/56633656/234050359-c2c27e3b-ba45-48b9-98dc-337757e25b6d.png); ![VisualStress09](https://user-images.githubusercontent.com/56633656/234050426-38c84e34-49f8-4c2c-bcea-b8d4e2acef59.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3820:1951,Certificate,Certificate,1951,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3820,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"ompile-time, and it is not possible to use runtime polymorphism. Therefore, it was not possible to uncouple the solver itself from the ordering method. To comply with the new design, I introduced a factory that can be enriched in the new Metis plugin. This factory is able to register types and use runtime polymorphism using a few C++ tricks. The only concern is that the solvers in the factory will not use the algorithms from the `BaseOrderingMethod`. Instead, they use a simple string (defined in a `BaseOrderingMethod`), and its mapping to a type. This has to be registered in the initialization of the module. I tried hard to use the intelligence of the component instead of relying on a string and a factory, but the design of Eigen is not compatible. In order to not force the users to add an ordering method in their scenes, a default one is created automatically by the linear solver. It instantiates `MetisOrderingMethod` if it can find it, otherwise it's `AMDOrderingMethod`. Here are the tasks in a future PR:. 1. Create a plugin for Metis; 2. Move `MetisOrderingMethod` into this plugin; 3. Move some unit tests in this plugin; 4. Update the regression references; 5. Update `FillReducingOrdering`; 6. Remove METIS dependency in `LinearSolver.Direct`; 7. Create a new plugin for Scotch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4477:2234,Certificate,Certificate,2234,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4477,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"onstraintCorrection<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: UncoupledConstraintCorrection<Vec1d>; [WARNING] [ObjectFactory] Class already registered: UncoupledConstraintCorrection<Vec2d>; [WARNING] [ObjectFactory] Class already registered: UncoupledConstraintCorrection<Vec3d>; [WARNING] [ObjectFactory] Class already registered: UniformConstraint<Vec1d>; [WARNING] [ObjectFactory] Class already registered: UnilateralInteractionConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: DOFBlockerLMConstraint<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: DOFBlockerLMConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: FixedLMConstraint<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: FixedLMConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: DistanceLMContactConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: DistanceLMConstraint<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: DistanceLMConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: LMConstraintSolver; [WARNING] [ObjectFactory] Class already registered: LMConstraintDirectSolver; [INFO] [PluginManager] Loaded plugin: /home/jnbrunet/sources/sofa/build/lib/libSofaConstraint.so; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1652:6204,Certificate,Certificate,6204,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1652,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"ontainers have been changed so we do constant operations only; - Debug visualization has been added. Results:; Tests have been performed on the caduceus scene where BruteForceDetection has been changed to DirectSAP, running 1000 iterations:. BEFORE:; 1000 iterations done in 19.7895 s ( 50.532 FPS). ; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.30	 1 	 15.30	 29.27	 17.51	 2.06	 17.51	 88.55	.....NarrowPhase; 6 	 1.37	 1 	 0.19	 0.59	 0.22	 0.03	 0.22	 1.11	......Direct SAP std::sort; 6 	 1.59	 1 	 14.98	 28.90	 17.21	 2.04	 17.21	 87.05	......Direct SAP intersection. AFTER:; 1000 iterations done in 7.53045 s ( 132.794 FPS).; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.25	 1 	 3.66	 9.56	 5.37	 0.88	 5.37	 71.52	.....NarrowPhase; 6 	 1.31	 1 	 0.05	 0.11	 0.05	 0 	 0.05	 0.72	......Direct SAP cache; 6 	 1.37	 1 	 0.21	 0.61	 0.23	 0.03	 0.23	 3.08	......Direct SAP sort; 6 	 1.60	 1 	 3.24	 9.10	 5.02	 0.86	 5.02	 66.80	......Direct SAP intersection. Gain of the narrow phase: x3.3 faster. Note: BruteForceDetection is still a lot faster:; 1000 iterations done in 2.62201 s ( 381.386 FPS). Debug view:; ![Capture d’écran du 2021-03-15 10-04-20](https://user-images.githubusercontent.com/10572752/111137537-32874a00-857f-11eb-9f39-0eaceb0fa0be.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1917:1792,Certificate,Certificate,1792,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1917,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"ood as it is misleading on the purpose of the function.; In the following example ; ```cpp; MyObject* ptr;; Base::className(ptr); ; ```; You don't see this is a templated method and you have no idea what 'ptr' is for, and you don't even know if putting a nullptr will work or not. ; Using the templated only syntax is more clear on the role of the function; ```cpp; Base::className<MyObject>(); ; ```; Or if you have an object instance; ```cpp; Base::className<declspec(obj)>(); ; ```. Most common code update pattern; ============================; The most common compilation problem you will encounter with non updated external plugin is related to the overriding of getTemplateName or templateName() method. This method is now now considered as final and thus it is not possible to override it anymore. ; To update old code like this: ; ```cpp; MyClass : public BaseObject; virtual std::string getTemplateName() const { return templateName(); } ; static std::string templateName(const CapsuleCollisionModel<DataTypes>* = nullptr); {; return DataTypes::Name();; }; ```; You can remove the code as the default name generation mecanisme can handle that for you automatically using the ""Name"" . . In the case if your DataTypes does not have a Name() function or if some of the class template parameters should not be exposed as runtime template then you need to implement your custom naming scheem by implementing the following function; ```cpp; static const std::string CustomTemplateName(); { ; return ""CustomName"";; }; ```. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1283:4032,expose,exposed,4032,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1283,1,['expose'],['exposed']
Security,"otations=""true""` now **requires** to have a RotationFinder. PrecomputedConstraintCorrection has a hard dependency on TetrahedronFEMForceField, to get rotations.; (hence calling a a function of TetraFEM); It can also get rotations if it detects a component implemented RotationFinder<T>.; But TetrahedronFEMForceField is already implementing BaseRotationFinder taking a BaseMatrix*.; RotationFinder<T> inherits BaseRotationFinder, so I made TetrahedronFEMForceField implementing RotationFinder<T> instead. (which adds an other method to implement); Finally, PrecomputedConstraintCorrection only needs RotationFinder<T> now. IMO, ; - BaseRotationFinder implemented in TetrahedronFEM & HexahedronFEM only and used in WarpPreconditioner;; - RotationFinder<T> (implemented by nobody in the sofacode base but apparently by one external plugin @pedroperrusi) and used by PrecomputedConstraintCorrection, WarpPreconditioner and PrecomputedWarpPreconditioner;. would really need a refactoring or some re-working.; Those two were defined more or less in the same time, in 2006 (!) in the early days of SOFA. Some cleaning in PrecomputedConstraintCorrection as well; and this PR made me wonder the never-defined preprocessor definition NEW_METHOD_UNBUILT in PrecomputedConstraintCorrection (@ChristianDuriez ?). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2250:1649,Certificate,Certificate,1649,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2250,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"parseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 1000 iterations done in 46.8709 s ( 21.3352 FPS). <EigenSimplicialLDLT name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 1000 iterations done in 95.1848 s ( 10.5059 FPS). <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 1000 iterations done in 146.778 s ( 6.813 FPS). <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 1000 iterations done in 68.7089 s ( 14.5542 FPS). . <SparseLUSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""true"" />; [INFO] [BatchGUI] 100 iterations done in 35.9595 s ( 2.7809 FPS). <SparseLUSolver name=""precond"" template=""CompressedRowSparseMatrixMat3x3"" parallelInverseProduct=""false"" />; [INFO] [BatchGUI] 100 iterations done in 51.4465 s ( 1.94377 FPS).; ```. It indicates that `EigenSimplicialLDLT ` is faster than `SparseLDLSolver`. At least in this scene. It's not the case in `TorusFall.scn`. Two reasons to avoid the parallelization in the matrix-free CG:; 1. `GraphScatteredVector` is not default constructible; 2. Would not be thread-safe. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4255:1929,Certificate,Certificate,1929,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4255,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"peInfo.h where a lot of data types ""vector, rigid, map, vec, quat"". All these includes are just there to insure that in Sofa no-one will never fallback on the default dehavior. But static type info is kind of ""expert"" feature that is only usefull in few rare use cases. So polluting the complete dependency tree (and compilation unit) for a rarely use case is problematic. . So I tried to reverse all to implement an opt-in solution ... by default and for most of our code base, dynamic typeinfo (aka the one following the AbstractTypeInfo interface) are available because they only requires opaque data types. And it is only on purpose that developper can include (most of the time in a .cpp) the static typeinfos. So in short...it is abstract by default and static after a specific include. Bying abstract by default ...make that the dependencies is reduced a lot. . This PR:; - add DataTypeId<xxxx> so we can have an unique id per data type. This unique id is statically allocated and is used a way to access the DataTypeInfoRegistry in an efficiant way. ; - add a unique storage repository (DataTypeInfoRegistry). This storage is holding all the typeinfo use in Sofa. There is two way ; to be registered in the repository, the first one consist consist in explcitly adding a typeinfo instance in the storage. This is what to do when we want to be sure the fully defined data type is registered. ; - the other was implemented to mimick at best the the existing behavior in Sofa while fixing some of its error. It works the following way... when a Data<Type> is used this automatically trigs the setting of the typeinfo in the repository. If no DataTypeInfo<> is available this fallback to the default one but the data info cannot be used... if in a subsequent compilation unit (.cpp) the same Data<Type> is used with the complete type, the registring is done again...and if the type is more complete...then the old (partial) type is replaced with the new one. ; - the common data type info are now ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1552:2601,access,access,2601,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1552,1,['access'],['access']
Security,"polygon cube intersection is a utility file only used with SparseGridTopology.; Even more confusing as it has a ""vec.h"" file with lots of macro defined inside. I did not put any stub files with the usual ""this file move there"" because I did not see the priority for it.; But I can do it if requested. Breaking flag to be ""consistent"" but I guess 99(.99)% of users wont even flinch at it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1772:551,Certificate,Certificate,551,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1772,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"ponents [BackgroundSetting] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Visual""/> <!-- Needed to use components [VisualStyle] -->. <VisualStyle displayFlags=""showVisualModels"" />; <BackgroundSetting color=""0.8 0.8 0.8 1"" />. <FreeMotionAnimationLoop name=""FreeMotionAnimationLoop"" />; <GenericConstraintSolver maxIterations=""10"" tolerance=""1.0e-3""/>. <Node name=""Mesh"" >; <EulerImplicitSolver firstOrder=""false"" rayleighMass=""0.1"" rayleighStiffness=""0.1"" />; <SparseLDLSolver name=""precond"" template=""CompressedRowSparseMatrixd"" />. <MechanicalObject name=""mstate"" position=""0 0 0 0 0 0 1"" template=""Rigid3d"" />; <UniformMass totalMass=""1""/>. <Node name=""AttachPoint"">; <MechanicalObject name=""points"" template=""Vec3"" position=""0 0 0 1 0 0 0 1 0 0 0 1"" />; <ConstantForceField indices=""1"" forces=""0.0 0.0 1.0"" showArrowSize=""0.2""/>; <RigidMapping />; </Node>; <LinearSolverConstraintCorrection linearSolver=""@precond""/>; </Node>. <Node name=""Mesh2"" >; <MechanicalObject name=""mstate"" position=""0 0 0 0 0 0 1"" template=""Rigid3d"" />; </Node>. <BilateralInteractionConstraint template=""Rigid3d""; object1=""@Mesh/mstate""; object2=""@Mesh2/mstate""; first_point=""0"" second_point=""0"" />; </Node >; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4234:3246,Certificate,Certificate,3246,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4234,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"quadsInHexahedronArray was not really used. ; QuadsOrientationInHexahedronArray is the good one. Quick way to fix #2003. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2995:284,Certificate,Certificate,284,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2995,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"quick PR from the pool regarding discussion #4561. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4576:214,Certificate,Certificate,214,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4576,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"r/MechanicalState.h>	; #include <sofa/core/ConstraintParams.h>; #include <sofa/core/CollisionModel.h>	; #include <sofa/core/ExecParams.h>	; #include <SofaMeshCollision/TriangleModel.h>	; #include <SofaBaseCollision/SphereModel.h>; ```. To cut into the dependency tree I introduce opaque function for the most commonly used in .h; The choosen convention was to use a namespace that is symetric to the class name. ; So the opaque version of ```sofa::core::BaseContext::getDt()``` is ```sofa::core::objectmodel::basecontext::getDt(BaseContext*);``` . For the moment, all the opaque function are added in the per namespace fwd.h.; The following ones has been introduced.; In sofa/simulation/fwd.h; ```cpp; Node* sofa::simulation::node::getNodeFrom(BaseContext*);; Node* sofa::simulation::node::getNodeFrom(Base*);; Base* sofa::simulation::node::toBase(Node*);; BaseContext* sofa::simulation::node::toBaseContext(Node*);; ```. In sofa/core/fwd.h; ```; sofa::core::objectmodel::basecontext::getDt(BaseContext*); ; sofa::core::objectmodel::basecontext::getTime(BaseContext*); ; ```. NB: it is possible if the use of these opaque function generalize to move the definition of these ones into more narrow file eg:; sofa/core/objectmodel/node-c-api.h. Finally, if you observe strange consequence please report. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1764:2233,Certificate,Certificate,2233,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1764,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"rc/sofa/core/objectmodel/Link.h:302: warning: bitwise operation between different enumeration types ‘sofa::core::objectmodel::TLink<sofa::core::objectmodel::BaseObject, sofa::core::objectmodel::BaseObject, 7>::<unnamed enum>’ and ‘sofa::core::objectmodel::BaseLink::LinkFlagsEnum’ is deprecated [-Wdeprecated-enum-enum-conversion]; /linuxdata/sofa/src/current/Sofa/framework/Core/src/sofa/core/objectmodel/Link.h:302:37: warning: bitwise operation between different enumeration types ‘sofa::core::objectmodel::TLink<sofa::core::objectmodel::BaseObject, sofa::core::objectmodel::BaseObject, 7>::<unnamed enum>’ and ‘sofa::core::objectmodel::BaseLink::LinkFlagsEnum’ is deprecated [-Wdeprecated-enum-enum-conversion]; 302 | #define ACTIVEFLAG(f) ((ActiveFlags & (f)) != 0); | ~~~~~~~~~~~~~^~~~~~; /linuxdata/sofa/src/current/Sofa/framework/Core/src/sofa/core/objectmodel/Link.h:305:81: note: in expansion of macro ‘ACTIVEFLAG’; 305 | typedef LinkTraitsValueType<DestType, DestPtr, ACTIVEFLAG(FLAG_STRONGLINK), ACTIVEFLAG(FLAG_STOREPATH)> TraitsValueType;; | ^~~~~~~~~~; ```; (I dont know why it was only appearing only for the plugin compilation, maybe some warnings flags are added by an external cmake target); Anyway the macro to enable flags was quite dirty to me so I have changed it a little bit. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3714:1676,Certificate,Certificate,1676,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3714,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"re used improperly. Making these tests is very important to avoid un-detected bugs on the error handling code paths and it bring a lot to the general quality of sofa. . About the fact that the ""error as test failure by default"" is covering 99% of our tests... to me this is an indication that our tests are only covering half of the things they should and I'm not sure we should facilitate this behavior. . This is why I came up to making the things explicit in each test because it force the test writer to specify what are his underlying assumption and expectation for each of his tests making things very clear. In addition it put in front of his eyes what he is testing.. and what he is not testing. . PS: I really like the very detailed test failure that are reported with the explicit approach, we have either the filename & lineno of the failing test as well as the location of the message emission. ; eg: https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5020/testReport/(root)/DilateEngine_test_0/NormalBehavior/. EDIT: Your question make me think that some way to improve the things so maybe we can discuss what are the desirable features and how to expose them to the developpers. This is very hard because it is connected to lack of standardized way our code base reports errors (not exception, some uses error codes ,some uses messages). But I'm very afraid of starting such kind of very impacting discussion (I want to do UI ;)). In the meantime I suggest to use this PR. . EDIT2: what should i do with this:; https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5020/testReport/(root)/TrianglePressureForceField_test_0/trianglePressureForceFieldTest/ ? ; 1) Should I ignore the warning in the test generation ? ; 2) Should the function be pure virtual instead ? ; 3) Should the warning message be a dmsg_warning instead of a msg_warning one ? . EDIT3: And this one ; https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5020/testReport/(root)/DifferenceEngine_test_0/DataTest/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288543197:1396,expose,expose,1396,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288543197,1,['expose'],['expose']
Security,"regression was Introduced in; - #4601 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4643:203,Certificate,Certificate,203,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4643,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"related to https://github.com/SofaDefrost/SoftRobots/pull/283. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4763:226,Certificate,Certificate,226,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4763,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"remove [ ] operator and some constructors. Warning as discussed, this will not be merged directly in master but in a PoC topology branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2082:301,Certificate,Certificate,301,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2082,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"remove call to setValue using execParams which has been depreciate. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2033:231,Certificate,Certificate,231,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2033,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"remove shadow varaible. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5085:187,Certificate,Certificate,187,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5085,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"remove shadow variable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2091:187,Certificate,Certificate,187,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2091,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"rename variable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1874:180,Certificate,Certificate,180,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1874,4,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"replace all beginEdit by WriteOnlyAccessor to avoid updateIfDirty while modifying the data. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2414:255,Certificate,Certificate,255,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2414,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"resize(Size s, bool) is error-prone because of a similar function in std::vector but with different behavior: resize(size_type count, const value_type& value). See https://en.cppreference.com/w/cpp/container/vector/resize. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3373:386,Certificate,Certificate,386,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3373,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"revert PR #1268. And Fix #1277 (👍 @epernod ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1803:209,Certificate,Certificate,209,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1803,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,rg/extra/clang-tidy/checks/clang-analyzer-optin.portability.UnixAPI.html) | [modernize-raw-string-literal](https://clang.llvm.org/extra/clang-tidy/checks/modernize-raw-string-literal.html) |; | [clang-analyzer-security.FloatLoopCounter](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.FloatLoopCounter.html) | [modernize-redundant-void-arg](https://clang.llvm.org/extra/clang-tidy/checks/modernize-redundant-void-arg.html) |; | [clang-analyzer-security.insecureAPI.UncheckedReturn](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.UncheckedReturn.html) | [modernize-replace-auto-ptr](https://clang.llvm.org/extra/clang-tidy/checks/modernize-replace-auto-ptr.html) |; | [clang-analyzer-security.insecureAPI.getpw](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.getpw.html) | [modernize-replace-random-shuffle](https://clang.llvm.org/extra/clang-tidy/checks/modernize-replace-random-shuffle.html) |; | [clang-analyzer-security.insecureAPI.gets](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.gets.html) | [modernize-return-braced-init-list](https://clang.llvm.org/extra/clang-tidy/checks/modernize-return-braced-init-list.html) |; | [clang-analyzer-security.insecureAPI.mkstemp](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.mkstemp.html) | [modernize-shrink-to-fit](https://clang.llvm.org/extra/clang-tidy/checks/modernize-shrink-to-fit.html) |; | [clang-analyzer-security.insecureAPI.mktemp](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.mktemp.html) | [modernize-unary-static-assert](https://clang.llvm.org/extra/clang-tidy/checks/modernize-unary-static-assert.html) |; | [clang-analyzer-security.insecureAPI.rand](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.rand.html) | [modernize-use-auto](https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-aut,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:16557,secur,security,16557,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['secur'],['security']
Security,rnize-raw-string-literal](https://clang.llvm.org/extra/clang-tidy/checks/modernize-raw-string-literal.html) |; | [clang-analyzer-security.FloatLoopCounter](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.FloatLoopCounter.html) | [modernize-redundant-void-arg](https://clang.llvm.org/extra/clang-tidy/checks/modernize-redundant-void-arg.html) |; | [clang-analyzer-security.insecureAPI.UncheckedReturn](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.UncheckedReturn.html) | [modernize-replace-auto-ptr](https://clang.llvm.org/extra/clang-tidy/checks/modernize-replace-auto-ptr.html) |; | [clang-analyzer-security.insecureAPI.getpw](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.getpw.html) | [modernize-replace-random-shuffle](https://clang.llvm.org/extra/clang-tidy/checks/modernize-replace-random-shuffle.html) |; | [clang-analyzer-security.insecureAPI.gets](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.gets.html) | [modernize-return-braced-init-list](https://clang.llvm.org/extra/clang-tidy/checks/modernize-return-braced-init-list.html) |; | [clang-analyzer-security.insecureAPI.mkstemp](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.mkstemp.html) | [modernize-shrink-to-fit](https://clang.llvm.org/extra/clang-tidy/checks/modernize-shrink-to-fit.html) |; | [clang-analyzer-security.insecureAPI.mktemp](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.mktemp.html) | [modernize-unary-static-assert](https://clang.llvm.org/extra/clang-tidy/checks/modernize-unary-static-assert.html) |; | [clang-analyzer-security.insecureAPI.rand](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.rand.html) | [modernize-use-auto](https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-auto.html) |; | [clang-analyzer-security.insecureAPI.strcpy](https://clang.llvm.org/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:16646,secur,security,16646,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['secur'],['security']
Security,"roduces more optimized binaries.; Results are not always good, and really depends on the situation/scene. Few cases where cl is slightly faster than clang-cl; Some bench:; - `caduceus.scn -g batch -n 10000`; - cl: `21.2541 s ( 470.498 FPS)`; - clang-cl: `19.6914 s ( 507.836 FPS)`; - MeshMatrixMass.scn with 4096 steps (from SofaBenchmark); - cl: `25504 ms`; - clang-cl: `18161 ms`; - `examples/Benchmark/Performance/benchmark_cubes.scn -g batch -n 1000`; - cl: `36.7404 s ( 27.218 FPS`; - clang-cl: ` 37.8146 s ( 26.4448 FPS)`; - `examples/Benchmark/Performance/TorusFall.scn -g batch -n 1000`; - cl: `8.63699 s ( 115.781 FPS)`; - clang-cl: ` 7.72771 s ( 129.404 FPS)`; - `applications/plugins/SofaCUDA/examples/beam16x16x76-fem-implicit-CPU.scn -g batch -n 1000`; - cl: ` 113.022 s ( 8.8478 FPS))`; - clang-cl: ` 100.645 s ( 9.93587 FPS)`; - SofaBenchmark, a lot shows only improvement around 10-15% but some are interesting:; - `BM_FixedArray_construct<sofa::type::Vec3f>/8192`; - cl: ` 10.5 us`; - clang-cl: ` 6.42 us`; - `BM_Matrix_typemat3x3f_assign/512` this one is weird (the same bench with eigenmat is much closer); - cl: ` 3.44 us`; - clang-cl: ` 1.18 us`. ## Warning; pybind is not compatible with clang-cl (and I am sure a lot of other libraries), even gtest as it is was not compatible. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2563:2084,Certificate,Certificate,2084,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2563,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"ronment commits. ## issofa_python. ### New features; Add binding python to get slaves and names on baseObjects.; Add Python bindings for triangle and point topology modifiers. Example scene which show triangle refining.; Creation of Binding_BaseTopologyObject common to PointSetTopologyModifier and TriangleSetTopologyModifier.; Add a getObjects() method to python BaseContext interface. Allow selection of objects based on type and name. May be extended to include more search options later. ### Improvements; SendScriptEvent should only be applied on a specified node, not on root !; WARNING: may affect python script behavior.; Allow to get the value of a data as a string when its type is not handle by the binding.; Object and type names are now both optional when calling BaseContext_getObjects(). Moreover the search direction can now optionally be passed to BaseContext_getObjects() (default is 'Local').; Binding_Data expose fullPath read only parameter for BaseData that derive from DataFileName, which as the name suggests, returns the fullPath to the file pointed by that data. Returns None otherwise. ### Bugfixes; If the data to be gotten using the bind is a vector of type 'unknown' then the text of the data is returned as a whole.; Fix compilation and warnings with gcc.; Fix SofaPython build on linux.; Fix undefined behaviour and potential crash in Python BaseContext.getObjects() due to PyList accessed out of bounds. ; Fix a memory leak which happens whenever an object is transferred from C++ to Python. _______________________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.*",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/171:1166,expose,expose,1166,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/171,1,['expose'],['expose']
Security,"rrectly because there will be no more magically accessible parts of SOFA. You will no longer be able to `#include` a file from a package not loaded with `find_package`. ## Important changes. ### [[All] CLEAN extlibs integration and install](https://github.com/sofa-framework/sofa/commit/40669c610100a67f46b1405a972b39fe13291eba); - extlib headers are now installed in include/extlibs; - Windows dependency pack headers are now installed in include/WinDepPack; - SOFA now always tries to `find_package` an extlib before using the embedded one; - header-only extlibs too are now easier to override (see extlibs/CMakelists.txt); - **One question remains**: is extlibs/SuiteSparse needed?. ### [[CMake] Install includes in package subdirs](https://github.com/sofa-framework/sofa/commit/68bef4fec16a410007163c5720a5b2ce003ac478); Install module headers in a subdirectory named after their package (SofaGeneral, SofaMisc, SofaFramework, ...). This permits to have clean include directories and thus prevents `find_package` from giving access to unwanted foreign headers.; e.g. doing `find_package(SofaFramework)` will NOT be sufficient to `#include <SofaSomething/anything.h>` (you will get a file not found error).; I think it is way easier to understand that a `find_package` is missing when `#include` fails with ""file not found"" error (at write time if you have a good IDE, at build time otherwise) than with link error (at build time).; Moreover, it will be easier to understand what package is needed for a module by navigating in the include directory.; More details in commit message. ### [[CMake] Make plugins relocatable](https://github.com/sofa-framework/sofa/commit/5b0585f9ad2884cb5462884dffd711ae4d6f2266); **THIS FEATURE IS OPTIONAL**. See the RELOCATABLE parameter of sofa_generate_package.; When building and installing SOFA with plugins - internal (in applications/plugins) or external (included with SOFA_EXTERNAL_DIRECTORIES) - the plugins will not be mixed with SOFA anymore.; Instead,",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1018:1287,access,access,1287,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1018,1,['access'],['access']
Security,"runSofa is now using a two column view to separate type and name in the graph view. ; by default the size is to short to visualize the types. ; In this PR i increase it. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2416:335,Certificate,Certificate,335,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2416,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"s dynamic data instances would be adding quite a lot of complexity. However the current system could be improved based on your observations :; 1. `VecLink m_vecLink` in `BaseData` will only ever contain { &inputs, &outputs }. `VecLink` could be changed to `helper::fixed_array<BaseLink*,2>` to remove those allocations (`BaseData::addLink()` should then be removed or a NOP like in `DDGNode`); 2. Reducing dynamic allocations is why `help`/`group`/`widget` were stored as `const char*` instead of `std::string` (as in most case they are compile time constants). However this did create some bugs in components, so I would be in favor of always storing strings. But one [new issue with c++11 is that std::string is no longer allowed to use copy-on-write](http://stackoverflow.com/questions/12199710/legality-of-cow-stdstring-implementation-in-c11) to share a single buffer between instances, therefore this introduces new allocations with gcc 5 for instance (and `name` is currently copied multiple times). One option would be to use a different string implementation (such as `fbstring` as used by facebook and detailed in the [CppCon 2016 talk “The strange details of std::string at Facebook""](https://youtu.be/kPR8h4-qZdk)). An alternative that would help is to use the new move semantics to minimize the number of copies involved. Regarding multithreading, it is indeed an issue. Currently constructing an object and all its Data is a local operation that can happen in parallel in any thread, but adding/removing them within a given scene graph is supposed to be done sequentially. There is the ""aspect"" mechanism that allow to provide a ""frozen"" version of the graph to another thread while it is being changed through adding and removing node and objects. But adding (and removing) Data in objects is not covered by this mechanism, and is not supported if multiple threads are accessing it concurrently. Which basically limit the creation of dynamic Data to the sequential initialization phase.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/44#issuecomment-256028112:1967,access,accessing,1967,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/44#issuecomment-256028112,1,['access'],['accessing']
Security,"s/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins.; Your scene may not work on a sofa environment with different pre-loaded plugins.; To fix your scene and remove this warning you just need to cut & paste the following lines at the begining of your scene (if it is a .scn):; <RequiredPlugin pluginName='SofaExporter'/> <!-- Needed to use components [MeshExporter, ]-->; <RequiredPlugin pluginName='SofaGeneralSimpleFem'/> <!-- Needed to use components [HexahedralFEMForceField, ]-->. [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; - RegularGridTopology: 1 created with alias ""RegularGrid""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [ERROR] [MeshGmshLoader(export_filename)] Can't load file C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads; [INFO] [SofaViewer] QtViewer::keyPressEvent, CONTROL pressed; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins.; Your scene may not work on a sofa environment with different pre-loaded plugins.; To fix your scene and remove this warning you just n",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2451:5551,validat,validating,5551,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2451,1,['validat'],['validating']
Security,"sceneTransform() in VisualParams has been deleted for v21.12 (and while deprecated was doing nothing anyway). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2539:273,Certificate,Certificate,273,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2539,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,secureAPI.gets](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.gets.html) | [modernize-return-braced-init-list](https://clang.llvm.org/extra/clang-tidy/checks/modernize-return-braced-init-list.html) |; | [clang-analyzer-security.insecureAPI.mkstemp](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.mkstemp.html) | [modernize-shrink-to-fit](https://clang.llvm.org/extra/clang-tidy/checks/modernize-shrink-to-fit.html) |; | [clang-analyzer-security.insecureAPI.mktemp](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.mktemp.html) | [modernize-unary-static-assert](https://clang.llvm.org/extra/clang-tidy/checks/modernize-unary-static-assert.html) |; | [clang-analyzer-security.insecureAPI.rand](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.rand.html) | [modernize-use-auto](https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-auto.html) |; | [clang-analyzer-security.insecureAPI.strcpy](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.strcpy.html) | [modernize-use-bool-literals](https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-bool-literals.html) |; | [clang-analyzer-security.insecureAPI.vfork](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.vfork.html) | [modernize-use-default-member-init](https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-default-member-init.html) |; | [clang-analyzer-unix.API](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-unix.API.html) | [modernize-use-emplace](https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-emplace.html) |; | [clang-analyzer-unix.Malloc](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-unix.Malloc.html) | [modernize-use-equals-default](https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-equals-default.html) |; | [clang-analyzer-unix.MallocSizeof](https:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:17577,secur,security,17577,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['secur'],['security']
Security,"setMechanical() and isMechanical() use the boolean states of forces, masses and constraints.; But the ""meta-alias""(?) `isMechanical` only link forces and masses. So it would make sense to add constraints 🤔. Avoid cases like https://github.com/fredroy/BeamAdapter/commit/58b3db1eb11dab501eec7d6a50b6cce3fcaf9a51. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4360:475,Certificate,Certificate,475,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4360,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"sing one or more mechanical states, in order to access state variables, such as position, force etc. They all manage their own way to store, find and manage their link to one or more mechanical states. Instead, I suggest to factorize this access using intermediate classes. It comes with the following features:. - All components inherit from `StateAccessor`, which contains a dynamic list of `BaseMechanicalState`; - Components having access to only one mechanical state inherit from `SingleStateAccessor`. It is templated on `DataTypes`, with a link to a `MechanicalState<DataTypes>`.; - Components having access to 2 mechanical states inherit from `PairStateAccessor`. It is templated on `DataTypes1` and `DataTypes2`, with a link to a `MechanicalState<DataTypes1>` and a second link to a `MechanicalState<DataTypes2>`.; - Components inheriting from `SingleStateAccessor` or `PairStateAccessor` fill the dynamic list contained in the `StateAccessor` implementation.; - It does not break the previous accesses, variable names etc. The goal is that all the components accessing a `BaseMechanicalState` can provide a list of them in a generic way. For example, `BaseInteractionForceField` supposed only 2 mechanical states. Since it inherits now from `StateAccessor`, it can have links to more than 2 (note that none of the interaction force field I found work with more than 2). Another example: `BaseForceField` did not have any reference to a mechanical state, but all the force fields inherits from `ForceField` which has a link to a mechanical state. Therefore, we couldn't have access to a mechanical state from a `BaseForceField`. I also cleaned the files:; - Concatenate nested namespaces; - Use `#pragma once`; - Some private and non-defined copy constructors and `operator=` are marked `delete`.; - Move methods in cpp; - Removed unnecessary `init()` implementations. They only called their base class `init()`.; - `Constraint ` has a link to the mechanical state instead of a raw pointer.;",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2438:1063,access,accesses,1063,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2438,1,['access'],['accesses']
Security,"site-packages/Sofa/Helper.cpython-38-darwin.so' (mach-o file, but is an incompatible architecture (have 'x86_64', need 'arm64e' or 'arm64')); > >>> ; > ```; > ; > **Env vars**; > ; > ```shell; > python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; > ```; > ; > ```; > --- sys.version ---; > 3.8.19 (default, Mar 20 2024, 15:27:52) ; > [Clang 14.0.6 ]; > --- PATH ---; > /usr/local/opt/python@3.8/bin/:/opt/anaconda3/envs/sofarl/bin:/opt/anaconda3/condabin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/usr/local/share/dotnet:~/.dotnet/tools; > --- SOFA_ROOT ---; > /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS; > --- PYTHONPATH ---; > /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages:/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.12.01_MacOS/plugins/SofaPython3/lib/python3/site-packages:/path/to/SofaPython3/lib/python3/site-packages:; > --- sys.path ---; > ['', '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages', '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.12.01_MacOS/plugins/SofaPython3/lib/python3/site-packages', ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4690#issuecomment-2254322179:3576,secur,security,3576,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4690#issuecomment-2254322179,1,['secur'],['security']
Security,"sity? Its reference is commented in the CMakeLists. I did not touch it. - SofaKernel/modules/SofaCore/src/sofa/core/behavior/InertiaForce.h -> removed because not used and not referenced in CMakeLists. - SofaKernel/modules/SofaCore/src/sofa/core/collision/ParallelPipeline.h and .cpp -> removed because empty class, not used and not referenced in CMakeLists. - DevBaseMonitor: appears to be used but not referenced in CMakeLists -> added. - SofaKernel/modules/SofaHelper/src/sofa/helper/io/MassSpringLoader.h -> removed; - SofaKernel/modules/SofaHelper/src/sofa/helper/io/bvh -> removed. - SofaKernel/modules/SofaHelper/src/sofa/helper/logging/LoggerMessageHandler.h and .cpp -> removed because not used and not referenced in CMakeLists. - SofaKernel/modules/SofaHelper/src/sofa/helper/FnDispatcher.cpp -> removed because empty, and not referenced in CMakeLists. - SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/ChangeListener.h and .cpp -> removed because not used, and not referenced in CMakeLists. - SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/MechanicalMatrixVisitor.h -> removed because empty, and not referenced in CMakeLists. - SofaKernel/modules/Sofa.Type/src/sofa/type/Color.cpp -> removed because not referenced in CMakeLists. The code in this file is not required. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2333:1976,Certificate,Certificate,1976,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2333,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"so they can be used by Tracy profiler as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4203:210,Certificate,Certificate,210,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4203,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"sofa::core can be confused with sofa::simulation::core, so I added sofa:: in front of core namespace. This confusion arose when compiling using a jumbo build. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1959:322,Certificate,Certificate,322,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1959,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"sofa_add_plugin required the ""name"" argument to be the same as the target; We can now handle non-target names, aliases and custom OUTPUT_NAME. Related to this forum topic: https://www.sofa-framework.org/community/forum/topic/problem-compiling-sofa-with-python3-2/. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1584:428,Certificate,Certificate,428,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1584,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"some day a warning-free SOFA!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3227:194,Certificate,Certificate,194,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3227,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"sout/serr (and sendl) were wrappers for std::cout & std::cerr to get access to the streams for the GUIs initially. After the introduction of the Messaging system, it was deemed deprecated (there is even a compat layer, redirecting sout/serr to msg_info(), msg_warning(), etc), but never enforced and never publicized actually. This PR officially deprecates it by still being able to use it but will warn at compilation time if anybody uses the stream operators with serr/sendl. (you can see that on the CI log for the soon-to-be-dropped plugin like Flexible or Compliant). This PR also (should) remove all those serr/sout/sendl in SOFA itself and the supported plugins. EDIT: Adding ""breaking"" label because serr was throwing ""WARNING"" before (yeah makes sense), so it cannot be replaced 1-on-1 with msg_error( could be msg_warning as well). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2292:69,access,access,69,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2292,3,"['Certificate', 'access', 'certificate']","['Certificate', 'access', 'certificate-of-origin-dco']"
Security,"steps, which makes the code more consistent. Note also the introduction of `ComputeIsolatedForceVisitor` (see the comments in the code to understand its purpose). # Multithreading. Since `AnimateVisitor` is no longer used, `SolveVisitor` is used instead, providing optional multithreading, i.e. solving each ODE in parallel. Similar to what was done in the `FreeMotionAnimationLoop`. ## Benchmark. Measured on `examples/Component/SolidMechanics/FEM/TetrahedronFEMForceField.scn`. Without parallelism; ```; [INFO] [BatchGUI] 1000 iterations done in 14.7031 s ( 68.0128 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 2 0.03 1 10.57 27.32 11.94 2.11 11.94 82.14 ..solve; ```. With parallelism; ```; [INFO] [BatchGUI] 1000 iterations done in 7.13825 s ( 140.09 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 2 0.03 1 3.53 6.85 4.45 0.81 4.45 63.60 ..solve; ```. The simulation is 2x faster. But there are 4 different objects, so we expected a speed-up of 4x. However, the speed-up is only about the `solve` function. Another time consuming function is the `end event` when computing the von Misses stresses. Still, the solve function only shows a speedup of 2.68x, instead of 4x. I cannot explain it for now... [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/362]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3959:3134,Certificate,Certificate,3134,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"struction of triplets, needed to construct an Eigen matrix, is avoided using a custom proxy on the `CompressedRowSparseMatrix` uncompressed data. Here are the new timings (to compare to #2362):. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 63 99.14 66.64 2.64 66643 100 TOTAL; ...; 4 0.87 1 27.68 58.27 30.91 2.28 30.91 46.38 ....MBKBuild; 5 1.08 1 26.76 57.31 29.90 2.23 29.90 44.86 .....MMM-addKToMatrix; 6 1.08 1 1.73 2.94 1.98 0.18 1.98 2.98 ......jacobian; 6 3.07 1 6.94 35.47 8.01 1.25 8.01 12.02 ......stiffness; 6 11.08 1 2.68 17.13 3.43 0.81 3.43 5.15 ......copyKToEigen; 7 11.08 1 2.67 17.12 3.42 0.81 3.42 5.14 .......KfromTriplets; 6 14.51 1 0.25 0.92 0.30 0.06 0.30 0.45 ......copyJ1J2ToEigen; 7 14.74 1 0.06 0.29 0.07 0.02 0.07 0.10 .......copyJ2ToEigen; 6 14.81 1 9.50 25.79 11.23 1.54 11.23 16.85 ......Multiplication; 7 14.81 1 4.88 18.44 5.80 0.96 5.80 8.71 .......J1tKJ1; 7 20.62 1 0.76 4.52 0.99 0.23 0.99 1.49 .......J2tKJ2; 7 21.62 1 2.71 16.34 3.46 0.92 3.46 5.19 .......J1tKJ2; 7 25.07 1 0.77 12.89 0.97 0.41 0.97 1.46 .......J2tKJ1; 6 26.05 1 2.71 7.73 3.04 0.24 3.04 4.56 ......J1tKJ1-copy; 6 29.09 1 0 0.02 0 0 0 0 ......J2tKJ2-copy; 6 29.09 1 0.01 0.06 0.02 0 0.02 0.02 ......J1tKJ2-copy; 6 29.11 1 0.01 0.08 0.03 0.01 0.03 0.04 ......J2tKJ1-copy. ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2367:1650,Certificate,Certificate,1650,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2367,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,technically yes as I remove some methods... But I doubt someone was using that instead of accessing the Data directly.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1947#issuecomment-807471620:90,access,accessing,90,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1947#issuecomment-807471620,1,['access'],['accessing']
Security,"ted with each of the mapping parent dofs. - ContactMappers : It is (very) questionable to let contact mappers propagate the unconstrained dynamics solution vector towards contact dofs by calling `updateXfree()` since it will induce inconsistencies in mapping linearisation if the contact mappers are non linear, since contact mappings will therefore be linearised around the free motion configuration, and the rest being linearised around the configuration at the beginning of the time step. This PR does not address this problem which is left for future work. It arises only with non linear contact mappers (like the `RigidContactMapper` for instance), but this should be kept in mind. - LinearSolver API : As a general note, I believe the LinearSolver API is a bloated with virtual methods which are difficult to understand since they are not directly related to the computation / factorisation of a positive definite matrix, and are mostly optional especially for non assembled solver like CG. Most of the methods should reside in the ConstraintCorrection API, and concrete instance of ConstraintCorrection should be templated on the type of LinearSolver in my opinion, since it is the only objects that actually make use of these methods, and really what you want is to have access to the concrete type of Matrix and Vector used by the solver. Also from my understanding only `LinearSolver` instances that derive from `MatrixLinearSolver` implement these kind of methods, so maybe a first step would be to move them here. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459:8311,access,access,8311,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459,1,['access'],['access']
Security,"test concurrent access to LCPForceFeedback computeforce from another thread. This PR depends on #1576 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1581:16,access,access,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1581,3,"['Certificate', 'access', 'certificate']","['Certificate', 'access', 'certificate-of-origin-dco']"
Security,tested & validated,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/68:9,validat,validated,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/68,1,['validat'],['validated']
Security,"thanks to #2989 and debug mode, a bug could be detected when the topology handler registers data for quad.; (I suppose this should fix data updates when a quad container has topological changes). Based on : ; - #2989 (to fix compilation). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2990:402,Certificate,Certificate,402,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2990,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"the POINTREMOVED event to all topologyHandler registered. Including the deleted one from the mouse attached constraint. The pointer to the topologyHandler is not null but pointed to a deleted object. ### PR changes description; This PR and the PR #3271 (included in this on) are introducing a mechanism to better register and unregister a TopologyHandler from the TopologyContainer.; 1. register is done at creation of the TopologyHandler; 2. If TopologyHandler has well been added to the list manged by the Container, a internal bool m_isRegisterd is set to true.; 3. When the TopologyHandler is deleted (meaning its component owner is deleted). If m_isRegisterd == true, the TopologyHandler will unregister itself.; 4. When the TopologyContainer is deleted, it will go through each TopologyHandler it is managing and turn m_isRegisted to false. And then clear the list without deleting the Handler. The bool m_isRegisterd is used because to unregister itself, the handler need to access the topologyContainer which could have already been destroyed (depending on the graph order). But the TopologyHandler doesn't now the container is null. That's why if the TopologyContainer is deleted first it sets all its topologyHander as unregistered. ### Linked issues; Based on PR #3271 ; Fixes #3370 #3202. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3369:2686,Certificate,Certificate,2686,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3369,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,the ```return``` was added intentionally in a previous PR where mechanism to force the initialization of topology container have been added to avoid time bomb. ; Removing the return means you don't bother of the error sent just before and you continue to fill or not fill data and you will get a crash later in another component due to inconsistent topology buffers access. Can you check how many errors you get in your example without this return?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1245#issuecomment-577238750:366,access,access,366,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1245#issuecomment-577238750,1,['access'],['access']
Security,"the cmake process with a already populated CMakeCache). - CPack analysis at the end; - All modules does a awful lot of find_package() even if it is packages already found before; - (On windows only?) the sofa_install_lib at the beginning. # (Proposal of) Solution. Not an expert of CMake at all but this PR:; - Set an option if you really want to use CPack (this is only used when packing) -> **harmless**; - Modify sofa_find_package to test if the desired packages/target is already imported/loaded , use it everywhere -> **I may have missed something here**; - remove the recursiveness in sofa_install_package -> **seems OK on Windows but I suspect it was made for Linux actually**. Here is the trace after applying the modifications:; ![cmake1](https://user-images.githubusercontent.com/11028016/108480054-c292e600-7296-11eb-913c-7f3ad5a85adf.PNG). It takes only around 8sec instead of around 38 sec initially, on Windows (without counting generating apparently); In my Ubuntu VM, it takes around 2 sec for the whole process ! (configure + generating); But I have no doubt I may have introduce bugs etc. 🤨 so feel free to react. Unfortunately, I dont know for now how to reduce the generating step time 😥. # Nota Bene; For those interested on how to trace/profile the cmake processing time: #1838. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1837:1796,Certificate,Certificate,1796,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1837,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"this PR is based on #2869 . Sevral fixes in `TopologyData `/ `TopologySubsetData `/ `TopologySubsetIndices`. - Fix: `TopologyData::m_lastElementIndex` was set to invalid when passing empty buffer size. keep value to 0 in this case.; - Rename: `TopologySubSetData `option **isConcerned** by **addNewelements**. This method is used to allow TopologySubsetData to growth following topological changes; - Fix: TopologySubSetData **add** methods. Value where not really set but using default constructor instead of value in callback.; - Clean: TopologySubSetData **remove** method from unecessary checks/loop. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2870:768,Certificate,Certificate,768,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2870,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"thub.com/sofa-framework/sofa/pull/2394):. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 48.83 558.52 52.87 16.28 52873.1 100 TOTAL; ...; 4 0.97 1 16.13 510.42 18.89 15.73 18.89 35.72 ....MBKBuild; 5 1.16 1 15.20 501.11 17.93 15.46 17.93 33.91 .....MMM-addKToMatrix; 6 1.18 1 5.92 26.88 7.26 1.67 7.26 13.74 ......stiffness; 6 8.44 1 2.84 7.27 3.59 0.62 3.59 6.78 ......copyKToEigen; 6 12.03 1 0 0 0 0 0 0 ......waitJacobian; 6 12.03 1 3.07 487.77 3.76 15.32 3.76 7.11 ......Multiplication; 7 12.03 1 2.62 479.92 3.28 15.08 3.28 6.21 .......J1tKJ1; 7 15.32 1 0.34 4.83 0.36 0.15 0.36 0.68 .......J2tKJ2; 7 15.68 1 0.09 2.57 0.09 0.08 0.09 0.18 .......J1tKJ2; 7 15.77 1 0.01 0.43 0.02 0.01 0.02 0.03 .......J2tKJ1; 6 15.79 1 2.54 5.45 2.72 0.18 2.72 5.15 ......copy; 7 15.79 1 2.50 5.38 2.68 0.18 2.68 5.07 .......J1tKJ1-copy; 7 18.47 1 0 0.01 0 0 0 0 .......J2tKJ2-copy; 7 18.48 1 0.01 0.04 0.01 0 0.01 0.03 .......J1tKJ2-copy; 7 18.49 1 0.01 0.06 0.02 0 0.02 0.04 .......J2tKJ1-copy. ```. It is still possible to go further with parallel tasks between the multiplications and the copies, but:; 1) A clean implementation would require a local thread pool (and the current implementation of thread pools does not allow that); 2) The speed up in the example scene would be negligible. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2411:1901,Certificate,Certificate,1901,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2411,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"tial guess was writing a 0.0 outside bounds (but I dont know why this line was here). :warning: WARNING :warning:; one needs to set the responseParams to mu=0.0 also. This is really confusing and would need to refactor somewhere.; If the LCP defines mu to 0.0 but not responseParams, funny things happen (one component expects 1contact = 1 constraint and the other 1contact = 3 constraints). Moreover:; - remove (deprecate) usage of the member `_mu` which was confusing with the data `mu`; - adds two scenes to demonstrate with and without friction, and their regression tests. [ci-depends-on https://github.com/sofa-framework/Regression/pull/47]. ![lcp_friction](https://github.com/sofa-framework/sofa/assets/11028016/eba86b90-3cfc-40f6-850f-6aba720d291d); ![lcp_nofriction](https://github.com/sofa-framework/sofa/assets/11028016/fb015cd7-54c6-4347-a07e-e5c960dc609c). Benchmarks:; As friction adds two additional constraints in the matrix, then frictionless scenes are faster:; ```; caduceus:; w/: 5000 iterations done in 52.071 s ( 96.0227 FPS); w/o: 5000 iterations done in 44.6895 s ( 111.883 FPS); ```; ```; 3instruments_collis:; w: 5000 iterations done in 69.8352 s ( 71.5971 FPS); w/o: 5000 iterations done in 43.0997 s ( 116.01 FPS); ```; Obviously, this change the behavior of the scene...; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3905:1565,Certificate,Certificate,1565,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3905,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"ting from `BruteForceBroadPhase` instead of `BroadPhaseDetection`. This is what I did in `RayTraceDetection`. Doing that, I could remove all the broad phase code from `RayTraceDetection`. # What comes next. It is also my intention to inherit from `BruteForceBroadPhase` in `BruteForceDetection`, and remove all the broad phase code from `BruteForceDetection`. The broad phase code from `BruteForceDetection` and `RayTraceDetection` would be shared from `BruteForceBroadPhase`. However, I expect complex conflicts because of #1999. I'll do that if #1999 is accepted and merged. It is also my intention to extract the narrow phase from `BruteForceDetection` and put it in another component which would inherit from `NarrowPhaseDetection`. The narrow phase in `BruteForceDetection` is not brute force, and should be named with a clearer and more meaningful name. It will be the case with the new component. I also believe SAP can be implemented as a broad phase only component. We would have the choice between `BruteForceBroadPhase` and `SAPBroadPhase`. Any narrow phase would work with both broad phases (`BruteForceBroadPhase` and `SAPBroadPhase`). Finally, with all those changes, we can consider more modularity on the collision detection and choose any combination of broad phase and narrow phase. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2010:2332,Certificate,Certificate,2332,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2010,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"tion format is used in a lot of other software (GUIs, scene processing tools written in python, perl and C++). If you change the behavior of the default serialization mechanism all of them will stop working and required to be updated. This is a very, very, very nasty thing to impose to other users of Sofa. A PR doing has no changes to be accepted. . Actually tests is part of our guard line because they validates the API compatibility and allow us to detect changes that breaks it. The existing tests should be considered as validating the ""the existing"" sofa API. It was normal to have them to fail on your PR because it shows that the PR was breaking the compatibility. . I really like the idea of keeping the old serialization behavior as it is and add the other deserialization as an extra feature. This will make the whole PR transparent for users that don't want to update their code base. It thus it can be merged very quickly. . About the test: ; You are right that it would be better if we had test specific tests to validate the serialization alone.; I personally would like to have tests to validate that getValueString() return ""1 2 3"" and that getValueAsPythonString() return ""[1 2 3]"" . And also as you said having tests to validate against the real values instead of their serialization would be nice. . . About the branches:; The rule is to never work directly on the sofa-framework repository. There is no reason to do so (if you really want to make two PR one in anatoscope and one in sofa ... you need to to that from two branches located in the anatoscope repo). Otherwise this consume a lot of disk space on the CI servers that we have to fix manually. Now fundamentally from my experience in playing with PR and branches I think that making two PR will be very complex for you to handle. Because the PR you issued to anatoscope and the one you issued to sofa-framework may diverge ... so it will cost you to switch from one to the other and handle the changes. . PS: I'm not v",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/330#issuecomment-315028626:1357,validat,validate,1357,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/330#issuecomment-315028626,1,['validat'],['validate']
Security,"tion on Sofa. **Parallelism at the Visitor level :** . **General idea :**; Some visitors execute functions on multiple components (example : BaseMechanicalVisitor launches MechanicalVisitor::fwdForceField on a list of BaseForceFields).; The implementation of the function can vary depending on the actual type of the component. Usually, a function executing on different components will access the same data vectors while executing on each component (for example MechanicalVisitor::fwdForceField, calls addForce or addDForce on each component, each one modifying the force vector).; We define a **Parallel Section** as the execution of a given visitor function on a list of components.; We define a **Task** as the execution of a visitor function on a component. Therefore a parallel section is decomposed in an ordered list of tasks.; Each task accesses a given set of vectors (read or write accesses), and a given set of locations in these vectors. We can split the tasks in **phases** such that each phase accesses a subset of the vector locations. To facilitate this, we decompose the vectors into **blocks**, and we look at the vector blocks accessed by each task phase.; Then we can have phases of different tasks that do not accesses the same locations, and so are independent and can run in parallel.; Then we model the dependencies between the tasks phases, and we use the dependency graph to schedule the parallel executions of the phases, keeping the sequential order of the operations. . All the user should have to do is to flag visitors that can be launched in parallel on the components : use a parallel version of Visitor::for_each / for_each_r to enable parallel execution of the components. **Steps performed at runtime:**. 1. Creation of « parallel visitors » using a parallel version of Visitor::for_each functions; - parallel version of for_each starts a parallel section, and creates tasks; - a task is defined as the execution of the visitor function on a component; 2. Execute ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24#issuecomment-330557289:1077,access,accesses,1077,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24#issuecomment-330557289,1,['access'],['accesses']
Security,"tiple components (example : BaseMechanicalVisitor launches MechanicalVisitor::fwdForceField on a list of BaseForceFields).; The implementation of the function can vary depending on the actual type of the component. Usually, a function executing on different components will access the same data vectors while executing on each component (for example MechanicalVisitor::fwdForceField, calls addForce or addDForce on each component, each one modifying the force vector).; We define a **Parallel Section** as the execution of a given visitor function on a list of components.; We define a **Task** as the execution of a visitor function on a component. Therefore a parallel section is decomposed in an ordered list of tasks.; Each task accesses a given set of vectors (read or write accesses), and a given set of locations in these vectors. We can split the tasks in **phases** such that each phase accesses a subset of the vector locations. To facilitate this, we decompose the vectors into **blocks**, and we look at the vector blocks accessed by each task phase.; Then we can have phases of different tasks that do not accesses the same locations, and so are independent and can run in parallel.; Then we model the dependencies between the tasks phases, and we use the dependency graph to schedule the parallel executions of the phases, keeping the sequential order of the operations. . All the user should have to do is to flag visitors that can be launched in parallel on the components : use a parallel version of Visitor::for_each / for_each_r to enable parallel execution of the components. **Steps performed at runtime:**. 1. Creation of « parallel visitors » using a parallel version of Visitor::for_each functions; - parallel version of for_each starts a parallel section, and creates tasks; - a task is defined as the execution of the visitor function on a component; 2. Execute the first time step sequentially, logging/profiling all accesses to vectors; - create parallel sections and task",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24#issuecomment-330557289:1215,access,accessed,1215,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24#issuecomment-330557289,1,['access'],['accessed']
Security,"title says all. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2443:179,Certificate,Certificate,179,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2443,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"tly with python3 interpreter, `<sofa-path>/bin/qt.conf` is not found because Qt looks next to the executable (python3).; With this new qt.conf.h and its function sofa::gui::qt::loadQtConfWithCustomPrefix(), it is possible to force Qt to load the qt.conf we want. qt.conf.h is based on the output of `<qt-path>/bin/rcc qt.conf.qrc -o qt.conf.h` with; - `<qt-path>/bin/rcc`: Qt RCC executable; - `qt.conf.qrc`: file to create next to `<sofa-path>/bin/qt.conf` to overload Qt default search path "":/qt/etc/qt.conf"" ; ```xml; <!DOCTYPE RCC><RCC version=""1.0"">; <qresource prefix=""/qt/etc/"">; <file>qt.conf</file>; </qresource>; </RCC>; ```; - `<sofa-path>/bin/qt.conf`: this file is not in the command but is needed because referenced by qt.conf.qrc. Usage example:; ```cpp; #include <sofa/gui/qt/qt.conf.h>. std::string sofaPrefixAbsolute = sofa::helper::Utils::getSofaPathPrefix();; std::string inputFilepath = FileSystem::cleanPath(sofaPrefixAbsolute + ""/bin/qt.conf"");; bool success = loadQtConfWithCustomPrefix(inputFilepath, sofaPrefixAbsolute);; if(success); {; msg_info(""Sofa.Gui"") << ""Loaded qt.conf from "" << inputFilepath << "" customized with Prefix = "" << sofaPrefixAbsolute;; }; else; {; msg_warning(""Sofa.Gui"") << ""Failed loading and/or customizing qt.conf from "" << inputFilepath;; }; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1820:1542,Certificate,Certificate,1542,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1820,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"to provide a shell with an environment containing all required dependencies to build the project in the usual CMake way; - `nix run`, to start the software. All these commands take an optional path argument, defaulting to the current working directory, but we could also build / develop / run any commit / tag / branch / fork of the project with eg. `nix build github:sofa-framework/sofa`(for master) or `nix run github:nim65s/sofa/58ae0644d117aea880ed284f6cc0beb7e9802f96`. While here, this also setup some CI for this packaging, mostly to detect early:; - if anything new in the repo would break the nix packaging; - if any update from a dependency in upstream [nixpkgs](https://github.com/NixOS/nixpkgs/) would break sofa. But also, a nix binary cache can be set up with eg. https://www.cachix.org/, so that once a commit is build in CI, users & developers can directly use that cache instead of compiling themselves.; (it is also true in the other way: developers with write access to the cache can send their build result to it so that the CI will be instantaneous cache hit). Here is an example of CI build log: https://github.com/nim65s/sofa/actions/runs/11306279152/job/31446709649. PS: I did not test on macos yet, so this is probably a bit early to expect it work. It at least require darwin signatures I guess, I'll try to test that this week, when I can use an apple system. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059:1256,access,access,1256,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059,1,['access'],['access']
Security,"transpose method was missing for matrix3 on device.; Not sure it is the best implementation but it does the job. Will fix PR #2585 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2675:296,Certificate,Certificate,296,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2675,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,type-cstyle-cast.html) | [performance-inefficient-vector-operation](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-vector-operation.html) |; | [cppcoreguidelines-pro-type-member-init](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-member-init.html) | [performance-move-const-arg](https://clang.llvm.org/extra/clang-tidy/checks/performance-move-const-arg.html) |; | [cppcoreguidelines-pro-type-reinterpret-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-reinterpret-cast.html) | [performance-move-constructor-init](https://clang.llvm.org/extra/clang-tidy/checks/performance-move-constructor-init.html) |; | [cppcoreguidelines-pro-type-static-cast-downcast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-static-cast-downcast.html) | [performance-noexcept-move-constructor](https://clang.llvm.org/extra/clang-tidy/checks/performance-noexcept-move-constructor.html) |; | [cppcoreguidelines-pro-type-union-access](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-union-access.html) | [performance-type-promotion-in-math-fn](https://clang.llvm.org/extra/clang-tidy/checks/performance-type-promotion-in-math-fn.html) |; | [cppcoreguidelines-pro-type-vararg](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-vararg.html) | [performance-unnecessary-copy-initialization](https://clang.llvm.org/extra/clang-tidy/checks/performance-unnecessary-copy-initialization.html) |; | [cppcoreguidelines-slicing](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-slicing.html) | [performance-unnecessary-value-param](https://clang.llvm.org/extra/clang-tidy/checks/performance-unnecessary-value-param.html) |; | [cppcoreguidelines-special-member-functions](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-special-member-functions.html) | [readability-avoid-const-params-in-decls](https://clang.llvm.org/extra/clang-tidy/checks/read,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:23870,access,access,23870,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['access'],['access']
Security,"typo, copy-paste is bad m'kay?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2530:195,Certificate,Certificate,195,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2530,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"uginManager from the GUI:; ```; [INFO] [PluginManager] Plugin not found in loaded plugins: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; [ERROR] [SofaPluginManager] plugin should be loaded: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; ```. Now, if you try to load twice the plugins (from differents paths then), it will print:; (one dll is in `build/bin/Release/` and the other one directly in `build/`; ```; [WARNING] [PluginManager] This plugin SofaNonUniformFem has been loaded from a different path, it will certainly lead to bugs or crashes...; You tried to load: ....build/bin/Release/SofaNonUniformFem.dll; Already loaded: ....\build\SofaNonUniformFem.dll; [WARNING] [PluginManager] Plugin SofaNonUniformFem is already loaded from a different path, check you configuration.; ```; The ""double information"" comes from the fact that in the end we consider the plugin as loaded ; the code afterwards will try to load the plugin nevertheless (hence having to detect twice the duplication); In the GUI code for example: https://github.com/sofa-framework/sofa/blob/71691309251177322967f53bc7a024e89c19bcbc/modules/SofaGuiQt/src/sofa/gui/qt/SofaPluginManager.cpp#L120. Obviously it is really not advised to continue to use Sofa if this case occurs but at least the user will know what is going on.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2352:2075,Certificate,Certificate,2075,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2352,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"ulation scale. For example, setting an absolute displacement norm of 1e-5 might seem enough for a liver mesh set in millimetres, but is definitely not adequate for the same liver using this time a mesh scaled in metres. This is a source of user error, and is probably why many FEM software will use relative convergence criteria. The two additional criteria are:. 1. The relative residual norm |R|/|R0| where |R| is the norm of the force vector after the last Newton iteration, and |R0| is the norm of the force vector after the first Newton iteration.; 2. The relative displacement norm |dx|/|U| where |dx| is the norm of the latest solution vector, and |U| is the norm of the sum over all previous solution vectors of the current time step. To remove any confusion between absolute and relative criteria, the convergence data field ""correction_tolerance_threshold"" and ""residual_tolerance_threshold"" were renamed for ""absolute_correction_tolerance_threshold"" and ""absolute_residual_tolerance_threshold"", respectively. Note that to keep a compatibility layer with older scene files, these old data field names are still available, but a deprecated warning is shown to the user, inviting him to update its scene. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/147]. EDIT: Fix #224. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2050:1980,Certificate,Certificate,1980,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2050,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"uldn't be too disturbing. The biggest is probably the fixing done in sofa::helper::vector (have a look at the allowed syntax in the _test""). . CHANGELOG:; - ADD sofa::helper::vector<int> tests validating the different possible syntax ; - ADD sofa::helper::vector<unsigned int> tests validating the different possible syntax ; - FIX sofa::helper::vector<int>::read() so that it reports errors message in case of problem ; - FIX sofa::helper::vector<int>::read() so that there is no more endless loop for some input; - FIX sofa::helper::vector<unsigned int>::read() so that it reports errors message in case of problem ; - FIX sofa::helper::vector<unsigned int>::read() so that there is no more endless loop for some input; - FIX in all tests the ""_OpenIssue"" suffix that I forgot to remove when I fix the tests; - FIX MassSpringLoader to refuse to load a Xsp containing a rigid object and send warning messages. ; - FIX DefaultPipeline that was allowing negative depth attribute. Now it warns the user and set it default value (6).; - FIX DiagonalMass_test that was not checking that some pointer were valid before using them. ; - CHG GenerateRigiMass.inl now sends a warning message instead of an error. ; - FIX DistanceGrid add basic validation of dimensions given to the constructors. Sends a dmsg_warning if they are invalid and returns 0. ; - FIX DistanceGrid rename the attributes' names to match the sofa guidelines. . That's all, ; if merged with #267, #264 and #257 we should have a nearly green dashboard . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label).; - [x] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/271:1378,validat,validation,1378,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/271,1,['validat'],['validation']
Security,"unit Test for FixConstraint class to test topologicalChanges. Fix #1589. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2136:236,Certificate,Certificate,236,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2136,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"updating my branch with most recent sofa branch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1877:212,Certificate,Certificate,212,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1877,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,urity.insecureAPI.mkstemp](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.mkstemp.html) | [modernize-shrink-to-fit](https://clang.llvm.org/extra/clang-tidy/checks/modernize-shrink-to-fit.html) |; | [clang-analyzer-security.insecureAPI.mktemp](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.mktemp.html) | [modernize-unary-static-assert](https://clang.llvm.org/extra/clang-tidy/checks/modernize-unary-static-assert.html) |; | [clang-analyzer-security.insecureAPI.rand](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.rand.html) | [modernize-use-auto](https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-auto.html) |; | [clang-analyzer-security.insecureAPI.strcpy](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.strcpy.html) | [modernize-use-bool-literals](https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-bool-literals.html) |; | [clang-analyzer-security.insecureAPI.vfork](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.vfork.html) | [modernize-use-default-member-init](https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-default-member-init.html) |; | [clang-analyzer-unix.API](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-unix.API.html) | [modernize-use-emplace](https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-emplace.html) |; | [clang-analyzer-unix.Malloc](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-unix.Malloc.html) | [modernize-use-equals-default](https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-equals-default.html) |; | [clang-analyzer-unix.MallocSizeof](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-unix.MallocSizeof.html) | [modernize-use-equals-delete](https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-equals-delete.html) |; | [clang-analyzer-unix.MismatchedDeallocator](https://clang.llv,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:17836,secur,security,17836,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['secur'],['security']
Security,"what I wanted from the start, which was lettingLMDNewProximityIntersection managing the filters, and not the CollisionModel themselves. ; Bonus point, it checks if there is a filter for each collision model and is set to Invalid if not (should not crash then)~~. ~~I really wondered whether or not simply deleting this Intersection (and the associated LMDFilter) as the latest meaningful commits were clearly stating it was a work in progress. But it seems to work so thats why I kept it (and by pity as well).~~. ~~@ChristianDuriez whats your opinion on this component ?~~. EDIT: After a meeting with other sofa-dev guys, it has been decided to totally remove this component from the code base, as there was no example, no test and it was even not working before this PR.; As such, I removed:; - LMDNewProximityIntersection ; - Point/Line/TriangleLocalMinDistanceFilter; - and the newly created example.; I let the headers to inform the eventual unfortunate user that these headers must not been used anymore, and update the ComponentChange list. I have squashed the first commit, so IF ONE DAY, people wants to resurrect this code (which was working in the end), one can just come back to the commit https://github.com/sofa-framework/sofa/pull/2272/commits/0d9a1af8d14b1fa508400b05b83588a9d704e34c. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2272:2170,Certificate,Certificate,2170,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2272,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"win.so' (mach-o file, but is an incompatible architecture (have 'x86_64', need 'arm64e' or 'arm64')); >>> . ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. --- sys.version ---; 3.8.19 (default, Mar 20 2024, 15:27:52) ; [Clang 14.0.6 ]; --- PATH ---; /usr/local/opt/python@3.8/bin/:/opt/anaconda3/envs/sofarl/bin:/opt/anaconda3/condabin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/usr/local/share/dotnet:~/.dotnet/tools; --- SOFA_ROOT ---; /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS; --- PYTHONPATH ---; /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages:/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.12.01_MacOS/plugins/SofaPython3/lib/python3/site-packages:/path/to/SofaPython3/lib/python3/site-packages:; --- sys.path ---; ['', '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages', '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.12.01_MacOS/plugins/SofaPython3/lib/python3/site-packages', '/path/to/SofaPython3/lib/python3/site-packages', '/opt/anaconda3/envs/sofarl/lib/pyth",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4690:3585,secur,security,3585,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4690,1,['secur'],['security']
Security,"wing image (using node stress data):; ![VisualStress04](https://user-images.githubusercontent.com/56633656/234069253-030154aa-f3c1-4bff-9d92-eccffd3dbc45.png); Compared to the visualization with ""_showVonMisesStressPerElement_"", this color map accords more with my intuition of the stress forces (while the feet are pressed).; Therefore, I would like to add a new option ""_showVonMisesStressPerNodeColorMap_"" to show this color map. 2) I would like to add an option ""_showGapBetweenElements_"" to activate/deactivate drawing the gap between the elements, in order to show a smooth color map:; ![VisualStress07](https://user-images.githubusercontent.com/56633656/234069288-96543e38-47f5-44c7-8c3d-f813fe7557cd.png). 3) I would like to add an option ""_showForceField_"" to decide if we draw the forcefield of the current object or not. This will be useful when we have several soft tissues and we want to focus on one of the objects:; ![VisualStress08](https://user-images.githubusercontent.com/56633656/234069316-194be9c0-1abb-4380-a7e0-cad443d74206.png); ![VisualStress09](https://user-images.githubusercontent.com/56633656/234069330-5e07339a-de8b-4ee0-ae73-df787b64ccbc.png). Finally I would like to note that the addition of the new functions does not change the visualization with previous settings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3821:2065,Certificate,Certificate,2065,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3821,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"with compatibility layer, s'il vous plait!. Fix #3378. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3891:218,Certificate,Certificate,218,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3891,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,x7fff2178a000 - 0x7fff21876fff com.apple.LanguageModeling (1.0 - 247.1) <1A05BCD7-232F-3950-936D-EC0F95BA3FB0> /System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling; 0x7fff21877000 - 0x7fff219adfff com.apple.CoreDisplay (231.3 - 231.3) <6DD6A260-800F-3284-842C-8E4CB9EA47FF> /System/Library/Frameworks/CoreDisplay.framework/Versions/A/CoreDisplay; 0x7fff219ae000 - 0x7fff21c24fff com.apple.audio.AudioToolboxCore (1.0 - 1180.25) <DEE2C5BA-BFD1-349F-A10A-B10717BA8F7C> /System/Library/PrivateFrameworks/AudioToolboxCore.framework/Versions/A/AudioToolboxCore; 0x7fff21c25000 - 0x7fff21e0dfff com.apple.CoreText (677.3.0.4 - 677.3.0.4) <9A8DC9A0-1A80-3A26-ACA0-A245D3FFF921> /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText; 0x7fff21e0e000 - 0x7fff224b2fff com.apple.audio.CoreAudio (5.0 - 5.0) <801E2D1E-7EA5-37DA-8F44-B6D7DD3CE5B9> /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio; 0x7fff224b3000 - 0x7fff22804fff com.apple.security (7.0 - 59754.80.3) <B377D7C7-EDB6-3737-B492-E9872F4C6469> /System/Library/Frameworks/Security.framework/Versions/A/Security; 0x7fff22805000 - 0x7fff22a66fff libicucore.A.dylib (66109) <8F8D8A8B-4EE0-3C09-9F45-725A1FBDD38C> /usr/lib/libicucore.A.dylib; 0x7fff22a67000 - 0x7fff22a70fff libsystem_darwin.dylib (1439.40.11) <E016D8F7-C87F-36F8-B8A0-6A61B8E4BACB> /usr/lib/system/libsystem_darwin.dylib; 0x7fff22a71000 - 0x7fff22d58fff com.apple.CoreServices.CarbonCore (1307 - 1307) <B857EADF-D517-34E8-8053-34C0E6695250> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore; 0x7fff22d98000 - 0x7fff22dd2fff com.apple.CSStore (1122.11 - 1122.11) <89992991-8538-380B-B2B8-4EA997CBFDBE> /System/Library/PrivateFrameworks/CoreServicesStore.framework/Versions/A/CoreServicesStore; 0x7fff22dd3000 - 0x7fff22e81fff com.apple.framework.IOKit (2.0.2 - 1845.81.1) <49AC0177-35A3-3C96-AD9D-3E59923C4761> /System/Library/Frameworks/IOKit.framework/Ve,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:20894,secur,security,20894,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['secur'],['security']
Security,"xml2/tree/master, under Z-lib license) which looks to be its successor and best candidate, as it is maintened, well packaged with cmake and available on conda-forge. ; Also, it is compatible for a future ""find package or fetch content"" mechanism in cmake. I don't know if we want to split the implementation of this additional feature for this package in another PR because if we do so, current code would need an additional required dependency to tinyxml2. ; The ""find or fetch"" cmake mechanism for this package, avoiding the requirement for this dependency to be installed, can be implemented as it:. ```; # find or fetch TinyXML2; include(FetchContent); FetchContent_Declare(; tinyxml2; URL https://github.com/leethomason/tinyxml2/archive/refs/tags/9.0.0.tar.gz; FIND_PACKAGE_ARGS NAMES TinyXML2; ); FetchContent_GetProperties(tinyxml2); if(NOT tinyxml2_POPULATED); FetchContent_Populate(tinyxml2). set(tinyxml2_SHARED_LIBS ON CACHE INTERNAL """"). add_subdirectory(${tinyxml2_SOURCE_DIR} ${tinyxml2_BINARY_DIR}); endif(); ```; However, this would required cmake >=3.24 and this call to be at a toplevel cmake (duplicating this code to replace all current calls to `find_package(TinyXML2)` does not seem desirable neither, so we might think also about how we can implement that in the cmake chain).; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4240:1747,Certificate,Certificate,1747,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4240,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"y msg_warn() ""does not support partial_solve"" only at run-time, which means there is no way to know at compile-time that a linear solver does not support partial solving. So I set the partial solving API in an interface (crudely called PartialLinearSolver, name can be gladly changed), and is implemented only by BTDLinearSolver.; As for LinearSolverConstraintCorrection, it will check at construction if the given linearsolver is able to handle partialsolving (by dynamic_cast sadly) and if not, can warn the user that the linear solver is not usable and will be in ""incorrect"" state afterwards, instead of printing ""partial_solve not implemented"" while simulating.... A nice side-effect is that linear solvers libs will be slightly smaller, as all instanciations of all linear solvers (except btd then) do not contain init_partial_solve() and partial_solve() functions anymore. EDIT: it is even worse, linear solvers not implementing partial_solve does a ""msg_info()"" so w/o printLog off, users wont even know why the ConstraintSolver/ConstraintCorrections is not doing its job....; See unit tests on LCPForceFieldback, it is using SparseLDLSolver (not implementing partial_solve) and the tests do not throw any warning, even if it is using LCPConstraintSolver and LinearSolverConstraintCorrection. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3241:1926,Certificate,Certificate,1926,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3241,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"yes, this is the work started in the other issue:. > 1. Depreciate all getXXXMeshTopology for 19.12; > 2. Use explicit SingleLink; > 3. if easy will see to automatically add a SingleLink each time a getXXXMeshTopology is used for the in-between period. 2 and 3 have been done in most components through several PR. 1. is a little late in the planning...; The idea was to keep GetMeshTopology for unset case but as a last solution, and not accessible through the API.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1297#issuecomment-605885366:439,access,accessible,439,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1297#issuecomment-605885366,1,['access'],['accessible']
Security,"~~Last one (?) 🤔~~. #1527 . based on:; - #2813 . Deprecates _**SofaBaseVisual**_, ; Deprecates partially **SofaUserInteraction** and **_SofaGraphComponent_**. Gathers ""general"" configuration settings component in **Sofa.Component.Setting**; and Controller related things in **Sofa.Component.Controller**. The rest of configuration setting was originally present as well, plus the ""performer"" (inciseperformer, addcameraperformer...) but those will be added in a separate Sofa.GUI family modules). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2843:660,Certificate,Certificate,660,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2843,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"~~To push immediately after merging #1734~~. Remove all references to defaulttype::Vec (and helper::fixed_array) and remove all ""deprecation"" messages. Breaking for the same reason with #1730 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1740:357,Certificate,Certificate,357,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1740,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"~~[DEMO]~~. First step for an unified testing system. This module gathers:; - helper/testing files: utilitary to write new tests; - gtest: API Google test (all tests are based on it); - SofaGTestMain (force-load SofaSimulationGraph): template of Main to centralize test-related things. This module needs to be compiled AFTER SofaSimulation, as SofaGTestMain needs SofaSimulationGraph. Unfortunately, there is still the mess with the plugin SofaTest, which needs to be solved as well.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1834:648,Certificate,Certificate,648,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1834,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"~~for thread-safety, and each thread/simu would have its own pool of contact id~~. ~~An other solution would be to put a guard_lock/mutex each time the ids are accessed but it would share the same pool of contact id to the whole set of thread/simu~~. Make the counter of ContactId atomic.; A side effect is to remove the ability to restore previous contactid which was destroyed and set in a side container. I dont think we really need to save some ""ids"" because we will never overrun the 64 bit integer IMO (18446744073709551615 is quite big 🙃); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4582:160,access,accessed,160,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4582,3,"['Certificate', 'access', 'certificate']","['Certificate', 'accessed', 'certificate-of-origin-dco']"
Security,"… into a dedicated plugin. Replaces https://github.com/sofa-framework/sofa/pull/4395. The new PR now complies with the conclusion on the architecture of a plugin, described [in the doc](https://www.sofa-framework.org/community/doc/programming-with-sofa/create-your-plugin/#plugin-architecture). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4487:458,Certificate,Certificate,458,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4487,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"… into a dedicated plugin. The plugin VolumetricRendering needed a bit of cleaning too. The new folder hierarchy is the following:. - SofaCUDA; - VolumetricRendering; - VolumetricRendering; - VolumetricRendering.CUDA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4395:381,Certificate,Certificate,381,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4395,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"…Sofa_Test. #1885 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2144:183,Certificate,Certificate,183,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2144,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"…ion warning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1726:177,Certificate,Certificate,177,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1726,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"⚠! Uber PR incoming! ⚠; (Will basically conflict every time a branch is merged 🤪) . This PR generalizes the use of the Sofa.Type module (with things formerly in SofaHelper, SofaDefaulttype and SofaCore).; E.g:; - helper::fixed_array becomes type::fixed_array; - defaulttype::Vec becomes type::Vec; - defaulttype::Quat and helper::Quater becomes type::Quat (and typedef *Quaternion* is removed); - helper::types::RGBAColor becomes type::RGBAColor; - and many more; More info in #1521 . These renames was handled in Sofa.Compat to be the less problematic possible while converting.; Now for the release of v21.06, it is logical to use the correct namespaces/headers. Big Warning though: the Sofa.Compat is still here for the external plugins, but as the headers/file inclusions changes, it is highly probable that they will break at compilation: a lot of people does not ""include what they use"" and what relying on the previous inclusions. Later TODO: add a cmake option to make the use of Sofa.Compat optional. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2179:1173,Certificate,Certificate,1173,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2179,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Security,"⚠️ DO NOT MERGE ! ⚠️ . The CI only compiles in debug for one configuration and only when a commit is done on the master.; AND a lot of failures just happen because of timeouts. So the readings are uncomfortable, to say the least. So This PR simply enable assertions in release mode (overriding the flags) and should show where the assertions happen,. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4496:514,Certificate,Certificate,514,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4496,2,"['Certificate', 'certificate']","['Certificate', 'certificate-of-origin-dco']"
Testability," #1527. ## What; SofaHelper, SofaDefaulttype, SofaCore and SofaSimulationCore does not respect the new naming convention (following namespace, etc). So this PR renames those 4 modules:; - SofaHelper ▶ Sofa.Helper; - SofaDefaulttype ▶ Sofa.Defaulttype; - SofaCore ▶ Sofa.Core; - SofaSimulationCore ▶ Sofa.SimulationCore (this one will need more work for the namespaces etc). This PR does not rename physically the folders, I preferred split the renaming in two steps (and have a less chaotic git history). ## Breaking?; Nope, thanks to the Alias system in CMake (I would have not bet on that at the beginning 😗); I could compile SofaPy3 out-of-tree without changing anything. I added some compatibility for the previous cmake macro/variables in the config.h (e.g SOFAHELPER_HAVE_BOOST instead of the new variable SOFA_HELPER_HAVE_BOOST).; These variables are not used at all in the code base of SOFA but some users might use them in their external plugins?. Actually, it could break projects using directly SofaHelper(&co) directly, i.e not handling CMake target but library names directly. (but people should not do that 🤥). Tested with an out-of-tree build of SofaPy3. ## After; Once everything is done, and once things are calming down in the SofaFramework, the folders themselves can be renamed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2001:1236,Test,Tested,1236,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2001,3,"['Test', 'test']","['Tested', 'test']"
Testability," () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext:Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). KeyNotFoundException: The given key '4' was not present in the dictionary.; System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item (TKey key) (at <eef08f56e2e042f1b3027eca477293d9>:0); SofaUnityAPI.SofaContextAPI.loadScene (System.String filename) (at Assets/SofaUnity/Plugins/SofaUnityAPI/SofaContextAPI.cs:189); SofaUnity.SofaContext.ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:486); SofaUnity.SofaContext.Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext.StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext.Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent(Int32, IntPtr, Boolean&). Start: 'VisualEye'; UnityEngine.Debug:Log (object); SofaVisualModel:Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:65). NullReferenceException: Object reference not set to an instance of an object; SofaVisualModel.UpdateMesh () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:129); SofaVisualModel.Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:99). Start: 'VisualCornea'; UnityEngine.Debug:Log (object); SofaVisualModel:Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:65). NullReferenceException: Object reference not set to an instance of an object; SofaVisualModel.UpdateMesh () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:129); SofaVisualModel.Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:99). Start: 'VisualBody'; UnityEngine.Debug:Log (object); SofaVisualModel:Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:65). NullReferenceException: Object reference not set to an instance of an object; So",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4156:1872,Log,Log,1872,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4156,2,['Log'],['Log']
Testability," - Minor cleaning such as namespace concatenation, ... # Fix absence of collision response with stationary object; The contact with stationary objects are supposed to be handled by the collision pipeline before creating groups with the group manager. In the group manager, it supposes all the objects in contacts are associated with an ODE solver (since they cannot be stationary). Actually, the collision pipeline check if an object is stationary based on the value of `isSimulated()`. It means it's up to the user to set this Data. If it not done, the object is considered moving and goes to the group manager. The ODE solver is not found, so it is skipped:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L91; And collision response is not created.; In this PR, this case is not skipped and a collision response is created. A scene test has been added to check collision is working with a stationary object. # Fix freeze; This freeze happened before #2047.; It is due to an infinite loop here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L235; This happened because a map was not updated after some merge operations. And we relied on the value in the map, for example here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L137. # Fix crash detected in #2047. ## Before #2047; The scene freezes always at the same time. In #2067 I explain that the simulation is deterministic. Now that the freeze is fixed, we can notice a crash still occurs, but after the time step of the freeze. ## After #2047 ; A crash occurs, but not always at the same time step. This is because the simulation is no longer d",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2076:1959,test,test,1959,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2076,1,['test'],['test']
Testability," ------------------------------------------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 38.3 us 38.3 us 18336; BM_NarrowPhaseDetection_getDetectionOutputs/16 234 us 234 us 3010; BM_NarrowPhaseDetection_getDetectionOutputs/32 1373 us 1373 us 506; BM_NarrowPhaseDetection_getDetectionOutputs/64 8055 us 8056 us 88; BM_NarrowPhaseDetection_getDetectionOutputs/128 45349 us 45348 us 15; BM_NarrowPhaseDetection_getDetectionOutputs/256 243190 us 243189 us 3; ```; The benchmarks were performed using https://github.com/alxbilger/SofaBenchmark.; `BM_NarrowPhaseDetection_getDetectionOutputs/n` corresponds to a map containing `n^2` pairs of `CollisionModel*`. ## Discussion. It is undeniable that `std::map` and `std::unordered_map` are faster than `sofa::helper::map_ptr_stable_compare`. However, I don't know how crucial it is to have this kind of map with a dedicated comparator. Is this feature necessary? If not, I am in favour of using `std::unordered_map` wherever `sofa::helper::map_ptr_stable_compare` is used, for performances reasons. Overall, we won't get a huge gain of fps, but still it has an impact on the peformances of `NarrowPhaseDetection`. Initially, I wondered why `NarrowPhaseDetection` took so much time for so simple instructions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2047:3683,test,test,3683,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2047,2,['test'],['test']
Testability," 1 0 0 0 0 0 0.02 ..BehaviorUpdatePositionVisitor; 2 0 1 0 0 0 0 0 0.03 ..UpdateInternalDataVisitor; 2 0 1 2.98 8 3.70 0.49 3.70 99.29 ..AnimateVisitor; 3 0.01 1 2.98 8 3.70 0.49 3.70 99.22 ...Mechanical; 4 0.01 1 0.06 0.41 0.07 0.01 0.07 1.83 ....ComputeForce; 4 0.08 1 0.05 0.17 0.05 0.01 0.05 1.36 ....ComputeRHTerm; 4 0.13 1 1.05 4.28 1.37 0.28 1.37 36.71 ....MBKBuild; 5 0.13 1 1.05 4.28 1.37 0.28 1.37 36.64 .....CG-setSystemMBKMatrix; 4 1.50 1 1.78 5.49 2.19 0.29 2.19 58.87 ....MBKSolve; 5 1.51 1 1.77 5.44 2.18 0.29 2.18 58.39 .....CG-Solve; ```. CompressedRowSparseMatrixMat3x3d is faster because it manipulates blocks of 3x3, which is the best strategy in this case. Unfortunately, Eigen manipulates scalars only.; To be fair, EigenSparseMatrixd must be compared to CompressedRowSparseMatrixd. We notice a slight speed up with EigenSparseMatrixd . I wanted to use Eigen::BlockSparseMatrix to have blocks of 3x3, but as an unsupported module, it does not compile with Eigen 3.4. I increased the resolution of the grid: MBKBuild becomes slower than CompressedRowSparseMatrixd, and MBKSolve stays faster than CompressedRowSparseMatrixd. Due to the slow down in MBKBuild, EigenSparseMatrixd is not very interesting in this example. I'll continue my investigations on the use of these wrappers. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2794:4286,test,test,4286,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2794,2,['test'],['test']
Testability," 2.59 ns 2.55 ns 263529412; BM_Data_ReadAccessor_ExplicitConversion<sofa::type::vector<int>>/100000 2.60 ns 2.61 ns 263529412; BM_Data_ReadAccessor_ExplicitConversion<sofa::type::vector<int>>/1000000 2.64 ns 2.68 ns 280000000; BM_Data_ReadAccessor_ExplicitConversion<sofa::type::vector<sofa::type::Vec3>>/10000 2.81 ns 2.76 ns 248888889; BM_Data_ReadAccessor_ExplicitConversion<sofa::type::vector<sofa::type::Vec3>>/100000 2.85 ns 2.83 ns 248888889; BM_Data_ReadAccessor_ExplicitConversion<sofa::type::vector<sofa::type::Vec3>>/1000000 2.86 ns 2.83 ns 248888889; BM_Data_ReadAccessor_StarOperatorConversion<int> 2.66 ns 2.67 ns 263529412; BM_Data_ReadAccessor_StarOperatorConversion<sofa::type::vector<int>>/10000 2.64 ns 2.67 ns 263529412; BM_Data_ReadAccessor_StarOperatorConversion<sofa::type::vector<int>>/100000 2.59 ns 2.55 ns 263529412; BM_Data_ReadAccessor_StarOperatorConversion<sofa::type::vector<int>>/1000000 2.57 ns 2.57 ns 280000000; BM_Data_ReadAccessor_StarOperatorConversion<sofa::type::vector<sofa::type::Vec3>>/10000 2.80 ns 2.83 ns 248888889; BM_Data_ReadAccessor_StarOperatorConversion<sofa::type::vector<sofa::type::Vec3>>/100000 3.03 ns 2.95 ns 248888889; BM_Data_ReadAccessor_StarOperatorConversion<sofa::type::vector<sofa::type::Vec3>>/1000000 2.81 ns 2.78 ns 235789474; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2583:6609,test,test,6609,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2583,2,['test'],['test']
Testability," 24.88 1 0 0.02 0 0 0 0 ......J2tKJ2-copy; 6 24.88 1 0.01 0.04 0.01 0 0.01 0.02 ......J1tKJ2-copy; 6 24.90 1 0.01 0.07 0.02 0 0.02 0.04 ......J2tKJ1-copy; ```. The speed up is quite disappointing. But the benchmarks explain it. The speed up depends on the size of the matrix, the sparsity and overall on the size of the intersection.; Yet, there is a speedup. And compared to the reference timings before the series of optimizations (https://github.com/sofa-framework/sofa/pull/2362), `MechanicalMatrixMapper` is about twice faster (in the example). Some notes:. - I added a skeleton to also support product of `CompressedRowSparseMatrix`, but it is not implemented yet. In `MechanicalMatrixMapper`, a `CompressedRowSparseMatrix` is converted to Eigen to do the product. It is not clear yet if the copy to Eigen is required if we are able to perform the fast product on a `CompressedRowSparseMatrix`. So, an implementation of the fast product of `CompressedRowSparseMatrix` may be introduced in the future. Otherwise, I'll remove the files.; - This work has been started by @Esther-R during her internship; - Contrary to the regular product, the product using the intersection can be parallelized for more speed up.; - More speed up in `MechanicalMatrixMapper` using multithreading can be considered. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2394:5016,test,test,5016,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2394,2,['test'],['test']
Testability," 3 unit tests.; [INFO] [PythonTestExtractor] File 'BaseLink.py' loaded with 11 unit tests.; [INFO] [PythonTestExtractor] File 'BaseObject.py' loaded with 12 unit tests.; [INFO] [PythonTestExtractor] File 'Controller.py' loaded with 7 unit tests.; [INFO] [PythonTestExtractor] File 'ForceField.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'FileRepository.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Message.py' loaded with 2 unit tests.; [INFO] [PythonTestExtractor] File 'Node.py' loaded with 26 unit tests.; [INFO] [PythonTestExtractor] File 'Simulation.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'RGBAColor.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Vec3.py' loaded with 4 unit tests.; [INFO] [PythonTestExtractor] File 'BoundingBox.py' loaded with 5 unit tests.; [==========] Running 120 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 120 tests from SofaPython3/Sofa; [INFO] [SofaPython3] Initializing with python version 3.8.6 (default, Oct 27 2020, 09:13:12) ; [GCC 9.3.1 20200408 (Red Hat 9.3.1-2)]; [INFO] [SofaPython3] Shared library name is 'libpython3.8m.so'; [ RUN ] SofaPython3/Sofa.all_tests/0_Sofa_Core_Base_test_addExistingDataAsParentOfNewData; ----------------------------------------------------------------------; Ran 1 test in 0.000s. OK; [ OK ] SofaPython3/Sofa.all_tests/0_Sofa_Core_Base_test_addExistingDataAsParentOfNewData (2 ms); [ RUN ] SofaPython3/Sofa.all_tests/1_Sofa_Core_Base_test_addKeywordProtected; ----------------------------------------------------------------------; Ran 1 test in 0.001s. OK; [ OK ] SofaPython3/Sofa.all_tests/1_Sofa_Core_Base_test_addKeywordProtected (1 ms); [ RUN ] SofaPython3/Sofa.all_tests/2_Sofa_Core_Base_test_addNewDataFromParent; ======================================================================; ERROR: test_addNewDataFromParent (Base.Test); --------------------------------------------------------------",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796:4218,test,tests,4218,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796,1,['test'],['tests']
Testability," 85!809@63043915; 3 	 9.90	 0.30	 0 	 0 	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: 3@$$%7#90620#1@; 3 	 9.90	 0.30	 0 	 0.02	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: $6635#@9%@01449; 3 	 9.90	 0.30	 0 	 0 	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: 0$%3@43%672$7@2; 4 	 9.95	 0.61	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: triangleCollisionModel2-lineCollisionModel3; 4 	 9.96	 0.61	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: lineCollisionModel2-lineCollisionModel3; 4 	 9.96	 0.61	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: lineCollisionModel3-pointCollisionModel2; 3 	 9.98	 0.30	 0 	 0 	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: #%#0#443865$42#; 3 	 9.98	 0.30	 0 	 0 	 0 	 0 	 0 	 0.01	...BoundingBoxVisitor - ProcessTopDown: 9$@$$8293@70939; 3 	 10.06	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: 9$@$$8293@70939; 3 	 10.06	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: #%#0#443865$42#; 3 	 10.07	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: 0$%3@43%672$7@2; 3 	 10.07	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: $6635#@9%@01449; 3 	 10.07	 0.30	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessBottomUp: 3@$$%7#90620#1@. ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089:35218,test,test,35218,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089,2,['test'],['test']
Testability," <MechanicalObject name=""rp"" rest_position=""@p.position"" />; <MechanicalObject name=""rep"" reset_position=""@p.position"" />; <MechanicalObject name=""rev"" reset_velocity=""@p.position"" />; <MechanicalObject name=""dx"" derivX=""@p.position"" />; </Node>; ```; Before PR:; ```; [WARNING] [MechanicalObject(p)] Writing to State vector position(V_COORD) with incorrect size : 4 != 1; [WARNING] [MechanicalObject(v)] Writing to State vector velocity(V_DERIV) with incorrect size : 4 != 1; [WARNING] [MechanicalObject(f)] Writing to State vector position(V_COORD) with incorrect size : 4 != 1; [WARNING] [MechanicalObject(rp)] Accessing State vector restPosition(V_COORD) with incorrect size : 4 != 1; [WARNING] [MechanicalObject(rp)] Accessing State vector restPosition(V_COORD) with incorrect size : 4 != 1; [WARNING] [MechanicalObject(rep)] Writing to State vector resetPosition(V_COORD) with incorrect size : 4 != 1; [WARNING] [MechanicalObject(fp)] Writing to State vector freePosition(V_COORD) with incorrect size : 4 != 1; [WARNING] [MechanicalObject(fv)] Writing to State vector freeVelocity(V_DERIV) with incorrect size : 4 != 1; [WARNING] [MechanicalObject(rep)] Accessing State vector resetPosition(V_COORD) with incorrect size : 4 != 1; [WARNING] [MechanicalObject(rev)] Accessing State vector resetVelocity(V_DERIV) with incorrect size : 4 != 1; ```; After PR:; ```; [WARNING] [MechanicalObject(f)] One or more of the state vectors passed as argument don't match the size of the others : position(size 4) force(size 3) ; ```. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/406:2406,test,test,2406,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/406,2,['test'],['test']
Testability," Adding collection SofaGeneralRigid; Adding collection SofaGeneralSimpleFem; Adding collection SofaGeneralTopology; Adding collection SofaTopologyMapping; Adding collection SofaUserInteraction; Adding collection SofaConstraint; Adding collection SofaGeneralLoader; Adding collection SofaExporter; Adding collection SofaSparseSolver; Adding collection SofaPreconditioner; Adding collection SofaDenseSolver; Adding collection SofaNonUniformFem; Adding collection SofaOpenglVisual; Adding collection SofaMiscTopology; Adding collection SofaMiscExtra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; CMake Error at applications/plugins/SofaPython3/CMakeLists.txt:114 (find_package):; Could not find a package configuration file provided by ""pybind11""; (requested version 2.3) with any of the following names:. pybind11Config.cmake; pybind11-config.cmake. Add the installation prefix of ""pybind11"" to CMAKE_PREFIX_PATH or set; ""pybind11_DIR"" to a directory containing one of the above files. If; ""pybind11"" provides a separate development package or SDK, be sure it has; been installed. Configuring incomplete, errors occurred!; See also ""/home/giangnguyen/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/giangnguyen/sofa/build/CMakeFiles/CMakeError.log"".; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:7471,log,log,7471,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062,2,['log'],['log']
Testability," CompressedRowSparseMatrix . I renamed all the **bloc** words to **block** as well. The previous CRSMatrix could be used as a BaseMatrix (solvers), ConstraintMatrix (iterations) and as a pure CRS itself.; This new CRSMatrix is decomposed in several types:; - CRSGeneric (name to be changed maybe): the pure CRS structure; - CRSMechanical: inheriting/implementing BaseMatrix; - (in a next PR) CRSConstraintMatrix, with the same API as the old CRSMatrix used for ConstraintMatrices (for iterating). Different purposes need different traits (some case would prefer autocompression, etc), so a lot of compile-time options are present. They are called policy.; I needed to change some flags from the Insimo's version to have the same behavior for the tests. So in the future, it could be interesting to see if those changes should be integrated later for more performance (but the tests would need to be changed). For compatibility reasons, the old ""CRSMatrix"" type is an alias on CRSMechanical. In this PR, no change of performance is noted (neither regression or upgrade). Tested on caduceus, TorusFall, solvers scenes and BeamAdapter's 3instruments_collis.scn. Ref:; - https://github.com/InSimo/ISSofa/blob/issofa/framework/sofa/defaulttype/CompressedRowSparseMatrix.h. Courtesy of Insimo (@fjourdes ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3515:1531,Test,Tested,1531,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3515,3,"['Test', 'test']","['Tested', 'test']"
Testability," Configure cmake to compile SOFA_CUDA plugin. **Expected behavior**; It should link properly against the CudaHexahedronFEMForceField.cpp.o file. ---------------------------------------------. ### Environment. **Context**. - System: < Ubuntu 22.04 >; - Version of SOFA: < git tag v22.12 >; - State: < ""Build directory"" >. **Command called**. ```txt. make -j20. ```. **Env vars**. ```txt. #################; --- sys.version ---; 3.10.6 (main, Nov 14 2022, 16:10:14) [GCC 11.3.0]; --- PATH ---; /home/create/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin; --- SOFA_ROOT ---; --- PYTHONPATH ---; --- sys.path ---; ['', '/usr/lib/python310.zip', '/usr/lib/python3.10', '/usr/lib/python3.10/lib-dynload', '/home/create/.local/lib/python3.10/site-packages', '/usr/local/lib/python3.10/dist-packages', '/usr/lib/python3/dist-packages']; #################; create@create-AMX-X57. ```. ---------------------------------------------. ### Logs. **Output from make**. ```; ...; [ 89%] Linking CXX shared library ../../../lib/libSofaCUDA.so; /usr/bin/ld: CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/CudaHexahedronFEMForceField.cpp.o: in function `sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField<sofa::gpu::cuda::CudaVectorTypes<sofa::gpu::cuda::Vec3r1<float>, sofa::gpu::cuda::Vec3r1<float>, float> >::HexahedronFEMForceField()':; CudaHexahedronFEMForceField.cpp:(.text._ZN4sofa9component14solidmechanics3fem7elastic23HexahedronFEMForceFieldINS_3gpu4cuda15CudaVectorTypesINS6_6Vec3r1IfEES9_fEEEC1Ev[_ZN4sofa9component14solidmechanics3fem7elastic23HexahedronFEMForceFieldINS_3gpu4cuda15CudaVectorTypesINS6_6Vec3r1IfEES9_fEEEC1Ev]+0x269): undefined reference to `sofa::core::behavior::ForceField<sofa::gpu::cuda::CudaVectorTypes<sofa::gpu::cuda::Vec3r1<float>, sofa::gpu::cuda::Vec3r1<float>, float> >::ForceField(sofa::core::behavior::MechanicalState<sofa::gpu::cuda::CudaVectorTypes<sofa::gpu::cuda::Vec3r1<float>, sofa::gpu",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3726:1197,Log,Logs,1197,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3726,1,['Log'],['Logs']
Testability," MAX MEAN DEV TOTAL PERCENT ID; 6 1.03 1 10.91 18.91 12.14 1.17 12.14 88.05 ......projectMappedMatrices; 7 2.95 1 2.09 4 2.38 0.26 2.38 17.25 .......copyToBaseMatrix; 7 5.33 1 0.01 0.04 0.01 0 0.01 0.09 .......fullRows. ```. #### Speedup. Speed up of x1.4 on the timer `projectMappedMatrices`. The bottleneck is now in the computation of `J^T * K * J`. # MatrixLinearSystem.scn (1000 time steps). #### Before. ```; [INFO] [BatchGUI] 1000 iterations done in 17.5332 s ( 57.0347 FPS).; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 7.28 2 0.06 13.43 2.26 2.27 4.52 31.65 ......projectMappedMatrices; 7 8.28 12 0 0.54 0.03 0.04 0.34 2.35 .......copyToBaseMatrix; 7 8.37 12 0 0.23 0.02 0.02 0.21 1.48 .......fullRows; ```. #### After. ```; [INFO] [BatchGUI] 1000 iterations done in 16.4943 s ( 60.6268 FPS). ; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 7.11 2 0.04 12.74 1.94 1.95 3.89 28.81 ......projectMappedMatrices; 7 8.13 12 0 0.14 0.01 0.02 0.18 1.32 .......copyToBaseMatrix; 7 8.17 12 0 0.05 0 0 0 0.02 .......fullRows; ```. ### Conclusion. In both scenes, the timer `fullRows` is almost at zero because the functions `copyNonZeros` already produces a compressed matrix. In addition, the timer `copyToBaseMatrix` is faster. FYI @olivier-goury @VannesteFelix ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4443:3274,test,test,3274,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443,2,['test'],['test']
Testability," Now, `x`, `y`, `z` and `w` are compiled conditionally. Other methods, such as `Identity`, `transpose` etc, are also concerned for squared matrices. The `static_assert` are therefore no longer useful. . `Identity` has been changed so it is `static constexpr` and it returns a reference. So there is no need to compute the identity matrix each time it is called. `s_identity` is now deprecated. The static variable is now included in the `Identity` method. It is better for static initialization fiasco and required for a `constexpr` context. Also, `s_identity` does not make sense for rectangular matrices. Since it is not possible to conditionally add a class member, it is hidden in the conditionally compiled method `Identity`. In `fixed_array`, the `operator<` is moved out of the class. This allows to compile this operator only when used, and not in explicit instantiations. This is necessary because the operator on `fixed_array<Vec3>` is not implemented (and does not make sense). The 3x3 matrix product and the `multTranspose` operation are specialized for a speedup. https://github.com/alxbilger/SofaBenchmark was used. Results show that this implementation is closer to the Eigen implementation. Unit tests are added. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/302]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3280:1378,test,tests,1378,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280,3,['test'],"['test', 'tests']"
Testability," SimType = typename sofa::defaulttype::Vec2Types;; static constexpr int SimSize = 2;; using Coord = typename SimType::Coord;; using Deriv = typename SimType::Deriv;; using VecCoord = typename SimType::VecCoord;; using VecDeriv = typename SimType::VecDeriv;; using MatrixDeriv = typename SimType::MatrixDeriv;; using DataVecCoord = typename sofa::Data<VecCoord>;; using DataVecDeriv = typename sofa::Data<VecDeriv>;; using DataMatrixDeriv = typename sofa::Data<MatrixDeriv>;. using Point = Eigen::Vector2d;; };; } // namespace Sim2D. } // namespace VNCS; ```. ```; #include <SofaBaseMechanics/MechanicalObject.h>; #include <SofaBaseMechanics/MechanicalObject.inl>. namespace VNCS; {; namespace Sim2D; {; using MO = sofa::component::container::MechanicalObject<VNCS::Sim2D::Kernel::SimType>;. } // namespace Sim2D; } // namespace VNCS; ```. ```; #include <gtest/gtest.h>; #include <VNCS/2D/MechanicalObject.h>. TEST(MechanicalObject, 2D); {; // Create a Clustering matrix; auto mo = sofa::core::objectmodel::New<VNCS::Sim2D::MO>();; // mo->resize(10);; // auto positions = mo->readPositions();. // EXPECT_EQ(positions.size(), 10);; }; ```; My linking line is the following:. ```; 2/2 0.4/sec] Linking CXX executable bin/tst_mechanicalobject; FAILED: bin/tst_mechanicalobject ; : && /usr/bin/c++ -O3 -DNDEBUG tests/MechanicalObject/CMakeFiles/tst_mechanicalobject.dir/tst_mechanicalobject.cpp.o -o bin/tst_mechanicalobject -Wl,-rpath,/opt/libs/sofa/build/install/lib /opt/libs/sofa/build/install/lib/libSofaBaseTopology.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaSimulationCommon.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaSimulationCore.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaCore.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaDefaultType.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaHelper.so.20.06.99 /usr/lib/libGLU.so /usr/lib/libGLX.so /usr/lib/libOpenGL.so /usr/lib/libGLEW.so /usr/lib/libboost_system.so.1.75.0 /usr/lib/libboost_filesystem.so.1.75.0 /",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1752:1078,TEST,TEST,1078,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1752,1,['TEST'],['TEST']
Testability," TestCase.; [INFO] [PythonTestExtractor] File 'Base.py' loaded with 10 unit tests.; [INFO] [PythonTestExtractor] File 'PythonRestShapeForceField.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'BaseData.py' loaded with 29 unit tests.; [INFO] [PythonTestExtractor] File 'DataEngine.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'BaseLink.py' loaded with 11 unit tests.; [INFO] [PythonTestExtractor] File 'BaseObject.py' loaded with 12 unit tests.; [INFO] [PythonTestExtractor] File 'Controller.py' loaded with 7 unit tests.; [INFO] [PythonTestExtractor] File 'ForceField.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'FileRepository.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Message.py' loaded with 2 unit tests.; [INFO] [PythonTestExtractor] File 'Node.py' loaded with 26 unit tests.; [INFO] [PythonTestExtractor] File 'Simulation.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'RGBAColor.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Vec3.py' loaded with 4 unit tests.; [INFO] [PythonTestExtractor] File 'BoundingBox.py' loaded with 5 unit tests.; [==========] Running 120 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 120 tests from SofaPython3/Sofa; [INFO] [SofaPython3] Initializing with python version 3.8.6 (default, Oct 27 2020, 09:13:12) ; [GCC 9.3.1 20200408 (Red Hat 9.3.1-2)]; [INFO] [SofaPython3] Shared library name is 'libpython3.8m.so'; [ RUN ] SofaPython3/Sofa.all_tests/0_Sofa_Core_Base_test_addExistingDataAsParentOfNewData; ----------------------------------------------------------------------; Ran 1 test in 0.000s. OK; [ OK ] SofaPython3/Sofa.all_tests/0_Sofa_Core_Base_test_addExistingDataAsParentOfNewData (2 ms); [ RUN ] SofaPython3/Sofa.all_tests/1_Sofa_Core_Base_test_addKeywordProtected; ----------------------------------------------------------------------; Ran 1 test in 0.001s. OK; [ OK ] SofaPython3/Sofa.all_tes",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796:3947,test,tests,3947,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796,1,['test'],['tests']
Testability," ZLIB; - Added to SofaMiscFem: Newmat; - SofaGeneral; - Added to SofaDenseSolver: Newmat; - Added to SofaGeneralLoader: ZLIB; - SofaGui; - Moved to SofaGuiQt: Qt + lots of options about QtViewer, QGLViewer, VSync, ...; - Modularized modules (oh yeah); - SofaPreconditioner: removed Newmat, added SofaSparseSolver; - SofaExporter: added ZLIB; - Plugins; - SofaMiscCollision: added SofaDistanceGrid; - SofaImplicitField: added SofaPython; - Registration: removed SofaOpenglVisual; - image: added ZLIB; - Flexible: added SofaPython. ## Rework all YYY_HAVE_XXX variables to reduce their scope. This is important for future global modularization of SOFA. - Variables are now named upon their module. . - Whenever you need to use the YYY_HAVE_XXX of another module, you surely should declare your own MYMODULE_HAVE_XXX instead. - All those new YYY_HAVE_XXX variables are booleans, so they can be used in CMake with `if(YYY_HAVE_XXX)` and in C++ (if correcly propagated via a config.h.in file) with `#if YYY_HAVE_XX` or `if(YYY_HAVE_XXX)`. - Add sofa_find_package and sofa_set_bool macros to auto create YYY_HAVE_XXX variables. - Edit sofa_install_targets to call `configure_file()` on any *.h.in found in target sources (the sources that are given to `add_library()`). :warning: Here is a quick tuto about [how to correctly add and propagate a dependency](https://gist.github.com/guparan/0b0ed00ad60b740f85b794cdff255229). ## Rework #1121 to avoid nested projects. - Use SOFA_NO_OPENGL to build an OpenGL-free version of SofaGuiQt. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1137:2257,test,test,2257,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1137,2,['test'],['test']
Testability, [PluginFinder] Found 132 files with warning:; examples\Benchmark\Analysis\constantMomentum.scn; examples\Benchmark\Performance\benchmark_cubes.scn; examples\Benchmark\Performance\BuildLCP\BuiltConstraintCorrection.scn; examples\Benchmark\Performance\BuildLCP\NonBuiltConstraintCorrection.scn; examples\Benchmark\TopologicalChanges\AffineMovementConstraint__RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\FixedConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\FixedPlaneConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\LinearMovementConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectDirectionConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectToLineConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectToPlaneConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectToPointConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\TriangularBendingSprings_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\TriangularFEMForceField_RemovingMeshTest.scn; examples\Components\constraint\AffineMovementConstraint.scn; examples\Components\constraint\AffineMovementConstraint3D.scn; examples\Components\constraint\AttachConstraintMatrix.scn; examples\Components\constraint\BilateralInteractionConstraint_PGS.scn; examples\Components\constraint\BilinearConstraint.scn; examples\Components\constraint\BilinearConstraint3D.scn; examples\Components\constraint\HermiteSplineConstraint.scn; examples\Components\constraint\NonBuiltConstraintCorrection.scn; examples\Components\constraint\PatchTestConstraint.scn; examples\Components\constraint\ProjectToPlaneConstraint.scn; examples\Components\engine\DisplacementMatrixEngine.scn; examples\Components\engine\GenerateCylinder.scn; examples\Components\engine\GenerateGrid.scn; examples\Components\engine\GenerateRigidMass.scn; examples\Components\engine\MergePoints.scn; examples\Compone,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3352:2068,Benchmark,Benchmark,2068,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3352,1,['Benchmark'],['Benchmark']
Testability," ```; ########## SIG 6 - SIGABRT: usually caused by an abort() or assert() ##########; sofa::helper::BackTrace::sig(int); pthread_kill; raise; abort; free; std::__new_allocator<int>::deallocate(int*, unsigned long); std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long); std::_Vector_base<int, std::allocator<int> >::~_Vector_base(); std::vector<int, std::allocator<int> >::~vector(); sofa::type::vector<int, sofa::type::CPUMemoryManager<int> >::~vector(); sofa::linearalgebra::CompressedRowSparseMatrixGeneric<double, sofa::linearalgebra::CRSMechanicalPolicy>::~CompressedRowSparseMatrixGeneric(); sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy>::~CompressedRowSparseMatrixMechanical(); void std::_Destroy<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> >(sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy>*); std::_Sp_counted_ptr_inplace<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy>, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose(); std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release(); std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count(); std::__shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr(); std::shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> >::~shared_ptr(); std::pair<sofa::core::behavior::BaseMechanicalState* const, std::shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> > >::~pair(); std::_Rb_tree<sofa::core::behavior::BaseMechanicalState*, std::pair<sofa::core::b",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105:129,assert,assert,129,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105,1,['assert'],['assert']
Testability," an existing ""Intersection"", e.g MinProximityIntersection and MeshMinProximityIntersection, which add triangles, etc methods to MinProximityIntersection. Note that even if it is called ""Intersection"" it is not a ""Intersection"" 🤪; There is kind of mechanism with a IntersectorCreator/IntersectorFactory which does the ""plugin"" automatically.; The problem is that the intersector gets a pointer to its intersection at the load-time (when the dll is loaded).; The intersector needs the intersection to get alarm/contact distance (defined for all Intersection) or custom parameters (useSurfaceNormal for MinProximityIntersection). **Consequence:** if there are multiple simulation (in multiple thread) in the same time, a different thread will get a pointer to an other Intersection while doing its intersect code. In the end, this PR modifies all the intersect/canIntersect functions to get the intersection method (as if they were static functions in reality) and avoid race conditions. The pipeline needs also to be modified. [The first version of this branch was using a IntersectionParameters storing alarm, contact distance and given as const ref, but it could not handle custom parameters]. Still need to be done:; - ~~compat/warnings, etc~~; - all broad/narrow phases to be modified (further PR). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4583:2172,test,test,2172,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4583,2,['test'],['test']
Testability, are the location of the failure in Sofa_test.cpp:lineno; /// This is why it is always better to explicitely specify the test behavior (possible the same as ; /// the default one as it will report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void complexTestBehavior(); {; /// Here is the default mode. ; ....; {; /// We will report a failure is there no warning nor error emitted before the end of this block. ; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;; ...; { ; /// But this sub-part does not count... and it shouldn't emit a message. ; EXPECT_MSG_NOEMIT(Error) ;; .... ; }; }; }; ```. This PR will generate a lot of new test failure... that are either real failure that deserve investigation or ; tests that was previously simply previously ignoring error & warning messages; . CHANGELOG for @hugtalbot & @guparan :; - TestMessageHandler.cpp implements a new & robust way to connect msg_* message to test failure ; - TestMessageHandler_test.cpp implements test for TestMessageHandler. ; - Sofa_test is updated to use the new TestMessageHandler where msg_error generates test failures ; - All the existing tests have been changed to use the new API & removed the old one. ; - MeshSTL.cpp replace a std:cerr by a msg_error so that FIX the corresponding failing test.; - Message.cpp adds a way to convert message type to string.; - updates externs/gtest to a fresh checkout. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures. (This PR cannot do that...read my comment about that). ; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; -,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:2587,Test,TestMessageHandler,2587,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,1,['Test'],['TestMessageHandler']
Testability," by a [benchmark](https://github.com/alxbilger/SofaBenchmark/blob/main/SofaBenchmarkScenes/src/SofaBenchmarkScenes/fem/StandardTetrahedralFEMForceField.cpp):. Before:. ```; --------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; --------------------------------------------------------------------------------------------------; BM_StandardTetrahedralFEMForceField/32 333 ms 328 ms 2 FPS=97.5238/s MBKBuild=379.033u MBKSolve=6.66173m frame=0.0102539s; BM_StandardTetrahedralFEMForceField/64 664 ms 672 ms 1 FPS=95.2558/s MBKBuild=354.073u MBKSolve=6.62915m frame=0.010498s; BM_StandardTetrahedralFEMForceField/128 1319 ms 1328 ms 1 FPS=96.3765/s MBKBuild=347.671u MBKSolve=6.58216m frame=0.010376s; BM_StandardTetrahedralFEMForceField/256 2583 ms 2578 ms 1 FPS=99.297/s MBKBuild=330.558u MBKSolve=6.43889m frame=0.0100708s; ```. After. ```; --------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; --------------------------------------------------------------------------------------------------; BM_StandardTetrahedralFEMForceField/32 321 ms 320 ms 2 FPS=99.9024/s MBKBuild=379.211u MBKSolve=6.43458m frame=0.0100098s; BM_StandardTetrahedralFEMForceField/64 637 ms 641 ms 1 FPS=99.9024/s MBKBuild=361.311u MBKSolve=6.34991m frame=0.0100098s; BM_StandardTetrahedralFEMForceField/128 1287 ms 1281 ms 1 FPS=99.9024/s MBKBuild=349.305u MBKSolve=6.4886m frame=0.0100098s; BM_StandardTetrahedralFEMForceField/256 2548 ms 2547 ms 1 FPS=100.515/s MBKBuild=347.56u MBKSolve=6.35484m frame=9.94873ms; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; _________________",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2858:1294,Benchmark,Benchmark,1294,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2858,1,['Benchmark'],['Benchmark']
Testability, code:; ```cpp; #include <sofa/defaulttype/VecTypes.h>. #include <sofa/component/collision/detection/algorithm/BruteForceBroadPhase.h>; #include <sofa/component/collision/detection/algorithm/BVHNarrowPhase.h>; #include <sofa/component/collision/detection/algorithm/DefaultPipeline.h>. #include <sofa/component/collision/detection/intersection/NewProximityIntersection.h>. #include <sofa/component/collision/response/contact/DefaultContactManager.h>. #include <sofa/component/collision/geometry/PointModel.h>. #include <sofa/simulation/graph/DAGNode.h>; #include <sofa/simulation/graph/DAGSimulation.h>; #include <sofa/simulation/graph/init.h>. #include <sofa/simulation/DefaultAnimationLoop.h>. #include <sofa/component/statecontainer/MechanicalObject.h>. #include <sofa/core/objectmodel/Context.h>; #include <sofa/simulation/Node.h>; #include <sofa/simulation/Simulation.h>; #include <SofaComponentAll/initSofaComponentAll.h>. #include <sofa/helper/system/FileRepository.h>; #include <sofa/helper/logging/LoggingMessageHandler.h>; #include <sofa/core/logging/PerComponentLoggingMessageHandler.h>; #include <sofa/helper/BackTrace.h>. using namespace sofa::defaulttype;. using sofa::simulation::Node;; using sofa::simulation::graph::DAGNode;; using sofa::helper::system::DataRepository;. // collision pipeline; using sofa::component::collision::detection::algorithm::DefaultPipeline;; using sofa::component::collision::detection::algorithm::BruteForceBroadPhase;; using sofa::component::collision::detection::algorithm::BVHNarrowPhase;; using sofa::component::collision::detection::intersection::NewProximityIntersection;; using sofa::component::collision::response::contact::DefaultContactManager;; using sofa::component::collision::geometry::PointCollisionModel;. // mechanical object; using sofa::component::statecontainer::MechanicalObject;; using sofa::defaulttype::StdVectorTypes;; using sofa::type::Vec;. using sofa::core::behavior::MechanicalState;; using sofa::core::State;; using sofa::core:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147:1521,log,logging,1521,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1254291147,2,"['Log', 'log']","['LoggingMessageHandler', 'logging']"
Testability," data d_typePermutation that allows the choice of the type of permutation used, by default it is set to None. SparseCholeskySolver is a little faster 1.59ms in avarage now against 1.84ms before (13.5% faster) on FEMBAR with the default behavior (no permutation applied).; The performances of SparseLUSolver seems to stay at the same level, or loose a little ( 0.07ms , 1% slower) on FEMBAR.; But with an adequate topology there is a significant rise of performances.; For MatrixAssembly_direct_blocs.scn :; -SparseLUSolver : ; -METIS : 26.43ms on average; -SuiteSparse : 30.76 ms on average.; against 469.64ms previously (without any fill reducing permutation). We have a speedup of 18 for METIS and of 16 for SuiteSparse. -SparseCholskySolver:; -METIS : 6.85ms; -SuiteSparse : 5.71ms; against 107.48ms previously. There is a speedup of 15 for METIS and of 19 for SuiteSparse. | _ | without FRP | with FRP | Speed |; |:-------------|:-------------:|:-------------:|:-------------:|; | SparseLUSolver<br/>+ METIS | 469.64 ms | 26.43 ms | x18; | SparseLUSolver<br/>+ SuiteSparse | 469.64 ms | 30.76 ms | x16; | SparseCholeskySolver<br/>+ METIS | 107.48 ms | 6.85 ms | x15; | SparseCholeskySolver<br/>+ SuiteSparse | 107.48 ms | 5.71 ms | x19. Related doc: https://github.com/sofa-framework/doc/pull/62; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2788:2120,test,test,2120,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2788,2,['test'],['test']
Testability," def reload(self, case: TestCase = TestCase.NONE):. Sofa.Simulation.unload(self.root_node); self.root_node = Sofa.Core.Node(""root""); self.nodes = createScene(self.root_node, case); Sofa.Simulation.init(self.root_node). def createScene(root, case: TestCase):; plugins = [; ""Sofa.Component.Collision.Detection.Algorithm"",; ""Sofa.Component.Collision.Detection.Intersection"",; ]; for plugin in plugins:; root.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root.addObject(""DefaultAnimationLoop""); root.addObject(""DefaultPipeline""); root.addObject(""BruteForceBroadPhase""); root.addObject(""BVHNarrowPhase""); root.addObject(""DefaultContactManager""); root.addObject(; ""LocalMinDistance"",; alarmDistance=5.0,; contactDistance=0.5,; ). node_1 = root.addChild(""child_1""); node_1.addObject(""MechanicalObject"", position=[0, 0, 0] * 5). node_2 = root.addChild(""child_2""); node_2.addObject(""MechanicalObject"", position=[1, 1, 1] * 5). if case == TestCase.ONE_MODEL:; node_1.addObject(""PointCollisionModel""); elif case == TestCase.TWO_MODELS:; node_1.addObject(""PointCollisionModel""); node_2.addObject(""PointCollisionModel""); elif case == TestCase.NONE:; pass. return node_1, node_2. if __name__ == ""__main__"":; simulation = SimulationHandler(). for i in range(5000):; simulation.step(); simulation.reload(case=TestCase.NONE). for i in range(5000):; simulation.step(); simulation.reload(case=TestCase.ONE_MODEL). for i in range(5000):; simulation.step(); simulation.reload(case=TestCase.TWO_MODELS); ```. No components of the collision pipeline:; ![image](https://user-images.githubusercontent.com/29635054/191464004-4a820fde-efa7-4e3f-b448-a3f734daf367.png); -> No memory increase, even with two collision models. NewProximity; ![image](https://user-images.githubusercontent.com/29635054/191463963-c581e5ce-e315-401c-b9ed-1786c27b66c1.png); -> Some memory increase with one and no collision models, STRONG increase with two collision models. LocalMinDistance; ![image](https://user-images.githubusercon",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318:1793,Test,TestCase,1793,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318,1,['Test'],['TestCase']
Testability," everywhere in the core, and it is difficult to bypass it if you dont need it (typically for batch mode or headless system).; The macro **SOFA_NO_OPENGL** is a really Quick and Dirty solution to this problem.; For example, people include sofa/helper/system/gl.h (or any gl-related header), even without needing OpenGL actually. ; And in this header, **SOFA_NO_OPENGL** does include (or not) the good gl.h header according to your OS. So if you enable this header, you still include gl.h, which does nothing.; This is quite nonsensical.; Moreover, if the macro is not well handled in CMake, you may have some weird things happening. # Solution; This PR regroups all OpenGL related code in the core in a single package, needing only SofaHelper and SofaDefaulttype.; If you wish to be able to call OpenGL things, just find_package() it and link it to your library; ```; find_package(Sofa.GL REQUIRED); ...; target_add_library(${Target} PUBLIC .... Sofa.GL); ```. You can even conditionnally test if OpenGL is present or not with ; ```; if(Sofa.GL_FOUND); ...; endif(); ```; if needed (to compile specific components in your module for example). And even more, if you want to compile specific parts of your code with OpenGL (not a good idea but still), you can use this like an external dependency.; Example with **ColourPickingVisitor** in **SofaGuiCommon**.; CMakeLists.txt:; ```; sofa_find_package(Sofa.GL) # create the cmake var SOFAGUICOMMON.GL_HAVE_SOFA.GL; ```; config.h.in; ```; #define SOFAGUICOMMON_HAVE_SOFA_GL @SOFAGUICOMMON_HAVE_SOFA.GL@; ```; ColourPickingVisitor.cpp; ```; void ColourPickingVisitor::processTriangleModel(simulation::Node * node, sofa::component::collision::TriangleCollisionModel<sofa::defaulttype::Vec3Types> * tmodel); {; #ifdef SOFAGUICOMMON_HAVE_SOFA_GL; using namespace sofa::core::collision;; using namespace sofa::defaulttype;; glDisable(GL_LIGHTING);; ....; #endif // SOFAGUICOMMON_HAVE_SOFA_GL; ```; # Compatibility with actual code and breaking things; This new ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1649:1257,test,test,1257,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1649,1,['test'],['test']
Testability," happen when loading a scene at level '17.06' on runSofa at level '17.12' (our master branch) with a BoxStiffSpringForceField (that could behave differently because of PR #290); ```; [INFO] [SceneChecker] The 'APIVersion' directive is missing in the current scene. ; Switching to the APIVersion level '17.06' ; [INFO] [SceneChecker] Validating a scene: ; - APIVersion checking: 1 ; - RequiredPlugin checking: 1; [WARNING] [BoxStiffSpringForceField(Spring)] BoxStiffSpringForceField have changed since 17.06. To use the old behavior you need to set parameter 'forceOldBehavior=true'; ```. The nice thing with the approach is that we can write custom condition to rise those messages. Here is a simple example (to handle PR315 & an imaginary deprecation of a component):; ```cpp; addHookInChangeSet(""17.06"", [](Base* o){; if(o->getClassName() == ""RestShapeSpringsForceField"" && o->findData(""external_rest_shape"")->isSet()); msg_warning(o) << ""RestShapeSpringsForceField have changed since 17.06. The parameter 'external_rest_shape' is now a Link. To fix your scene you need to add and '@' in front of the provided path. See PR#315"" ;; }) ;. addHookInChangeSet(""17.06"", [](Base* o){; if(o->getClassName() == ""TheComponentWeWantToRemove"" ); msg_warning(o) << ""TheComponentWewantToRemove is deprecated since sofa 17.06. It have been replaced by TheSuperComponent. #See PR318"" ;; }) ;; }; ```. Everything is in SceneChecker.cpp/SceneChecker.h and APIVersion.* ...the other files in the changes are ; in fact the content of PR #314; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/322:2610,test,test,2610,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/322,4,['test'],['test']
Testability," have similarities (even duplicated code), but don't share anything. It's time for refactoring!. My focus was the refactoring of the unit tests. Before the PR, a unique class tested the 3 components using a series of `if`. I refactored the 3 classes in order to reduce the specific processing in the unit test, i.e. reduce the number of `if`. - The 3 classes now inherit from a common base class `BaseLinearElasticityFEMForceField`. I moved everything that was common (only regarding the unit test. More common code is remaining) in this class. It includes:; - A common `Data` for Young's modulus and Poisson's ratio. This way, they share type, the same default value, and the same description. Note that Young's modulus in `FastTetrahedralCorotationalForceField` and `TetrahedralCorotationalFEMForceField` was a scalar, and now it's a vector of scalars. This requires to add a common way to access the Young's modulus of the i-th element. This is also a breaking change. This allows to define a typed unit test for all 3 classes. The particularities of the classes are defined in a derived class of the unit test. To me, a great advantage, is that we identify clearly that there are unit tests for the 3 components, because there a file for each class. It was not obvious before. [ci-depends-on https://github.com/SofaDefrost/ModelOrderReduction/pull/133]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.;",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4778:1199,test,test,1199,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4778,1,['test'],['test']
Testability," implicitly keep track of all the operations thanks to the newly introduced scalar types.; 2. Because of the new method, `SparseMatrixStorageOrder` is no longer useful. It can be removed later; 3. Unit tests are extensive. They test all possible configuration of storage of LHS, RHS and Result. They are required because a condition on the storage type is required to swap the indices after the matrix product.; 4. A parallel version of the algorithm is introduced; 5. Benchmarks: https://github.com/alxbilger/SofaBenchmark/pull/39. Analysis of the results of the benchmarks:; - The best configuration storage for the fast matrix product seems to be ColColCol; - The fast matrix product is always faster than the regular product, except for a matrix of size 1000 and sparsity of 15%. This probably indicates that the method is adapted for very sparse matrices; - The parallel fast matrix product algorithm is always faster than the sequential algorithm, except for very small matrices where the overhead of parallelism is not negligible. However, the speed up is not linear with the number of cores and can be disappointing.; - The parallel fast matrix product is always faster than the regular product even for the matrix of size 1000 and sparsity of 15%, but not for very small matrices (overhead). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4547:2101,test,test,2101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4547,2,['test'],['test']
Testability," indices are resized; - BTDLinearSolver: fix constant log + operator new [] vs operator delete mismatch; - CatmullRomSplineMapping: fix applyJ compilation; - ConstantForceField: fix avoid crashes in draw when trying to apply a constantforcefield to a non existing point; - DistanceGrid: fix incorrect use of serr; - GeneralConstraintSolver: fix incorrect parent class in SOFA_CLASS macro; - IndicesFromValues: fix use getTemplateName to avoid problems of links with other data; - EulerImplicitSolver: fix Disable calls to solveConstraint from EulerImplicitSolver by default as it is not needed unless an very specific solver is added and it currently crashes in other cases + wrong argument order in calls to `AdvancedTimer::stepNext()`; - FixedConstraint and PartialFixedConstraint: fix ""fixed FixedConstraint & PartialFixedConstraint for size-varying mechanical objects"".; - MechanicalObject: fix crash in debug with null pointer; - Mass: fix remove error logging in Mass method that are inherited from Forcefield API and that are not relevant for Mass; - Mesh2PointMechanicalMapping: fix constraints ApplyJT; - Metis(gk_arch.h): fix compilation with Visual Studio 2015; - ParticlesRepulsionForceField and RepulsiveSpringForceField: fix avoid division by 0 on repulsion force fields; - PersistentContactBarycentricMapping: fix init variables in constructor; - RestShapeSpringsForceField: fix Runtime stiffness tunning was not working + optimisation and cleaning; - SkinningMapping: fix compilation of SofaRigid; - SofaViewer: fix crashes when current camera of pick-handler is NULL; - SurfacePressureForceField: fix volume computation formula; - TaitSurfacePressureForceField: fix contribution to the stiffness matrix for the second component df = P+dN in TaitSurfacePressureForceField; - TopologicalMapping: fix display error messages when a TopologicalMapping failed to be created; - TriangularFEMForceFieldOptim: fix principal values ordering with input matrix is diagonal + uninitialized value w",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/756:1631,log,logging,1631,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/756,1,['log'],['logging']
Testability," is no constraints, so a test is added.; And the initial guess was writing a 0.0 outside bounds (but I dont know why this line was here). :warning: WARNING :warning:; one needs to set the responseParams to mu=0.0 also. This is really confusing and would need to refactor somewhere.; If the LCP defines mu to 0.0 but not responseParams, funny things happen (one component expects 1contact = 1 constraint and the other 1contact = 3 constraints). Moreover:; - remove (deprecate) usage of the member `_mu` which was confusing with the data `mu`; - adds two scenes to demonstrate with and without friction, and their regression tests. [ci-depends-on https://github.com/sofa-framework/Regression/pull/47]. ![lcp_friction](https://github.com/sofa-framework/sofa/assets/11028016/eba86b90-3cfc-40f6-850f-6aba720d291d); ![lcp_nofriction](https://github.com/sofa-framework/sofa/assets/11028016/fb015cd7-54c6-4347-a07e-e5c960dc609c). Benchmarks:; As friction adds two additional constraints in the matrix, then frictionless scenes are faster:; ```; caduceus:; w/: 5000 iterations done in 52.071 s ( 96.0227 FPS); w/o: 5000 iterations done in 44.6895 s ( 111.883 FPS); ```; ```; 3instruments_collis:; w: 5000 iterations done in 69.8352 s ( 71.5971 FPS); w/o: 5000 iterations done in 43.0997 s ( 116.01 FPS); ```; Obviously, this change the behavior of the scene...; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - i",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3905:971,Benchmark,Benchmarks,971,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3905,1,['Benchmark'],['Benchmarks']
Testability," is no longer used. Instead, I introduce the method `convertConstraintMatrix`, which is IMO clearer. `computeJ` could be removed I think. But for some reasons it is virtual. Anyone overrides it?; - Added a timer in `convertConstraintMatrix`. This must be used for benchmark to evaluate the cost of the conversion. I believe that we can think of a way to avoid the conversions (only if it costs too much).; - `MatrixLinearSolverInternalData::copyJmatrix` is renamed to `convertMatrix` and it is now protected.; - Made `getLocalJ` clearer.; - Added details for `addJMInvJt`; - Introduced rebind types for `CompressedRowSparseMatrixConstraint`, `CompressedRowSparseMatrixGeneric` and `CompressedRowSparseMatrixMechanical`; - `CompressedRowSparseMatrixConstraint`: added test for the stream operator. The operator no longer adds trailing spaces on each line.; - Better iterators in `CompressedRowSparseMatrixConstraint`; - Missing header guard in `CompressedRowSparseMatrixConstraintEigenUtils.h`; - Fixed `operator()` in `CompressedRowSparseMatrixToEigenSparseVec`. Also added error message if out-of-bounds. Required for https://github.com/sofa-framework/SofaPython3/pull/459; - Introduction of `is_specialization_of`. Used in [a SofaPython3 PR](https://github.com/sofa-framework/SofaPython3/pull/459). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5017:2358,test,test,2358,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5017,2,['test'],['test']
Testability," it currently crashes in other cases + wrong argument order in calls to `AdvancedTimer::stepNext()`; - FixedConstraint and PartialFixedConstraint: fix ""fixed FixedConstraint & PartialFixedConstraint for size-varying mechanical objects"".; - MechanicalObject: fix crash in debug with null pointer; - Mass: fix remove error logging in Mass method that are inherited from Forcefield API and that are not relevant for Mass; - Mesh2PointMechanicalMapping: fix constraints ApplyJT; - Metis(gk_arch.h): fix compilation with Visual Studio 2015; - ParticlesRepulsionForceField and RepulsiveSpringForceField: fix avoid division by 0 on repulsion force fields; - PersistentContactBarycentricMapping: fix init variables in constructor; - RestShapeSpringsForceField: fix Runtime stiffness tunning was not working + optimisation and cleaning; - SkinningMapping: fix compilation of SofaRigid; - SofaViewer: fix crashes when current camera of pick-handler is NULL; - SurfacePressureForceField: fix volume computation formula; - TaitSurfacePressureForceField: fix contribution to the stiffness matrix for the second component df = P+dN in TaitSurfacePressureForceField; - TopologicalMapping: fix display error messages when a TopologicalMapping failed to be created; - TriangularFEMForceFieldOptim: fix principal values ordering with input matrix is diagonal + uninitialized value warning; - VisualModelImpl: fix wrong object (triangles) called when adding quads in handleTopologyChange(); - VoxelGridLoader: `std::unique` result was not used. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/756:3087,test,test,3087,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/756,2,['test'],['test']
Testability," old API which is no longer called. API changed in https://github.com/sofa-framework/sofa/commit/55121be3494a4fe833904750fc7f043ff045881d. The list of affected components:. - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/LinearMovementConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/PartialFixedConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/PointConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectDirectionConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectDirectionConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectToLineConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectToPlaneConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/ProjectToPointConstraint.h; - modules/SofaBoundaryCondition/src/SofaBoundaryCondition/SkeletalMotionConstraint.h. Note that some of them don't implement `applyConstraint`. They had the old API, but with a message warning that the method is not implemented. This problem was not caught before, because the majority of the test scenes uses a matrix-free solver (CGLinearSolver), whereas `applyConstraint` is called only for assembled systems (with SparseLDLSolver for example). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2269:1243,test,test,1243,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2269,3,['test'],['test']
Testability," on templates without any knowledge of the inner layout of the template type. I'm not 100% sure that I found all instances of those calls in Sofa's core, but it seems like it is *exclusively* used with TDataType::Coord and TDataType::Deriv (which are either VecX or RigidCoord/RigidDeriv). In conclusion the usage of DataTypeInfo in BaseData justifies its existence to me. Maybe some features could be isolated in a separate API, but that would only mean maintaining 2 APIs instead of one. I think that instead of trying to remove it from SOFA, we should investigate how to make the API better:; 1. size() / byteSize() / size(void* data) are really unclear (hence the shitty doc on those methods I guess, and it is really hard to know which of these methods serves what purpose. If we base ourselves on the terminology of another data abstraction tool (say numpy), we will still not be able to easily cover complex data types such as sparse matrices easily, but we at least will have a way clearer API to dig into: len, size, shape, ndim...; 2. just like SimpleLayout, we could add a dedicated flag for specific types, to simplify conversions in bindings (Keep the Container flag but maybe add additional ""Matrix"", ""Vector"", and ""Complex"" flags to further discriminate, maybe a SparseMatrix too...; 3. We could add extra pre-filled specializations of DataTypeInfo with clear names to simplify writing new ones (so that we don't have to fill up every flags ourselves everytime); 3. @jnbrunet @damienmarchal what do you think?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1385:4050,test,test,4050,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1385,2,['test'],['test']
Testability," p1, ..., pn]| |p: [p0, p1, ..., pm]|; |r: [r0, r1, ..., rn]| |r: [r0, r1, ..., rm]|; |q: [q0, q1, ..., qn]| |q: [q0, q1, ..., qm]|; +--------------------+ +----------+---------+; |; mapping1 | mapping2; +--------------+-------------+; | |; +----------+---------+ +----------+---------+; | MO3 | | MO4 |; +--------------------+ +--------------------+; |x: [x0, x1, ..., xl]| |x: [x0, x1, ..., xo]|; |p: [p0, p1, ..., pl]| |p: [p0, p1, ..., po]|; |r: [r0, r1, ..., rl]| |r: [r0, r1, ..., ro]|; |q: [q0, q1, ..., ql]| |q: [q0, q1, ..., qo]|; +--------------------+ +--------------------+; ```. Version 1 will do:; 1. Launch a visitor in the CG's subgraph (`x.peq(p,alpha);`); **MO 1** : x = x + alpha p; **M0 2** : x = x + alpha p; **MO 3** : x = x + alpha p; **MO 4** : x = x + alpha p; 2. Launch a visitor in the CG's subgraph (`r.peq(q,-alpha); `); **MO 1** : r = r - alpha q; **M0 2** : r = r - alpha q; **MO 3** : r = r - alpha q; **MO 4** : r = r - alpha q. Version 2 will do:; 1. Launch a visitor in the CG's subgraph; **MO 1** :; x = x + alpha p; r = r - alpha q; **MO 2** :; x = x + alpha p; r = r - alpha q; **MO 3** :; x = x + alpha p; r = r - alpha q; **MO 4** :; x = x + alpha p; r = r - alpha q. Unless I'm missing something, the optimized version only removes one subgraph visit and allows the compilator to *\***maybe**\** optimize two subsequent operations on vectors. However, I don't think the compiler will actually do something here as the `MechanicalState::vMultiOp` simply makes two calls to `MechanicalState::vOp` which, well, is a virtual function and can't be inlined. To the question to whether or not we should keep one or the other, I guess we would have to benchmark it (use a scene with multiple top level mechanical object's, and multiple mapping levels). If the optimized version do not brings a lot of speed (which would be my guess since the cost of a visit isn't very big, but I may be wrong), I would remove the optimization as it is quite confusing for the reader.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1263#issuecomment-592412191:2921,benchmark,benchmark,2921,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1263#issuecomment-592412191,1,['benchmark'],['benchmark']
Testability," pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. #################; --- sys.version ---; 3.9.18 (main, Sep 11 2023, 13:41:44) ; [GCC 11.2.0]; --- PATH ---; /bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/bin:/bd_targaryen/users/kleelakunwet/miniconda3/condabin:/usr/lib/oar/oardodo:/usr/lib/oar/oardodo:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/snap/bin; --- SOFA_ROOT ---; --- PYTHONPATH ---; --- sys.path ---; ['', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python39.zip', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/lib-dynload', '/bd_targaryen/users/kleelakunwet/.local/lib/python3.9/site-packages', '/bd_targaryen/users/kleelakunwet/miniconda3/envs/sofa/lib/python3.9/site-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileSystem.cpp.o; [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o; [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o; [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileRepository.cpp:34:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:733: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/he",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4527:2530,Log,Logs,2530,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527,1,['Log'],['Logs']
Testability," rely on SingleLink. . It is questionnable if the iterable list of typed sofa object should be stored in link instead of a a much simpler container. They are not using any of specific feature of SingleLink (like path read/writing which is actually invalid behavior as the content of the container is fully defined by the node and cannot be filled with user specified component). . At that time the sole puprose of using SingleLink seems to able to expose the content of these container in the GUI. If this is the case a much simpler code architecture should be used to avoid bloating the Node.h and API. In this PR we replace the Node::Single by the combination of two objects:; - NodeContainerSingle which only handle the ""container"" specific part of the SingleLink; - LinkeableContainer which wrap a container to expose it as a BaseLink. . The advantage of this design is twofold:; - only NodeContainerSingle is needed in Node.h and has a much reduce code-generation compared to SingleLink. ; - NodeContainerSingle can operate with forward declaration (which is not the case of SingleLink which helps to keep clean the inclusion tree.; - there is a clear separation between the Container and the Link part which lead to a very readable code. The LinkeableContainer is only used visible in Node.cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1737:1882,test,test,1882,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1737,2,['test'],['test']
Testability, report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void complexTestBehavior(); {; /// Here is the default mode. ; ....; {; /// We will report a failure is there no warning nor error emitted before the end of this block. ; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;; ...; { ; /// But this sub-part does not count... and it shouldn't emit a message. ; EXPECT_MSG_NOEMIT(Error) ;; .... ; }; }; }; ```. This PR will generate a lot of new test failure... that are either real failure that deserve investigation or ; tests that was previously simply previously ignoring error & warning messages; . CHANGELOG for @hugtalbot & @guparan :; - TestMessageHandler.cpp implements a new & robust way to connect msg_* message to test failure ; - TestMessageHandler_test.cpp implements test for TestMessageHandler. ; - Sofa_test is updated to use the new TestMessageHandler where msg_error generates test failures ; - All the existing tests have been changed to use the new API & removed the old one. ; - MeshSTL.cpp replace a std:cerr by a msg_error so that FIX the corresponding failing test.; - Message.cpp adds a way to convert message type to string.; - updates externs/gtest to a fresh checkout. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures. (This PR cannot do that...read my comment about that). ; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old.; - [ ] #237 should fix most of the newly failing tests. #237 should be merged right after this PR. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:2793,Test,TestMessageHandler,2793,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,6,"['Test', 'test']","['TestMessageHandler', 'test', 'tests']"
Testability," sofa/modules/SofaGuiQt/src/sofa/gui/qt/WDoubleLineEdit.h (included 32 times, avg 871 ms), included via:; moc_MaterialDataWidget.cpp.o MaterialDataWidget.h DataWidget.h ModifyObject.h (1915 ms); MaterialDataWidget.cpp.o MaterialDataWidget.h DataWidget.h ModifyObject.h (1504 ms); moc_QDisplayDataWidget.cpp.o QDisplayDataWidget.h DataWidget.h ModifyObject.h (1473 ms); WDoubleLineEdit.cpp.o (1407 ms); DisplayFlagsDataWidget.cpp.o DisplayFlagsDataWidget.h DataWidget.h ModifyObject.h (1379 ms); QRGBAColorPicker.cpp.o QRGBAColorPicker.h DataWidget.h ModifyObject.h (1375 ms); ... 22925 ms: sofa/SofaKernel/modules/SofaCore/src/sofa/core/ObjectFactory.h (included 440 times, avg 52 ms), included via:; initOpenGLVisual.cpp.o (192 ms); PointSetTopologyAlgorithms.cpp.o (191 ms); initValidation.cpp.o (187 ms); DataDisplay.cpp.o (186 ms); DifferenceEngine.cpp.o (178 ms); MeshObjLoader.cpp.o (177 ms); ... 21119 ms: sofa/extlibs/gtest/include/gtest/internal/gtest-port.h (included 176 times, avg 119 ms), included via:; gtest-typed-test.cc.o gtest-typed-test.h (796 ms); gtest-port.cc.o (666 ms); gtest-death-test.cc.o gtest-death-test.h gtest-death-test-internal.h gtest-internal.h (650 ms); gtest-test-part.cc.o gtest-test-part.h gtest-internal.h (463 ms); gtest-filepath.cc.o gtest-filepath.h gtest-string.h (456 ms); gtest.cc.o gtest.h gtest-internal.h (246 ms); ... 20903 ms: sofa/SofaKernel/modules/SofaHelper/src/sofa/helper/vector.h (included 156 times, avg 133 ms), included via:; MeshGmsh.cpp.o MeshGmsh.h Mesh.h (492 ms); MeshTopologyLoader.cpp.o MeshTopologyLoader.h Mesh.h (402 ms); Image.cpp.o Factory.inl (384 ms); SVector.cpp.o SVector.h (379 ms); GenerateRigid.cpp.o GenerateRigid.h Mesh.h (373 ms); TestMessageHandler.cpp.o TestMessageHandler.h (346 ms); ... 19960 ms: /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/pstl/glue_algorithm_defs.h (included 157 times, avg 127 ms), included via:; qglviewer.h camera.h QMap qmap.h qiterator.h qglobal.h algorithm (348 ms)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1523:35200,test,test,35200,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1523,1,['test'],['test']
Testability," starting runSofa. ```; /linuxdata/sofa/src/current/Sofa/framework/Core/src/sofa/core/objectmodel/Link.h:770:14: runtime error: member access within address 0x55dcc8e551e8 which does not point to an object of type 'TLink'; 0x55dcc8e551e8: note: object has invalid vptr; dc 55 00 00 06 00 00 00 00 00 00 00 00 00 00 00 65 72 00 00 00 63 e5 c8 dc 55 00 00 a0 61 e5 c8; ^~~~~~~~~~~~~~~~~~~~~~~; invalid vptr; /linuxdata/sofa/src/current/Sofa/framework/Core/src/sofa/core/objectmodel/Link.h:770:36: runtime error: member call on address 0x55dcc8e55fa8 which does not point to an object of type 'BaseObject'; 0x55dcc8e55fa8: note: object has invalid vptr; dc 55 00 00 c0 6c 7f f7 5d 7f 00 00 00 00 00 00 00 00 00 00 51 00 00 00 00 00 00 00 00 00 00 00; ```. I dont really understand the problem here, but it could be because ; https://stackoverflow.com/a/57304113. Anway, In my case, I found the synxtax of ValidatorFn and its use `(m_owner->*m_validator)(nullptr, after);` really incomprehensible ; I thought it was calling m_validator from m_owner 🤐....; I rewrote the alias to pointer of a non-static method of a class to use std::function, and std::bind for binding, hence the breaking flag 😑.; IMO this is more readable, and more modern c++. And icing on the cake, fix the Undefined Behavior error 😏. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3665:1885,test,test,1885,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3665,2,['test'],['test']
Testability," that each phase accesses a subset of the vector locations. To facilitate this, we decompose the vectors into **blocks**, and we look at the vector blocks accessed by each task phase.; Then we can have phases of different tasks that do not accesses the same locations, and so are independent and can run in parallel.; Then we model the dependencies between the tasks phases, and we use the dependency graph to schedule the parallel executions of the phases, keeping the sequential order of the operations. . All the user should have to do is to flag visitors that can be launched in parallel on the components : use a parallel version of Visitor::for_each / for_each_r to enable parallel execution of the components. **Steps performed at runtime:**. 1. Creation of « parallel visitors » using a parallel version of Visitor::for_each functions; - parallel version of for_each starts a parallel section, and creates tasks; - a task is defined as the execution of the visitor function on a component; 2. Execute the first time step sequentially, logging/profiling all accesses to vectors; - create parallel sections and tasks; - in each task, log all accesses to vectors using and overloaded helper::vector::operator[]; 3. During the second time step, we launch a parallel thread that ; - splits each task in phase each phase doing a (statically) given number of vector accesses.; - for each phase, identify the blocks of vectors accessed; - for each parallel section, build a dependency graph between task phases; - for each parallel section, schedule the parallel execution of the different task phases so that we keep the order of the operations and independent phases can run in parallel; 4. When the scheduling is computed, we run the following time steps in parallel; 5. When there is a change in the topology, we do the logging and scheduling phases again, while the simulation run sequentially. This is a work in progress. As you can imagine, designing and implementing this is far from trivial.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24#issuecomment-330557289:2103,log,logging,2103,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24#issuecomment-330557289,3,['log'],"['log', 'logging']"
Testability," the calls of `debug_write_state_before` and `debug_write_state_after`, instead of the functions themselves. Doing that, it allows to actually compile the debug content of both function. And I noticed that they had compilation errors (we could not detect it as SOFA_VERBOSE_TRAVERSAL is never defined). My concerns:. 1. I wanted to use `Visitor::runVisitorTask` in other visitors than BaseMechanicalVisitor. But the logic is not the same. BaseMechanialVisitor is the only visitor checking the tags. Should we always check the tags? Also, the debug boilerplate code is not consistent over all the visitors.; 2. `Visitor::for_each` returns only the result of the last call in the loop. In another loop on the solvers at the beginning of `BaseMechanicalVisitor::processNodeTopDown`, we check the intermediate values. It is not consistent. I suspect that `Visitor::for_each` must also check intermediate values.; 3. In `BaseMechanicalVisitor::processNodeTopDown`, between the process of `mechanicalMapping` and `mechanicalState`, we don't check if `res == RESULT_PRUNE`. It means we do the process of `mechanicalState` even if the process of `mechanicalMapping` returned `RESULT_PRUNE`. It's not consistent with the rest of the code.; 4. It is not possible to define SOFA_VERBOSE_TRAVERSAL through cmake. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2125:2362,test,test,2362,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2125,2,['test'],['test']
Testability," the component; - **reinit pythonBinding / the Qt GUI's ModifyObject** calls reinit, and that call is wrapped the same MessageHandling mechanism to set or unset the Valid / Invalid flag. _**LIMITATIONS**_; There is a weak link in this approach:; reinit() will NOT unset the Invalid flag from a component if it is called from elsewhere than the GUI's ModifyObject api. This can happen often: when calling reinit from a c++ program that doesn't use runSofa's GUI for instance.; In order to guarantee that the state is set properly on reinit(), reinit should be a delegate method nested in a method performing the check on the msg_error, and setting the Valid / Invalid flag appropriately. This would be a **VERY** breaking, and time consuming task. calling the state updating mechanisms from the python bindings, visitors & GUI is kind of QuickNDirty but should reveal all components that aren't implementing properly their init / reinit / bwdInit methods properly, and show at the component level a hint at how often components stay in a ""Dirty' state. TODO: ; - Create a StateCheckerVisitor and run it at the end of the DefaultAnimationLoop's step function; - Use the StateCheckerVisitor to either ; - show a warning message if a component is in an Invalid / Unspecified state; - run init() / reinit() on the components whose states are invalid or unspecified; - display a warning icon in runSofa's Scene graph to reflect the component's state. @damienmarchal do you see a non-intrusive solution to the reinit() problem...? ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/823:3349,test,test,3349,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/823,2,['test'],['test']
Testability," the context when an area is left. To give you a look of how it is (the V2 stuff are just transitional of course):; ```cpp; #include <SofaTest/Sofa_test.h>; using sofa::Sofa_test;. #include <SofaTest/TestMessageHandler.h>; using sofa::helper::logging::GtestMessageHandler ;. /// We can define a default policy for a complete class this way so that if not more; /// expectation are given this generates test failures.; class Sofa_test2 : public Sofa_test<float>; {; EXPECT_MSG_NOEMIT_V2(Error) ;; EXPECT_MSG_NOEMIT_V2(Warning) ;; EXPECT_MSG_NOEMIT_V2(Deprecated) ;; };. class TestMessageHandler_test : public Sofa_test2; {; public:; void defaultTestBehavior(); {; msg_deprecated(""HERE"") << ""This should generate a failure"" ;; msg_warning(""HERE"") << ""This should generate a failure"" ;; msg_error(""HERE"") << ""This should generate a failure"" ;; }. void catchingTestBehavior(); {; EXPECT_MSG_EMIT_V2(Warning) ;; EXPECT_MSG_EMIT_V2(Error) ;. msg_warning(""HERE"") << ""This should not generate a failure"" ;; msg_error(""HERE"") << ""This should not generate a test falure"" ;; }. /// THIS TEST SHOULD FAIL.; void expectAMessageissingBehavior(); {; EXPECT_MSG_EMIT_V2(Warning) ;; EXPECT_MSG_EMIT_V2(Error) ;. //msg_warning(""HERE"") << ""This should not generate a failure"" ;; //msg_error(""HERE"") << ""This should not generate a test falure"" ;; }. void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT_V2(Warning) ;; EXPECT_MSG_NOEMIT_V2(Error) ;. msg_warning(""HERE"") << ""This should generate a failure but with line number close to "" << __LINE__ ;; msg_error(""HERE"") << ""This should generate a test falure with line number close to "" << __LINE__ ;; }. void complexTestBehavior(); {; {; EXPECT_MSG_EMIT_V2(Warning) ;; EXPECT_MSG_EMIT_V2(Error) ;. //msg_warning(""HERE"") << ""This should generate a failure"" ;; //msg_error(""HERE"") << ""This should generate a test failure"" ;; {; EXPECT_MSG_NOEMIT_V2(Error) ;; msg_error(""HERE"") << ""This should generate a test failure"" ;; }; }. {; EXPECT_MSG_NOEMIT_V2(Warning) ;; EXPECT_MSG_NOEM",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288782643:1464,test,test,1464,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288782643,1,['test'],['test']
Testability," the old symbol, which is strange and certainly made the compat layer break is used because often the two types where completely unrelated but `setParent` isn't templated so.... ; 2. This compat layer only works for `Data<T>` every types that inherits from it, will only see the original `Data<T>` methods taken into account in the compact layer. This was the case here for `DataFileName` and all `TopologicalData`. . I've decided to adopt two different strategy : ; 1. For `DataFileName` I didn't put my component and still usef the 'setParent' strategy. This is because, a priori, we won't chage a filename data during execution, this is often a given parameter, but we often use methods specific to `DataFileName`. ; 2. For the topological one, usually topological mechanisms are used in very specific classes to handle topological changes. But in a user perspective, it is often used as a classical `Data<vector<Index>>`. So What I did is use `RenamedData` on those, allowing the compat on the `Data<T>` level, but not for the topological methods which are not working anymore on the old symbol (and will create a compilation error if used)... ; ; To make it cleaner we might need to create new `RenamedData` class for all classes inheriting from `Data<T>`. Which is not the purpose of this PR. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4927:2161,test,test,2161,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4927,2,['test'],['test']
Testability," the same factors for the compliance matrix computation and the correction computation as the one used in LinearSolverConstraintCorrection. ### Cleans; - Clean and Optimize UncoupledConstraintCorrection, factorize code between rigids and vecs, optimize addComplianceInConstraintSpace significantly for large number of constraints.; - Move new constraint accumulation visitors from GenericConstraintSolver.h to MechanicalVisitor.h so that they can be used by other solvers.; - Code refactoring in GenericConstraintCorrection. ### Bugfixes; - Fix FreeMotionAnimationLoop allocates the freeposition / freevelocity as first thing in the time step.; - Fix Haptic mode with haptic influence from constraints applied on all frames. It was not working well on the simulation side.; - Add a correction velocity factor and correction position factor as data in UncoupledConstraintCorrection.; - Fix, the GenericConstraintSolver was not providing the correct number of interations for profiler stats.; - GenericConstraintCorrection's ODESolver is now searched locally.; - Fix the Local Jacobian Matrix. It was not resized when no more constraints were applied on a MechanicalState.; - UncoupledConstraintCorrection for rigid is now in a 7 value vector. When using the default initialization of the compliance using the mass matrix of the rigid the linear part of the compliance was added twice. ### Moved files; - Move contact identifier code in a separate file to avoid inelegant FrictionContact.h inclusion in each contact class file. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/484:2609,test,test,2609,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/484,2,['test'],['test']
Testability," thread specific tasks. Remove ThreadSpecificTask (not used and redundant with new thread-specific task queues). Update Task logging.; - Adapted MultiThreading plugin to the new build system.; - SetDirectory no longer changes the system current directory (shared by all threads in the process), but uses a global variable to record the current directory to be used within Sofa. But changing to the current file's directory is needed to load Python scene. For the moment, python loader is not use with multithreading, changing directory in the loader is a temporary solution. The functioning of python scene loader need to be adapted in the futur. ### Cleans; - Streamline calls to createResponse in case no groupManager is used; - Clean warnings in Task and TaskSchedulerBoost for Multithreading plugin. ### Bugfixes; - Fix crash with multithreaded collision detection. Call `TriangleModel::getTriangleFlag` method for all triangles of the topology to force the initialization of adjacency.information in the topology before some actual collision detection code is executed.; - DDGNode should never be copied to ensure thread safe. Add private copy constructor that gives compilation error to ensure that.; - Compilation fixes for compatibility with boost 1_55. Corrected also the copyright notice.; - Fix execution freeze bug due to simultaneous and reciprocal task stealing between 2 threads (WorkerThread).; - Fix data race at startup, WorkerThread:mTaskScheduler was set by the main thread while being read by the worker thread. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/215:4222,test,test,4222,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/215,1,['test'],['test']
Testability," to not rely of the automatic detection of templates (canCreate and stuff()) from the associated MechanicalObject. For example in `/Components/mapping/ArticulatedSystemMapping.scn`; ```xml; <UniformMass template=""Rigid3d,RigidMass<3u,double>"" ..... >; ```; This is so weird to explicitly write the masstype.; (Actually, the xml line is even not working, as it needs to be `Rigid3d,RigidMass<3,double>` but I suppose it was this way when the file was written). ~~In this PR, [std::conditional_t](https://en.cppreference.com/w/cpp/types/conditional) is used to specify MassType from DataTypes (if rigidtypes then rigidmass, otherwise Real); One other solution would be to specify a MassType in VecTypes/RigidTypes but seems invasive to me.; I let the double template thing, as I dont know if it is possible than a developer would like to specify special instanciation, like RigidType with Real for example. But this does not solve the double template thing in xml.~~. ~~If it is not the case, then we could remove the second template, and just use a `typedef` (so we remove the need to specify the double template in xml....)~~. Template has been removed directly, and the MassType is SFINAE'ed from the DataTypes.; parse() in the 3 differents masses warns the user of the modification, and what to do. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2644:2242,test,test,2242,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2644,2,['test'],['test']
Testability," to unify the naming scheme. The 'short' naming scheme is following the standard for python.array and was very close to what we already have in Sofa. . - In this PR I don't use at all the TypeInfoRegistry (expect in the test part), this is on purpose so a future PR will be able to emphasize the change on the Sofa code base (in Data.h). ; - In this PR I don't register typeinfo the registry (because it is not used yet), but I added the 'empty' files for that...it is in typeinfo/TypeInfo_xxxxx.cpp ; ; What will be done in a future PR:; - 1. fill the registry with types we are using and replace the use of VirtualTypeInfo<T>::get() in Data.h by TypeInfoRegistry::Get(T).; - 2. remove step by step the static type info and there related #includes files. ; - 3. rename all the method/enum in the static & dynamic system to unify with official naming convention. ; a. static function must start with an UpperCase; b. function returning boolean must start with a verb like IsValidTypeInfo() instead of ValidTypeInfo() ; c. add a getName()/GetName() to replace name().; - 4. replace the enum involved in the static type info system with constexpr. . EDIT: To satisfy popular demand here is more or less the content of the PR. ; [Sofa.pdf](https://github.com/sofa-framework/sofa/files/5553887/Sofa.pdf); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1605:2641,test,test,2641,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1605,2,['test'],['test']
Testability," unit tests.; [INFO] [PythonTestExtractor] File 'DataEngine.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'BaseLink.py' loaded with 11 unit tests.; [INFO] [PythonTestExtractor] File 'BaseObject.py' loaded with 12 unit tests.; [INFO] [PythonTestExtractor] File 'Controller.py' loaded with 7 unit tests.; [INFO] [PythonTestExtractor] File 'ForceField.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'FileRepository.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Message.py' loaded with 2 unit tests.; [INFO] [PythonTestExtractor] File 'Node.py' loaded with 26 unit tests.; [INFO] [PythonTestExtractor] File 'Simulation.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'RGBAColor.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Vec3.py' loaded with 4 unit tests.; [INFO] [PythonTestExtractor] File 'BoundingBox.py' loaded with 5 unit tests.; [==========] Running 120 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 120 tests from SofaPython3/Sofa; [INFO] [SofaPython3] Initializing with python version 3.8.6 (default, Oct 27 2020, 09:13:12) ; [GCC 9.3.1 20200408 (Red Hat 9.3.1-2)]; [INFO] [SofaPython3] Shared library name is 'libpython3.8m.so'; [ RUN ] SofaPython3/Sofa.all_tests/0_Sofa_Core_Base_test_addExistingDataAsParentOfNewData; ----------------------------------------------------------------------; Ran 1 test in 0.000s. OK; [ OK ] SofaPython3/Sofa.all_tests/0_Sofa_Core_Base_test_addExistingDataAsParentOfNewData (2 ms); [ RUN ] SofaPython3/Sofa.all_tests/1_Sofa_Core_Base_test_addKeywordProtected; ----------------------------------------------------------------------; Ran 1 test in 0.001s. OK; [ OK ] SofaPython3/Sofa.all_tests/1_Sofa_Core_Base_test_addKeywordProtected (1 ms); [ RUN ] SofaPython3/Sofa.all_tests/2_Sofa_Core_Base_test_addNewDataFromParent; ======================================================================; ERROR: test_addNewDataFromParent ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796:4175,test,test,4175,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796,1,['test'],['test']
Testability,"![VonMisesStress_TetrahedralCorotationalFEMForceField](https://user-images.githubusercontent.com/79743770/122370619-7cf1db80-cf5f-11eb-9304-4dcfa77504c4.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2185:698,test,test,698,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2185,2,['test'],['test']
Testability,"![](https://github.com/sofa-framework/sofa/assets/17544719/69a5fbc8-b5a8-4437-8b92-9774ffe07c5d). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3963:637,test,test,637,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3963,2,['test'],['test']
Testability,"![](https://github.com/sofa-framework/sofa/assets/30337881/0367e8be-aebb-4349-9b01-dc7f4e73ac2a). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4770:637,test,test,637,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4770,2,['test'],['test']
Testability,"![](https://i.ibb.co/hd3qhmc/Screenshot-from-2021-06-15-18-46-33.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2180:610,test,test,610,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2180,2,['test'],['test']
Testability,"![](https://media.giphy.com/media/sG4zmff2zDOp7t2MNA/giphy-downsized.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3218:614,test,test,614,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3218,2,['test'],['test']
Testability,"![](https://media.tenor.com/WPtQa7M3Vm4AAAAC/matrix-neo.gif). Hommage à @guparan :raised_hands: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3573:637,test,test,637,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3573,2,['test'],['test']
Testability,"![before](https://user-images.githubusercontent.com/11028016/184293626-3906d39e-bd72-41f6-97c8-bc81b58ff31a.png); 😭🩸 (smiley crying blood). ![after](https://user-images.githubusercontent.com/11028016/184293675-e089ce98-cadd-4983-9a6e-059f4c8731a9.png); 😎 . (nomination for the SOFA best contribution award); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3214:847,test,test,847,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3214,2,['test'],['test']
Testability,![ezgif com-crop](https://user-images.githubusercontent.com/21199245/67515939-f4466d80-f69f-11e9-8db7-ef8bd1fb6deb.gif). Tested with the last changes in ParticleSource and ParticleSink ;),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1194#issuecomment-546053902:121,Test,Tested,121,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1194#issuecomment-546053902,1,['Test'],['Tested']
Testability,"![image](https://64.media.tumblr.com/e9b89b6d4267542a7ca85b661ba09045/tumblr_o3soekOhX61ulpmhpo1_500.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4544:646,test,test,646,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4544,2,['test'],['test']
Testability,"![image](https://github.com/sofa-framework/sofa/assets/10572752/9efe690d-6257-44a9-a7af-2c11d7510740). TODO:; - [ ] Add this feature in SofaImGui. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4650:686,test,test,686,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4650,2,['test'],['test']
Testability,![image](https://user-images.githubusercontent.com/21199245/45017005-b105e700-b026-11e8-9257-41d8325eea42.png). you mean normally the particles outside the floor should not be there in the image but directly respawn?; I tested the scriptEvent directly inside c++ code between 2 components and this works.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/723#issuecomment-418272101:220,test,tested,220,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/723#issuecomment-418272101,1,['test'],['tested']
Testability,"![image](https://user-images.githubusercontent.com/30337881/253005654-d7a812f8-5127-4e3b-b177-ee9bee793516.gif). Initial scene provided by @bakpaul in https://github.com/sofa-framework/sofa/pull/3986. [ci-depends-on https://github.com/sofa-framework/Regression/pull/48]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4055:810,test,test,810,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4055,2,['test'],['test']
Testability,"![thermoelasticity_00000001](https://user-images.githubusercontent.com/17544719/137492922-52ee8c4c-82cf-4f0d-99b2-92f650d4da9d.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2424:672,test,test,672,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2424,2,['test'],['test']
Testability,"""6"" ny=""6"" nz=""4"" xmin=""-10.0"" xmax=""10.0"" ymin=""-10.0"" ymax=""10.0"" zmin=""0"" zmax=""0.50""/>; 		<HexahedronSetTopologyContainer name=""Topo"" src=""@hexaGrid"" />		; 		<HexahedralFEMForceField name=""FEM"" youngModulus=""1e13"" poissonRatio=""0.3"" method=""large"" />; 		; 		<!-- Visual node to allow the exportation -->; 		<Node name=""VisualNode"" >; 			<OglModel name=""Visual"" color=""green"" />; 			<IdentityMapping input=""@.."" output=""@Visual"" /> ; 		</Node>; 		; 		<OBJExporter name=""export_OBJ"" filename=""C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/regularGrid5x5"" exportAtBegin=""true"" exportEveryNumberOfSteps=""0"" />; 		; 	</Node>; 	. </Node>. ```. **Env vars**. ```bash; echo ""SOFA_ROOT = C:\Users\jducr\Documents\Librairies\sofa\build\bin\Release""; echo ""PYTHONPATH = C:\Users\jducr\Documents\Librairies\Python\Python37""; echo ""python3 -V = Python 3.7.7""; ```. ```txt; The scene is working fine, just the normals are exported wrong. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; - RegularGridTopology: 1 created with alias ""RegularGrid""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [ERROR] [MeshGmshLoader(export_filename)] Can't load file C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads; [INFO] [SofaViewer] QtViewer::keyPressEvent, CONTROL pressed; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [WARNING] [SceneCheckMissin",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2451:3728,Log,Logs,3728,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2451,1,['Log'],['Logs']
Testability,"""Fix"" #1643 . The newly introduced macros are actually doing nothing on MSVC, just generating tons of warnings.; ▶ __pragma (MSVC only) does not take a string but directly the instruction itself. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1658:735,test,test,735,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1658,2,['test'],['test']
Testability,"""Fix"" the dreaded test UtilsTest.string_to_widestring_to_string; which pass only if the test has been launched with a UTF-8 locale. I tried setting TemporaryLocale to UTF-8 but it was still not working. ; (same with `setlocale(LC_ALL, ""en_US.UTF-8"");` coming directly from an example of cppreference). Last try was to simply avoid running the test if we detect the system is not UTF-8. Related to #2290. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2320:18,test,test,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2320,5,['test'],['test']
Testability,"""If an issue reports a bug or any abnormal behavior in SOFA, a test highlighting the issue *must* be written."". I suggest to replace must by may or should. Must is very strict.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/260#issuecomment-299190327:63,test,test,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/260#issuecomment-299190327,1,['test'],['test']
Testability,"""Solve"" the discrepancy of the regression test of MeshSpringForceField.; Sorting the bboxes of the different levels needs a predicate (a boolean function) to compare two bboxes; https://github.com/fredroy/sofa/blob/master/Sofa/Component/Collision/Geometry/src/sofa/component/collision/geometry/CubeModel.h#L72. But it can happen that v1 == v2 ; and std::sort does not guarantee stability in these cases.; I suppose the result will depend of the implementation of the STL so it would explain the difference between msvc, gcc, clang/lin and clang/mac. By using stable_sort, we can get stability and thus the same results between the different platforms.; Questions are:; - stable_sort is a bit slower than sort https://stackoverflow.com/a/34668459 so set the stability as an option?; - the stability itself seems only relevant is some cases (scenes using penalities?). And this will certainly need to regenerate some regression files... (at least MeshSpringForceField). EDIT:; [ci-depends-on https://github.com/sofa-framework/Regression/pull/39]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3687:42,test,test,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3687,3,['test'],['test']
Testability,"""real"" is replaced with its only possible type: float. float is assumed; by SparseGridTopology.cpp. Removing ""real"" avoids issues when some; templated functions have a template parameter named ""real"". ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1955:740,test,test,740,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1955,2,['test'],['test']
Testability,"""wire optimization"" and gives a big speed-up when used with the partial_solve of BTDLinearSolver (and not building matrices). This optimization was already in the LCPConstraintSolver and explain (but not totally) the big difference of speed for the scenes with LinearCC/BTD and unbuilt gaussseidel. Numbers from `BeamAdapter/examples/3instruments_collis.scn -g batch -n 5000` , all constraint solvers use unbuilt GS.; ```; (mu=0.1); LCP = [INFO] [BatchGUI] 5000 iterations done in 61.9292 s ( 80.7373 FPS).; GCS before = [INFO] [BatchGUI] 5000 iterations done in 261.396 s ( 19.1281 FPS); GCS after = [INFO] [BatchGUI] 5000 iterations done in 85.083 s ( 58.7661 FPS); ```; ```; (mu=0.0); LCP = [INFO] [BatchGUI] 5000 iterations done in 43.2622 s ( 115.574 FPS).; GCS before = [INFO] [BatchGUI] 5000 iterations done in 230.029 s ( 21.7364 FPS); GCS after = [INFO] [BatchGUI] 5000 iterations done in 68.9986 s ( 72.4652 FPS); ```. As for the simulation itself, the results are not exactly the same (even if visually, looks the same) between LCPCS or GCS; `regression step-by-step, 2000 steps`; ```; (mu=0.1); TOTALERROR: 3.18005; ERRORBYDOF: 0.00310931; ```; ```; (mu=0.0); TOTALERROR: 1.55088; ERRORBYDOF: 0.00154138; ```. But I cannot tell which one of the two (LCPCS or GCS) is the most ""precise"" 🤷. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4132:2014,test,test,2014,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4132,2,['test'],['test']
Testability,# CHANGELOG ; - [SofaDefaulttype] Add MapMapSparseMatrix multTranspose method with BaseVector. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/456:348,test,test,348,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/456,2,['test'],['test']
Testability,"# Problem; The configure step (and the generating step as well) became awfully slow on Windows.; After finding how to profile with CMake, we can find 3 slowing down parts with the vanilla set-up:. ![cmake0](https://user-images.githubusercontent.com/11028016/108479329-e30e7080-7295-11eb-9440-4571b63c3341.PNG); (trace after running the cmake process with a already populated CMakeCache). - CPack analysis at the end; - All modules does a awful lot of find_package() even if it is packages already found before; - (On windows only?) the sofa_install_lib at the beginning. # (Proposal of) Solution. Not an expert of CMake at all but this PR:; - Set an option if you really want to use CPack (this is only used when packing) -> **harmless**; - Modify sofa_find_package to test if the desired packages/target is already imported/loaded , use it everywhere -> **I may have missed something here**; - remove the recursiveness in sofa_install_package -> **seems OK on Windows but I suspect it was made for Linux actually**. Here is the trace after applying the modifications:; ![cmake1](https://user-images.githubusercontent.com/11028016/108480054-c292e600-7296-11eb-913c-7f3ad5a85adf.PNG). It takes only around 8sec instead of around 38 sec initially, on Windows (without counting generating apparently); In my Ubuntu VM, it takes around 2 sec for the whole process ! (configure + generating); But I have no doubt I may have introduce bugs etc. 🤨 so feel free to react. Unfortunately, I dont know for now how to reduce the generating step time 😥. # Nota Bene; For those interested on how to trace/profile the cmake processing time: #1838. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Revie",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1837:769,test,test,769,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1837,1,['test'],['test']
Testability,"# Purpose; For some reason, I stumbled upon a strange error where `EulerImplicitSolver` is no longer registered in the factory. It turns out that some `init...()` methods call are missing in `SofaComponentCommon`; Maybe this error arised on master because some includes directive have been cleaned, or some ; dependencies have been removed which were hiding this problem before. . # CHANGELOG; FIX; [SofaComponentCommon]; - Make sure `initComponentCommon()` method calls the init method of all the libraries that compose the package so that we are sure the `ObjectFactory` is well populated. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/488:845,test,test,845,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/488,2,['test'],['test']
Testability,"## ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=False. ```; [INFO] [BatchGUI] 1000 iterations done in 11.3896 s ( 87.799 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.82 1 7.71 510.45 9.73 15.92 9.73 87.39 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=True. ```; [INFO] [BatchGUI] 1000 iterations done in 4.48981 s ( 222.726 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.75 1 2.31 522.09 3.32 16.42 3.32 72.50 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### Conclusion. We can observe that the parallelism is necessary to take advantage of the constant sparsity pattern. The fastest configuration is now `ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=True` compared to `MatrixProjectionMethod + areJacobiansConstant=True` before this PR. It's a speed up of x1.8. For the records, at the beginning of this series of enhancement (https://github.com/sofa-framework/sofa/pull/4443), the reduced diamond run at 44 FPS. Now it is 222 FPS = speed up x5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4552:2861,test,test,2861,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4552,2,['test'],['test']
Testability,"## What; cxxopts is a header-only command-line parser library : https://github.com/jarro2783/cxxopts; Boost's program_options is bothersome and a bit overkill for what we do with it.; (and we want to go towards being able to compile SOFA without Boost one day). The API between them is quite similar but still different:; - value when adding parameter are std::string (instead of the type of the parameter); - implemented a callback system in ArgumentParser because cxxopts does not offer it (boost's name is ""notifier""); - when adding a new parameter boost is ""long_name,short_name"" whereas cxxopts is ""short_name,long_name"". More generally, I tried to hide most of the cxxopts use in ArgumentParser (previously there was a weird mix-up with boost), the only inconvenient place is when adding a new parameter. ## Notes; - Gui (and use of argumentparser) is really.... messy with static functions/variables and unsafe pointer uses here and there. This should be cleanup in the future.; - make SofaGUIGlut compile again even if not supported anymore (it was using boost program_options and I wanted to make it compile for the fun). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2263:1670,test,test,1670,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2263,2,['test'],['test']
Testability,"## issofa attachconstraint. ### New features. ### Improvements; - AttachConstraint: add a position, velocity and response factor in order to correct the constraint. ; - AttachConstraint: Add constraint factor per pair of constraint points to release progressively the attach.; - AttachConstraint: needs an initialization of the data constraintFactor, size of this factor should be at least as important as the minimum of the indices. ; - Scenes: parameter constraintFactor is needed for the component in the scene. ### Cleans. ### Bugfixes. ### Moved files. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/501:809,test,test,809,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/501,2,['test'],['test']
Testability,## issofa_meshspringff. ### New features. ### Improvements; - MeshSpringForceField: add drawing of springs elongation . ### Cleans. ### Bugfixes. ### Moved files. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/497:414,test,test,414,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/497,2,['test'],['test']
Testability,## issofa_springff. ### New features. ### Improvements; - SpringForceField: enabled flag in SpringForceField::Spring ; - SpringForceField: make all Data public to be able to edit the springs info from other components ; - SpringForceField: fix duplicated member . ### Cleans. ### Bugfixes. ### Moved files . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/498:559,test,test,559,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/498,2,['test'],['test']
Testability,"### Conclusion suggested. - SofaCUDA; - VolumetricRendering (ICI CE SERAIT LA RACINE DU ""plugin""); - CMakeLists.txt; - src; - VolumetricRendering/BaseVolumetricRenderer.h; - examples; - python/; - all python examples; - volumetricrendering/\_\_init\_\_.py; - tests; - extensions; - CUDA (nom de la target VolumetricRendering.CUDA); - CMakeLists.txt `find_package(VolumetricRendering)`; - src/>>>>; - VolumetricRendering/CUDA/BaseCudaVolumetricRenderer.h; - examples; - tests; - OpenCL (nom de la target VolumetricRendering.OpenCL); - CMakeLists.txt `find_package(VolumetricRendering)`; - src/>>> ; - VolumetricRendering/OpenCL/BaseCLXX.h; - examples; - tests; - Python (bindings); - CMakeLists.txt `find_package(VolumetricRendering)`; - src; - examples; - tests; - libraries",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4395#issuecomment-1884626282:259,test,tests,259,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4395#issuecomment-1884626282,4,['test'],['tests']
Testability,"### Description; This PR removes option to apply projective constraints during velocity and/or position propagation visitors, as it makes it unreliable to put projective constraints in child nodes (required when they apply on the DOFs but with a different/subset topology). All codes (solvers and animationloop) must now explicitly call projection operations/visitors before propagations when required (mostly after `OdeSolver::solve())`. This PR is changing the behavior as projective constraints because they are no longer applied at the end of Simulation::init(). To clearly make that visible to calling's code the propagate visitor was renamed to make sure existing codes fail at compilation time. ; To fix that in private/external repos should be easy:; - if projective constraints should not be applied, simply apply the rename to the visitor class; - if projective constraints should be applied, add a MechanicalProject???Visitor first, then rename the existing one. CHANGELOG for @guparan and @hugtalbot ; - [SofaKernel] Change the way all MechanicaVisitor apply projective constraints. This change is breaking the API aand external solver's code need to be updated (see #PR26). ; - ...to finish ....; ___________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [ ] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/216:1408,test,test,1408,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/216,1,['test'],['test']
Testability,"### New features; - UncoupledConstraintCorrection : add option to disable handling of topological changes for compliance vector; - Container : add accessor to the topology type; - SubsetMapping : add resizeToModel flag in SubsetMapping to enable resizing of the destination MechanicalState to the size of indices; - BaseContext : add new method getActiveMeshTopology to get relevant topology, taking `BaseMaping::sameTopology()` into account; - PointSetTopology : add some unit tests. ### Improvements; - each time a topological change sequence is detected in BarycentricMapperTriangleSetTopology the mapping is initialized; - PointSetTopologyContainer maintains a list of point indices, accessible through the data points; - Topology : Factorize the last method specific to each topological elements in data containers. ### Cleans; - MechanicalObject size and link to topology is now exposed as Data and Link, using the new getActiveMeshTopology() method. Set the link manually and/or set useTopology=""false"" to override. ### Bugfixes; - apply data container updates before mapping updates; - use existing parameter handleTopologyChange in SubsetMapping; - slightly cleanup topology change handling method for triangle mappers; - check of upper topology based on the emptiness of the upper container; - crash in `MeshTopology::init()` for non manifold meshes; - re-enable Propagate of topological changes inbetween triangle creation and removal in `TriangleSetTopologyModifier::addRemoveTriangles(),` as it is required in cases involving chains of topology mapping and topology data containers depending on each other . This is the re-opening of [previous issofa_topology pull-request](https://github.com/sofa-framework/sofa/pull/217). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break ex",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/243:478,test,tests,478,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/243,1,['test'],['tests']
Testability,"### Premises:; - plugin B is a dependency of plugin A (i.e A links dynamically against B); - plugin B implements `entrypoint()` but plugin A does not implement it; - PluginManger is set to load plugin A (which will then implicitly load plugin B). Then PluginManger, when trying to check if plugin A does implement `entrypoint()` will find `B::entrypoint()`, instead of returning a nullptr (indicating that the plugin is supposed to not implement it). Obviously this is not the desired outcome 🐛 . My reasoning would be that as the plugin B is direct dependency of A, when loaded by `dlopen()` (unix), is seen as an integral part of plugin A from a system-call point of view. This has been tested with Ubuntu. Did not test on MacOS but should be the same, as it uses dlopen too.; It seems this behavior is not present on Windows, the following demo does not show the bogus behavior. ---. ### Demo:; - adding `getModuleLicense()` which is supposed to be not implemented in Sofa.Component.StateContainer; - StateContainer is a dependency for some other Sofa.Component libraries. ```; extern ""C"" SOFA_EXPORT_DYNAMIC_LIBRARY const char* getModuleLicense();; const char* getModuleLicense(); {; return ""StateContainer License"";; }; ```; Result (Qt PluginManager windows calls `getModuleLicense()` if entry is supposed to be found). <img src='https://github.com/sofa-framework/sofa/assets/11028016/4b50f96f-d914-45ca-8dad-dbdaa0a90752' width='200'>. We can see the cascading wrong call to `getModuleLicense()`, as Collision has a dependency on Collision.Contact which has a dependency on StateContainer.; Moreover in this image, we can even see the `LGPL` which has been leaking from the recently added S.C LinearSystem to several other components. ---. ### Workaround; The workaround would be to implement obviously all the potential entrypoints in all the plugins, but the problem will arise again if a new entrypoint is added in the future....; At first glance, I thought that setting `RTLD_LOCAL` here; ht",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4462:689,test,tested,689,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4462,2,['test'],"['test', 'tested']"
Testability,"### Problem. **Description**; Good morning,; I have a problem with @ScheiklP's sofa_env test code. When I try to run; `python3 sofa_env/scenes/controllable_object_example/controllable_env.py`; I get. Traceback (most recent call last):; File ""C:\SOFA\Lib\site-packages\numpy\core\__init__.py"", line 24, in <module>; from . import multiarray; File ""C:\SOFA\Lib\site-packages\numpy\core\multiarray.py"", line 10, in <module>; from . import overrides; File ""C:\SOFA\Lib\site-packages\numpy\core\overrides.py"", line 8, in <module>; from numpy.core._multiarray_umath import (; ModuleNotFoundError: No module named 'numpy.core._multiarray_umath'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\SOFA\Lib\site-packages\numpy\__init__.py"", line 144, in <module>; from numpy.__config__ import show as show_config; File ""C:\SOFA\Lib\site-packages\numpy\__config__.py"", line 4, in <module>; from numpy.core._multiarray_umath import (; File ""C:\SOFA\Lib\site-packages\numpy\core\__init__.py"", line 50, in <module>; raise ImportError(msg); ImportError:. IMPORTANT: PLEASE READ THIS FOR ADVICE ON HOW TO SOLVE THIS ISSUE!. Importing the numpy C-extensions failed. This error can happen for; many reasons, often due to issues with your setup or how NumPy was; installed. We have compiled some common reasons and troubleshooting tips at:. https://numpy.org/devdocs/user/troubleshooting-importerror.html. Please note and check the following:. * The Python version is: Python3.10 from ""C:\Users\JetsLab\.pyenv\pyenv-win\versions\3.10.11\python3.exe""; * The NumPy version is: ""1.26.4"". and make sure that they are the versions you expect.; Please carefully study the documentation linked above for further help. Original error was: No module named 'numpy.core._multiarray_umath'. The above exception was the direct cause of the following exception:. Traceback (most recent call last):; File ""C:\sofa_env\sofa_env\scenes\controllable_object_example\controll",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5088:88,test,test,88,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5088,1,['test'],['test']
Testability,"### Problem. **Description**; I configure the sofa-cuda successfully, but when I generating it I get the error like this. ""CUDA_STANDARD is set to invalid value '17'"". **Steps to reproduce**; < LIST THE STEPS TO REPRODUCE YOUR PROBLEM HERE >. **Expected behavior**; < DESCRIBE WHAT YOU THINK SHOULD HAVE HAPPEN INSTEAD >. ---------------------------------------------. ### Environment. **Context**. - System: < ""Ubuntu 20.04"">; - CUDA 12.0; - Version of SOFA: stable branch; - State: < Build>. **Command called**. ```txt. < COPY-PASTE YOUR COMMAND HERE >. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. < COPY-PASTE HERE THE RESULT OF THE COMMAND ABOVE >. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. < COPY-PASTE YOUR OUTPUT HERE >. ```. **Content of build_dir/CMakeCache.txt**. < DRAG AND DROP YOUR CMAKECACHE.TXT HERE >. ---------------------------------------------. Thank you for your report.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3808:1205,Log,Logs,1205,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3808,1,['Log'],['Logs']
Testability,"### Problem. **Description**; I used to use the following node in my xml file but could not feel any forcefeedback on the haptic device when upgraded to sofa v21.06. The collision detection and collision response still works when haptic devices tools collide with other models in the scene.; And the same xml file worked well in sofa v19.12. _""LCPForceFeedback activate=""1"" forceCoef=""0.25"" tags=""PHANToM 2__omni""_. **Steps to reproduce**; An example scene file can be found here:. [TIPS_haptictool_gallbladder_v2106.txt](https://github.com/sofa-framework/sofa/files/7558079/TIPS_haptictool_gallbladder_v2106.txt). **Expected behavior**; The forcefeedback used to work well in sofa v19.12. ---------------------------------------------. ### Environment. **Context**. - System: Windows 10; - Version of SOFA: v21.06.00 binaries; - State: Build directory. **Command called**. ```txt. < COPY-PASTE YOUR COMMAND HERE >. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. < COPY-PASTE HERE THE RESULT OF THE COMMAND ABOVE >. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. No Error outputs or suspicious outputs has been found. ```. **Content of build_dir/CMakeCache.txt**. < DRAG AND DROP YOUR CMAKECACHE.TXT HERE >. ---------------------------------------------. Thank you for your report.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2487:1565,Log,Logs,1565,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2487,1,['Log'],['Logs']
Testability,### Problem. **Description**; I've just tried to install last SOFA version with binaries. **Steps to reproduce**; Install SOFA with the .run files and add SofaPython3 plugin. **Expected behavior**; There is an error when I tried to add the plugin. ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 22.04.1 LTS; - Version of SOFA: 23.06.00. ### Logs. ```txt. Plugin loading failed (/home/pchaillo/SOFA/v23.06.00/plugins/SofaPython3/lib/libSofaPython3.so): libpython3.8.so.1.0: cannot open shared object file: No such file or directory. ```; **Content of build_dir/CMakeCache.txt**. < DRAG AND DROP YOUR CMAKECACHE.TXT HERE >. ---------------------------------------------. Thank you for your report.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4159:388,Log,Logs,388,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4159,1,['Log'],['Logs']
Testability,### Problem. **Description**; The MeshGmshLoader does not seem to handle latest gmsh format. Associated Forum post: https://www.sofa-framework.org/community/forum/topic/unable-to-load-mesh/. ---------------------------------------------. ### Environment. **Context**. - System: Windows 10 + Ubuntu 18.04; - Version of SOFA: master branch + v21.06.00 binaries. **Command called**. ```txt. runSofa examples/Components/loader/MeshGmshLoader.scn. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. [ERROR] [MeshGmshLoader(GmshLoader)] File 'sq.msh' finally appears not to be a Gmsh file. ```. File to test:; [sq.zip](https://github.com/sofa-framework/sofa/files/7372243/sq.zip),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2433:499,Log,Logs,499,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2433,2,"['Log', 'test']","['Logs', 'test']"
Testability,### Problem. **Description**; The same simulation scene can lead to significative differences when executed on different OS. **Steps to reproduce**; The regression tests currently show that `examples/Components/forcefield/MeshSpringForceField.scn` is such a scene.; The PR https://github.com/sofa-framework/sofa/pull/3035 introduces another scene. **Expected behavior**; The same result on all OS,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3036:164,test,tests,164,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3036,1,['test'],['tests']
Testability,"### Problem. **Description**; This bug was first reported by @AlbanOdot in https://github.com/jnbrunet/caribou/issues/104. We have a component that opens a `ReadAccessor<Data<VecCoord>>` on a Mechanical Object position vector during the **init** stage of the scene. In the same callstack, the component will open another `ReadAccessor<Data<VecCoord>>` on the same MO position vector. The following small object can be taken as an example:. _Edit: I found out that the recursive ReadAccessor isn't even needed to reproduce the issue, simply having a component opening during init a read accessor on its own data, which parent is the MO vector, is enough._. ```c++; class TestComponent : public BaseObject {; public:; SOFA_CLASS(TestComponent, BaseObject);; using DataTypes = sofa::defaulttype::Vec3Types;; using VecCoord = DataTypes::VecCoord;; TestComponent() : d_position(initData(&d_position, ""position"", ""Position vector"")){}. void init() override {; Inherit1::init();; auto positions = ReadAccessor<Data<VecCoord>>(d_position);; test(positions.size());; }; void test(const sofa::Size & nb_of_nodes) {; auto positions = ReadAccessor<Data<VecCoord>>(d_position);; if (positions.size() != nb_of_nodes) {; std::cout << ""Just something to make sure the compiler compile this"" << std::endl;; }; }; private:; Data<VecCoord> d_position;; };; ```. The consequence will be that the MO object position vector won't be updated later on during time steps. However, if the same scene is run with a GUI, the problem disappears. The following scene can be taken as an example where a random displacement is imposed on a node before the time step, and the node position is printed afterwards. ```python; class Controller(Sofa.Core.Controller):; def __init__(self, MO):; super().__init__(); self.MO = MO. def onAnimateBeginEvent(self, _):; print(""\n\nonAnimateBeginEvent""); random_disp = np.random.normal(0, 1e-2, self.MO.position.value.shape); self.MO.position.value = self.MO.rest_position.value + random_disp; pr",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2761:670,Test,TestComponent,670,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2761,4,"['Test', 'test']","['TestComponent', 'test']"
Testability,"### Problem. **Description**; Trying to build with SOFA_TRACY enabled on Ubuntu 23.04/gcc, got some errors when linking LinearSolver.Direct.; No such error with MSVC2022. Could be a bug from Tracy ? 🤔. **Steps to reproduce**; Enable SOFA_TRACY and TRACY_ENABLE on Ubuntu23.04 and gcc,. **Expected behavior**; Linking correctly 😅. ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 23.04, gcc version 12.3.0 (Ubuntu 12.3.0-1ubuntu1~23.04); - Version of SOFA: master (https://github.com/sofa-framework/sofa/commit/22d783bb366fae979b31df6b22de60dde5a19d76). ### Logs. ```c++; /usr/bin/ld: Sofa/Component/LinearSolver/Direct/CMakeFiles/Sofa.Component.LinearSolver.Direct.dir/src/sofa/component/linearsolver/direct/SparseLDLSolver.cpp.o:(.data.rel.ro.local._ZZZN4sofa9component12linearsolver6direct15SparseLDLSolverINS_13linearalgebra35CompressedRowSparseMatrixMechanicalINS_4type3MatILj3ELj3EdEENS4_19CRSMechanicalPolicyEEENS4_10FullVectorIdEENS1_15NoThreadManagerEE17doAddJMInvJtLocalEPNS4_10BaseMatrixEPKNS4_12SparseMatrixIdEEdPNS2_23SparseLDLImplInvertDataINS6_6vectorIiNS6_16CPUMemoryManagerIiEEEENSM_IdNSN_IdEEEEEEENKUlRKT_E_clINS_10simulation5RangeIjEEEEDaSW_E26__tracy_source_location204[_ZZZN4sofa9component12linearsolver6direct15SparseLDLSolverINS_13linearalgebra35CompressedRowSparseMatrixMechanicalINS_4type3MatILj3ELj3EdEENS4_19CRSMechanicalPolicyEEENS4_10FullVectorIdEENS1_15NoThreadManagerEE17doAddJMInvJtLocalEPNS4_10BaseMatrixEPKNS4_12SparseMatrixIdEEdPNS2_23SparseLDLImplInvertDataINS6_6vectorIiNS6_16CPUMemoryManagerIiEEEENSM_IdNSN_IdEEEEEEENKUlRKT_E_clINS_10simulation5RangeIjEEEEDaSW_E26__tracy_source_location204]+0x8): undefined reference to `sofa::component::linearsolver::direct::SparseLDLSolver<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<sofa::type::Mat<3u, 3u, double>, sofa::linearalgebra::CRSMechanicalPolicy>, sofa::linearalgebra::FullVector<double>, sofa::component::linearsolver::NoThreadManager>::doAddJMInvJtLocal(s",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4283:602,Log,Logs,602,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4283,1,['Log'],['Logs']
Testability,"### Problem. **Description**; runSofa does not propagate correctly the key pressed & release event because of the weird use of the the CTRL combination. . **Steps to reproduce**; ```python; import Sofa. class Test(Sofa.Core.Controller):; 	def __init__(self, *args, **kwargs):; 		Sofa.Core.Controller.__init__(self,*args, **kwargs). 	def onKeypressedEvent(self, event):; 		print(""KEY PRESSED"", event). 	def onKeyreleasedEvent(self, event):; 		print(""KEY RELEASED"", event). def createScene(root):; 	root.addObject(Test(name=""Hello"")); ```; Start a simulation and keep pressing CTRL+A key. It will print!; ```console; KEY PRESSED: {...}; KEY RELEASED: {...}; ... /// lot of repetition; KEY PRESSED: {...}; KEY RELEASED: {...}; ```. **Expected behavior**; It should print a single KEY PRESSED & KEY RELEASED.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3384:209,Test,Test,209,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3384,2,['Test'],['Test']
Testability,"### Problem: Sofa crash when an Unicode string is used.; Here an example scene:. ``` python; # coding=utf-8; import Sofa. def createScene(node):; node.createObject('MechanicalObject', name=u""Éœùæ""); ```; With the current behavior, an Unicode string used as data is interpreted as a sequence. This causes some problems with path to files for example. ### Changelog. * In `Binding_BaseContext::pythonToSofaDataString:`, add unicode to string convertion and a warning message when PySequence_Check is true but the given PyObject is not a list.; * In `Binding_BaseData::SetDataValuePython` an unicode to string convertion too.; * And add a test. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/313:636,test,test,636,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/313,3,['test'],['test']
Testability,"### Problem; Hi,; I discovered a memory leak that seems to be connected to the collision detection pipeline / models. The scene contains 2 nodes with `MechanicalObject` and `PointCollisionModel`.; I repeatedly load and unload the scene, first with no collision models, then one collision model, and then two collision models.; -> each graph has 3 segments. ```python; import Sofa; import Sofa.Core; import Sofa.Simulation; from enum import Enum. class TestCase(Enum):; ONE_MODEL = 0; TWO_MODELS = 1; NONE = 2. class SimulationHandler:; def __init__(self):. self.root_node = Sofa.Core.Node(""root""); self.nodes = createScene(self.root_node, TestCase.NONE); Sofa.Simulation.init(self.root_node). def step(self):; Sofa.Simulation.animate(self.root_node, self.root_node.getDt()). def reload(self, case: TestCase = TestCase.NONE):. Sofa.Simulation.unload(self.root_node); self.root_node = Sofa.Core.Node(""root""); self.nodes = createScene(self.root_node, case); Sofa.Simulation.init(self.root_node). def createScene(root, case: TestCase):; plugins = [; ""Sofa.Component.Collision.Detection.Algorithm"",; ""Sofa.Component.Collision.Detection.Intersection"",; ]; for plugin in plugins:; root.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root.addObject(""DefaultAnimationLoop""); root.addObject(""DefaultPipeline""); root.addObject(""BruteForceBroadPhase""); root.addObject(""BVHNarrowPhase""); root.addObject(""DefaultContactManager""); root.addObject(; ""LocalMinDistance"",; alarmDistance=5.0,; contactDistance=0.5,; ). node_1 = root.addChild(""child_1""); node_1.addObject(""MechanicalObject"", position=[0, 0, 0] * 5). node_2 = root.addChild(""child_2""); node_2.addObject(""MechanicalObject"", position=[1, 1, 1] * 5). if case == TestCase.ONE_MODEL:; node_1.addObject(""PointCollisionModel""); elif case == TestCase.TWO_MODELS:; node_1.addObject(""PointCollisionModel""); node_2.addObject(""PointCollisionModel""); elif case == TestCase.NONE:; pass. return node_1, node_2. if __name__ == ""__main__"":; simulation = Simul",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318:452,Test,TestCase,452,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318,4,['Test'],['TestCase']
Testability,"### Problem; I want to use SofaPython3, and refer to the [page](https://sofapython3.readthedocs.io/en/latest/content/Installation.html) to install. However, I have met some problems:; **Description**; < DESCRIBE YOUR PROBLEM HERE >. **Steps to reproduce**; < LIST THE STEPS TO REPRODUCE YOUR PROBLEM HERE >. **Expected behavior**; < DESCRIBE WHAT YOU THINK SHOULD HAVE HAPPEN INSTEAD >. ---------------------------------------------. ### Environment. **Context**. - System: < NAME AND VERSION - e.g: ""Windows 10"", ""Ubuntu 20.04"", ... >; - Version of SOFA: < INFOS ABOUT THE BRANCH OR BINARIES - e.g: ""master branch at commit 70bb123"", ""v21.06.00 binaries"", ... >; - State: < BUILD OR INSTALL DIRECTORY - e.g: ""Build directory"", ""Install directory"" >. **Command called**. ```txt. < COPY-PASTE YOUR COMMAND HERE >. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. < COPY-PASTE HERE THE RESULT OF THE COMMAND ABOVE >. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. < COPY-PASTE YOUR OUTPUT HERE >. ```. **Content of build_dir/CMakeCache.txt**. < DRAG AND DROP YOUR CMAKECACHE.TXT HERE >. ---------------------------------------------. Thank you for your report.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4913:1462,Log,Logs,1462,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4913,1,['Log'],['Logs']
Testability,"### Problem; running failing due to loading of plugins ; **Description**; Hi, tried both SOFA v22.06.00 and v23.06.00 versions, but not able to load Sofa.Component.UserInterface.ConfigurationSetting plugin, which is causing failure of loading all the remaining plugins. check below error log. I am trying to run lapgym repo implementation , reach environment. Can also track the conversation in original repo : https://github.com/ScheiklP/sofa_env/issues/31; **Steps to reproduce**; Repo : https://github.com/ScheiklP/sofa_env; File : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/scenes/reach/scene_description.py; scene header file where plugins are loaded : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/sofa_templates/scene_header.py. **Expected behavior**. ---------------------------------------------. ### Environment. **Context**. - System: ""Ubuntu 20.04""; - Version of SOFA: v23.06.00 binaries"". **Command called**. ```txt; python3 /home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py. ```. **Env vars**. ```bash; #################; --- sys.version ---; 3.8.10 (default, Jul 29 2024, 17:02:10) ; [GCC 9.4.0]; --- PATH ---; /home/sofa/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin; --- SOFA_ROOT ---; /home/sofa/SOFA_v23.06.00/bin/.runSofa; --- PYTHONPATH ---; /home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages; --- sys.path ---; ['', '/home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/home/sofa/.local/lib/python3.8/site-packages', '/home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages']; #################. ```. Result logs :. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4905:288,log,log,288,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4905,1,['log'],['log']
Testability,"### _or how to avoid calling applyJ/applyJT on non-mechanical-purposed mappings (mainly for visual mapping)_. A mapping is considered mechanical from a MechanicalVisitor POV if:. 1. isMechanical is true (i.e mapForces, mapConstraints and mapMasses is true). It looks logical but certain Visitors, especially MechanicalPropagateDxVisitor, just ignore this trait and just calls go through all the mappings anyway; https://github.com/sofa-framework/sofa/blob/7a56c190fb8d293b1943006673ea43bb14844e65/Sofa/framework/Simulation/Core/src/sofa/simulation/mechanicalvisitor/MechanicalPropagateDxVisitor.cpp#L48-L54. 2. MechanicalPropagateDxVisitor is still called on (supposedly) non-mechanical mapping but applyJ() (more especially the implementation in Mappings), wont be called if the State does not store velocities. https://github.com/sofa-framework/sofa/blob/7a56c190fb8d293b1943006673ea43bb14844e65/Sofa/framework/Core/src/sofa/core/Mapping.inl#L150-L163. _**In a nutshell, ultimately avoiding calling applyJ/applyJT means that the output of a mapping should not be a **MechanicalObject** (the only implementation of State that store velocities, AFAIK)**_. ---. It should be more clearer on why there are MechanicalVisitors which still calls mechanical functions on flagged non-mechanical mappings, i.e why the ignore flag is true for MechanicalPropagateDxVisitor in FreeMotionAnimationLoop for example. https://github.com/sofa-framework/sofa/blob/7a56c190fb8d293b1943006673ea43bb14844e65/Sofa/Component/AnimationLoop/src/sofa/component/animationloop/FreeMotionAnimationLoop.cpp#L392",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4399:267,log,logical,267,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4399,1,['log'],['logical']
Testability,"### runSofa crash . **Description**; runSofa crash when a texture file is not found by OglModel. **Steps to reproduce**; put a wrong filename or path into a textureName:; `<OglModel name=""VisualBody"" src=""@loader"" texturename=""../Material/textures/colorTest.jpg"" />`. **Expected behavior**; Error message and do not use the texture but normal default material rendering. ---------------------------------------------. ### Environment. **Context**. - System: Windows 10; - Version of SOFA: master; - State: build version. ### Logs. ```; [ERROR] [OglModel(VisualBody)] Texture ""C:\projects\UnrealEngine\SOFA_test2\Plugins\SofaUE5\Content/Material/textures/colorTest.jpg"" not found; [ERROR] [Image] File C:\projects\UnrealEngine\SOFA_test2\Plugins\SofaUE5\Content/Material/textures/colorTest.jpg not found. ########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::dump; sofa::helper::BackTrace::sig; seh_filter_exe; seh_filter_exe; _C_specific_handler; _chkstk; RtlRaiseException; KiUserExceptionDispatcher; sofa::gl::Texture::update; sofa::gl::Texture::init; sofa::gl::component::rendering3d::OglModel::initVisual; sofa::component::visual::VisualModelImpl::drawVisual; sofa::simulation::VisualDrawVisitor::processVisualModel; sofa::simulation::VisualVisitor::processNodeTopDown; sofa::simulation::VisualDrawVisitor::processNodeTopDown; sofa::simulation::graph::DAGNode::executeVisitorTreeTraversal; sofa::simulation::graph::DAGNode::executeVisitorTreeTraversal; sofa::simulation::graph::DAGNode::executeVisitorTreeTraversal; sofa::simulation::graph::DAGNode::doExecuteVisitor; sofa::simulation::DefaultVisualManagerLoop::drawStep; sofa::simulation::Simulation::draw; sofa::gui::qt::viewer::qgl::QtGLViewer::DisplayOBJs; sofa::gui::qt::viewer::qgl::QtGLViewer::drawScene; sofa::gui::qt::viewer::qgl::QtGLViewer::draw. ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3567:525,Log,Logs,525,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3567,1,['Log'],['Logs']
Testability,"############')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. #################; --- sys.version ---; 3.8.10 (default, May 26 2023, 14:05:08) ; [GCC 9.4.0]; --- PATH ---; /opt/Qt/Tools/QtInstallerFramework/4.5/bin:/opt/Qt/5.12.8/gcc_64/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin; --- SOFA_ROOT ---; --- PYTHONPATH ---; --- sys.path ---; ['', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt; [INFO] [runSofa] PluginRepository paths = /builds/sofa/build/plugins:/builds/sofa/build/collections:/builds/sofa/build/lib; [INFO] [runSofa] DataRepository paths = /builds/sofa/src/share:/builds/sofa/src/examples:/builds/sofa/build:/builds/sofa/build; [INFO] [runSofa] GuiDataRepository paths = /builds/sofa/src/applications/projects/runSofa/resources:/builds/sofa/build; [INFO] [BaseGUI] Created directory: /builds/sofa/build/config; [INFO] [BaseGUI] Created directory: /builds/sofa/build/screenshots. ########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::sig(int); std::vector<std::filesystem::__cxx11::path::_Cmpt, std::allocator<std::filesystem::__cxx11::path::_Cmpt> >::~vector(); std::vector<std::filesystem::__cxx11::path::_Cmpt, std::allocator<std::filesystem::__cxx11::path::_Cmpt> >::~vector(); sofa::helper::system::FileRepository::findFileIn(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3943:2531,Log,Logs,2531,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3943,1,['Log'],['Logs']
Testability,#1294 wrongfully introduced a test generated file in the commit. This PR removes it and hopefully remove any further chance of this happening again. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1320:30,test,test,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1320,3,['test'],['test']
Testability,"#1300 . (+Cleaning, +Fix in SofaGuiQt); Add header config file to runSofa. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1302:326,test,test,326,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1302,2,['test'],['test']
Testability,#1306 . - Modularize all SofaMisc*; - Rename SofaMisc (module) to SofaMiscOther (!= SofaMisc the project/package); - Clean using pragma once/nested namespace; - Use SofaComponentMisc instead of SofaMisc (the project/package). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1307:477,test,test,477,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1307,2,['test'],['test']
Testability,"#1453 ; #1514; #1515 . We are trying to define a same type for index and size in all SOFA (like e.g Eigen::Index); It will allow us to a have more consistent, less confusing and potentially less error-prone code.; It has been decided that the common underlying type will be unsigned int.; Those core types are located in the sofa namespace (defined in sofa/config.h ); In the future all the typedefs concerning indices will be removed. a depreciation message for sofa::defaulttype::index_type has been done (as well as BaseMeshTopology::index_type typedef). BREAKING: ; - sofa::defaulttype::index_type moved and renamed to sofa::Index. sofa_index is deprecated but I suppose it can be breaking anyway, if index type used before was signed,; - newly introduced type for Size is sofa::Size; - all templates based on int/size_t/ etc will break.; - test with ""incorrect"" indices using -1 ; now that indices are unsigned, test for ""incorrect"" indices should be tested against InvalidID (already introduced some time ago), InvalidID is now sofa::InvalidID instead of sofa::defaulttype::InvalidID",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1539:845,test,test,845,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1539,3,['test'],"['test', 'tested']"
Testability,"#1453 was about to make uniform the type representing indices. But this ""universal"" index_type was a std::size_t which is a bit too much for our simulations (and breaks a lot of memory-dependent code such as CUDA things); This PR change this type to unsigned int; and fixes some forgotten index_type mistakes by the way. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1514:572,test,test,572,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1514,2,['test'],['test']
Testability,"#1527 . Based on master. Deprecates partially SofaSimpleFem. Isolate the diffusion into its own module, especially to highlight that SOFA can do more than solid mechanics. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2753:711,test,test,711,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2753,2,['test'],['test']
Testability,"#1527 . based on:; - #2717 (for one file moved in core). Deprecates partially _SofaBoundaryCondition_. Gathers all other forcefields which applies **external** force on mechanical objects. (torsion, compression, etc). https://mechanicalengineering.blog/types-of-loads/. I chose `MechanicalLoad` because of (https://en.wikipedia.org/wiki/Mechanical_load) and it seems an official term but I was hesitating also with `ExternalForce` (because these components set external forces on objects) ; Could have been simply `Load` as well, but there are other type of Load: electrical load for example. EDIT: create a new sub module for FEM, called **FEM.Damping**, which gathers DampingFF; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2783:1220,test,test,1220,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2783,2,['test'],['test']
Testability,"#1527 . based on:; - #2717 . contains:; - #2752 (UncoupledConstraintCorrection needs UniformMass). Deprecates partially SofaGeneralObjectInteraction, SofaConstraint and SofaBoundaryCondition. Module containing two types of Constraint in SOFA:; - **Projective** constraint; - **Lagrangian** constraint ; this submodule is itself subdived in three (four?) categories: **Model**, **Correction**, and **Solver**. (still debate on a fourth one with lagrangian-related constraint animation loop). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2790:1030,test,test,1030,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2790,2,['test'],['test']
Testability,"#1527 . based on:; - #2790. Deprecates partially **SofaConstraint**; Deprecates **SofaGeneralAnimationLoop**. Module with all the non-default animation loop.; DefaultAL stays in Core to allow scene to run even if one did not build this module (and its deps). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2797:798,test,test,798,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2797,2,['test'],['test']
Testability,"#1527 . based on:; - #2805 (for TriangleOctree in helper). Deprecates _**SofaEngine**_, **_SofaGeneralEngine_** and **_SofaMiscEngine_**. Create various submodules according to their nature (way of sorting is mine, matter of discussion); ~~- **Data**: manipulating Data (aka core::objectmodel::Data<>)~~; ~~- **Geometry**: various algo on geometry ops~~; ~~- **Math**: apply math functions~~; ~~- **Mesh**: generate or modify meshes~~; ~~- **Rigid**: rigid utilities (i.e vec+quat types)~~; ~~- **ROI**: select Region Of Interest~~; ~~- **Transform**: transformations ops (matrices)~~. - **Analyze** : inputs contains some kind of measurement/value; - **Generate** : create data from inputs; - **Select** : filter inputs; - **Transform**: apply some function on inputs. https://github.com/sofa-framework/sofa/issues/2906. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2812:1361,test,test,1361,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2812,2,['test'],['test']
Testability,"#1527 . based on:; - #2843 . Deprecates the rest of **SofaGraphComponent** and **SofaUserInteraction**. Create a GUI (out of Sofa.Component) module, with:; - **Common** (definition of GUIs); - GUIs themselves: **Batch**, **Qt** and **Headlessrecorder**; - **Component**, with components only used for GUI (settings linked to performers). Metamodule SofaGui is still used for runSofa (so with a kind of conditional factory, depending of the compilation option at cmake) but I think we should move this ""conditional"" compilation directly in runSofa. [~~ci-depends-on https://github.com/sofa-framework/SofaGLFW/pull/31~~]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2895:1159,test,test,1159,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2895,2,['test'],['test']
Testability,"#1527. After putting away OBB/Capsule components, SofaMiscCollision is still laying with some useful components for Collision. The only ones still inside were deemed non-supported (even bogus) in the few past months so they should die when SofaMiscCollision will be removed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2896:814,test,test,814,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2896,2,['test'],['test']
Testability,"#1527. Based on master. Deprecates partially SofaBaseMechanics and SofaMiscForceField. Nothing fancy. just gathers the 3 only masses present in SOFA.; I did not even need to change the namespace. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2752:735,test,test,735,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2752,2,['test'],['test']
Testability,"#1527. Based on master. Deprecates partially _SofaBaseMechanics_. It contains components used as a ""State"" in mapping, forcefield, etc. ; In reality, it is merely a module for MechanicalObject for the moment, as MappedObject is not really used anywhere; In the future, it could contain TemperatureContainer, etc. ~~namespaces are not changed, which is nice.~~. Collegial decision to rename it to **StateContainer**. EDIT:; [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/239]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2766:1034,test,test,1034,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2766,2,['test'],['test']
Testability,"#1527. In this case, ODESolver being gathered in Sofa.Component.ODESolver.*. This PR is mainly focused to be compatible with the current code base of SOFA so a full build/test is expected (or at least desired...). DO NOT MERGE.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2455:171,test,test,171,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2455,3,['test'],['test']
Testability,"#1527. based on ; - #2612 . Deprecates SofaGeneralVisual; Partially deprecates SofaBaseVisual. Nothing special in that module, except that it contains all visual stuff not related to OpenGL.; OpenGL related code will have its own plugin.; EDIT: #2709 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2679:792,test,test,792,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2679,2,['test'],['test']
Testability,"#1527; Based on ; - #2571 . Creating the module **Sofa.Component.IO**, where all the components linked to loading or exporting a mesh(.Mesh)~~/stuff(.Misc)~~ are contained.; Read/Writing stuff to repeat identical simulations (ReadState/Topology,etc) has been moved to a new category, namely **Sofa.Component.Playback**; Deprecates **SofaLoader**, **SofaGeneralLoader** and **SofaExporter**. Good module to test the compatibility of installation process, as the plugin Python3 has a dependency on the former SofaExporter. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2582:406,test,test,406,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2582,3,['test'],['test']
Testability,"#1527; based on ; - #2582. ~~It was supposed to be called Utils, but I did not really like this name (plural+shorten name) and Utility was more appealing...~~; EDIT: called `SceneUtility` now. Deprecates partially *SofaBaseUtils* and *SofaGraphComponent*. Questions:; ### RequiredPlugin; is needed to be implcitely loaded somewhere if a scene wants to load stuff.; Should it be moved in SofaCore (thus always available) or force load Sofa.Component.Utility somewhere; ### SceneChecker; SceneChecker stuff is in SofaBaseUtils but they are not component tho so it does not make sense to move them into Sofa.Component. Should they move somewhere (in the framework like SimulationCore) ?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2605:1224,test,test,1224,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2605,2,['test'],['test']
Testability,"#1529 . A priori not breaking. And usual cleaning (namespaces, pragma). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - builds with SUCCESS for all platforms on the CI.; - does not generate new warnings.; - does not generate new unit test failures.; - does not generate new scene test failures.; - does not break API compatibility.; - is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1530:311,test,test,311,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1530,2,['test'],['test']
Testability,"#1529. A good ol' fat module.; A priori not breaking. And usual cleaning (namespaces, pragma), . ~~This PR includes #1570 so this one must wait until it is merged~~ ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - builds with SUCCESS for all platforms on the CI.; - does not generate new warnings.; - does not generate new unit test failures.; - does not generate new scene test failures.; - does not break API compatibility.; - is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1556:406,test,test,406,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1556,2,['test'],['test']
Testability,"#1529. A priori not breaking. And usual cleaning (namespaces, pragma), remove sofa_no_opengl, and some includes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - builds with SUCCESS for all platforms on the CI.; - does not generate new warnings.; - does not generate new unit test failures.; - does not generate new scene test failures.; - does not break API compatibility.; - is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1540:352,test,test,352,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1540,2,['test'],['test']
Testability,"#1529. A priori not breaking. And usual cleaning (namespaces, pragma),. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1575:611,test,test,611,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1575,4,['test'],['test']
Testability,"#1529. A priori not breaking. And usual cleaning (namespaces, pragma),; Add dep to SofaCuda. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1580:632,test,test,632,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1580,2,['test'],['test']
Testability,"#1529. A priori not breaking. And usual cleaning (namespaces, pragma). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1565:610,test,test,610,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1565,4,['test'],['test']
Testability,"#1529. A priori not breaking. And usual cleaning (namespaces, pragma). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - builds with SUCCESS for all platforms on the CI.; - does not generate new warnings.; - does not generate new unit test failures.; - does not generate new scene test failures.; - does not break API compatibility.; - is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1531:310,test,test,310,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1531,6,['test'],['test']
Testability,"#1529. A priori not breaking. Usual cleaning (namespaces, pragma),. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1583:607,test,test,607,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1583,6,['test'],['test']
Testability,"#1529. A priori not breaking. Usual cleaning (namespaces, pragma),; Move non units test to SofaTests; Add dependency to SofaTopologyMapping. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1582:83,test,test,83,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1582,3,['test'],['test']
Testability,"#1529; Big (and important) one. A priori not breaking. Usual cleaning (namespaces, pragma),; Add forgotten license notices in some files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1592:677,test,test,677,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1592,2,['test'],['test']
Testability,"#1597 . - Set-up CMake for SofaCommon modularization.; - Usual cleaning (pragma, namespaces); - warnings removal; - useless headers/includes removal; - index/size uniformization. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1598:718,test,test,718,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1598,2,['test'],['test']
Testability,"#1597. - Usual cleaning (pragma, namespaces); - cmake dep polish; - remove useless includes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1607:632,test,test,632,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1607,2,['test'],['test']
Testability,"#1597. - Usual cleaning (pragma, namespaces); - warnings removal; - cmake dep polish. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1603:625,test,test,625,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1603,2,['test'],['test']
Testability,"#1597. - Usual cleaning (pragma, namespaces); - warnings removal; - cmake dep polish; - remove useless includes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1606:652,test,test,652,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1606,2,['test'],['test']
Testability,"#1597. - Usual cleaning (pragma, namespaces); - warnings removal; - index/size uniformization. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1601:634,test,test,634,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1601,2,['test'],['test']
Testability,"#1597. - Usual cleaning (pragma, namespaces); - warnings removal; - useless headers/includes removal; - index/size uniformization. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1599:670,test,test,670,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1599,4,['test'],['test']
Testability,"#1597; Big one!. - Usual cleaning (pragma, namespaces, etc.); - warnings removal; - index/size uniformization; - deprecation for point/line/triangle headers; - redispatch includes and remove useless ones. Still convinced that there are too many useless files inside but wont touch it in order to not break too much (for now). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1602:865,test,test,865,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1602,2,['test'],['test']
Testability,"#1597; Last one!. - Usual cleaning (pragma, namespaces); - cmake dep polish; - remove useless includes; - remove warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1608:662,test,test,662,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1608,2,['test'],['test']
Testability,"#1626 generalized the use of RGBAColor instead of Vec4f to select a color.; And all the functions were deprecated (but still usable) until the v21.06. For the upcoming release of v21.06, those functions have been deleted, but their definitions are still there, to inform the user how to fix the compilation error. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2197:853,test,test,853,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2197,2,['test'],['test']
Testability,"#1633. - Usual cleaning (pragma, namespaces); - cmake dep polish; - remove useless includes; - remove warnings. Remove a dependency in SofaGeneralSimpleFem as well (using a EigenMatrix for nothing apparently). EDIT: if error with SOFA_SOFAEIGEN2SOLVER_API -> #1670; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1635:805,test,test,805,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1635,2,['test'],['test']
Testability,"#1633. - Usual cleaning (pragma, namespaces); - remove useless includes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1640:612,test,test,612,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1640,2,['test'],['test']
Testability,"#1633. - Usual cleaning (pragma, namespaces); - remove/reorganize useless includes; - change dependency (SofaSimulationCommon (SofaSimulation) -> SofaSimulationCore (SofaFramework)). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1655:722,test,test,722,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1655,2,['test'],['test']
Testability,"#1633. - Usual cleaning (pragma, namespaces); - remove/reorganize useless includes; - fix some dependencies; - use only RGBAColor; - remove warnings; - use sofa::Size/sofa::Index (including missed functions, which makes this PR breaking for those inheriting for these components). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1676:820,test,test,820,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1676,2,['test'],['test']
Testability,"#1633. - Usual cleaning (pragma, namespaces); - remove/reorganize useless includes; - remove MechanicalObject header-dependency (not reflecting with library linking); - use only RGBAColor; - remove warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1653:747,test,test,747,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1653,2,['test'],['test']
Testability,"#1633. - Usual cleaning (pragma, namespaces); - remove/reorganize useless includes; - remove warnings; - use sofa::Size/sofa::Index. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1677:672,test,test,672,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1677,2,['test'],['test']
Testability,"#1633. - Usual cleaning (pragma, namespaces); - remove/reorganize useless includes; - remove warnings; - use sofa::Size/sofa::Index; - fix dependencies; - use rgbacolor. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1680:709,test,test,709,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1680,2,['test'],['test']
Testability,"#1885 . + some dispatch to SofaMeshCollision_test and SofaMiscCollision_test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2146:617,test,test,617,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2146,2,['test'],['test']
Testability,"#1885 . Add some licences here and there. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2154:581,test,test,581,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2154,2,['test'],['test']
Testability,"#1885. Converts all tests in the rest of the modules (i.e not the plugins) to Sofa.Testing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2188:20,test,tests,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2188,4,"['Test', 'test']","['Testing', 'test', 'tests']"
Testability,"#1885. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2153:546,test,test,546,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2153,2,['test'],['test']
Testability,"#1927 is suspected to causes crashes in multi-threaded scenes on Jenkins. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2017:613,test,test,613,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2017,2,['test'],['test']
Testability,"#1968. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1986:546,test,test,546,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1986,2,['test'],['test']
Testability,"#2197 should be merged first. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/150]. Cleaning (removing or setting ""deleted"") things that have been deprecated for long enough (some of them since 2017...). Also ; - improved the SOFA_DEPRECATED_HEADER macro to be consistent with SOFA_ATTRIBUTE_DEPRECATED.; - added SOFA_DISABLED_HEADER and SOFA_DISABLED_HEADER_NOT_REPLACED macros; - expanded namespace deprecation in SofaExporter. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2198:987,test,test,987,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2198,2,['test'],['test']
Testability,"#2883 was merged a little bit too fast, and some specializations were unfairly commented (well it was ugly in a way); this PR brings them back in the cpp (where it should have been) and the weird define/undef thingys removed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2885:765,test,test,765,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2885,2,['test'],['test']
Testability,#ifdef are error prone and not very friendly with CI. ; If you need barycentric info please make a PR to re-implement the behavior without #ifdef. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1046:398,test,test,398,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1046,2,['test'],['test']
Testability,"#include <sofa/simulation/simulation.h>; #include <sofa/simulation/Node.h>. This PR is based on #1735, #1749. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1750:649,test,test,649,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1750,2,['test'],['test']
Testability,"')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. #################; --- sys.version ---; 3.10.4 (main, Mar 23 2022, 23:05:40) [GCC 11.2.0]; --- PATH ---; /home/sergei/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl; --- SOFA_ROOT ---; /home/sergei/Source_code/Sofa_development/sofa/build_release/install; --- PYTHONPATH ---; /home/sergei/Source_code/Sofa_development/SofaPyhton3/build_release/lib/pyhton3/site-packages; --- sys.path ---; ['', '/home/sergei/Source_code/Sofa_development/SofaPyhton3/build_release/lib/pyhton3/site-packages', '/usr/lib/python310.zip', '/usr/lib/python3.10', '/usr/lib/python3.10/lib-dynload', '/home/sergei/.local/lib/python3.10/site-packages', '/usr/lib/python3.10/site-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. [sergei@sergei-20hd0000fr sofa]$ /home/sergei/Source_code/Sofa_development/sofa/build_release/bin/runSofa -l /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/lib/libSofaPython3.so /home/sergei/Optimus_test/test_scene.py ; [ERROR] [FileSystem::isDirectory()] /home/sergei/Source_code/Sofa_development/sofa/build_release/share/sofa/gui/runSofa: No such file or directory; [WARNING] [SofaEigen2Solver] SofaEigen2Solver is deprecated; Eigen classes are now located in Sofa.LinearAlgebra and SVDLinearSolver in SofaDenseSolver.You can remove SofaEigen2Solver from your scene, and if using SVDLinearSolver, please load SofaDenseSolver instead.; [INFO] [runSofa] PluginRepository paths = /home/sergei/Source_code/Sofa_development/Optimus/build_release:/home/sergei/Source_code/Sofa_development/SofaAuxiliaryComponents/build_release:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins:/home/sergei/Source_code/Sofa_development/sofa/b",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:7050,Log,Logs,7050,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Log'],['Logs']
Testability,"(EDIT: THIS PR WAS NOT CLEANED SO I MADE A VERSION 2 in PR #329). Currently in Sofa there is only rudimentary way to handle component evolution (change of implementation, change of parameters, deprecation) and report the change to our users. . In this PR I implemented a mecanism to do that. ; The basic idea is to have in scene a component that specify for which version of Sofa the scene have been tested. Here is how it looks in the scene:; ```xml; <APIVersion level='17.06'/>; ```; If the scene does not have this component the level is automatically set to 17.06 so existing scene will just work as they should. Now what happens if a scene with a given level is loaded in a sofa that have a different level (eg: '17.12'). In this case dedicated messages are printed to warn user things may go wrong. . Here is an example of what happen when loading a scene at level '17.06' on runSofa at level '17.12' (our master branch) with a BoxStiffSpringForceField (that could behave differently because of PR #290); ```; [INFO] [SceneChecker] The 'APIVersion' directive is missing in the current scene. ; Switching to the APIVersion level '17.06' ; [INFO] [SceneChecker] Validating a scene: ; - APIVersion checking: 1 ; - RequiredPlugin checking: 1; [WARNING] [BoxStiffSpringForceField(Spring)] BoxStiffSpringForceField have changed since 17.06. To use the old behavior you need to set parameter 'forceOldBehavior=true'; ```. The nice thing with the approach is that we can write custom condition to rise those messages. Here is a simple example (to handle PR315 & an imaginary deprecation of a component):; ```cpp; addHookInChangeSet(""17.06"", [](Base* o){; if(o->getClassName() == ""RestShapeSpringsForceField"" && o->findData(""external_rest_shape"")->isSet()); msg_warning(o) << ""RestShapeSpringsForceField have changed since 17.06. The parameter 'external_rest_shape' is now a Link. To fix your scene you need to add and '@' in front of the provided path. See PR#315"" ;; }) ;. addHookInChangeSet(""17.06"", [",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/322:400,test,tested,400,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/322,1,['test'],['tested']
Testability,"(For Windows); - Specialized functions of BilateralInteractionConstraint on Rigids were declared in the header file (useless); - the definition of these specialized functions did not have the _API keyword (exporting these symbols in the dll). There is currently no problem because components using BilateralInteractionConstraint are all in the same module... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2031:898,test,test,898,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2031,2,['test'],['test']
Testability,"(THIS WAS PR 322). Currently in Sofa there is only rudimentary way to handle component evolution (change of implementation, change of parameters, deprecation) and report the change to our users. . In this PR I implemented a mecanism to do that. ; The basic idea is to have in scene a component that specify for which version of Sofa the scene have been tested. Here is how it looks in the scene:; ```xml; <APIVersion level='17.06'/>; ```; If the scene does not have this component the level is automatically set to 17.06 so existing scene will just work as they should. Now what happens if a scene with a given level is loaded in a sofa that have a different level (eg: '17.12'). In this case dedicated messages are printed to warn user things may go wrong. . Here is an example of what happen when loading a scene at level '17.06' on runSofa at level '17.12' (our master branch) with a BoxStiffSpringForceField (that could behave differently because of PR #290); ```; [INFO] [SceneChecker] The 'APIVersion' directive is missing in the current scene. ; Switching to the APIVersion level '17.06' ; [INFO] [SceneChecker] Validating a scene: ; - APIVersion checking: 1 ; - RequiredPlugin checking: 1; [WARNING] [BoxStiffSpringForceField(Spring)] BoxStiffSpringForceField have changed since 17.06. To use the old behavior you need to set parameter 'forceOldBehavior=true'; ```. The nice thing with the approach is that we can write custom condition to rise those messages. Here is a simple example (to handle PR315 & an imaginary deprecation of a component):; ```cpp; addHookInChangeSet(""17.06"", [](Base* o){; if(o->getClassName() == ""RestShapeSpringsForceField"" && o->findData(""external_rest_shape"")->isSet()); msg_warning(o) << ""RestShapeSpringsForceField have changed since 17.06. The parameter 'external_rest_shape' is now a Link. To fix your scene you need to add and '@' in front of the provided path. See PR#315"" ;; }) ;. addHookInChangeSet(""17.06"", [](Base* o){; if(o->getClassName() == ""TheCompon",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/329:353,test,tested,353,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/329,1,['test'],['tested']
Testability,"(and nodiscard keywords). \+ replace double with SReal; ~~\+ using forwarding header file for RGBAColor (removing a TODO from 4 years ago :p )~~ nope. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3270:690,test,test,690,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3270,2,['test'],['test']
Testability,"(based on #1790). ## Description:; Move some types from SofaHelper and SofaDefaulttype into Sofa.Type. - sofa::defaulttype::BoundingBox (and its variants) becomes sofa::type::BoundingBox (and co); - sofa::defaulttype::Frame becomes sofa::type::Frame; - Material (for rendering) becomes sofa::type::Material ; - PrimitiveGroup becomes sofa::type::PrimitiveGroup ; - Ray becomes sofa::type::Ray; - RGBAColor becomes sofa::type::RGBAColor . ## Breaking; A priori nothing is breaking with the compatibility layer. ## Talking; RGBAColor is introducing a static function with exception (was displaying an error in the Messaging system before); But this function is not used anywhere... and there is a version with a boolean actually (read()). ## Note; Quite straight-forward and not really prone to errors due to the fact those are much less ""important"" than Vector/Quat/Matrix, etc. Mandatory to mention: #1521. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1818:1446,test,test,1446,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1818,2,['test'],['test']
Testability,"(based on #2307 ). Pretty annoying to forget to enable diffusionsolver every time image is required.; And it appeared that in fact image does not even need this plugin... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2308:710,test,test,710,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2308,2,['test'],['test']
Testability,"(because otherwise it is copying the data and generate a compilation warning). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1879:618,test,test,618,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1879,2,['test'],['test']
Testability,(brutal) Rename TModels into CollisionModels and update all scenes:. - TPointModel becomes PointCollisionModel; - TLineModel becomes LineCollisionModel; - TTriangleModel becomes TriangleCollisionModel; - TSphereModel becomes SphereCollisionModel. and all examples are updated. Let's see the CI. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1034:546,test,test,546,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1034,2,['test'],['test']
Testability,"(cherry picked from commit f2f4f02fdedad69765b22b31af4a16840c854866). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2016:609,test,test,609,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2016,2,['test'],['test']
Testability,"(edited); No problem for me since boost is now mandatory. ; As seen in the main CMakeLists.txt, line 158:; `find_package(Boost REQUIRED)`. Does the job, no test broken, fixes one failing test: green light for me.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/99#issuecomment-266968755:156,test,test,156,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/99#issuecomment-266968755,2,['test'],['test']
Testability,"(just randomly enabled SOFA_GPU_CUBLAS 😅). Starting from CUDA12, you cannot include both cublas.h and cublas_v2.h (throw a compilation error). There is apparently no code using the functions enabled by SOFA_GPU_CUBLAS so nothing to test against... Reference:; https://docs.nvidia.com/cuda/cublas/index.html; ```; Starting with version 4.0, the cuBLAS Library provides a new API, in addition to the existing legacy API. This section discusses why a new API is provided, the advantages of using it, and the differences with the existing legacy API.; Warning; The legacy cuBLAS API is deprecated and will be removed in future release.; ```. and CUDA4 was released in early 2011, so I may think we could throw the legacy support away...; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4274:232,test,test,232,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4274,3,['test'],['test']
Testability,"(merely a refreshed version of #2455 ); Waiting for ; - ~~https://github.com/sofa-framework/sofa/pull/2565~~. Kickstart of the implementation of SOFA-NG, as in defined #1527 (https://annuel2.framapad.org/p/sofang-v8). - Move files into a new file hierarchy (Sofa.Component.Stuff.Foo.Bar); - Change the namespace according to the path (sofa::component::stuff::foo::Bar); - Add compatibility layer (header path + aliases); - Deprecated modules redirect/load the new ones (e.g SofaExplicitSolver loads explicitely Sofa.Component.ODE.Forward). Tests show that the compat layer is working well for the moment (no warning/error for regression/scene tests) and only one unit test was complaining, as it was explicitly testing on the old name). Deprecates **SofaExplicitSolver**, **SofaImplicitSolver**, **SofaGeneralExplicitSolver**, **SofaGeneralImplicitSolver** and **SofaMiscSolver**. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2571:540,Test,Tests,540,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2571,6,"['Test', 'test']","['Tests', 'test', 'testing', 'tests']"
Testability,"(not the PR itself) ; I am wondering why does the `plugins/` dir CMakefile tests the presence of Sofa.GL ?; IMO it should be in the CMakefile of the plugin itself, where it does ` find_package()`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3514#issuecomment-1333215217:75,test,tests,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3514#issuecomment-1333215217,1,['test'],['tests']
Testability,"(not the topological ones 😏). {Length,Radius,Stiffness,Poisson}Container was created a **long time ago** to provide an ""external location"" where to set data per element, regardless of the component.; But: ; - the design was flawed (hard deps, not generic at all); - the remaining files are just interfaces (virtual ... =0) and there is no implementation at all in the whole codebase (deleted files in the past? forgotten plugins?), so the code itself at the moment is totally useless. Actually 3 of them was even not including the necessary headers... So the best course of action to do IMO is to delete them, and maybe find an other design later to provide means to get data per element (opposed to data for the whole set of elements). A nice side effect is that SofaTopologicalMapping just depends on SofaBaseTopology now.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2099:1365,test,test,1365,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2099,2,['test'],['test']
Testability,"(should) Fix issue #2066. The GraphListener for the visual Graph is frozen when runSOFA is started (and never unfrozen); The temp fix to swap tabs was unfreezing it actually.; But I think letting it unfrozen is also a not-so-good idea as the listener will update a lot (how many? I dont know) the graph for nothing. Now this PR unfreeze/freeze the visual graph at each timestep of the simulation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2458:936,test,test,936,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2458,2,['test'],['test']
Testability,(was [SofaKernel] Create SofaTypes module (with Vec)). Issue #1521 . Description: <WIP>. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - builds with SUCCESS for all platforms on the CI.; - does not generate new warnings.; - does not generate new unit test failures.; - does not generate new scene test failures.; - does not break API compatibility.; - is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1553:328,test,test,328,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1553,2,['test'],['test']
Testability,(when no mstate is provided). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1480:281,test,test,281,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1480,2,['test'],['test']
Testability,"(without the tests....). Main problem is the linear solvers using CSPARSE, which only handles double.; Actually, SparseCholesky was using buffers of float with pointers of double (which obviously causes a crash).; SparseLU is more convenient, it tried to use SReal, and make the compilation failing directly. There were at least two way to solve this problem:; - disable in the CMakeLists directly (if floating_point is float); - do not compile the instance templated on float (effectivement does not compile the two solvers). I chose the latter to keep them visible in the base code, but I totally agree with the former solution (but requires to access to the Cmake variable SOFA_FLOATING_POINT from Sofa.Config in the CMakefile of S.C.LS.Direct). An other thing is that preconditionner wants to use SparseCholesky as well so there is a conditional compilation happening here unfortunately. I dont know if it is possible to just use an other direct solver (probably). This was needed to test the performance tests for ; - #2856. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2907:13,test,tests,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2907,5,['test'],"['test', 'tests']"
Testability,") ;; EXPECT_MSG_EMIT(Error) ;. mycomponent.load(""atotallybrokenfile.txt""); }. /// By default test failure are catched from Sofa_test. This means that the information returned; /// in the test failure are the location of the failure in Sofa_test.cpp:lineno; /// This is why it is always better to explicitely specify the test behavior (possible the same as ; /// the default one as it will report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void complexTestBehavior(); {; /// Here is the default mode. ; ....; {; /// We will report a failure is there no warning nor error emitted before the end of this block. ; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;; ...; { ; /// But this sub-part does not count... and it shouldn't emit a message. ; EXPECT_MSG_NOEMIT(Error) ;; .... ; }; }; }; ```. This PR will generate a lot of new test failure... that are either real failure that deserve investigation or ; tests that was previously simply previously ignoring error & warning messages; . CHANGELOG for @hugtalbot & @guparan :; - TestMessageHandler.cpp implements a new & robust way to connect msg_* message to test failure ; - TestMessageHandler_test.cpp implements test for TestMessageHandler. ; - Sofa_test is updated to use the new TestMessageHandler where msg_error generates test failures ; - All the existing tests have been changed to use the new API & removed the old one. ; - MeshSTL.cpp replace a std:cerr by a msg_error so that FIX the corresponding failing test.; - Message.cpp adds a way to convert message type to string.; - updates externs/gtest to a fresh checkout. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failu",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:2388,test,test,2388,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,1,['test'],['test']
Testability,"); MaterialDataWidget.cpp.o MaterialDataWidget.h DataWidget.h ModifyObject.h (1504 ms); moc_QDisplayDataWidget.cpp.o QDisplayDataWidget.h DataWidget.h ModifyObject.h (1473 ms); WDoubleLineEdit.cpp.o (1407 ms); DisplayFlagsDataWidget.cpp.o DisplayFlagsDataWidget.h DataWidget.h ModifyObject.h (1379 ms); QRGBAColorPicker.cpp.o QRGBAColorPicker.h DataWidget.h ModifyObject.h (1375 ms); ... 22925 ms: sofa/SofaKernel/modules/SofaCore/src/sofa/core/ObjectFactory.h (included 440 times, avg 52 ms), included via:; initOpenGLVisual.cpp.o (192 ms); PointSetTopologyAlgorithms.cpp.o (191 ms); initValidation.cpp.o (187 ms); DataDisplay.cpp.o (186 ms); DifferenceEngine.cpp.o (178 ms); MeshObjLoader.cpp.o (177 ms); ... 21119 ms: sofa/extlibs/gtest/include/gtest/internal/gtest-port.h (included 176 times, avg 119 ms), included via:; gtest-typed-test.cc.o gtest-typed-test.h (796 ms); gtest-port.cc.o (666 ms); gtest-death-test.cc.o gtest-death-test.h gtest-death-test-internal.h gtest-internal.h (650 ms); gtest-test-part.cc.o gtest-test-part.h gtest-internal.h (463 ms); gtest-filepath.cc.o gtest-filepath.h gtest-string.h (456 ms); gtest.cc.o gtest.h gtest-internal.h (246 ms); ... 20903 ms: sofa/SofaKernel/modules/SofaHelper/src/sofa/helper/vector.h (included 156 times, avg 133 ms), included via:; MeshGmsh.cpp.o MeshGmsh.h Mesh.h (492 ms); MeshTopologyLoader.cpp.o MeshTopologyLoader.h Mesh.h (402 ms); Image.cpp.o Factory.inl (384 ms); SVector.cpp.o SVector.h (379 ms); GenerateRigid.cpp.o GenerateRigid.h Mesh.h (373 ms); TestMessageHandler.cpp.o TestMessageHandler.h (346 ms); ... 19960 ms: /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/pstl/glue_algorithm_defs.h (included 157 times, avg 127 ms), included via:; qglviewer.h camera.h QMap qmap.h qiterator.h qglobal.h algorithm (348 ms); manipulatedCameraFrame.h manipulatedFrame.h frame.h QObject qobject.h qobjectdefs.h qnamespace.h qglobal.h algorithm (345 ms); gtest-typed-test.h gtest-port.h algorithm (299 ms); mouseGrabbe",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1523:35367,test,test-part,35367,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1523,1,['test'],['test-part']
Testability,"* Add blending, therefore keeps background and other opaque models (but rendering is still better with a whitish background); * Add scene with collisions; * Add an example of the execution policy (std::execution::par) introduced by c++17 in the brute-force findNeighbors() in the forcefield (faster than the spatialgrid if nbParticles is approx less than 5K). Blending should be temporary, and having a multi pass would be better (refraction, etc); ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1215:700,test,test,700,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1215,2,['test'],['test']
Testability,"* Added getter for ContactsVector. Added a buffer variable that is overwritten before ContactsVector is cleared. Added functions to retrieve the number of contacts and their respective distance values in the buffer. * added a check before trying to access contact information. Added a function to also retrieve a list of collision point pairs. * Simplified code a bit, by moving the check up in the hierarchy. * Added a getter function to retrieve the element ids of the collision models. This can be used to lookup the ids in a MechanicalObject that are affected by a contact from a topology (get elements -> lookup MO ids in topology -> lookup points in MO). Also added some Docstrings. * Exchanged push_back with emplace_back and sped up code by reserving memory for vectors. * Replaced Vector3 from helper with Vector3 from defaulttypes. * Changed unsigned int to sofa::Size and placed curly brackets on new line. #1678 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1683:1465,test,test,1465,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1683,2,['test'],['test']
Testability,"* Code factorization; * Remove unnecessary C-style casts; * Remove unnecessary redirecting intermediate function; * Use class access specifiers (make members protected). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2881:709,test,test,709,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2881,2,['test'],['test']
Testability,"* Usual cleaning (pragma, namespaces); * Package SofaGuiCommon, SofaGuiQt, SofaHeadlessRecorder : cleaner deps handling. ⚠ SofaGuiMain has been removed as it was doing nothing except GUI registrations. ; So it was deemed more convenient to move those registrations into SofaGui itself.; And people was misusing SofaGuiMain as SofaGui anyway: lots of projects were linking with SofaGuiMain, where it would have been more correct to link with SofaGuiCommon or SofaGuiQt.; The only relevant case to link SofaGuiMain was for applications wishing to run GUIs. (i.e runSofa, Modeler). So now if you need to create a an application with a GUI using SofaGuiCommon/SofaGuiQt, you have to link with SofaGui instead of SofaGuiMain (and do initSofaGui() instead of initSofaMain() to register batch/qt/qglviewer/headlessrecorder modes). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1719:1363,test,test,1363,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1719,2,['test'],['test']
Testability,"**Description**. Performing mouse picking and removing element using mouse interactor make runSofa crash.; Same problem as the one identified in issue #3202 . **Steps to reproduce**; Very easy using scene examples/TriangleSurfaceCutting.scn ; 1. use pick handler (shift + mouse left); 2. remove element using shift + mouse right; 3. crash as soon as one vertex is removed, see movie . https://user-images.githubusercontent.com/21199245/194725514-40441983-5fdb-43f1-9bd2-054bdd9aaa5b.mp4. ### Environment. **Context**. - System: any, windows or linux; - Version of SOFA: master. ### Logs. ```; Sofa.Component.Topology.Container.Dynamic.dll!sofa::component::topology::container::dynamic::PointSetTopologyContainer::setPointTopologyToDirty() Line 177	C++; 	Sofa.Component.Topology.Container.Dynamic.dll!sofa::component::topology::container::dynamic::PointSetTopologyModifier::removePointsWarning(sofa::type::vector<unsigned int,sofa::type::CPUMemoryManager<unsigned int>> & indices, const bool removeDOF) Line 378	C++; 	Sofa.Component.Topology.Container.Dynamic.dll!sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::removeTrianglesProcess(const sofa::type::vector<unsigned int,sofa::type::CPUMemoryManager<unsigned int>> & indices, const bool removeIsolatedEdges, const bool removeIsolatedPoints) Line 471	C++; 	Sofa.Component.Topology.Container.Dynamic.dll!sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::removeTriangles(const sofa::type::vector<unsigned int,sofa::type::CPUMemoryManager<unsigned int>> & triangleIds, const bool removeIsolatedEdges, const bool removeIsolatedPoints) Line 332	C++; 	Sofa.GUI.Component.dll!sofa::gui::component::performer::TopologicalChangeManager::removeItemsFromTriangleModel(sofa::component::collision::geometry::TriangleCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3,double>,sofa::type::Vec<3,double>,double>> * model, const sofa::type::vector<unsigned int,sofa::type::CPUMemoryManager<unsigned",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3370:582,Log,Logs,582,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3370,1,['Log'],['Logs']
Testability,"**Preliminary work before changing ""a little"" the TopologyChange API.**; Rename some classes to match their file names :; - TopologyDataImpl into TopologyData; - TopologySubsetDataImpl into TopologySubsetData; - TopologySparseDataImpl into TopologySparseData. Rename files:; - core/topology/BaseTopologyEngine into core/topology/TopologyEngine as the class was TopologyEngine ; - SofaBaseTopology/TopologyEngine into TopologyDataEngine. Use alias template to simplify code of TopologyData and change inheritence of TopologySubsetData and TopologySparseData to factorize some code. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1872:1120,test,test,1120,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1872,2,['test'],['test']
Testability,"**Steps to reproduce**; launch runSofa; right click on the sceneGraph; click on ""Add Node""; it crash. **Expected behavior**; not crashing. **Caused by**; In QSofaListView... the function ; ```cpp; void QSofaListView::RaiseAddObject(); {; emit Lock(true);; assert(AddObjectDialog_);. std::string path( (dynamic_cast<RealGUI*>(QApplication::topLevelWidgets()[0]))->windowFilePath().toStdString());; AddObjectDialog_->setPath ( path );; AddObjectDialog_->show();; AddObjectDialog_->raise();; emit Lock(false);; }; ```; The dynamic_cast<> not necessarily returns the expected RealGUI windows.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3024:256,assert,assert,256,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3024,1,['assert'],['assert']
Testability,"**WARNING: This PR will surely conflict with your dev branches**. Commands executed:; `run-clang-tidy.py -header-filter='.*' -checks='-*,modernize-use-override' -fix`; `run-clang-tidy.py -header-filter='.*' -checks='-*,modernize-use-nullptr' -fix`; `licenseUpdater.sh . auto 2019 ""development version""`. With the help of this blog article: https://www.kdab.com/clang-tidy-part-1-modernize-source-code-using-c11c14/. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899:667,test,test,667,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899,2,['test'],['test']
Testability,**Warning**: there are [two failing unit tests](https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-5.4_options/712/testReport/).,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/368#issuecomment-323972645:41,test,tests,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/368#issuecomment-323972645,2,['test'],"['testReport', 'tests']"
Testability,"**[Only Windows/MSVC]**. I cannot explain at all 👺. On MSVC2022(17.7.4) and Release mode, a crash happens with `examples/Demos/fallingBeamLagrangianCollision.scn` when a collision occurs. It crashes when trying to insert values in the triplets vector (suspecting a memory error somewhere). Weirdly, it does not crash in RelWithDebug mode 🤐. ; *And* it does not crash as well on MSVC2019, as the CI (jenkins) uses it in release mode while testing the scene. At the code generation time (compiler?optimizer?) it does throw a warning like:; `1>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector(398): warning C4789: buffer 'triplets' of size 16 bytes will be overrun; 8 bytes will be written starting at offset 16`; only in Release mode. --. Two fixes possible (found by trial-and-error 🤡); - using std::vector instead of sofa::type::vector; - using a struct instead of the tuple; ; I used the std::vector one as it was the simplest. I suspect there is a bug(???)/issue with the optimizer/vectorizer of MSVC , or the allocator but i cannot prove anything 🙊. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4180:438,test,testing,438,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4180,3,['test'],"['test', 'testing']"
Testability,"**_TLDR_**; Sofa.Compat has a structure different than the other package/module, and there is a (not used) cmake option to define (to false). Sofa.Compat does not really fit the macro from SofaMacroInstalls, because this one supposed that a project composed like either:; - sofa/xxxxxx/yyyy.h; - SofaXXXX/yyy.h; and is doing different stuff for each case.; But Sofa.Compat is.. both as it is supposed to be a compatibility layer for either stuff from SofaFramework (with the first organization) or from modules (the other one); After some pain through the cmake macros, I found the option OPTIMIZE_BUILD_DIR for `sofa_create_package_with_targets`which, if defined AND false, will bypass the process of checking the file structure, and copy as it is (what we want). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2360:1304,test,test,1304,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2360,2,['test'],['test']
Testability,"**https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-850/CI_CONFIG=ubuntu_gcc-5.4,CI_PLUGINS=options,CI_TYPE=release/2/** warnings4Result/package.-377079774/. \+ . see BUILD_URL/**artifact/parent_dir/build/scene-tests/examples/Components/constraint/FixedLMConstraint.scn/output.txt**. =. https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-850/CI_CONFIG=ubuntu_gcc-5.4,CI_PLUGINS=options,CI_TYPE=release/2//artifact/parent_dir/build/scene-tests/examples/Components/forcefield/JointSpringForceField.scn/output.txt",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/850#issuecomment-446541019:219,test,tests,219,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/850#issuecomment-446541019,2,['test'],['tests']
Testability,*SpringForceField fixes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/290:276,test,test,276,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/290,2,['test'],['test']
Testability,"+ Added the submodules that enable the ROS Connector Plugin; - This includes the submodules for SoftRobot, STLLIB and SofaROSConnector from Fabian Aichele. + Added a bash script that automates the build with `CMakeLists.txt`. + Added a Dockerfile for automated debian builds. + Appended the path to the `FindROS` and `Log4CXX` modules to the root `CMakeLists.txt` file. + I will be leaving a customized docker build on my [docker repo](https://hub.docker.com/u/lakehanne/sofa). + Enough said :100: . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1122:751,test,test,751,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1122,2,['test'],['test']
Testability,"+ some cleaning and hard coded epsilon removals. Should not be breaking, EXCEPT: ; - for code using Vec/Mat without including them (👎); - rare code depending on Vec3 as parameters 🧨. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1518:434,test,test,434,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1518,2,['test'],['test']
Testability,"+1 for tracing compiler's time (and thus template instanciation and .h parsing) and fixing things. ; 15 sec of compiler time on a 8 core machine is actually (8*15 sec)), this is quite significant :) . Could you verify that the change didn't not decrease the performances (maybe we should have for each .h tp .cpp of core class a small benchmark to asses the performacne difference). On my side I'm still very surprised that all the move we are doing in removing code from .h to put them into dedicated translation unit has so limited impact on performances. To me either the compiler's are very good nowaydays (thanks to GO/IPO/LTO) or a lot of code was not optimized because of our code architecture (eg: no final keyworkd in overriden method preventing optimization).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3401#issuecomment-1285131009:335,benchmark,benchmark,335,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3401#issuecomment-1285131009,1,['benchmark'],['benchmark']
Testability,"- #3931 . added a `enabled` data for all VisualModels. OglModel already had a data with the same feature (`isEnabled`) so this PR removes it.; Breaking because of the removal of the Data isEnabled (change of type) so the code using it as a Data will break,. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4822:797,test,test,797,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4822,2,['test'],['test']
Testability,"- #4533. did not remove everything of Sofa.Component.Compat and was even throwing a (harmless) warning at the cmake configure stage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4596:672,test,test,672,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4596,2,['test'],['test']
Testability,"- **Rename** compute2PointsBarycoefs -> computeEdgeBarycentricCoordinates; - **Rename** computeRest2PointsBarycoefs -> computeEdgeBarycentricCoordinates with parameter useRestPosition to set at true; - **Add** deprecation mechanism and backward compatibility; - **Update** all methods to use sofa::geometry::Edge::getBarycentricCoordinates instead of their own wrong version. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4190:915,test,test,915,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4190,2,['test'],['test']
Testability,"- A specialization for Mat was not used. ; - Hard-coded doubles are replaced by the right type, which depends on the template; - Floating points are passed by value. ; - A description is added; - Rigid types specialization are factorized. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2755:778,test,test,778,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2755,2,['test'],['test']
Testability,- ADD function run-single-test-subtests executed if a test crashes to run each subtest and avoid results loss.; - EDIT function print-summary to count crashes as errors.; - EDIT XML report on crashed tests. Set duration to 1s to differentiate errors and failures. This should be done by Jenkins JUnit plugin... See https://issues.jenkins-ci.org/browse/JENKINS-4951; - FIX function print-summary on Windows (MinGW bash). See issue #149 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/200:26,test,test-subtests,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/200,4,['test'],"['test', 'test-subtests', 'tests']"
Testability,"- Add comments; - Fix doxygen; - Avoid duplicated code; - minor cleaning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2243:613,test,test,613,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2243,2,['test'],['test']
Testability,- Add demo scene done for PR1000; - [share] Update square_2594_triangles mesh to have material and texcoords. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1112:361,test,test,361,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1112,2,['test'],['test']
Testability,"- Add getter; - Add tests; - Update init mechanism to match Triangular and Triangle FEM. Add a lot of comment to describe the optimization of this component and try to solve the small difference comprare to TriangleFEM but changing the code slow down its convergence for unknown reason... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2284:20,test,tests,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2284,3,['test'],"['test', 'tests']"
Testability,"- Add method ```addTopologyEventCallBack``` in TopologyData to be able to register callback to the TopologyHandler without having to manually create and manipulate this handler class.; ```addTopologyEventCallBack``` redirect the registration to ```TopologyHandler->addCallBack```; - Various minor cleaning in code comments. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2375:863,test,test,863,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2375,2,['test'],['test']
Testability,"- Add method to remove an interaction constraint given the dof index and the input mechanicalObject Id; - Add 2 Single Links to the topology containers to be set to activate topological changes support. ; - Convert constraint index lists from `type::vector<in>` to `TopologySubsetIndices`; - Add callback on the subsetIndices to track topologcial changes. The callback are added only if valid Topology are found using the SingleLinks; - Add a demo scene: examples/Components/topology/TopologicalModifiers/RemovingBilateralInteractionConstraint.scn. Video of the Result:; https://user-images.githubusercontent.com/21199245/191690072-003eb2c6-f0b9-458b-996b-6c37f3c3cac3.mp4. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3329:1213,test,test,1213,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3329,2,['test'],['test']
Testability,"- Add performances benchmarks for gpu vs cpu in SofaCUDA/scenes/benchmarks/; - TetrahedronFEMForceField_beam10x10x40_cpu.scn (~23.5 fps); - TetrahedronFEMForceField_beam10x10x40_gpu.scn (~158 fps); - TetrahedronFEMForceField_beam16x16x76_cpu.scn (~8 fps); - TetrahedronFEMForceField_beam16x16x76_gpu.scn (~148 fps). - HexahedronFEMForceField_beam10x10x40_cpu.scn (~30 fps); - HexahedronFEMForceField_beam10x10x40_gpu.scn (~102 fps); - HexahedronFEMForceField_beam16x16x76_cpu.scn (~9.5 fps); - HexahedronFEMForceField_beam16x16x76_gpu.scn (~42 fps). - Add cpu-gpu validations scenes in SofaCUDA/scenes/cpu-gpu_validation/ with green beam for gpu and red for cpu; - CudaTetrahedronFEMForceField_beam10x10x40_implicit.scn; - CudaTetrahedronFEMForceField_beam10x10x40_rk4.scn; ; - CudaHexahedronFEMForceField_beam10x10x40_implicit.scn; - CudaHexahedronFEMForceField_beam10x10x40_rk4.scn. - Remove all old scenes for hexa and tetra fem in SofaCUDA/examples/; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2561:19,benchmark,benchmarks,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2561,4,"['benchmark', 'test']","['benchmarks', 'test']"
Testability,- Add support to load VTK polylines in legacy formated files; - used the new astyle formating onto the three files. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/576:367,test,test,367,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/576,2,['test'],['test']
Testability,"- Add tests on add/remove edges/vertices using EdgeSetTopologyModifier methods; - Update FakeTopology_Scene to add mechanical Components with TopologyData; - Add test to check TopologyData and TopologyHandler registration; - Some cleaning, factorization and documentation in EdgeSetTopology_test code. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3245:6,test,tests,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3245,4,['test'],"['test', 'tests']"
Testability,- Add virtual function getHessian to ScalarField; - Add new implicit fields; - ~~Add PointSplatRenderer for implicit field display~~. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1510:385,test,test,385,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1510,2,['test'],['test']
Testability,"- Add: Display border of tetrahedra, ; - Update: draw methods to check the number of elements and reduce the number of indent in code.; - Add: handle wireframe for triangles and quads; - Fix: Bad lighting disable without corresponding enable in drawTools. ![simpletesselatedtetratopologicalmapping_00000001](https://user-images.githubusercontent.com/21199245/53704580-155f0300-3e1e-11e9-9e55-edd39145af29.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/952:662,test,test,662,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/952,2,['test'],['test']
Testability,- Add: script event listener; - Add: scene coupling Geomagic and SofaCarving ; - Update carving detection collision to use the existing pipeline instead of relaunching a narrowphase intersection computation. - Add method to remove topological element from PointModel collision.; - Fix sofaCarving tests. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/787:297,test,tests,297,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/787,3,['test'],"['test', 'tests']"
Testability,"- As announced in #2010, `BruteForceDetection` can inherit from `BruteForceBroadPhase`.; - The narrow phase code has been extracted into a new component: `BVHNarrowPhase`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2043:711,test,test,711,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2043,2,['test'],['test']
Testability,"- Axis : storing raw pointer in a static map, and there are never deleted afterwards (-> use shared_ptr) + removing the ugly pair of pair.; - MeshTopologyLoader : the io::Mesh used to read the mesh (from a file) is never deleted after filling the topology (its purpose). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3671:810,test,test,810,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3671,2,['test'],['test']
Testability,- Change CMakeLists; - move all files inside /src/CGALPlugin; - clean headers includes and \#ifdef; - remove some warnings. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1308:375,test,test,375,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1308,2,['test'],['test']
Testability,"- Change all the required SOFA_*_DEPRECATED to SOFA_*_DISABLED for things whose has been flagged to be disabled for v21.12. - Uncomment the actual things flagged to be deprecated starting from v21.12 (commented until now for the developers, because of the deprecation warnings flood). [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/219]; [ci-depends-on https://github.com/sofa-framework/Regression/pull/20]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2524:966,test,test,966,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2524,2,['test'],['test']
Testability,- Change the Task interface to support scheduled thread. . - Implement a CpuTask class a base class for all tasks executed in the CPU. - Implement a CpuTask::Status class to synchronise all tasks executed in the CPU. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/970:468,test,test,468,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/970,2,['test'],['test']
Testability,"- Changelog update; - CMake fix for Windows Dependency Pack; - CMake fixes for packaging (SofaMacros, GLU target missing); - New script + CMake rules to add MacOS post-install custom steps (for packaging); - CMake fixes for modularized projects (SofaExporter, SofaHaptics, SofaOpenglVisual, SofaPreconditioner, SofaSparseSolver); - CMake clean tests dispatch in build tree, e.g now SofaConstraint_test build files go to `<build-dir>/SofaGeneral/SofaConstraint/SofaConstraint_test`. These changes also permit to generate binaries for all platforms with our CI. Continuous Deployment is not far!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1088:344,test,tests,344,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1088,3,['test'],"['test', 'tests']"
Testability,"- Check that device ID is valid before making it current in destruction method.; - Small updates on warning messages. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3698:657,test,test,657,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3698,2,['test'],['test']
Testability,"- Clean Triangle2EdgeTopologicalMapping; - Fix TopologySparseDataHandler swap and remove methods; - Add new regression test, to test add/remove of triangle with and without Triangle2EdgeTopologicalMapping; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/875:119,test,test,119,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/875,4,['test'],['test']
Testability,"- Clean all Cuda/Cpu scene examples from aliases.; - Fix **DiagonalMass**, **MeshMatrixMass**, **IdentityMapping** and **BarycentricMapping** class template declaration.; - Fix several scenes behavior. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1000:453,test,test,453,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1000,2,['test'],['test']
Testability,"- Clean and doc current code; - Add test on manager init with Links; - Add test on wrong init; - Add test on manager with full set init. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3407:36,test,test,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3407,5,['test'],['test']
Testability,"- Clean the files; - Add simple tests; - Add constructor for initializer lists. Allow to write concise object creation; - Allow builder pattern through the `setSelectedItem` methods. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3737:32,test,tests,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3737,3,['test'],"['test', 'tests']"
Testability,"- Description of the component was a bad copy/paste. Now, it describes how the linear system is solved; - Timers are added to measure the duration of each step of the `solve`; - I added support of any matrix derived from `BaseMatrix`. It is not very useful as it is converted in a dense matrix anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2336:841,test,test,841,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2336,2,['test'],['test']
Testability,"- Document the steps of the CGLinearSolver; - Remove the useless data verbose; - Use d_ for data name; - Propagate this joyeuserie. :man_dancing: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2098:687,test,test,687,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2098,2,['test'],['test']
Testability,"- Does not really make sense for point/line topologies (first intention); - even for 2d/3d, there are no normals given so the rendering is a bit weird IMO. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4887:695,test,test,695,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4887,2,['test'],['test']
Testability,"- Each accessor has its own file: 1 for the default class, 1 for the specialization for vector types. The specialization for Data is still in Data.h; - I added a compilation error in case the type is const while trying to create a `WriteAccessor` on it.; - I added unit tests for the default class, for the vector types specialization and for the Data specialization.; - I removed the deprecated `<<` and `>>` operators. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3234:270,test,tests,270,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3234,3,['test'],"['test', 'tests']"
Testability,"- FIX error [""cannot create directory: File name too long""](https://ci.inria.fr/sofa-ci/job/windows7_VS-2013_options_amd64/579/console) by improving subtests listing regex.; - FIX error [""tail: illegal option -- -""](https://ci.inria.fr/sofa-ci/job/centos_clang-3.4_options/387/console) by removing crash dump from log summary (dump can be found in test report and build log).; - ADD cosmetic changes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/205:314,log,log,314,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/205,4,"['log', 'test']","['log', 'test']"
Testability,- FIX unkown command sofa_add_subdirectory_external; - FIX EIGEN3_ROOT priority over system Eigen; - CLEAN naming (Eigen -> Eigen3). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1175:384,test,test,384,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1175,2,['test'],['test']
Testability,- Fix Attachconstraint for use with FreeMotionAnimationLoop - credit to @hugtalbot #940; - refactor of parameters to use `SOFA_UNUSED`; - fix dynamicConstraintFactor. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/949:418,test,test,418,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/949,2,['test'],['test']
Testability,"- Fix CMake to use new headers.; - Update namespace; - Fix some warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3076:613,test,test,613,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3076,2,['test'],['test']
Testability,- Fix and add more examples; - Add a carvingDistance parameter to be able to have real collision before carving.; - Add the possiblity to handle several collision models on the target object.; - Clean and Doc the code. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/712:470,test,test,470,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/712,2,['test'],['test']
Testability,"- Fix bad behavior of GridTopology. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1573:575,test,test,575,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1573,2,['test'],['test']
Testability,"- Fix cmake when building on a system with Qt6 and Qt5 are detected in the same time (qt5 is prioritized); - Fix cmake var for QGLViewer (not supported with Qt6); - Fix for Qt6 where its windeployqt utility does not support the parameter ""--no-angle"" anymore (leads to a build error); - Fix for Qt6.2 while doing the cmake configuration (I suppose the latest Qt6.2 did some changes for its cmake packages), ; tested on Windows 11 and Qt6.2 (and VS2022). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2490:409,test,tested,409,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2490,3,['test'],"['test', 'tested']"
Testability,"- Fix compilation and CMakeLists of the plugin before moving it out from SOFA repository. OpenCTM seems not to be supported anymore but some project are still using it. ; I will move that plugin into my github repo embedding directly OpenCTM lib. ; Unless you think it is of any use on sofa-framework repository. FYI: OpenCTM — the Open Compressed Triangle Mesh file format — is a file format, a software library and a tool set for compression of 3D triangle meshes. The geometry is compressed to a fraction of comparable file formats (3DS, STL, VRML, COLLADA...), and the format is easily accessible through a simple, portable API. http://openctm.sourceforge.net/. I was using it for WebGL as this format is slim and quick to load.; See for example here:; https://alteredqualia.com/three/examples/webgl_loader_ctm_materials.html. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1359:1082,test,test,1082,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1359,2,['test'],['test']
Testability,"- Fix edges computation in GridTopology: It is now based either on triangles or on the quad grid, depending on what is asked. Option ```computeTriangleList``` has been added to GridTopology. True by default. If false, only quads will be computed and the corresponding list of edges; - Set TriangleSetTopologyContainer to invalid if EdgeInTriangle buffer creation failed. Check validity of the topology in TriangularBendingSprings. This will avoid the crash. fix #1243. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1323:720,test,test,720,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1323,2,['test'],['test']
Testability,"- Fix link issues because of missing *_API; - Follow naming guidelines + depreciation of old variables; - OglGrid uses a cached list of vertices; - Use of `saveLastState` and `restoreLastState`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3115:734,test,test,734,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3115,2,['test'],['test']
Testability,"- Fix memory problem of #1178; - Add mecanism to load Data vector only when clicking on ""show values"". Fix #1178. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1181:365,test,test,365,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1181,2,['test'],['test']
Testability,"- Fix some size_t to uint int conversion warnings; - Fix some double to float warnings. - When looping on topology buffer, use the typedef corresponding to id instead of using uint or int. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/755:442,test,test,442,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/755,2,['test'],['test']
Testability,"- Fix the Von Mises stress drawing and use ColorMap Blue to Red by default.; - Factorize code for plain and wireframe drawing; - Fix crash when trying to display Von Mises stress per point without computing it. . Fix #1852 . ![Tetra2TriangleTopologicalMapping_00000004](https://user-images.githubusercontent.com/21199245/108897384-5574ad00-7616-11eb-979a-55e90c60a768.png); ![Tetra2TriangleTopologicalMapping_00000005](https://user-images.githubusercontent.com/21199245/108897396-573e7080-7616-11eb-8b3f-f40f559b186c.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1854:1062,test,test,1062,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1854,2,['test'],['test']
Testability,"- Fix warnings in `UniformMass`; - Add `RequiredPlugin`; - Add `OglGrid` and `OglSceneFrame`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2055:633,test,test,633,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2055,2,['test'],['test']
Testability,"- Fix warnings in code due to pluginization; - Clean required plugins warnings + required Data warnings; - Add 2 new scenes to test geomagic against a rigid and a deformable sphere. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2846:127,test,test,127,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2846,3,['test'],['test']
Testability,- Fix: init send error when good collision models are not found instead of randomly picking the first one found in the graph.; - Clean model check in doCarve and fix advancedTimer instruction; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1110:444,test,test,444,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1110,2,['test'],['test']
Testability,"- Fixed decoding of namespace, class, template and type names that have numbers.; - Added BaseClass test. Fixes #1216 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1222:100,test,test,100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1222,3,['test'],['test']
Testability,"- Fixed the module name; - config.h is now config.h.in. A lot more work to do if we want to clean this plugin. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4719:650,test,test,650,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4719,2,['test'],['test']
Testability,"- Hiding local declaration ; - Parameter names do not match ; - Uninitialized class members ; - Lambda capture is never used ; - Local variable can be made const ; - Result of a postfix operator is discarded ; - add explicit specifier to make constructor non-converting ; - Member function can be made const ; - Variable can be moved to if-statement ; - Declaration and assignment can be joined ; - Return by const value. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2559:961,test,test,961,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2559,2,['test'],['test']
Testability,"- I agree that we should test data's value more thoroughly ; the only problem is that there are potentially thousands of combination to test (depending the component obviously); - as for the data gathering in the GUI, I am not sure but it is already done for Data related to visualization (tab ""Visualization"" when you double-click the component). If I remember well, the process checks that the data's name contains ""draw"" or ""show"" words. The problem is, how to tell the GUI that for Lights, it has to group all d_shadow* in a ""Shadow"" tab ? ; Otherwise, a solution could be to to add a ""Collection of Data"" type into SofaObject and register it at the construction. E.g ; ```; //In Light; DataCollection dc_shadow(""Shadowing"");; this->addCollectionData(dc_shadow);; dc_shadow.add(d_shadowEnabled);; dc_shadow.add(d_shadowTextureSize);. //In the GUI; foreach(component->getDataCollections() as dc ); {; tab = createNewTab(dc->getName()); foreach(dc.getAllData as data ); tab.add(data); }; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/73#issuecomment-264143178:25,test,test,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/73#issuecomment-264143178,2,['test'],['test']
Testability,"- I made to PR trying to have symetry in the implementation: https://github.com/alxbilger/sofa/pull/2; - I also tested the code with Vec2 and Vec1 and it does not compile (so the use of template there is highly questionnable) . It could also be a good use case for c++ 20 concepts; . More comments (to go totally out of the scope of the PR):; - the methods ""addContact"" are probably not properly name... as this component has nothing to do with contact maybe addConstraint (?); - the ""merge"" data field is only in in Vec3 which means either the data field should be only on that specialization or that it should be used in Rigid3Type (or at least printing an ""unsupproted behavior"" when set) ; - the ""keepOrientDiff"" data field is only for Rigid, it shouldn't exists at all in the Vec3 version (it can be considered an favor of having inheritance in addition to specialization). ; - the ""numericalTolerance"" data field is only used for rigid specialization (so same comment as for keepOrientDiff"" and it seems it is only for rotational part.; - why BilateralInteractionConstraint<Rigid>::getVelocityViolation() is empty ? ; - in BilateralInteractionConstraint<Rigid3Types>::getConstraintResolution() there is getValue() in for loops(); - accessors are not used in BilateralInteractionConstraint<Rigid3Types>::buildConstraintMatrix()",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3126#issuecomment-1187581578:112,test,tested,112,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3126#issuecomment-1187581578,1,['test'],['tested']
Testability,"- Implementation of applyConstraint (a task from https://github.com/sofa-framework/sofa/issues/3967); - some data cleaning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4309:663,test,test,663,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4309,2,['test'],['test']
Testability,"- In `ScopedAdvancedTimer`, store the timer id as a real id rather than the `std::string` used to find the real id. This fixes a strange bug occurring with `ScopedAdvancedTimer` (which I am not able to explain).; - In `AdvancedTimer`, use a map for constant complexity when searching an id, instead of a `std::vector`. [ci-depends-on https://github.com/sofa-framework/Compliant/pull/2]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2349:926,test,test,926,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2349,2,['test'],['test']
Testability,"- IncompleteTypeInfo was defined with SOFA_DEFAULTTYPE_API but this is incorrect as IncompleteTypeInfo is inline only. It was apparently harmless in Release/RelWithDebug but was complaining in Debug config with an undefined reference in SofaBaseMechanics 🧙‍♂️; - Since a few version of MSVC2019, SofaCUDA could not compile and was complaining on a missing pow() function. Apparently, one has to use powf() instead. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1761:954,test,test,954,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1761,2,['test'],['test']
Testability,"- Introduce visitor to know the number of non-diagonal mass matrices; - Use this new visitor in EulerExplicitSolver to apply the optimization based on diagonal matrices, or not. This PR is based on #2163 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2165:745,test,test,745,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2165,2,['test'],['test']
Testability,"- Lots of comments; - Split into multiple functions (`solve` function easier to read). Next steps:. - Create a visitor to detect automatically if the mass matrix is trivially invertible (diagonal matrix), in order to replace `d_optimizedForDiagonalMatrix`.; - Benchmark with/without `SOFA_NO_VMULTIOP`; - More tests, in particular for the standard Euler method (not symplectic); - Update the doc. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2163:260,Benchmark,Benchmark,260,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2163,4,"['Benchmark', 'test']","['Benchmark', 'test', 'tests']"
Testability,"- Make the assert static so the check is made at compile-time, independently of the compilation mode; - Make the check generic using constants that exist independently of the type of blocks. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2347:11,assert,assert,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2347,3,"['assert', 'test']","['assert', 'test']"
Testability,- Mass conponent in the scenes using ParticleSink or ParticleSource need to handleTopologyChange as the number of dof change. - Also fix warning in scenes due to use of alias. - Add non regression test for 4 scene in this plugin. . Is this plugin build on CI... will see... Fix #1276. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1278:197,test,test,197,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1278,3,['test'],['test']
Testability,"- Massive cleaning; - Factorize duplicated code; - Fix storage of the local jacobian matrix. There was only one jacobian matrix for two springs, and the second spring always overwrote the values of the first jacobian matrix. There are now one jacobian matrix by spring.; - Implementation of `buildStiffnessMatrix` (a task from https://github.com/sofa-framework/sofa/issues/3967). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4304:919,test,test,919,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4304,2,['test'],['test']
Testability,"- Match variable names in declaration and definition; - Make some variable const; - Indentation consistency; - Namespace concatenation and pragma once. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3283:691,test,test,691,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3283,2,['test'],['test']
Testability,"- MinResLinearSolver scene follows the same pattern than the other solver scenes; - speed up CGLinearSolver scene using another template. The matrix is assembled: a bit faster than the matrix-free method. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2494:744,test,test,744,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2494,2,['test'],['test']
Testability,- Mostly conversion from int/uint into size_t; - Also some conversion to match GL types. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1296:340,test,test,340,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1296,2,['test'],['test']
Testability,"- Move CpuTask class into its own file; - Remove ThreadSpecificTask class, as it was not used. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1993:634,test,test,634,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1993,2,['test'],['test']
Testability,"- Move both scenes as they are using several components from the plugin to illustrate SPH behavior and rendering.; - Add a simple rendering version of PointSplatModel scene in examples:. ![PointSplatModel_00000001](https://user-images.githubusercontent.com/21199245/162045768-58ee77d5-6127-4e6d-996f-8f4ffc5aba4c.png). ![PointSplatModel_00000002](https://user-images.githubusercontent.com/21199245/162045788-965a7e35-a306-4b52-82c8-e4ceeeb5a124.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2847:990,test,test,990,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2847,2,['test'],['test']
Testability,"- Move code to cpp; - Fix example scene; - Minor cleaning (constness, etc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2319:615,test,test,615,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2319,2,['test'],['test']
Testability,"- Move some code in cpp; - Add TopologyElementType to be set by child class. By default they are set to:; ```; TopologyElementType m_inputType = TopologyElementType::UNKNOWN;; TopologyElementType m_outputType = TopologyElementType::UNKNOWN;; ```; - Add method checkTopologyInputTypes to check m_inputType / m_outputType against input/output topology container type. - Add elementTypeToString method to be able to display error. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3428:967,test,test,967,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3428,2,['test'],['test']
Testability,- Not sure this is the good way to do it with cmake findCGal but otherwise the dll are not linked (if not on env_path). - Add a quick scene test for cgal without image plugin. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/958:140,test,test,140,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/958,3,['test'],['test']
Testability,"- On Windows, Cmake was not copying the debug version of the libpng/zlib/libtiff DLLs, but was still linking with the debug library (lib) files. So it was not loading the CImgPlugin when required while running runSofa_d. + change the libsuffix with a newer version of add_definition() in debug mode in multiconfig mode (ouf); (https://cmake.org/cmake/help/v3.17/policy/CMP0043.html#policy:CMP0043) . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1328:651,test,test,651,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1328,2,['test'],['test']
Testability,"- Option is set to true by default to not change the current behavior in SOFA; - also improve the EdgeInformation access in for loop in draw method. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2297:688,test,test,688,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2297,2,['test'],['test']
Testability,"- Pass done on the whole source folder; - Aliases replaced. Fixes https://github.com/sofa-framework/sofa/issues/3320https://github.com/sofa-framework/sofa/issues/3320. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3351:707,test,test,707,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3351,2,['test'],['test']
Testability,"- PrecomputedLinearSolver needed the ODESolver EulerImplicitSolver from SofaImplicitOdeSolver, for an information available in a higher level (OdeSolver directly); - useless inclusion of TetraFEM from SofaSimpleFEM; ▶ No dependencies on SofaImplicitOdeSolver and SofaSimpleFEM anymore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2012:825,test,test,825,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2012,2,['test'],['test']
Testability,- QDocBrowser will be build by default if Qt5WebEngine is found.; - Add option in cmake to enable the QDocBrowser (If I did it well) that will set Qt5WebEngine as required to warn user to install it if they want the browser. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1315:476,test,test,476,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1315,2,['test'],['test']
Testability,"- Quad spring sphere scene has been fixed; - The scene has been renamed to follow the same convention than the benchmark folder; - The scene has been duplicated and converted to cpu to compare performances; - The scene has been duplicated and both cpu and gpu are superimposed to compare. They are not matching perfectly. Not matching:; ![image](https://user-images.githubusercontent.com/10572752/149406468-a5eae1e9-0278-4a03-8c9a-1c611fbcb0df.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2598:111,benchmark,benchmark,111,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2598,3,"['benchmark', 'test']","['benchmark', 'test']"
Testability,"- Reformat based on the guidelines; - Fix memory leak (material not freed); - Use accessors instead of beginEdit/endEdit; - Use refs instead of copies; - Add component state support; - Compute bounding box from the mstate function; - Add const when possible. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3141:798,test,test,798,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3141,2,['test'],['test']
Testability,"- Remove C timers and their log; - Replace some AdvancedTimer to ScopedAdvancedTimer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2769:28,log,log,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2769,3,"['log', 'test']","['log', 'test']"
Testability,"- Remove CudaExternalForceField as ExternalForceField was removed in 2008 and it was not referenced in CMakeLists.txt; - Add CudaTexture.h to the CMakeLists.txt file. It is used and must be part of the project. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3632:750,test,test,750,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3632,2,['test'],['test']
Testability,"- Remove CudaExtraMonitor as cpu version has been removed.; - Unactive BoxStiffSpringForceField with Cuda template. Should we remove it?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3077:677,test,test,677,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3077,2,['test'],['test']
Testability,"- Remove all Data and method related to triangle selection on a plan.; - Data: normal, dmin, dmax; - Methods: void selectTrianglesAlongPlane(), bool isPointInPlane(Coord p);; - Merge method selectTrianglesFromString() into initTriangleInformation(); - Add callback for Data pressure and triangleList; - Update the example scene to use a BoxROI instead of plan definition on a big yellow beam 😆 . ![image](https://github.com/sofa-framework/sofa/assets/21199245/d9ecff19-44df-4229-91e2-a2c30b267b81). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4743:1038,test,test,1038,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4743,2,['test'],['test']
Testability,"- Remove empty tests; - Remove ""tests"" directory at root; - Let CMake satisfy test dependencies at the right moment. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1886:15,test,tests,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1886,5,['test'],"['test', 'tests']"
Testability,"- Remove reset method which was calling a second time init at start; - Replace activateAtIteration and all mechanism of iteration count by a single activate Data<bool>. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3327:708,test,test,708,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3327,2,['test'],['test']
Testability,"- Remove some scenes in the module as their equivalent are in examples\Components\linearsolver; - Add example for PrecomputedLinearSolver; - Add example for SVDLinearSolver; - Minor cleaning; - Speed up an example using multithreading (from 74 fps to 131 fps in 1000 time steps on my computer). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2422:834,test,test,834,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2422,2,['test'],['test']
Testability,"- Remove unsued topologyData: d_vertexInfo, d_edgeInfo; - remove corresponding inner classes; - small cleanings in headers. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2567:663,test,test,663,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2567,2,['test'],['test']
Testability,"- Remove unwanted second call to graph init in Triangle and Quad PressureFF; - Remove multiple call to Component init in LinearElasticity_test instead of using SetPressure method; - Remove some missing animationLoop warnings . Those wrong behaviors are failing in PR #3369 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3447:814,test,test,814,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3447,2,['test'],['test']
Testability,"- Rename ```TopologyObjectType``` into ```TopologyElementType``` (this enum is used to define the type of upper element contain in the current topology); - Factorize methods and member storing this information into ```BaseMeshTopology::m_upperElementType``` ; - Update ```DiagonalMass``` and ```MeshMatrixMass``` which were using their own enum to store the type of topology. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1593:917,test,test,917,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1593,2,['test'],['test']
Testability,"- Rename label checker with `pr-` prefix; - Remove useless code in github request api; - Add Yinoussa among core reviewers on GHD. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4444:670,test,test,670,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4444,2,['test'],['test']
Testability,"- Rename method `initTopology `already present in **XXSetTopologyContainer** classes into `initContainers`; - Add virtual method in `BaseMeshTopology`; - Add Override method implementation in `MeshTopology`; - Fix use case in `ParallelBVHNarrowPhase`. This should fix #2063 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3368:815,test,test,815,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3368,2,['test'],['test']
Testability,"- Rename variable ```lastElementIndex``` into ```m_lastElementIndex```; - Add accessor; - Update this counter during add/remove operation. This counter is mandatory when multiple remove events are queued. ; - Init the counter during topologyData connection with its topology buffer. api is converging but this PR might have some side effects... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2359:884,test,test,884,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2359,2,['test'],['test']
Testability,"- Replace all VisualModel by OglModel; - Add `<RequiredPlugin name=""SofaOpenglVisual""/>` in all scene with an OglModel. To be merged after #1080 pluginisation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1081:411,test,test,411,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1081,2,['test'],['test']
Testability,"- Replace the use of phtread (on windows) or boost thread (on linux) by std::thread. Use an atomic bool to be able to stop the 'emulator/haptic' thread from the main thread before closing it. ; This shouldl fix possible segmention fault or lock/time out at scene test exit (cf dashboard); - Also fix the timeToSleep test inside the thread which was always failing due to bad conversion. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1665:263,test,test,263,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1665,4,['test'],['test']
Testability,"- Restore QGraphStatWidget, QMomentumWidget and QEnergyWidget which have been removed by error in a PR #750 ; - Replace use of Qwt by QtCharts. ![graph_energy_new](https://user-images.githubusercontent.com/21199245/94669235-43197000-0311-11eb-89ed-4e763d29cf49.JPG); ![graph_momentum_new](https://user-images.githubusercontent.com/21199245/94669247-46acf700-0311-11eb-84e3-5e73650c3c58.JPG). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1508:643,test,test,643,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1508,2,['test'],['test']
Testability,"- Result for `RegularGridTopology_dimension.scn` -> showing how to create, 3D (Hexa), 2D (Quad) or 1D (Line) grid. . ![RegularGridTopology_dimension_00000001](https://user-images.githubusercontent.com/21199245/199712906-8bcfbfa0-e4d5-4109-90c8-d8c891c8b13c.png). - Result for `ProjectToPlaneConstraint.scn` -> not 100% sure about the expected behavior, but at least there is no error/warning and it is moving ! (constrained by the Plane on the left). ![ProjectToPlaneConstraint_00000001](https://user-images.githubusercontent.com/21199245/199713180-eed459e5-bd23-4e0e-8f08-2f43c2ba7c8c.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3453:1131,test,test,1131,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3453,2,['test'],['test']
Testability,"- Set printLog to false in scenes creations in MeshExporter tests; - Also remove some warnings in scenes creations. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4148:60,test,tests,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4148,3,['test'],"['test', 'tests']"
Testability,"- Simplify instructions in ConstraintSolver; - Fix scene sofa_1000PR.scn (and make it multithreaded). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2138:641,test,test,641,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2138,2,['test'],['test']
Testability,- Some macro DLL missing and one not to be set in subsetContactMapper.; - Fix build of plugin SofadistanceGrid_test also: only build if SOFA_BUILD_TESTS and SofaTest_FOUND. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/966:424,test,test,424,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/966,2,['test'],['test']
Testability,"- Split init method in 3 depending if mesh, data or topology is used. also Avoid recomputing topology at updateVisual; - also remove not working topologyHandler. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2299:701,test,test,701,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2299,2,['test'],['test']
Testability,"- Task #3770 . Main goal is to remove the ObjectFactory singleton (later) ***and*** the implicit registration of objects while loading dynamic libraries (plugins). In this PR, the explicit registration is applied on components of `Sofa.Component.StateContainer`. The legacy RegisterObject mechanism is preserved and will warn the user at the compilation and at run-time. EDIT:. - add tests about plugins non-registering/registering implicitly/registering explicitly; - add deprecations/warnings in RequiredPlugin; - add a function registerPlugin in PluginManager. This function is simply an alias for loadPlugin() because loadPlugin() does much more than just loading a plugin by itself. In an eventual future, PluginManager should be refactored in a way that loadPlugin calls registerPlugin(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4429:384,test,tests,384,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4429,3,['test'],"['test', 'tests']"
Testability,- Tetra2TriangleTopologicalMapping: Fix addTetrahedron case in tetra2TriangleTopologicalMapping for a tricky add + remove border triangles case.; - Update scene tests; - TriangleSetTopologyModifier: Add more check in AddTriangle methods. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/998:161,test,tests,161,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/998,3,['test'],"['test', 'tests']"
Testability,"- The function `addKToMatrix` in `SurfacePressureForceField` had a `return` statement before doing anything. I removed it. The reason of this statement is not known, but it has been identified here: https://github.com/sofa-framework/sofa/commit/2ad1468eea45325af9d727185fc5ba0c288b7608#r31731863; - Unit test is added for `SurfacePressureForceField`. It verifies the correctness of the function `addKToMatrix`. It would fail without the removal of the `return` statement.; - Template specializations have been moved from the inl to the cpp; - Cosmetic cleaning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3935:304,test,test,304,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3935,3,['test'],['test']
Testability,"- The solver that is created if none is found is no longer always created. It is created only if need be.; - The type of the solver has changed from `LCPConstraintSolver` to `GenericConstraintSolver`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3994:740,test,test,740,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3994,2,['test'],['test']
Testability,"- The variables `SOFAGUI_HAVE_SOFAGUIQT` and `SOFAGUI_HAVE_SOFAHEADLESSRECORDER` were not defined whereas they are used in `SofaGui/SofaGuiConfig.cmake.in`.; - Modules in `SofaGui/SofaGuiConfig.cmake.in` have been updated. . I expect it will also fix the SofaPython3 GitHub actions (see for example https://github.com/sofa-framework/SofaPython3/runs/6592539251?check_suite_focus=true). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3011:925,test,test,925,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3011,2,['test'],['test']
Testability,"- There still is a dubious `else if (typeinfo->ValidInfo())` in binding_data.; - DataFileName should be handled as its own type.; - how not to push regression test results? so everyone do not have to download it. If I well remember this files are created automatically the first time the test is launched, and then used. Is it not enough?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/171#issuecomment-283292780:159,test,test,159,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/171#issuecomment-283292780,2,['test'],['test']
Testability,"- This PR should fix unload of LMConstraint's plugin (problem visible on the centos' CI machine with the 6xx failed scenes tests); + Fix LMconstraint itself (bogus semicolon); + Fix one scene to illustrate a working scene (from #1817). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1831:123,test,tests,123,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1831,3,['test'],"['test', 'tests']"
Testability,"- Update CarvingManager to use SingleLink instead of string path.; - Clean warnings in scenes; - Clean warnings in tests; - remove reset method; - use componentState value instead of bool m_carvingReady. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3332:115,test,tests,115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3332,3,['test'],"['test', 'tests']"
Testability,"- Update EdgeSetTopologyContainer to use this new version. The old code was not working in several tricky cases.; - Add unit tests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4028:125,test,tests,125,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4028,3,['test'],"['test', 'tests']"
Testability,"- Update TopologyData to use rebind for vector_device; - Remove begin/endEdit; - Add extra Data for template specialisation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2569:664,test,test,664,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2569,2,['test'],['test']
Testability,- Update some demo scenes to have a better physics approach direct solvers.; - Add an example with several deformable cubes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1533:376,test,test,376,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1533,2,['test'],['test']
Testability,"- Update topology access to use full array; - move computation of min max mean stress value out from `draw `method and move them in `addForce` instead (only if show option is true). Quick test on the classic tissue scene give: ; - Visual model only: 260 fps ; - FEM before: 190 fps; - FEM with this PR: 220 fps. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3413:188,test,test,188,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3413,3,['test'],['test']
Testability,- Update: Set drawColor as Data<RGBAColor> for topology debug drawing.; - Update: triangle and Quad drawing to display them a little smaller to better see the geometry structure.; - Fix: drawing scale indices could be Inf.; - Fix: normal color drawing and check buffer sizes in DrawTool; - Update: replace word colour by color to match openGL spelling in DrawTool. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/877:616,test,test,616,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/877,2,['test'],['test']
Testability,"- Use BaseTest instead of Sofa_test; - Check more values in the different tests. ; - Check several values from analytic values; - Clean some space and indent. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2191:74,test,tests,74,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2191,3,['test'],"['test', 'tests']"
Testability,"- Use `sofa_add_module` intensively for all new NG modules.; - Use `sofa_add_collection` for all old modules that are now simple collections.; - Make Sofa.GUI a real module.; - Fix disabled targets inclusion in SDK. :warning: This PR changes basically all CMake option names. E.g. `PLUGIN_SOFAGENERALLOADER` becomes `COLLECTION_SOFAGENERALLOADER`. The good thing is that it's way clearer. This PR also contains the same fix as #3103. EDIT ; New changes:; - Move Sofa.GL module under Sofa directory; - SofaKernel is gone.; - Everything was moved under applications/collections/deprecated; - New cosmetic feature in SofaMacros to hide sub-options when base-option is disabled (like cmake_dependent_option but simpler). E.g. when I disable SOFA_COMPONENT, all SOFA_COMPONENT_* are hidden.; - A bit of cleaning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3120:1347,test,test,1347,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3120,2,['test'],['test']
Testability,"- Use std::set instead of std::list in TopologyContainer to store TopologyHandler; - Use bool m_isRegistered to tack info if the topologyHandler is registed inside the TopologyContainer list. Catch return of std::insert to update this bool.; - Factorize method to link topologyHandler using sofa::geometry::ElementType. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3271:859,test,test,859,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3271,2,['test'],['test']
Testability,"- Using noexcept and constexpr keywords here and there.; - replace multiple versions of functions/ctors with conditional templated ones ; - cleaning (static_cast, etc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2282:708,test,test,708,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2282,2,['test'],['test']
Testability,"- Usual cleaning (pragma, namespaces); - Remove use of the deprecated SofaSimulation in the Sofa code base; - Fix dependencies with SofaSimulationCommon: . Almost all projects just needed SofaSimulationCore from SofaFramework, but were instead finding/linking SofaSimulationCommon. #1527 . After merging, you will mostly have a compilation error about not finding SOFA_SOFASIMULATIONCOMMON_API, or something similar. -> #1670. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1694:966,test,test,966,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1694,2,['test'],['test']
Testability,"- Various cleaning to remove SceneChecker warnings; - Fix some examples which should use `vertexMass ` and not `totalMass ` in `uniformMass ` as the number of particles evolve. ; - Fix SpatialGridPointModel scene which was timing out on CI. There was a problem of init with too many particles created compare to the collision and sphFF distances. ; - Update SPHParticleSink_obstacle.scn to wash the dragon; . **SpatialGridPointModel new behavior** ; <img src=""https://github.com/sofa-framework/sofa/assets/21199245/305fd2a4-c15b-4315-8278-509c3fef6204"" width=""75%"">. And working collisions:; <img src=""https://github.com/sofa-framework/sofa/assets/21199245/8a117063-4714-4e0c-8156-401dcba3fde0"" width=""75%"">. **New version of SPHParticleSink_obstacle**; <img src=""https://github.com/sofa-framework/sofa/assets/21199245/184dad41-bb91-45f1-9d38-b913610aec78"" width=""75%"">. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4149:1410,test,test,1410,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4149,2,['test'],['test']
Testability,- [DrawTool] Add drawSphere method taking a color as additional parameter. Improve warning message in DrawLines; - [SofaKernel] Replace Simulation serr by msg_error; - [SofaBaseTopology] Add a warning in edge creation if edgeId not found and remove unwanted warning in Tetra2TriangleTopologyMapping; - [SofaGeneralDeformable] Fix TriangularBendingSprings drawing method. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1111:622,test,test,622,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1111,2,['test'],['test']
Testability,"- [Geometry] Update method signature of intersectionWithEdge to pass barycentric coordinates instead of 3D coord.; - [Topology.Container] Update all method compute2EdgesIntersection to use the generic method in Edge class. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4194:762,test,test,762,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4194,2,['test'],['test']
Testability,- [SofaKernel] Add option in stiffspringFF to add a list of springs given 2 lists of indices. To be merged after #1131 ; I tested the merge of both it works. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1093:123,test,tested,123,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1093,3,['test'],"['test', 'tested']"
Testability,- [SofaKernel] Update several AdvanceTimer msg and add more steps.; - [SofaKernel] Fix advancedTimer in BruteForceDetection pipeline. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1094:385,test,test,385,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1094,2,['test'],['test']
Testability,"- `BaseLinearElasticityFEMForceField::d_poissonRatio` is now a `VecReal` instead of a `Real`. ; - Introduction of 2 functions to compute Lamé coefficients; - Callbacks on the elasticity parameters to check their validity; - `BeamFEMForceField`, `TriangleFEMForceField`, `TriangularFEMForceField` and `TriangularFEMForceFieldOptim` now inherits from `BaseLinearElasticityFEMForceField`. They now support a vector of Young's modulus, compared to a single scalar. TODO: check that the default value changed in some force fields. [ci-depends-on https://github.com/SofaDefrost/ModelOrderReduction/pull/141]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4852:1142,test,test,1142,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4852,2,['test'],['test']
Testability,"- `DiscreteIntersection::testIntersection` and `DiscreteIntersection::computeIntersection` are made virtual, so derived classes can override them; - Comments; - Simplification; - Removed unused code (draw, unused variables etc); - Fix `MinProximityIntersection::computeIntersection` and `NewProximityIntersection::computeIntersection` on cubes; - Fix compilation warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2178:25,test,testIntersection,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2178,3,['test'],"['test', 'testIntersection']"
Testability,"- `ImageCImg_ReadBlackWhite` is split into 4 tests, each corresponding to an file extension. They were all tested inside the same test. It allows to debug a failing test more easily.; - Some memory leaks are fixed; - `ImageCImg_ReadBlackWhite_jpg` is fixed. The problem was due to a bad logic of conversion from `float` to `unsigned char`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2147:45,test,tests,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2147,7,"['log', 'test']","['logic', 'test', 'tested', 'tests']"
Testability,"- `InitTasks.h` was useful only because it includes `CpuTask.h`; - `TaskScheduler.h` is not necessary in the header file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2266:661,test,test,661,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2266,2,['test'],['test']
Testability,"- `LinearSolverConstraintCorrection::F` is deprecated because it is not used. I believe it stopped to be used here: https://github.com/sofa-framework/sofa/commit/50fe60f28306912e0e853c0a9493bccdd9735ff7#diff-b0264445a2a81f648e146f0b1d59d5d197cf3a935f3b7cbb24af11a38b8e6e68L433; - `override` keyword was missing in `~LinearSolverConstraintCorrection`; - `LinearSolverConstraintCorrection::J` is renamed to `m_constraintMatrix`. Its floating-type is no longer `SReal`, but `Real`. In theory, it's breaking.; - `computeJ` is no longer used. Instead, I introduce the method `convertConstraintMatrix`, which is IMO clearer. `computeJ` could be removed I think. But for some reasons it is virtual. Anyone overrides it?; - Added a timer in `convertConstraintMatrix`. This must be used for benchmark to evaluate the cost of the conversion. I believe that we can think of a way to avoid the conversions (only if it costs too much).; - `MatrixLinearSolverInternalData::copyJmatrix` is renamed to `convertMatrix` and it is now protected.; - Made `getLocalJ` clearer.; - Added details for `addJMInvJt`; - Introduced rebind types for `CompressedRowSparseMatrixConstraint`, `CompressedRowSparseMatrixGeneric` and `CompressedRowSparseMatrixMechanical`; - `CompressedRowSparseMatrixConstraint`: added test for the stream operator. The operator no longer adds trailing spaces on each line.; - Better iterators in `CompressedRowSparseMatrixConstraint`; - Missing header guard in `CompressedRowSparseMatrixConstraintEigenUtils.h`; - Fixed `operator()` in `CompressedRowSparseMatrixToEigenSparseVec`. Also added error message if out-of-bounds. Required for https://github.com/sofa-framework/SofaPython3/pull/459; - Introduction of `is_specialization_of`. Used in [a SofaPython3 PR](https://github.com/sofa-framework/SofaPython3/pull/459). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Orig",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5017:782,benchmark,benchmark,782,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5017,1,['benchmark'],['benchmark']
Testability,"- `TVecId` can be `constexpr`; - Enumerations are scoped (global variables are declared to keep compatibility with previous unscoped enumeration); - Indices are based on enumerations (no more hard coded indices); - Main states are defined as a global variable; - When main states are called, the global variable is read instead of the call of a static function (each time the static function is called, it instantiates a new variable instead of re-use the same). Main changes are in `VecId.h`. The rest is trivial changes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5082:1062,test,test,1062,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5082,2,['test'],['test']
Testability,"- `TetrahedronFEMForceField` Add getter per tetrahedron for:; - Rotation matrix; - Initial rotation matrix; - Material stiffness matrix; - Strain Displacement; - Local coordinates (in rotated frame); ; - `TetrahedralCorotationalFEMForceField`; - Add warning at init if topology is empty; ; - `FastTetrahedralCorotationalForceField`; - Move Data scope as public; - Set poisson and young modulus as required Data. This PR integrate changes in component needed for tests introduced in #2842. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2845:462,test,tests,462,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2845,3,['test'],"['test', 'tests']"
Testability,"- `loadPlugin` and `loadPluginByPath` return an enum: more detailed than a boolean; - `readFromIniFile` returns the list of plugins that have been loaded; - The plugin manager GUI highlights which plugins have been loaded in the GUI initialization (not the autoload file). Black text is for plugins that have been loaded prior the GUI initialization, or after. Blue for plugins loaded during init. See screenshot; - More log messages. ![image](https://user-images.githubusercontent.com/10572752/177587029-83209468-2213-4601-8e30-5b39bd331a2e.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3109:421,log,log,421,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3109,3,"['log', 'test']","['log', 'test']"
Testability,"- add CMakeLists.txt for anatomyModelling tutorial example (which was missing); - update anatomyModelling.cpp in order to build the anatomy example (in bin directory); The example compiles and runs fine on linux ubuntu, but I'm not sure that behaviour is as it should be! Please examine it before merging. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/287:557,test,test,557,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/287,2,['test'],['test']
Testability,"- add computeBBox; - more expressive code; - formatting; - fix typos; - optimizations; - remove unused aliases; - better description. Based on #4776 to avoid conflicts. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4777:708,test,test,708,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4777,2,['test'],['test']
Testability,"- chainHybrid and oneTetrahedron was compiling but not working (no GUI, nothing); - compositeObject, mixedPendulum and oneParticle were disabled (needless to say that they were not compiling and obsolete). This PR makes them compile and work as intended. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2024:794,test,test,794,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2024,2,['test'],['test']
Testability,- change old sout/serr logs into msg_ ; - replace some #ifndef NDEBUG by if (CHECK_TOPOLOGY); - Add AdvanceTimer logs during topology changes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/874:23,log,logs,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/874,4,"['log', 'test']","['logs', 'test']"
Testability,"- clean (const, foreach loop); - optimize a little bit when initializing the normals vector; - if there is not index, use memset to clear all vectors at once; - if there are indices, just dont clear the new vectors as there are supposed to be 0 already. On a big mesh (315k vertices and 620k triangles) and mapped (to force the call to computeNormals); - before `1000 iterations done in 14.95 s ( 66.8896 FPS).`; - after `1000 iterations done in 14.075 s ( 71.048 FPS)`. The case is not really usual as it needs huge meshes to see the difference ; and mappings will certainly takes much more time. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3805:1137,test,test,1137,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3805,2,['test'],['test']
Testability,"- clean and optimize `StiffSpringForceField::addKToMatrix`; - Introduce simpler scene showing StiffSpringForceField. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2429:656,test,test,656,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2429,2,['test'],['test']
Testability,"- clean cuda classes and .cu code; - add cudaVec3d support using kernel template; - Add benchmark scene cpu vs gpu and performance scenes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2568:88,benchmark,benchmark,88,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2568,3,"['benchmark', 'test']","['benchmark', 'test']"
Testability,"- deprecation messages (change macros...); - rename bloc for blocks; and other trivial ones. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3911:632,test,test,632,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3911,2,['test'],['test']
Testability,"- factorize loops over elements; - add unit tests; - rename Data; - extend to tetrahedra and hexahedra. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4958:44,test,tests,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4958,3,['test'],"['test', 'tests']"
Testability,"- harmless cleaning in Edge2QuadTopologicalMapping; - Add example scene. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3408:612,test,test,612,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3408,2,['test'],['test']
Testability,"- image: fix unit test with MeshToImage; - SofaHelper: should fix test on Windows for 8b unitcode path (hopefully should not change Linux/Mac behavior ?). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1585:18,test,test,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1585,4,['test'],['test']
Testability,- info on time is already dumped at each scene test but not used on the CI.; - State is now tested using the project: https://github.com/sofa-framework/regression; Done in PR #830; Tested in PR #857,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/801#issuecomment-445825381:47,test,test,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/801#issuecomment-445825381,3,"['Test', 'test']","['Tested', 'test', 'tested']"
Testability,"- kdtree was using defaulttype::Vectypes only for the Vec2d/Vec3d...; - GenerateRigid (only used in generaterigid app and sofapython...) is using RigidMass, I took the lazy solution and put the dependency through a template; - OwnershipPtr had a dependency on BaseMatrix for nothing. + fix in Frame (defaulttype/config.h, DEFAULTTYPE_API). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1915:879,test,test,879,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1915,2,['test'],['test']
Testability,"- move code from header to compilation unit; - remove the dependency to Data. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2236:619,test,test,619,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2236,2,['test'],['test']
Testability,"- moves code from header to .inl; - use typedef to express the inner types instead of specifying them all the time; The inner types are: Quat, Vec3, Mat3x3, Real; - add Quaternion to forward declaration file.; - remove the use of the implicit automatically converting functions(BREAKING) ; eg: template<Real2> void toMatrix(Matrix<3,3,Real2>){}; As there is no more hidden type conversion the caller's have to handle themselves; the type conversion before calling instead of relying on the inner-conversion. This is; good as it propagate to the user-level that there is type conversion involved instead of; hidden that fact. The consequence is that it is not possible to do stuff like that anymore; Quat<float>::toMatrix(Mat<3,3,double)>. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1878:1278,test,test,1278,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1878,2,['test'],['test']
Testability,"- moves the definition from .h in a .cpp ; - moves RotationMatrix.h and RotationMatrix.cpp in SofaBaseLinearSolver (because this is where it should be according to its dependency to SparseMatrix). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1995:736,test,test,736,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1995,2,['test'],['test']
Testability,"- namespace concatenation; - pragma once; - ScopedAdvancedTimer instead of StepBegin/StepEnd; - Allman style; - `Inherit1::init();` called in `ShewchukPCGLinearSolver::init()`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2493:716,test,test,716,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2493,2,['test'],['test']
Testability,"- redundant accessibility specifier; - constexpr variables; - make functions const; - type traits simplification; - explicit deleted functions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2461:683,test,test,683,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2461,2,['test'],['test']
Testability,"- remove useless preprocessor definition; - remove useless typedef; - remove useless utility template function getData() and its unique usage, as the .data() function from type::vector does the same. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3417:739,test,test,739,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3417,2,['test'],['test']
Testability,- removing awful stuff regarding linearspring in Binding_Data; - adding specific Binding_VectorLinearSpringData; - possibility to directly copy a Data in another Data; - possibility to have specific setter for all Data in the factory. WARNING this PR depends on #165 . <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old.; **Reviewers will merge only if all this checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/166:438,test,test,438,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/166,1,['test'],['test']
Testability,"- simulationType is DAG in any case; ~~- interactive is not used~~; - testMode is... not useful ? (mileage can vary though). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4925:70,test,testMode,70,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4925,3,['test'],"['test', 'testMode']"
Testability,"- std::abs is constexpr only in c++23 ; -> as stated in the standard... But gcc flagged it constexpr 🤫. - std::sqrt is not constexpr at all. Implementations exists though. For now, all functions relying on sqrt is not constexpr (norm methods). Allows to compile https://github.com/alxbilger/SofaBenchmark/pull/27 (for mac and msvc then). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3281:877,test,test,877,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3281,2,['test'],['test']
Testability,- use const & and better variable names ; - Test the edge's vertices as well. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1545:44,Test,Test,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1545,3,"['Test', 'test']","['Test', 'test']"
Testability,- use some size_t instead of int in the topology_test; - Change the update method from the mass to return the bool update as result.; - some small warning fix in other classes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/726:428,test,test,428,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/726,2,['test'],['test']
Testability,"- useless external instanciation of JointSpring in JointSpringFF (because already defined in JointSpring,h); - remove duplicate forward declaration; - use actual forward declaration and move JointSpring header. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2254:750,test,test,750,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2254,2,['test'],['test']
Testability,"--------------------------------------------------------------------------------------------; BM_TriangularFEMForceFieldOptim/32 190 ms 188 ms 4 FPS=170.667/s MBKBuild=561.555u MBKSolve=5.21104m frame=5.85938ms; BM_TriangularFEMForceFieldOptim/64 368 ms 367 ms 2 FPS=174.298/s MBKBuild=526.034u MBKSolve=5.06889m frame=5.7373ms; BM_TriangularFEMForceFieldOptim/128 715 ms 719 ms 1 FPS=178.087/s MBKBuild=509.678u MBKSolve=4.93597m frame=5.61523ms; BM_TriangularFEMForceFieldOptim/256 1259 ms 1266 ms 1 FPS=202.272/s MBKBuild=500.564u MBKSolve=4.28127m frame=4.94385ms; ```; After. ```. ----------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; ----------------------------------------------------------------------------------------------; BM_TriangularFEMForceFieldOptim/32 196 ms 195 ms 4 FPS=163.84/s MBKBuild=590.4u MBKSolve=5.34807m frame=6.10352ms; BM_TriangularFEMForceFieldOptim/64 377 ms 375 ms 2 FPS=170.667/s MBKBuild=529.309u MBKSolve=5.19836m frame=5.85938ms; BM_TriangularFEMForceFieldOptim/128 720 ms 703 ms 1 FPS=182.044/s MBKBuild=497.814u MBKSolve=4.9813m frame=5.49316ms; BM_TriangularFEMForceFieldOptim/256 1270 ms 1266 ms 1 FPS=202.272/s MBKBuild=502.338u MBKSolve=4.3129m frame=4.94385ms; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2861:2519,test,test,2519,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2861,2,['test'],['test']
Testability,"----------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------------------------------------; BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble 75568 ns 75550 ns 9185; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3Bloc_CRS3x3d 55533 ns 54699 ns 12798; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d 12930 ns 12785 ns 49662; BM_CRS_Fixture<double>/Add3x3BlocScalar_double 67780 ns 66811 ns 10488; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d 51334 ns 50603 ns 13884; ```. ## After. ```; -----------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------------------------------------; BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble 76223 ns 76266 ns 9132; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3Bloc_CRS3x3d 13781 ns 13808 ns 51026; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d 12434 ns 12458 ns 56014; BM_CRS_Fixture<double>/Add3x3BlocScalar_double 66579 ns 66637 ns 10530; BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d 49684 ns 49713 ns 14274; ```. # Conclusion. The benchmarks show that insertion of 3x3 blocs is faster in 3x3 bloc-based CRS matrices than before (the test `Add3x3Bloc_CRS3x3d`). It goes almost at the same speed than the bloc insertion specialized for 3x3 CRS matrices (benchmark BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d).; The speed remains the same for CRS made doubles, which is expected. TODO: explain the benchmarks and push them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-fram",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2281:2465,Benchmark,Benchmark,2465,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2281,1,['Benchmark'],['Benchmark']
Testability,"------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; -------------------------------------------------------------------------------------------------------------------; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/2 1000 ms 1000 ms 1 FPS=200/s frame=5ms; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/4 2043 ms 2016 ms 1 FPS=198.45/s frame=5.03906ms; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/8 4050 ms 4047 ms 1 FPS=197.683/s frame=5.05859ms; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/16 8135 ms 8125 ms 1 FPS=196.923/s frame=5.07812ms; BM_Scene_bench_StepFactor<SparseLDLSolverScene>/512 2606 ms 2562 ms 1 FPS=199.805/s frame=5.00488ms; BM_Scene_bench_StepFactor<SparseLDLSolverScene>/1024 5261 ms 5250 ms 1 FPS=195.048/s frame=5.12695ms; BM_Scene_bench_StepFactor<SparseLDLSolverScene>/2048 10407 ms 10406 ms 1 FPS=196.805/s frame=5.08118ms; ```. # `applyPermutation=""true""`. ```; -------------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; -------------------------------------------------------------------------------------------------------------------; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/2 1581 ms 1562 ms 1 FPS=128/s frame=7.8125ms; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/4 3114 ms 3141 ms 1 FPS=127.363/s frame=7.85156ms; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/8 6271 ms 6281 ms 1 FPS=127.363/s frame=7.85156ms; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/16 12554 ms 12609 ms 1 FPS=126.89/s frame=7.88086ms; BM_Scene_bench_StepFactor<SparseLDLSolverScene>/512 3960 ms 3969 ms 1 FPS=129.008/s frame=7.75146ms; BM_Scene_bench_StepFactor<SparseLDLSolverScene>/1024 7831 ms 7844 ms 1 FPS=130.55/s frame=7.65991ms; BM_Scene_bench_StepFactor<SparseLDLSolverScene>/2048 15703 ms 15688 ms 1 FPS=130.55/s frame=7.65991ms; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2762#issuecomment-1060704325:1344,Benchmark,Benchmark,1344,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2762#issuecomment-1060704325,1,['Benchmark'],['Benchmark']
Testability,"---------------------------------------------------------; BM_Scene_bench_StepFactor<TetrahedralFEMForceFieldOptimScene>/512 1339 ms 1344 ms 1 FPS=381.023/s frame=2.62451ms; BM_Scene_bench_StepFactor<TetrahedralFEMForceFieldOptimScene>/1024 2662 ms 2656 ms 1 FPS=385.506/s frame=2.59399ms; BM_Scene_bench_StepFactor<TetrahedralFEMForceFieldOptimScene>/2048 5259 ms 5266 ms 1 FPS=388.938/s frame=2.57111ms; BM_Scene_bench_StepFactor<TetrahedralFEMForceFieldOptimScene>/4096 10451 ms 10453 ms 1 FPS=391.845/s frame=2.55203ms; ```. ```; -----------------------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; -----------------------------------------------------------------------------------------------------------------------------; BM_Scene_bench_StepFactor<TetrahedralFEMForceFieldOptimScene>/512 982 ms 984 ms 1 FPS=520.127/s frame=1.92261ms; BM_Scene_bench_StepFactor<TetrahedralFEMForceFieldOptimScene>/1024 1966 ms 1953 ms 1 FPS=524.288/s frame=1.90735ms; BM_Scene_bench_StepFactor<TetrahedralFEMForceFieldOptimScene>/2048 3988 ms 3969 ms 1 FPS=516.031/s frame=1.93787ms; BM_Scene_bench_StepFactor<TetrahedralFEMForceFieldOptimScene>/4096 7858 ms 7859 ms 1 FPS=521.161/s frame=1.91879ms; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2877:2283,test,test,2283,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2877,2,['test'],['test']
Testability,"--------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 18.4 us 18.4 us 36921; BM_NarrowPhaseDetection_getDetectionOutputs/16 54.1 us 54.1 us 12873; BM_NarrowPhaseDetection_getDetectionOutputs/32 177 us 177 us 3973; BM_NarrowPhaseDetection_getDetectionOutputs/64 631 us 631 us 1116; BM_NarrowPhaseDetection_getDetectionOutputs/128 2587 us 2587 us 268; BM_NarrowPhaseDetection_getDetectionOutputs/256 10649 us 10649 us 67; ```; ## `sofa::helper::map_ptr_stable_compare`; ```; ------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 38.3 us 38.3 us 18336; BM_NarrowPhaseDetection_getDetectionOutputs/16 234 us 234 us 3010; BM_NarrowPhaseDetection_getDetectionOutputs/32 1373 us 1373 us 506; BM_NarrowPhaseDetection_getDetectionOutputs/64 8055 us 8056 us 88; BM_NarrowPhaseDetection_getDetectionOutputs/128 45349 us 45348 us 15; BM_NarrowPhaseDetection_getDetectionOutputs/256 243190 us 243189 us 3; ```; The benchmarks were performed using https://github.com/alxbilger/SofaBenchmark.; `BM_NarrowPhaseDetection_getDetectionOutputs/n` corresponds to a map containing `n^2` pairs of `CollisionModel*`. ## Discussion. It is undeniable that `std::map` and `std::unordered_map` are faster than `sofa::helper::map_ptr_stable_compare`. However, I don't know how crucial it is to have this kind of map with a dedicated comparator. Is this feature necessary? If not, I am in favour of using `std::unordered_map` wherever `sofa::helper::map_ptr_stable_compare` is used, for performances reasons. Overall, we won't get a huge gain of fps, but still it has an impact on the peformances of `NarrowPhaseDetection`. Initially, I wondered why `NarrowPhaseDetection` took so much time for so simple instructions. ______________________________________________________.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2047:2357,benchmark,benchmarks,2357,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2047,1,['benchmark'],['benchmarks']
Testability,"----------------------------------------; BM_StandardTetrahedralFEMForceField/32 333 ms 328 ms 2 FPS=97.5238/s MBKBuild=379.033u MBKSolve=6.66173m frame=0.0102539s; BM_StandardTetrahedralFEMForceField/64 664 ms 672 ms 1 FPS=95.2558/s MBKBuild=354.073u MBKSolve=6.62915m frame=0.010498s; BM_StandardTetrahedralFEMForceField/128 1319 ms 1328 ms 1 FPS=96.3765/s MBKBuild=347.671u MBKSolve=6.58216m frame=0.010376s; BM_StandardTetrahedralFEMForceField/256 2583 ms 2578 ms 1 FPS=99.297/s MBKBuild=330.558u MBKSolve=6.43889m frame=0.0100708s; ```. After. ```; --------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; --------------------------------------------------------------------------------------------------; BM_StandardTetrahedralFEMForceField/32 321 ms 320 ms 2 FPS=99.9024/s MBKBuild=379.211u MBKSolve=6.43458m frame=0.0100098s; BM_StandardTetrahedralFEMForceField/64 637 ms 641 ms 1 FPS=99.9024/s MBKBuild=361.311u MBKSolve=6.34991m frame=0.0100098s; BM_StandardTetrahedralFEMForceField/128 1287 ms 1281 ms 1 FPS=99.9024/s MBKBuild=349.305u MBKSolve=6.4886m frame=0.0100098s; BM_StandardTetrahedralFEMForceField/256 2548 ms 2547 ms 1 FPS=100.515/s MBKBuild=347.56u MBKSolve=6.35484m frame=9.94873ms; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2858:2480,test,test,2480,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2858,2,['test'],['test']
Testability,"------------------------------------; Benchmark Time CPU Iterations UserCounters...; -------------------------------------------------------------------------------------------------------------------; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/2 2071 ms 2094 ms 1 FPS=95.5224/s frame=0.0104687s; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/4 4103 ms 4094 ms 1 FPS=97.7099/s frame=0.0102344s; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/8 8253 ms 8188 ms 1 FPS=97.7099/s frame=0.0102344s; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/16 17380 ms 17312 ms 1 FPS=92.4188/s frame=0.0108203s; BM_Scene_bench_StepFactor<SparseLDLSolverScene>/512 6187 ms 6188 ms 1 FPS=82.7475/s frame=0.012085s; BM_Scene_bench_StepFactor<SparseLDLSolverScene>/1024 11960 ms 11938 ms 1 FPS=85.7801/s frame=0.0116577s; BM_Scene_bench_StepFactor<SparseLDLSolverScene>/2048 24209 ms 24156 ms 1 FPS=84.7814/s frame=0.011795s; ```. # `useSymbolicDecomposition=""true""`. ```; -------------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; -------------------------------------------------------------------------------------------------------------------; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/2 1588 ms 1578 ms 1 FPS=126.733/s frame=7.89062ms; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/4 3182 ms 3156 ms 1 FPS=126.733/s frame=7.89062ms; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/8 6391 ms 6344 ms 1 FPS=126.108/s frame=7.92969ms; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/16 12823 ms 12938 ms 1 FPS=123.671/s frame=8.08594ms; BM_Scene_bench_StepFactor<SparseLDLSolverScene>/512 3981 ms 3938 ms 1 FPS=130.032/s frame=7.69043ms; BM_Scene_bench_StepFactor<SparseLDLSolverScene>/1024 7918 ms 7906 ms 1 FPS=129.518/s frame=7.72095ms; BM_Scene_bench_StepFactor<SparseLDLSolverScene>/2048 15920 ms 15938 ms 1 FPS=128.502/s frame=7.78198ms. ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2756#issuecomment-1060696095:1406,Benchmark,Benchmark,1406,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2756#issuecomment-1060696095,1,['Benchmark'],['Benchmark']
Testability,"--------------------; BM_Matrix_typemat3x3f_construct/128 1.09 us 1.10 us 640000; BM_Matrix_typemat3x3f_construct/256 2.20 us 2.20 us 320000; BM_Matrix_typemat3x3f_construct/512 4.40 us 4.39 us 160000; BM_Matrix_eigenmat33_construct/128 0.270 us 0.270 us 2488889; BM_Matrix_eigenmat33_construct/256 0.509 us 0.500 us 1000000; BM_Matrix_eigenmat33_construct/512 0.996 us 0.977 us 640000; ```. # After. ```; -------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -------------------------------------------------------------------------------------; BM_Matrix_typemat3x3f_construct/128 0.324 us 0.328 us 2240000; BM_Matrix_typemat3x3f_construct/256 0.627 us 0.628 us 1120000; BM_Matrix_typemat3x3f_construct/512 1.26 us 1.26 us 560000; BM_Matrix_typemat3x3f_construct_noinit/128 0.323 us 0.321 us 2240000; BM_Matrix_typemat3x3f_construct_noinit/256 0.638 us 0.628 us 1120000; BM_Matrix_typemat3x3f_construct_noinit/512 1.28 us 1.28 us 560000; BM_Matrix_eigenmat33_construct/128 0.255 us 0.256 us 2986667; BM_Matrix_eigenmat33_construct/256 0.502 us 0.500 us 1000000; BM_Matrix_eigenmat33_construct/512 0.993 us 1.00 us 746667; ```. Now the construction of a 3x3 matrix is 3x faster and close to the construction of a 3x3 matrix with Eigen. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2450:2235,test,test,2235,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2450,2,['test'],['test']
Testability,"---; C:\Program Files\Eclipse Foundation\jdk-8.0.302.8-hotspot\bin;C:\Python27;C:\Users\Ruiliang\AppData\Local\Programs\Python\Python39\Scripts;C:\Users\Ruiliang\AppData\Local\Programs\Python\Python39;C:\SIMULIA\Commands;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Crucial\Crucial Storage Executive;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Users\Ruiliang\AppData\Local\Microsoft\WindowsApps;C:\Users\Ruiliang\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\CMake\bin;C:\Qt\5.15.2\msvc2019_64\bin;C:\Qt\5.15.2\msvc2019_64\lib;C:\local\boost_1_75_0\lib64-msvc-14.2;C:\local\boost_1_75_0;C:\Program Files\Git\cmd;;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Users\Ruiliang\AppData\Local\Programs\Python\Python39\Scripts\;C:\Users\Ruiliang\AppData\Local\Programs\Python\Python39\;C:\Users\Ruiliang\AppData\Local\Microsoft\WindowsApps;C:\Users\Ruiliang\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\Ruiliang\.dotnet\tools; --- SOFA_ROOT ---; --- PYTHONPATH ---; --- sys.path ---; ['', 'C:\\WINDOWS\\SYSTEM32\\python27.zip', 'C:\\Python27\\DLLs', 'C:\\Python27\\lib', 'C:\\Python27\\lib\\plat-win', 'C:\\Python27\\lib\\lib-tk', 'C:\\Python27', 'C:\\Python27\\lib\\site-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. No Error outputs or suspicious outputs has been found. ```. **Content of build_dir/CMakeCache.txt**. < DRAG AND DROP YOUR CMAKECACHE.TXT HERE >. ---------------------------------------------. Thank you for your report.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2486:4122,Log,Logs,4122,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2486,1,['Log'],['Logs']
Testability,-tidy/checks/modernize-replace-auto-ptr.html) |; | [clang-analyzer-security.insecureAPI.getpw](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.getpw.html) | [modernize-replace-random-shuffle](https://clang.llvm.org/extra/clang-tidy/checks/modernize-replace-random-shuffle.html) |; | [clang-analyzer-security.insecureAPI.gets](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.gets.html) | [modernize-return-braced-init-list](https://clang.llvm.org/extra/clang-tidy/checks/modernize-return-braced-init-list.html) |; | [clang-analyzer-security.insecureAPI.mkstemp](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.mkstemp.html) | [modernize-shrink-to-fit](https://clang.llvm.org/extra/clang-tidy/checks/modernize-shrink-to-fit.html) |; | [clang-analyzer-security.insecureAPI.mktemp](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.mktemp.html) | [modernize-unary-static-assert](https://clang.llvm.org/extra/clang-tidy/checks/modernize-unary-static-assert.html) |; | [clang-analyzer-security.insecureAPI.rand](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.rand.html) | [modernize-use-auto](https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-auto.html) |; | [clang-analyzer-security.insecureAPI.strcpy](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.strcpy.html) | [modernize-use-bool-literals](https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-bool-literals.html) |; | [clang-analyzer-security.insecureAPI.vfork](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.vfork.html) | [modernize-use-default-member-init](https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-default-member-init.html) |; | [clang-analyzer-unix.API](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-unix.API.html) | [modernize-use-emplace](https,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:17228,assert,assert,17228,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['assert'],['assert']
Testability,". 1. You open a PR in SOFA (let's call it ""SOFA PR"").; 2. SOFA CI fails to build/test your SOFA PR because some external projects are enabled and you didn't enable them in your local tests.; 3. You realize that the failure is due to your changes.; 4. You fix the issue in the external project and open a PR (let's call it ""external PR"").; 5. You reference your external PR in the description of your SOFA PR with ; `[ci-depends-on https://github.com/<org>/<repo>/pull/<id>]`; 6. SOFA CI can now build/test your PR. It will automatically replace the external project with the ""result of the merge of your external PR"".; 7. As soon as SOFA CI is green and external PR is merged, your SOFA PR is ready to merge. This way, you do not need to touch any `ExternalProject.cmake` file in your SOFA PR :+1:. The only change in this PR consists in adding `GIT_CONFIG ""remote.origin.fetch=+refs/pull/*:refs/remotes/origin/pr/*""` to all ExternalProject.cmake files.; This change permits to have access to any commit in any pull-request (including merge commits). See [this nice cheatsheet about how to fetch PRs](https://gist.github.com/piscisaureus/3342247).; All other changes have been done [in CI scripts](https://github.com/sofa-framework/ci/blob/master/scripts/pre-builds.sh#L50-L124) and are ready to use. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1961:2180,test,test,2180,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1961,2,['test'],['test']
Testability,". stiff_bead_node = composite_node.addChild(""stiff bead""); stiff_bead_node.addObject(""MeshOBJLoader"", name=""meshLoader_3"", filename=""mesh/bubille_in2.obj"", handleSeams=True); stiff_bead_node.addObject(""OglModel"", name=""VisualBody2"", src=""@meshLoader_3"", normals=""0"", color=[0, 0, 1, 1]); stiff_bead_node.addObject(""HexahedronCompositeFEMMapping"", input=""@.."", output=""@VisualBody2""). ball_node = root.addChild(""ball""); ball_node.addObject(""EulerImplicitSolver"", vdamping=0, rayleighMass=0, rayleighStiffness=0); ball_node.addObject(""CGLinearSolver"", iterations=100, tolerance=1e-5, threshold=1e-5). ball_node.addObject(""MechanicalObject"", template=""Rigid3d"", position=[0, 5, 0, 0, 0, 0, 1], showObject=True, showObjectScale=2.0); ball_node.addObject(""UniformMass"", totalMass=10000.0); ball_node.addObject(""SphereCollisionModel"", radius=0.5, group=1); ball_node.addObject(""UncoupledConstraintCorrection""); ```. As a side question: Am I even using the right components? How would you model this scene of a liver with an embedded tumor? I also tested the Heterogeneous-TetrahedronFEMForceField.scn example, but that is even more unstable. When you interact with the object through the mouse, it applies a huge force in the opposite direction. <video src=""https://github.com/sofa-framework/sofa/assets/29635054/dc863ba3-7e55-48e1-8b5d-30d078fd5b88; "" width=""200"" height=""auto"">. I also simplified the liver scene to just the SOFA liver. Same problem with the instability. ```python; import Sofa; import Sofa.Core. PLUGINS = [; ""Sofa.Component.AnimationLoop"",; ""Sofa.Component.Collision.Detection.Algorithm"",; ""Sofa.Component.Collision.Detection.Intersection"",; ""Sofa.Component.Collision.Response.Contact"",; ""Sofa.Component.Constraint.Lagrangian.Solver"",; ""Sofa.Component.Visual"",; ""Sofa.Component.Collision.Geometry"",; ""Sofa.Component.Constraint.Projective"",; ""Sofa.Component.LinearSolver.Iterative"",; ""Sofa.Component.Mapping.NonLinear"",; ""Sofa.Component.Mass"",; ""Sofa.Component.ODESolver.Backward"",; ""So",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4597#issuecomment-2006525838:7371,test,tested,7371,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4597#issuecomment-2006525838,1,['test'],['tested']
Testability,".. due to a missing header (defining SOFA_HELPER_API); I suppose this came from various merge before merging #1915 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1942:656,test,test,656,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1942,2,['test'],['test']
Testability,"... And fix various crashes of unit tests when they quit. Some unit tests are crashing when quitting (maybe random) since #1883 , with a call to an invalid MessageDispatcher (GtestMessageDispatcher) .; After some investigations, it appears that some init()/cleanup() in simulation do not respect the chain of dependency : ; - SofaSimulationGraph was calling the ones fromSofaSimulationCore instead of the one of SofaSimulationCommon; ; - SofaSimulationCommon was init/cleanup of SofaCore instead of SofaSimulationCore. I suppose #1883 exposed the problem by removing **seemingly** useless init().; But it seems they were patching the issue raised in this PR. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1987:36,test,tests,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1987,4,['test'],"['test', 'tests']"
Testability,"... and DualQuat. ## Description:; Move all Quaternion-related classes (and DualQuat) to the new Sofa.Type module.; Like #1734 There is a compatibility layer for transition, so it should be as least breaking as possible.; Remove helper::Quater/defaulttype::Quat thingy, really confusing (name ""Quater"" does not make any sense). - sofa::helper::Quater<T> becomes sofa::type::Quat<T>; - sofa::defaulttype::Quat (typedef) becomes ... ?; - sofa::helper::DualQuat becomes sofa::type::DualQuat. ## Breaking; - Remove a constructor with RigidType for DualQuat.; As DualQuat is only used in Flexible, not a big deal.... ## Talking; - Previous point: DualQuat is only used in Flexible, should it be simply moved there ?; - fact that Quat is now a template (was a typedef without template before) could be confusing ?. ## Note; Forgot wrapping redirection from MatSym, the fact that there was no error before means that it is not used at all... Mandatory to mention: #1521. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1790:1503,test,test,1503,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1790,2,['test'],['test']
Testability,"... and add VisualParameters as a parameter to their signature. Based on ; - #4822 . Continue on what has been introduced by:; - #3931 . Little difference, this PR does not only do the NVI thing but it adds the visualparameters as input.; This seems consistent (to me) with the fact that init/update visual as supposed to be called when there is a draw context (like drawVisual). ; The nice side effect (and it was the intent at the beginning) is that updatevisual wont be called anymore if the component state is wrong, showVisualModels flag is not set or not enabled. \+ cleanings here and there in the visual/gl components. Unfortunately, breaking ⚠️. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/423]; [ci-depends-on https://github.com/sofa-framework/SofaSphFluid/pull/1]. TEMP: ; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/153]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4827:1417,test,test,1417,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4827,2,['test'],['test']
Testability,"... and also reduce complexity of the search of common groups. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3264:602,test,test,602,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3264,2,['test'],['test']
Testability,"... and not only mechanical ones. removing some unncessary includes too. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4362:612,test,test,612,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4362,2,['test'],['test']
Testability,"... because the CI cannot load SofaCUDA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2893:580,test,test,580,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2893,2,['test'],['test']
Testability,"... because this is not relevant anymore as we compile SReal either with float XOR double.; And ""dual"" templates have been removed some releases ago. Effectively, `both` was equivalent as ` double` , hence the removal. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3436:758,test,test,758,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3436,2,['test'],['test']
Testability,"... before putting it out on an external repo. - Update file structure; - Refresh cmake; - fix dependencies; - fix bullet dep; - compilation; - full xml examples (seems) to work. I did not really clean the code itself, I dont know if this plugin is viable or not. Some files depends on removed plugins (LMConstraints and Compliant) so it has not been tested. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3800:351,test,tested,351,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3800,3,['test'],"['test', 'tested']"
Testability,"... by making optional SofaValidation (as its remaining components are deprecated). The ifdef is a bit ugly but some refactoring are needed to add futures features like this (instead of adding getXXX and getNbXXX for each type of component in the API). Some cleanups for the cmake file itself (more up-to-date Sofa cmake syntax) and the dependencies. small user experience question:; - Should Sofa.component be forcefully linked with it? so the user knows that all components are available from the start; - or should the actual dependencies be managed by the user afterwards in its application?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3091:1136,test,test,1136,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3091,2,['test'],['test']
Testability,"... by removing a useless (and from the compatibility layer) in SofaMeshCollsion. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2227:621,test,test,621,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2227,2,['test'],['test']
Testability,"... or so it seems. There is not CI process for the install process and I could compile BeamAdapter_test target out of tree, but I would prefer if other people could test it 🧐. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4489:166,test,test,166,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4489,3,['test'],['test']
Testability,"... or we change the comment 🤐. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4129:571,test,test,571,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4129,2,['test'],['test']
Testability,"... unless there is a good reason to keep built even if tests are not built ?; In the case we have to keep it built, we will have to handle the embedded dependency google test (linked dynamically), probably in a similar manner than other libs such as metis (find package or fetch code and link dynamically). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4459:56,test,tests,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4459,4,['test'],"['test', 'tests']"
Testability,"... when AUTO_SET_TARGET_PROPERTIES is set. (useful for external header-only targets). EDIT: a lot of cases will be handled in cmake >3.24 a(avoiding lots of tests). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4356:158,test,tests,158,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4356,3,['test'],"['test', 'tests']"
Testability,"... with the current standard set of modules/plugins.; ## About; Since MSVC2019, VS proposes the choice to use the clang-cl toolchain (clang with msvc tools). Not possible to enable it with the latest(?) cmake-gui but possible to generate a solution with the commandline version: `cmake -G""Visual Studio 2019"" -T ClangCL ..`; ## This PR; - add necessary cmake config to allow compilation (and avoid 1e999 warnings); - fix few problems detected with clang (rightly so); - change the FixParticlePerformerFactory shenanigan to be cleaner. ## Results; It appears that clang is somewhat more clever than cl.exe and seems to produces more optimized binaries.; Results are not always good, and really depends on the situation/scene. Few cases where cl is slightly faster than clang-cl; Some bench:; - `caduceus.scn -g batch -n 10000`; - cl: `21.2541 s ( 470.498 FPS)`; - clang-cl: `19.6914 s ( 507.836 FPS)`; - MeshMatrixMass.scn with 4096 steps (from SofaBenchmark); - cl: `25504 ms`; - clang-cl: `18161 ms`; - `examples/Benchmark/Performance/benchmark_cubes.scn -g batch -n 1000`; - cl: `36.7404 s ( 27.218 FPS`; - clang-cl: ` 37.8146 s ( 26.4448 FPS)`; - `examples/Benchmark/Performance/TorusFall.scn -g batch -n 1000`; - cl: `8.63699 s ( 115.781 FPS)`; - clang-cl: ` 7.72771 s ( 129.404 FPS)`; - `applications/plugins/SofaCUDA/examples/beam16x16x76-fem-implicit-CPU.scn -g batch -n 1000`; - cl: ` 113.022 s ( 8.8478 FPS))`; - clang-cl: ` 100.645 s ( 9.93587 FPS)`; - SofaBenchmark, a lot shows only improvement around 10-15% but some are interesting:; - `BM_FixedArray_construct<sofa::type::Vec3f>/8192`; - cl: ` 10.5 us`; - clang-cl: ` 6.42 us`; - `BM_Matrix_typemat3x3f_assign/512` this one is weird (the same bench with eigenmat is much closer); - cl: ` 3.44 us`; - clang-cl: ` 1.18 us`. ## Warning; pybind is not compatible with clang-cl (and I am sure a lot of other libraries), even gtest as it is was not compatible. ______________________________________________________. By submitting this pull ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2563:1015,Benchmark,Benchmark,1015,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2563,1,['Benchmark'],['Benchmark']
Testability,".... Removing all the warnings set by #2524. (mainly coming from the creation of Sofa.LinearAlgebra and the move of topologychange things into sofa/core/topology). This PR is quite huge but it should be merged quite as soon as possible after #2524 as it will throw a lot of warnings in the meantime. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/219]; [ci-depends-on https://github.com/sofa-framework/Regression/pull/20]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2525:981,test,test,981,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2525,2,['test'],['test']
Testability,"...instead of assign operator + defaultconstructor (which in fine do the same clear() function). Micro optimization but still 😗; (nice french idiom for that: ""ça ne mange pas de pain""). (on examples/Components/DiagonalMass.scn); Before:; ![Capture1](https://user-images.githubusercontent.com/11028016/144096997-260f4c68-2784-4b9a-a71b-869ad5536567.PNG); After:; ![Capture2](https://user-images.githubusercontent.com/11028016/144097259-7a1640be-2697-47d3-a94a-2fa73b84a002.PNG). _______________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2518:1002,test,test,1002,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2518,2,['test'],['test']
Testability,".com/sofa-framework/sofa/commit/54f49d039aadaffd57a1d7f8ebab3af82e407674); I see no reason not to do that. Dependencies to DiffusionSolver are simpler this way. ### [[CImgPlugin] CLEAN include directory](https://github.com/sofa-framework/sofa/commit/1a617d5350f74ac4a816255960d92638a26cba1b); Sources moved to `src`. No more `../` horror in CImgPlugin include directories. ## Other changes. - [SofaHelper] FIX DynamicLibrary altered search path (Windows only) ; Needed to prefer `bin` libraries over neighboor libraries; - [SofaFramework] FIX typo in config.h.in; - [runSofa] Check if plugins dir exists before adding to PluginRepository; - [SofaTest] FIX SofaPython finding in *Config.cmake.in; - [plugins] ADD missing *Config.cmake.in files; Needed to use them as real plugins; - [All] Improve sofa_copy_libraries and sofa_install_libraries macros; Make them easier to use; - [CMake] Rename sofa_set_python_directory into sofa_install_pythonscripts; Clearer name in my opinion + using CMake multiValueArgs; - [CMake] Update package.cmake to enable plugins; Prepare package.cmake to produce binaries with all plugins from ""options"" configuration.; - [SofaImplicitField] FIX tests enabling; - [CMake] CLEAN package.cmake; - [SofaSimulationCore] Handle reload differently in SceneLoader::Listener; Needed to disable scene checks on reload.; - [SofaGraphComponent] Disable scene checks on reload; Needed by live editor (which reloads the scene every time the file is changed).; - [plugins] Remove commented lines in CMakeFiles. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1018:4497,test,tests,4497,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1018,3,['test'],"['test', 'tests']"
Testability,".cpp.o (192 ms); PointSetTopologyAlgorithms.cpp.o (191 ms); initValidation.cpp.o (187 ms); DataDisplay.cpp.o (186 ms); DifferenceEngine.cpp.o (178 ms); MeshObjLoader.cpp.o (177 ms); ... 21119 ms: sofa/extlibs/gtest/include/gtest/internal/gtest-port.h (included 176 times, avg 119 ms), included via:; gtest-typed-test.cc.o gtest-typed-test.h (796 ms); gtest-port.cc.o (666 ms); gtest-death-test.cc.o gtest-death-test.h gtest-death-test-internal.h gtest-internal.h (650 ms); gtest-test-part.cc.o gtest-test-part.h gtest-internal.h (463 ms); gtest-filepath.cc.o gtest-filepath.h gtest-string.h (456 ms); gtest.cc.o gtest.h gtest-internal.h (246 ms); ... 20903 ms: sofa/SofaKernel/modules/SofaHelper/src/sofa/helper/vector.h (included 156 times, avg 133 ms), included via:; MeshGmsh.cpp.o MeshGmsh.h Mesh.h (492 ms); MeshTopologyLoader.cpp.o MeshTopologyLoader.h Mesh.h (402 ms); Image.cpp.o Factory.inl (384 ms); SVector.cpp.o SVector.h (379 ms); GenerateRigid.cpp.o GenerateRigid.h Mesh.h (373 ms); TestMessageHandler.cpp.o TestMessageHandler.h (346 ms); ... 19960 ms: /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/pstl/glue_algorithm_defs.h (included 157 times, avg 127 ms), included via:; qglviewer.h camera.h QMap qmap.h qiterator.h qglobal.h algorithm (348 ms); manipulatedCameraFrame.h manipulatedFrame.h frame.h QObject qobject.h qobjectdefs.h qnamespace.h qglobal.h algorithm (345 ms); gtest-typed-test.h gtest-port.h algorithm (299 ms); mouseGrabber.h config.h qglobal.h algorithm (299 ms); VRender.h config.h qglobal.h algorithm (296 ms); cmake_pch.hxx Base.h BoundingBox.h Vec.h fixed_array.h algorithm (271 ms); ... 19494 ms: sofa/applications/plugins/SofaTest/../SofaTest/Mapping_test.h (included 6 times, avg 3249 ms), included via:; DistanceMapping_test.cpp.o (3500 ms); QuaternionIntegration_test.cpp.o (3407 ms); RigidRigidMapping_test.cpp.o (3280 ms); SquareMapping_test.cpp.o (3239 ms); RigidMapping_test.cpp.o (3089 ms); SquareDistanceMapping_test.cpp.o (2976 ms)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1523:35885,Test,TestMessageHandler,35885,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1523,1,['Test'],['TestMessageHandler']
Testability,"//github.com/SofaDefrost/sofa/commits/deprecating_components beheaded until 456d88343e210ce89d9f7436c290be92fe438313 and merged it with master.; ________________________________________________________________. It does:; - split the CMakeFile.txt in three sets to allow component deprecation/stabilization.; - implement a light C++ api in sofa::simpleapi::* to create component with a pythonic look & feel; - use the simpleapi to change the code of SceneCreator to cut the dependencies and to simplify the plugizniation of modules. ; - in SceneCreator, create SceneUtil.h where some function from SceneCreator are now. ; - remove the module/sofa/component/typedef/* (which seems to cause no real problem); - mute the SOFA_DECL_CLASS/SOFA_LINK_CLASS so maybe...as everything works in the CI we ca n probably remove those lines and stop using them in .cpp ; - remove c++ tutorials from CMakeList before real removal they are slow to compile, and induce big dependencies so it will slow down the deprecation. ; - add an InfoComponent in the loaded scene to indicate when an object failed to be created. . To avoid post-cleaning workload I merged:; - PR#422 Fix for SofaImplicitField and SofaVolumetricData plugin; - PR#407 [SofaSphFluid & SofaMiscCollision] Pluginizing the two modules; For the same reasons we may also merge #414 #424 and #425. Notes: ; - the SceneCreator refactoring is not fully working and generates few test failures but this can be fix easily. ; - removing the typedef & SOFA_DECl/SOFA_LINK seems to ok. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/453:1636,test,test,1636,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/453,3,['test'],['test']
Testability,/A/RemoteServiceDiscovery; 0x7fff331e7000 - 0x7fff331fefff com.apple.xpc.RemoteXPC (1.0 - 2038.80.3) <C4BFF5FC-FC9C-3161-9612-7070EDAE9989> /System/Library/PrivateFrameworks/RemoteXPC.framework/Versions/A/RemoteXPC; 0x7fff33246000 - 0x7fff33249fff com.apple.help (1.3.8 - 71) <6074D81C-4507-35A6-88D7-D82309F81587> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help; 0x7fff3324a000 - 0x7fff33251fff com.apple.EFILogin (2.0 - 2) <B06CCD1C-A4D1-34D2-89C5-0DB69FE65234> /System/Library/PrivateFrameworks/EFILogin.framework/Versions/A/EFILogin; 0x7fff33252000 - 0x7fff3325dfff libcsfde.dylib (554) <9CDB9580-DD1C-347E-91C5-6D92D96F52F5> /usr/lib/libcsfde.dylib; 0x7fff3325e000 - 0x7fff332c3fff libcurl.4.dylib (121.40.2) <77010EA9-4AD1-3F4A-B3EF-2FFE739FB349> /usr/lib/libcurl.4.dylib; 0x7fff332c4000 - 0x7fff332cbfff com.apple.LoginUICore (4.0 - 4.0) <7225326A-7704-362D-B64E-4ABF4A221F88> /System/Library/PrivateFrameworks/LoginUIKit.framework/Versions/A/Frameworks/LoginUICore.framework/Versions/A/LoginUICore; 0x7fff332cc000 - 0x7fff3332ffff com.apple.AppSupport (1.0.0 - 29) <21E116C6-C770-3024-98EB-51D1166AACD2> /System/Library/PrivateFrameworks/AppSupport.framework/Versions/A/AppSupport; 0x7fff333d0000 - 0x7fff33482fff com.apple.GameController (1.0 - 1) <E2778524-D805-3EF4-A147-DECE5315D77F> /System/Library/Frameworks/GameController.framework/Versions/A/GameController; 0x7fff3348b000 - 0x7fff3348bfff com.apple.ApplicationServices (48 - 50) <42B48E32-1918-3178-8DE0-E8126B9EC088> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices; 0x7fff33648000 - 0x7fff33687fff com.apple.AppleIDSSOAuthentication (1.0 - 1) <687FC889-44F5-3FA9-A93B-D2D65B16B6B0> /System/Library/PrivateFrameworks/AppleIDSSOAuthentication.framework/Versions/A/AppleIDSSOAuthentication; 0x7fff3378c000 - 0x7fff3378cfff libHeimdalProxy.dylib (79) <85526E13-1E48-377A-A700-EE3F5648A6E3> /System/Library/Frameworks/Kerberos.framework/Versions/A,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:73170,Log,LoginUICore,73170,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['Log'],['LoginUICore']
Testability,"/SOFA_study/SOFA_v23.06.00_MacOS; > --- PYTHONPATH ---; > /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages:/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.12.01_MacOS/plugins/SofaPython3/lib/python3/site-packages:/path/to/SofaPython3/lib/python3/site-packages:; > --- sys.path ---; > ['', '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages', '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.12.01_MacOS/plugins/SofaPython3/lib/python3/site-packages', '/path/to/SofaPython3/lib/python3/site-packages', '/opt/anaconda3/envs/sofarl/lib/python38.zip', '/opt/anaconda3/envs/sofarl/lib/python3.8', '/opt/anaconda3/envs/sofarl/lib/python3.8/lib-dynload', '/opt/anaconda3/envs/sofarl/lib/python3.8/site-packages']; > #################; > ```; > ; > ### Logs; > **Full output**; > ; > ```; > (sofarl) bemore@BeMores-MacBook-Pro site-packages % python ; > Python 3.8.19 (default, Mar 20 2024, 15:27:52) ; > [Clang 14.0.6 ] :: Anaconda, Inc. on darwin; > Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; > >>> import Sofa; > ---------------------------------------; > Checking SOFA_ROOT and SOFAPYTHON3_ROOT; > Using environment variable SOFA_ROOT: /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS; > ---------------------------------------; > Traceback (most recent call last):; > File ""<stdin>"", line 1, in <module>; > File ""/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/__init__.py"", line 140, in <module>; > import Sofa.Helper; > ImportError: dlopen(/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so, 0x0",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4690#issuecomment-2254322179:4875,Log,Logs,4875,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4690#issuecomment-2254322179,1,['Log'],['Logs']
Testability,/bugprone-multiple-statement-macro.html) | [hicpp-no-malloc](https://clang.llvm.org/extra/clang-tidy/checks/hicpp-no-malloc.html) |; | [bugprone-string-constructor](https://clang.llvm.org/extra/clang-tidy/checks/bugprone-string-constructor.html) | [hicpp-noexcept-move](https://clang.llvm.org/extra/clang-tidy/checks/hicpp-noexcept-move.html) |; | [bugprone-suspicious-memset-usage](https://clang.llvm.org/extra/clang-tidy/checks/bugprone-suspicious-memset-usage.html) | [hicpp-signed-bitwise](https://clang.llvm.org/extra/clang-tidy/checks/hicpp-signed-bitwise.html) |; | [bugprone-undefined-memory-manipulation](https://clang.llvm.org/extra/clang-tidy/checks/bugprone-undefined-memory-manipulation.html) | [hicpp-special-member-functions](https://clang.llvm.org/extra/clang-tidy/checks/hicpp-special-member-functions.html) |; | [bugprone-use-after-move](https://clang.llvm.org/extra/clang-tidy/checks/bugprone-use-after-move.html) | [hicpp-static-assert](https://clang.llvm.org/extra/clang-tidy/checks/hicpp-static-assert.html) |; | [bugprone-virtual-near-miss](https://clang.llvm.org/extra/clang-tidy/checks/bugprone-virtual-near-miss.html) | [hicpp-undelegated-constructor](https://clang.llvm.org/extra/clang-tidy/checks/hicpp-undelegated-constructor.html) |; | [cert-dcl03-c](https://clang.llvm.org/extra/clang-tidy/checks/cert-dcl03-c.html) | [hicpp-use-auto](https://clang.llvm.org/extra/clang-tidy/checks/hicpp-use-auto.html) |; | [cert-dcl21-cpp](https://clang.llvm.org/extra/clang-tidy/checks/cert-dcl21-cpp.html) | [hicpp-use-emplace](https://clang.llvm.org/extra/clang-tidy/checks/hicpp-use-emplace.html) |; | [cert-dcl50-cpp](https://clang.llvm.org/extra/clang-tidy/checks/cert-dcl50-cpp.html) | [hicpp-use-equals-default](https://clang.llvm.org/extra/clang-tidy/checks/hicpp-use-equals-default.html) |; | [cert-dcl54-cpp](https://clang.llvm.org/extra/clang-tidy/checks/cert-dcl54-cpp.html) | [hicpp-use-equals-delete](https://clang.llvm.org/extra/clang-tidy/checks/hicpp-use-equals-dele,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:4222,assert,assert,4222,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['assert'],['assert']
Testability,"/imp.py(234): load_module; <string>(3): <module>. [ERROR] [PythonTestExtractor] File skipped: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Core/MyRestShapeForceField.py ; No test suite found. Make sure there is at least one class in the script that inherits from TestCase.; [INFO] [PythonTestExtractor] File 'Base.py' loaded with 10 unit tests.; [INFO] [PythonTestExtractor] File 'PythonRestShapeForceField.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'BaseData.py' loaded with 29 unit tests.; [INFO] [PythonTestExtractor] File 'DataEngine.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'BaseLink.py' loaded with 11 unit tests.; [INFO] [PythonTestExtractor] File 'BaseObject.py' loaded with 12 unit tests.; [INFO] [PythonTestExtractor] File 'Controller.py' loaded with 7 unit tests.; [INFO] [PythonTestExtractor] File 'ForceField.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'FileRepository.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Message.py' loaded with 2 unit tests.; [INFO] [PythonTestExtractor] File 'Node.py' loaded with 26 unit tests.; [INFO] [PythonTestExtractor] File 'Simulation.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'RGBAColor.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Vec3.py' loaded with 4 unit tests.; [INFO] [PythonTestExtractor] File 'BoundingBox.py' loaded with 5 unit tests.; [==========] Running 120 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 120 tests from SofaPython3/Sofa; [INFO] [SofaPython3] Initializing with python version 3.8.6 (default, Oct 27 2020, 09:13:12) ; [GCC 9.3.1 20200408 (Red Hat 9.3.1-2)]; [INFO] [SofaPython3] Shared library name is 'libpython3.8m.so'; [ RUN ] SofaPython3/Sofa.all_tests/0_Sofa_Core_Base_test_addExistingDataAsParentOfNewData; ----------------------------------------------------------------------; Ran 1 test in 0.000s. OK; [ OK ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796:3648,test,tests,3648,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796,1,['test'],['tests']
Testability,"/libSofaSimulationGraph.so.17.dev.0(sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool)+0x9d) [0x7f65889ce59d]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaSimulationCore.so(sofa::simulation::Node::executeVisitor(sofa::simulation::Visitor*, bool)+0x111) [0x7f6588281511]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaSimulationCore.so(sofa::simulation::DefaultAnimationLoop::step(sofa::core::ExecParams const*, double)+0x124) [0x7f6588263ed4]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaSimulationCore.so(sofa::simulation::Simulation::animate(sofa::simulation::Node*, double)+0x54) [0x7f65882c9c44]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaTest.so(sofa::Python_scene_test::run(sofa::Python_test_data const&)+0x2e1) [0x7f658ebb3791]; -> ../builds/pr/all/bin/Compliant_test(sofa::Python_scene_test_sofa_python_scene_tests_Test::TestBody()+0x2e) [0x54f76e]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaTest.so(void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*)+0x33) [0x7f658ebd7223]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaTest.so(testing::Test::Run()+0xb7) [0x7f658ebca917]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaTest.so(testing::TestInfo::Run()+0x9e) [0x7f658ebca9be]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaTest.so(testing::TestCase::Run()+0xa5) [0x7f658ebcaac5]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaTest.so(testing::internal::UnitTestImpl::RunAllTests()+0x248) [0x7f658ebcd198]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaTest.so(testing::UnitTest::Run()+0x54) [0x7f658ebcd454]; -> ../build",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320:6844,Test,TestBody,6844,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320,1,['Test'],['TestBody']
Testability,"/python3.8/imp.py(171): load_source; /opt/rh/rh-python38/root/usr/lib64/python3.8/imp.py(234): load_module; <string>(3): <module>. [ERROR] [PythonTestExtractor] File skipped: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Core/MyRestShapeForceField.py ; No test suite found. Make sure there is at least one class in the script that inherits from TestCase.; [INFO] [PythonTestExtractor] File 'Base.py' loaded with 10 unit tests.; [INFO] [PythonTestExtractor] File 'PythonRestShapeForceField.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'BaseData.py' loaded with 29 unit tests.; [INFO] [PythonTestExtractor] File 'DataEngine.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'BaseLink.py' loaded with 11 unit tests.; [INFO] [PythonTestExtractor] File 'BaseObject.py' loaded with 12 unit tests.; [INFO] [PythonTestExtractor] File 'Controller.py' loaded with 7 unit tests.; [INFO] [PythonTestExtractor] File 'ForceField.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'FileRepository.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Message.py' loaded with 2 unit tests.; [INFO] [PythonTestExtractor] File 'Node.py' loaded with 26 unit tests.; [INFO] [PythonTestExtractor] File 'Simulation.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'RGBAColor.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Vec3.py' loaded with 4 unit tests.; [INFO] [PythonTestExtractor] File 'BoundingBox.py' loaded with 5 unit tests.; [==========] Running 120 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 120 tests from SofaPython3/Sofa; [INFO] [SofaPython3] Initializing with python version 3.8.6 (default, Oct 27 2020, 09:13:12) ; [GCC 9.3.1 20200408 (Red Hat 9.3.1-2)]; [INFO] [SofaPython3] Shared library name is 'libpython3.8m.so'; [ RUN ] SofaPython3/Sofa.all_tests/0_Sofa_Core_Base_test_addExistingDataAsParentOfNewData; ----------------------",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796:3567,test,tests,3567,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796,1,['test'],['tests']
Testability,"/sofa/build/lib/libSofa.GUI.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSceneCreator.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libArticulatedSystemPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofaMatrix.dylib; [INFO] [PluginManager] 68 plugins have been loaded from /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini. ########## SIG 11 - SIGSEGV: segfault ##########; [1] 21189 segmentation fault ./runSofa; `. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. < COPY-PASTE HERE THE RESULT OF THE COMMAND ABOVE >. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. < COPY-PASTE YOUR OUTPUT HERE >. ```; <img width=""686"" alt=""截屏2022-10-25 下午11 56 58"" src=""https://user-images.githubusercontent.com/56861752/197808646-732fe9ee-f7db-49b0-8aea-3de77834ed11.png"">. **Content of build_dir/CMakeCache.txt**. < DRAG AND DROP YOUR CMAKECACHE.TXT HERE >. ---------------------------------------------. Thank you for your report.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:10302,Log,Logs,10302,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Log'],['Logs']
Testability,"/sofa/v16.08/src/examples/Components/forcefield/TetrahedralCorotationalFEMForceField.scn. Before the MechanicalObject definition should; be added geometryAlgorithm; <TetrahedronSetGeometryAlgorithms template=""Vec3d"" name=""GeomAlgo"" />; If it does not exist it produces a warning. best. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/182:511,test,test,511,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/182,1,['test'],['test']
Testability,"0 or 1 is assigned to a `bool`. It is implicitly converted to `bool`, so it can be replaced directly with a `bool` for more clarity. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2464:672,test,test,672,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2464,2,['test'],['test']
Testability,"05 ....UpdateVAndX. ```; ## Multi threaded; ```; 8.40483 s ( 118.979 FPS); LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.01 1 5.32 26.82 7.42 1.31 7.42 88.31 ...Mechanical; 4 0.02 1 0.22 0.88 0.32 0.07 0.32 3.80 ....ComputeForce; 4 0.34 1 0.19 0.70 0.28 0.06 0.28 3.29 ....ComputeRHTerm; 4 0.61 1 0 0.07 0.01 0 0.01 0.06 ....MBKBuild; 5 0.61 1 0 0.07 0 0 0 0.03 .....CG-setSystemMBKMatrix; 4 0.62 1 4.87 25.85 6.80 1.22 6.80 80.84 ....MBKSolve; 5 0.64 1 4.84 25.82 6.77 1.22 6.77 80.51 .....CG-Solve; 4 7.42 1 0.01 0.02 0.01 0 0.01 0.13 ....UpdateVAndX. ```. # Comments. - Code is in plugin MultiThreading because of the large amount of boilerplate code for the multi threading management, that would pollute the initial implementation in `HexahedronFemForceField`. I have some ideas to reduce this code, but it requires work on the task scheduler.; - A small part of the code is duplicated from `HexahedronFemForceField`.; - Initially, I wanted to accelerate the execution of the Conjugate Gradient for `GraphScattered` types. It is not possible to propose a generic multi-threaded acceleration for all force fields: for FEM, the most time consuming step in the CG is `ForceField::addDForce`. This is the method to accelerate. The downside is that it has to be done for every force field... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2177:2652,test,test,2652,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2177,2,['test'],['test']
Testability,"0a9493bccdd9735ff7#diff-b0264445a2a81f648e146f0b1d59d5d197cf3a935f3b7cbb24af11a38b8e6e68L433; - `override` keyword was missing in `~LinearSolverConstraintCorrection`; - `LinearSolverConstraintCorrection::J` is renamed to `m_constraintMatrix`. Its floating-type is no longer `SReal`, but `Real`. In theory, it's breaking.; - `computeJ` is no longer used. Instead, I introduce the method `convertConstraintMatrix`, which is IMO clearer. `computeJ` could be removed I think. But for some reasons it is virtual. Anyone overrides it?; - Added a timer in `convertConstraintMatrix`. This must be used for benchmark to evaluate the cost of the conversion. I believe that we can think of a way to avoid the conversions (only if it costs too much).; - `MatrixLinearSolverInternalData::copyJmatrix` is renamed to `convertMatrix` and it is now protected.; - Made `getLocalJ` clearer.; - Added details for `addJMInvJt`; - Introduced rebind types for `CompressedRowSparseMatrixConstraint`, `CompressedRowSparseMatrixGeneric` and `CompressedRowSparseMatrixMechanical`; - `CompressedRowSparseMatrixConstraint`: added test for the stream operator. The operator no longer adds trailing spaces on each line.; - Better iterators in `CompressedRowSparseMatrixConstraint`; - Missing header guard in `CompressedRowSparseMatrixConstraintEigenUtils.h`; - Fixed `operator()` in `CompressedRowSparseMatrixToEigenSparseVec`. Also added error message if out-of-bounds. Required for https://github.com/sofa-framework/SofaPython3/pull/459; - Introduction of `is_specialization_of`. Used in [a SofaPython3 PR](https://github.com/sofa-framework/SofaPython3/pull/459). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Rev",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5017:1285,test,test,1285,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5017,1,['test'],['test']
Testability,1 new scene-test error due to serr -> msg_error:; - `RemovingTriangle2EdgeProcess.scn: [EdgePressureForceField(edgePressureFF0)] No mechanical Object linked.`. 2 new unit-test failures due to serr -> msg_error:; - `SceneChecker_test.checkUsingAlias_withAlias: TriangleModel requires a BaseMeshTopology`; - `SceneChecker_test.checkUsingAlias_withoutAlias: TriangleModel requires a BaseMeshTopology`. @epernod I know you encountered and fixed the SceneChecker_test ones. Where is that?; @marques-bruno Can you look at RemovingTriangle2EdgeProcess.scn for a fix?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/916#issuecomment-462274812:12,test,test,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/916#issuecomment-462274812,2,['test'],['test']
Testability,"1) Instead of hardcoding a custom behavior in every subclass of a loop, the common behavir is factorizer in the corresponding base class (BaseAnimationLoop). 2) The member ""gnode"" of type ""Node *"" is now a link named l_node factorizer in the base class. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3945:793,test,test,793,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3945,2,['test'],['test']
Testability,"1- In SceneCheckerVisitor: ; Fixed segfault. Please review, I'm not sure about the fix. 2- In RestShapeSpringForceField:; Fixed segfault when using the component without external_rest_shape, by removing a ""return"" that was unintentionally introduced in #315. (line 95); And the error message should be print only if external_rest_shape is set by user. (line 93). And minor cleaning.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/367:635,test,test,635,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/367,2,['test'],['test']
Testability,"1- MSVC was never throwing deprecation warnings because ... it was disabled with the compiler flags. A bit hard to inform the user that one feature or file is deprecated if he is not warned. ; So this PR re-enables 4996 (deprecation) warnings but still disable some msvc-specific deprecation notices (with some preprocessor defines). 2- A contrario, deprecation warnings in extlibs are quite annoying so they should be disabled IMO. 3- enabling deprecation warnings led to two types of deprecation in the SOFA code base:; - _sleep() is deprecated (used for WIN32 only); - unique() of shared_ptr is deprecated in c++17 : https://en.cppreference.com/w/cpp/memory/shared_ptr/unique ; Replaced with use_count() == 1 but this does not really address the issue of approximation in a multithreaded context. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2217:1339,test,test,1339,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2217,2,['test'],['test']
Testability,"1- SofaGeneralEngine wanted TextureInterpolation which is compiled only if Sofa.GL is activated (i.e SOFA_NO_OPENGL false); Weird thing is that those tests were in SofaEngine, I dont even know how it could compile before ⁉⁉; So I moved the EngineTest from SofaEngine to SofaGeneralEngine, as it is only compiling SofaGeneralEngine things anyway. 2- replace the use of the macro SOFA_NO_OPENGL with find_package(Sofa.GL) + Sofa.GL_FOUND in the modules cmake (clearer). 3- fix the compilation error with runSofa (which wanted the gl header even it is not using any opengl...). **Allow the compilation of sofa-minimal on the CI.**. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1743:150,test,tests,150,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1743,3,['test'],"['test', 'tests']"
Testability,1- Tests were not testing ( :octocat: ) if OpenGL was allowed.; 2- VideoRecorderFFMPEG.h is using OpenGL so it cannot be enabled with this flag. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1032:3,Test,Tests,3,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1032,4,"['Test', 'test']","['Tests', 'test', 'testing']"
Testability,1- last (?) override warnings; 2- add a preprocessor define to remove OpenGL deprecated message on MacOS; 3- various other warnings. I would appreciate if @epernod could check how the warnings from TopologyHandler has been managed ;) (commit https://github.com/sofa-framework/sofa/commit/a85cdae3eb3635efe9bef2c326354aac40c73153 ). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1065:583,test,test,583,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1065,2,['test'],['test']
Testability,"1. Add CUDA support for ConstantForceField, MultiMapping and SubsetMultiMapping. The components are not accelerated by CUDA. Only compatibility with CUDA types is added.; 2. Each section of the CMakeLists is sorted alphabetically.; 3. An example scene is introduced for SubsetMultiMapping. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2557:829,test,test,829,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2557,2,['test'],['test']
Testability,"1. All types of Eigen::SparseMatrix are now supported. For that, the implementation relies completely on the Eigen matrix product to compute the intersection. The trick is to flag the non-zero values with its index position in the array. The matrix product will implicitly keep track of all the operations thanks to the newly introduced scalar types.; 2. Because of the new method, `SparseMatrixStorageOrder` is no longer useful. It can be removed later; 3. Unit tests are extensive. They test all possible configuration of storage of LHS, RHS and Result. They are required because a condition on the storage type is required to swap the indices after the matrix product.; 4. A parallel version of the algorithm is introduced; 5. Benchmarks: https://github.com/alxbilger/SofaBenchmark/pull/39. Analysis of the results of the benchmarks:; - The best configuration storage for the fast matrix product seems to be ColColCol; - The fast matrix product is always faster than the regular product, except for a matrix of size 1000 and sparsity of 15%. This probably indicates that the method is adapted for very sparse matrices; - The parallel fast matrix product algorithm is always faster than the sequential algorithm, except for very small matrices where the overhead of parallelism is not negligible. However, the speed up is not linear with the number of cores and can be disappointing.; - The parallel fast matrix product is always faster than the regular product even for the matrix of size 1000 and sparsity of 15%, but not for very small matrices (overhead). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4547:463,test,tests,463,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4547,4,"['Benchmark', 'benchmark', 'test']","['Benchmarks', 'benchmarks', 'test', 'tests']"
Testability,"1. Make CudaConstantForceField compatible with CudaRigid types CudaRigid3Types and CudaRigid2Types. fix #2575 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3164:651,test,test,651,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3164,2,['test'],['test']
Testability,"1. Remove trivial headers (unused); 2. move vectorLinks and vectorData where they should have belong from the start, alongside Data and Link in SofaCore.; Add compatibility files as usual. Only dependency left in SofaHelper from SofaCore is io/Mesh.h including core/Topology.h. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1810:817,test,test,817,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1810,2,['test'],['test']
Testability,"1. The CMake option to enable/disable OpenGL is now `SOFA_WITH_OPENGL`.; 2. SOFA_NO_OPENGL is completely removed from SOFA sources (only the CMake variable persists).; 3. Sofa.GL is added by SofaKernel/modules/CMakeLists.txt (not by SofaFramework/CMakeLists.txt anymore).; 4. sofa_add_* macros are now capable of creating dependent options. ; Example: ; ```cmake; sofa_add_module(Sofa.GL Sofa.GL ON # the 3 usual sofa_add_* arguments; WHEN_TO_SHOW ""SOFA_WITH_OPENGL"" # [new arg] if SOFA_WITH_OPENGL is true, then the option is showed in CMake-GUI; VALUE_IF_HIDDEN OFF # [new arg] if SOFA_WITH_OPENGL is false, then the option is hidden and set to OFF; ); ```; 5. SofaComponentAll does not fail anymore at configure time if some modules are not found. It will cover as many modules as possible. **This will fix our nightly minimal builds.**; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1913:1380,test,test,1380,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1913,2,['test'],['test']
Testability,"1. `NonBuiltConstraintCorrection.scn` is fixed to really not build the lcp; 2. 2 scenes are added for performances benchmark; 3. Cubes scene does not build lcp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2110:115,benchmark,benchmark,115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2110,3,"['benchmark', 'test']","['benchmark', 'test']"
Testability,"1. a clean of the `NearestPointROI` class.; 2. More features are added to NearestPointROI:; - Generates more output format so they can be used in other components accepting only those formats. Now, it can be used with SubsetMultiMapping and EdgeSetTopologyContainer.; - Add a filter on the input dofs. The example scene has been reworked. It now uses constraints. And springs have been added to show how to use the new features from this PR. This PR replaces https://github.com/sofa-framework/sofa/pull/2562. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2595:1048,test,test,1048,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2595,2,['test'],['test']
Testability,"1st big guy. #1527; based on ; - #2605. Deprecates **SofaBaseTopology**, **SofaGeneralTopology**, **SofaMiscTopology**;; Partially deprecates **SofaNonUniformFem** and **SofaTopologicalMapping**. Dispatches the topology-related stuff between:; - **container** : storing topology information, and itself split in 3 parts:; - **~~static~~constant container:** static topologies with containers, does not handle topological change; - **dynamic container**: topologies with containers and handle topological change (topoalgo, geoalgo, container and modifier); - **grid**: topologies based on grid (and no containers like the other ones) ; - **mapping**: topological mappings; - **utility**: components making topological operations on other components for example . This compat layer on this one is less efficient, as people is more relying on this one than the others.; Reminder: the compat layer does not really work well if:; - using forward declarations (but it means that the fwd declaration itself was useless in the first place),; - using explicit instanciations somewhere else (as you cannot use explicit instanciations on templated aliases); - you did not include previously the good header for what you are using (e.g some code are using MeshtTopology but does not include MeshTopology.h). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2612:1835,test,test,1835,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2612,2,['test'],['test']
Testability,2 Tests related to TriangularFEMForceFieldOptim seems to fail:; - RegressionTests.Regression_test/Regression_test/StateRegression_test.sceneTest/TriangularFEMForceFieldOptim; - UnitTests.SofaMiscFem_test/TriangleFEMForceField3_test.checkTriangularFEMForceFieldOptim_init,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2284#issuecomment-894273835:2,Test,Tests,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2284#issuecomment-894273835,1,['Test'],['Tests']
Testability,2 breaking things:; - Uncomment [deprecated] m_componentstate to redirect to d_componentState (in Base.h); - rename d_componentstate into d_componentState (S upper case). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1358:422,test,test,422,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1358,2,['test'],['test']
Testability,2 methods that allows retrieval of a graph object's instantiation and definition line & file from python. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1170:357,test,test,357,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1170,2,['test'],['test']
Testability,2 more tests :wink: . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/711:7,test,tests,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/711,3,['test'],"['test', 'tests']"
Testability,2 regression tests are failing : ; - Regression_test/StateRegression_test.sceneTest/EulerExplicitSolver; - Regression_test/StateRegression_test.sceneTest/EulerImplicitSolver. Could it be that the references of these 2 scenes are bogus themselves ? (thus needing to update them?),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2193#issuecomment-873004315:13,test,tests,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2193#issuecomment-873004315,1,['test'],['tests']
Testability,2 small fixes to allow usage of SofaPython by a third-party software. ; 1. Tests all known data path from SOFA to look for /etc/sofa/python.d (not only SOFA_ROOT or current exec dir); 2. Give a more specific name to the static bool at plugin init. It was messing up with another variable. . + Clean some example scenes warnings. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1466:75,Test,Tests,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1466,3,"['Test', 'test']","['Tests', 'test']"
Testability,2 tests are considered as failing since the message of RemovedData is thrown as an `Error`,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3934#issuecomment-1600428420:2,test,tests,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3934#issuecomment-1600428420,1,['test'],['tests']
Testability,2 tests are failing is this normal ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/656#issuecomment-389781136:2,test,tests,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/656#issuecomment-389781136,1,['test'],['tests']
Testability,"2- ADD tests; 3- CLEAN member variables name (BREAKING); 4- ADD an example of orientedBox dataField use; 5- Changed a bit the implementation from PlaneROI, for computation optimization purpose. Question:; I would like to reimplement PlaneROI so that it does what we expect from its name, and also print a ""deprecated message"" for those who still use PlaneROI as an OrientedBoxROI. Those users will be detected if they use a deprecated data field. What do you think?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/108:7,test,tests,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/108,1,['test'],['tests']
Testability,"2080: 20% of the components make 80% of the result. Components list: https://docs.google.com/spreadsheets/d/1mPGnMrC-3Yo8dEdm5549dRhKcquK4mDmWoNRQt711gs/edit#gid=0. General idea: Repackage components ina way that a subset of the components will be mandatory. These selected components will be maintained with a high level of quality (tests, doc, comments, etc...); Binary distribution will include only this subset. On a fist time:; All the other components will remain available in the repo, but optionnal. (plugins?) ; Once the transition is mature enough, move the deprecated components to another repo ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/225#issuecomment-290699442:334,test,tests,334,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/225#issuecomment-290699442,1,['test'],['tests']
Testability,"23 ....MBKBuild; 5 1.15 1 23.15 35.72 24.86 1.32 24.86 41.73 .....MMM-addKToMatrix; 6 1.15 1 1.67 4.50 1.83 0.18 1.83 3.06 ......jacobian; 6 2.98 1 6.67 12.18 7.13 0.38 7.13 11.97 ......stiffness; 6 10.11 1 2.48 5.59 2.69 0.22 2.69 4.51 ......copyKToEigen; 7 10.11 1 2.48 5.59 2.68 0.22 2.68 4.50 .......KfromTriplets; 6 12.80 1 0.24 0.59 0.28 0.04 0.28 0.46 ......copyJ1J2ToEigen; 7 13.01 1 0.05 0.28 0.06 0.01 0.06 0.10 .......copyJ2ToEigen; 6 13.07 1 8.17 14.53 9.14 0.76 9.14 15.33 ......Multiplication; 7 13.07 1 4.64 10.75 5.20 0.48 5.20 8.73 .......J1tKJ1; 7 18.28 1 0.39 1.26 0.43 0.06 0.43 0.72 .......J2tKJ2; 7 18.71 1 2.69 6.72 3.08 0.34 3.08 5.17 .......J1tKJ2; 7 21.79 1 0.39 1.20 0.42 0.06 0.42 0.71 .......J2tKJ1; 6 22.21 1 2.29 4.73 2.67 0.16 2.67 4.48 ......J1tKJ1-copy; 6 24.88 1 0 0.02 0 0 0 0 ......J2tKJ2-copy; 6 24.88 1 0.01 0.04 0.01 0 0.01 0.02 ......J1tKJ2-copy; 6 24.90 1 0.01 0.07 0.02 0 0.02 0.04 ......J2tKJ1-copy; ```. The speed up is quite disappointing. But the benchmarks explain it. The speed up depends on the size of the matrix, the sparsity and overall on the size of the intersection.; Yet, there is a speedup. And compared to the reference timings before the series of optimizations (https://github.com/sofa-framework/sofa/pull/2362), `MechanicalMatrixMapper` is about twice faster (in the example). Some notes:. - I added a skeleton to also support product of `CompressedRowSparseMatrix`, but it is not implemented yet. In `MechanicalMatrixMapper`, a `CompressedRowSparseMatrix` is converted to Eigen to do the product. It is not clear yet if the copy to Eigen is required if we are able to perform the fast product on a `CompressedRowSparseMatrix`. So, an implementation of the fast product of `CompressedRowSparseMatrix` may be introduced in the future. Otherwise, I'll remove the files.; - This work has been started by @Esther-R during her internship; - Contrary to the regular product, the product using the intersection can be parallelized for more speed ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2394:3381,benchmark,benchmarks,3381,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2394,1,['benchmark'],['benchmarks']
Testability,"2nd big guy. #1527; based on ; - ~~#2612 ~~; - #2717 (for a moved file in core). Deprecates **SofaMiscMapping**; Partially deprecates **SofaBaseMechanics**, **SofaRigid**, **SofaGeneralRigid**. This module gathers all ""mechanical"" mappings (inhering BaseMapping) and __not__ topological mapping.; ~~I am a bit concerned by the size of this module but I cannot really find any good sub-modules to sort these components into ?~~. Following a discussion with @ChristianDuriez @Younesssss @alxbilger , Mappings are organized between:; - NonLinear: mappings implementing getK() and applyDJT(); - Linear: the rest of mappings; - MappedMatrix: components which are not mapping? but helps to map matrices (stiffness and stuff) ; -> Ad-hoc module which is only used to patch up matrices in SOFA, will disappear once matrix assembly will be pushed. ~~TODO (in an other PR), set Articulated-related things into a dedicated plugin.~~ Done in #2684 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2635:1477,test,test,1477,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2635,2,['test'],['test']
Testability,"3 changes here:; - ~~FIX Debug build --> force all Zlib links to use the Release version~~; - CLEAN SOFA_HAVE_SOFA.YYY macro for consistency --> use SOFA_HAVE_SOFA_YYY everywhere; - FIX Boost::program_option copy --> `sofa_install_libraries` was missing. **IMPORTANT:** Windows users must update the `lib` directory in SOFA sources with https://www.sofa-framework.org/download/WinDepPack/latest/. Fixes #1851. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1891:949,test,test,949,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1891,2,['test'],['test']
Testability,"3 different components for linear elasticity on tetrahedra:. - `FastTetrahedralCorotationalForceField`; - `TetrahedralCorotationalFEMForceField`; - `TetrahedronFEMForceField`. The 3 components have similarities (even duplicated code), but don't share anything. It's time for refactoring!. My focus was the refactoring of the unit tests. Before the PR, a unique class tested the 3 components using a series of `if`. I refactored the 3 classes in order to reduce the specific processing in the unit test, i.e. reduce the number of `if`. - The 3 classes now inherit from a common base class `BaseLinearElasticityFEMForceField`. I moved everything that was common (only regarding the unit test. More common code is remaining) in this class. It includes:; - A common `Data` for Young's modulus and Poisson's ratio. This way, they share type, the same default value, and the same description. Note that Young's modulus in `FastTetrahedralCorotationalForceField` and `TetrahedralCorotationalFEMForceField` was a scalar, and now it's a vector of scalars. This requires to add a common way to access the Young's modulus of the i-th element. This is also a breaking change. This allows to define a typed unit test for all 3 classes. The particularities of the classes are defined in a derived class of the unit test. To me, a great advantage, is that we identify clearly that there are unit tests for the 3 components, because there a file for each class. It was not obvious before. [ci-depends-on https://github.com/SofaDefrost/ModelOrderReduction/pull/133]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all plat",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4778:330,test,tests,330,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4778,4,['test'],"['test', 'tested', 'tests']"
Testability,"3 scenes were displaying an error following the PR #2465 . After some investigations, it appeared that those 3 scenes were not working for a while (and the PR merely showed that statement), and the culprit was that GridMeshCreator was not calling its doLoad() method.; doLoad() in MeshLoader components is triggered when d_filename is set.; But GridMeshCreator is procedural and does not any filename at all. Therefore doLoad() was never called.; This PR forcefully set the data d_filename to dirty to force-trigger the callback. Moreover, insertTriangle and insertQuad were using beginEdit()/endEdit() which were triggering also a doLoad() (resulting in a lot of useless edges/triangles); This PR uses WriteOnlyAccessor to avoid this problem. Now ProjectToLineConstraint.scn renders like this:; ![ProjectToLineConstraint_00000001](https://user-images.githubusercontent.com/11028016/140957340-12e18507-532b-4076-bd71-6cab73fab547.png). instead of nothing... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2473:1497,test,test,1497,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2473,2,['test'],['test']
Testability,"378); SofaUnity.SofaContext:StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext:Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). Reconnect SofaVisualModel: Visual; UnityEngine.Debug:Log (object); SofaUnity.SofaUnityRenderer:Reconnect () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaUnityRenderer.cs:118); SofaUnity.SofaContext:ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:495); SofaUnity.SofaContext:Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext:StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext:Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). Start: 'Visual'; UnityEngine.Debug:Log (object); SofaVisualModel:Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:65). ReconnectSofaScene; UnityEngine.Debug:Log (object); SofaUnity.SofaContext:ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:480); SofaUnity.SofaContext:Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext:StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext:Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). KeyNotFoundException: The given key '4' was not present in the dictionary.; System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item (TKey key) (at <eef08f56e2e042f1b3027eca477293d9>:0); SofaUnityAPI.SofaContextAPI.loadScene (System.String filename) (at Assets/SofaUnity/Plugins/SofaUnityAPI/SofaContextAPI.cs:189); SofaUnity.SofaContext.ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:486); SofaUnity.SofaContext.Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext.StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaConte",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4156:6035,Log,Log,6035,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4156,1,['Log'],['Log']
Testability,38.80.3) <78AF1606-37D8-3424-92AE-071A9F43AA0F> /System/Library/PrivateFrameworks/RemoteServiceDiscovery.framework/Versions/A/RemoteServiceDiscovery; 0x7fff331e7000 - 0x7fff331fefff com.apple.xpc.RemoteXPC (1.0 - 2038.80.3) <C4BFF5FC-FC9C-3161-9612-7070EDAE9989> /System/Library/PrivateFrameworks/RemoteXPC.framework/Versions/A/RemoteXPC; 0x7fff33246000 - 0x7fff33249fff com.apple.help (1.3.8 - 71) <6074D81C-4507-35A6-88D7-D82309F81587> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help; 0x7fff3324a000 - 0x7fff33251fff com.apple.EFILogin (2.0 - 2) <B06CCD1C-A4D1-34D2-89C5-0DB69FE65234> /System/Library/PrivateFrameworks/EFILogin.framework/Versions/A/EFILogin; 0x7fff33252000 - 0x7fff3325dfff libcsfde.dylib (554) <9CDB9580-DD1C-347E-91C5-6D92D96F52F5> /usr/lib/libcsfde.dylib; 0x7fff3325e000 - 0x7fff332c3fff libcurl.4.dylib (121.40.2) <77010EA9-4AD1-3F4A-B3EF-2FFE739FB349> /usr/lib/libcurl.4.dylib; 0x7fff332c4000 - 0x7fff332cbfff com.apple.LoginUICore (4.0 - 4.0) <7225326A-7704-362D-B64E-4ABF4A221F88> /System/Library/PrivateFrameworks/LoginUIKit.framework/Versions/A/Frameworks/LoginUICore.framework/Versions/A/LoginUICore; 0x7fff332cc000 - 0x7fff3332ffff com.apple.AppSupport (1.0.0 - 29) <21E116C6-C770-3024-98EB-51D1166AACD2> /System/Library/PrivateFrameworks/AppSupport.framework/Versions/A/AppSupport; 0x7fff333d0000 - 0x7fff33482fff com.apple.GameController (1.0 - 1) <E2778524-D805-3EF4-A147-DECE5315D77F> /System/Library/Frameworks/GameController.framework/Versions/A/GameController; 0x7fff3348b000 - 0x7fff3348bfff com.apple.ApplicationServices (48 - 50) <42B48E32-1918-3178-8DE0-E8126B9EC088> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices; 0x7fff33648000 - 0x7fff33687fff com.apple.AppleIDSSOAuthentication (1.0 - 1) <687FC889-44F5-3FA9-A93B-D2D65B16B6B0> /System/Library/PrivateFrameworks/AppleIDSSOAuthentication.framework/Versions/A/AppleIDSSOAuthentication; 0x7fff3378c000 - 0x7fff3378cfff ,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:73030,Log,LoginUICore,73030,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['Log'],['LoginUICore']
Testability,"3C3,float\u003E,float\u003E\u003E""; },; ""object"": {; ""data"": [; {; ""defaultValue"": ""unnamed"",; ""group"": """",; ""help"": ""object name"",; ""name"": ""name"",; ""type"": ""string""; },; {; ""defaultValue"": ""0"",; ""group"": """",; ""help"": ""if true, emits extra messages at runtime."",; ""name"": ""printLog"",; ""type"": ""bool""; },; {; ""defaultValue"": """",; ""group"": """",; ""help"": ""list of the subsets the objet belongs to"",; ""name"": ""tags"",; ""type"": ""TagSet""; },; {; ""defaultValue"": """",; ""group"": """",; ""help"": ""this object bounding box"",; ""name"": ""bbox"",; ""type"": ""BoundingBox""; },; {; ""defaultValue"": ""Undefined"",; ""group"": """",; ""help"": ""The state of the component among (Dirty, Valid, Undefined, Loading, Invalid)."",; ""name"": ""componentState"",; ""type"": ""ComponentState""; },; {; ""defaultValue"": ""0"",; ""group"": """",; ""help"": ""if true, handle the events, otherwise ignore the events"",; ""name"": ""listening"",; ""type"": ""bool""; }; ],; ""link"": [; {; ""help"": ""Graph Node containing this object (or BaseContext::getDefault() if no graph is used)"",; ""name"": ""context""; },; {; ""help"": ""Sub-objects used internally by this object"",; ""name"": ""slaves""; },; {; ""help"": ""nullptr for regular objects, or master object for which this object is one sub-objects"",; ""name"": ""master""; }; ]; },; ""target"": """"; }; },; ""description"": ""foo\n""; }; ]; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4775:3878,test,test,3878,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4775,2,['test'],['test']
Testability,3F3FFA-6692-3D56-ACBA-DDA40C566DDE> /System/Library/PrivateFrameworks/CoreEmoji.framework/Versions/A/CoreEmoji; 0x7fff29c04000 - 0x7fff29c0efff com.apple.IOMobileFramebuffer (343.0.0 - 343.0.0) <B15E9DA1-1C81-3ECF-94C7-FD137AD6C5E2> /System/Library/PrivateFrameworks/IOMobileFramebuffer.framework/Versions/A/IOMobileFramebuffer; 0x7fff29c0f000 - 0x7fff29ce1fff com.apple.framework.CoreWLAN (16.0 - 1657) <35927D28-3324-3CAB-9255-276A7022EADC> /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN; 0x7fff29ce2000 - 0x7fff29ee1fff com.apple.CoreUtils (6.5 - 650.6) <184C48A4-7F66-395B-81DB-DAA1641383CF> /System/Library/PrivateFrameworks/CoreUtils.framework/Versions/A/CoreUtils; 0x7fff29ee2000 - 0x7fff29f04fff com.apple.MobileKeyBag (2.0 - 1.0) <0F83FED4-709A-37A0-9E04-EFFD71CB1272> /System/Library/PrivateFrameworks/MobileKeyBag.framework/Versions/A/MobileKeyBag; 0x7fff29f05000 - 0x7fff29f15fff com.apple.AssertionServices (1.0 - 505.80.1) <A00B802D-7BB8-3F6B-A79D-E9697F7D0ABB> /System/Library/PrivateFrameworks/AssertionServices.framework/Versions/A/AssertionServices; 0x7fff29f16000 - 0x7fff29fa2fff com.apple.securityfoundation (6.0 - 55240.40.4) <72AC63B1-0B72-394F-97E8-BA9B114DD0A9> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation; 0x7fff29fa3000 - 0x7fff29facfff com.apple.coreservices.BackgroundTaskManagement (1.0 - 104) <EC15118E-62BD-3C24-A880-3B9B74318B0B> /System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement; 0x7fff29fad000 - 0x7fff29fb1fff com.apple.xpc.ServiceManagement (1.0 - 1) <FD031028-B702-3909-B2AF-3916404DD4A8> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement; 0x7fff29fb2000 - 0x7fff29fb4fff libquarantine.dylib (119.40.2) <40D35D75-524B-3DA6-8159-E7E0FA66F5BC> /usr/lib/system/libquarantine.dylib; 0x7fff29fb5000 - 0x7fff29fc0fff libCheckFix.dylib (31) <74E17BB2-1A3C-3574-92DD-63ABE39E3FF9> /usr/lib/libCheckFix.dylib; 0x7fff29fc1,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:37277,Assert,AssertionServices,37277,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['Assert'],['AssertionServices']
Testability,4521C54> /System/Library/PrivateFrameworks/FaceCore.framework/Versions/A/FaceCore; 0x7fff2b8e0000 - 0x7fff2b92afff com.apple.OTSVG (1.0 - 677.3.0.4) <827396F3-F3A7-3A4F-BE7F-171077501137> /System/Library/PrivateFrameworks/OTSVG.framework/Versions/A/OTSVG; 0x7fff2b92b000 - 0x7fff2b931fff com.apple.xpc.AppServerSupport (1.0 - 2038.80.3) <C78E9D22-5110-349B-AF8E-6BA893A20214> /System/Library/PrivateFrameworks/AppServerSupport.framework/Versions/A/AppServerSupport; 0x7fff2b932000 - 0x7fff2b943fff libhvf.dylib (1.0 - $[CURRENT_PROJECT_VERSION]) <F0974976-30C0-35EB-92F1-B4CF1E974F11> /System/Library/PrivateFrameworks/FontServices.framework/libhvf.dylib; 0x7fff2b944000 - 0x7fff2b946fff libspindump.dylib (295.1) <3B4701CB-8F66-3E50-A38A-BEEC992AAC31> /usr/lib/libspindump.dylib; 0x7fff2b947000 - 0x7fff2ba07fff com.apple.Heimdal (4.0 - 2.0) <69768234-4F4F-3AB6-B116-4AE249E6417A> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal; 0x7fff2ba08000 - 0x7fff2ba22fff com.apple.login (3.0 - 3.0) <B9BEC3A1-688C-3999-B705-2D50B8756E62> /System/Library/PrivateFrameworks/login.framework/Versions/A/login; 0x7fff2ba23000 - 0x7fff2baf5fff com.apple.corebrightness (1.0 - 1) <F55C2F51-DC45-3D79-A3A2-8EC8CA6B0E30> /System/Library/PrivateFrameworks/CoreBrightness.framework/Versions/A/CoreBrightness; 0x7fff2bba2000 - 0x7fff2bba5fff libodfde.dylib (26) <47160F56-2A36-3147-B721-279BE2F8B4A6> /usr/lib/libodfde.dylib; 0x7fff2bba6000 - 0x7fff2bc10fff com.apple.bom (14.0 - 233) <F4B7C353-8A65-3B54-9E01-2C93CB3F55A3> /System/Library/PrivateFrameworks/Bom.framework/Versions/A/Bom; 0x7fff2bc11000 - 0x7fff2bc5bfff com.apple.AppleJPEG (1.0 - 1) <7F3819DE-BCE7-32B7-BB33-10C1DB2BA512> /System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG; 0x7fff2bc5c000 - 0x7fff2bd3afff libJP2.dylib (2130.3.5) <2DFE6642-4309-30BD-A402-F93E28F1F065> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib; 0x7fff2bd3b000 - 0x7fff2bd3efff com.apple.WatchdogClient.f,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:51335,log,login,51335,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['log'],['login']
Testability,"6572 warnings about these missing `override` on MacOS are making the build logs explode :sweat_smile: ; This PR fixes that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1634:75,log,logs,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1634,3,"['log', 'test']","['logs', 'test']"
Testability,7201A7> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList; 0x7fff27439000 - 0x7fff2743bfff libapp_launch_measurement.dylib (14.1) <2BBB708C-4D91-364E-ABD0-39BF198688A6> /usr/lib/libapp_launch_measurement.dylib; 0x7fff2743c000 - 0x7fff27484fff com.apple.CoreAutoLayout (1.0 - 21.10.1) <7A2E42E6-3AF2-3ECB-8A16-5C4AC41206EE> /System/Library/PrivateFrameworks/CoreAutoLayout.framework/Versions/A/CoreAutoLayout; 0x7fff27485000 - 0x7fff27567fff libxml2.2.dylib (34.9) <E0BF29C7-869B-3DD5-82AE-F36E6398091A> /usr/lib/libxml2.2.dylib; 0x7fff27568000 - 0x7fff275b4fff com.apple.CoreVideo (1.8 - 408.4) <50857F8D-C7CC-3609-B0DB-FC3C7382243B> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo; 0x7fff275b5000 - 0x7fff275b7fff com.apple.loginsupport (1.0 - 1) <B149BCAF-854C-3820-809D-15C6077FFB8B> /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport; 0x7fff275b8000 - 0x7fff275e0fff com.apple.aps.framework (4.0 - 4.0) <D86ED827-F22D-3A52-B055-251478B29AE1> /System/Library/PrivateFrameworks/ApplePushService.framework/Versions/A/ApplePushService; 0x7fff275e1000 - 0x7fff275fefff com.apple.UserManagement (1.0 - 1) <B6B35079-3860-384F-B7A2-584192BAAE70> /System/Library/PrivateFrameworks/UserManagement.framework/Versions/A/UserManagement; 0x7fff275ff000 - 0x7fff2779efff com.apple.cloudkit.CloudKit (970 - 970) <58BD254C-AAF1-3CC5-AAB7-2EF0A70BA033> /System/Library/Frameworks/CloudKit.framework/Versions/A/CloudKit; 0x7fff27822000 - 0x7fff27bc7fff com.apple.CoreML (1.0 - 1) <21D89ABE-2DEC-3099-81CC-78D9ADB9D12B> /System/Library/Frameworks/CoreML.framework/Versions/A/CoreML; 0x7fff2851b000 - 0x7fff28598fff com.apple.corelocation (2420.12.16 - 2420.12.16) <8BD49018-78D4-3A81-88AD-47DE1A8E3BFE> /System/Library/Frameworks/CoreLocation.framework/Versions/A/CoreLocation; 0x7fff28599000 - 0x7fff285a9fff libsystem_containermanager.dylib (318.80.2) <6,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:30986,log,loginsupport,30986,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['log'],['loginsupport']
Testability,"99% of the modules/plugins implements getModuleComponentList() with; ```; const char* getModuleComponentList(); {; /// string containing the names of the classes provided by the plugin; static std::string classes = core::ObjectFactory::getInstance()->listClassesFromTarget(MODULE_NAME);; return classes.c_str();; }; ```; And the rest either omitted to implement it, or just forgot to update the list. (e.g MultiThreading). IMO getModuleComponentList() does not have really a meaning anymore and one should just use `ObjectFactory::listClassesFromTarget()` directly.; AFAIK, the only piece of code in the SOFA codebase using this entrypoint is Gui.Qt widget, displaying the component list for each loaded plugin. This PR:; - removes all the entrypoints from Sofa.Component.* (+MultiThreading); - deprecates getModuleComponentList() calls; - Sofa.Gui.Qt: calls directly listClassesFromTarget(), but still tests if getModuleComponentList() needs to be called; - warns at runtime if one plugin do implement getModuleComponentList(); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4795:903,test,tests,903,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4795,3,['test'],"['test', 'tests']"
Testability,": Failed to finding matching FBConfig for QSurfaceFormat(version 3.2, options QFlags<QSurfaceFormat::FormatOption>(DeprecatedFunctions), depthBufferSize -1, redBufferSize 1, greenBufferSize 1, blueBufferSize 1, alphaBufferSize -1, stencilBufferSize -1, samples -1, swapBehavior QSurfaceFormat::SingleBuffer, swapInterval 0, colorSpace QColorSpace(), profile QSurfaceFormat::CompatibilityProfile); [WARNING] [Qt] qglx_findConfig: Failed to finding matching FBConfig for QSurfaceFormat(version 3.2, options QFlags<QSurfaceFormat::FormatOption>(DeprecatedFunctions), depthBufferSize -1, redBufferSize 1, greenBufferSize 1, blueBufferSize 1, alphaBufferSize -1, stencilBufferSize -1, samples -1, swapBehavior QSurfaceFormat::SingleBuffer, swapInterval 0, colorSpace QColorSpace(), profile QSurfaceFormat::CompatibilityProfile); [WARNING] [Qt] qglx_findConfig: Failed to finding matching FBConfig for QSurfaceFormat(version 3.2, options QFlags<QSurfaceFormat::FormatOption>(DeprecatedFunctions), depthBufferSize -1, redBufferSize 1, greenBufferSize 1, blueBufferSize 1, alphaBufferSize -1, stencilBufferSize -1, samples -1, swapBehavior QSurfaceFormat::SingleBuffer, swapInterval 0, colorSpace QColorSpace(), profile QSurfaceFormat::CompatibilityProfile); [FATAL] [Qt] Could not initialize GLX. ########## SIG 6 - SIGABRT: usually caused by an abort() or assert() ##########; sofa::helper::BackTrace::sig(int); gsignal; abort; _Z13qErrnoWarningPKcz+0; QOpenGLContext::create(); QRhiGles2InitParams::newFallbackSurface(QSurfaceFormat const&); QBackingStoreRhiSupport::create(); QWidgetPrivate::create(); QWidget::create(unsigned long long, bool, bool); QWidgetPrivate::setVisible(bool); sofa::gui::qt::RealGUI::InitApplication(sofa::gui::qt::RealGUI*); sofa::gui::qt::RealGUI::CreateGUI(char const*, boost::intrusive_ptr<sofa::simulation::Node>, char const*); sofa::gui::common::GUIManager::createGUI(boost::intrusive_ptr<sofa::simulation::Node>, char const*); __libc_start_main; Aborted (core dumped); ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:14076,assert,assert,14076,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['assert'],['assert']
Testability,":) . I think we should use 'must' only if we are willing to insure that this happens each time. This mean forcing people to do a lot of extra work when submitting an issue. And forcing people that are already kind enough to submit an issue does not sound very appealing to me. . So I prefer to say 'should' and explain why it helps a lot in the general process of bug-fixing to have test cases to validate the issue, correct it and fix it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/260#issuecomment-299199200:383,test,test,383,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/260#issuecomment-299199200,1,['test'],['test']
Testability,":+1: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1833:546,test,test,546,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1833,2,['test'],['test']
Testability,"::make_pair(vel.id(),1.0)); // <-- What does a pair represent? What does this list represent?; ops[0].second.push_back(std::make_pair(dx.id(),dt));; // pos += vel * dt; ops[1].first = pos2;; ops[1].second.push_back(std::make_pair(pos.id(),1.0));; ops[1].second.push_back(std::make_pair(vel2.id(),dt));; ```. to . ```C++; VMultiOp ops(2);. // vel += dx * dt; ops[0] = VMultiOpEntry{ vel2,; ScaledConstMultiVecId{vel.id(), 1._sreal} + ScaledConstMultiVecId{dx.id(), dt}};; // ok, now we know that the scalar and the MultiVecId are multiplied together.; // there is also an operator +, suggesting that the whole operation is a linear combination. // pos += vel * dt; ops[1] = VMultiOpEntry{ pos2,; ScaledConstMultiVecId{pos.id(), 1._sreal} + ScaledConstMultiVecId{vel2.id(), dt}};; ```. Note that in C++20, we can write something like:; ```C++; ops[1] = VMultiOpEntry{ .outputId = pos2,; ScaledConstMultiVecId{pos.id(), 1._sreal} + ScaledConstMultiVecId{vel2.id(), dt}};; ```; which is IMO clearer. **NOT IMPLEMENTED**:; I wanted to go even further (but there are problems of type conversion, so it's not yet ready):. ```C++; VMultiOp ops(2);. // vel += dx * dt; ops[0] = VMultiOpEntry{ vel2, vel.id() + dx.id() * dt};. // pos += vel * dt; ops[1] = VMultiOpEntry{ pos2, pos.id() + vel2.id() * dt};; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4333:2052,test,test,2052,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4333,2,['test'],['test']
Testability,":arrow_down_small: 161 → 86 warnings! (fedora); :arrow_down_small: 312 → 182 warnings! (ubuntu gcc). :fire: :fire: :fire: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4291:663,test,test,663,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4291,2,['test'],['test']
Testability,:dove: . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1333:260,test,test,260,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1333,2,['test'],['test']
Testability,":warning: depends on #1488. This refactoring guarantees size consistency between `position / forces / velocity / external_forces` buffers when resized. Since those fields are coupled, changing the size of one should change the size of the others. except it's not the case.; plus, there's a ""size"" datafield that is supposed to determine the size of the buffers. Thus it is now impossible to edit the size of those buffers directly. any insertion / removal of a line in the buffers must be preceded with a change of size, which in turn will redimension the buffers. Also: When creating the scene (before executing the simulation) init_size and init_position should be used.; The idea behind that last change is that we should have separate datafields for inputs and outputs, instead of mixing both concepts together. :warning: **THIS IS BREAKING** because there are probably tons of codes out there that resize position manually and then call` init / reinit / bwdInit` on MOs, hoping for them to update the component (I should know I've been doing it for 6years :D). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1489:1317,test,test,1317,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1489,2,['test'],['test']
Testability,; 0x7fff29bf1000 - 0x7fff29c03fff com.apple.CoreEmoji (1.0 - 128) <D43F3FFA-6692-3D56-ACBA-DDA40C566DDE> /System/Library/PrivateFrameworks/CoreEmoji.framework/Versions/A/CoreEmoji; 0x7fff29c04000 - 0x7fff29c0efff com.apple.IOMobileFramebuffer (343.0.0 - 343.0.0) <B15E9DA1-1C81-3ECF-94C7-FD137AD6C5E2> /System/Library/PrivateFrameworks/IOMobileFramebuffer.framework/Versions/A/IOMobileFramebuffer; 0x7fff29c0f000 - 0x7fff29ce1fff com.apple.framework.CoreWLAN (16.0 - 1657) <35927D28-3324-3CAB-9255-276A7022EADC> /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN; 0x7fff29ce2000 - 0x7fff29ee1fff com.apple.CoreUtils (6.5 - 650.6) <184C48A4-7F66-395B-81DB-DAA1641383CF> /System/Library/PrivateFrameworks/CoreUtils.framework/Versions/A/CoreUtils; 0x7fff29ee2000 - 0x7fff29f04fff com.apple.MobileKeyBag (2.0 - 1.0) <0F83FED4-709A-37A0-9E04-EFFD71CB1272> /System/Library/PrivateFrameworks/MobileKeyBag.framework/Versions/A/MobileKeyBag; 0x7fff29f05000 - 0x7fff29f15fff com.apple.AssertionServices (1.0 - 505.80.1) <A00B802D-7BB8-3F6B-A79D-E9697F7D0ABB> /System/Library/PrivateFrameworks/AssertionServices.framework/Versions/A/AssertionServices; 0x7fff29f16000 - 0x7fff29fa2fff com.apple.securityfoundation (6.0 - 55240.40.4) <72AC63B1-0B72-394F-97E8-BA9B114DD0A9> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation; 0x7fff29fa3000 - 0x7fff29facfff com.apple.coreservices.BackgroundTaskManagement (1.0 - 104) <EC15118E-62BD-3C24-A880-3B9B74318B0B> /System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement; 0x7fff29fad000 - 0x7fff29fb1fff com.apple.xpc.ServiceManagement (1.0 - 1) <FD031028-B702-3909-B2AF-3916404DD4A8> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement; 0x7fff29fb2000 - 0x7fff29fb4fff libquarantine.dylib (119.40.2) <40D35D75-524B-3DA6-8159-E7E0FA66F5BC> /usr/lib/system/libquarantine.dylib; 0x7fff29fb5000 - 0x7fff29fc0fff libCheckFix.dylib (31) <74E17BB2-,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:37169,Assert,AssertionServices,37169,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['Assert'],['AssertionServices']
Testability,"; SofaVisualModel.Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:99). Start: 'VisualBody'; UnityEngine.Debug:Log (object); SofaVisualModel:Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:65). NullReferenceException: Object reference not set to an instance of an object; SofaVisualModel.UpdateMesh () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:129); SofaVisualModel.Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:99). Start: 'OglModel'; UnityEngine.Debug:Log (object); SofaVisualModel:Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:65). NullReferenceException: Object reference not set to an instance of an object; SofaVisualModel.UpdateMesh () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:129); SofaVisualModel.Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:99). ReconnectSofaScene; UnityEngine.Debug:Log (object); SofaUnity.SofaContext:ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:480); SofaUnity.SofaContext:Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext:StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext:Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). SofaContextAPI::loadScene method returns: success (bool) for scene: C:/Users/dhananjay/unity_projects/testSofa/Assets/SofaUnity/Scenes/SofaScenes/tissue.scn; UnityEngine.Debug:LogError (object); SofaUnityAPI.SofaContextAPI:loadScene (string) (at Assets/SofaUnity/Plugins/SofaUnityAPI/SofaContextAPI.cs:189); SofaUnity.SofaContext:ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:486); SofaUnity.SofaContext:Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext:StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext:Awake () (",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4156:3583,Log,Log,3583,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4156,1,['Log'],['Log']
Testability,"; }; ```. To avoid breaking (a lot of) code, a compatibility layer has been implemented, so the existing code still works:; ```; #include <sofa/helper/gl/Texture.h; ...; sofa::helper::gl::Texture = ....;; ```; and will either:; - **create an error** if you did not link against Sofa.GL; - **generate a deprecation warning** if you did link but still using old paths.; So for 99.999% of code, all you have to do is to link against Sofa.GL (or even nothing if you code is already linking against modules linking now against Sofa.GL like SofaOpenGlVisual); ; ## Real breaking code; ONE function has been removed from core::visual::VisualParam :; helper::gl::Framebuffer getFramebuffer(); which was used to get the current bound framebuffer in OpenGL (getting a Sofa utility class Framebuffer).; Two reasons why it has been removed:; - nobody uses it in all the repository; - one can just use a real OpenGL function to get the bound framebuffer, with ; ```; glGetIntegerv(GL_FRAMEBUFFER_BINDING, &result);; ```; for example. # Notes; The compilation of Sofa.GL is itself enabled with the CMake variable SOFA_NO_OPENGL (weird name but I wanted to keep the same ""reasoning"" for now); Use of SOFA_NO_OPENGL macro in the code has been removed from the Sofa codebase only, not the plugins (in a future PR). 😅. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1649:4364,test,test,4364,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1649,2,['test'],['test']
Testability,"<frozen importlib._bootstrap>(702): _load; /opt/rh/rh-python38/root/usr/lib64/python3.8/imp.py(171): load_source; /opt/rh/rh-python38/root/usr/lib64/python3.8/imp.py(234): load_module; <string>(3): <module>. [ERROR] [PythonTestExtractor] File skipped: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Core/MyRestShapeForceField.py ; No test suite found. Make sure there is at least one class in the script that inherits from TestCase.; [INFO] [PythonTestExtractor] File 'Base.py' loaded with 10 unit tests.; [INFO] [PythonTestExtractor] File 'PythonRestShapeForceField.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'BaseData.py' loaded with 29 unit tests.; [INFO] [PythonTestExtractor] File 'DataEngine.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'BaseLink.py' loaded with 11 unit tests.; [INFO] [PythonTestExtractor] File 'BaseObject.py' loaded with 12 unit tests.; [INFO] [PythonTestExtractor] File 'Controller.py' loaded with 7 unit tests.; [INFO] [PythonTestExtractor] File 'ForceField.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'FileRepository.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Message.py' loaded with 2 unit tests.; [INFO] [PythonTestExtractor] File 'Node.py' loaded with 26 unit tests.; [INFO] [PythonTestExtractor] File 'Simulation.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'RGBAColor.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Vec3.py' loaded with 4 unit tests.; [INFO] [PythonTestExtractor] File 'BoundingBox.py' loaded with 5 unit tests.; [==========] Running 120 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 120 tests from SofaPython3/Sofa; [INFO] [SofaPython3] Initializing with python version 3.8.6 (default, Oct 27 2020, 09:13:12) ; [GCC 9.3.1 20200408 (Red Hat 9.3.1-2)]; [INFO] [SofaPython3] Shared library name is 'libpython3.8m.so'; [ RUN ] SofaPython3/Sofa.all_tests/0",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796:3490,test,tests,3490,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796,1,['test'],['tests']
Testability,"='SofaSimpleFem'/> <!-- Needed to use components [HexahedronFEMForceField, ]--> ; ```. # After; ```; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; Your scene may not work on a sofa environment with different pre-loaded plugins. ; To fix your scene and remove this warning you just need to cut & paste the following lines at the beginning of your scene (if it is a .scn): ; <RequiredPlugin name='MultiThreading'/> <!-- Needed to use components [ParallelBVHNarrowPhase, ParallelBruteForceBroadPhase]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [FreeMotionAnimationLoop, LCPConstraintSolver, UncoupledConstraintCorrection]--> ; <RequiredPlugin name='SofaImplicitOdeSolver'/> <!-- Needed to use components [EulerImplicitSolver]--> ; <RequiredPlugin name='SofaLoader'/> <!-- Needed to use components [MeshObjLoader]--> ; <RequiredPlugin name='SofaMeshCollision'/> <!-- Needed to use components [LineCollisionModel, PointCollisionModel, TriangleCollisionModel]--> ; <RequiredPlugin name='SofaOpenglVisual'/> <!-- Needed to use components [LightManager, OglModel, SpotLight]--> ; <RequiredPlugin name='SofaSimpleFem'/> <!-- Needed to use components [HexahedronFEMForceField]--> ; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2111:3089,test,test,3089,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2111,2,['test'],['test']
Testability,"> * @fredroy: What should we do with NonUniformHexahedronFEMForceFieldDensity? Its reference is commented in the CMakeLists. I did not touch it.; > . IMO:; - nobody complained about its absence in the project since... ?; - no relevant commits since a loooooooong time; - no example; - almost no doc (although a paper citation is present); - obviously no test; - it needs a kind of file (density volume), but we dont even know the format/standard, and if there is one in the repo already... I would simply delete it 🧐",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2333#issuecomment-916716382:354,test,test,354,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2333#issuecomment-916716382,1,['test'],['test']
Testability,"> +1; > I remember it was at a time where Intel driver and Linux was crashing #526 with Core profile (I guess?); > Maybe a bug in mesa at that time or the intel driver.; > Anyway we would need people using Intel & Linux to test this on their setup. Thanks for linking this issue, I wasn't aware. . I wouldn't be surprise that the crash that was initially happening was for the same reason as the one for which I made this PR (the 0 GL extension -> std::string(nullptr) -> crash). With this PR, such a crash won't happen anymore. In addition, the extensions will now be found due to the magic call to `f.setOption(QSurfaceFormat::DeprecatedFunctions, true);`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1690#issuecomment-753931342:223,test,test,223,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1690#issuecomment-753931342,1,['test'],['test']
Testability,"> . > I just had a look on the implementation of `FullVector`. I notice the following differences between `operator[](Index i)` and `element(Index i)`:; > ; > * `element(Index i)` is virtual; > ; > * `element(Index i)` returns necessarily a `SReal` independent from the type of `FullVector`. It may lead to a type conversion therefore an impact on the performances. But usually, all the components are compiled with `SReal`, so I am not sure there is a conversion here. So it should not affect the performances.; > ; > ; > I am confused here, because I cannot believe that the speedup you get is only because of the virtual function. I guess you can try again your benchmark, but instead of using `operator[](Index i)`, use `FullVector<Real>::element(Index i)`. Note that I force the `element` function to be the one in `FullVector<Real>`. with `FullVector<Real>::element(Index i)`:; ` 5000 iterations done in 59.448 s ( 84.1071 FPS)` more or less same as with the operator[] then",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3231#issuecomment-1236824001:665,benchmark,benchmark,665,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3231#issuecomment-1236824001,1,['benchmark'],['benchmark']
Testability,"> 2 new scenes tests are failing on windows: `FEMBAR_ShewchukPCGLinearSolver_BlockJacobiPreconditioner` `FEMBAR_ShewchukPCGLinearSolver_PrecomputedWarpPreconditioner` Any idea why? What is different form the others ones you added?. That's a good question! Especially as I am on Windows. I'll have a look. Otherwise, I'll remove those tests for the moment.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2776#issuecomment-1075373896:15,test,tests,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2776#issuecomment-1075373896,2,['test'],['tests']
Testability,"> ; > * removed caduceus from regression. Could you say why?; > . yes sorry, I put the comment in the commit message: ""[tests] Remove caduceus from the regression test, This scene is not appropriate to test as the resolution seems to depends on the HW for the Gauss Seidel to converge""",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1669#issuecomment-749537068:120,test,tests,120,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1669#issuecomment-749537068,3,['test'],"['test', 'tests']"
Testability,> ; > ; > 2 regression tests are failing :; > ; > * Regression_test/StateRegression_test.sceneTest/EulerExplicitSolver; > ; > * Regression_test/StateRegression_test.sceneTest/EulerImplicitSolver; > ; > ; > Could it be that the references of these 2 scenes are bogus themselves ? (thus needing to update them?). yes probably as both scenes are using MeshMatrixMass. I'll try to check the values to see if it is a regression or a fix... 🤞,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2193#issuecomment-873985742:23,test,tests,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2193#issuecomment-873985742,1,['test'],['tests']
Testability,"> ; > ; > > @fredroy you wanted some tests.... I have added ""some""... I know 2 are failing but I think the mesh is wrong. I will fix that in another PR; > ; > Could you identify them in the code (in a comment, maybe add the url or the number of this PR); > In case you dont have time to solve them or something like that; otherwise we wont know when these tests had failed 😏. In fact the checker had a bug. All the tests are now working. Thanks for the review, the tests were worth it!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1594#issuecomment-807574906:37,test,tests,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1594#issuecomment-807574906,4,['test'],['tests']
Testability,"> ; > ; > > I really dont see why the Quater test fails with mac in this PR 🤔; > ; > @fredroy I see the test uses randomly generated quaternions as input (the seed is based on the current time -> this should be changed). It's probably a hint that something is wrong, and that it fails randomly. Duly noted",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2323#issuecomment-921838381:45,test,test,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2323#issuecomment-921838381,2,['test'],['test']
Testability,"> ; > ; > > Just looking at the code, it is fine for me but I don't have the whole overview of Link API. I know that @damienmarchal was reworking the BaseLink API. If you could give a look ?; > ; > Yes, I kind of noticed that it required a rework, but my goal was just to fix a failing unit test. I recall that this test was failing on purpose actually (to keep track to work on the Link); @damienmarchal ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2166#issuecomment-863977710:291,test,test,291,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2166#issuecomment-863977710,2,['test'],['test']
Testability,"> ; > ; > > ```; > > * add a compiler flags no-attributes for MSVC; > > ```; > ; > I didn't do it for MSVC, is there an equivalent?. My bad, i thought the cmake test was ""if is MSVC"" 🙄; As for your question, no idea",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1682#issuecomment-751700038:161,test,test,161,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1682#issuecomment-751700038,1,['test'],['test']
Testability,"> ; > ; > > ```; > > * removed caduceus from regression. Could you say why?; > > ```; > ; > yes sorry, I put the comment in the commit message: ""[tests] Remove caduceus from the regression test, This scene is not appropriate to test as the resolution seems to depends on the HW for the Gauss Seidel to converge"". Ah my bad, did not think to check the commits messages",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1669#issuecomment-749550372:146,test,tests,146,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1669#issuecomment-749550372,3,['test'],"['test', 'tests']"
Testability,"> ; > ; > > mac: `Build OK. FIXME: 17 units, 11 scenes, 3 regressions`; > > 😬; > ; > what a shame I don't have a mac to test here :). Windows is even better: `windows_vs2017_options — Build OK. FIXME: 17 units, 16 scenes, 3 regressions `; 🙃",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2359#issuecomment-927938811:120,test,test,120,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2359#issuecomment-927938811,1,['test'],['test']
Testability,"> ; > ; > @fredroy you wanted some tests.... I have added ""some""... I know 2 are failing but I think the mesh is wrong. I will fix that in another PR. Could you identify them in the code (in a comment, maybe add the url or the number of this PR) ; In case you dont have time to solve them or something like that; otherwise we wont know when these tests had failed 😏",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1594#issuecomment-807059522:35,test,tests,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1594#issuecomment-807059522,2,['test'],['tests']
Testability,"> ; > ; > If I understood correctly, there are two testing libraries for `Sofa.LinearAlgebra`:; > ; > 1. An interface which is only an abstract code waiting to be instantiated with some types. Only header files. This one is Sofa.LinearAlgebra.Testing; > ; > 2. The actual library which includes some tests in cpp files. This one is Sofa.LinearAlgebra_test. But I don't see any CMakeLists.txt. Did I miss something?. I forgot to add the file 🙃; > ; > ; > I approve this architecture. (the names of the libraries are not explicit. It's difficult to understand the difference.). One naming convention could be: implementations of the tests themselves always end with _test, and the frameworks helping write tests will be suffixed with Testing (i.e sofa::blablabla::testing for Sofa.Blablabla.Testing); Actually I have more or less convert the existing sofadefaulttype.test and sofadefaulttype.testing for SofaLinearAlgebra",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2383#issuecomment-934160920:51,test,testing,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2383#issuecomment-934160920,10,"['Test', 'test']","['Testing', 'test', 'testing', 'tests']"
Testability,"> ; > ; > Indeed :; > ; > * SceneTests.examples/Benchmark/TopologicalChanges.ProjectToPlaneConstraint_RemovingMeshTest.scn; > ; > * SceneTests.examples/Benchmark/TopologicalChanges.FixedPlaneConstraint_RemovingMeshTest.scn; > crash.; > Should we let them crash and appear in the CI log (thus maybe making the result even more confusing), or should we ignore it on the CI ?. yes as I said in the description, they are failing because the code is not working.; Either we put them to remind me I need to fix those components (but could be in several months); or we remove them from PR and copy past in an issue (maybe cleaner) ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2161#issuecomment-863872196:48,Benchmark,Benchmark,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2161#issuecomment-863872196,3,"['Benchmark', 'log']","['Benchmark', 'log']"
Testability,"> ; > ; > Nice work @epernod 👍; > If you already know what must be done to fix the tests, I'm for doing it in this PR !. ok I fixed some of them. The last 2 failing tests need big changes. we can comment them for the moment.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2249#issuecomment-883341079:83,test,tests,83,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2249#issuecomment-883341079,2,['test'],['tests']
Testability,"> ; > ; > Very nice work @fredroy 👏 👏 👏; > ; > I have 2 side questions:; > ; > * shouldn't this be under applications/projects instead of applications/plugins (I would feel more logical to have it next to runSofa basically) ?; > . Hum, could be in the project, as there is one executable (standalone glfw launcher), but there is also one library (which can be used for runSofa as a plugin; this one is very similar to SofaQuiQt if you want). > * is it planned to host the repository in sofa-framework organization ?. Of course, my repo was more a sandbox, once this is a bit tested by people, we can move it into the sofa-framework organization.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2062#issuecomment-843017590:178,log,logical,178,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2062#issuecomment-843017590,3,"['log', 'sandbox', 'test']","['logical', 'sandbox', 'tested']"
Testability,"> ; > ; > mac: `Build OK. FIXME: 17 units, 11 scenes, 3 regressions`; > 😬. what a shame I don't have a mac to test here :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2359#issuecomment-927800514:110,test,test,110,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2359#issuecomment-927800514,1,['test'],['test']
Testability,"> > > Just looking at the code, it is fine for me but I don't have the whole overview of Link API. I know that @damienmarchal was reworking the BaseLink API. If you could give a look ?; > > ; > > ; > > Yes, I kind of noticed that it required a rework, but my goal was just to fix a failing unit test.; > ; > I recall that this test was failing on purpose actually (to keep track to work on the Link); > @damienmarchal ?. Well... putting technical debt in failing unit tests does not force developers to fix the debt... It is as invisible as an GitHub issue (yes, because we know that the test is failing, so at some point we just don't care about it), and it pollutes diagnostics on the CI.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2166#issuecomment-864035253:295,test,test,295,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2166#issuecomment-864035253,4,['test'],"['test', 'tests']"
Testability,"> > > Ok for me, but could you explain in which case you have this problem? Setting the component to invalid is a good idea. Breaking the loop might create some bigger issue in components using the topology as it won't be set.; > > ; > > ; > > We have this problem when using subtopologies defined using BoxROIs. The subTopo has fewer points than the original topology (Since it is a subset of it) but the triangles in that subtopo refer to nodes indexed with the numbering in the original topology that are out of bounds within the subtopo world. Not sure that is clear!; > ; > There is something un-catholic there... So if I understand well, you have triangle in your topology that refer to point out of bound to your current node mechanicalObject? I don't understand how it can work. It will crash as soon as a component will try to access a dof passing through the topology no?. Sorry for the late reply!; So it is a case where the node where the subtopology is defined does not contain a MechanicalObject. It is only defined to add a ForceField applying onto a subpart of the node of the MechanicalObject. An example is in this scene: https://github.com/SofaDefrost/ModelOrderReduction/blob/master/tools/test/sofa_test_scene/quadruped.py",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4242#issuecomment-1820989683:1209,test,test,1209,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4242#issuecomment-1820989683,1,['test'],['test']
Testability,"> > I agree to remove the macro, but why removing the template? I think it matches better the constructors available in the STL.; > ; > I was wondering the same, but everything was tested with ` __STL_MEMBER_TEMPLATES` not defined for years so thats why I prefered to use the ""legacy"" code. But I can change and take the templated one otherwise 😶‍🌫️. alright, I am not against it. It's not that important",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4251#issuecomment-1774607704:181,test,tested,181,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4251#issuecomment-1774607704,1,['test'],['tested']
Testability,"> > I took the liberty to retrieve the ArticulatedControllers (which were deprecated/removed some years ago) and put it back into it. Especially because I retrieved the ""man-walking"" example which is quite cool in my opinion. But the code was created by DigitalTrainers, I dont know if it could be bothersome license-wise.; > ; > Are you sure ? If it's the case it's only the controller... because the code of the articulatedSystemMapping was done in the SHACRA team... In any case we had a contract at that time with Digital Trainers on suture that said that the SOFA code developed in the project was open-source and that Inria keeps the property.; > . Yes it is only the controllers. I checked the git log history and it was made by P.J Bensoussan 🧐 on behalf of Digital Trainers.; But good to know that Inria has the property in any case.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2684#issuecomment-1056596552:705,log,log,705,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2684#issuecomment-1056596552,1,['log'],['log']
Testability,"> > Last regression test failing will disappear as soon as PR #4494 is merged as the new version of isquadDelaunay method is not using this method intersectionWithEdge anymore. And for the note, the error is a false positive. The regression should be regenerated at one point.; > ; > Regressions are OK but the error being an unit test `InciseProcessor_test.InciseTriangles`, it is because of `[ERROR] [TriangleSetGeometryAlgorithms(GeomAlgo)] Orthogonal projection failed` I dont really see how it can be a false positive ?. Hi, ; I meant, false positive because it is part of the snapping algorithm in the incision which was already buggy but the error was not catch before.; The projection was computed totally outside of the edge (the mesh is a square of size 10x10:; coord_edge1: [5.44854, 5.02682, -0.832787] - [4.86141, 4.79438, -0.760481]; coord_edge2: [4.99791, 4.99949, -0.778808] - **[20676.1, 52846.7, 1933.72]**. the result was a strange (but not crashing 🤔 ) incision; ![image](https://github.com/sofa-framework/sofa/assets/21199245/c3b0bfbc-9867-4991-bfaf-2120aaee4203). In fact the correct fix is to exit the snapping if the projection failed and continue the incision normally instead of forcing the projection and use a ""random"" point of the triangle to be snapped. . Here is the result after:; ![IncisionTrianglesProcess_00000002](https://github.com/sofa-framework/sofa/assets/21199245/84858056-93c6-44ad-bd19-1e1151409c1a)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4194#issuecomment-2044595739:20,test,test,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4194#issuecomment-2044595739,2,['test'],['test']
Testability,"> > So, as we discussed during the dev meeting. 2 modifications:; > > ```; > > 1. Indeed, Boost, MPFR and GMP are dependencies of CGAL library itself not of the SOFA-CGAL plugin. As those dependencies are correctly handled internally in CGAL, I removed all mention of those libraries in the config file of the plugin.; > > ; > > 2. There is already a .cmake at the root dir of CGAL so the findCGAL.cmake is not necessary. Sofa just need to know ${CGAL_DIR} path. And in fact on windows, when you install CGAL this env_variable is set. So it works straight forward.; > > ```; > > ; > > ; > > @guparan can you confirm this is now ok to go?; > ; > The _FindCGAL.cmake_ was there to avoid the need to manually set the `CGAL_DIR` variable when we install CGAL via `apt install libcgal-dev`.; > ; > IIRC, it did not work straight forward with ubuntu 18.08 and centos 7, and maybe not even with recent versions of those distributions. I'll check it later today if you want with Docker, but I believe this file was useful. Ok I see, maybe we could add a test on top of ""our FindCGAL"" checking if CGAL_DIR is known or not. @guparan could you give your feedback so we can converge on that PR.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1308#issuecomment-611393910:1046,test,test,1046,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1308#issuecomment-611393910,1,['test'],['test']
Testability,"> > The CI does not try to install the resulting build... so did you try to make the target ""INSTALL"" ?; > ; > I don't understand. Your cmake change is mostly affecting the install process, which is not tested on the CI... so did you try to install your current build ? ( to be sure that the change does not incur any error)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3359#issuecomment-1270972063:203,test,tested,203,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3359#issuecomment-1270972063,1,['test'],['tested']
Testability,"> > VirtualTypeInfoA was just to allow me to test without breaking other part of Sofa by side effect. So it is clearly temporary, I have not thought about that seriously on how to proceed the transition and if we need a separated VirtualTypeInfoA; > ; > Ok that makes sense. Yeah I guess the clean thing would be to swap every usage in SOFA to the new dynamic TypeInfo, and to somehow depreciate the static one.; > ; > Looks good to me, I look forward to testing it, probably with Eigen types to extend what @Younesssss started. Definitly a must have...but not in the same PR :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1552#issuecomment-712909548:45,test,test,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1552#issuecomment-712909548,2,['test'],"['test', 'testing']"
Testability,"> > why not defining the test in Sofa.component.ODESolver.tests in place of Sofa.component.ODESolver_test ? To me this looks more consistant and coherent with our naming scheme as well as having the tests in a child directory of ODESolver. > Hum I kept the naming from before, and this is an executable, not a library so maybe something to differenciate. But I dont really care the naming, and we can change it if needed. I wouldn't say it is just name because we have given a specific meaning to the '.'. Sofa.component.ODESolver.tests is a subpackage (and a subdir) of Sofa.component.ODESolver while Sofa.component.ODESolver_tests is a side package. ; Shouldn't we prefer to have the tests shipped with the code they are supposed to validate ? . > > * why centralizing the testing.tools which breaks modularity instead of letting them at their right logical location ?; > > To me having something like; > > ```; > > SofaDeformable.testing.tools/MassSpringSystemCreation ; > > ```; > > Is much better than; > > ```; > > Sofa.testing.tools/MassSpringSystemCreation ; > > ```. > For those two (`MassSpringSystemCreation` and `SunSystemCreation`), it is not really creating something ODESolver-specific so there is no ""logical"" place by itself. The given example is nothing related to ODESolver but SofaDeformable. As MassSpringSystemCreation is creating StiffSpringForceField (which is in SofaDeformable), then the logical place seems to straightforwardly point to SofaDeformable and not Sofa.testing.whatever.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2650#issuecomment-1040571894:25,test,test,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2650#issuecomment-1040571894,12,"['log', 'test']","['logical', 'test', 'testing', 'tests']"
Testability,"> @bakpaul Strange, I checked again (with and without parallelization) and I don't have the artefact you have. `ShewchukPCGLinearSolver` is not a difference because you use an alias of it (`PCGLinearSolver`). In the benchmark I translated the beam to measure mainly the contacts and skip the falling part. But I still don't see the artefact when I remove the translation. @fredroy @hugtalbot would you like to test this branch with the scene provided by @bakpaul ?. I tested the scene of @bakpaul and I get the same artefact on ubuntu 23.04/gcc12.2; EDIT: and I dont have the artefact on Windows/MSVC2022 😶‍🌫️",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1643181408:216,benchmark,benchmark,216,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1643181408,3,"['benchmark', 'test']","['benchmark', 'test', 'tested']"
Testability,> @epernod should add to non regression tests. https://github.com/sofa-framework/regression; Let me know if you do it yourself or if you need my input (I have time... this holiday week),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1260#issuecomment-591342521:40,test,tests,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1260#issuecomment-591342521,1,['test'],['tests']
Testability,> @epernod you mean that the scene you mentioned did not make a match between the force fields?. no this scene is working fine and both FEM have exactly the same behavior. ; I did a previous bad tests several weeks ago and it was not working... but now it is working nicely. wait for CI for triple check and go,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3991#issuecomment-1655449085:195,test,tests,195,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3991#issuecomment-1655449085,1,['test'],['tests']
Testability,"> @fredroy I think all the problems you found are only due to RestShapeSpringForceField. I am now able to run (properly I think) both scenes SingleBeamDeployment.scn and 3instruments_collis.scn. Could you confirm that?. Good news, it works well !; And a bad news but not directly related to your PR, if `parallelCollisionDetectionAndFreeMotion` is activated for the animationloop in `scenes/3instruments_collis.scn `, there is a crash on the message mechanism. Here is the backtrace:; ```; 	[Inline Frame] Sofa.Helper.dll!std::_Check_C_return(int _Res) Line 131	C++; 	[Inline Frame] Sofa.Helper.dll!std::_Mutex_base::lock() Line 50	C++; 	[Inline Frame] Sofa.Helper.dll!std::lock_guard<std::mutex>::{ctor}(std::mutex & _Mtx) Line 427	C++; 	Sofa.Helper.dll!sofa::helper::logging::MessageDispatcher::process(sofa::helper::logging::Message & m) Line 151	C++; 	Sofa.Helper.dll!sofa::helper::logging::MessageDispatcher::LoggerStream::~LoggerStream() Line 198	C++; 	Sofa.GUI.Qt.dll!redirectQtMessages(QtMsgType type, const QMessageLogContext & context, const QString & msg) Line 40	C++; 	[External Code]	; 	Sofa.GUI.Qt.dll!sofa::gui::qt::setMessageIconFrom(QTreeWidgetItem * item, sofa::core::objectmodel::Base * object) Line 325	C++; 	Sofa.GUI.Qt.dll!sofa::gui::qt::ObjectStateListener::notifyEndEdit() Line 350	C++; 	Sofa.Core.dll!sofa::core::objectmodel::DDGNode::notifyEndEdit() Line 83	C++; 	[Inline Frame] Sofa.Helper.dll!sofa::helper::logging::MessageDispatcherImpl::process(sofa::helper::logging::Message &) Line 119	C++; 	Sofa.Helper.dll!sofa::helper::logging::MessageDispatcher::process(sofa::helper::logging::Message & m) Line 152	C++; 	Sofa.Helper.dll!sofa::helper::logging::MessageDispatcher::LoggerStream::~LoggerStream() Line 198	C++; >	Sofa.Core.dll!sofa::core::behavior::BaseForceField::buildStiffnessMatrix(sofa::core::behavior::StiffnessMatrix * matrix) Line 62	C++; 	Sofa.Component.LinearSolver.Direct.dll!sofa::component::linearsystem::AssemblingMatrixSystem<sofa::linearalgebra::BTDMatr",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1436394850:769,log,logging,769,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1436394850,5,"['Log', 'log']","['LoggerStream', 'logging']"
Testability,"> @olivier-roussel The findGTest https://cmake.org/cmake/help/v3.19/module/FindGTest.html of cmake only works for CMake >= 3.20 😭 (tested with cmake 3.16 and 3.19 ❌ whereas cmake 3.20 and 3.28 ✅). Indeed again :cry: ; Another option but maybe a bit conda-specific would be to switch to config mode `find_package(GTest CONFIG QUIET)`, as the conda package comes with the GTest cmake config files. Tested with conda + cmake 3.19.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1923358310:131,test,tested,131,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1923358310,2,"['Test', 'test']","['Tested', 'tested']"
Testability,"> @olivier-roussel thanks for the conda test and the feedbacks 👍 You should have made suggestions and/or make a PR on my branch, as I cannot credit you your patches 😵. Indeed, sorry about that",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1923345776:40,test,test,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1923345776,1,['test'],['test']
Testability,"> Ah that is good to know 👍 Keep us in touch !. Hi @fredroy,; I tested it more and the results seem very strange to me:. For caduceus scene, in v21.06 I can only drag the caduceus to the right direction using mouse with bilaterial , none of the left, up and down directions work. And the same case happens in v19.12, only moving mouse to the right works. While when I test my own gallbaldder scene in v19.12, all of the directions work with the mouse, but none of the directions work in v21.06.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-977632348:64,test,tested,64,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-977632348,2,['test'],"['test', 'tested']"
Testability,> An opportunity to add a unit test in SofaPython3 ;); +1. But SofaPython3 is not the place to validate sofa core behavior. It would be much better to have it in Sofa implemented using simpleapi. And not in a reverting PR.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3464#issuecomment-1307358562:31,test,test,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3464#issuecomment-1307358562,1,['test'],['test']
Testability,"> Any interest to keep newmat ? I remember a discussion during a sofadevmeeting with @jnbrunet saying that we should remove the usage of newmat. Especially because it seems this library is really old and not maintained anymore.; > http://robertnz.net/nm_intro.htm; > Latest update seems to be 2008 for newmat11 (beta)... Good point. I just saw an opportunity to easily benefit from the type-parameterized tests that I introduced for `BaseMatrix`. An option is to remove it, but it could also be moved into an external plugin. Let's discuss it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2311#issuecomment-909026838:405,test,tests,405,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2311#issuecomment-909026838,1,['test'],['tests']
Testability,"> Any news @nhnhan92 ?; > Note that for my remark on the header, having your project name if fine for us. What matters for us is to have first the SOFA header (LGPL) up in the file. Would this be possible?; > Let me thank you again for this nice contribution. Hi @hugtalbot,; Sorry for late response. I have recently been in the middle of some work (related to this project). Therefore, there is no progress so far, however, I plan to add the addKtoMatrix module to the FF and also try to improve coding stuffs (will be updated as soon as possible). On the other hand, I have discussed with my team member and advisor about the header. We agree with your above suggestion, but I just wonder is it possible for this FF to appear in both the SOFA source code (in the future) and our own under-developing plugin? we are not familiar with this procedure, sorry for that; If it is okay, please write the name of the contributor as:; JST/PRESTO Project: TouchIoT-Smart Tangible Sensing Enabler for Tactile Internet (Developer: Nhan Nguyen Huu); One last thing, from the previous comment, you mentioned the test. Could you please be more specific about the test? do you want to test the reliability of the FF (like coding, mathematical model, etc.)? We definitely want to certify that.; Thank you for your and SOFA team effort to review our work.; Best regards,; Nhan",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-780500969:1100,test,test,1100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-780500969,3,['test'],['test']
Testability,> Are more tests provided in InSimo's repo? I would like to make sure that you get the same results if you change specific parameters of the policy. I see there are tests for CRSConstraintMatrix (and the eigenutils) but not for the generic and mechanicals one; https://github.com/InSimo/ISSofa/tree/issofa/framework/framework_test/defaulttype,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1534077944:11,test,tests,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1534077944,2,['test'],['tests']
Testability,"> As you said, using prime-run runSofa when available to force SOFA to run on the GPU seems to be working. Actually, when not using prime-run it still runs on the GPU. I have two GPUs, one AMD 5700XT and a nVidia 1650. On AMD doesn't work, on nVidia it works. Could be something related only with the amd driver. Haven't tested it on other mesa based drivers.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1567#issuecomment-724744131:321,test,tested,321,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1567#issuecomment-724744131,1,['test'],['tested']
Testability,"> Could you think about a pertinent unit test?. I made some but it is possible that it fails, as (normally) CI jobs run with a unprivileged user which can have no home-directory defined, AFAIK (on Linux at least)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4875#issuecomment-2270387340:41,test,test,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4875#issuecomment-2270387340,1,['test'],['test']
Testability,"> Could you verify that the change didn't not decrease the performances (maybe we should have for each .h tp .cpp of core class a small benchmark to asses the performacne difference). In this case, this is a just the map between vecid and string which is normally not really used in performance context (or hopefully not 😅) like in the GUI, but I can do a bench if it is really needed. > ; > On my side I'm still very surprised that all the move we are doing in removing code from .h to put them into dedicated translation unit has so limited impact on performances. To me either the compiler's are very good nowaydays (thanks to GO/IPO/LTO) or a lot of code was not optimized because of our code architecture (eg: no final keyworkd in overriden method preventing optimization). At least I can see quite a nice difference LTO/noLTO but I only really do my perf checks on MSVC.; I dont know about the current state of LTO for gcc/clang (ldd, gold, etc)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3401#issuecomment-1286301742:136,benchmark,benchmark,136,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3401#issuecomment-1286301742,1,['benchmark'],['benchmark']
Testability,> Do we have a CI on that part of the code ?. SofaCUDA is built on Win and Ubuntu i think; SofaSpfFluid should be built everywhere as well.; It seems there are some scenes as well (but no unit test as far as I am aware),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3144#issuecomment-1190919495:193,test,test,193,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3144#issuecomment-1190919495,1,['test'],['test']
Testability,> Does #3832 fix the failing unit test?. It does 👍,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1533956692:34,test,test,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1533956692,1,['test'],['test']
Testability,"> Don't you think that moving `errF` and `tempF` out of the loop is enough? I would test to only resize them in the loop. The underlying memory allocation should not happen a lot. My suggestion is because I think it is simpler to understand compared to the buffer implementation.; > ; > In any case, I think the condition `if (nb > bufferSize)` is not necessary. I obtained the same level of improvement so I will go with this easier way 👍",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4195#issuecomment-1734678391:84,test,test,84,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4195#issuecomment-1734678391,1,['test'],['test']
Testability,> During the meeting it was considered as needed to have a scene test to validate the mis-behavior and the fix. @ScheiklP do you have something (otherwise @epernod will have to do one). Weirdly I cannot reproduce the incorrect behavior that I observed when opening the PR. Were there some changes in linking a topology to the component? :D,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3268#issuecomment-1253511047:65,test,test,65,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3268#issuecomment-1253511047,1,['test'],['test']
Testability,"> FYI, `SimpleCarving.py` is not exectuted by the CI (or more precisely, there is no mention of it in the logs). I would say, on s'en balek",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3457#issuecomment-1707842240:106,log,logs,106,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3457#issuecomment-1707842240,1,['log'],['logs']
Testability,"> Have you tested it still works with Qt5?. it is still Qt5 on the CI so if it is green, it should be ok ✌️",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4330#issuecomment-1836137261:11,test,tested,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4330#issuecomment-1836137261,1,['test'],['tested']
Testability,"> Hey @alxbilger , just a small question, did you try it with large K and J? Does it makes you RAM sweat with all those triplets stored ?; > . Actually, I am not even sure that the performances are better in any case, specially for large K or J. I admit I did not benchmark for multiple mesh size. I'll put this PR back to WIP and consider your remark on the RAM (but I am confident it's OK). I'll need to revert this PR from #2411.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2399#issuecomment-948332404:264,benchmark,benchmark,264,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2399#issuecomment-948332404,1,['benchmark'],['benchmark']
Testability,"> Hey @alxbilger , thanks for this benchmark.; > ; > My guest would be that solving one big system (the merge of both objects) is slower than solving to smaller system.; > ; > However, solving two system independently should, I think, produce incorrect results as; > ; > 1. You are applying the interactions (for example, contact forces) at different solving states. For example, the first object is solved, its node positions are updated to the step t+1. Collisions are then computed. But the state of the second object is still at the time step t. Oscillation will therefore probably happen and the convergence will be delayed.; > ; > 2. In addition, the solution state with both objects merged under the same system takes into account the interaction between the two objects. For example, when both objects are merged into a same system, you can create entries inside the system matrix to create a relationship between a node in the first object and a node in the second object. This is not possible when the two objects are separated.; > ; > ; > **TLDR**: Solving two objects independently is faster than solving one big system containing both objects. However it will take longer to converge to a steady solution (in number of steps), and even probably converge to an incorrect solution. Thank you for this explanation. It makes more sense. If I understood correctly, the group manager would help the performances compared to a single system. Here, we compare to two systems (one per cube). I'll add a third scene in this benchmark with a single system, to be more rigorous. I expect the same result from ""single system"" and ""two systems + group manager"". I expect better performances only in case the two cubes are not in contact, am I right?. Can we say that the best practice would be to start the design of a simulation scene with a single system, without group manager? And if performances are poor, it can be improved with a group manager, knowing its drawbacks (such as hiding a selection ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842964385:35,benchmark,benchmark,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842964385,1,['benchmark'],['benchmark']
Testability,"> Hey @nhnhan92; > Thank you so much for your patience and your efforts regarding the headers. It is great to have homogeneous headers for the project, especially for people to use SOFA under one single LGPL license.; > ; > To my best knowledge, it is not really possible to have ""two versions"" of the code in SOFA and a plugin of yours. But here is what I would recommend: once this PR is merged, create a specific branch in your fork where you can implement / test new evolutions. Each time you think the time is appropriate to contribute it back, you can simply pull-request your branch. This is the power of Git!; > ; > Finally, regarding my remark about the test, I was thinkg about a C++ test (that we run on the CI, you can have a look to the C++ files _***_test.cpp_. In this test, it would be ideal to have a numerical validation, assessing that the shell model is following the theoretical behavior (e.g. using method of manufactured solutions (MMS)); > See: https://link.springer.com/article/10.1007/s00366-017-0572-4; > ; > Let us know what you think about it. We can make it step by step!. Dear @hugtalbot,; Thank you for your recommendation, we think that would be a proper option for our case. ; On the other hand, regarding the test, we want nothing more than that, but we are not familiar with the testing procedure. Therefore, we are willing to follow your guidance. Hope to hear your response soon.; Best regards,; Nhan",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-787447454:462,test,test,462,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-787447454,6,['test'],"['test', 'testing']"
Testability,"> Hi @ScheiklP; > ; > Thanks for the PR.; > ; > The SphereCollisionModel works historically without a topology (relying on the mstate). The tests are failing due to the absence of a PointSetTopology. What could be done is to change the warning into an info saying that no topology is found therefore no topological change will be supported. What do you think?; > ; > Another change in order to make the component topologically robust would be to make the data `radius` as a PointData:; > ; > ```c++; > Data< VecReal > radius; ///< Radius of each sphere; > ```; > ; > should become; > ; > ```c++; > PointData< Real > radius; ///< Radius of each sphere; > ```; > ; > (connected to a topology handler). Hi @Hugo,; the `SphereCollisionModel` are in a node together with an `EdgeSetTopologyContainer` that is now also correctly found and bound to `l_topology` and `m_topology`. . Is there something else to do, to correctly connect it to `m_mstate`?. Or maybe `updateFromTopology()` should do more than it does now? :D",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3203#issuecomment-1210437597:140,test,tests,140,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3203#issuecomment-1210437597,1,['test'],['tests']
Testability,"> Hi @fredroy; > ; > Several questions:; > ; > * shouldn't we drop the dependency to SceneCreator (as discussed ([SceneCreator dependencies #417](https://github.com/sofa-framework/sofa/issues/417)) ?; > ; See https://github.com/sofa-framework/sofa/pull/2692#issuecomment-1040462403. > * why not defining the test in Sofa.component.ODESolver.tests in place of Sofa.component.ODESolver_test ? To me this looks more consistant and coherent with our naming scheme as well as having the tests in a child directory of ODESolver. Hum I kept the naming from before, and this is an executable, not a library so maybe something to differenciate. But I dont really care the naming, and we can change it if needed. > ; > * why centralizing the testing.tools which breaks modularity instead of letting them at their right logical location ?; > To me having something like; > ; > ; > ```; > SofaDeformable.testing.tools/MassSpringSystemCreation ; > ```; > ; > Is much better than; > ; > ```; > Sofa.testing.tools/MassSpringSystemCreation ; > ```. For those two (`MassSpringSystemCreation` and `SunSystemCreation`), it is not really creating something ODESolver-specific so there is no ""logical"" place by itself.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2650#issuecomment-1040496377:308,test,test,308,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2650#issuecomment-1040496377,8,"['log', 'test']","['logical', 'test', 'testing', 'tests']"
Testability,"> Hi @marques-bruno,; > ; > Thanks for this very interesting PR that is going into the right direction. Sadly the breaking part is not fun. Let's see how other will react. Agreed..; To give you some context, initially my intent was to only add a init_position / init_size, to remove the bidirectionality of this component's position / size datafields.; Basically, the rule of thumb with SOFA components should be to NEVER EVER use a datafield both as an input and an output of the component (modified by the component AND linked to a parent data for isntance). The problem is that keeping the previous behavior of the component and having the new datafields that work the right way created an asymetry in the updates that created weird logic in the callbacks. So while I'm at it I decided to go all in and refactor the whole thing with the good behavior.; I don't see how to add depreciation messages or how to handle previous behavior. If anyone has an idea, I'm all ears :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1489#issuecomment-695967930:736,log,logic,736,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1489#issuecomment-695967930,1,['log'],['logic']
Testability,"> Hi @nhnhan92; > Here is what we propose: let's get this nice work merged as is. I will only add a regression scene to check that no alteration of the model occurs in the future. I will also write a short doc about it, and I will let you append any additional details on it.; > ; > A C++ test inspired from the [article](https://link.springer.com/article/10.1007/s00366-017-0572-4) would be nice in another PR. For writing test, you can:; > ; > * see the [doc here](https://www.sofa-framework.org/community/doc/contributing-to-sofa/writing-tests/); > * get inspired from the [PluginExample test](https://github.com/sofa-framework/sofa/blob/master/applications/plugins/PluginExample/PluginExample_test/MyBehaviorModel_test.cpp); > ; > Is this fine for you?. Hi @hugtalbot,; It is clear enough. I will take a look at the instruction and try to implement the .test file. I will inform you as soon as I get something new. Thank you again for your patient to help me.; Best,; Nhan",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-790611301:289,test,test,289,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-790611301,5,['test'],"['test', 'tests']"
Testability,"> Hi @sergeiNikolaev; > Sorry for the latency on this topic, tests can be made so that we create a simple scene in c++ imposing rest shape and an imposed displacement. Thus, the resulting force should be analytically defined.; > By the way do you have any latex file for the polynomial equations?. Thank you for your answer @hugtalbot.; Regarding your question, I do not, sorry.; I wrote these equations since for me it is easier to process the stuff like this with a ""writing memory"". And then I decided that it will be enough just to scan them and send to you.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-643263065:61,test,tests,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-643263065,1,['test'],['tests']
Testability,"> Hi Fred,; > ; > The splitting seems to perpetuate the spurious dependency from SceneCreator to sofa.testing.tools. Maybe it is the time to remove the dependency to SceneCreator and use simpleapi in place so that sofa.testing is cleaned from SceneCreator. I have to admit that I did not see that the DataEngineTestCreation.h file was using scenecreator itself, and this is a good idea to do it while sofang'ing. But I would prefer to do that in a further PR to not block my other sofang PRs 😗.; Except if it is trivial to remove/replace 🙃",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2692#issuecomment-1040462403:102,test,testing,102,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2692#issuecomment-1040462403,2,['test'],['testing']
Testability,"> Hi,; > ; > What is exactly the ""Haptic module""? It's weird that is tries to use directly the constructors. You are right that the constructors are protected, so they cannot be used. So I am curious to know if this code ever worked....; > ; > To fix the code, you should have a look on the [tutorials](https://github.com/sofa-framework/sofa/tree/master/applications/tutorials), for example this line: https://github.com/sofa-framework/sofa/blob/master/applications/tutorials/oneTetrahedron/oneTetrahedron.cpp#L94 It uses the friend class `New` to instantiate the objects. There are also many examples in the unit tests. The code in plugins/Haption/HaptionDriver.cpp which support virtuose device; and i try to use the friend class ::New as. `visualHaptionDOF = sofa::component::container::MechanicalObject::New<sofa::defaulttype::Rigid3dTypes>();`. i'm sorry, still error",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4336#issuecomment-1840284644:614,test,tests,614,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4336#issuecomment-1840284644,1,['test'],['tests']
Testability,"> How bad is it to drop the support of DiagonalMass for rigids? Should we keep it anyway? Can MeshMatrixMass support rigids?. @alxbilger I actually hardy can reply .. I need Christian for this, I will ask tomorrow further to the team meeting, would you join?. > We should also have a look on performances. Already done by @fredroy, very very very close! Here: https://github.com/sofa-framework/sofa/issues/2452#issuecomment-982735834; But I do not know about the mesh size used for the test.. maybe to re-investigate",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3912#issuecomment-1576777259:486,test,test,486,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3912#issuecomment-1576777259,1,['test'],['test']
Testability,"> Hum sorry in fact FEMBAR-SVDLinearSolver.scn seems to time out: https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2422/CI_CONFIG=macos_clang,CI_PLUGINS=options,CI_TYPE=release/3/SceneTestCrashes/; > ; > https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-2422/CI_CONFIG=macos_clang,CI_PLUGINS=options,CI_TYPE=release/3/artifact/parent_dir/build/scene-tests/archive/examples/Components/linearsolver/FEMBAR-SVDLinearSolver.scn/output.txt; > ; > could you double check before merging. @epernod yes it makes sense as this solver is super slow. I'll change the number of iterations for this scene. Thanks",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2422#issuecomment-949348641:367,test,tests,367,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2422#issuecomment-949348641,1,['test'],['tests']
Testability,"> I agree to remove the macro, but why removing the template? I think it matches better the constructors available in the STL. I was wondering the same, but everything was tested with ` __STL_MEMBER_TEMPLATES` not defined for years so thats why I prefered to use the ""legacy"" code. But I can change and take the templated one otherwise 😶‍🌫️",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4251#issuecomment-1774592209:172,test,tested,172,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4251#issuecomment-1774592209,1,['test'],['tested']
Testability,"> I also wonder if your message in the `parse` function is a good strategy. `parse` means that `canCreate` returns true. Is it possible if both templates are provided?. Not 100% sure (ObjectFactory stuff is a mess) but canCreate() is this case will try all the possible templates and is testing against the template of the present MechanicalObject (ForceField::canCreate). So the template string of the mass itself is not really read, and it essentially depends on the MechanicalObject.; I already tried on a example with rigid and it worked well. (ArticulationSystemMapping.scn)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2644#issuecomment-1025925776:287,test,testing,287,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2644#issuecomment-1025925776,1,['test'],['testing']
Testability,"> I did some benches on TorusFall.scn🤐 master `5000 iterations done in 41.7616 s ( 119.727 FPS)`; > ; > pr `5000 iterations done in 36.09 s ( 138.543 FPS)`. Thank you for the benchmark. In the PR, did you activated the parallel computation? I would like to know that there is no performance regression in the single-threaded implementation.; I did not parallelize the third loop: I would like to test that to speed up more.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1632077224:175,benchmark,benchmark,175,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1632077224,2,"['benchmark', 'test']","['benchmark', 'test']"
Testability,"> I did the change for labels detection. The ""wip"" label will not be ignored by CI anymore. I created a new label ""pr: ci-ignore"" for that 👍. I would have done differently, it is normal for me that a ""wip"" PR is not ran on the ci (for polar bear sake). But the comment ""ci-build][with-all-tests"" should override the normal behavior. I don't know if it is easy to do?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2284#issuecomment-988652179:289,test,tests,289,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2284#issuecomment-988652179,1,['test'],['tests']
Testability,"> I made some tests on godbolt, but I was not able to reproduce the crash. In any case, one day it would be great to remove the public inheritance from `std::vector` (but SofaCUDA probably doesn't agree). I tried to switch to at least to private inheritance but I can tell you that not only SofaCUDA is complaining 😅",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4180#issuecomment-1724973503:14,test,tests,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4180#issuecomment-1724973503,1,['test'],['tests']
Testability,"> I really dont see why the Quater test fails with mac in this PR 🤔. @fredroy I see the test uses randomly generated quaternions as input (the seed is based on the current time -> this should be changed). It's probably a hint that something is wrong, and that it fails randomly.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2323#issuecomment-921825536:35,test,test,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2323#issuecomment-921825536,2,['test'],['test']
Testability,"> I removed a commit by force push. It was failing on some OS.; > Could it be linked to a bad rebuild?. The latest build was manually triggered by you after the force push, including scene tests. So I guess the answer is no.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/873#issuecomment-451901112:189,test,tests,189,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/873#issuecomment-451901112,1,['test'],['tests']
Testability,"> I was wondering if there is a way to catch the missing symbols at compile-time and I found this: https://cmake.org/cmake/help/latest/module/CheckCXXSymbolExists.html#module:CheckCXXSymbolExists. It's configuration time but it could be helpful. I tried to play with it but I was not able to make it work. I added the check in the `sofa_create_package_with_targets` macro. It could be interesting to enforce that the necessary symbols are defined at configure-time yes 🤔 . EDIT: I did some tests and it is quite bothersome to set up, (the file itself needs to be compilable, the symbol need to be defined and not only declared, adding variable in cache, etc) And I think if we do that for all potential loadable libraries, it will slow down considerably the cmake configure process.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4466#issuecomment-1915860120:490,test,tests,490,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4466#issuecomment-1915860120,1,['test'],['tests']
Testability,"> If I understand correctly, the problem comes from the fact that two equivalent cubes (in terms of the comparison predicate) are not in the same order depending on the platform (compiler). In my opinion, it creates collision responses that are also ordered differently. And the order in collision responses is important (see #2067). Yes, but a small precision in this case the determinism is set across the different compilers (and more precisely the different implementations of the STL). A priori the same compiler/libstd will create the same result. > But I also wonder how two cubes can be equivalent. We compare two floating-point types, more specifically, the center of a cube along the largest dimension. I suspect that both cubes are perfectly aligned in an orthogonal dimension. It is probably due to the construction of the scene (torus are aligned along the X axis), or the symmetry of the geometry. @fredroy do you know when the discrepancy happens? Is it at the very beginning?. Yes, at the very beginning.; Here is a dump of the container being sorted (left linux/gcc and right windows/msvc), after running 1 step ; showing { minBBox maxBBox } for each element. ![diff_gcc_msvc](https://user-images.githubusercontent.com/11028016/221719424-3d8e3a07-23cc-47ce-b277-08673889b83e.png). It is trying to sort according to the axis X and you can see the highlighted lines have the same X. > ; > If we don't want to use `stable_sort` because it is slower, maybe we can make a smarter comparison predicate? For example, if the largest dimension is equivalent, let's compare the second largest dimension etc. Yes, it could be an other solution, but in this end, does `sort() + multiple_test_axis_predicate < stable_sort() + oneaxis_predicate` ? not so sure and it would need more benchmarks. And I am sure it will also depend on the data itself...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3687#issuecomment-1447335507:1786,benchmark,benchmarks,1786,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3687#issuecomment-1447335507,1,['benchmark'],['benchmarks']
Testability,"> If I understood correctly, the group manager would help the performances compared to a single system. Here, we compare to two systems (one per cube). I'll add a third scene in this benchmark with a single system, to be more rigorous. I expect the same result from ""single system"" and ""two systems + group manager"". I expect better performances only in case the two cubes are not in contact, am I right?. Well, if I understood correctly, the group manager is doing just that: take two objects usually solved with their own solver, and merge them into one. So in this case, your third scene should produce the same result as the one with a group manager. Here is a screen shot of the advanced timer monitor for your two scenes:; ![image](https://user-images.githubusercontent.com/6951981/118618298-c239b680-b7c3-11eb-9f4d-aeaa23aaa916.png). See the mechanical nodes? In the scene with the group manager, the two mechanical nodes have been merged into one. > Can we say that the best practice would be to start the design of a simulation scene with a single system, without group manager? And if performances are poor, it can be improved with a group manager, knowing its drawbacks (such as hiding a selection of solver properties to the user). Again, one big system should be the same as what the group manager those. However, I do think it should be best practice to manually do it instead of relying on the group manager to do it...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842971418:183,benchmark,benchmark,183,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842971418,1,['benchmark'],['benchmark']
Testability,"> Indeed. No test nor scene where impacted?. I tested simple scenes and it seems the simulations run and are plausible, with or without the mistake. I don't think this function is actually tested.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2448#issuecomment-950787168:13,test,test,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2448#issuecomment-950787168,3,['test'],"['test', 'tested']"
Testability,"> Is there still something to do here?. Yep, still need to write a test 😅",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3294#issuecomment-1396249004:67,test,test,67,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3294#issuecomment-1396249004,1,['test'],['test']
Testability,> Is this related to #4910?. Maybe but It was not my intention 😅 I got the problem in SofaPython3 for our own component. > This should fix #4911. It would have been convenient to have a test related to this problem 👼,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5081#issuecomment-2433697578:186,test,test,186,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5081#issuecomment-2433697578,1,['test'],['test']
Testability,"> It does not come from your PR, but while trying to compile this branch with the newest gcc, there is an interesting (and useful) warning:; > ; > ```; > /home/fred/sofa/src/current/Sofa/framework/Type/src/sofa/type/Mat.h:408:58: warning: array subscript 2 is above array bounds of ‘const sofa::type::VecNoInit<3, double> [2]’ [-Warray-bounds]; > 408 | if( rabs( this->elems[i][j] - this->elems[j][i] ) > EQUALITY_THRESHOLD ) return false;; > ```; > ; > Indeed, there is no compile-time test about the fact that the matrix is square or not (so the symmetry could be irrelevant). I added compile-time check that the matrix is square. Thanks for spotting it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1240491520:487,test,test,487,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1240491520,1,['test'],['test']
Testability,> It reminds me that we should in general browse all scene warnings to fix them. Good luck. From the last build:. ```; Scene testing summary:; - 675 scene(s) tested; - 675 success(es); - 2184 warning(s); - 0 error(s); - 0 crash(es); ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5072#issuecomment-2434876976:125,test,testing,125,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5072#issuecomment-2434876976,2,['test'],"['tested', 'testing']"
Testability,"> Just looking at the code, it is fine for me but I don't have the whole overview of Link API. I know that @damienmarchal was reworking the BaseLink API. If you could give a look ?. Yes, I kind of noticed that it required a rework, but my goal was just to fix a failing unit test.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2166#issuecomment-863958574:275,test,test,275,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2166#issuecomment-863958574,1,['test'],['test']
Testability,"> Last regression test failing will disappear as soon as PR #4494 is merged as the new version of isquadDelaunay method is not using this method intersectionWithEdge anymore. And for the note, the error is a false positive. The regression should be regenerated at one point. Regressions are OK but the error being an unit test ` InciseProcessor_test.InciseTriangles `, it is because of `[ERROR] [TriangleSetGeometryAlgorithms(GeomAlgo)] Orthogonal projection failed`; I dont really see how it can be a false positive ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4194#issuecomment-1958537865:18,test,test,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4194#issuecomment-1958537865,2,['test'],['test']
Testability,"> Looks fine now.; > [ci-build][with-scene-tests]. Yeah... Although we simply moved the definitions of the problematic operator overloads back into the .h... so problem half solved... if anyone has an idea how to make it build on windows... I'm curious. Otherwise, let's just merge... :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/907#issuecomment-461873354:43,test,tests,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/907#issuecomment-461873354,1,['test'],['tests']
Testability,"> Ok so maybe I misunderstood your last comment, but the GTest find module you added in your last commit works fine on my side with cmake >= 3.12 (which is our min required version). So I guess you meant that the embedded GTest find module in recent cmake version (>=3.20) was required to have the correct targets defined, which is not the case in earlier <3.20 version of cmake (tested in 3.12), but this recent GTest find module was not building if used with cmake <3.20. In the end, your last commit seems to fix everything, so looks like a more generic option that relying on cmake config files as suggested in my last comment. I just added the cmake module from v3.20 for GTest directly in our cmake folder modules; not very clean but it does the job apparently 👍",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1924180211:380,test,tested,380,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1924180211,1,['test'],['tested']
Testability,"> One unit test failling : https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4494/CI_CONFIG=ubuntu_gcc,CI_PLUGINS=options,CI_TYPE=release/2/testReport/UnitTests.Sofa_Component/Topology_InciseProcessor_test/InciseTriangles/. Unit test references have been changed. The new version is more accurate.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4494#issuecomment-1951953396:11,test,test,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4494#issuecomment-1951953396,3,['test'],"['test', 'testReport']"
Testability,> Reminder: https://github.com/sofa-framework/sofa/wiki/Pull-Request-Keywords. `with-all-scenes` does not exist. [ci-build][with-all-tests]. 😬,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4676#issuecomment-2106409063:133,test,tests,133,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4676#issuecomment-2106409063,1,['test'],['tests']
Testability,"> Seems that this causes 1 additional unit test failing: UnitTests.SofaHaptics_test/LCPForceFeedback_test.test_SimpleCollision. Thanks @fredroy, it's now fixed",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2105#issuecomment-856495689:43,test,test,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2105#issuecomment-856495689,1,['test'],['test']
Testability,> Should it be replaced by `Sofa.Component`?. Does it exists? ; I'm doing it in a clean way by adding the needed plugin in the tests...,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3266#issuecomment-1237943547:127,test,tests,127,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3266#issuecomment-1237943547,1,['test'],['tests']
Testability,"> So... I made my best to explain why I care of explicit test but the important things to me are:; >- what do I have to change so that PR can be be merged so that I can close it and move forward ?. Only one last thing I did not get.; There are EXPECT_NOEMIT, EXPECT_EMIT, what about a EXPECT_NOTHING_I_DO_NOT_CARE?!; That would correspond to the default behavior for warnings for instance. >- do we have the time & courage to fix the 200 failing tests if we activate failure on Warning&Deprecated >?. We should at least fix some of them that are real crap, and must not test anything.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-292868331:57,test,test,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-292868331,3,['test'],"['test', 'tests']"
Testability,"> SquareDistanceMapping test fails with the introduced test : https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-4897/CI_CONFIG=ubuntu_gcc,CI_PLUGINS=options,CI_TYPE=release/1/testReport/. See #4891",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4897#issuecomment-2288281667:24,test,test,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4897#issuecomment-2288281667,3,['test'],"['test', 'testReport']"
Testability,"> Strange, looking at the dashboard: 1) some timeout appeared and 2) regression tests failing; > could this be related to the PR?. Hello Hugo!; Hum, I don't think so, that would be really strange, this PR is purely about cleaning, it does not change the behaviour of the component.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/856#issuecomment-448187576:80,test,tests,80,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/856#issuecomment-448187576,1,['test'],['tests']
Testability,"> Tested by @fredroy and ready to be merged !. Not ready to be merged unfortunately; on Windows, CMake complains:; ```; CMake Error at Sofa/framework/Config/cmake/SofaMacrosInstall.cmake:858 (get_target_property):; get_target_property() called with non-existent target ""ZSTD::ZSTD"".; Call Stack (most recent call first):; applications/plugins/CImgPlugin/CMakeLists.txt:101 (sofa_install_libraries). ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4749#issuecomment-2132471684:2,Test,Tested,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4749#issuecomment-2132471684,1,['Test'],['Tested']
Testability,"> Thanks @sergeiNikolaev for this contribution and making this nice effort of bringing back this work.; > ; > * Is any test available with these new classes?; > * is there any example scene?. @hugtalbot; Here is the test to verify polynomial springs (Python2 scripts). [polynomial_spring_test.zip](https://github.com/sofa-framework/sofa/files/4540453/polynomial_spring_test.zip). The test ""spring_verification.py"" depicts two points (p1, p2) connected with a spring. One point (p1) is fixed, another (p2) is moving in space. The external impact (f_external) to the system could be applied using LinearForceField (you need to make target_force as a Data<> object in order to collect its information, but I have this modification) or ControlPoint (third point (p_control), attached with a linear rest shape spring). In case of a second option, the external force is computed as (p_control - p2)*k_rest_shape_spring.; During the simulation process, the position ""p2"" and forces ""f2"" for point p2, and also the external force or the position of the control point are saved to data files.; The script ""spring_verification_draw_result.py"" loads all data. The strain for spring is computed as ; (norm(p2-p1) - l0) / l0 for PolynomialSpring or as norm(p2-p1) / l0 for RestShapePolynomialSpring.; I use static solver with many iterations to make spring force equal to external force, but I guess it is also possible to compute the spring force as difference f2 - f_external.; Based on this data, a force-strain relation is plotted and compared with polynomial values.; And this is the end of the test. NOTE: Please, keep in mind, that configuration parameters have to be the same for both scripts, in order to get a valid result.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-620055719:119,test,test,119,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-620055719,4,['test'],['test']
Testability,"> Thanks @sergeiNikolaev for this contribution and making this nice effort of bringing back this work.; > ; > * Is any test available with these new classes?; > * is there any example scene?. Thank you for your answer. Yes, there is an example scene, which I also use as a test. But to add it to Sofa I have to remove plugin dependencies from it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-616504586:119,test,test,119,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-616504586,2,['test'],['test']
Testability,"> Thanks again for this nice contribution @nhnhan92; > Sorry I had prepared many similar feedback as @epernod so, some might be duplicated.; > ; > A more general remark, could you point us out the documentation you used to write this code please?; > Do you have an idea of when you would plan to consider rotations around the z axis?; > I also noticed in this paper typical tests for testing accuracy: https://sci-hub.se/10.1007/s00366-020-00974-4 it would be great to get a similar test for the continuous integration!; > ; > If this is too much questions, we can discuss about this live if you'd like. Dear, @hugtalbot,; Thank you for kind supports from you and @epernod. First, I implemented this FF mostly based on two following references:; 1. Book: ""Structural Analysis with the Finite Element Method, Linear static, Vol. 2, chapter 8""; 2. And the most recent paper of our group: https://ieeexplore.ieee.org/document/9247533; On the other hand, at this stage, this FF fairly meets our expectations for the current project. I definitely want to improve it in the near future. However, FEM is not my field (I am basically an end-user) and I have been in the middle of something else, therefore, It is gonna take time for me to be able to complete it. I would love to cooperate with SOFA team to complete it.; I'm sorry, but I'm quite unsure when you said rotation around z-axis (normal axis of the element?). Do you mean the consideration of rotating element around its normal axis? (i.e., co-rotational LARGE method (am I right?)). Right now, my priority is to take the rest two rotation dofs of a node (location rotations of around x and y direction) because, at this moment, I assumed they are zeros. But, so far, I have no idea how to include them; Finally, if it is necessary, I am willing to have a face-to-face discussion as long as I am available. Thank you ; Best,; Nhan",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-773702816:374,test,tests,374,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-773702816,3,['test'],"['test', 'testing', 'tests']"
Testability,"> The [crash that happened on Windows](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3959/CI_CONFIG=windows_vs2019,CI_PLUGINS=options,CI_TYPE=release/13/testReport/SceneTests/applications_plugins_SofaSphFluid_examples/SpatialGridPointModel_scn/) also happens on the master branch on my computer. But I don't understand how it is not detected by the CI. Maybe it is random, it does not crash on mine (but I only tried like 2, 3 times) on msvc; Nevertheless, I dont think this scene is working as intended anyway.... (the particules do not interact with the static mesh)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1657297421:165,test,testReport,165,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1657297421,1,['test'],['testReport']
Testability,"> The right syntax is the following:; > ; > ```c++; > const auto visualHaptionDOFSPtr = sofa::core::objectmodel::New<sofa::component::statecontainer::MechanicalObject<sofa::defaulttype::Rigid3dTypes>>();; > visualHaptionDOF = visualHaptionDOFSPtr.get();; > nodeHaptionVisual->addObject(visualHaptionDOFSPtr);; > visualHaptionDOF->name.setValue(""rigidDOF"");; > ```; > ; > Note that this plugin has not been maintained for a long time. You should expect some changes in order to make it work. Here are some changes I made today to fix the configuration: #4338. But it does not fix the compilation.; > ; > If you succeed to make it work, a pull request would be very welcome ;). We are in the process of adapting the sofa22.12 plugin for homebrew devices, with reference to the Haptic plugin. No problem of course, I'll commit our code as soon as it's aligned and tested.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4336#issuecomment-1841943965:861,test,tested,861,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4336#issuecomment-1841943965,1,['test'],['tested']
Testability,"> The unit tests failure came from the fact that the order of the files changed in the CMakeLists.txt. It highlights the facts that `EXPECT_MSG_EMIT` works only if `MainGtestMessageHandler` is added to the `MessageDispatcher`. But `logging_test.cpp` calls `clearHandlers`. Since `logging_test.cpp` is now sorted before `FileSystem_test.cpp`, it clears the message handler required by `FileSystem_test.cpp`. The message handler must be added in any case, and not relying on the fact that it might have been added earlier. Well done!; I have added the `breaking` flag due to the change of some signatures for some methods",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1480398997:11,test,tests,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3737#issuecomment-1480398997,1,['test'],['tests']
Testability,"> This change makes all tests using the ConstantForceField fail due to a bug in SingleStateAccessor solved in #4917 . To solve the tests, merge #4917 first and rebase. Then, the PR should be fine. #4917 has been integrated (not rebased due to anterior conflicts) and there are still errors because of ; `No input force has been set. Please define one of both Data: forces or totalForce` 🥲. I guess there is an error of logics (if, else, etc) somewhere",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4918#issuecomment-2297674122:24,test,tests,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4918#issuecomment-2297674122,3,"['log', 'test']","['logics', 'tests']"
Testability,"> Updates: I just tried it once more, the caduceus scene now works well for me, I can pick the snake using the mouse with bilaterial now. I will switch to my branch and test it with my scene file now. Ah that is good to know 👍 Keep us in touch !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-976821950:169,test,test,169,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-976821950,1,['test'],['test']
Testability,"> VirtualTypeInfoA was just to allow me to test without breaking other part of Sofa by side effect. So it is clearly temporary, I have not thought about that seriously on how to proceed the transition and if we need a separated VirtualTypeInfoA. Ok that makes sense. Yeah I guess the clean thing would be to swap every usage in SOFA to the new dynamic TypeInfo, and to somehow depreciate the static one. Looks good to me, I look forward to testing it, probably with Eigen types to extend what @Younesssss started.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1552#issuecomment-712798002:43,test,test,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1552#issuecomment-712798002,2,['test'],"['test', 'testing']"
Testability,"> You don't need to add checks, later in the code for: d_componentState.getValue() == sofa::core::objectmodel::ComponentState::Valid; > ; > to avoid crash?. I only have a partial answer:; I tested one time step and it works. I suppose it is because the initialization defines the topology. If the topology is empty, I guess that the later functions just don't iterate over the elements. But it's just a guess.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3400#issuecomment-1282012318:190,test,tested,190,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3400#issuecomment-1282012318,1,['test'],['tested']
Testability,"> [Related to #2089]; > this does not fix the multiple creation of vectors at every timestep in the mechanical objects. Ok, thank you for having done the test.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2076#issuecomment-842967989:154,test,test,154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2076#issuecomment-842967989,1,['test'],['test']
Testability,"> `compliance`. Thanks @hugtalbot,; This works!. I currently don't have access to my UFlorida lab machine that have several versions of sofa built. But I built my sofa v21.06 on my new workstation and have tested it. Adding the compliance term made the mouse grasping works properly with our scenes. I also tested it with the demo/caduceus, with this line: ; ``` xml; <UncoupledConstraintCorrection useOdeSolverIntegrationFactors=""0"" compliance=""184"" "" />; ```; the snake seems still not fully movable by the mouse though.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-1187786897:206,test,tested,206,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-1187786897,2,['test'],['tested']
Testability,"> can you point the test that is not wworking, it is impossible to find it in jenkins menu, even more with a low bandwidth. > Regressions are OK but the error being an unit test `InciseProcessor_test.InciseTriangles`, it is because of `[ERROR] [TriangleSetGeometryAlgorithms(GeomAlgo)] Orthogonal projection failed` I dont really see how it can be a false positive ?. `InciseProcessor_test.InciseTriangles` 😅 ?; https://github.com/sofa-framework/sofa/blob/251fd89b99379aa2f7693095f9399368acdc72ee/Sofa/Component/Topology/Utility/tests/TopologicalChangeProcessor_test.cpp#L362. But for sure the CI jenkins is slow as hell",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4194#issuecomment-1967972725:20,test,test,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4194#issuecomment-1967972725,3,['test'],"['test', 'tests']"
Testability,> do you know why is this fixing the problem @fredroy ?; > ; > Anyway I tested and it works 👍. Because the VisualDrawVisitor is managing both the VisualModels' (drawVisual) and the BaseObject (draw()). ; In this case the added tests were bypassing the BaseObjects' draw(),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4044#issuecomment-1637217987:72,test,tested,72,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4044#issuecomment-1637217987,2,['test'],"['tested', 'tests']"
Testability,"> https://github.com/sofa-framework/sofa/blob/b66d9ad54731b35891645b131efa04eecada3467/SofaKernel/modules/SofaBaseMechanics/SofaBaseMechanics_test/CMakeLists.txt#L15-L19; > ; > ; > ; > @fredroy @guparan this shoud be removed right?. Yes, this test project cannot be loaded anymore by the way.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2955#issuecomment-1128321623:243,test,test,243,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2955#issuecomment-1128321623,1,['test'],['test']
Testability,"> new feature, new unit test?. Thanks for the little push to write the test :+1: ; This actually helped me find a bunch of bugs and inconsistencies in the Links API. I fixed some, made some tests to highlight those I considered as too hard / time-consuming / not-worth-the-effort to fix . - When constructing a link without an owner, a call to `getOwnerBase()` systematically crashed instead of returning a nullptr, because of a bad initialization ; - When calling `setOwner(owner)` on a link with a `nullptr`, a segfault would happen within the function since it tries to call a method on the given owner; - the read() function is SUPER, SUPER buggy, obscure and cryptic. This function alone has tons of potential outcomes depending on whether the link has or not an owner, whether this owner has a context, whether the link is valid, or points to a wrong object type. Even worse, all those outcomes are kind of dependent on whether we're initializing the link, or whether the init visitor already ran on the scene graph. needless to say that this is way too complex, for something as simple by definition as a link.... So to at least get something out of my time, I added a test in SofaSimulationGraph_test/Link_test.cpp which shows most of the results you can get from `read()`, depending on the state of initialization of that link, the state of its owner and the validity of the link path. There's also a test of the setLinkedBase() method in SofaCore_test (BaseLink_test.cpp)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1436#issuecomment-664420820:24,test,test,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1436#issuecomment-664420820,5,['test'],"['test', 'tests']"
Testability,"> shift + left click. Yes I did hold shift down all the time (and I have been using the bilaterial constraints with no issues in sofa v19.12.) . In my case the pink small square shows the same as in your screenshot, however the snake doesn't follow the mouse (such that two pink squares have large distance apart while i moving the mouse). Updates:; I just tried it once more, the caduceus scene now works well for me, I can pick the snake using the mouse with bilaterial now. I will switch to my branch and test it with my scene file now.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-976514790:508,test,test,508,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-976514790,1,['test'],['test']
Testability,> tested and approved on XUbuntu!. Same here (with manjaro up-to-date),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3031#issuecomment-1153713774:2,test,tested,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3031#issuecomment-1153713774,1,['test'],['tested']
Testability,"> the image distance filter test is un-related, so let's pass it to ready right @fredroy. yep, ready !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3393#issuecomment-1295318906:28,test,test,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3393#issuecomment-1295318906,1,['test'],['test']
Testability,"> what's your opinion @jnbrunet ?. Isn't a warning when the scalar template is used a bit intense? I would put a warning if we actually checked that all mechanical objects are of 3d types, and the specified/default template is a scalar. But here, we output a warning without any logic other than the default scalar template was used. Maybe at least remove the warning if the user manually specified that he needed the scalar template?. **EDIT** Sorry, last time I checked the PR, the check was done on the template used, hence the warning was emitted when the scalar template was used. Now it seems to be emitted when the user doesn't manually specify which template he/she wants.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1996#issuecomment-868719470:279,log,logic,279,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1996#issuecomment-868719470,1,['log'],['logic']
Testability,">; using sofa::helper::logging::GtestMessageHandler ;. /// We can define a default policy for a complete class this way so that if not more; /// expectation are given this generates test failures.; class Sofa_test2 : public Sofa_test<float>; {; EXPECT_MSG_NOEMIT_V2(Error) ;; EXPECT_MSG_NOEMIT_V2(Warning) ;; EXPECT_MSG_NOEMIT_V2(Deprecated) ;; };. class TestMessageHandler_test : public Sofa_test2; {; public:; void defaultTestBehavior(); {; msg_deprecated(""HERE"") << ""This should generate a failure"" ;; msg_warning(""HERE"") << ""This should generate a failure"" ;; msg_error(""HERE"") << ""This should generate a failure"" ;; }. void catchingTestBehavior(); {; EXPECT_MSG_EMIT_V2(Warning) ;; EXPECT_MSG_EMIT_V2(Error) ;. msg_warning(""HERE"") << ""This should not generate a failure"" ;; msg_error(""HERE"") << ""This should not generate a test falure"" ;; }. /// THIS TEST SHOULD FAIL.; void expectAMessageissingBehavior(); {; EXPECT_MSG_EMIT_V2(Warning) ;; EXPECT_MSG_EMIT_V2(Error) ;. //msg_warning(""HERE"") << ""This should not generate a failure"" ;; //msg_error(""HERE"") << ""This should not generate a test falure"" ;; }. void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT_V2(Warning) ;; EXPECT_MSG_NOEMIT_V2(Error) ;. msg_warning(""HERE"") << ""This should generate a failure but with line number close to "" << __LINE__ ;; msg_error(""HERE"") << ""This should generate a test falure with line number close to "" << __LINE__ ;; }. void complexTestBehavior(); {; {; EXPECT_MSG_EMIT_V2(Warning) ;; EXPECT_MSG_EMIT_V2(Error) ;. //msg_warning(""HERE"") << ""This should generate a failure"" ;; //msg_error(""HERE"") << ""This should generate a test failure"" ;; {; EXPECT_MSG_NOEMIT_V2(Error) ;; msg_error(""HERE"") << ""This should generate a test failure"" ;; }; }. {; EXPECT_MSG_NOEMIT_V2(Warning) ;; EXPECT_MSG_NOEMIT_V2(Error) ;. msg_warning(""HERE"") << ""This should generate a failure"" ;; msg_error(""HERE"") << ""This should generate a test falure"" ;; }. }; };; ```. PS: if someone says it smell like 'asynchronous' exceptions I agree.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288782643:1727,test,test,1727,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288782643,5,['test'],['test']
Testability,@Ant0nin The conflicts are indeed solved but the test errors remain. See https://www.sofa-framework.org/dash?branch=origin/PR-992; Could you try for instance to run SofaPython_test on your local build?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/992#issuecomment-501325095:49,test,test,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/992#issuecomment-501325095,1,['test'],['test']
Testability,"@Ant0nin all python related tests are failing, could you take a look?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/992#issuecomment-501172441:28,test,tests,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/992#issuecomment-501172441,1,['test'],['tests']
Testability,@Camille-K will you test the suggestion? ; @epernod wanted to be poked here as well to test :),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2925#issuecomment-1136967791:20,test,test,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2925#issuecomment-1136967791,2,['test'],['test']
Testability,"@ChristianDuriez ; One scene was crashing in SensableEmulation plugin : testOmniDriverEmu.scn ; I fixed it by adding the option : ```solveVelocityConstraintFirst=""true""```. I have no idea why actually! Could you give some insight?. I fixed some added warnings, let me know if this was normal:; Note that : ; - in GenericConstraintSolver.cpp line 368 : none of the function parameter (cParams, res1 and res2) were unused.; - in GenericConstraintCorrection.cpp line 277 : the complianceFactor is not used. What appears really necessary, is to have some documentation on this constraint pipeline. This could be a good task for the STC#5 don't you think?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459#issuecomment-390153258:72,test,testOmniDriverEmu,72,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459#issuecomment-390153258,1,['test'],['testOmniDriverEmu']
Testability,"@ErwanDouaille , It's not exactly what I meant:. I would like to keep Sofa's GUI as is (not batch mode or anything like that.; What I would like to be able to do though, is grabbing only the scene of sofa.; An example might be more explicit: This picture is a screenshot of a Sofa scene where my component grabs the OpenGL viewport with glReadPixels() and then displays it back in Sofa's scene.; If everything would work as I want it to, this scene shouldn't do anything (the grabbed image would be the displayed image, so I would constantly have the classic black background with the SOFA logo. Instead though, I'm getting the whole UI on the left, the menu on top and runSofa's counter bar at the bottom.; ![screengrabber](https://user-images.githubusercontent.com/13734391/36718977-fcf8a99e-1ba3-11e8-8b62-ec2f9c9dc431.png). (In addition the framebuffer is flipped on the X axis but that's just a bug in my code... =); The purpose of this is to perform image processing directly on the scene that's generated in Sofa. In the case of the new GUI, you could imagine a scene that has multiple cameras, displaying in multiple widgets, and be interested in performing some post processing stages on these generated frames, so being able to retrive the framebuffer coming from those widgets could be useful.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/600#issuecomment-368793399:590,log,logo,590,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/600#issuecomment-368793399,1,['log'],['logo']
Testability,"@ErwanDouaille your remark makes sense. ; There are several points to be aware of:; - installing a X server on the slaves will take time; - it may destabilize the build slave (?) (disc space, unforeseen problem running a GUI server on a headless machine,...); - and I agree: if we do it, the next step should be to test all existing GUIs",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/538#issuecomment-360786622:315,test,test,315,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/538#issuecomment-360786622,1,['test'],['test']
Testability,"@EulalieCoevoet , @VannesteFelix can one of you test this branch with our plugins SoftRobots & MOR on the big's felix machine to see if this work well ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/834#issuecomment-440584625:48,test,test,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/834#issuecomment-440584625,1,['test'],['test']
Testability,"@EulalieCoevoet Thank you for reporting the error (too bad it skipped the reviews 😕); By any chance, would have a simple scene to submit as a test? thanks ! 😙",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2265#issuecomment-886453383:142,test,test,142,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2265#issuecomment-886453383,1,['test'],['test']
Testability,"@EulalieCoevoet apparently one of the change does change something, some (all?) scenes using this plugin) crashes:; ```; [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples/ArticulatedArm.robot.py](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples_ArticulatedArm/robot_py/); [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples.ArticulatedHierarchyBVHController.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples/ArticulatedHierarchyBVHController_scn/); [SceneTests.applications/plugins/ArticulatedSystemPlugin/examples.ArticulatedSystemMapping.scn](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-3751/CI_CONFIG=fedora_clang,CI_PLUGINS=options,CI_TYPE=release/3/testReport/junit/SceneTests/applications_plugins_ArticulatedSystemPlugin_examples/ArticulatedSystemMapping_scn/); ```; The trace tells it crashes here:; ```; sofa::component::mapping::ArticulatedSystemMapping<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<1u, double>, sofa::type::Vec<1u, double>, double>, sofa::defaulttype::StdRigidTypes<3u, double>, sofa::defaulttype::StdRigidTypes<3u, double> >::applyJT(sofa::defaulttype::MapMapSparseMatrix<sofa::type::Vec<1u, double> >&, sofa::defaulttype::MapMapSparseMatrix<sofa::defaulttype::RigidDeriv<3u, double> > const&, sofa::defaulttype::MapMapSparseMatrix<sofa::defaulttype::RigidDeriv<3u, double> >*); ```; so maybe the typo was not one... 🧐😅",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3751#issuecomment-1489730917:335,test,testReport,335,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3751#issuecomment-1489730917,3,['test'],['testReport']
Testability,"@EulalieCoevoet is right, changing parameter without warning is bad ; @hugtalbot it is very easy, there is two options. One consist in adding some test in the init() function of the component to detect if the data is set or not by the user and provide the adequate message. The other is to add a dedicated rules in the SceneChecker at the following of: ; ```cpp. void SceneCheckAPIChange::installDefaultChangeSets(); {; addHookInChangeSet(""17.06"", [](Base* o){; if(o->getClassName() == ""RestShapeSpringsForceField"" && o->findData(""external_rest_shape"")->isSet()); msg_warning(o) << ""RestShapeSpringsForceField have changed since 17.06. The parameter 'external_rest_shape' is now a Link. To fix your scene you need to add and '@' in front of the provided path. See PR#315"" ;; }) ;. addHookInChangeSet(""17.06"", [](Base* o){; if(o->getClassName() == ""BoxStiffSpringForceField"" ); msg_warning(o) << ""BoxStiffSpringForceField have changed since 17.06. To use the old behavior you need to set parameter 'forceOldBehavior=true'"" ;; }) ;; ```. @fredroy Eulalie also report that there was some changes in the way shaders are pass to components and that old working behavior stopped working without warnings so adding warning in the same way would be nice (@EulalieCoevoet).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/338#issuecomment-334521674:147,test,test,147,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/338#issuecomment-334521674,1,['test'],['test']
Testability,"@EulalieCoevoet there is an issue with the test, do you have time within the 7 upcoming days to have a look at it ? either the test needs to be updated, or the code to be fixed. Let us know if you don't ;)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459#issuecomment-365541425:43,test,test,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459#issuecomment-365541425,2,['test'],['test']
Testability,"@JeremieA ; Hi Jeremie, as you might know, I am currently working on multithreaded simulation with SOFA.; In this PR, I propose to remove the checkValidStorage() test in Node::ExecuteVisitor function because it prevents some parallel execution and also suggest to remove the thread specific declaration for ExecParams variable.; Do you see a reason to keep the ExecParams specific for each thread?; I especially noticed accessing the thread local memory of a thread A from the thread B with these different ExecParams is significantly slow (~20%) . ; Your opinion would be valuable for us. Thanks!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1129#issuecomment-526090929:162,test,test,162,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1129#issuecomment-526090929,1,['test'],['test']
Testability,@ScheiklP your case (topological changes) where you have `n==0` seems to be legit. So I would not emit a warning. The unit tests are probably to be changed,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3529#issuecomment-1341375305:123,test,tests,123,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3529#issuecomment-1341375305,1,['test'],['tests']
Testability,"@alxbilger . > Hello, I think the actual error is in the output of the Cmake Gui(bottom part), could you copy-paste it ?. Sorry for the delay, here is the log output:; ```; The C compiler identification is Clang 10.0.0; The CXX compiler identification is Clang 10.0.0; Check for working C compiler: /usr/bin/clang; Check for working C compiler: /usr/bin/clang -- works; Detecting C compiler ABI info; Detecting C compiler ABI info - done; Detecting C compile features; Detecting C compile features - done; Check for working CXX compiler: /usr/bin/clang++; Check for working CXX compiler: /usr/bin/clang++ -- works; Detecting CXX compiler ABI info; Detecting CXX compiler ABI info - done; Detecting CXX compile features; Detecting CXX compile features - done; Setting build type to Release as none was specified.; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /home/giang/sofa/build/install; Adding library Sofa.Config; Using legacy headers is enabled.; Headers from v21.12 are usable, but it is advised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; Found Json: /home/giang/sofa/src/extlibs/json (Required is at least version ""3.1.2"") ; Found STB: /home/giang/sofa/src/extlibs/stb ; Found DIFFLIB: /home/giang/sofa/src/extlibs/difflib ; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python (found version ""3.8.10"") ; Looking for pthread.h; Looking for pthread.h - found; Performing Test CMAKE_HAVE_LIBC_PTHREAD; Perf",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:155,log,log,155,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815,1,['log'],['log']
Testability,"@alxbilger is that `TEST(SparseLDLSolver, EmptyMState)` and `TEST(SparseLDLSolver, EmptySystem)`?; Just removing the `EXPECT_MSG_EMIT(Warning);` is probably also not what we want, right?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3529#issuecomment-1341494734:20,TEST,TEST,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3529#issuecomment-1341494734,2,['TEST'],['TEST']
Testability,"@bakpaul . > I call that 'un doigt dans l'engrenage', nice !. Yes... > But then I don't fully agree on the protected part : it might become cumbersome to test them in unit test with such protection. It is exactly what happens now. However, I believe that the tests should not drive the design of a class. Today, I don't have a solution to test the protected methods (even if it's theoretically possible). So I am not against keeping them public.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4943#issuecomment-2317112884:154,test,test,154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4943#issuecomment-2317112884,4,['test'],"['test', 'tests']"
Testability,"@bakpaul I used your scene for benchmarks and updated the PR description accordingly. However, I don't observe the artefact your mention, even when going step by step.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1640372331:31,benchmark,benchmarks,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1640372331,1,['benchmark'],['benchmarks']
Testability,"@bakpaul Strange, I checked again (with and without parallelization) and I don't have the artefact you have. `ShewchukPCGLinearSolver` is not a difference because you use an alias of it (`PCGLinearSolver`). In the benchmark I translated the beam to measure mainly the contacts and skip the falling part. But I still don't see the artefact when I remove the translation.; @fredroy @hugtalbot would you like to test this branch with the scene provided by @bakpaul ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1641710748:214,benchmark,benchmark,214,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1641710748,2,"['benchmark', 'test']","['benchmark', 'test']"
Testability,"@bakpaul This PR does not take the latest commits in sofa-framework/ci. Hence, it does not fetch and compile the plugin CSparseSolvers. Here is what I see in the logs:; ```; --------------- Clone CI scripts ---------------; pwd = /builds/workspace/sofa-framework/PR-4258/ubuntu_gcc_options_release; Cloning into 'ci'...; 640400517e592bfa826a46dea29b6ddd512abf02 Merge pull request #21 from hugtalbot/202308_remove_meshsteploader_from_list; CI scripts are available in /builds/workspace/sofa-framework/PR-4258/ubuntu_gcc_options_release/ci/scripts; ```; It's not the latest commit in the master branch. Can you investigate why?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4258#issuecomment-1822533494:162,log,logs,162,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4258#issuecomment-1822533494,1,['log'],['logs']
Testability,"@bakpaul thanks for the benchmark. Yes, I would like your scene to investigate both the behavior and the performances (I am a bit disappointed so far).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1633694721:24,benchmark,benchmark,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1633694721,1,['benchmark'],['benchmark']
Testability,"@bakpaul you were right, and it is fixed now in https://github.com/sofa-framework/sofa/pull/4138/commits/c349e111debbcb377c5bbb7ad68610c15f336c52. Here is my benchmark:. ```; CGLinearSolver template=""CompressedRowSparseMatrixMat3x3d"". [INFO] [BatchGUI] 1000 iterations done in 72.7944 s ( 13.7373 FPS). Steps Duration Statistics (in ms) :; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 40.29 110.35 72.73 8.91 72732.7 100 TOTAL; 1 0 1 40.29 110.32 72.73 8.91 72.73 100 .Simulation::animate; 2 0.01 1 0 0.07 0 0 0 0 ..BehaviorUpdatePositionVisitor; 2 0.01 1 0 0.03 0 0 0 0.01 ..UpdateInternalDataVisitor; 2 0.01 1 0 0.04 0.01 0 0.01 0.01 ..resetConstraint; 2 0.02 1 0 0.02 0 0 0 0 ..collision; 2 0.03 1 0 0.03 0 0 0 0 ..propagateIntegrateBeginEvent; 2 0.03 1 0 0.02 0 0 0 0 ..beginIntegration; 2 0.03 1 0 0.07 0 0 0 0 ..buildConstraintMatrix; 2 0.03 1 0 0.03 0.01 0 0.01 0.01 ..accumulateMatrixDeriv; 2 0.04 1 40.07 109.99 72.48 8.91 72.48 99.65 ..solve; 3 0.04 1 40.07 109.98 72.47 8.90 72.47 99.65 ...Mechanical; 4 0.07 1 2.07 4.47 2.45 0.33 2.45 3.37 ....ComputeForce; 4 2.52 1 1.11 3.14 1.37 0.29 1.37 1.89 ....ComputeRHTerm; 4 3.89 1 34.04 71.94 36.80 2.11 36.80 50.60 ....MBKBuild; 5 3.90 1 34.03 71.91 36.79 2.11 36.79 50.58 .....CG-setSystemMBKMatrix; 6 3.90 1 0.03 0.21 0.04 0.01 0.04 0.05 ......getContributors; 6 3.94 1 0.02 0.17 0.02 0.01 0.02 0.03 ......buildMappingGraph; 6 3.96 1 0.25 2.56 0.72 0.17 0.72 0.98 ......InitializeSystem; 7 3.97 1 0.06 1.35 0.36 0.10 0.36 0.50 .......resizeSystem; 7 4.33 1 0.01 1.22 0.32 0.08 0.32 0.44 .......clearSystem; 7 4.65 1 0.02 0.27 0.03 0.01 0.03 0.04 .......initializeLocalMatrices; 6 4.68 1 33.38 71.55 36 2.08 36 49.49 ......AssembleSystem; 7 4.68 1 33.35 49.36 35.94 1.80 35.94 49.41 .......buildMatrices; 8 4.68 1 32.79 49.09 35.44 1.78 35.44 48.72 ........buildStiffness; 8 40.13 1 0.25 1.33 0.49 0.12 0.49 0.67 ........buildMass; 8 40.61 1 0 0.02 0 0 0 0.01 ........buildDamping; 8 40.62 1 0 0.02 0 0 0 0 ........buildGeometri",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717164532:158,benchmark,benchmark,158,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1717164532,1,['benchmark'],['benchmark']
Testability,@courtecuisse removed some compilation warnings from sofa . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/361:311,test,test,311,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/361,2,['test'],['test']
Testability,"@damienmarchal , discussions during the SOFA-dev meeting lead to a question over the developed design and your opinion is needed. . The problem was that some scenes tests where crashing at exit. This is due to the SofaPython3 cache (`s_objectcache` there https://github.com/sofa-framework/SofaPython3/blob/1b5d271aa21df06c4c5ab75599e364adb0c1e9be/Plugin/src/SofaPython3/DataHelper.cpp#L252C1-L252C73) . The problem was that this is a static object containing python objects and is thus cleaned at the very end of the program exit, after the python interpreter, which is not authorized. . To fix it, following [pybind11 suggestions](https://pybind11.readthedocs.io/en/stable/advanced/misc.html) I've added a member to the module Sofa.Core that insured that the cleanup is called while the interpreter is still alive (see the PR https://github.com/sofa-framework/SofaPython3/pull/425). But is was not enough because the interpreter is not cleaned correctly either : the static method ""Release"" of SofaPython3, in charge of cleaning up python and deleting the interpreter was never called when launching scene in runSofa. . This lead to the need of cleaning up *explicitly* the plugin before exiting the main function. This design was not liked by every dev, some wanting a Raii-like cleanup, in the destructor of some member, which is in my mind not possible because the interpreter instance is static in the SofaPython3 plugin and thus we have no guaranty that it would not be deleted before any other static member.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4828#issuecomment-2233357216:165,test,tests,165,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4828#issuecomment-2233357216,1,['test'],['tests']
Testability,"@damienmarchal ; Sorry I did not pay attention that `BaseTest` reside in SofaHelper so that is fine, I thought your idea was to implement a new library dedicated to the abstraction api for testing with sofa, ie a kind of lightweight SofaTest library.; I was not really aware that there was code inside SofaKernel libraries that directly depend on gtest, I thought it was still kept ""optional"" (ie that gtest has become mandatory on master for some time, wether or not you build and execute unit tests). ; We are still used to developping with the ""idea"" that gtest is optional, even though in reality there is no use case were we do not include it. Coming back at this PR, to be honest I don't believe there is a functionality in the BaseTest classes (apart from the fact that it removes dependencies) that I would like to use, because mostly : ; - we do not currently have a use for message api, or at least we do not have any idea about why it could be beneficial for us to start using it.; - I d like to discourage the use of one size fits all epsilon and comparison values for floating points arithmetic, since I prefer people to actually think about the quantities they want to compare. Comparing floats in a consistent fashion is harder than it looks, with the exception when you expect that the quantities you want to compare to be strictly equal. So having a Base test class which provides these comparison facilities is also not something I am particularly looking for. There are some abstractions attempts in SofaTest that I find interesting ( linearisation tests for the most part ) but it got snowed under a dependency bloat. . However that being said, the only thing I'd like, is that if I implement a test just using the ""vanilla"" gtest library, it can be merged, built and run easily on the master. With the current state of things, integrating a new test in `framework_test`, requires you to build all sofa, and not just `SofaCore` as I would have expected. So in return you have to wa",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/471#issuecomment-338710224:189,test,testing,189,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/471#issuecomment-338710224,2,['test'],"['testing', 'tests']"
Testability,"@damienmarchal @courtecuisse I have tested the mapping and done the change requested but I'm not able to push the change in mimesis-inria/sofa , any idea why?; If complicated I can recreate a PR...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1203#issuecomment-552047154:36,test,tested,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1203#issuecomment-552047154,1,['test'],['tested']
Testability,"@damienmarchal @hugtalbot , stupid question. How can I write a test for a GUI ? I don't see any tests for qt/glut ... :/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/538#issuecomment-356577080:63,test,test,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/538#issuecomment-356577080,2,['test'],"['test', 'tests']"
Testability,@damienmarchal Could you have a look at my recent commits (particularly https://github.com/sofa-framework/sofa/pull/586/commits/661d7609897dda39bf7f11d0e232e4799f3176f6) please?; [ci-build][with-scene-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/586#issuecomment-371075952:201,test,tests,201,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/586#issuecomment-371075952,1,['test'],['tests']
Testability,"@damienmarchal Could you take a look at the 8 failing scene tests?; All of them are ""required data"" errors.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/825#issuecomment-439840761:60,test,tests,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/825#issuecomment-439840761,1,['test'],['tests']
Testability,@damienmarchal Did you notice the unit test failures? It's about PSL.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/540#issuecomment-357206293:39,test,test,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/540#issuecomment-357206293,1,['test'],['test']
Testability,"@damienmarchal Even if these new components are trivial, you are right and I did push some tests for them.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/147#issuecomment-278908596:91,test,tests,91,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/147#issuecomment-278908596,1,['test'],['tests']
Testability,"@damienmarchal I added a `UnableToOpenFile()` function and modified ""MeshTrian.cpp"" accordingly, for now. Could you check if I am in right direction? If I am, I would follow up with changes in other loader and components. **Caution**: I couldn't test if it actually works! Because, a function `findfile(filename)` exists to check if file exists. So, to make `fopen()` purposely fail, even after supplying correct filename, I tried changing permissions with `chmod uga-r MeshTrian.cpp`, but it didn't report any error even with sofa's official master version. I tried couple other ways to purposely fail `fopen()` but they didn't work. Anyway, since the code looked fine, and to receive feedback, I will make a PR shortly.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/197#issuecomment-381862958:246,test,test,246,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/197#issuecomment-381862958,1,['test'],['test']
Testability,@damienmarchal I have added a RegularGridTopology_test. In fact I don't think GridTopology is used like this as a component. It is more a mother class for Regular/Cylindrical and sphereGridTopology (which each has tests now),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/270#issuecomment-301436164:214,test,tests,214,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/270#issuecomment-301436164,1,['test'],['tests']
Testability,"@damienmarchal no idea, but it cannot come from this PR as it only defines macros w/o using them.; Is the crashing test based on random parameters?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/165#issuecomment-278911300:115,test,test,115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/165#issuecomment-278911300,1,['test'],['test']
Testability,"@damienmarchal ok for the test. To have an example, could you point me out an example of test done in a plugin. Thanks.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/133#issuecomment-273408076:26,test,test,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/133#issuecomment-273408076,2,['test'],['test']
Testability,"@damienmarchal sure ? it's look like the test is still failing, isn't it ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/304#issuecomment-314827432:41,test,test,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/304#issuecomment-314827432,1,['test'],['test']
Testability,@damienmarchal tests are fixed (modifying a map while iterating it is always bad...) ; a failure on gcc5.4 but it seems to be the hiccup failing test.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/301#issuecomment-311932799:15,test,tests,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/301#issuecomment-311932799,2,['test'],"['test', 'tests']"
Testability,"@damienmarchal that does make sense, indeed. With all the qml I've been doing I could have thought of that.. I'll change it again :). I'd love your input on the tests also, if possible.; I would like to test the change in behavior compared to the previous implementation but I don't know how I could do that.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/917#issuecomment-466507138:161,test,tests,161,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/917#issuecomment-466507138,2,['test'],"['test', 'tests']"
Testability,@damienmarchal why aren't you fixing the tests directly in this PR?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/453#issuecomment-335177317:41,test,tests,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/453#issuecomment-335177317,1,['test'],['tests']
Testability,"@damienmarchal, I am talking about these xml files:; ```; [ RUN ] BilateralInteractionConstraint_test/1.attributesTests; bash: line 1: 2202 Segmentation fault build/bin/SofaConstraint_test --gtest_output=xml:build/tests/SofaConstraint_test/report.xml 2>&1; ```. (copied from https://ci.inria.fr/sofa-ci/job/centos_clang-3.4_options/262/console). But I think @guparan is working on the subject.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/191#issuecomment-283708840:214,test,tests,214,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/191#issuecomment-283708840,1,['test'],['tests']
Testability,@dessteph I prepared the test in Sofa/Component/LinearSolver/Direct/tests/SparseLDLSolver_test.cpp. Could you add the check of the result at the end? You will need to use another software (matlab?) to compute the ground truth and compare it to the variable `JMInvJt` containing our result. Thanks,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3010#issuecomment-1174910942:25,test,test,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3010#issuecomment-1174910942,2,['test'],"['test', 'tests']"
Testability,"@epernod ; When making tests I generally try to tests either all the code-path or if this is too big, to test at least each added function with several values (eg: one with valid values and one with wrong one). . For examples of tests on a Class you can have at the test added in: ; https://github.com/sofa-framework/sofa/pull/119/files. For examples of tests on a component you can have look at the last Eulalie's PR (; https://github.com/sofa-framework/sofa/pull/108); and specifically at: ; https://github.com/SofaDefrost/sofa/blob/0df8da53458d64ed22b1cd2807555838e23ef0cf/SofaKernel/modules/SofaEngine/SofaEngine_test/BoxROI_test.cpp; you can also tests as in PR https://github.com/sofa-framework/sofa/pull/105 (interesting examples as they show how use ExpectMessage/MessageAsTestFailure to detect that a message has not been sended by the component); and more specifically in: ; https://github.com/SofaDefrost/sofa/blob/65a113512104f0237a4c4bf5e6f05b2c1d6a7013/SofaKernel/modules/SofaBaseCollision/SofaBaseCollision_test/DefaultPipeline_test.cpp. PS: I'm not saying this a super perfect tests but may gave you and idea on the direction to go.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/133#issuecomment-273766830:23,test,tests,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/133#issuecomment-273766830,8,['test'],"['test', 'tests']"
Testability,"@epernod Can you have a look on my changes in TopologyChecker. I had to add this to satisfy the unit tests in TopologyChecker_test. Otherwise, it crashes.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3962#issuecomment-1600807973:101,test,tests,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3962#issuecomment-1600807973,1,['test'],['tests']
Testability,@epernod Could you quick review the commit 47ef2e63a80c please? How could CubeTopology.scn have been passing scene-tests without this fix?; (request from @damienmarchal),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/548#issuecomment-358257329:115,test,tests,115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/548#issuecomment-358257329,1,['test'],['tests']
Testability,@epernod Did you managed to make some tests ? . EDIT: up :),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/133#issuecomment-275694634:38,test,tests,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/133#issuecomment-275694634,1,['test'],['tests']
Testability,@epernod I just simplified the code and added some readyOnly properties; Maybe you could test before merge.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1495#issuecomment-741936553:89,test,test,89,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1495#issuecomment-741936553,1,['test'],['test']
Testability,@epernod I needed to have two different names for the same test:; - one when edges are computed from an existing triangle topology; - and one when edges are computed from hexa.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1335#issuecomment-614777371:59,test,test,59,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1335#issuecomment-614777371,1,['test'],['test']
Testability,"@epernod If I am not wrong, if you have n=[2,2,2] your code will give dim=0 where it should give dim=3.; Only a test could check that ;)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/270#issuecomment-305456930:112,test,test,112,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/270#issuecomment-305456930,1,['test'],['test']
Testability,@epernod Would you like to test this PR?. [ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2141#issuecomment-952910634:27,test,test,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2141#issuecomment-952910634,2,['test'],"['test', 'tests']"
Testability,@epernod for sure ComponentState is not used in the simulation graph (maybe it should...).; ; But even if it was the case we would still need at least an assert at the entry of each functions in case the caller is not respecting the callee's precondition of being in a valid state.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/163#issuecomment-278903426:154,assert,assert,154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/163#issuecomment-278903426,1,['assert'],['assert']
Testability,@epernod should add to non regression tests,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1260#issuecomment-591341951:38,test,tests,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1260#issuecomment-591341951,1,['test'],['tests']
Testability,"@epernod thanks for having taken the time to test this feature, and reporting the bug",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2141#issuecomment-964171394:45,test,test,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2141#issuecomment-964171394,1,['test'],['test']
Testability,@epernod this PR fixes ParticleSink alright but two other tests fail _because_ of the new msg_error() in [ParticleSink.inl](https://github.com/sofa-framework/sofa/blob/aeea55fbd91e165ee323e3f4fcecb2e430135328/applications/plugins/SofaSphFluid/src/SofaSphFluid/ParticleSink.inl#L82) 😅,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2026#issuecomment-823852998:58,test,tests,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2026#issuecomment-823852998,1,['test'],['tests']
Testability,"@epernod yes, these functions are the one used to queue in the object's message log all the msg_info/warnig/error/deprecation. ; basically this means that when an object receive a new message increment the component_state counter so we can detect ""something happened"". . On day we may wonder if, for msg_error() the component_state shouldn't be flipped to ""Invalid"", but for the moment the state counter is just ""incremented"" but not changed.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2397#issuecomment-943187451:80,log,log,80,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2397#issuecomment-943187451,1,['log'],['log']
Testability,@epernod you can test the perf aspects it compiles with #1131 ;),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1093#issuecomment-526513207:17,test,test,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1093#issuecomment-526513207,1,['test'],['test']
Testability,"@etienneschmitt, thank you for the test. ; ; The dashboard seems to report there is problem with the added test: ; https://www.sofa-framework.org/dash/?branch=pr/fix_vtkloader. EDIT1: isn't the file 'vox8_binary.vtk' missing ?. Apart from the dashboard issue i would say:; +1 for the use of c++x11 ; +1 for the test ; +1 for the new feature ; :). As @thomas-lemaire was assigned by Mathieu to this PR I assume having its feedback is important before merging.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/72#issuecomment-265752803:35,test,test,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/72#issuecomment-265752803,3,['test'],['test']
Testability,"@fredroy Could you check from https://github.com/sofa-framework/sofa/pull/2551 that this file should not be on git?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3285:656,test,test,656,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3285,2,['test'],['test']
Testability,@fredroy Do you have some time to take a look?; [ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1069#issuecomment-498992413:68,test,tests,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1069#issuecomment-498992413,1,['test'],['tests']
Testability,"@fredroy I really like the Raw String Litteral, . The FileMonitor test is probably not related with your PR, It is an old bug that was soved last week...but maybe it wasn't @bcarrez ...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/158#issuecomment-276366449:66,test,test,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/158#issuecomment-276366449,1,['test'],['test']
Testability,@fredroy Thanks a lot for the tests. I'll investigate,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1432650987:30,test,tests,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1432650987,1,['test'],['tests']
Testability,@fredroy Thanks for trying.; So the regression depends on the OS. Great!; I added a regression test for this scene in https://github.com/sofa-framework/sofa/pull/4055,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1643591728:95,test,test,95,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1643591728,1,['test'],['test']
Testability,@fredroy This change seems to have a bad impact on the performances. I noticed that on the caduceus. Could you test it on your end?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2458#issuecomment-964167988:111,test,test,111,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2458#issuecomment-964167988,1,['test'],['test']
Testability,@fredroy any progress on this one ? I tested and It worked like a charm ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1837#issuecomment-786017626:38,test,tested,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1837#issuecomment-786017626,1,['test'],['tested']
Testability,@fredroy could you try to add :; ``` cpp; Inherit::init();; ```. to call Mapping `init()` which include the function `testMechanicalState()` checking the `isMechanical` property.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3473#issuecomment-1325267101:118,test,testMechanicalState,118,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3473#issuecomment-1325267101,1,['test'],['testMechanicalState']
Testability,@fredroy in recent builds the test are failling can you have a look.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/301#issuecomment-311276205:30,test,test,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/301#issuecomment-311276205,1,['test'],['test']
Testability,@fredroy thanks for the benchmark. I am pleased with the results.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4248#issuecomment-1776632509:24,benchmark,benchmark,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4248#issuecomment-1776632509,1,['benchmark'],['benchmark']
Testability,@fredroy thanks for the info... Here are the corresponding lines on windows: ; Adding Plugin CImgPlugin; -- Could NOT find JPEG (missing: JPEG_LIBRARY JPEG_INCLUDE_DIR) ; -- Could NOT find TIFF (missing: TIFF_LIBRARY TIFF_INCLUDE_DIR) . So we either need to install the imagemagick approach (I assume when CIMg cannot do something with a file it calls imagemagick) or to install the JPEG/TIFF libraries on windows/centos/macos. . I also wonder if CMakeLists.txt use conditionnal for JPEG why the tests are done unconditionally ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/460#issuecomment-335465320:496,test,tests,496,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/460#issuecomment-335465320,1,['test'],['tests']
Testability,@fredroy you have test failures,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1226819678:18,test,test,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3241#issuecomment-1226819678,1,['test'],['test']
Testability,"@fredroy you wanted some tests.... I have added ""some""... I know 2 are failing but I think the mesh is wrong. I will fix that in another PR",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1594#issuecomment-806988625:25,test,tests,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1594#issuecomment-806988625,1,['test'],['tests']
Testability,"@fredroy, @guparan In this PR just wanted to have the exception message related with the Image_test. Here it is: ; ```; unknown file; C++ exception with description ""[instance(0,0,0,0,0x0,non-shared)] CImg<unsigned char>::load(): Failed to recognize format of file '/Users/sofa/jenkins/workspace/mac_clang-3.4_options/pr/all/applications/plugins/image/image_test/scenes/lena.jpg'."" thrown in the test body.; ```. Any idea why ? Could it be the image CImg library compiled without jpg support or something like that ? . EDIT: Ok I fixed this one...it is because ImageMagick is not install on some machine and thus CImg does not handle jpg. @guparan (I have installed ImageMagick on sofa-centos). . EDIT2: I updated the mac. I remember that CImg need to install external tool on windows. But don't remember which one...maybe it was imagemagick also. @guparan would you have some time to dig into that ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/460#issuecomment-335427052:396,test,test,396,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/460#issuecomment-335427052,1,['test'],['test']
Testability,"@gaurab4163 ; yes sorry for the missunderstood, the files should be placed in a new folder named: SofaKernel/framework/sofa/helper/messaging/; not in logging/; Could you change your commit and move the files. Thx.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/639#issuecomment-387664299:150,log,logging,150,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/639#issuecomment-387664299,1,['log'],['logging']
Testability,"@ggrosshenny ; Thank you for you PR. Being able to save timing in JSON is a very nice idea and as more and more sofa component are using JSON so it make sense to have that. . Now, some feedback about the implementation:; - There is a lot of new functions but there is not test for any of them. . - The way you handle errors in the binding code is now deprecated as it was not following the python standard. The proper way is that failure in binding code must return NULL (and not Py_RETURN_NONE). You can add an execption and a custom message with PyErr_SetString(...) but you don't need to do that when the failure is because of PyArg_ParseTuple...as it set the message itself so that it is standardized. . So, it should be like that: ; ```cpp; if(!PyArg_ParseTuple(args, ""sO"", &id, &tempNode)); return NULL;; ```; Instead of:; ```cpp; if(!PyArg_ParseTuple(args, ""sO"", &id, &tempNode)); {; PyErr_BadArgument();; Py_RETURN_NONE;; }; ```. - You are commenting the python binding code using doxygen, thank you very much for that ! As these are python functions it would be great if you could also provide python docstrings (as this is the python standard of documenting code). You are using the SP_MODULE_METHOD macro which have and empty docstring by default... sofa is missing a macro one to specify the docstring (it exists for SP_CLASS_METHOD_DOC). So to document you functions you first need to add a new macro close to SP_MODULE_METHOD with:; ```cpp; #define SP_MODULE_METHOD_DOC(MODULENAME,M, D) {#M, MODULENAME##_##M, METH_VARARGS, D},; ```; Then you can document the python code in a way similar to when using ""SP_CLASS_METHOD_DOC"". . - the externals libraries should be in the repository extlibs/* so sofa/helper/json.hpp should be moved there. - I have no opinion whether the JSON output should be activated only when the json.hpp is found or if we should systematically ship this lib with sofa. @hugtalbot probably have better opinion on these aspects as this have connection with the Licens",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/360#issuecomment-322555885:272,test,test,272,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/360#issuecomment-322555885,1,['test'],['test']
Testability,@guparan & @fredroy ; I think I fixed the test failure problem on centos & ubuntu by removing the ; add_target_library( gtest ) in Sofa_test.; Don't ask me why it remove the failure at release I don't know ;),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/471#issuecomment-343492858:42,test,test,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/471#issuecomment-343492858,1,['test'],['test']
Testability,@guparan +for the typo and for the careful reading. Thanks.; With the new condition the macro is now equivalent to something like EXPECT_ATLEAST_TWO_FAILURES ? But as you can see in the dashboard this is not what the tests are expecting as there is now one new test failure reported in the dashboard.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/604#issuecomment-370721309:217,test,tests,217,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/604#issuecomment-370721309,2,['test'],"['test', 'tests']"
Testability,"@guparan : good question. Actually I also believe it should be split to actually match the current architecture. That is to say each library gets its own test exectuable ( provided one exist ). But for me that was beyond the scope of this pull request, which was to propose the removal of the `SofaTest` dependency from the `framework_test` executable, for the aforementioned reasons.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/455#issuecomment-335459601:154,test,test,154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/455#issuecomment-335459601,1,['test'],['test']
Testability,"@guparan : however for example unit tests inside SofaCore / SofaDefaullttype / SofaHelper cannot rely on a Sofa specific testing abstraction layer written on top of gtest, if the guildeline is that a unit test executable can be run solely by linking against the library it is designed to test.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/471#issuecomment-338632890:36,test,tests,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/471#issuecomment-338632890,4,['test'],"['test', 'testing', 'tests']"
Testability,@guparan ; I don't think this is a regression. . This test fails on MacOS from time to time because of a timeout. It was described by @bcarrez somewhere (i'm searching:)). We should propably re-create a new issue because this is something that need to be fixed. EDIT: I didn't find where it was described by bruno so let me describe it better. The problem is related to the fact that the test are using a delay to wait the OS to notify the application a file has changed...but on MacOS the delay is not big enough causing the test to fail.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/105#issuecomment-273806468:54,test,test,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/105#issuecomment-273806468,3,['test'],['test']
Testability,"@guparan @epernod , I just tested the compilation again (without my patch) and I realized that SOFACUDA_DOUBLE has nothing to do with this issue, I was wrong about that. On my setup, the compilation does not works regardless of the SOFACUDA_DOUBLE option. I'm a bit surprized it works on your side. Here are information on my setup:; OS => Fedora 29; NVCC version => V10.1.105; CMake variable SOFACUDA_ARCH=sm_60; CMake variable CUDA_VERSION=10.1. And here are the output errors from ninja:. ```; [1/96] Building NVCC (Device) object applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o; FAILED: applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o ; cd /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda && /usr/bin/cmake -E make_directory /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/. && /usr/bin/cmake -D verbose:BOOL=OFF -D build_configuration:STRING=Release -D generated_file:STRING=/home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/./SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o -D generated_cubin_file:STRING=/home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/./SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o.cubin.txt -P /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o.Release.cmake; /home/abernard/Workspace/sofa/src_master/applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaStandardTetrahedralFEMForceField.cu(1251): warning: variable ""threads2"" was declared but never referenced. /home/abernard/Workspace/sofa/src_master/applications/plugi",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484158057:27,test,tested,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484158057,1,['test'],['tested']
Testability,@guparan @fredroy there is still 66 regressions on Ubuntu.. maybe a [ci-build][force-full-build][with-all-tests] will help,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1175997285:106,test,tests,106,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1175997285,1,['test'],['tests']
Testability,@guparan @hugtalbot the scene has not been ignored despite the file .scene-tests,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2804#issuecomment-1108158984:75,test,tests,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2804#issuecomment-1108158984,1,['test'],['tests']
Testability,@guparan Here it is the failure on windows are removed. ; Do we go fast path ? [ci-build][with-scene-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/604#issuecomment-369864264:101,test,tests,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/604#issuecomment-369864264,1,['test'],['tests']
Testability,"@guparan I though about that but if you switch from release to debug I'm not sure cmake will always clean the lib repository to remove the non suffixed version. This is why I choose the ordering of operation. In debug load the _d and fallback to the normal. . @fjourdes its a pity that all those nice PR are waiting unmerged. . EDIT: I don't see a lot of work to do to have a ready PR (add some unit tests on the features added in RequiredPlugin and on PluginManager, use the msg_ api). Two hours of work maybe. . EDIT2: @guparan about the InSimo PR... we should merge the easy PRs from InSimo and don't wait the hard ones to be merged.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/465#issuecomment-335823292:400,test,tests,400,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/465#issuecomment-335823292,1,['test'],['tests']
Testability,@guparan My tests were wrong (they read previously deleted data). Now everything seems fine.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/72#issuecomment-266378914:12,test,tests,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/72#issuecomment-266378914,1,['test'],['tests']
Testability,@guparan thank you for pointing that.The problem is that the CI machine *_pr3 does not have the python module 'hjson' installed consequently psl tests failed. EDIT: So you can safely ignore them...& merge the PR.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/540#issuecomment-357269105:145,test,tests,145,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/540#issuecomment-357269105,1,['test'],['tests']
Testability,"@guparan the timeout in Jenkins is a timeout of ""no activity"" and not absolute...an application that constantly print on its ouput is not halted. This is clearly not enough. . We probably need both logics:; - a 'no activity' timeout that should be set to a short duration like 30min.; - an 'absolute' timeout configured to a much larger value (eg: build duration + all the test + 40% ). EDIT: one thing to add, timeout is not the panacea because a '3 hours timeout' (a sound value) already allows problematics build to cause a lot of harm in the CI. Our log files are always far below < 100 MB unless something goes really wrong. So my suggestion is some checks on the log file size to detect and cancel offending builds.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289728117:198,log,logics,198,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289728117,4,"['log', 'test']","['log', 'logics', 'test']"
Testability,"@guparan there is no `messaging` folder. did you mean; `SofaKernel/framework/sofa/helper/logging/FileMessage.{h,cpp}` instead of; `SofaKernel/framework/sofa/helper/messaging/FileMessage.{h,cpp}`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/639#issuecomment-386779185:89,log,logging,89,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/639#issuecomment-386779185,1,['log'],['logging']
Testability,"@guparan you're right! We didn't see the problem because we ran the tests on the Release build and not on the Debug build. A segmentation fault occurs with the Debug build, dues to an assertion. @tgaugry currently investigates on the issue.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/992#issuecomment-501707903:68,test,tests,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/992#issuecomment-501707903,2,"['assert', 'test']","['assertion', 'tests']"
Testability,"@guparan, @Younesssss, @hugtalbot any volunteer to integrate the test in the normal test framework so we can merge this asap ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-624093742:65,test,test,65,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-624093742,2,['test'],['test']
Testability,"@guparan, @fredroy, @bcarrez , @hugtalbot ; Hello, this branch is now synced with master, CI is ok, added functions have theirs tests...; So it is waiting.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/410#issuecomment-345064392:128,test,tests,128,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/410#issuecomment-345064392,1,['test'],['tests']
Testability,@guparan...the failing test on stl exporter are also fixed. ; @jnbrunet Thanks again for the PR.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/406#issuecomment-330821254:23,test,test,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/406#issuecomment-330821254,1,['test'],['test']
Testability,@hugtalbot & @jnbrunet ; I fixed the problematic code and added new tests for each of the added features.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/656#issuecomment-389903272:68,test,tests,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/656#issuecomment-389903272,1,['test'],['tests']
Testability,"@hugtalbot , @guparan and everyone else ; This PR; - have discussed with as much as possible persons,; - and is now one month old, ; - succeed on all Tests on the CI since several days. I suggest to have a last look at it & merge it rapidly that we can start working on top of it to improve it and to remove all the dependencies to SofaTest.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/471#issuecomment-344250584:150,Test,Tests,150,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/471#issuecomment-344250584,1,['Test'],['Tests']
Testability,"@hugtalbot , I added a test with an error message;",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3783#issuecomment-1551107805:23,test,test,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3783#issuecomment-1551107805,1,['test'],['test']
Testability,"@hugtalbot ; Copied search for correct Direct Linear Solver from GenericConstraintCorrection. As mentioned in https://github.com/sofa-framework/sofa/discussions/3046 the object did not check the correct type of the solver during init. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3055:774,test,test,774,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3055,2,['test'],['test']
Testability,"@hugtalbot ; My guess is the following:; When loading the SofaCUDA plugin, the module check if it can detect a cuda device. If there is no such a device, it now triggers an error, whereas it was just a print before. In other words, the behavior does not change (loading of the plugin), but the log message is now counted as an error. ; I think it is a good thing. It helps to identify the scenes that cannot be executed on the CI. For the case of the failing scene. I'll just remove the `<RequiredPlugin name=""SofaCUDA""/>` which is even not required.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4430#issuecomment-1903663503:294,log,log,294,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4430#issuecomment-1903663503,1,['log'],['log']
Testability,@hugtalbot @bakpaul I don't really understand why there is a factor 2 here: https://github.com/sofa-framework/sofa/blob/975b4ab35149b23915490e715da0fb3cdcc3bb92/Sofa/Component/SolidMechanics/FEM/HyperElastic/tests/Material_test.cpp#L250. And here:. https://github.com/sofa-framework/sofa/blob/975b4ab35149b23915490e715da0fb3cdcc3bb92/Sofa/Component/SolidMechanics/FEM/HyperElastic/src/sofa/component/solidmechanics/fem/hyperelastic/material/StableNeoHookean.h#L193. I don't understand how `C_H_C ` relates to $C^{-1} \underline{\overline{\otimes}} C^{-1}$ and `trC_HC_` relates to $C^{-1} \otimes C^{-1}$,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4603#issuecomment-2012379731:208,test,tests,208,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4603#issuecomment-2012379731,1,['test'],['tests']
Testability,"@hugtalbot @epernod ; Done! :). **Before**:. https://user-images.githubusercontent.com/29635054/191820070-83997f7f-5b62-4c09-a0c9-6e22469da284.mp4. **After**:. https://user-images.githubusercontent.com/29635054/191820082-26d29ac0-21c1-4d65-9a62-3e27a550502b.mp4. **Scene to test with**:; ```python; import Sofa; import Sofa.Core. def createScene(; root_node: Sofa.Core.Node,; ) -> Sofa.Core.Node:. plugin_list = [; ""Sofa.Component.Collision.Detection.Algorithm"", # [BVHNarrowPhase, BruteForceBroadPhase, DefaultPipeline]; ""Sofa.Component.Collision.Detection.Intersection"", # [NewProximityIntersection]; ""Sofa.Component.Collision.Geometry"", # [SphereCollisionModel]; ""Sofa.Component.Collision.Response.Contact"", # [DefaultContactManager]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.LinearSolver.Iterative"", # [CGLinearSolver]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.Spring"", # [StiffSpringForceField]; ""Sofa.Component.Topology.Container.Dynamic"", # [EdgeSetTopologyContainer, EdgeSetTopologyModifier]; ""Sofa.Component.Visual"", # [VisualStyle]; ""SofaCarving"", # [CarvingManager]; ""Sofa.Component.StateContainer"", # [MechanicalObject; ""Sofa.Component.LinearSolver.Direct"", # [SparseLDLSolver]; ""Sofa.Component.AnimationLoop"", # [FreeMotionAnimationLoop]; ""Sofa.Component.Constraint.Lagrangian.Correction"", # [LinearSolverConstraintCorrection, UncoupledConstraintCorrection]; ""Sofa.Component.Constraint.Lagrangian.Solver"", # [GenericConstraintSolver]; ]. plugin_node = root_node.addChild(""Plugins""). for plugin in plugin_list:; plugin_node.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root_node.addObject(""FreeMotionAnimationLoop""); root_node.addObject(""DefaultVisualManagerLoop""); root_node.addObject(; ""VisualStyle"",; displayFlags=[""showVisual"", ""showForceFields"", ""showCollisionModels"", ""showInteractionForceFields""],; ). root_node.addObject(""DefaultPipeline",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3269#issuecomment-1255376528:274,test,test,274,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3269#issuecomment-1255376528,1,['test'],['test']
Testability,"@hugtalbot @guparan I am not sure I just need to switch from EXPECT_EQ to EXPECT_NE. When I'll refactor the interface of the TaskScheduler, a large majority of the test will not make sense. I suggest to merge this PR now, and I'll change the tests in my next PR.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1927#issuecomment-808284622:164,test,test,164,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1927#issuecomment-808284622,2,['test'],"['test', 'tests']"
Testability,"@hugtalbot I didn't test it but the argument parser stuff looks good to me. I would suggest to not define b/o characters because, AFAIK, advance timer is not often used so maybe there is better use of b/o character.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/468#issuecomment-354986412:20,test,test,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/468#issuecomment-354986412,1,['test'],['test']
Testability,"@hugtalbot I fixed the test, is was not updated to handle the change between repr and str as well as the commit.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/304#issuecomment-314798964:23,test,test,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/304#issuecomment-314798964,1,['test'],['test']
Testability,@hugtalbot No it is not..sorry for that.. I will fix the conflict and the failing test.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/304#issuecomment-314775298:82,test,test,82,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/304#issuecomment-314775298,1,['test'],['test']
Testability,@hugtalbot The code seems ok to me and fix test that are bugued. ; I vote for fast integration ASAP we have an all green dashboard.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/143#issuecomment-275706127:43,test,test,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/143#issuecomment-275706127,1,['test'],['test']
Testability,@hugtalbot Why do you want to remove DataTrackerEngine and its tests?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1238#issuecomment-571978585:63,test,tests,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1238#issuecomment-571978585,1,['test'],['tests']
Testability,@hugtalbot `getobjects` test should be solved here #2326 and `string_wstring` here #2320,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2290#issuecomment-915390572:24,test,test,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2290#issuecomment-915390572,1,['test'],['test']
Testability,@hugtalbot as we are on those tests. Could you quickly test if this one is working fine on your computer:; Regression_test/TopologyRegression_test.sceneTest/RemovingTetra2TriangleProcess_withOptions. I'm not sure to understand what is the problem here.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1321#issuecomment-609669017:30,test,tests,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1321#issuecomment-609669017,2,['test'],"['test', 'tests']"
Testability,@hugtalbot could you review my review in commit cb4eb09; I had to split your VecCoord position device into 2 variables. As in fact the original Data is linked to rigid mechanical Object in the scene and so changing its size and adding new position change the behavior of the rigid objects.; I tested your Demo scene and I can still nicely see the omni moving. Well done.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/648#issuecomment-406545983:293,test,tested,293,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/648#issuecomment-406545983,1,['test'],['tested']
Testability,@hugtalbot could you test it on linux?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3531#issuecomment-1562518690:21,test,test,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3531#issuecomment-1562518690,1,['test'],['test']
Testability,"@hugtalbot thanks for the comment.; This PR is not entirely forgotten, but there are still some questions regarding the implementation of such system. First, it relies on the messaging API to work, which I find is not a great approach, not that I have another one.; Second, the question remains as to how this mechanism could be put to good use.; I think the best way to put the mechanism to the test would be through a visual graph of the component's states, which could be done in runSofa2. Sadly there are more important stuff to deal with in runSofa2 for now.; We can surely discuss it on wednesday, but I don't know if there's much to say, and I don't think I'll work on this in the following weeks...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/823#issuecomment-466042751:396,test,test,396,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/823#issuecomment-466042751,1,['test'],['test']
Testability,@hugtalbot will you update the regression references in an other PR ? 🙊. And there is scene test still failing on Python3 (ReadTheDocs_Example.py 😅),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1786372979:92,test,test,92,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4205#issuecomment-1786372979,1,['test'],['test']
Testability,"@hugtalbot, @fredroy ; I did the layout organization without the tests.; I would be in favor of merging it so we can directly write the functional tests during the planned meeting.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1697#issuecomment-759413476:65,test,tests,65,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1697#issuecomment-759413476,2,['test'],['tests']
Testability,"@hugtalbot, test is fixed somehow so... yes",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3271#issuecomment-1283205568:12,test,test,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3271#issuecomment-1283205568,1,['test'],['test']
Testability,"@hugtalbot, the change seems to break 2 scene tests. Will you have time to check if they are false negative due to the BB change?. https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-670/CI_CONFIG=centos_clang-3.4,CI_PLUGINS=options,CI_TYPE=release/5/warnings3Result/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/670#issuecomment-400971635:46,test,tests,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/670#issuecomment-400971635,1,['test'],['tests']
Testability,"@marques-bruno I see how that ""on-demand""-processing mechanism prevents useless computation by the DataEngine. Do you think we should strive to preserve that behavior and unlink the triggering by an event? From my part it needs more testing to see the behavior. . Returning to the issues part of this PR:; - I've checked the examples and everything seems to work nicely. I modified one example by adding a chained PSDE, which also works (by explicitly declaring the type of the output); - I find the following syntax for declaring a vacant output a little bit confusing: ; `self.addNewOutput('average', value='0')`; I would probably leave out the 'value' altogether, because this syntax suggests that it has some integer or even string type. But this is not the main issue now.; - I think the main issue now is to get a review from the guys to see the feasibility of the concept in general and of the modifications at the level of Base.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-407380411:233,test,testing,233,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-407380411,1,['test'],['testing']
Testability,@matthieu-nesme . I looked back to the PR and I will remove the three Data field because:; - controlling the queue size with a Data is not crucial. I will replace it with an attribute and get/set or an environment variable. ; - the msgLevel is un-used and was there to rise discussion on whether or not controlling the level of messages emitted by an object make sense (eg when debugging). ; - the logLevel'one is un-used yet but should one day override the behavior of the mis-used f_printLog. ; ; Thanks again to pointing that.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/106#issuecomment-276757536:398,log,logLevel,398,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/106#issuecomment-276757536,1,['log'],['logLevel']
Testability,"@matthieu-nesme I think we should implement str() as you have in your fork ;) . First of all thanks Matthieu and Maxime for the interest and time you put into this PR because it is getting very long. . Let's me summary the different approach that have been tried so far. . 1) The first version of the code was doing conversion by hard-coding the object type detection and calling getLinkPath(). The problem with this version is that it cannot be extend without adding more hard-coded test and recompiling the SofaPython plugin. ; Everyone agree this version is bad. . 2) The second version that was suggested by maxime is much more extensible as it was using the str() operator. The problem I see with this approach is that the str function have been implemented and is used in a lot of place (including Anatoscope fork) and so it may not be a god idea to now force the str() function to return the path just to make the createObject function happy. In this version prevent us to warn user there is a conversion done and that if they change the str() because, well its python they can do that, it may break something. This version is imposing that people writing a 'str' function have to keep in mind that (even if they don't know nothing about that) it must work if their object is called in createObject. (see later I try to explain better the problem). ; So to me this version will generate a lot of subtile problems and backward compatibility issues. . 3) The third version is close to use the str() in term of design but it makes it explicit that if an object want conversion to be used in the parameters of the createObject function it have to follow a specific protocol...this is done by implementing a dedicated function (eg: getAsACreateObjectParameter()). The implementation of this function for BaseObject and Sofa.Data could simply link to getLinkPath(). But if you have your own 'complex' object and want it to be used as a parameter in createObject you can just implement your own conver",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/286#issuecomment-308062575:484,test,test,484,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/286#issuecomment-308062575,1,['test'],['test']
Testability,"@matthieu-nesme you are right the ""existing.txt"" file is created to validate the behavior of the FileMonitor API. It should be added to .gitignore as well as probably removed when the test terminates.; Edit: typos",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/146#issuecomment-275222917:184,test,test,184,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/146#issuecomment-275222917,1,['test'],['test']
Testability,"@matthieu-nesme, @EulalieCoevoet . I'm trying to fix the test failure in FixConstraint_test when compiled in debug. The failure is related to SparseLDLSolver that do things like that: ; ```cpp; METIS_NodeND(&n, &xadj[0],&adj[0], NULL, NULL, perm,invperm);; ``` ; Compiling the test in debug activates the vector bound checking which rise the error message as [0] on an empty vector does not make sense. This error message makes the test fails. . Compiling the test in release mode de-activates the vector bound checking so the test is not failling anymore. But adj.size() is still zero and adj[0] is still used. According to the standard this is undefined behavior so we need to fix that. . I made a fix in which I set a minimal size of one to the faulty vectors.... but I'm not sure that having an empty adj vector is not an indication of a deeper problem (or the manifestation of a specific case) and that the right fix should to properly handle this case instead of playing with memory array to ""hide"" it. . As you have experience with solvers any feedback would be appreciated.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/279#issuecomment-305611180:57,test,test,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/279#issuecomment-305611180,5,['test'],['test']
Testability,"@matthieu-nesme, @maxime-tournier . Thanks for your PR. The cleaning looks ok to me but it seems there is two new components (UniformStiffness, DiagonalStiffness) added in this PR. . Maybe you should change the title of the PR to ""Minor Fix and Add UniformStiff & DiagonalStiffness Components"" . I don't see any test on the two added components. . You changed the .py file to use the two added component. As they seems very similar to the existing one maybe this deserve a bit of documentation (doxygen) or example on when to use one component instead of the other otherwise users will be puzzled in deciding which one to choose.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/147#issuecomment-275705743:312,test,test,312,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/147#issuecomment-275705743,1,['test'],['test']
Testability,"@maxime-tournier ; I currently have tests with this pattern:; {""'aString'.join('[ ]')"", ""[aString aString]""} ; which succeed. . I also have added this one:; {""' '.join(['AA', 'BB', 'CC'])"", ""AA BB CC""}, ; Which also succeed. . I didn't managed to build something that fails...if you find some..please report so we can improve & update the tests. EDIT: I'm more concerned about the automatic conversion to getPath/getLinkPath for which I'm not sure we can find a clean semantic. I suggest we let that for a different PR...because this out of the scope of the PR initially submitted by Felix.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/286#issuecomment-307760074:36,test,tests,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/286#issuecomment-307760074,2,['test'],['tests']
Testability,"@maxime-tournier did convince me now!. As long as the init of a lib is calling the init of its dependencies the init order should be ok (with the safeguard ""s_initialized"" not to init several times). But the cleanup order cannot be guarantee, but is it a big deal? For what I can see in the public code, these init/cleanup function do nothing yet. The doc can precise than ""cleanup"" must clean the actual lib, w/o depending on any other lib, and then the actual cleanup functions should not call cleanup from their dependencies. Also ""helper::printLibraryNotCleanedUpWarning"" was creating a big mess, because using the message logger while a lot of things were already destroyed could easily creating a segfault. Anyway it would not be useful anymore and could be removed too. - ""CleanupCheck"" RAII should be renamed; - s_cleanedUp could be removed; - all the call to init/cleanup could be removed from app/tests; - helper::printLibraryNotCleanedUpWarning should be removed",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/168#issuecomment-280283167:627,log,logger,627,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/168#issuecomment-280283167,2,"['log', 'test']","['logger', 'tests']"
Testability,@olivier-roussel ; The findGTest https://cmake.org/cmake/help/v3.19/module/FindGTest.html of cmake only works for CMake >= 3.20 😭; (tested with cmake 3.16 and 3.19 ❌ whereas cmake 3.20 and 3.28 ✅),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1923010688:132,test,tested,132,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1923010688,1,['test'],['tested']
Testability,"@olivier-roussel thanks for the conda test and the feedbacks 👍; You should have made suggestions and/or make a PR on my branch, as I cannot credit you your patches 😵",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1922632664:38,test,test,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4471#issuecomment-1922632664,1,['test'],['test']
Testability,"@olivier-roussel thanks for your complete answer. I came to the same conclusion as you. I just wanted to be sure that the result of `toEulerVector` in this test is the right one. I just tried on matlab, and it ends up with one of the angle to be pi/2.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4122#issuecomment-1699077289:156,test,test,156,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4122#issuecomment-1699077289,1,['test'],['test']
Testability,"@sescaida, I just discovered a syntax, that exists since, well ... ever, and makes this whole PR completely useless....:. ```py; import Sofa; import os. class PyEng(Sofa.PythonScriptDataEngine):; def __init__(self, ctx, name, positions):; self.name = name; self.addNewInput('positions', datatype=""vector<Vec3d>"", value=positions, help=""test""); self.addNewOutput('average', datatype=""Vec3d"", help=""average""); ; def parse(self, arg):; pass; ; def init(self):; 	pass; ; def update(self):; value = [0, 0, 0]; for pos in self.positions:; value[0] += pos[0]; value[1] += pos[1]; value[2] += pos[2]; value[0] /= len(self.positions); value[1] /= len(self.positions); value[2] /= len(self.positions); self.cleanDirty(); self.average = [[-value[0],-value[1],-value[2]]]; pass. def createScene(rootNode):; loader = rootNode.createObject(""MeshVTKLoader"", name=""loader"", filename='mesh/liver.vtk'); psde = PyEng(rootNode, name=""PSDE"", positions=loader.findData('position').getLinkPath()); rootNode.createObject('TransformEngine', name='TE', input_position=""@loader.position"", translation=psde.findData('average').getLinkPath()); rootNode.createObject('OglModel', name=""visu"", position=""@TE.output_position"", triangles=""@loader.triangles"",; color=""1 0 0 1""); ```. With this syntax, I can create my engines definition once, and create as many as I want, on the fly, with any parameter I want for my input fields. It's actually even better, because:; - I don't have to create inputs with the fields I pass to the constructor. It could be simple data (addNewData vs addNewInput); - Construction of datafields is more explicit, thus less error-prone; - No need to go search for a decorator function somewhere in SofaPython, or to declare a dictionary of default arguments, everything is performed in the constructor. So, yeah, this PR is now virtually useless.; There's one thing I don't like with this syntax though, it's that the creation of the object is performed at the same time as it is assigned to the scene gra",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/743#issuecomment-417366442:336,test,test,336,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/743#issuecomment-417366442,1,['test'],['test']
Testability,"@sescaida, you can find [here](https://github.com/marques-bruno/snippets/blob/master/testDataEngine.cpp) a test code for Sofa showing what happens when cleanDirty is called at the wrong moment. After testing a little bit the engines, I noticed that the only case where it wouldn't work (to have all the data updates & cleanDirty() before calling the update() method would be in the very unlikely case where the update() method would fetch an earlier engine in the dependency graph through getContext, and set its output value. this is very unlikely, which means that, apart for some performance reasons, I don't see why it would be important to bind the cleanDirty() method in python. Since python is much slower anyway, I think this PR does not make much sense anymore. although, I still insist on removing the call to update() from handleEvent, since it is redundant with its normal on-demand calling mechanism. :) I'll update the PR soon!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/751#issuecomment-417357372:85,test,testDataEngine,85,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/751#issuecomment-417357372,3,['test'],"['test', 'testDataEngine', 'testing']"
Testability,@thomas-lemaire currently I see that some components are doing; ```cpp; if(printLog) sout << ; ```; While the 'sout' is already checking the printLog which is redundant. This is what I'm refering as mis-usagse. To me the cleaning consist in defining what is the right pattern to employ and this may (or not) result in removing the if(printLog) from the component and replace them with the use of 'sout'. . About the link with PR106. With the PR a dedicated message handler has to be installed in the application or the scene to activate loggin into component... this is done with the following code ; ```cpp; MessageDispatcher::addHandler(&MainPerComponentLoggingMessageHandler::getInstance()) ;; ```; But currently this is not done in runSofa or any other app and the messages are not added to the log. This is why I'm saying the PR is independent and is without side effect. . When the printLog expected behavior is clear the current log 'to the big string' should be removed and replaced by installing the logging proposed in PR106.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/160#issuecomment-276932662:537,log,loggin,537,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/160#issuecomment-276932662,4,['log'],"['log', 'loggin', 'logging']"
Testability,@thomas-lemaire pointed that in several place there is mis-usages of printLog. ; We should clean that by clearly defining what is the correct behavior. . We can clean the printLog stuff independently but this is in fact connected to the msg_* API (https://www.sofa-framework.org/community/doc/programming-with-sofa/logger/) as well as this PR(https://github.com/sofa-framework/sofa/pull/106) which are attempts to lay down the foundations for a general handling of all the messages in Sofa.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/160:315,log,logger,315,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/160,1,['log'],['logger']
Testability,"@untereiner , . I'm concerned about the the impact of the fix against existing scenes. ; So can you explain a bit more what is fixed ? Was it a broken behavior resulting in a failing test or a failling scene or is it fixing a 'yet un-noticed' and fundamentally broken behavior ? ; If the computation is changed, is there any risk to have other people scenes to behave differently ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/290#issuecomment-306482993:183,test,test,183,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/290#issuecomment-306482993,1,['test'],['test']
Testability,"@untereiner I think that this is because batch mode does not ""remove"" element from the scene ; (it would be a nighmare). To me the underlying problem is that the batch mode should have a valid opengl context created (off-screen rendering) as we use it to test file with opengl based components. . Thanks for the stack trace... I will try to make something about it (even on macos).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/548#issuecomment-357753868:255,test,test,255,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/548#issuecomment-357753868,1,['test'],['test']
Testability,@untereiner could you please include CGOGN as an external library + separate the core changes and the pluginizable changes; Any scene to test ?; We are all curious to test it !,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/700#issuecomment-402413064:137,test,test,137,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/700#issuecomment-402413064,2,['test'],['test']
Testability,@untereiner sorry I didn't saw you expected feedback on the tests. ; I will do that next monday.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/360#issuecomment-328175570:60,test,tests,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/360#issuecomment-328175570,1,['test'],['tests']
Testability,"A CompressedRowSparseMatrix is compressed if the temporary vector of triplets has been converted into the compressed format. Therefore, the boolean `compressed` must be set depending on the size of the temporary vector, not the size of the compressed values. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2894:798,test,test,798,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2894,2,['test'],['test']
Testability,"A PR to feed the discussion : the data link `l_topology` is emitting a warning when empty ONLY in the two masses DiagonalMass and MeshMatrixMass which is inconsistent to all other components having such a data (with the exact same behavior). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3116:781,test,test,781,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3116,2,['test'],['test']
Testability,"A PR with a high _NumberOfWarnings/NumberOfModifiedFiles_ ratio 😗. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2046:606,test,test,606,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2046,2,['test'],['test']
Testability,"A Quick and dirty attempt to replace the call super anti-pattern for the ""parse"" method. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3904:630,test,test,630,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3904,2,['test'],['test']
Testability,"A Test and some examples depends on SofaPython.; As SofaPython will become deprecated, those files must move into it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1887:2,Test,Test,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1887,3,"['Test', 'test']","['Test', 'test']"
Testability,"A `ConstraintCorrection` stores the list of constraint solvers using it. This is mainly to notice them to stop using them when they are destroyed (in the cleanup method).; This list was a `std::list`. I suggest a `MultiLink` instead. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2364:773,test,test,773,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2364,2,['test'],['test']
Testability,A binding for an often used Node method. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1171:292,test,test,292,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1171,2,['test'],['test']
Testability,"A bit of cleaning (formatting, removal of commented code, use of our friend `std::enable_if_t` etc) for `sofa::type::MatSym`. I added the `operator*` on matrices (symmetric and non-symmetric). I also added simple unit tests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4600:218,test,tests,218,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4600,3,['test'],"['test', 'tests']"
Testability,A break is present in the ```doUpdate``` function making the detection of all hexahedra fail. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1417:345,test,test,345,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1417,2,['test'],['test']
Testability,A bunch of CMake changes I made for v18.06 construction. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/789:308,test,test,308,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/789,2,['test'],['test']
Testability,"A component can be included in multiple maps (`uncreatableComponents`, `dealiasedComponents`, ` movedComponents`). If it is the case, only one was picked and the others were ignored. This PR processes all the maps to inform the user. Example of output:. ```; The component 'DefaultPipeline' cannot be found in the factory. ; Several reasons are possible:; 1) This component has been MOVED from SofaBaseCollision to Sofa.Component.Collision.Detection.Algorithm since SOFA v22.06.; To continue using this component you may need to update your scene by adding; <RequiredPlugin name='Sofa.Component.Collision.Detection.Algorithm'/> ; 2) This alias for the component CollisionPipeline was removed in SOFA v24.12.; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5074:1253,test,test,1253,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5074,2,['test'],['test']
Testability,"A constructor and a method are deprecated. It is error-prone. It is very easy to make a mistake. For example, the following constructions were possible:. ```cpp; OptionsGroup(2, ""optionA""); OptionsGroup(10); OptionsGroup(1, ""optionA"", ""optionB""); ```. Based on #3737 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3741:808,test,test,808,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3741,2,['test'],['test']
Testability,"A continuation of ; - #4812 . but much bigger and less trivial. This PR removes SOFA_ENABLE_LEGACY_HEADERS, implying:; - no more collections/deprecated projects which was to ensure the continuity of Sofa.NG; - some renaming in MultiThreading and SofaCUDA. The deletion of the layer compat between old and new modules was acted for 23.06 so not a big deal by itself (only 1.5 year late🤷‍♂️ ).; But some olden modules still have some code/components:; - SofaGraphComponent: with a `Gravity` component; - SofaMiscCollision: with `DefaultCollisionGroupManager, SolverMerger` components and `RayTriangleVisitor` visitor; - SleepController: with a `SleepController`component; - SofaValidation: with various measuring stuff components.; There is also SofaExporter which had some forgotten(?) examples of components which were moved. So the examples have been just moved as well. So what should be done for these components?; IMO (not done yet); - `Gravity` seems useless/not usable.; - `SleepController` might maybe probably be interesting; - `DefaultCollisionGroupManager, SolverMerger` were bogus and RayTriangleVisitor not used at all; - SofaValidation may be totally transformed as a plugin (as in `applications/plugins`). To be discussed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4813:1776,test,test,1776,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4813,2,['test'],['test']
Testability,"A cosmetic helper function to concatenate paths ensuring exactly one directory separator between each part. I happen to see paths such as `C:/Users/Temp//filename.ext`, and it hurt my cornea. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3961:731,test,test,731,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3961,2,['test'],['test']
Testability,"A detailed description of the component is provided in the code; Unit tests are added. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3162:70,test,tests,70,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3162,3,['test'],"['test', 'tests']"
Testability,"A directory that was recently removed is still mentioned in the cmake build files, so installation fails (compilation is fine). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/470:379,test,test,379,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/470,2,['test'],['test']
Testability,"A doxygen comment referred a variable name that does not exist. It was probably renamed. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2467:628,test,test,628,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2467,2,['test'],['test']
Testability,"A draft: (the existing ones first); -io; -gl; -logging; -messaging; -system; -testing; -types (with Vec, Mat, Quat, Frame, BaseMatrix, BaseVector, BoundingBox, Ray); -basictypes (fixed_array, vector, map etc); -algo (Polynmial_LD, decompose, Mat_*, lcpsolver); -utilities (rest of the mess)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1521#issuecomment-705544809:47,log,logging,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1521#issuecomment-705544809,2,"['log', 'test']","['logging', 'testing']"
Testability,"A fast sparse matrix product, based on the pre-computation of two input matrices intersection, is introduced. It is supported by tests (in this PR) and benchmarks (https://github.com/alxbilger/SofaBenchmark/pull/1). The method is based on :; 1) Saupin, G., Duriez, C. and Grisoni, L., 2007, November. Embedded multigrid approach for real-time volumetric deformation. In International Symposium on Visual Computing (pp. 149-159). Springer, Berlin, Heidelberg.; 2) Saupin, G., 2008. Vers la simulation interactive réaliste de corps déformables virtuels (Doctoral dissertation, Lille 1). The method is used in `MechanicalMatrixMapper`. There are 4*2 sparse matrix products in `MechanicalMatrixMapper`. The user of `MechanicalMatrixMapper` has the choice to use the fast product or not. If any topology changes, it is probably faster to use the regular product as any topology change triggers the time-consuming re-computation of the intersection. The new timings of the example scene are (to compare to https://github.com/sofa-framework/sofa/pull/2367):. Using the fast product:; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 53.37 552.66 55.85 15.82 55846.3 100 TOTAL; ...; 4 0.96 1 21.14 504.13 22.56 15.26 22.56 40.40 ....MBKBuild; 5 1.15 1 20.28 495.02 21.66 15 21.66 38.78 .....MMM-addKToMatrix; 6 1.15 1 1.67 3.78 1.77 0.12 1.77 3.17 ......jacobian; 6 2.92 1 6.60 12.14 7.08 0.46 7.08 12.67 ......stiffness; 6 10 1 2.47 5.98 2.65 0.20 2.65 4.74 ......copyKToEigen; 7 10 1 2.47 5.97 2.64 0.20 2.64 4.73 .......KfromTriplets; 6 12.65 1 0.22 0.54 0.26 0.02 0.26 0.46 ......copyJ1J2ToEigen; 7 12.84 1 0.05 0.19 0.06 0.01 0.06 0.11 .......copyJ2ToEigen; 6 12.90 1 5.31 479.58 6.13 14.98 6.13 10.98 ......Multiplication; 7 12.90 1 3.08 469.90 3.68 14.75 3.68 6.60 .......J1tKJ1; 7 16.59 1 0.36 4.89 0.38 0.15 0.38 0.68 .......J2tKJ2; 7 16.97 1 1.52 4.10 1.71 0.13 1.71 3.06 .......J1tKJ2; 7 18.68 1 0.32 0.83 0.35 0.03 0.35 0.63 .......J2tKJ1; 6 19.04 1 2.50 5.50 2.66 0.20 2.66 4.77 .",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2394:129,test,tests,129,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2394,2,"['benchmark', 'test']","['benchmarks', 'tests']"
Testability,"A few Config.cmake.in need more find_package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2891:585,test,test,585,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2891,2,['test'],['test']
Testability,A few fixes I had to do for v18.06.01 (picked from v18.06 branch). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/791:318,test,test,318,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/791,2,['test'],['test']
Testability,A few minor change in matrix class to improve performance . FullMatrix: Restore fast matrix clear function; MatExpr: Remove console output in addTo function. Clear function in visual studio profiler. current: 0.51% inclusive samples; ![doubleForLoopClear](https://user-images.githubusercontent.com/3921764/63861622-85081200-c9ab-11e9-8192-e536e4c5b4eb.jpg). std::fill: 0.18% inclusive samples ; ![stdfillClear](https://user-images.githubusercontent.com/3921764/63861635-89ccc600-c9ab-11e9-9e87-2cac821888cf.jpg). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1128:764,test,test,764,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1128,2,['test'],['test']
Testability,"A few people in the Mimesis team have made comments about errors that occur when the USE_MASK option is enabled. This PR simply sets the option as disabled by default, so that users will not unknowingly use it. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/532:462,test,test,462,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/532,2,['test'],['test']
Testability,"A file in SofaCore wants to include something in SofaBaseMechanics (further in the dependency graph).; This was not throwing any error as only stuff from SofaBaseMechanics (and its siblings/children) was including this file, and this file contains only templated functions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2632:813,test,test,813,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2632,2,['test'],['test']
Testability,"A first round of renaming from 'bloc' to 'block'. Issue https://github.com/sofa-framework/sofa/issues/2329. [ci-depends-on https://github.com/sofa-framework/Flexible/pull/2]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2404:714,test,test,714,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2404,2,['test'],['test']
Testability,A fix for compilation errors when working with operator '*=' from Transform class. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/506:334,test,test,334,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/506,2,['test'],['test']
Testability,"A list of components is being defined, see issue #226 ; The idea is to present shortly a first prototype of SOFA NG to involve more and more people in the cleaning, testing of SOFA. This 1st SOFA NG version focuses on : . - very few classes (~20); - simple implementation of the base classes. This would allow to have a first set of simple components allowing for:; - new users to understand SOFA easier; - advanced developers and companies using SOFA for its core features (scene graph, DAG, visitors etc.) but without interests for all other codes. Example of these 20 components: DefaultAnimationLoop, UniformMass, ConstantForceField, EulerExplicit, Cholesky (see #244 ), IdentityMapping, FixedConstraint (see #246 ), ValuesFromIndices, MeshObjLoader (and others), RequiredPlugin. Any feedback is more than welcome : @ChristianDuriez @damienmarchal @StephaneCotin @JeremieA @matthieu-nesme",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/247:165,test,testing,165,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/247,1,['test'],['testing']
Testability,A list of tasks to do:; 1. remove SofaTest use in Sofa*_test (first in the most important modules SofaBase* and then SofaCommon and ...); 2. dispatch the existing tests in the SofaTest. I suppose 1) will involve to add/modify the new Sofa.Testing API.; This post will surely be updated heavily soon....,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1885#issuecomment-852823164:163,test,tests,163,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1885#issuecomment-852823164,2,"['Test', 'test']","['Testing', 'tests']"
Testability,"A little misleading typo. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4908:565,test,test,565,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4908,2,['test'],['test']
Testability,"A long PR but it is actually divided in 3 parts. A link is provided for each part pointing to a comparison with the previous part. # 1. Introduction of the plugin. A new plugin is introduced to welcome new components. It is enabled by default.; https://github.com/sofa-framework/sofa/compare/master...alxbilger:sofamatrix?expand=1. The plugin may deserve a better name. # 2. Move CImgPlugin features on matrices. I introduced features related to matrices in CImgPlugin in a previous PR. It did not make sense. It is preferable to have them in a higher-level plugin, so I moved them in SofaMatrix.; https://github.com/alxbilger/sofa/compare/sofamatrix...sofamatrix_cimg. # 3. Introduction of a component to visualize the matrix. A component is introduced. It gets the matrix from the linear system and convert it to an bitmap to visualize it directly in the GUI.; https://github.com/alxbilger/sofa/compare/sofamatrix_cimg...sofamatrix_gui. ![image](https://user-images.githubusercontent.com/10572752/144421772-5676f6e8-12af-4468-8bec-24ea7856b00f.png). # To do:. - [x] Expand the bitmap in height; - [ ] Update the bitmap when the image changes during the simulation; - [ ] Do we move `GlobalSystemMatrixExporter` into SofaMatrix?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2517:1770,test,test,1770,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2517,2,['test'],['test']
Testability,"A lot of code was duplicated to apply the same algorithm on both Coord and Deriv types. I factorized those pieces of code. Most of the new code relies of generic lambdas (since C++14). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3541:724,test,test,724,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3541,2,['test'],['test']
Testability,A lot of cosmetic changes and removes some compilation warning related to unsigned int/int conversion. <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old.; **Reviewers will merge only if all this checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/169:272,test,test,272,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/169,1,['test'],['test']
Testability,"A lot of indentation problems and override attribute was not used. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3792:606,test,test,606,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3792,2,['test'],['test']
Testability,A lot of regression tests are failing. Maybe their references should be updated?; @hugtalbot,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2305#issuecomment-910400785:20,test,tests,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2305#issuecomment-910400785,1,['test'],['tests']
Testability,"A mapping-based scene design is introduced in `examples/Components/forcefield/StiffSpringForceField_simple.scn`. The force field is defined on a mechanical state which is the fusion of two independent sets of points. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2462:756,test,test,756,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2462,2,['test'],['test']
Testability,A method to return all categories (those defined in CategoryLibrary at least...). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1085:333,test,test,333,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1085,2,['test'],['test']
Testability,A micro PR to add a method that allows me to retrieve the count of all SOFA Events.; I need this to manipulate the Event UIDs as enum values & initialize a vector of Event bindings in SofaPython3 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1084:449,test,test,449,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1084,2,['test'],['test']
Testability,"A mirroring data as in the GenericConstraintSolver; Since it looks like a copy pasting this could be brought in the `ConstraintSolverImpl` ... but well. Let me know!. Further to discussion with @oystebje. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3796:744,test,test,744,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3796,2,['test'],['test']
Testability,A modification of BoxROI object that could be rotated using given angle values and a test for it. The values of angles are defined like in applyRotation method where Euler Angle values in degrees are used. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/560:85,test,test,85,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/560,3,['test'],['test']
Testability,A more generic was asked in #3592 all scenes are usually using template=Vec3d we should use the SReal version template=Vec3 allowing us to test the float cases. Is float really useful?. A CI (nightly?) should test the float configuration,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3451#issuecomment-1403263559:139,test,test,139,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3451#issuecomment-1403263559,2,['test'],['test']
Testability,"A mutex is added when trying to access a tag ID. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2942:588,test,test,588,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2942,2,['test'],['test']
Testability,"A new DataEngine is introduced: `FillReducingOrdering`. A DataEngine to reorder the degrees of freedom in a mesh in order to reduce fill-in in sparse matrix factorization. In other terms, the algorithm minimizes the number of non-zeros entries in the factorization of the sparse matrix of a FEM problem by reordering the degrees of freedom. The implementation is based on METIS. Note: some of the direct linear solvers embed such a reordering internally (e.g. SparseLDLSolver), but not all of them (e.g SparseLUSolver, SparseCholeskySolver etc). An example is also introduced (`examples/Components/engine/FillReducingOrdering.scn`).; Here is the comparison of the two system matrices:. Initial matrix:; ![initial_matrix00001](https://user-images.githubusercontent.com/10572752/143068764-2cbd09b4-906b-4bc1-b3c6-03cd3034a1ab.jpg). Reordered matrix:; ![reorder_matrix00001](https://user-images.githubusercontent.com/10572752/143068809-80a5172a-ce39-4c53-bbfb-e8ec12066cf8.jpg). It improves a lot the performances when the linear solver does not embed a fill-in reducing reordering. This is the case of the `SparseLUSolver` in the example scene.; Rough framerate without reordering: **2.5 FPS**; Rough framerate with reordering: **25 FPS**; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2501:1777,test,test,1777,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2501,2,['test'],['test']
Testability,"A new library (SofaDefaultType.Testing) is introduced, so it can be linked against in other modules.; In this library, an interface to test derived classes from BaseMatrix is introduced. Those tests are then instantiated in SofaBaseLinearSolver_test, another module than where the interface is. The interface is close to where BaseMatrix is defined, but can be instantiated in other modules. The existing tests in SofaBaseLinearSolver_test are kept, but they have been adapted to avoid the pattern using the inl file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2280:31,Test,Testing,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2280,6,"['Test', 'test']","['Testing', 'test', 'tests']"
Testability,"A parallel equivalent of `CGLinearSolver` on assembled matrices. Benchmark on the introduced example `applications/plugins/MultiThreading/examples/ParallelCGLinearSolver.scn`:. - CG is not multithreaded. ```; [INFO] [BatchGUI] 1000 iterations done in 43.1158 s ( 23.1933 FPS). LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 4 7.28 1 30.20 67.39 35.64 5.53 35.64 82.80 ....MBKSolve; ```. - CG is multithreaded. ```; [INFO] [BatchGUI] 1000 iterations done in 32.1941 s ( 31.0615 FPS). LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 4 19.30 1 10.88 138.69 12.71 6.27 12.71 39.57 ....MBKSolve; ```. The counter of interest is `MBKSolve`. We notice that it is about 2.8x faster on average. ![peek](https://github.com/sofa-framework/sofa/assets/10572752/6dd55e76-16b8-4961-a9aa-77111793048d). [ci-depends-on https://github.com/sofa-framework/Regression/pull/50]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4138:65,Benchmark,Benchmark,65,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138,3,"['Benchmark', 'test']","['Benchmark', 'test']"
Testability,"A quick test of this branch on macos: ; - `./bin/runSofa -g batch -s dag -n 100 ../../sofa/examples/Demos/caduceus.scn` crashes with a segfault; - `./bin/runSofa -s dag -n 100 ../../sofa/examples/Demos/caduceus.scn` runs ok. There is call to `glGetIntegerv(GL_READ_FRAMEBUFFER_BINDING, &windowId);` who ends to a segfault.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/548#issuecomment-357514557:8,test,test,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/548#issuecomment-357514557,1,['test'],['test']
Testability,A regression test must be added,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1719391944:13,test,test,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4138#issuecomment-1719391944,1,['test'],['test']
Testability,"A relief to me, I never liked this name!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3590:581,test,test,581,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3590,2,['test'],['test']
Testability,"A scene is added in the MultiThreading plugin. Its goal is to show the difference between the parallel collision detection algorithms and the single threaded equivalents, in terms of performances. My results after 1000 time steps:. # Single thread; 43.6893 s ( 22.8889 FPS). ; `doCollisionDetection` runs in ~28.99 ms (mean). # Multi thread; 22.9585 s ( 43.5568 FPS). ; `doCollisionDetection` runs in ~7.81 ms (mean). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2112:957,test,test,957,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2112,2,['test'],['test']
Testability,"A small PR to remove unncessary includes, either because they are useless or classes can be forwarded.; Some _API keyword were incorrect as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2064:685,test,test,685,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2064,2,['test'],['test']
Testability,A small utility object to add a repo at runtime.; Check the example for getting an idea on how to use. I guess it would be mainly useful for people still using XML scene... ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/402:424,test,test,424,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/402,2,['test'],['test']
Testability,"A task from #3967 + minor cleaning. I suspect there is also a damping term, which was not taken into account in the derivative before. It needs a deeper investigation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4005:707,test,test,707,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4005,2,['test'],['test']
Testability,"A task from #3967 + minor cleaning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4004:575,test,test,575,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4004,2,['test'],['test']
Testability,"A task from #3967 . I took the opportunity to convert `double` to `Real`, that is why this PR is breaking. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4009:646,test,test,646,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4009,2,['test'],['test']
Testability,"A task from #3967 . This force field did not implement `addDForce` and `addKToMatrix`, therefore `buildStiffnessMatrix` is empty. However, I suspect that those function must be implemented. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4007:729,test,test,729,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4007,2,['test'],['test']
Testability,"A task from #3967 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4006:559,test,test,559,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4006,2,['test'],['test']
Testability,"A task from #3967. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3993:558,test,test,558,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3993,8,['test'],['test']
Testability,"A task from #3967; Note that `addKToMatrix` was not implemented. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3997:604,test,test,604,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3997,2,['test'],['test']
Testability,"A task from #3967; Note that `addKToMatrix` was not implemented.; I took the opportunity to remove the `float`s. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4015:652,test,test,652,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4015,2,['test'],['test']
Testability,"A task from https://github.com/sofa-framework/sofa/issues/3967. A scene example is introduced because there wasn't one before. It is a simple beam under gravity. Usually, scene examples work with a CG. Here I use a direct solver. `addKToMatrix` was not implemented for this force field. So `buildStiffnessMatrix` has been written without a ""model"". I changed a type and remove a struct. It is therefore breaking. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4127:952,test,test,952,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4127,2,['test'],['test']
Testability,"A task from https://github.com/sofa-framework/sofa/issues/3967. I also believe that it is more efficient than `addKToMatrix`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3981:665,test,test,665,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3981,2,['test'],['test']
Testability,"A task from https://github.com/sofa-framework/sofa/issues/3967. Tested in `examples/Component/MechanicalLoad/SurfacePressureForceField.scn` that the behavior is consistent between CGLinearSolver, EigenSimplicialLDLT and EigenSparseLU. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4097:64,Test,Tested,64,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4097,3,"['Test', 'test']","['Tested', 'test']"
Testability,"A task from https://github.com/sofa-framework/sofa/issues/3967. Tested with `examples/Component/SolidMechanics/FEM/TriangularFEMForceFieldOptim.scn`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4105:64,Test,Tested,64,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4105,3,"['Test', 'test']","['Tested', 'test']"
Testability,"A task from https://github.com/sofa-framework/sofa/issues/3967. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3969:603,test,test,603,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3969,16,['test'],['test']
Testability,"A task from https://github.com/sofa-framework/sofa/issues/3967. `addKToMatrix` was not implemented before. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4295:646,test,test,646,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4295,2,['test'],['test']
Testability,"A task from https://github.com/sofa-framework/sofa/issues/3967. ⚠️ No example for this force field, therefore it has not been tested. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4115:126,test,tested,126,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4115,3,['test'],"['test', 'tested']"
Testability,"A test I did using contact and another one sliding constraints seems to work nicely:; [Scenes-TimeStepChanging.zip](https://github.com/sofa-framework/sofa/files/11685794/Scenes-TimeStepChanging.zip). To start with, I used the caduceus scene, but it's a mess.; To be noted: the `UncoupledConstraintCorrection` using the data `useOdeSolverIntegrationFactors=False` will not use the time step info from the solver anymore, therefore it will not support time step changes neither; ; I suggest we close this issue as long as no issue is actually reported.; Fine for you @alxbilger ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3793#issuecomment-1582140408:2,test,test,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3793#issuecomment-1582140408,1,['test'],['test']
Testability,"A test is run with UncoupledCC alone without ODE solvers so no solver found, error, bad.; This fixes it!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1386:2,test,test,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1386,3,['test'],['test']
Testability,"A tool to visualize the trajectory of a particle. ![particles](https://user-images.githubusercontent.com/10572752/200847912-ba668723-13b0-4a17-8ad3-88a08b684ce4.gif). ![pendulum](https://user-images.githubusercontent.com/10572752/200847794-fa8e63f9-e999-483a-9573-ceefad2522db.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3471:822,test,test,822,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3471,2,['test'],['test']
Testability,"A unit test crashed (only in Debug mode). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3976:7,test,test,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3976,3,['test'],['test']
Testability,"A unit test is failing, in Sofa.Component.Topology/InciseProcessor_test.InciseTriangles; from **TriangleSetGeometryAlgorithms**: `Orthogonal projection failed`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4194#issuecomment-1763776241:7,test,test,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4194#issuecomment-1763776241,1,['test'],['test']
Testability,"A user can chose in the scene to update the bounding box or not. It is no longer a compile-time selection. In InextensiblePendulum.scn, the second pendulum explodes. An update of the bbox would adapt to the exploded object. The bbox is so large that the first pendulum is no longer visible. It may lead the user to think that the scene is not working properly. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3080:900,test,test,900,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3080,2,['test'],['test']
Testability,A warning as been introduce in PR #2131 ; ```; EdgeSetGeometryAlgorithms.inl:935:9: warning: logical not is only applied to the left hand side of this comparison [-Wlogical-not-parentheses]; if (!abs(deno) <= EPS); ```. This is a potential source of error.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2182:93,log,logical,93,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2182,1,['log'],['logical']
Testability,"ADD : use a string instead of an enum to specify an integration method as it easier for user to add new ones. This slightly changes the API of numerical integration.; ADD : add the possibility to add a function to create on the fly the required integration points (when an analytical formula is available).; UPDATE : modified the name of the integration methods for edges, triangles, tetrahedra and hexahedra.; UPDATE : use of numerical integration in Flexible; FIX : bug corrected when using of BezierShapeFunction with plugin HighOrderMeshes . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/936:797,test,test,797,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/936,2,['test'],['test']
Testability,"ADD Hadrien's collisionAlgorithm and ContraintGeometry to external plugins. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3890:615,test,test,615,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3890,2,['test'],['test']
Testability,ADD some AdvanceTimer macro missing to understand the collision pipeline; FIX some end macro missing. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1158:353,test,test,353,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1158,2,['test'],['test']
Testability,ADD tests.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/67:4,test,tests,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/67,1,['test'],['tests']
Testability,ADD: constructor and method in Quater to compute quaternion so it represents the rotation required to rotate from one direction vector to a second one. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/640:403,test,test,403,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/640,2,['test'],['test']
Testability,"ADD: new functionality for mesh generation from image: allows for explicit definition of features, i.e., set of positions which will be maintained as sub-set of the mesh nodes. The code was added to the MeshGenerationFromImage components, an example scene was added together with a test that verifies that all features (specified in a VTK file) become nodes of the new mesh. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/294:282,test,test,282,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/294,3,['test'],['test']
Testability,"AFAIK, @bcarrez installed zmq on CI ubuntu (or maybe not, just before vacations). . For liboscpack it requires a specific version : https://github.com/SofaDefrost/sofa/blob/sofaCommunication/applications/plugins/Communication/README.md; If you install liboscpack from the repository there is some bugs in it. About windows and mac I never tested on it. Plus, I have to write a liboscpack cmake find :/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/534#issuecomment-355128157:339,test,tested,339,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/534#issuecomment-355128157,1,['test'],['tested']
Testability,"API used only by the [Compliant plugin](https://github.com/sofa-framework/Compliant/), which is deprecated and archived. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4776:660,test,test,660,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4776,2,['test'],['test']
Testability,Aaaaaaaand we forgot to handle the scenes using deprecated components. Let's fix those 27-30 new scene test errors now :laughing:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/905#issuecomment-461045318:103,test,test,103,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/905#issuecomment-461045318,1,['test'],['test']
Testability,About failure by default on warning & deprecated...this is a choice. . The positive thing about this 'bold' behavior is that it force tests maker to care about warning and deprecated messages otherwise they tend to ignore them. As I prefer to specify explicitely in every test case the expected behavior I dont' feel very concerned about that 'default mode'. ; But I think this 'bold' behavior sound nice to me and from the new failure we can see in the test reports this mode is rising interesting issue that requires investigations. About the disable color while testing. I disable it only for the tests to see if it improve the readability. Now red in the console only means that a test have failed and it not obfuscated with the red from an expected error message. (I 'm not sure I'm clear here). You can change that if you prefer :) . EDIT: I update the text to be more clear :),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-291933636:134,test,tests,134,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-291933636,6,['test'],"['test', 'testing', 'tests']"
Testability,"About the failing tests I had to fix and serialization changes...; *I wanted to reply in the specific comment but could not (github magic effect ??)*. ## Failing tests; The failing tests were using the *serialization* to check the result, I mean the tests are doing comparison of **string** instead of the **actual** values, but these tests are not testing the serialization (in which case it would have been correct). These tests should be changed to compare the expected returned values (with a tolerance in the case of floating point), using the Sofa_test.h EXPECT_VEC_DOUBLE_EQ and other similar macros (add some if they are missing). Not to mix every thing it could be addressed in an other PR. ## serialization using ""[,]"" instead of "" ""; As long as the deserialization operator is compatible with the serialization one, I do not see any issue. And no example scene is failing because of that.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/330#issuecomment-315013607:18,test,tests,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/330#issuecomment-315013607,7,['test'],"['testing', 'tests']"
Testability,"About the last syntax your are proposing, I think it shouldn't be hard to do. . You simply have to in the c++ construction of the PSDEMagic dedicated code that get the argument named 'update', then extract its parameters (is callable, param names), transform all that as input and generate the output.; Actually this is very similar the use of decorator except that with decorator this ""magic binding"" logic is implemented in python while in your case the ""binding"" logic is done in the c++ part. . I will continue digging in this issue.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-380411028:402,log,logic,402,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-380411028,2,['log'],['logic']
Testability,"About this PR...please keep in mind that its target is to cut the dependency to SofaTest. . About the NumericTest base test class (I think this is the one François is refering to this one when he is saying ""I would like to discourage the use of one size fits all epsilon and comparison values for floating points arithmetic, since I prefer people to actually think about the quantities they..."") it is there because there was this functionallities in SofaTest and I didn't want to update all the tests in this PR. So I just move the features from SofaTest to SofaFramework. My strategy is to 1) cut the dependency with this PR, 2) update all the tests in modules small at a time so that they stop using SofaTest. And in a third step if NumericTest is really bad...then maybe someone will update the tests relying on it and remove the class :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/471#issuecomment-338786171:119,test,test,119,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/471#issuecomment-338786171,4,['test'],"['test', 'tests']"
Testability,"According to origin/defrost on the Dashboard, error appeared between 4b1f2897 and a33b4b12.; There are some LightManager changes here, we are close ;); I update my ""summary"" post. EDIT: This range is where the test was created. **This test fails on Windows since its creation.**; Please @damienmarchal give this type of information (if you know it) when you create your issue so that no time is lost searching for error appearance.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/54#issuecomment-263275881:210,test,test,210,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/54#issuecomment-263275881,2,['test'],['test']
Testability,According to the CI there is one test in Flexible that is failing in this PR.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/243#issuecomment-311171428:33,test,test,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/243#issuecomment-311171428,1,['test'],['test']
Testability,"According to the guidelines. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4664:568,test,test,568,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4664,30,['test'],['test']
Testability,"According to the guidelines; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4771:568,test,test,568,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4771,2,['test'],['test']
Testability,"According to the help in runSofa, the option `--computationTimeOutputType` gives the choice to output computation time stats as a json file. I was not able to export any json file, so I tried to fix it. This is my proposition. It works only for `BatchGUI`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2018:796,test,test,796,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2018,2,['test'],['test']
Testability,According to the manual test i started here : ; https://ci.inria.fr/sofa-ci/job/ubuntu_clang-3.8_options-debug/105/consoleFull; It now succeed on all test on the clang_option_debug build. . So it should be ready !!!,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/279#issuecomment-308079993:24,test,test,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/279#issuecomment-308079993,2,['test'],['test']
Testability,"According to this [PR on Caribou's repo](https://github.com/jnbrunet/caribou/pull/60), the MeshMatrixMass::addForce isn't giving the same result either your are using a lumped scheme or not, and I'm not talking about a small difference. You can test it against SOFA v20.12, which works correctly. This may be a critical issue.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2301:245,test,test,245,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2301,1,['test'],['test']
Testability,"According to web, this was useful only on architecture prior to fermi (cuda capabilities < 2.0). useful link from 2011: https://stackoverflow.com/questions/5544355/cuda-umul24-function-useful-or-not. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2715:739,test,test,739,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2715,2,['test'],['test']
Testability,"Actually SOFA CI is already building a merge for PRs so I was wrong with my use case before. :sweat_smile: . Here is a corrected version of what could happen:; 1. Bob opens a SOFA PR that breaks SP3; -> the SOFA PR fails on SOFA CI; 2. Bob opens a SP3 PR to propose a fix to this future change in SOFA that will break SP3; -> the SP3 PR fails on SP3 CI (because it fixes something that is not broken yet); 3. Thanks to my work on ExternalProject, SOFA CI is able to test the SOFA PR with a custom version for SP3 (the version of the SP3 PR); -> the SOFA PR succeeds on SOFA CI; 4. SP3 PR is merged first (to ensure that SOFA/master always succeeds on SOFA CI); 5. **All the other SOFA PRs are now failing on SOFA CI** and must wait for Bob's SOFA PR to be merged; 6. SOFA PR is merged; 7. All the other SOFA PRs are fixed. The problematic point is the duration of step 5. ; How to make sure it is short? Is it a good idea to ask our devs to quickly merge 2 PRs from 2 projects? What about when it will be more complicated with 2, 3 or more external projects needing to be fixed?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2004#issuecomment-821193144:466,test,test,466,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2004#issuecomment-821193144,1,['test'],['test']
Testability,"Actually it works even when SReal=float, but it throws a weird message; ` [DEPRECATED] [MechanicalObject()] The deprecated template 'Vec3d' has been replaced by Vec3f` . And it looks better in the scenes IMO. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3635:748,test,test,748,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3635,2,['test'],['test']
Testability,"Actually the different specialization for sofa::helper::vector<> look highly suspicious to me and we can for sure do better. ; (especially the ""unsigned int"" one that is used to defined the indices in topologies). In this PR https://github.com/sofa-framework/sofa/pull/271; I wrote small tests trying to show all the possible ""bad behavior"" to fix. . EDIT: It is a bit out of the scope of the Hugo's initial question but it is somehow connected.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/265#issuecomment-301476350:288,test,tests,288,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/265#issuecomment-301476350,1,['test'],['tests']
Testability,Actually this is not fixed. See https://ci.inria.fr/sofa-ci/job/ubuntu_clang-3.8_options-debug/520/testReport/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/463#issuecomment-342433689:99,test,testReport,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/463#issuecomment-342433689,1,['test'],['testReport']
Testability,"Actually what we called ""delegate"" pattern (the one we used to think about to fix the ""call-super"" anti-pattern) is often refereed on intenret as Non Virtual Interface (a pattern very similar to the Template Method Pattern). . Here is a attempt to see it in use on VisualModel::drawVisual; . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3931:831,test,test,831,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3931,2,['test'],['test']
Testability,"Add 2 functions void enablePolygonOffset(float factor, float units); and l void disablePolygonOffset();; to handle the depth offset to draw lines on surfaces. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/937:410,test,test,410,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/937,2,['test'],['test']
Testability,Add Binding to python getCategories in SofaModule. A binding already exist in BaseObject but with this one you will be able to get the categories of an object with only its className; __________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/868:423,test,test,423,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/868,2,['test'],['test']
Testability,Add CUDA support on Continuous Integration (CI) to test SofaCUDA,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/665:51,test,test,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/665,1,['test'],['test']
Testability,"Add ConstraintAttachButtonSetting to allow configuration of Lagrangian based mouse interaction directly in the scene. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4601:657,test,test,657,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4601,2,['test'],['test']
Testability,Add Data bool d_checkTopology in PointSetTopologyContainer. By default to false. - Methods CheckTopology always return true if this option is not activated.; - Update some topology modifiers methods to check this option instead of CHECK_TOPOLOGY macro. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1351:504,test,test,504,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1351,2,['test'],['test']
Testability,"Add DataEigen.h file to SOFA, in order to be able to add eigen::MatrixXd and Eigen::VectorXd to the to sofa Data (for instance Data<Eigen::MatrixXd>). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1499:402,test,test,402,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1499,2,['test'],['test']
Testability,Add TaskAllocator interface to customize the task dynamic allocations and its standard implementation using operator new. The PR also include a change of return type of Task::run() function from bool to enum MemoryAlloc to let the scheduler know if the task must be deallocated or not just after it has been executed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/906:569,test,test,569,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/906,2,['test'],['test']
Testability,Add `hasViewer()` function to `Sofa` namespace.; This allow checking the graphical context without outputting errors to stderr. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/964:379,test,test,379,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/964,2,['test'],['test']
Testability,"Add a Data<bool> maxIteration in LCPForceFeedBack to set a number max of iteration for the gauss seidel used to solve the constraint problem. ADD LCPForceFeedback_test using a simple scene of a tool falling on a floor, checking constraint problem and request some force computation from LCPForceFeedback. Will see in a next PR how to add a test on concurrent threads asking for LCP computeForce . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1576:340,test,test,340,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1576,3,['test'],['test']
Testability,"Add a `FixedWeakConstraint`. It is really a simplified version of `RestShapeSpringForcefield` that only fixes points with respect to their rest_shape given one single value of stiffness. I didn't use an inheritance because `RestShapeSpringForcefield` does too much and the two set of features aren't really compatible. Keep it simple... . This completes the holy trinity of fixed constraints, now we will have Weak, Projective and Langrangian fixed constraints. It unifies the mechanism. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4750:1029,test,test,1029,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4750,2,['test'],['test']
Testability,Add a boolean data (d_propagatetoDOF) to allow or not the propagation of the topological changes to the mechanical state immediately as soon as they occure. Default value (d_propagateToDOF=true) the topological changes are propagated immediately following the SOFA regular behavior and it should not affect all the Sofa current scenes. If the boolean is set to false the topological state changes update are not propagated immediately and they can executed in another step of the simulaiton loop. This modification should make the concurrent execution of the topological changes and the simulation safe. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/838:855,test,test,855,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/838,2,['test'],['test']
Testability,"Add a csv file in /doc folder to store current benchmark performances. Tests were done using scenes stored in benchmarks folder, in cpu and gpu using CudaVec3f in batch mode.; Each scene has been run 10 times over 1000 steps. Computer specifications are inside the file. Here is a quick histogram of the results:; ![image](https://user-images.githubusercontent.com/21199245/148964875-99c21320-384f-40c9-9dc6-a5e77a8dca82.png). Also move some pictures from SofaCUDA/examples/ to SofaCUDA/doc. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2588:47,benchmark,benchmark,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2588,5,"['Test', 'benchmark', 'test']","['Tests', 'benchmark', 'benchmarks', 'test']"
Testability,"Add a generic method for drawing detection outputs following issue #4008 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4048:614,test,test,614,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4048,2,['test'],['test']
Testability,"Add a lagrangian constraint working the same way as FixedProjectiveConstraint. ; Added Vec3 and Rigid3 specialization. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4646:660,test,test,660,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4646,2,['test'],['test']
Testability,"Add a method to draw a single tetra scaled; Replace parameter name ```colour``` by ```color``` in sofa/gl/DrawToolGL.h. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2586:659,test,test,659,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2586,2,['test'],['test']
Testability,Add a new force field for angular springs; Add an example scene. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/334:316,test,test,316,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/334,2,['test'],['test']
Testability,"Add a new method to compute vertexMass using an input density and rework the different init to avoid calling several time the method computeMass which should not be used outside from the class. Fix test UnitTests.SofaBaseMechanics_test/DiagonalMass3_test.checkMassDensityTotalMassFromVertexMass_Tetra; which is failling since PR #2183 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2186:198,test,test,198,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2186,3,['test'],['test']
Testability,"Add a new update mechanism for components which need to update / recompute internal variables when one or several data are modified. A visitor has been created for this, called at each begin of time step to refresh if necessary the internal variables. All feedback welcome. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1131:525,test,test,525,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1131,2,['test'],['test']
Testability,Add a new video recorder class VideoRecorderFFMPEG to capture videos of simulated scenes. . This new video recorder has two differences from the old recorder. ; 1) It depends only on ffmpeg executable and not on any ffmpeg libs. ; 2) It is much faster. (only ~20% slowdown when capturing video). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/883:547,test,test,547,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/883,2,['test'],['test']
Testability,"Add a parameter ""drag"" to the collision response. When two objects slip past each other, a force of magnitude `-drag*relative_velocity` is applied to the contact points. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4991:709,test,test,709,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4991,2,['test'],['test']
Testability,Add a reset to the mappingJacobian in machanicalObject. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/438:307,test,test,307,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/438,2,['test'],['test']
Testability,Add a variable to count the number of primitve tests performed during the narrow phase of the collision detection.; This variable is only for statistics purpose. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/930:47,test,tests,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/930,3,['test'],"['test', 'tests']"
Testability,"Add abstract method in ForceFeedBack and override in LCPForceFeedback which will lock/unlock a mutex used in doComputeForce. This allow to lock the ForceFeedback computation, done in a dedicated working thread, from another component which is changing the mechanical system in the main thread of SOFA. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1157:553,test,test,553,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1157,2,['test'],['test']
Testability,"Add different collision models and highlight more the beam model as shown below:. ![](https://i.ibb.co/StrTkW2/snapshot.jpg). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2092:665,test,test,665,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2092,2,['test'],['test']
Testability,"Add file `SofaPhysicsBinding` to provide C functions to access the SofaPhysicsAPI methods; Add bindings for:; - SofaPhysicsAPI instance creation/destruction; - creating/loading/unloading SOFA scene (only .scn); - Simulation control: start/stop/step/reset, time stepping, gravity; - Access to SofaPhysicsOutputMesh (aka VisualModel) topology and positions/normals/texcoords. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3539:913,test,test,913,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3539,2,['test'],['test']
Testability,"Add find_package for Sofa.Component.LinearSolver.Ordering. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4999:598,test,test,598,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4999,2,['test'],['test']
Testability,"Add first version of the code compatible with CudaVec3f and CudaVec3d.; Performances are lower than CUDATetrahedronFEMForceField for the moment. Some profiling work will be done in future work. . Add cpu-gpu comparison scene and benchmarks scenes on a beam. this PR depends on changes done in FastTetrahedralCorotationalForceField suggested in PR #2569 (will need to rebase). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2585:229,benchmark,benchmarks,229,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2585,3,"['benchmark', 'test']","['benchmarks', 'test']"
Testability,"Add instantiation in CudaVec3f/CudaVec3f1 for; - LinearSolverConstraintCorrection; - PrecomputedConstraintCorrection; - UncoupledConstraintCorrection. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3004:690,test,test,690,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3004,2,['test'],['test']
Testability,Add just a collision model (Sphere to have collision in the default fontain.scn example of the SofaPython example. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/612:366,test,test,366,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/612,2,['test'],['test']
Testability,"Add method to compute the good element density using ancestors and coefs values.; Update all toplogy addElement to take into account ancestors indices and coefficients. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2257:708,test,test,708,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2257,2,['test'],['test']
Testability,"Add method:; - pointBaryCoefs to Compute the barycentric coefficients of input point in the current Triangle; - method isPointInTriangle using the barycentric coefficients; - Add unit tests with positive and negative cases. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4053:184,test,tests,184,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4053,3,['test'],"['test', 'tests']"
Testability,"Add more scenes to be tested for regression; [ci-depends-on https://github.com/sofa-framework/Regression/pull/17]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2237:22,test,tested,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2237,3,['test'],"['test', 'tested']"
Testability,"Add new directories (Let me know now if you want other names):; - **SofaCUDA/scenes/benchmarks/** _(to put cpu and similar gpu scenes to check performances)_; - **SofaCUDA/scenes/cpu-gpu_validation/** _(to put scenes within cpu and gpu Nodes)_. All scenes within actual SofaCUDA/examples will be progressively (after check and refresh) moved either to benchmarks or cpu-gpu_validation or a third directory: **SofaCUDA/scenes/demos** _(for more advanced gpu scenes)_. - Here is an example of cpu-gpu_validation scene for MeshSpringForceField. Cpu version in red and GPU version in green.; ![image](https://user-images.githubusercontent.com/21199245/147080986-1f138589-6fc4-4b28-8020-14095fb3775c.png). - For the benchmarks: ; - MeshSpringForceField_beam10x10x50_cpu.scn (~40 fps) ; - MeshSpringForceField_beam10x10x50_gpu.scn (~75 fps) . - Add Quick safeguard in CudaSpringforceField.cu to avoid 0 division. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2556:84,benchmark,benchmarks,84,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2556,5,"['benchmark', 'test']","['benchmarks', 'test']"
Testability,"Add option in ParticleSource to add random values in the particles generation.; Remove this option in the default scenes for the CI. [ci-depends-on https://github.com/https://github.com/sofa-framework/Regression/pull/58]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4316:761,test,test,761,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4316,2,['test'],['test']
Testability,"Add option to choose between restPosition and position. Also update the init method to better check the inputs. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1978:653,test,test,653,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1978,2,['test'],['test']
Testability,"Add option to transform (rotation, translation scale) in SphereLoader to match other loaders api. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1495:349,test,test,349,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1495,2,['test'],['test']
Testability,"Add scenes to test for regression. The scenes are about linear solvers.; The async solvers are not added due to the unpredicted nature of the solvers (cannot be tested for regression). [ci-depends-on https://github.com/sofa-framework/Regression/pull/23]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2776:14,test,test,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2776,4,['test'],"['test', 'tested']"
Testability,Add some comments to help newcomer starting with the basic CGLinearSolver. I also set by default the option _warmStart_ to true in [CGLinearSolver.inl](https://github.com/sofa-framework/sofa/blob/124c52ad384ab8a2d33cfd5d8915054fd1128e2b/SofaKernel/modules/SofaBaseLinearSolver/CGLinearSolver.inl#L116). Is this ok @matthieu-nesme ? I did not get why it's not the default behavior? performances ?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/365:648,test,test,648,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/365,2,['test'],['test']
Testability,Add tests on analytical deflection with BeamFEMForceField and topological changes,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2410:4,test,tests,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2410,1,['test'],['tests']
Testability,"Add the `SOFA_SCOPED_ADVANCED_TIMER` cmake option to add the contruction of a `sofa::helper::ScopedAdvancedTimer` in the macro `SCOPED_TIMER` and `SCOPED_TIMER_VARNAME` along or in the place of the Tracy timer. . This allows to also compile no timer at all.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4259:798,test,test,798,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4259,2,['test'],['test']
Testability,"Add the `computeBBox` method to `SpringForceField`, so all spring force fields having `SpringForceField` as the base class can update their bounding box. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2599:693,test,test,693,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2599,2,['test'],['test']
Testability,"Add the element type to SparseGrid to be able o use it with HexaToTetrahedraTopologicalMApping again. ; The Sparsgrid component only produces Hexa component, so this can be explicitly defined at the end of the init. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3475:757,test,test,757,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3475,2,['test'],['test']
Testability,"Add the graph illustrating the workflow of a PR review in the SOFA community. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3051:617,test,test,617,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3051,2,['test'],['test']
Testability,"Add timers to match what is present in the FreeMotionAnimationLoop. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5043:607,test,test,607,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5043,2,['test'],['test']
Testability,"Add tooltips to describe columns in the `SofaWindowProfiler`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2139:601,test,test,601,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2139,2,['test'],['test']
Testability,"Add topology EndingEvent to the queue of event each time before propagating. This event can be catch by callback if needed.; See next PR with uniformMass. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2376:694,test,test,694,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2376,2,['test'],['test']
Testability,"Add unit test for:; Hexahedron, tetrahedron, quad, triangle et edge removal. ; Edge is not supported for the moment. To be rebased on master when PR #2191, #2192 and #2193 are merged. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2215:9,test,test,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2215,3,['test'],['test']
Testability,"Add unit tests on HexahedralFEMForceField, based on HexahedronFEMForceField. Unfortunately, it fails. For now, this PR is just a warning to notice that both force fields don't match. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3968:9,test,tests,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3968,3,['test'],"['test', 'tests']"
Testability,"Add utility class for `TriangleSetTopologyModifier` component.; The class TriangleSubdivider is derived in 5 specializations to reflect the 5 possible scenario to subdivide a triangle. Those subdividers will be used in the new version of Triangle incision in `TriangleSetGeometryAlgorithms`. Todo, finish the tests:; - [x] testSubdivider_1Node();; - [ ] testSubdivider_1Edge();; - [ ] testSubdivider_2Edge();; - [ ] testSubdivider_3Edge();; - [ ] testSubdivider_2Node();. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4747:309,test,tests,309,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4747,3,['test'],"['test', 'tests']"
Testability,"Add virtualization layer to attachment performers. There exists two of them, either using lagrangian based constraints or springs. A common method `start_partial` already existed that was supposed to add required components and parametrize them to either add bilateral constraint or a spring, but this common mechanism was not link with any virtual inheritance. I need to handle both performers blindly using this method (`start_partial`) so I added a virtualization layer that makes more sens than what currently exists. I use it in this PR -> ([Sofa.IGTLink PR](https://github.com/sofa-framework/Sofa.IGTLink/pull/5)). I've also took advantage of this refactoring to rename some attributes that where not following the naming policy, because why not. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4638:1294,test,test,1294,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4638,2,['test'],['test']
Testability,"Add virtuals functions in image API. Problem : the virtual class ImageTransform doesn't have transformations functions (translation, rotation, scale). These functions are only available for ImageLPTransform type. (fix needed for an incoming feature in sofaqtquick). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/208:491,test,test,491,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/208,1,['test'],['test']
Testability,Add voluntary errors to test CI.; This PR will be deleted after testing. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/857:24,test,test,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/857,4,['test'],"['test', 'testing']"
Testability,"Add warning when file given has not been found and remove some flooding logs . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4026:72,log,logs,72,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4026,3,"['log', 'test']","['logs', 'test']"
Testability,"Added constraint tag to be able to classify them and treat them differently in the solvers.; Example of use : Being able to filter the bilateral constraint to solve them directly. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3888:719,test,test,719,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3888,2,['test'],['test']
Testability,Added function:; 	drawInifiniteLine; 	drawDisk; 	drawCircle; 	drawArrow. Every drawtool implementation will need to be updated. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1252:379,test,test,379,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1252,2,['test'],['test']
Testability,"Added some dependency to the fixup list; Maybe soon we'll have every dependency in this file... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4749:637,test,test,637,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4749,2,['test'],['test']
Testability,Added update of ROI indices at the beginning of each time step using the listening option. todo:; - drawing selected points and ROI radius; - define number of indices of object 1 to consider; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1066:443,test,test,443,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1066,2,['test'],['test']
Testability,Adding Edge case should be done using the proper lower topology addEdge mechanisme. Should fix the scene test error on AddingTetra2TriangleProcess.scn. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1319:105,test,test,105,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1319,3,['test'],['test']
Testability,"Adding a few utility functionalities to simplify Data tracking. - Data tracking system is now using Data's counter (lighter and simpler).; - externalizing Data tracking system outside of DataEngine so it can be use elsewhere (including other kinds of components).; - adding DataTrackerEngine that is a kind of DataEngine but that is not a component (not a BaseObject). It can easily be added anywhere and can link any Data, such as inside a Component, or even between components.; - adding DataTrackerFunctor to call a functor as soon as a Data is modified. What you can do: (have a look at the tests). - check if a Data changed on a regular rhythm. e.g check at each time step if a stiffness parameters changed to update a Matrix.; - automatically update a Data if its dependencies changed. e.g. young modulus can be set as a dependency of stiffness matrix, so each time you ask for the matrix, if the modulus changed, the matrix will be updated (behavior similar to DataEngine); - do an action as soon as a Data is modified. E.g. updating the gui scene graph as soon as a Node is (de)activated (by tracking the Data Node::activated).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/80:595,test,tests,595,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/80,1,['test'],['tests']
Testability,"Adding a few utility functionalities to simplify Data tracking. - externalizing Data tracking system outside of DataEngine so it can be use everywhere.; - Data tracking system is now using Data's counter (lighter and more simple).; - adding DataTrackerEngine that is a kind of DataEngine but that is not a component (not a BaseObject). It can easily be added anywhere and can link any Data, such as inside a Component, or even between components. What you can do: (have a look at the tests); - check if a Data changed on a regular rhythm. e.g check at each time step if a stiffness parameters changed to update a Matrix.; - automatically update a Data if its dependencies changed. e.g. young modulus can be set as a dependency of stiffness matrix, so each time you ask for the matrix, if the modulus changed, the matrix will be updated (behavior similar to DataEngine)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/60:484,test,tests,484,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/60,1,['test'],['tests']
Testability,Adding a general test to computeBBox,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/412:17,test,test,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/412,1,['test'],['test']
Testability,"Adding check on pointers and type of input/output topology (mostly input) before using them in TopologicalMapping. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3339:654,test,test,654,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3339,2,['test'],['test']
Testability,"Adding mostly missing RequiredPlugin and some cosmetic changes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1802:603,test,test,603,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1802,2,['test'],['test']
Testability,Adds a helper function to the FileRepository class that returns a platform-specific path to a temporary directory.; Windows and Linux platforms supported. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1382:408,test,test,408,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1382,4,['test'],['test']
Testability,Adds a stop when the visitor encounters a mapping. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/439:302,test,test,302,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/439,2,['test'],['test']
Testability,"Adds an example to the plugin ArticulatedSystemPlugin. . ![image](https://user-images.githubusercontent.com/12150715/159580224-bb724ee4-f469-4697-b373-e6e22c0b4a86.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2804:709,test,test,709,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2804,2,['test'],['test']
Testability,"Adds export from Rigid to Euler angles. One of the use case scenarios is attachment of a spotlight to a rigid body, described in [this thread](https://www.sofa-framework.org/community/forum/topic/attach-a-spotlight-to-a-rigid-body/). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1141:485,test,test,485,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1141,2,['test'],['test']
Testability,"Adds new features with examples:; - BooleanOperations; ![image](https://user-images.githubusercontent.com/12150715/121251475-e9d8e780-c874-11eb-8118-15d3dd24b54e.png); - UpsamplePointCloud; ![image](https://user-images.githubusercontent.com/12150715/121252236-c4001280-c875-11eb-8290-6c92b30fd82d.png); - PoissonSurfaceReconstruction; ![image](https://user-images.githubusercontent.com/12150715/121251754-37edeb00-c875-11eb-99f0-a120bff4f2f1.png) ; - FrontSurfaceReconstruction; ![image](https://user-images.githubusercontent.com/12150715/121251927-679cf300-c875-11eb-9114-9ebbd3d50789.png). Fixes compilation in CylinderMesh:; - **EDIT**: removed unused `#include <sofa/gl/template.h>`. Minor cleaning in DecimateMesh:; - Data member variables names with d_. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2124:1299,test,test,1299,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2124,2,['test'],['test']
Testability,"Adds the ability to insert a BaseObject at front or at end in the node. ; Adds the corresponding tests; Adds one use case of the feature to handle the default loop added by a Simulation. ; Adds a root-less createNode in simpleapi (to implement the test in an easier way) . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2396:97,test,tests,97,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2396,4,['test'],"['test', 'tests']"
Testability,"AdvancedTimer has a function end(), which wants a Node just to get a time and a dt...; And add an ugly (implicit) dependency on SofaSimulationCore (header-wise). Consequently, this PR :; - adds a fonction end() which takes a time and a dt instead of a Node*; - deprecates the original function end(... , Node* node) but change its behavior (calling the standard end()). Maybe it would even better to just delete the end() taking a Node*, as only BatchGUI, runSofa and its own test are using it. (in the SOFA code base at least). And as a side commit, clean the includes (json double-quoted include 🥱 ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1770:476,test,test,476,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1770,3,['test'],['test']
Testability,"After a session of peer-programming with @lamriaimen . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4793:594,test,test,594,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4793,2,['test'],['test']
Testability,After discussion in https://github.com/sofa-framework/sofa/pull/536. Let's use this to nicely format our PRs :-). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/550:365,test,test,365,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/550,2,['test'],['test']
Testability,"After downloading and installing the current release binary for macOS on macOS 11.2.3 (Big Sur) it fails with the error `Symbol not found: __ZN13QOpenGLWidget10paintEventEP11QPaintEvent`. Here is the full error log:; ```; Process: runSofa-20.12.01 [50874]; Path: /Applications/runSofa.app/Contents/MacOS/bin/runSofa; Identifier: org.sofa-framework.runsofa; Version: 0; Code Type: X86-64 (Native); Parent Process: ??? [1]; Responsible: runSofa-20.12.01 [50874]; User ID: 501. Date/Time: 2021-03-13 15:57:28.167 +0100; OS Version: macOS 11.2.3 (20D91); Report Version: 12; Bridge OS Version: 5.2 (18P4347); Anonymous UUID: 5C06CC90-63AA-4BB4-D9A1-27A399A7A269. Sleep/Wake UUID: EDB34D1C-5F47-4D91-82BA-9C09AEC804F8. Time Awake Since Boot: 75000 seconds; Time Since Wake: 13000 seconds. System Integrity Protection: enabled. Crashed Thread: 0. Exception Type: EXC_CRASH (SIGABRT); Exception Codes: 0x0000000000000000, 0x0000000000000000; Exception Note: EXC_CORPSE_NOTIFY. Termination Reason: DYLD, [0x4] Symbol missing. Application Specific Information:; dyld: launch, loading dependent libraries. Dyld Error Message:; Symbol not found: __ZN13QOpenGLWidget10paintEventEP11QPaintEvent; Referenced from: /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts; Expected in: /usr/local/lib/QtWidgets.framework/QtWidgets; in /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts. Binary Images:; 0x1078c4000 - 0x1078e7fff +runSofa (0) <F5377489-827F-342E-9B3B-C78AC8FFB70D> /Applications/runSofa.app/Contents/MacOS/bin/runSofa; 0x1078f7000 - 0x107916fff +libSofaSimulationGraph.20.12.01.dylib (0) <2B9D2482-ED40-3ECB-9B4A-7BB93AFEF219> /Applications/runSofa.app/Contents/MacOS/lib/libSofaSimulationGraph.20.12.01.dylib; 0x107957000 - 0x10796afff +libSofaGuiMain.20.12.01.dylib (0) <B93CBF60-CD3B-39C5-9B98-9DAF891408CC> /Applications/runSofa.app/Contents/MacOS/lib/libSofaGuiMain.20.12.01.dylib; 0x107979000 - 0x1079dcfff +libSofaValidat",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:211,log,log,211,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['log'],['log']
Testability,"After further investigations:; - running the python script from runSofa (instead from a py env), **works** (array is modified); - printing pointers shows that the pointer is changing when doing `self.MO.position.value = self.MO.rest_position.value + random_disp` when running from a py env, whereas not with runSofa; - using my c++ controller but in the python scene, works ( `root.addObject(""MyTestController"", name=""testcontroller"", MO=""@MO"")` ); - weirdest of all, if **adding** my c++ controller in the scene, along the python Controller one.... the python Controller then works 😵; ```; root.addObject(""MyTestController"", name=""testcontroller"", MO=""@MO""); root.addObject(Controller(root.MO)); ```. So my speculation is that the custom python Controller stuff has some memory/link/data problem, but I dont know what...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2761#issuecomment-1064092685:418,test,testcontroller,418,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2761#issuecomment-1064092685,2,['test'],['testcontroller']
Testability,"After some tests on a cantilever beam with a LDL solver and a scalar CSR matrix:. - `addKToMatrix` takes a large part of the time for low number of elements; - `addKToMatrix` takes less and less part of the time as the number of elements grows; - The time consuming operation (more than 90% of the time) in `addKToMatrix` is `r.matrix->add(i, j, v)`. In the test, `r.matrix` is of type `CompressedRowSparseMatrix<double>`, and I did not test a bloc-based matrix. ; - In `r.matrix->add`, `wbloc` is the time consuming function. My profiler did not tell me more information inside this function. I tried to pre-allocate `btemp` before all the `add` calls, but it does not help. I suspect the bad performances come from the algorithm itself which must find an element in sorted arrays at each `add` call.; - Since the bad performances come from `CompressedRowSparseMatrix<double>::add`, it would be interesting to parallelize the calls to `add`. However, I doubt `CompressedRowSparseMatrix` is thread-safe...; - My tests are in https://github.com/alxbilger/sofa/commit/41584bceaf5d5666c362cdfb28238318c750af9e. But I don't plan to merge it since it does not improve the performances",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2177#issuecomment-868309098:11,test,tests,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2177#issuecomment-868309098,4,['test'],"['test', 'tests']"
Testability,"After spending some (too much?) time on this topic, it seems that the fact that static_assert not being evaluated in uninstantiated functions of template classes is not consistent between compilers.; Neither could I find a way to trick the compiler to postpone the evaluation of the condition of the static_assert (for example replace (N==10) by (sizeof(T)==0||N==10) , of template tricks to force the compiler to wait for template instantiation before assertion evaluation. All this is also true for BOOST_STATIC_ASSERT (tried this with no chance, too). My opinion would be to simply remove the static_asserts, since in this context their behaviour is not specified by C++ references (and not consistent). We loose the benefit of the safeguard but are not subject to false-positive anymore. If anyone sees another solution...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/130#issuecomment-272476017:453,assert,assertion,453,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/130#issuecomment-272476017,1,['assert'],['assertion']
Testability,"After the discussion on DataLink ( #1526 ) now the Link themselves:. Objectives:; - Avoid multiple instantiations (Node.h) - Link with forward declaration; - Avoid using Links for Sequence / Single when it is actually no real Link. Positive impact:; - clean, factorization and especially the tests; - compile time, perf, related problems: can not be evaluated; - code more readable, more accessible (new devs). Functionally:; - store list something with a name and a help string; - SingleLink vs MultiLink → Shared API; - MultiLink conversion does not exist; - MultiLinks have iterators; - SingleLink have the API for iterating over elements (even if single link). -------. Tasks; - Add test for CheckPath to validate its behavior: #1714 [Merged]; - Move CheckPath() & CheckPathes() from Link.h to BaseLink: #1717 [Merged]; - Add test to show broken behavior in SingleLink: #1749 [To review]; - Move updateLinks() from Link.h to BaseLink: #1735 [Waiting #1749]; - Move read() from Link.h to BaseLink: #1736 [Waiting 1735]; - Unify the notifcation mechanisme in SingleLink/MultiLink: #1706 [breaking]; - Unify the container part of the Link API for SingleLink/MultiLink/BaseLink: (TO COME, draft in:; https://github.com/CRIStAL-PADR/sofa/blob/xp-remove-node-deps/SofaKernel/modules/SofaCore/src/sofa/core/objectmodel/Link.h ); - Replace the use of SingleLink to implement the non sptr version of Node::Single: (TO COME, wip in #1737); - Replace the use of MultiLink to implement the non sptr version Node::Sequence: (TO COME as drafted in NodeContainerSequence https://github.com/CRIStAL-PADR/sofa/blob/xp-remove-node-deps/SofaKernel/modules/SofaSimulationCore/src/sofa/simulation/Node.h); - Unify at best the internal parts of SingleLink & MultiLink (TO COME)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1722:292,test,tests,292,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1722,3,['test'],"['test', 'tests']"
Testability,Again a case where a `std::unordered_map` is preferable over a `std::map`. It makes a difference in the benchmarks:. # Before. ```; -----------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------; BM_AdvancedTimer_begin_end 78.4 ns 78.1 ns 11200000; BM_AdvancedTimer_largeNumberTimers/128 0.012 ms 0.012 ms 64000; BM_AdvancedTimer_largeNumberTimers/512 0.073 ms 0.073 ms 8960; BM_AdvancedTimer_largeNumberTimers/4096 0.760 ms 0.767 ms 896; BM_AdvancedTimer_largeNumberTimers/16384 3.39 ms 3.37 ms 204; BM_AdvancedTimer_deepTreeEnabled/1/2 0.000 ms 0.000 ms 1659259 nbTimers=2; BM_AdvancedTimer_deepTreeEnabled/2/2 0.001 ms 0.001 ms 560000 nbTimers=6; BM_AdvancedTimer_deepTreeEnabled/4/2 0.004 ms 0.004 ms 165926 nbTimers=20; BM_AdvancedTimer_deepTreeEnabled/8/2 0.016 ms 0.016 ms 44800 nbTimers=72; BM_AdvancedTimer_deepTreeEnabled/16/2 0.072 ms 0.071 ms 8960 nbTimers=272; BM_AdvancedTimer_deepTreeEnabled/32/2 0.302 ms 0.298 ms 2358 nbTimers=1056; BM_AdvancedTimer_deepTreeEnabled/64/2 1.35 ms 1.35 ms 498 nbTimers=4.16k; BM_AdvancedTimer_deepTreeEnabled/1/3 0.001 ms 0.001 ms 1120000 nbTimers=3; BM_AdvancedTimer_deepTreeEnabled/2/3 0.003 ms 0.003 ms 248889 nbTimers=14; BM_AdvancedTimer_deepTreeEnabled/4/3 0.019 ms 0.019 ms 37333 nbTimers=84; BM_AdvancedTimer_deepTreeEnabled/8/3 0.153 ms 0.150 ms 4480 nbTimers=584; BM_AdvancedTimer_deepTreeEnabled/16/3 1.15 ms 1.15 ms 640 nbTimers=4.368k; BM_AdvancedTimer_deepTreeEnabled/32/3 9.69 ms 9.58 ms 75 nbTimers=33.824k; BM_AdvancedTimer_deepTreeEnabled/64/3 103 ms 103 ms 7 nbTimers=266.304k; BM_AdvancedTimer_deepTreeEnabled/1/4 0.001 ms 0.001 ms 640000 nbTimers=4; BM_AdvancedTimer_deepTreeEnabled/2/4 0.008 ms 0.008 ms 89600 nbTimers=30; BM_AdvancedTimer_deepTreeEnabled/4/4 0.115 ms 0.114 ms 5600 nbTimers=340; BM_AdvancedTimer_deepTreeEnabled/8/4 1.74 ms 1.77 ms 407 nbTimers=4.68k; BM_AdvancedTimer_deepTre,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2645:104,benchmark,benchmarks,104,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2645,2,"['Benchmark', 'benchmark']","['Benchmark', 'benchmarks']"
Testability,"Again with a naïve approach, but it's faster than the sequential algorithm. About twice faster on the example. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3668:650,test,test,650,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3668,2,['test'],['test']
Testability,"Agreed. It's simpler.; To be clearer: plugin was equal to ""PSL"" and not ""PSL.dll"". In this case, we want to to load as a name, but the test based on std::equal crashes (in debug only).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/617#issuecomment-376458776:135,test,test,135,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/617#issuecomment-376458776,1,['test'],['test']
Testability,"Ah, you must be careful to not confuse image and CImgPlugin. Both of them are using CImg but they are using it separately.; The warning you are noticing comes from CImgPlugin (which warns if it does not find libjpeg and libtiff).; CImgPlugin_test tests if JPEG or TIFF have been enabled (if not, of course it does not test it). As for plugin image, I think it was developed mainly by people using imagemagick on Linux or mac (which is called automatically if CImg does not recognize the format I think).; On Windows, it is not really natural to have imagemagick into the PATH... Anyway, the solutions are:; - change lena.jpg by lena.bmp (it should not need any external library); - add imagemagick to the Windows CI; - add libjpeg/libtiff to the external libraries of Sofa (like libpng) and add libjpeg/libpng support to the image plugin.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/460#issuecomment-335476728:247,test,tests,247,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/460#issuecomment-335476728,2,['test'],"['test', 'tests']"
Testability,Aims to solve #914. Replace array of size 6 with vector of size `constraintsResolutions[j]->getNbLines();`. Fixes #914. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/920:371,test,test,371,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/920,2,['test'],['test']
Testability,All in the title as said in the dev meeting. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1291:296,test,test,296,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1291,2,['test'],['test']
Testability,"All in the title, files from the previous organization were not deleted; and some cmake.in was not correctly updated. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2909:657,test,test,657,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2909,2,['test'],['test']
Testability,"All in the title. - fix markdown bullet points in CONTRIBUTING; - undeed include in LCPConstraintSolver.cpp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2174:648,test,test,648,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2174,2,['test'],['test']
Testability,All in the title. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1239:269,test,test,269,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1239,2,['test'],['test']
Testability,"All in the title. ~~Sofa.Testing.Tools aims to regroup all the test templates/skeletons, etc, so the *_test could use it.; It should also a ""header-only"" (aka INTERFACE syntax in cmake) but for now it is treated like a (empty) shared lib.; By itself it does not manage any dependencies, it is the role of the *_test itself to handle its own dependencies.~~. Sofa.Component.ODESolver.Testing gathers all tools/test template for odesolver tests.; Next step should removing SofaCreator and use SimpleAPI instead (and thus removing all binaries dependencies). But the finalization of this should be reviewed/discussed. Mandatory ref #1527; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2650:25,Test,Testing,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2650,7,"['Test', 'test']","['Testing', 'test', 'tests']"
Testability,"All is in the title, scene originally from @virginiemarec; This new scene shows how to simply in XML define an heterogeneous object with different regions.; ![](https://i.ibb.co/WzqdPp8/snapshot.jpg). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2289:740,test,test,740,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2289,2,['test'],['test']
Testability,"All is in the title. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3570:560,test,test,560,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3570,2,['test'],['test']
Testability,All is in the title. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1016:272,test,test,272,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1016,2,['test'],['test']
Testability,"All is in the title; Unfortunately, closing did not work due to missing return string. Now this will work!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4560:647,test,test,647,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4560,2,['test'],['test']
Testability,"All loaders/exporters consider the file format in upper-case EXCEPT MeshObjLoader.; When you have stuff like MeshVTKLoader, MeshOBJ, OBJExporter, MeshSTLLoader, ImagePNG, etc; it looks not consistent. So this PR renames all occurrences of MeshObjLoader to MeshOBJLoader and add an alias with `MeshObjLoader` to keep the compatibility with the existing scenes. Otherwise, all the other upper-case should be converted to Xxx but will be much more bothersome that this PR.... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2428:1012,test,test,1012,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2428,2,['test'],['test']
Testability,"All pluginized modules were ignored in binaries due to postinstall-fixup scripts. :warning: **Do not hesitate to suggest other plugins/modules that should be DISABLED by default.**. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1725:721,test,test,721,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1725,2,['test'],['test']
Testability,"All scenes in the ""examples"" folder have the required RequiredPlugin corresponding to the components in the scene. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2836:654,test,test,654,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2836,2,['test'],['test']
Testability,"All tests not working are due to input mesh with an inconstant input mesh.; Like Quad without edges, or list of quads and edges only on border, etc... what should we do?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3368#issuecomment-2061113394:4,test,tests,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3368#issuecomment-2061113394,1,['test'],['tests']
Testability,All tests on the topology should be in a utility out from the container buffer.; This will remove the methods checkTopology() . See PR #1351 . ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1367:4,test,tests,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1367,1,['test'],['tests']
Testability,All tests scenes are now failing because we cannot load the SofaSphFluid plugin. ; This fix should helps ;) . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/467:4,test,tests,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/467,3,['test'],"['test', 'tests']"
Testability,"All the `op*` method in `BaseMatrix` seem either unused, or overloaded (by `RotationMatrix`). And they are called only knowing that `RotationMatrix` is used. It makes me think that this code is not used. This PR removes all the code in the cpp file, but it should be restored before merge for a proper deprecation mechanism. Let's first check that the CI does not fail without this code. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3335:927,test,test,927,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3335,2,['test'],['test']
Testability,"Allow a 3-level organization: Package > Component > Target. ### Example with SofaPython3 (PR to come in SofaPython3 repo); You want to do:; ```cmake; find_package(SofaPython3 COMPONENTS Bindings); ```; To do that, you must use these macros in your project:; ```cmake; # In SofaPython3/CMakeLists.txt; # Create a Package without Target to contain the Components; sofa_create_package(; PACKAGE_NAME SofaPython3; PACKAGE_VERSION ${PROJECT_VERSION}; RELOCATABLE ""plugins""; ); ```; ```cmake; # In SofaPython3/Bindings/CMakeLists.txt; # Create a Component with Targets into that Package; sofa_create_component_in_package_with_targets(; COMPONENT_NAME Bindings; COMPONENT_VERSION ${SofaPython3_VERSION}; PACKAGE_NAME SofaPython3; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR "".""; RELOCATABLE ""..""; ); ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1671:1391,test,test,1391,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1671,2,['test'],['test']
Testability,Allow all loaders (namely Gmsh and STL) to flipNormals (actually reorder the indices of vertices in a triangle).; Update associated scenes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1418:391,test,test,391,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1418,2,['test'],['test']
Testability,Allows for better interactions in UIs. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1471:290,test,test,290,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1471,2,['test'],['test']
Testability,"Already spotted in https://github.com/sofa-framework/sofa/pull/2560 but not propagated to other functions. Reminder: https://godbolt.org/z/no6hss6jr. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3636:689,test,test,689,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3636,2,['test'],['test']
Testability,"Also a demonstration on how to use Eigen::Map from a CRS matrix. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2839:604,test,test,604,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2839,2,['test'],['test']
Testability,"Also add a tooltip. Note that the scene graph is unlocked by default. It gives the impression that the simulation is slowed down, compared to before the introduction of the feature. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3119:721,test,test,721,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3119,2,['test'],['test']
Testability,"Also avoid to call the method at ```init``` as input indices might probably not be updated yet. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1979:637,test,test,637,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1979,2,['test'],['test']
Testability,"Also clean and change code structure to reduce the number of access to element from index. ; Depends on PR #2275 and #2283. Average timing on a set of 6 executions of 10 successive runs of 1000 steps on a grid of 40x40 :. Before PR #2273 ; ```; TriangleFEMForceField:; timeMean: 1.83344; timeMin : 1.78238; timeMax : 1.89879. TriangularFEMForceField:; timeMean: 3.69814; timeMin : 3.62193; timeMax : 3.84991; ```. ### **Edit: new performances after several optimisations**; ```; TriangleFEMForceField ; timeMean: 1.43496; timeMin: 1.428055; timeMax: 1.45082. TriangularFEMForceField:; timeMean: 1.459322; timeMin: 1.45386; timeMax: 1.468145; ```. Simulation of 20sec for: ; - Green: TriangleFEMForceField; - Red: TriangularFEMForceField; - Blue: TriangularFEMForceFieldOptim. Before Before PR #2273 ; ![TriangleFEM_old](https://user-images.githubusercontent.com/21199245/128017042-dd476945-5248-457c-9739-108499eb3a0e.gif); After this PR; ![TriangleFEM_new](https://user-images.githubusercontent.com/21199245/128015719-4c90e7d7-4ee4-4525-ad5e-2a2c9d1bfa2f.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2287:1601,test,test,1601,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2287,2,['test'],['test']
Testability,"Also clean compilation warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2176:572,test,test,572,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2176,2,['test'],['test']
Testability,"Also clean the __declspec directives and the stream operator. This PR must be merged after https://github.com/sofa-framework/sofa/pull/3585, to make sure there is no regression in the introduced unit test. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3586:200,test,test,200,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3586,3,['test'],['test']
Testability,"Also display them only if component printLog is set to true. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2152:600,test,test,600,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2152,2,['test'],['test']
Testability,"Also, I made `ExternalBehaviorModel` depends on `SOFA_ENABLE_LEGACY_HEADERS`, since it depends on `SofaGraphComponent` which also depends on `SOFA_ENABLE_LEGACY_HEADERS`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3302:710,test,test,710,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3302,2,['test'],['test']
Testability,"Also, the repository won't generate anymore the following error when it is created from another library/executable that is not placed directly in the SOFA installation directory:. ```; Error: [FileSystem::isDirectory()] /home/runner/work/my_program/share/sofa/examples: No such file or directory; Error: [FileSystem::isDirectory()] /home/runner/work/my_program/share/sofa: No such file or directory; ``` . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1656:945,test,test,945,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1656,2,['test'],['test']
Testability,Also: the test is the associated example.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/411#issuecomment-335815718:10,test,test,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/411#issuecomment-335815718,1,['test'],['test']
Testability,"Alternatively, you could simply stick all your data inside a dedicated structure as follows:. ```c++; class Component : public Base {; ; struct data_type {; Data<int> test;; Data<double> test2;. data_type(Component* owner); : test(owner->initData(&test, int(0), ""test"", ""test doc"")),; test2(owner->initData(&test2, double(0.0), ""test2"", ""test2 doc"")) {; ; }; ; } data;. Component(); : data(this) {. }. Component(int foo); : data(this) {. }; ; }; ; ```; As an added bonus, you don't even have to use `d_` prefixing to remember which attribute is a Data ;-)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/274#issuecomment-303142439:167,test,test,167,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/274#issuecomment-303142439,5,['test'],['test']
Testability,"Although I understand your wish not to break too much and do this transition form custom to stl containers, wouldn't it be more logical to make the Sofa Vec<N,T> inherit from stl fixed_array ? I don't know if this is desirable, but if it is ever done, wouldn't this pr be somehow reverted by his change ? What I mean is that, an RGBA value is still a vector of fixed size, so there is no problem regarding this inheritance that allows to do vector operations with it right ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4263#issuecomment-1790440999:128,log,logical,128,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4263#issuecomment-1790440999,1,['log'],['logical']
Testability,"Although it is not required, I prefer to add headers to the project so that the IDE can index them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2581:639,test,test,639,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2581,2,['test'],['test']
Testability,"Amazing, I have tested the branch and it compiles fine. Thank you for your prompt response. ; Please feel free to close the issue when #3727 is merged.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3726#issuecomment-1468384088:16,test,tested,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3726#issuecomment-1468384088,1,['test'],['tested']
Testability,"Among the remaining `bwdInit()` functions, this PR removes the one which were useless or rather related to the AnimateBeginEvent. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2851:669,test,test,669,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2851,2,['test'],['test']
Testability,"An alternative to https://github.com/sofa-framework/sofa/pull/3687/. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3703:608,test,test,608,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3703,2,['test'],['test']
Testability,"An error was introduced in #1793, reported in Issue #1865 and fixed in this PR/. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1866:620,test,test,620,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1866,2,['test'],['test']
Testability,"An example is introduced for SquareMapping. In this scene, the goal was to verify that two methods are equivalent:; 1) A SquaredDistanceMapping is used to transform the DOFs from the 3d space to a 1d space (representing the squared distances between the DOFs). Then a spring acts in the 1d space; 2) A combination of two mappings: DistanceMapping and SquareMapping. It also transforms the 3d space to a 1d space where a spring is added. A unit test is added to check both methods are equivalent. However, we can observe that if the simulation runs long enough, both objects diverge. It will be a challenge to find the reasons. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3768:444,test,test,444,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3768,3,['test'],['test']
Testability,An inputForceFeedback data is added in Geomagic so that a force; can be specified as input of the driver.; This force is used only if no LCP is found. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/648:402,test,test,402,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/648,2,['test'],['test']
Testability,An opportunity to add a unit test in SofaPython3 ;),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3464#issuecomment-1307353148:29,test,test,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3464#issuecomment-1307353148,1,['test'],['test']
Testability,"An other batch of warnings fixes. Detected while using gcc13 from ubuntu2404. Fix some UB by fixing some dangling references warnings. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4698:674,test,test,674,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4698,2,['test'],['test']
Testability,"An other method for better error handling. (the other one to be exception mechanism #1882 ). 'Expected' idiom : ; - [theory by Andrei Alexandrescu](https://channel9.msdn.com/Shows/Going+Deep/C-and-Beyond-2012-Andrei-Alexandrescu-Systematic-Error-Handling-in-C); - clear explanation and comparison with exception: https://bell0bytes.eu/expected/. I am using boost::outcome because we have already boost in SOFA, but this is just to show the concept (I dont want to introduce more boost in SOFA..): https://ned14.github.io/outcome/. (Issue #1924 ); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1925:1086,test,test,1086,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1925,2,['test'],['test']
Testability,"An other round of fixes to compile base SOFA with float (framework+GUI, no tests nor plugins). The CI itself will only check if nothing changed with double. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3435:75,test,tests,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3435,3,['test'],"['test', 'tests']"
Testability,"An other session of warnings removal. it *should* be harmless 🤫. Most important change: replace usage of enum {xxx = yyy} with constexpr keyword for compile-time constant expressions. This is clearer, was made for this, and you can specify the type, contrary to enum https://en.cppreference.com/w/cpp/language/enum :; ```; Values of unscoped enumeration type are [implicitly-convertible](https://en.cppreference.com/w/cpp/language/implicit_conversion#Integral_promotion) to integral types. ; If the underlying type is not fixed, the value is convertible to the first type from the following list able to hold their entire value range: int, unsigned int, long, unsigned long, long long, or unsigned long long, extended integer types with higher conversion rank (in rank order, signed given preference over unsigned) (since C++11).; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3118:1375,test,test,1375,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3118,2,['test'],['test']
Testability,"Ancestors and coefficient parameters were lost during EdgeAdded and PointAdded methods coming from Tetrahedron to Triangle mesh. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2460:668,test,test,668,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2460,2,['test'],['test']
Testability,"And also clean DataFileName and DataFileNameVector. DataFileNameVector has been extracted in its own files. The extra copy came from the DataFileNameVector constructor which took a `sofa::type::vector<std::string>` but it should take a `sofa::type::SVector<std::string>`. Therefore, there was an implicit conversion. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3188:856,test,test,856,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3188,2,['test'],['test']
Testability,And it pass tests at first time :),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1689#issuecomment-753904506:12,test,tests,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1689#issuecomment-753904506,1,['test'],['tests']
Testability,"And remove dependency. If you need to link a background (image/pix) to a camera (for a gui), I dont think the camera itself should be aware of it, but the GUI itself. (and it should then bear the dependency with BackgroundSetting). (Could not find any use of it in the SOFA code base, or even in the plugins). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2637:849,test,test,849,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2637,2,['test'],['test']
Testability,And use them in the Simulation.cpp component. Follow the discussion in this PR: ; https://github.com/SofaDefrost/plugin.SofaPython3/pull/110. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1173:393,test,test,393,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1173,2,['test'],['test']
Testability,"And when you see that, on the CI, for Windows, that the log size is going from 16MB to 1.6MB... you know it was useful 😙",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1682#issuecomment-751660556:56,log,log,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1682#issuecomment-751660556,1,['log'],['log']
Testability,"Announcement messages on Discord showed some issues, this should fix them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4530:614,test,test,614,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4530,2,['test'],['test']
Testability,Another benchmark: `examples/Demos/chainAll.scn`. With parallelism; ```; 1000 iterations done in 41.8915 s ( 23.8712 FPS).; ```. Without parallelism:; ```; 1000 iterations done in 91.9302 s ( 10.8778 FPS).; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1599092992:8,benchmark,benchmark,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3959#issuecomment-1599092992,1,['benchmark'],['benchmark']
Testability,"Any idea why `SofaPython3/Bindings.Sofa.Tests` tests are failing?. The output:; ```text; Running unit-tests Bindings.Sofa.Tests; Calling: bash -c ""/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Bindings.Sofa.Tests --gtest_output=xml:unit-tests/Bindings.Sofa.Tests/report.xml 2>&1"". [INFO] [SofaPython3] Initializing with python version 3.8.6 (default, Oct 27 2020, 09:13:12) ; [GCC 9.3.1 20200408 (Red Hat 9.3.1-2)]; [INFO] [SofaPython3] Registering a scene loader for [.py, .py3, .pyscn, .py3scn] files.; [INFO] [SofaPython3] Shared library name is 'libpython3.8m.so'; [INFO] [SofaPython3] Intializing python; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/image/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/Registration/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/RigidScale/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/Flexible/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/Compliant/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/lib/python3/site-packages' to sys.path; [INFO] [PluginManager] Loaded plugin: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/lib/libSofaPython3.so; [INFO] [SofaPython3] Initializing with python version 3.8.6 (default, Oct 27 2020, 09:13:12) ; [GCC 9.3.1 20200408 (Red Hat 9.3.1-2)];",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796:40,Test,Tests,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796,7,"['Test', 'test']","['Tests', 'tests']"
Testability,Any idea why building acd79fe caused more than 20 new unit test failures?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/317#issuecomment-315742489:59,test,test,59,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/317#issuecomment-315742489,1,['test'],['test']
Testability,Any reason to have re-opened this ? I thought we all agreed that this PR would be discarded and closed as the initial behavior of having Sofa.Testing built for other plugins TU is OK and the problem with conda was fixed thanks to #447.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4459#issuecomment-1964698947:142,Test,Testing,142,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4459#issuecomment-1964698947,1,['Test'],['Testing']
Testability,Any update on your side @EulalieCoevoet?; Or could you just share a simple scene for us to test and reproduce the problem?; Thanks,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1862#issuecomment-810881801:91,test,test,91,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1862#issuecomment-810881801,1,['test'],['test']
Testability,"Apparently GCC11, by default, treats the ""maybe uninitialized"" warning as an error. ; This occurs in our version of gtest.; ref: https://github.com/google/googletest/issues/3219. I did not consider updating gtest itself as it could be bothersome.; And I think the ""maybe uninitialized"" warning as an error itself is good ; (therefore no command line option fix to consider it only as a warning). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2181:935,test,test,935,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2181,2,['test'],['test']
Testability,Apparently a remaining test is failing : TetrahedronVolumeMappingTest/0.test_perTetra; Are you on it @epernod ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/243#issuecomment-334498519:23,test,test,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/243#issuecomment-334498519,1,['test'],['test']
Testability,"Apparently clang-mac is very picky about location of the symbols with LTO enabled, and this fact could expose some problem for explicit instanciations (typos, wrong location). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4293:715,test,test,715,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4293,2,['test'],['test']
Testability,"Apparently, I am unable to run runSofa when using something related to OpenGL with mesa graphics on linux. Here you can find a backtrace. ```; ########## SIG 6 - SIGABRT: usually caused by an abort() or assert() ##########; -> /opt/libs/sofa/build/lib/libSofaHelper.so.20.06.99(sofa::helper::BackTrace::dump()+0x23) [0x7fb9a8befb13]; -> /opt/libs/sofa/build/lib/libSofaHelper.so.20.06.99(sofa::helper::BackTrace::sig(int)+0x1df) [0x7fb9a8befeaf]; -> /usr/lib/libc.so.6(+0x3d6a0) [0x7fb9a83c56a0]; -> /usr/lib/libc.so.6(gsignal+0x145) [0x7fb9a83c5615]; -> /usr/lib/libc.so.6(abort+0x116) [0x7fb9a83ae862]; -> /usr/lib/libstdc++.so.6(+0x9686a) [0x7fb9a876986a]; -> /usr/lib/libstdc++.so.6(+0xa2d9a) [0x7fb9a8775d9a]; -> /usr/lib/libstdc++.so.6(+0xa2e07) [0x7fb9a8775e07]; -> /usr/lib/libstdc++.so.6(+0xa30ae) [0x7fb9a87760ae]; -> /usr/lib/libstdc++.so.6(std::__throw_logic_error(char const*)+0x45) [0x7fb9a876c445]; -> /opt/libs/sofa/build/lib/libSofaHelper.so.20.06.99(CanUseGlExtension(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)+0x11c) [0x7fb9a8ce16ec]; -> /opt/libs/sofa/build/lib/libSofaHelper.so.20.06.99(sofa::helper::gl::GLSLShader::InitGLSL()+0x9e) [0x7fb9a8ce29ae]; -> /opt/libs/sofa/build/lib/libSofaOpenglVisual.so(sofa::component::visualmodel::OglShader::initVisual()+0x2c) [0x7fb99f31abfc]; -> /opt/libs/sofa/build/lib/libSofaOpenglVisual.so(sofa::component::visualmodel::Light::initVisual()+0x31d) [0x7fb99f2767bd]; -> /opt/libs/sofa/build/lib/libSofaOpenglVisual.so(sofa::component::visualmodel::LightManager::initVisual()+0x259) [0x7fb99f28c529]; -> /opt/libs/sofa/build/lib/libSofaSimulationCore.so.20.06.99(sofa::simulation::VisualInitVisitor::processNodeTopDown(sofa::simulation::Node*)+0x127) [0x7fb9a9d37407]; -> /opt/libs/sofa/build/lib/libSofaSimulationGraph.so.20.06.99(sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simul",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1567:203,assert,assert,203,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1567,1,['assert'],['assert']
Testability,Appeared after upgrading MacOS to 10.11:; using a relative filename in SceneLoaderXML::loadFromMemory raises ENOENT (No such file or directory) error during SetDirectory chdir.; Still don't know why though :-/. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/325:462,test,test,462,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/325,2,['test'],['test']
Testability,"Appearing when other files includes BaseConstraintSet.h. It appeared because:; - the declaration itself was not guarded; - the constructor and the destructor body were in the h, triggering the warning. Actually the last cause is the reason why there are a lot of deprecation warnings due to the Data renaming, even if ""macro-guarded""; there are a lot of components where the body of the ctor and/or the dtor (even only with `=default`) are in the header file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4846:999,test,test,999,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4846,2,['test'],['test']
Testability,"Apply doUpdateInternal API to ConstantForceField; and also change the behavior: do not extrapolate any info when an mismatch of size is detected. - Finally, let's not wait the Data update discussion to integrate such an amazing change ; - And .. we could also think about renaming this class as UniformForceField to be consistent with Masses!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1145:595,test,test,595,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1145,2,['test'],['test']
Testability,"Apply modification to build and use modeler in sofa framework. ___________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4673:599,test,test,599,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4673,2,['test'],['test']
Testability,Apply the use of drawTool in the open-source core of SOFA. This now makes SOFA a priori independent from OpenGL using the drawTools.; Fix #653 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/704:396,test,test,396,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/704,2,['test'],['test']
Testability,Are more tests provided in InSimo's repo? I would like to make sure that you get the same results if you change specific parameters of the policy.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1532704807:9,test,tests,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1532704807,1,['test'],['tests']
Testability,"Are you dead, dear CI?; [ci-build][force-full-build][with-all-tests]",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1076518383:62,test,tests,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2766#issuecomment-1076518383,1,['test'],['tests']
Testability,Are you still writing tests for Topological operations @epernod ? ; What is the status of this issue ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/43#issuecomment-264822755:22,test,tests,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/43#issuecomment-264822755,1,['test'],['tests']
Testability,Arf the scene directories are hard-coded... https://github.com/sofa-framework/ci/blob/5fdd611c1c6190c170e41b84a0e5cbe6b0f76e65/scripts/scene-tests.sh#L175,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1569622345:141,test,tests,141,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1569622345,1,['test'],['tests']
Testability,"ArticulatedSystem is a complex and not really maintained code, designed to create articulated things like articulated bodies, etc.; It was accepted that it should be isolated somewhere and maybe refactored/redesigned later (if someone is motivated). I took the liberty to retrieve the ArticulatedControllers (which were deprecated/removed some years ago) and put it back into it. Especially because I retrieved the ""man-walking"" example which is quite cool in my opinion.; But the code was created by DigitalTrainers, I dont know if it could be bothersome license-wise. <img src=""https://user-images.githubusercontent.com/11028016/153249327-37e2b9f2-8961-474f-b2cd-d3d8ce52d9fa.gif"" width=""400"" />. **EDIT: Let's vote between**; - ArticulatedSystem as an external repository which would be referenced in _applications/plugin_ (react with 🚀 ); - ArticulatedSystem in Sofa.Component because this is really important ( react with ❤️ ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2684:1472,test,test,1472,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2684,2,['test'],['test']
Testability,"As @epernod noticed, my PR #917 introduced a side effect in runSofa's scene graph UI.; This PR fixes it. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1001:356,test,test,356,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1001,2,['test'],['test']
Testability,"As @fredroy would say, ""and why not!"". ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1422:290,test,test,290,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1422,2,['test'],['test']
Testability,"As CImgPlugin became almost useless for loading images (jpg, etc #2551 ), its only usage is to ship cimg. ; So it would make sense to put it back in image (which is the main user of the lib cimg). Fix #4299 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4303:748,test,test,748,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4303,2,['test'],['test']
Testability,"As CSparse and metis are only used by SofaSparseSolver module, it was deemed necessary to move these libs into it.; Fix issue #1309 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1357:385,test,test,385,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1357,2,['test'],['test']
Testability,"As I was not ready to kill all the existing tests I solved the issue in a different way that I found simple. ; The idea is based on a small api that mimick the Python API and then to use it to re-implement the SceneCreator functionnality. This is in the STC4 branch. If you are curious it look like that:; ```cpp; #include<SceneCreator/SimpleAPI.h> . Node::SPtr root = simulation::getSimulation()->createNewGraph(""root"");; simpleapi::createObject(root, ""DefaultPipeline"", {{""name"",""Collision Pipeline""}}) ;; simpleapi::createObject(root, ""BruteForceDetection"", {{""name"",""Detection""}}) ;; simpleapi::createObject(root, ""MinProximityIntersection"", {{""name"",""Proximity""},; {""alarmDistance"", ""0.3""},; {""contactDistance"", ""0.2""}}) ;. simpleapi::createObject(root, ""DefaultContactManager"", {; {""name"", ""Contact Manager""},; {""response"", responseType}; });. simpleapi::createObject(root, ""DefaultCollisionGroupManager"", {{""name"", ""Collision Group Manager""}});; ```. I'm quite sure we should be able to make much nicer things with a proper eDSLinstead of mimicking the python API but I'm not sure I have time for that. My target was to remove all dependencies between Sofa & SceneCreator and this make the job.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/417#issuecomment-334524331:44,test,tests,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/417#issuecomment-334524331,1,['test'],['tests']
Testability,"As SofaNonUniformFEM is the last module in it, SofaAdvanced is DOOMED!. What is this PR about:; - modularization of SofaNonUniform; - SofaAdvanced deps removed from all the Sofa source; - SofaAdvanced is still a collection for compatibility reason, and link with the module SofaNonUniformFEM ; - needed to have a macro to add a module not present in the same directory; - move dependencies in the CMakeFiles, and now modules are compiled before collections (SofaComponentAll/(deprecated) SofaAdvanced), thus I needed to change the tests for SofaExporter/SofaOpenGLVisual. But this is mandatory anyway.; - fix the failing tests brought by the modularization of SofaDenseSolver (which needed SofaNonUniformFem so it was unavoidable). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1344:531,test,tests,531,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1344,4,['test'],"['test', 'tests']"
Testability,"As SofaPython(2) has been dropped from the official support, the unit test `UnitTests.SofaPython_test/PythonBinding/PythonBinding_tests.scene/2` wont be fixed. ; If interested, have a look at https://github.com/sofa-framework/SofaPython/blob/6e0abe2c00ceffa627f992cdab7b826b07021f46/Binding_Data.cpp#L714",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2354#issuecomment-927783665:70,test,test,70,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2354#issuecomment-927783665,1,['test'],['test']
Testability,"As a result, It is now no longer possible to instantiate `LinearSpring<double>` from `float` (without explicit casting). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/948:372,test,test,372,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/948,2,['test'],['test']
Testability,"As announced @nhnhan92 ;). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2100:566,test,test,566,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2100,2,['test'],['test']
Testability,"As asked I removed the Data in base. . Now here is my working plan regarding all that ordering all the feedback received: ; - PR0: was implementing a per component logging system on top of the msg_api to prove we can replace the existing error logging system. This was done in this PR. - PR1: with the introduced system to replace the existing logging of error (this PR is risky and touch a lot of file) it should contains: ; - removing the filling of the messages in sout.; - removing the old string based buffer (API BREAK). ; - removing all the uses of the old message buffers and replace them with the new one (API BREAK). ; - updating the gui to use the new msghandler buffers. - PR2: removing the printLog Data:; - backward compatibility solution must be implemented. ; - a replacement solution has to be implement to control the printing.; - a replacement solution has to be implement to control the messages based on a per-component selection of the printed messages . - PR3: extending/unifying the sout/serr with more sdebug/swarning. This must be discussed seriously during a meeting because I currently made a lot of attempts to this but didn't managed to implement a working solution without the sever flawn sout/serr have. If you have ideas on that please make a branch with working proposal so that we have sounded discussion. . Anyone interested in working on PR1, PR2 and PR3 ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/106#issuecomment-277260662:164,log,logging,164,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/106#issuecomment-277260662,3,['log'],['logging']
Testability,"As convened. To have more consistency with the other SofaMisc* modules.; It should also simplify things when using SofaComponentAll, as SofaMiscCollision was excluded. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2127:707,test,test,707,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2127,2,['test'],['test']
Testability,"As discussed during #2613 review. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2719:573,test,test,573,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2719,2,['test'],['test']
Testability,"As discussed in PR #3500; Should LinearSolver check at init if the mechanical system to solve is empty:; This can lead to error/skip at each step when inverting matrices are required. . Note from @alxbilger ; `Fair question. This check is performed at each time step. It visits the mechanical objects and compute the size of the system. I don't know if this can be done in the init method if the mechanical objects are not initialized yet.; Also, the API allows to use a Linear Solver on a matrix, without defining a scene (see the test TEST(SparseLDLSolver, MatrixFactorization)). Adding this check in the init method would not make sense in this case.; To be discussed`",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3504:532,test,test,532,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3504,2,"['TEST', 'test']","['TEST', 'test']"
Testability,"As discussed in latest dev meeting, we need SceneChecker output even at first load. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/938:335,test,test,335,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/938,2,['test'],['test']
Testability,"As discussed in the SOFA dev meeting, prefer now using Qt6 over Qt5. Therefore, look firstly for Qt6 before Qt5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4686:652,test,test,652,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4686,2,['test'],['test']
Testability,"As discussed on gitter, this one should be rebase and merge in branch v22.06. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3518:617,test,test,617,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3518,2,['test'],['test']
Testability,"As discussed previously, state in DrawTool can be managed by RAII. Note that this PR also highlights a few problems which have been fixed (saveLastState called but not restoreLastState, or saveLastState called twice). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3338:757,test,test,757,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3338,2,['test'],['test']
Testability,"As discussed with @epernod and @hugtalbot ,; implemented method in `TopologicalChangeManager` to handle `LineCollisionModel` in `TopologicalChangeManager::removeItemsFromCollisionModel`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3239:726,test,test,726,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3239,2,['test'],['test']
Testability,As discussed with @fredroy QGLViewer is no longer maintained so the only way to know if this is a bug or not is to test it ourselves.; Feel free to reopen if you think this is a bug and have a way to reproduce it.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2108#issuecomment-853669440:115,test,test,115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2108#issuecomment-853669440,1,['test'],['test']
Testability,"As far as I tested, it works :+1:; -> ready imho",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/927#issuecomment-467950328:12,test,tested,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/927#issuecomment-467950328,1,['test'],['tested']
Testability,As far as know this is useful (and we use it in python) to get kind of parent class of an object (eg: testing if an object is a FF or a constraint or whatever).,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1085#issuecomment-503450931:102,test,testing,102,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1085#issuecomment-503450931,1,['test'],['testing']
Testability,"As in SofaNG we are calling the activable/deactivable 'plugins' modules; I added a macro that have the right ""name"" instead of hijacking the; sofa_add_plugin's one. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/732:416,test,test,416,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/732,2,['test'],['test']
Testability,"As introduced in #2021 , a quick fix for a SofaCUDA cmake configuration file not found when requested. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2022:642,test,test,642,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2022,2,['test'],['test']
Testability,"As it can be retrieved from the other parameters; Fix a bug when restoring the camera before everything is initialized. I guess this class would like a good refactoring in the future 🥸. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4888:725,test,test,725,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4888,2,['test'],['test']
Testability,As it change the behavior of a core component i prefer to validate on regression files. ; [ci-build][with-scene-tests][with-regression-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1749#issuecomment-768962610:112,test,tests,112,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1749#issuecomment-768962610,2,['test'],['tests']
Testability,"As it involve removing/deleting things during test phase, would be good to wait for mac to be back and run all tests on the ci.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3942#issuecomment-1596790145:46,test,test,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3942#issuecomment-1596790145,2,['test'],"['test', 'tests']"
Testability,"As pointed by @thomas-lemaire in #355 & #13 there are several issue on ObjExporter. ; In this PR I suggest to fix & unify the exporter (if you want to contribute...feel free to commit). . Currently it:; - factor & unify shared code between OBJExporter, STLExporter and MeshExporter by inheriting from ; BaseSimulationExporter; - adds a set of tests for OBJExporter, STLExporter and MeshExporter, the test coverage is not bad; - change of the API so that the ::write() function returns a boolean indicate the success or the failure; - add new possibility on the provided filename (to automatically create the missing path element)...; - report error & messages when the files cannot be created. ; - deprecation of the 'hard coded' interaction behavior... (I can explain if needed).; - fix crashes when missing topology. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/372:343,test,tests,343,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/372,4,['test'],"['test', 'tests']"
Testability,As promised !; Update of the ChangeLog.md. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old (or has fast-merge label).; - [x] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/263:268,test,test,268,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/263,1,['test'],['test']
Testability,As requested by @matthieu-nesme in https://github.com/sofa-framework/sofa/issues/149; (but what is the xml ?) . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/191:337,test,test,337,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/191,1,['test'],['test']
Testability,As requested in #799 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1045:274,test,test,274,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1045,2,['test'],['test']
Testability,"As required by https://github.com/conda-forge/staged-recipes/pull/23085, we must avoid static libraries to comply conda-forge rules.; Tests with more recent versions of metis (such as one available on conda-forge) seems to introduce some bugs (@bakpaul @alxbilger Do you have some inputs to provide here ?). ; For now, the solution we converged to is to dynamically link metis with Sofa. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4449:134,Test,Tests,134,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4449,3,"['Test', 'test']","['Tests', 'test']"
Testability,As said in the title this PR puts SofaSparseSolver and SofaPreconditioner as a real module that can be activated/deactivated. . CHANGLELOG/; - move source files to src/SofaSparseSolver & src/SofaPreconditioner so the .h are not leaked anymore. ; - conditional code based on #define SOFA_HAVE_METIS/SOFA_HAVE_CSPARSE is now changed to favor the use of *find_package* to detect and activate conditional building depending on dependencies. ; - add a modules/CMakeLists.txt to integrate that; - add the touched component into the list of 'moved' component. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/668:804,test,test,804,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/668,2,['test'],['test']
Testability,"As said in the title this PR puts SofaSparseSolver and SofaPreconditioner in plugins. . There was #define SOFA_HAVE_METIS/SOFA_HAVE_CSPARSE in config.h instead of using ; find_package to detect and activate conditional building depending on dependencies. I replaced this mechanisme by using find_package(Metis) which I found more clear. . NB: the PR is in wip as I want to check it is going in the same direction as SofaNG ; NB2: it may also be a good idea to add some unittest as SparseLDLSolver seems to be used (So @olivier-goury, @IPeterlik , @marques-bruno, @EulalieCoevoet if you have 1 hour to give feel free ;)); ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/663:874,test,test,874,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/663,2,['test'],['test']
Testability,As said in the title this PR puts the forcefield and mapping of beams into components (following the draft of sofa ng organization). CHANGELOG; - cleaning of the forcefield; - creation of the beamMassMatrix; - move of all files. TODO; - add comments to the code; - clean the mapping; - add a test scene. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/707:292,test,test,292,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/707,3,['test'],['test']
Testability,As said in the title. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/925:273,test,test,273,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/925,2,['test'],['test']
Testability,"As simple as it is!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1812:560,test,test,560,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1812,2,['test'],['test']
Testability,"As simple as that.; Mostly brackets ^^. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2097:579,test,test,579,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2097,2,['test'],['test']
Testability,As simple as this.; Ciao for 2 regression errors theoretically!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1321:316,test,test,316,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1321,2,['test'],['test']
Testability,"As soon as this PR is merged, we should fix the newly failing tests.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-290017981:62,test,tests,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-290017981,1,['test'],['tests']
Testability,As suggested by @guparan this one is to merge when we will be sure that #457 will have fixed the tests.; It is still unclear to me.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/453#issuecomment-335028488:97,test,tests,97,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/453#issuecomment-335028488,1,['test'],['tests']
Testability,"As suggested by Alex Bilger in SOFA forum: https://www.sofa-framework.org/community/forum/topic/duplicated-components-in-xml-export/. > Hello guys,; > ; > I noticed a bad behavior when exporting a scene in xml. The components are duplicated within the same node. The node components are written, then the sub-nodes, and then the same node components again.; > You can get the same behavior by opening any sofa scene and exporting it (File -> Save As in runSofa), then open it in a text editor.; > I see that the xml export uses visitors. I found that the objects are processed twice: once in processNodeTopDown and once in processNodeBottomUp. So I removed the processing part in processNodeBottomUp, and kept only the node closure. I get the expected behavior. Could you guys confirm this is the right thing to do?; > I tested on Windows with a very recent commit.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4:821,test,tested,821,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4,1,['test'],['tested']
Testability,"As suspected, the two missing unit tests were not yours. Two plugins were ignored in PR builds on Windows, implying 2 unit tests.; It's fixed :+1:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/621#issuecomment-378910002:35,test,tests,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/621#issuecomment-378910002,2,['test'],['tests']
Testability,"As the continuation of the modularization of the collision components, `RayTraceDetection` can be split into two components: `BruteForceBroadPhase` and `RayTraceNarrowPhase`. The latest is introduced in this PR.; In a future PR, `RayTraceDetection` will be marked as deprecated (similarly to #2118). I did not change the code itself, just moving it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2145:889,test,test,889,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2145,2,['test'],['test']
Testability,"As the title says it.; Regarding @epernod remark about the 1 ms taken to trigger the sleep function ... this should be discussed, but I prepared this PR before !. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1394:414,test,test,414,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1394,2,['test'],['test']
Testability,"As the title says, all the Name() for the DataTypes (aka VecTypes, RigidTypes and their Cuda versions) have been defined with the constexpr keyword.; \+ SolidTypes. \+ constexpr keywords for the size in CudaTypes (like ""normal"" versions); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3174:778,test,test,778,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3174,2,['test'],['test']
Testability,"As the title says. and Refactor as a majority of tests had the same scene structure. More dependencies could be removed (MechanicalObject in particular) but rewriting was very time-consuming and I was lazy 🤥. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2733:49,test,tests,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2733,3,['test'],"['test', 'tests']"
Testability,"As the title suggests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1907:562,test,test,562,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1907,4,['test'],['test']
Testability,"As this test needs LennardJonesFF, which is now deprecated, the test has been deprecated to fix this. It now runs smoothly in ""full"" component set and is removed from ""standard"". ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/478:8,test,test,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/478,4,['test'],['test']
Testability,"As those tests does not inherit SofaTest anymore, I think this issue is kind of fixed.; Feel free to re-open if it is not actually the case",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1935#issuecomment-1499800081:9,test,tests,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1935#issuecomment-1499800081,1,['test'],['tests']
Testability,"As usual the idea is to make the object more opaque so we can reduce the #include pressure. . - forward declared all the specific Matrix (RotationMatrix, SparseMatrix, ...) to avoid includes in MatrixLinearSolver; - Move GraphScattered specialization in a separated set of files. ; - Move MatrixLinearSolverInternalData in the .cpp in order to make a real ""internal"" data ; - Use std::unique_ptr<MatrixLinearSolverInternalData> so we can rely on forward declaration in class MatrixLinearSolver; - propagate the changes. . This PR contains #2236 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2238:1086,test,test,1086,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2238,2,['test'],['test']
Testability,"As we have DAGNode there is no need to keep something that do less :). This is connected discussion in PR #1642. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1664:652,test,test,652,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1664,2,['test'],['test']
Testability,"As we just discussed, let's wait if #4471 is fine, in which case this PR should be closed and discarded: we would keep building Sofa.Testing component even if TU are not built (`SOFA_BUILD_TESTS=OFF`)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4459#issuecomment-1918659142:133,Test,Testing,133,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4459#issuecomment-1918659142,1,['Test'],['Testing']
Testability,"As you renamed the BilateralInteractionConstraint, you will need to recreate/regenerate regression tests associated too 🤫",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3053#issuecomment-1158735160:99,test,tests,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3053#issuecomment-1158735160,1,['test'],['tests']
Testability,"At STC4 (3 years ago then) was decided to remove SMP code as it was not maintained anymore #457 ; (starting from [a69e632](https://github.com/sofa-framework/sofa/pull/457/commits/a69e63286838c8bb1c4bd1bf286367ebf2ced67d) ); This PR is removing the rest of SMP-related code in; - in the core; - in Flexible; - in SofaMiscCollision. Remove preprocessor flags and SMP related examples as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1613:930,test,test,930,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1613,2,['test'],['test']
Testability,"At last, this PR is ready. It fixes all FileMonitor tests on all platforms.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/267#issuecomment-303131249:52,test,tests,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/267#issuecomment-303131249,1,['test'],['tests']
Testability,"At the last stage of the loop, the iterator is already at end() value but it is still being incremented.; (throwing an assertion error in Debug mode). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3574:119,assert,assertion,119,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3574,3,"['assert', 'test']","['assertion', 'test']"
Testability,Auto tests,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/111:5,test,tests,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/111,1,['test'],['tests']
Testability,"Avoid ambiguity due to the fact that more than one function have the same name. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1958:619,test,test,619,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1958,2,['test'],['test']
Testability,"Avoiding doing unnecessary duplicate operations (norm and sin()); At first, I thought the compiler (msvc in my case) would be smart enough to do it by itself while optimizing, but apparently not:. before:; ```; BM_Quat_axisToQuat/8192 106 us 85.4 us 8960; BM_Quat_axisToQuat/16384 210 us 154 us 4978; BM_Quat_axisToQuat/32768 348 us 220 us 3200; ```. after:; ```; BM_Quat_axisToQuat/8192 74.5 us 60.9 us 10000; BM_Quat_axisToQuat/16384 150 us 97.7 us 6400; BM_Quat_axisToQuat/32768 255 us 167 us 4480; ```. ----. Note: if we knew before-hand that the vec was normalized/not-null, the perf would be:; ```; BM_Quat_axisToQuat/8192 69.0 us 52.7 us 16000; BM_Quat_axisToQuat/16384 138 us 103 us 7467; BM_Quat_axisToQuat/32768 239 us 171 us 4480; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3559:1286,test,test,1286,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3559,2,['test'],['test']
Testability,"BOOST_ALL_DYN_LINK is necessary when using/compiling boost on Windows (weird boost linking stuff 😵); It was defined in the root CMakeLists of SOFA, therefore this macro was not propagated to other projects needing Boost (SofaPython3 👀); It is now linked with the target SofaHelper and is propagated to all projects using it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1578:864,test,test,864,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1578,2,['test'],['test']
Testability,Back for review ! [ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1979#issuecomment-821121450:38,test,tests,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1979#issuecomment-821121450,1,['test'],['tests']
Testability,Back to wip until tested and typo fixed.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/649#issuecomment-389504611:18,test,tested,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/649#issuecomment-389504611,1,['test'],['tested']
Testability,"Back(forward?)-porting https://github.com/sofa-framework/sofa/pull/1721. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1729:612,test,test,612,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1729,2,['test'],['test']
Testability,"Backport #1732 from v20.12. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1741:567,test,test,567,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1741,2,['test'],['test']
Testability,Backport installation fix from master (#1154 ) to release v19.06. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1211:317,test,test,317,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1211,2,['test'],['test']
Testability,"BaseMechanicalVisitor deserve its own file => now it has. ; There was a bunch of un-needed includes => now they are removed. . The includes removed (that you may needed to add in your files if need them):; ```cpp; #include <sofa/core/MechanicalParams.h>; #include <sofa/core/ConstraintParams.h>; #include <sofa/core/behavior/ForceField.h>; #include <sofa/core/BaseMapping.h>; #include <sofa/core/behavior/BaseInteractionForceField.h>; #include <sofa/core/behavior/BaseProjectiveConstraintSet.h>; #include <sofa/core/behavior/BaseInteractionProjectiveConstraintSet.h>; #include <sofa/core/behavior/BaseConstraintSet.h>; #include <functional>; #include <sofa/helper/map.h>; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1989:1216,test,test,1216,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1989,2,['test'],['test']
Testability,"BaseSimulationTest::importPlugin() and simpleapi::importPlugin() are exactly the same.; With SimpleApi, it does not really make sense to have this function anymore in BaseSimulationTest. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4467:726,test,test,726,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4467,2,['test'],['test']
Testability,"Based on #1558 ( but I could extract it if 1558 is cancelled); This PR adds a callback on the indices of FixedConstraint and PartialFixedConstraint to check the indices. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1806:709,test,test,709,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1806,2,['test'],['test']
Testability,"Based on #2043. A new component is introduced: `ParallelBVHNarrowPhase`. As the name suggests, it is the parallel implementation of `BVHNarrowPhase`. ## Details. The broad phase provides a list of pairs of collision models. In the initial `BVHNarrowPhase` component, the list was processed sequentially. In `ParallelBVHNarrowPhase` each pair is processed in a task, which is given to a thread pool. Note that the traversal of the bounding volume hierarchy is not parallel. It is still single threaded. Due to race conditions, some operations must be done prior to the parallel tasks: . 1. Detection output creation. This operation is very time consuming (see #2047). If #2047 is merged, we can expect better results.; 2. Topology initialization. ## Results. The tested scene is `applications/plugins/MultiThreading/examples/ParallelBruteForceBroadPhase.scn` during 500 time steps. The narrow phase duration has been measured with `ParallelBVHNarrowPhase` compared to `BVHNarrowPhase`. ```; BVHNarrowPhase 3.5 ms; BVHNarrowPhase + PR#2047 2.36 ms; ParallelBVHNarrowPhase 2.1 ms; ParallelBVHNarrowPhase + PR#2047 0.97 ms; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2053:762,test,tested,762,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2053,3,['test'],"['test', 'tested']"
Testability,"Based on #2442. Most of the example scenes in SofaCUDA show a broken visual. I fixed 2 of them. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2447:635,test,test,635,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2447,2,['test'],['test']
Testability,"Based on #2522 this PR adds a sceneCheck to guide users when using collision responses.; For some, a specific animation loop / constraint solver is needed. This is added in the SceneCheckContactResponse !. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2523:745,test,test,745,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2523,2,['test'],['test']
Testability,"Based on #2813 . and sofang-ize paths/plugins/etc.; and creation of some *Testing framework (solidmechanics, topology, mapping...). and a loooots of clean as well. (not enough). Some tests were disabled, they are back again. ~~Will be updated when Collision/engine/etc will be merged.~~ done. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2873:74,Test,Testing,74,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2873,4,"['Test', 'test']","['Testing', 'test', 'tests']"
Testability,"Based on #2870 . The topological callback was actually not working for the UniformMass.; Now POINTSADDED and POINTSREMOVED are handled. in addition:; - add override to avoid massive warnings; - add box in scene to allow seeing the mesh. Thanks to @oparras for rising this in #2668; A regression could be added on this scene. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2853:864,test,test,864,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2853,2,['test'],['test']
Testability,"Based on #3019, we should incorporate tests assessing stability and associated regression references for SOFA.; Traction but also compression tests should be performed.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4543:38,test,tests,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4543,2,['test'],['tests']
Testability,"Based on #3480 . Task scheduler can accept a callable. It can avoids a lot of boilerplate code. It has been applied in `FreeMotionAnimationLoop` as an example, and unit tests are provided. In `FreeMotionAnimationLoop`, the class `FreeMotionTask` is no longer required. It is now possible to write:; ```cpp; unsigned int one = 0u;; simulation::CpuTaskStatus status;; scheduler->addTask(status, [&one]{ one = 1u; });; ```; and similarly for a functor, pointer to a function and pointer to a member function. The diff with the PR #3480 is: https://github.com/alxbilger/sofa/compare/taskscheduler...alxbilger:sofa:taskschedulerlambda. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3482:169,test,tests,169,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3482,3,['test'],"['test', 'tests']"
Testability,"Based on #3480 . The work threads were shared among all `DefaultTaskScheduler` instances through a static map. But it makes more sense to me that a `DefaultTaskScheduler` instance manages it's own pool of threads. . The diff with the #3480 PR: https://github.com/alxbilger/sofa/compare/taskscheduler...alxbilger:sofa:localthreads. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3491:870,test,test,870,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3491,2,['test'],['test']
Testability,"Based on #3526 @Ziemnono. Move all examples to follow the structure of *Sofa/Component/*; - [ ] check possible new scenes added since #3526 . [ci-depends-on https://github.com/sofa-framework/Regression/pull/38]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3588:751,test,test,751,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3588,2,['test'],['test']
Testability,"Based on #3534 ; Delete codes that were disabled in v22.06. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3535:599,test,test,599,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3535,2,['test'],['test']
Testability,"Based on #3548 . Similar to ParallelHexahedronFEMForceField. `addDForce` and `addKToMatrix` are the parallelized functions.; `addForce` is not parallelized. It would require to duplicate code from the base class. Hence a refactoring is needed for a proper implementation (in another PR). Note that `addForce` is usually not the bottleneck. Quick benchmarks show performances improvement on the provided example. I think there is still room for improvement in `addDForce`. But it would require a few changes in the base class. Instead of having a force vector for each task, I suggest to store only the force on the DoFs that have been visited during the task. I am not sure if it will bring more perfs improvements. In this PR, `addKToMatrix` is parallelized. It is not in `ParallelHexahedronFEMForceField`, but the same principle can be applied (in another PR). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3552:346,benchmark,benchmarks,346,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3552,3,"['benchmark', 'test']","['benchmarks', 'test']"
Testability,"Based on #3598 . The diff with #3598: https://github.com/sofa-framework/sofa/commit/cd563658a23a70018e21984a9f3522f219a459e6. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3599:665,test,test,665,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3599,2,['test'],['test']
Testability,"Based on #3634. Mostly focusing on updating the compat :; - [x] SofaBaseCollision; - [x] SofaBaseLinearSolver; - [x] SofaBaseMechanics; - [x] SofaBaseTopology; - [x] SofaBaseUtils; - [x] SofaBaseVisual; - [x] SofaBoundaryCondition; - [x] SofaConstraint; - [x] SofaDeformable. The rest for a next one. [ci-depends-on https://github.com/sofa-framework/PluginExample/pull/3]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3649:912,test,test,912,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3649,2,['test'],['test']
Testability,"Based on #3649, and following it : now all DEPRECATED ending at v23.06 are DISABLED!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3654:625,test,test,625,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3654,2,['test'],['test']
Testability,"Based on #3654 ; Removing all files DISABLED since v21.12 + v21.06 (and no compat layer before this!). So I think with this one, we should be good. At least for what I have in mind. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3655:721,test,test,721,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3655,2,['test'],['test']
Testability,"Based on #3737 . Almost all nonlinear mappings have a Data to select how to compute the geometric stiffness (none, exact, stabilized).; The Data was a `int`. It is now replaced by a ` OptionsGroup`. It is therefore breaking because of the change of type. Minor changes go along with this PR. Note: for some reasons, RigidMapping is the only mapping which default value for geometric stiffness is not 2 (stabilized). It is 0 (no geometric stiffness computed). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3740:998,test,test,998,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3740,2,['test'],['test']
Testability,"Based on #3815 and #3805 . ... instead of glBufferSubData() as it is a faster method to upload stuff on the GPU directly. Also:; - dont update indices (lines, triangles, quads) if there are not modified; - dont copy to temporary float if already in float. (same mesh as #3805); Before:; `1000 iterations done in 14.075 s ( 71.048 FPS)` . After:; `1000 iterations done in 9.597 s ( 104.199 FPS)`. After (float); ` 1000 iterations done in 7.618 s ( 131.268 FPS)`. Based on :; - #3815 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3822:1023,test,test,1023,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3822,2,['test'],['test']
Testability,"Based on #3918. The commit to review is: https://github.com/sofa-framework/sofa/commit/445da0f4fdf6f819f698192b81bbb1da5e4fa554. There was no example for this component. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3921:709,test,test,709,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3921,2,['test'],['test']
Testability,"Based on #3924 this PR :; - removes the data `force` and replaces it by the possibility to define the data `forces` with size 1; - proposes a solution to avoid circular dependency : when one of both data `forces` or `totalForce` is given at scene initialization, the other can not be used for update later. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4019:846,test,test,846,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4019,2,['test'],['test']
Testability,"Based on #3924. Answers to #2173 ! We finally have a nice internal udpate @damienmarchal ; The data used internally (`d_forces` and `d_totalForce`) are updated and synchronized through input data (`d_inputForce`, `d_inputForces` and `d_inputTotalForce`). I personnally like this but am open to discussion!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3936:846,test,test,846,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3936,2,['test'],['test']
Testability,"Based on #3927 ; Needs https://github.com/sofa-framework/sofa/pull/4917 to make all tests pass successfully. This PR aims at :; - Use enumeration to clarify the code for initialization methods in ConstantForceField and UniformMass; - some code cleanings : starting init as Valid, avoid calling isComponentValid while init(), check isComponentValid prior to run-time functions . Diff : https://github.com/hugtalbot/sofa/compare/b7c7293e7e5bd89700f3cf5171678a0b37b2c36c...hugtalbot:9371ffc1731840b2d100eb7deaa754775c98c6c7. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4918:84,test,tests,84,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4918,3,['test'],"['test', 'tests']"
Testability,"Based on #3938. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3987:555,test,test,555,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3987,2,['test'],['test']
Testability,"Based on #3987 . In #3987 we remove the canCreated that was used to template deduction. In the current PR we are replacing the one that are also used to offer scenes guarantees. The guarantee are now enforced at runtime in init(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3990:770,test,test,770,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3990,2,['test'],['test']
Testability,"Based on #4034 Pursuing the cleaning for the SOFA lifecycle ahead of the v23.12. - start removing DEPRECATED codes, getting disabled in v23.12; - lifecycle Multithreading plugin; - lifecycle SofaCUDA plugin; - lifecycle SceneCheck plugin; - remove SofaGeneralObjectInteraction and SofaMeshCollision; - remove all v21.06, v21.12 and v22.06 deprecation references EXCEPT : Compat and Topology :japanese_ogre: @epernod :wink: . [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/101]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4040:1036,test,test,1036,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4040,2,['test'],['test']
Testability,"Based on #4040 ; Cleaning of many remaining old codes. [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/101]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4056:666,test,test,666,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4056,2,['test'],['test']
Testability,"Based on #4044 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4045:556,test,test,556,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4045,2,['test'],['test']
Testability,"Based on #4075 , this PR proposes to use the `SimulationInitDoneEvent` instead of `AnimateBeginEvent` when an export is desired at the beginning of the simulation. By ""beginning of the simulation"" we actually mean, once the `init()` and `bwdInit()` are completed which is exactly the purpose of `SimulationInitDoneEvent`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4160:861,test,test,861,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4160,2,['test'],['test']
Testability,"Based on #4158 . Non-mapped and mapped matrices can be assembled in parallel because the contributions are not accumulated in the same matrix data structure. https://github.com/alxbilger/sofa/compare/constantsparsitypattern...alxbilger:sofa:independantmatrices. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4172:801,test,test,801,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4172,2,['test'],['test']
Testability,"Based on #4533. - Clean the use of old lib names in `importPlugin()` and in `RequiredPlugin` (mostly tests); - Remove last uses of `setSimulation`. Commit of interest is : https://github.com/sofa-framework/sofa/commit/0d87075b5aa74a5e6471bd8f3f66d5706f93e2c0. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4540:101,test,tests,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4540,3,['test'],"['test', 'tests']"
Testability,"Based on #4554. Error raised when a find_package of cxxopt was not providing a version number because `cxxopts_FIND_VERSION` was not set. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4564:677,test,test,677,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4564,2,['test'],['test']
Testability,"Based on :; - #3805 . updateBuffer (which is updating all buffers, to the GPU with its implementation OglModel for example) ; was called before computeNormals, tangents, etc.; So there was a discrepancy of 1 frame between vertices and normals/tangents. Also, using ScopedTimer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3815:817,test,test,817,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3815,2,['test'],['test']
Testability,"Based on ; - #2958 . Contains:; - #2960 . Allow compilation of the Sofa codebase without the cmake option SOFA_ENABLE_LEGACY_HEADERS, i.e the compatibility mode. (Sofa codebase = default cmake options, i.e framework, Component, tests and the few plugins ON by default). [NOTci-depends-on https://github.com/sofa-framework/Registration/pull/2]; [NOTci-depends-on https://github.com/sofa-framework/SofaPython3/pull/268]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2975:228,test,tests,228,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2975,3,['test'],"['test', 'tests']"
Testability,"Based on ; - #3102. The autoloading libraries (plugin/module/whatever) feature was not including the ""new"" libraries (i.e Sofa.Component* ) since the fact that are neither plugin nor module (but still loadable); This PR fixes it.; Autoloading is not really recommended but a lot of scenes outside this repo relies on it implicitely. TODO: decide if autoloading should off by default (and force the users to explicitly load their own necessary libs in their scenes). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3103:1005,test,test,1005,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3103,2,['test'],['test']
Testability,"Based on ; - #4362 ; (for the scene, not compilation). diff: https://github.com/fredroy/sofa/compare/geoalgo_states..edge2quad_state. No need to pass by a intermediary MechanicalObject anymore (+subsequent Mapping as well). Avoids:; - using mechanical mappings for visual mappings (no useless applyJ/applyJT calls); - to call an other mapping as well; - setting the (not doing its purpose) `isMechanical` flag. ---; - With the example (Edge2QuadTopologicalMapping.scn). with GUI (glfw); ```; master 10000 iterations done in 20.618 s ( 485.013 FPS); pr 10000 iterations done in 16.601 s ( 602.373 FPS); ```. no GUI (batch); ```; master 10000 iterations done in 17.3933 s ( 574.935 FPS); pr 10000 iterations done in 13.6906 s ( 730.43 FPS); ```. - With [modified] BeamAdapter's scene (with gui); ```; master 5000 iterations done in 35.184 s ( 142.11 FPS); pr 5000 iterations done in 29.48 s ( 169.607 FPS); ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4388:1449,test,test,1449,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4388,2,['test'],['test']
Testability,"Based on ; - #4534 . Some race conditions arise in the DefautlTaskScheduler, main ones are; - usage of m_mainTaskStatus (solved with an atomic?); - start() and create_and_attach() are racing for m_taskScheduler (solved with a small change of place of affectation). Obviously, the opinion of @alxbilger about the fix in this PR would be greatly beneficial 😅 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4535:898,test,test,898,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4535,2,['test'],['test']
Testability,"Based on ; - #4909 . See #4802 and https://github.com/sofa-framework/sofa/pull/4583. Breaking if people did not do the change, or removal of deprecated protected members. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4916:710,test,test,710,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4916,2,['test'],['test']
Testability,"Based on ; - #4925 . This PR sets the `ConfigDirectoryPath` with the value of getSofaLocalUserDir (see https://github.com/sofa-framework/sofa/pull/4875) instead of the current directory (could be the binary dir, install dir, etc). This PR also adds the option to change this directory path to a custom path, set with a new cmd line option. ---; Note (not the object of the PR 🙂‍↕️); A bit weird that the config directory path getter is from the GUI, which means one needs a dep on Sofa.GUI to get the config dir path 🤔. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4926:1059,test,test,1059,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4926,2,['test'],['test']
Testability,"Based on @ziqiu-zeng implementation, this adds the Non-smooth Non-linear Conjugate Gradient (NNCG) as an alternative to the Projective Gauss Seidel (PGS) as NLCP solver in the GenericConstraintSolver. - an option ` resolutionMethod` is added with options: ""ProjectedGaussSeidel"", ""UnbuiltGaussSeidel"" or ""NonsmoothNonlinearConjugateGradient"" and 3 associated examples are provided for each option.; - a useless data `schemeCorrection` was also deprecated and removed. Documentation updated: https://github.com/sofa-framework/doc/pull/74. .. wonder if the PR name includes enough acronyms .. :thinking: . [ci-depends-on https://github.com/sofa-framework/Regression/pull/27]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3053:1213,test,test,1213,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3053,2,['test'],['test']
Testability,"Based on https://github.com/sofa-framework/sofa/pull/2394. Previously, a `CompressedRowSparseMatrix` accumulated matrix entries and was then converted to Eigen. The conversion gets triplets and detects duplicates and does the compression. Therefore, all the work to build a matrix is done in the conversion. This work is not required during the accumulation as it is done later in any case. I propose to accumulate all the matrix entries in a simple list. This accumulation does nothing else than inserting a new element in the vector. This should be faster than using a `CompressedRowSparseMatrix`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2399:1139,test,test,1139,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2399,2,['test'],['test']
Testability,"Based on https://github.com/sofa-framework/sofa/pull/2720. To support points removal in SubsetMultiMapping, `TopologySubsetIndices` have been added. To create them, I had to make available a constructor that does not take a `initData`, therefore I made available all the constructors of `Data`.; A `TopologySubsetIndices` is created for each input of the mapping. They subscribe to the corresponding topology changes.; When a topology change (point removal only) occurs, the mapping propagates the changes to the output Node of the mapping (and also renumbers internal indices). The application of the topology changes require a `BaseMeshTopology` and a topology modifier in both input and output of the mapping. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2729:1252,test,test,1252,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2729,2,['test'],['test']
Testability,"Based on https://github.com/sofa-framework/sofa/pull/2756. I added a boolean data, applyPermutation, to the SparseLDLSolver. It gives the choice to the user to apply or not a fill-in reducing permutation on the matrix of the system. By default the boolean is true in order to keep the previous behavior. FEMBAR-SparseLDLSolver.scn average computation time (to solve the system) with permutation : 3.31 ms; FEMBAR-SparseLDLSolver.scn average computation time (to solve the system) without permutation : 2.05 ms; Benchmarck MatrixAssembly_direct_blocs.scn (with permutation) : 7,45 ms; Benchmarck MatrixAssembly_direct_blocs.scn (without permutation) : 114,39 ms. As the fill-in reducing permutation is computed following heuristic instructions, there may be some situation where it is not worth applying this permutation. Asynchronous solver still works, not applying the permutation seems to slow it down.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2762:1446,test,test,1446,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2762,2,['test'],['test']
Testability,"Based on https://github.com/sofa-framework/sofa/pull/3548. In the `addDForce` method, the parallel algorithm consists in computing a thread-specific `dF` and then combine them all in the main `dF`. It requires a synchronisation mechanism as it may create race conditions. This PR introduce an alternative method which is lock-free. It divides the model into smaller subdomains that can be solved in parallel without synchronization. Since the domains are visited sequentially (it's the elements of each domain that are visited in parallel), it comes with an overhead. Therefore, this method is particularly suited for large models where the overhead can be amortized. I have the following results on the provided example:. ```; 1000 steps ; 17775 elements (hexa). domain decomposition:; 35.1703 s ( 28.4331 FPS). naive:; 76.5666 s ( 13.0605 FPS). sequential:; 192.688 s ( 5.18974 FPS).; ```. That's right: 17k elements simulated in real-time on a laptop CPU. As a comparison with the same scene where everything is on GPU, not only the `addDForce` method of `HexahedronFEMForceField`, but also the other components:; ```; 21.7437 s ( 45.9904 FPS).; ```; with a RTX A3000 Laptop GPU; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3566:1722,test,test,1722,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3566,2,['test'],['test']
Testability,"Based on https://github.com/sofa-framework/sofa/pull/3594. Introduce `ParallelStiffSpringForceField` and `ParallelMeshSpringForceField`. The base classes `SpringForceField` and `StiffSpringForceField` were also refactored to be able to reuse common code with their parallel implementations. Only the `addForce` method is implemented. The provided example has an explicit integration scheme where the force derivative is not required. `addDForce` and `addKToMatrix` may come later. Benchmark:. ```; Sequential; 1000 iterations done in 9.11327 s ( 109.73 FPS). Parallel; 1000 iterations done in 5.04016 s ( 198.406 FPS); ```. The implementation is naïve. We could probably do better. Note there are 11264 points and 62668 edges (springs) in the provided example. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3596:481,Benchmark,Benchmark,481,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3596,3,"['Benchmark', 'test']","['Benchmark', 'test']"
Testability,"Based on https://github.com/sofa-framework/sofa/pull/3961. Some exported files were not removed after executing unit tests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3942:117,test,tests,117,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3942,3,['test'],"['test', 'tests']"
Testability,"Based on https://github.com/sofa-framework/sofa/pull/4046. This PR :; - sets DISABLED all codes planed disabled (for v23.12, v23.06); - removes all DISABLED attributes (since v22.12 and older) . This PR should also be the end of the lifecycle for v23.12 !!. [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/101]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4058:869,test,test,869,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4058,2,['test'],['test']
Testability,"Based on https://github.com/sofa-framework/sofa/pull/4102. Fix warnings in oneTetrahedron tutorial. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4103:639,test,test,639,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4103,2,['test'],['test']
Testability,"Based on https://github.com/sofa-framework/sofa/pull/4442; Diff: https://github.com/alxbilger/sofa/compare/filtervalues...alxbilger:sofa:copymatrixderiv. The goal is to accelerate the computation of mappings jacobians when projecting the mapped stiffness matrices. In some cases, the conversion from the MatrixDeriv (stored in the mechanical objects) is really slow, even slower than the actual computation of the matrix. A special case is now added when the destination is a `CompressedRowSparseMatrixMechanical`. Unfortunately, this is detected with a `dynamic_cast`. To benchmark the changes, let's add the following timers in MatrixLinearSystem.inl (line 1076):; ```cpp; {; SCOPED_TIMER(""copyToBaseMatrix"");; input->copyToBaseMatrix(J.get(), mappingJacobianId, offset);; }; {; SCOPED_TIMER(""fullRows"");; J->fullRows();; }; ```. ### Reduced Diamond (1000 time steps). ModelOrderReduction relies heavily on mapped matrices (a huge matrix projected on a small matrix). #### Before. ```; [INFO] [BatchGUI] 1000 iterations done in 22.5868 s ( 44.2737 FPS).; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.06 1 14.53 33.47 16.75 2.42 16.75 90.54 ......projectMappedMatrices; 7 3.08 1 3.72 11.63 4.31 0.89 4.31 23.29 .......copyToBaseMatrix; 7 7.39 1 1.78 7.48 2.05 0.52 2.05 11.10 .......fullRows; ```. #### After; ```; [INFO] [BatchGUI] 1000 iterations done in 16.4596 s ( 60.7547 FPS).; ```; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 1.03 1 10.91 18.91 12.14 1.17 12.14 88.05 ......projectMappedMatrices; 7 2.95 1 2.09 4 2.38 0.26 2.38 17.25 .......copyToBaseMatrix; 7 5.33 1 0.01 0.04 0.01 0 0.01 0.09 .......fullRows. ```. #### Speedup. Speed up of x1.4 on the timer `projectMappedMatrices`. The bottleneck is now in the computation of `J^T * K * J`. # MatrixLinearSystem.scn (1000 time steps). #### Before. ```; [INFO] [BatchGUI] 1000 iterations done in 17.5332 s ( 57.0347 FPS).; ```. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 7.28 2 0.06 13.43 2.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4443:573,benchmark,benchmark,573,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443,1,['benchmark'],['benchmark']
Testability,Based on https://github.com/sofa-framework/sofa/pull/4547. The diff: https://github.com/alxbilger/sofa/compare/sparsematrixproduct...alxbilger:sofa:constantsparsityprojection. Matrix projection method taking advantage of the constant sparsity of the matrices in the computation of sparse matrix product. A boolean Data enables parallel computation. Benchmark on the reduced diamond for 1000 time steps (previous results in https://github.com/sofa-framework/sofa/pull/4490):. ### MatrixProjectionMethod + areJacobiansConstant=False. This is the most generic method. ```; [INFO] [BatchGUI] 1000 iterations done in 13.576 s ( 73.6594 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.84 1 9.59 24.93 11.24 2.22 11.24 88.66 ......projectMappedMatrices; ```. ### MatrixProjectionMethod + areJacobiansConstant=True. ```; [INFO] [BatchGUI] 1000 iterations done in 8.1806 s ( 122.24 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.75 1 5.53 17.84 6.32 0.88 6.32 83.28 ......projectMappedMatrices; ```. ### ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=False. ```; [INFO] [BatchGUI] 1000 iterations done in 11.3896 s ( 87.799 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.82 1 7.71 510.45 9.73 15.92 9.73 87.39 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=True. ```; [INFO] [BatchGUI] 1000 iterations done in 4.48981 s ( 222.726 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.75 1 2.31 522.09 3.32 16.42 3.32 72.50 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### Conclusion. We can observe that the parallelism is necessary to take advantage of the constant sparsity pattern. The fastest configuration is now `ConstantSparsityProjectionMethod + areJacobiansConstan,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4552:349,Benchmark,Benchmark,349,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4552,1,['Benchmark'],['Benchmark']
Testability,"Based on https://github.com/sofa-framework/sofa/pull/4778. Removed unused methods. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4824:622,test,test,622,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4824,2,['test'],['test']
Testability,"Based on https://github.com/sofa-framework/sofa/pull/4935 . Try to fix the rotation of the inertia matrix. The only relevant commit is [e53483c](https://github.com/sofa-framework/sofa/commit/e53483ccb3178d3450f82ff3949f4f702cca17eb). Some regression tests might break because until now the inertia was wrongly taken into account for rigid with an inertia matrix which is not a homothety. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4939:250,test,tests,250,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4939,3,['test'],"['test', 'tests']"
Testability,"Based on previous PR #3539 . Add methods and binding for:; - loading sofa.ini file to set resources/example path; - loading SOFA plugin given the file path; - activate/deactivate SOFA messageHandler, get the number of queued message and get the message with its priority. edit:; - Avoid using string as it can produce memory bad access from other software integration. ; - Also remove use of config.h inside SofaPhysicsAPI .h to be able to easily include it in third library. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3540:1015,test,test,1015,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3540,2,['test'],['test']
Testability,"Based on the PR https://github.com/sofa-framework/sofa/pull/365, this work add comments ; Agreed that the default value of warmStart option should be false (see Maxime's comment in PR#335). However, the associated comments in the code would be very useful for beginners starting and understanding the conjugate gradient in SOFA. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/469:580,test,test,580,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/469,2,['test'],['test']
Testability,"Based on the discussion started in https://github.com/sofa-framework/sofa/pull/2631 and finished during a dev meeting, this PR restores the old behavior:; - Two different conventions based on whether the scene is in XML or Python; - XML suffixes start at 1. Nevertheless, the class that provides the names is still common. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/241]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2773:934,test,test,934,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2773,2,['test'],['test']
Testability,"Based on the following library: https://github.com/p-ranav/indicators. ![peek](https://github.com/sofa-framework/sofa/assets/10572752/22eb746a-3b10-4b13-94a2-eccce68f326d). Breaking because I updated the cxxopts library. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4168:760,test,test,760,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4168,2,['test'],['test']
Testability,"Based on this thread: https://www.sofa-framework.org/community/forum/topic/collision-callback-function-in-python/. I wanted to create a SofaPython3 binding, that reads the number of contacts and their associated distances.; The variable in ContactListener that stores this information is private and cleared at every CollisionBeginEvent.; -> Added a getter function for ContactsVector.; -> Added a buffer variable that is over written before ContactsVector is cleared (storing a copy over different events).; -> Added functions to retrieve the number of contacts and their respective distance values and point pairs in the buffer. I will also create a pull request on SofaPython3 with the respective bindings, once this pull request is merged. Cheers,; Paul. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1678:1298,test,test,1298,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1678,2,['test'],['test']
Testability,"Based on:; - #2991. Last tests from SofaTest are moved into Sofa.Component.SolidMechanics_simutest (testing some elasticity with various fem/tensormass methods). Related to #1885. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2996:25,test,tests,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2996,4,['test'],"['test', 'testing', 'tests']"
Testability,"Based on:; - #4356 . Remove the (really old) cimg version and fetch it from cimg git repository (or let the user set-up its own cimg version. ; Not a requirement for #4221 anyway (header-only are acceptable). - \+200k lines removed; - fix compilation for newer version of cimg; - learnt how to export a symbol without the `declspec` shenanigans on MSVC 🫠 As the current cimg.h file has been modified to add a export symbol macro...). (compiles with the cimg provided by Ubuntu v22.04 and latest cimg on Windows). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4357:1052,test,test,1052,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4357,2,['test'],['test']
Testability,"Based on; - #2650 . Generic tests on engine is messy, this PR; - add template test class in Sofa.Testing.Tool; - put back generic tests on engine in Sofa.Core (and remove deps on scenecreator); - clean sofageneralengine generic tests file; - clean deps here and there. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2692:28,test,tests,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2692,7,"['Test', 'test']","['Testing', 'test', 'tests']"
Testability,"Based on; - #2996 . Remove last usages of SofaTest in plugins.; Now SofaTest needs to be enabled in cmake to be compiled (and not forcefully added). Fix #1885 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3000:700,test,test,700,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3000,2,['test'],['test']
Testability,"Based on; - #3221. Still continuing the https://www.youtube.com/watch?v=PJwd4JLYJJY quest. \+ clean here and there. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3237:655,test,test,655,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3237,2,['test'],['test']
Testability,"Based on; - #3627 . Restore the transparency feature when displaying the Bounding Collisions Models (displayflag ""Bounding Collision Models""); i.e more the cube model is precise/deep, more transparent it will be; Before:; <img src=""https://user-images.githubusercontent.com/11028016/219250761-388d081f-649d-42c3-9be0-1cb259fd7bce.png"" width=""400"" />. After:; <img src=""https://user-images.githubusercontent.com/11028016/219250786-2b6cf5b8-dad5-4a1f-bc8e-15631277e6c6.png"" width=""400"" />. Note that you need to do one step before being able to see the boxes (dont know if it is on purpose or not). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3658:1136,test,test,1136,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3658,2,['test'],['test']
Testability,"Based on; - #4263 . Part of the task to use std container and also just it felt dumb that ColorMap was not using the standard RGBAColor class; Mostly breaking because people needed to convert the result of ColorMap::eval() to RGBAColor. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4270:776,test,test,776,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4270,2,['test'],['test']
Testability,"Based on; - #4464. Fix ; - #4462 . This PR check the provenance of the loaded symbol, if it is consistent with the given filename of the plugin; Using the system function `dladdr()` https://man7.org/linux/man-pages/man3/dladdr.3.html. Fix the newly introduced (failing) test in #4464; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4466:270,test,test,270,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4466,3,['test'],['test']
Testability,"Basically just replace GLuint and some OpenGL lines of code inside of it. (related to #1645 ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1646:634,test,test,634,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1646,2,['test'],['test']
Testability,"Batchgui and HeadlessRecorder were missing a `sofa::helper::AdvancedTimer::end(""Animate"");` instruction. Without it, Sofa can't output the profiling statistics. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/890:412,test,test,412,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/890,2,['test'],['test']
Testability,BeamAdapter tests the regression for itself ; https://github.com/sofa-framework/BeamAdapter/blob/master/.github/workflows/ci.yml; but the way to do it is a bit rough indeed 😅,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4265#issuecomment-1786453403:12,test,tests,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4265#issuecomment-1786453403,1,['test'],['tests']
Testability,Because #ifdef based software architecture is just bad. If you don't understand why...please ask. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1077:349,test,test,349,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1077,2,['test'],['test']
Testability,"Because I can imagine I'm not the only one to copy/past scenes and I don't like warnings!. Removed alias in scenes for: ; - DefaultPipeline, DefaultContactMapper DefaultCollisionGroupManager; - EulerImplicitSolver; - Point/Line/Triangle CollisionModel. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1098:504,test,test,504,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1098,2,['test'],['test']
Testability,"Because I have so much branch with this change duplicated that it is worth having it in a PR and forget about that. . Of course, a real refactoring of the reading code would be better but until done let's just have this kind of cleaning . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1902:778,test,test,778,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1902,2,['test'],['test']
Testability,"Because `find_package(CUDA)` is deprecated. See https://cmake.org/cmake/help/latest/module/FindCUDA.html. Note that I had to re-install CUDA. It seems to be a common issue: https://stackoverflow.com/questions/56636714/cuda-compile-problems-on-windows-cmake-error-no-cuda-toolset-found. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2878:825,test,test,825,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2878,2,['test'],['test']
Testability,"Because defaultTestBehavior was supposed to fail three time and not one (this is not working with EXPECT_NONFATAL_FAILURE). The fact it actually fails only once has been changed later by changing the default behavior in BaseTest. The rational for this change was that for a transitional period of time it was decided to avoid warnings messages to generate a test failure so that the dashboard is less ""red"" and the tests was not refactor since this decision. ; ; EDIT: I didn't made EXPECT_ATLEAST_TWO_FAILURES...only ONE.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/604#issuecomment-370804645:358,test,test,358,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/604#issuecomment-370804645,2,['test'],"['test', 'tests']"
Testability,"Because having a single name for the same object makes things much clearer I remove the innter typedefs that are aliasing to common sofa::type. This includes Vector3, Vector2, Vec3, Vec2, Vec6, and Quat, sofa::Index and sofa::Size. . I didn't do Matrix3 and Matrix2 that deserve the same treatment. Follow-up on PR #3299 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3357:862,test,test,862,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3357,2,['test'],['test']
Testability,"Because it cannot be created since it requires a `MechanicalObject<Rigid3fTypes>` (`float`). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3684:632,test,test,632,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3684,2,['test'],['test']
Testability,"Because it does not make sense to me to use tetra algos in 1D for example 🤥. Maybe should we remove the 2D template for 3D primitives as well ?; I was considering tetra/hexa could be projected in 2D but it seems a bit far streched to me. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2291:777,test,test,777,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2291,2,['test'],['test']
Testability,"Because it is not used and not useful. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3353:578,test,test,578,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3353,2,['test'],['test']
Testability,"Because it is useless and it generates a warning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2202:589,test,test,589,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2202,2,['test'],['test']
Testability,"Because it make no sense to have 50 lines of code+ a dependency to iostream.h to save 4 chars. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1808:634,test,test,634,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1808,2,['test'],['test']
Testability,"Because it's better when your plugin build does not fail because of SOFA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2453:613,test,test,613,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2453,2,['test'],['test']
Testability,Because most compiler handle it properly and we are in 2020. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1249:312,test,test,312,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1249,2,['test'],['test']
Testability,Because no-one should be forced to compile opengl 1.x code...it is now a real plugin. . CHANGELOG:; - make plugin CMake package ; - move code to src/SofaOpenglVisual for better encapsulation; - rename all data field that are not conformant to sofa guidelines (so use the d_ prefix); - remove commented code all around; - move defintion from .h to .cpp; - remove the GLEW specific code all around. This PR is based on #1070 ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1071:676,test,test,676,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1071,2,['test'],['test']
Testability,"Because of aliases. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2544:561,test,test,561,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2544,2,['test'],['test']
Testability,"Because of confusion between `std::string` and `const char*`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5015:601,test,test,601,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5015,2,['test'],['test']
Testability,Because of missing _declspec_. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/516:282,test,test,282,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/516,2,['test'],['test']
Testability,Because of the InfoComponent (that report in the GUI the fact that a component; was not created the complete error log from the factory where not reported. This commit fix that. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/476:115,log,log,115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/476,3,"['log', 'test']","['log', 'test']"
Testability,"Because of the tricky mecanisme to inject SOFA_TARGET in the ObjectFactory, the config.h file must always be included before the ObjectFactory.h . Not doing that results in broken target. ; The PR fix the faulty components. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2693:763,test,test,763,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2693,2,['test'],['test']
Testability,"Because this is an empty file. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1844:572,test,test,572,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1844,2,['test'],['test']
Testability,"Because why not. Doing the same as before but with proper guidelines and stuff.; Breaking ⛔ because of the change in the fields name, but this engine is not used anywhere 🙋‍♂️. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1404:428,test,test,428,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1404,2,['test'],['test']
Testability,"Because will give more details if the appropriate macro is used for comparison when a test fails. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4607:86,test,test,86,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4607,3,['test'],['test']
Testability,"Because... https://www.youtube.com/watch?v=PJwd4JLYJJY; (a little bad side-effect is that it is mandatory to inline those if we want to access it from an other TU [dcl.constexpr] §7.1.5/2 and [basic.def.odr] §3.2/4 ). \+ cleanups:; - factorize toOpenGlMatrix; - remove hard-coded usage of double/float instead of Real; - surely other things. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3221:881,test,test,881,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3221,2,['test'],['test']
Testability,"Been looking into github actions, trying to get it to do what I want... not yet really successfully, but I've got a proof of concept. Currently, I run the checks on a slave on ci.inria.fr, and the current POC does a minimalist build / install / run tests workflow. But I think it would be worth asking ourselves what the perfect CI/CD pipeline could be for SOFA & it's plugins. In my mind, I'd like this:. SOFA:; - build / run tests (of course...); - build documentation (doxygen, sphinx...) & deploy on github pages / readthedocs / website; - build docker image & push on docker hub or equivalent (consistent build environment); - generate standalone binaries, zip & upload on github pages / website (SOFA-latest / sofa-nightly build...). PLUGINS:; - load docker image, or wget binaries generated by SOFA; - build / run tests (of course...); - build documentation (doxygen, sphinx...) & deploy on github pages / readthedocs / website; - build docker image & push on docker hub or equivalent; - generate binaries, zip & upload on github pages / website; ; ADVANTAGES of github actions vs JK2:; - ALL CI/CD config centralized in a .github folder in the git repository; - NO separate tool but Github's interface; - SUPER DUPER KICKASS interface design from github, gives direct access to all logs, checks, status badges etc. for each workflow / job / step in the Github checks processes. ![plop2](https://user-images.githubusercontent.com/13734391/69730387-3e4fc280-1128-11ea-8f91-20eeb660d233.png). DISADVANTAGES:; - Still in beta (some bugs noticed, especially when running in self-hosted slaves...); - A lot to recode given what @guparan did in JK2; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatib",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1225:249,test,tests,249,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1225,3,['test'],['tests']
Testability,"Before 20.12 there was a lot of ""stowaway passenger"" includes. We are in the process of removing them which has the consequence that a lot of plugins relying on these ""stowaway passenger"" are not compiling anymore. ; Fixing that is relatively easy in most of the case, you need to find which type is missing and include the corresponding file in the most appropriate file of your project. It can in a .cpp, an .inl or a .h.; Most common missing includes ares:; ```cpp; sofa::simulation::Node => #include <sofa/simulation/Node.h>; msg_xxxx function => #include <sofa/helper/logging/Messaging.h>; system::thread ctime => #include <sofa/helper/system/thread/CTime.h>; fixed_array => #include <sofa/helper/fixed_array.h>; ```. In PR:; ```cpp; sofa::helper::AdvancedTimer => #include<sofa/helper/AdvancedTimer.h>; sofa::helper::ScopedAdvancedTimer => #include<sofa/helper/ScopedAdvancedTimer.h>; sofa::type::Mat => #include<sofa/type/Mat.h>; ```. In PR: #1794 ; ```cpp; #include <sofa/core/behavior/BaseMechanicalState.h>; #include <sofa/core/BaseMapping.h>; #include <sofa/core/behavior/MultiMatrixAccessor.h>; #include <sofa/defaulttype/typeinfo/TypeInfo_Mat.h>; ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1757:573,log,logging,573,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1757,1,['log'],['logging']
Testability,"Before merging this one, regression-test has to be updated as well.; but only after PR #1052 has been merged. fixes #1051 #828 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1061:36,test,test,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1061,3,['test'],['test']
Testability,Before the changes:. ```; ------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------; BM_Matrix_typematf_matmult<3>/128 1.27 us 1.28 us 560000; BM_Matrix_typematf_matmult<3>/256 2.53 us 2.51 us 280000; BM_Matrix_typematf_matmult<3>/512 5.11 us 5.16 us 100000; BM_Matrix_eigenmatf_matmult<3>/128 0.923 us 0.900 us 746667; BM_Matrix_eigenmatf_matmult<3>/256 1.83 us 1.84 us 373333; BM_Matrix_eigenmatf_matmult<3>/512 3.67 us 3.68 us 186667; ```. After the changes:. ```; ------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------; BM_Matrix_typematf_matmult<3>/128 1.00 us 1.00 us 640000; BM_Matrix_typematf_matmult<3>/256 1.98 us 1.97 us 373333; BM_Matrix_typematf_matmult<3>/512 3.93 us 3.90 us 172308; BM_Matrix_eigenmatf_matmult<3>/128 1.00 us 1.00 us 746667; BM_Matrix_eigenmatf_matmult<3>/256 1.99 us 2.01 us 373333; BM_Matrix_eigenmatf_matmult<3>/512 3.99 us 4.01 us 179200; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1239272179:106,Benchmark,Benchmark,106,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3280#issuecomment-1239272179,2,['Benchmark'],['Benchmark']
Testability,"Before:; <img src=""https://github.com/user-attachments/assets/0cc909bd-b823-4e28-b3d8-b7549e240e5e"" width=""300"" />. After:; <img src=""https://github.com/user-attachments/assets/1a96d6a5-c4f1-4a34-acff-46cc667fc0bd"" width=""300"" />. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5048:770,test,test,770,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5048,2,['test'],['test']
Testability,"Benchmark on the provided example. # Matrix-free CG:. Sequential:; `[INFO] [BatchGUI] 1000 iterations done in 4.1899 s ( 238.669 FPS).`; `CG-Solve 3.21 ms` (mean). Parallel:; `[INFO] [BatchGUI] 1000 iterations done in 2.82476 s ( 354.012 FPS).`; `CG-Solve 1.85 ms` (mean). # Assembled CG; (CG with `template=""CompressedRowSparseMatrixMat3x3d""`. Sequential:; `[INFO] [BatchGUI] 1000 iterations done in 6.65858 s ( 150.182 FPS).`; `CG-setSystemMBKMatrix 2.34 ms` (mean). Parallel:; `[INFO] [BatchGUI] 1000 iterations done in 4.1272 s ( 242.295 FPS).`; `CG-setSystemMBKMatrix 4.94 ms` (mean)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3552#issuecomment-1359694003:0,Benchmark,Benchmark,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3552#issuecomment-1359694003,1,['Benchmark'],['Benchmark']
Testability,"Better fix to handle texture coordinate update during topological changes. ; The problem was coming from updating the data from parent Data (from Loader/engine) during the changes. ; Instead of breaking the ""parentship"", the topology callback has been changed to avoid calling updateIfDirty during the changes. This PR combine with the #2414 will; fix #2392 ; Add safeguard in the scene to avoid topologicalChanges which are not handled by TextureInterpolation; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2415:1001,test,test,1001,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2415,2,['test'],['test']
Testability,"Big PR for:; - remove collections (SofaComponent*, except for SofaComponentAll); - now SofaBase/SofaCommon/SofaGeneral/SofaAdvanced/SofaMisc are packages (find_package SofaBase) and are modules as well (target_link_libraries SofaBase); - Add a new module in SofaBase, called SofaBaseUtils including all essential utilities for scenes (i.e RequiredPlugin, AddRepo, etc); - Change previous SofaMisc module to SofaMiscExtra (to avoid confusion with the metapackage SofaMisc). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1314:724,test,test,724,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1314,2,['test'],['test']
Testability,BilateralInteractionConstraint.scn regression test fails,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2128:46,test,test,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2128,1,['test'],['test']
Testability,"BlockDiagonalMatrix, BlockFullMatrix and BlockVector are now explicitly instantiated with extern template. This leads to compilation problems that have been fixed (missing includes, missing parameters in `asub` etc). BlocFullMatrix has been deprecated in order to rename it to BlockFullMatrix. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3334:833,test,test,833,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3334,2,['test'],['test']
Testability,"Boost libs were not copied correctly in MinSizeRel and RelWithDebInfo configurations on Windows. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1711:636,test,test,636,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1711,2,['test'],['test']
Testability,"Both BaseObject and BaseNode have a getPathName function, but those can't be called from a Base ptr without dereferencing with toBaseNode / toBaseObject. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1455:405,test,test,405,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1455,2,['test'],['test']
Testability,"Both plugins are removed from sources and **NOT** fetchable since they are not of interest/use anymore:; - [ExternalBehaviorModel](https://github.com/sofa-framework/ExternalBehaviorModel); - [ManualMapping](https://github.com/sofa-framework/ManualMapping). I even hesitated to archive them directly. But let's be gentle. Related to https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4565:923,test,test,923,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4565,2,['test'],['test']
Testability,"BoxROI couln't be used in 2d or 1d scenes.; Examples are also added.; Note that with this PR, BoxROI still require a 3d box and inclusion algorithms still work in 3d, which means the dimensions that are not used in the mechanics are still used in BoxROI. That is why I put big numbers in the `box` filed in the examples. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2600:860,test,test,860,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2600,2,['test'],['test']
Testability,"Broken after https://github.com/sofa-framework/sofa/pull/4827. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4879:602,test,test,602,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4879,2,['test'],['test']
Testability,"Broken by https://github.com/sofa-framework/sofa/pull/2790/files#diff-beb90dbb98788df220b4c6b4a57cac3d3a8eeb658515bfe80c3831cc5e94de06. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2863:675,test,test,675,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2863,2,['test'],['test']
Testability,"BruteForceDetection is deprecated. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2232:574,test,test,574,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2232,2,['test'],['test']
Testability,"Bug introduced in #1487, with an infinite loop when calling parse(); (Fix timeout with MeshBarycentricMapperEngine.scn on the CI). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1516:382,test,test,382,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1516,2,['test'],['test']
Testability,"Bug introduced in https://github.com/sofa-framework/sofa/pull/4838. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4865:607,test,test,607,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4865,2,['test'],['test']
Testability,"Bugfix for problem discussed in https://github.com/sofa-framework/sofa/discussions/2691#discussioncomment-2183354 with @hugtalbot . When calling a scene with an `ArticulatedSystemMapping` through `runSofa`, everything works as expected.; When running the same scene through `SofaPython3` with `OpenGL` as rendering, the stack overflows.; Through some commenting out code, I found that saving the `saveLastState` without `restoreLastState` leads to the stack overflow.; Restoring was not done, because the function returned immediately after checking if mappings should be shown. Changes:; - Pulling `restoreLastState` and `saveLastState` into the `if`; - Modernized the loops for readability. Scene for testing:; test_articulation.py:. ```python; import Sofa; import Sofa.Core; import Sofa.SofaGL; import Sofa.Simulation; import os; import time. sofa_directory = os.environ[""SOFA_ROOT""]; import pygame; from OpenGL.GL import *; from OpenGL.GLU import *. display_size = (800, 600). def init_display(node):; pygame.display.init(); pygame.display.set_mode(display_size, pygame.DOUBLEBUF | pygame.OPENGL). glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); glEnable(GL_LIGHTING); glEnable(GL_DEPTH_TEST); Sofa.SofaGL.glewInit(); Sofa.Simulation.initVisual(node); Sofa.Simulation.initTextures(node); glMatrixMode(GL_PROJECTION); glLoadIdentity(); gluPerspective(45, (display_size[0] / display_size[1]), 0.1, 50.0). glMatrixMode(GL_MODELVIEW); glLoadIdentity(). def simple_render(rootNode):; """"""; Get the OpenGL Context to render an image (snapshot) of the simulation state; """"""; glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); glEnable(GL_LIGHTING); glEnable(GL_DEPTH_TEST); glMatrixMode(GL_PROJECTION); glLoadIdentity(); gluPerspective(45, (display_size[0] / display_size[1]), 0.1, 50.0); glMatrixMode(GL_MODELVIEW); glLoadIdentity(). cameraMVM = rootNode.camera.getOpenGLModelViewMatrix(); glMultMatrixd(cameraMVM); Sofa.SofaGL.draw(rootNode). pygame.display.get_surface().fill((0, 0, 0)); pygame.di",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3095:703,test,testing,703,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3095,1,['test'],['testing']
Testability,Build is OK now but there are still a bunch of failing tests.; [ci-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/360#issuecomment-330164053:55,test,tests,55,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/360#issuecomment-330164053,1,['test'],['tests']
Testability,"Build on top of #3309 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3311:563,test,test,563,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3311,2,['test'],['test']
Testability,"Build process:. ```; cd ~/Apps/git-apps; git clone https://github.com/sofa-framework/sofa.git; cd sofa/src; git checkout master; mkdir build-master; cd build-master; cmake [options] ..; make; ```. To be clear, build directory is: `/home/emdash00/Apps/git-apps/sofa/src/build-master`. Edit: updated `cmake-log.txt`. Last one was the wrong configuration by accident. I tried remaking the config, though it might not be 100% accurate. I used cmake-gui for the options, so here's the [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/4777146/CMakeCache.txt).; Here's the configuration process log of the `cmake [options] ..` command: [cmake-log.txt](https://github.com/sofa-framework/sofa/files/4777183/cmake-log.txt). Output is very long so I've attached it in this text file [log.txt](https://github.com/sofa-framework/sofa/files/4777142/log.txt). Probably the most notably part is on log.txt:385, which I'll post here. Note: I spaced it to make it visually easier to read. The original is all on a single line of course.; ```; /home/emdash00/Apps/git-apps/sofa/src/applications/plugins/SofaOpenCL/OpenCLIdentityMapping.cpp:71:16: error: duplicate explicit instantiation of; ‘class sofa::component::mapping::IdentityMapping<sofa::gpu::opencl::OpenCLVectorTypes<sofa::defaulttype::Vec<3, float>, ; 													 	 sofa::defaulttype::Vec<3, float>, float>,; 									 				 sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, ; 													 	 sofa::defaulttype::Vec<3, float>, float> >’ [-fpermissive]; ```. I'm unsure of where the original instantiation is. I'm just trying to use the library since Ubuntu 19.10 doesn't have prebuilt packages yet. I don't think this is part of the issue; however, I'm using OpenCL for an Intel GPU. I wasn't sure how computationally intensive this library would be, but I thought might as well try to utilize my Intel HD Graphics Unit. . Here's an attachment of all relevant system specs using linux commands: [sysinfo.txt](https://github.com",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1419:305,log,log,305,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1419,7,['log'],['log']
Testability,"Build the mapping Jacobian using only the affected DoFs (the DoFs which contributes to the matrix), filtering the rest. This is particularly more efficient for PenalityForceField, when in general only a few DoFs are in contacts. On the caduceus, before:; ```; 10000 iterations done in 41.6872 s ( 239.882 FPS).; ```. after:; ```; 10000 iterations done in 16.8157 s ( 594.681 FPS).; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4001:926,test,test,926,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4001,2,['test'],['test']
Testability,But default google test prints raw values when the tests cases are provided by GetParams. ; By adding a PrintTo function this behavior can be changed so that custom types are easier ; to read. . In the PR i adds a PrintTo for the Python_test_data object. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/730:19,test,test,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/730,4,['test'],"['test', 'tests']"
Testability,"But needs to wait for; [ci-depends-on https://github.com/SofaDefrost/Cosserat/pull/119]. to be merged before enabling it on the CI. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4859:671,test,test,671,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4859,2,['test'],['test']
Testability,"But scenes crash. Before going further with https://github.com/sofa-framework/sofa/pull/4395, it is wiser to first fix the compilation of the plugin. We can even wonder if we keep this plugin since it has not been maintained for a while. Note that this plugin is not compiled on the CI. See https://github.com/sofa-framework/ci/pull/32. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4398:876,test,test,876,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4398,2,['test'],['test']
Testability,But we want PSL.dll to be loaded as a path and not as a name.; I think we should replace the whole test by a simple `if (plugin.find(dotExt) != std::string::npos)`,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/617#issuecomment-376457490:99,test,test,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/617#issuecomment-376457490,1,['test'],['test']
Testability,"By adding an optional geometrical template for mesh-based masses. Merely a refresh version of the previously closed PR ; - https://github.com/sofa-framework/sofa/pull/2476. In the end, it is just easier to add a template to manage geometrical data retrieval.; Also, some cleaning and easy optimizations in the diffusion to compute a little faster. Toward a green CI 🚀; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2798:908,test,test,908,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2798,2,['test'],['test']
Testability,"By doing that I believe that it also removes some memory leaks. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4838:603,test,test,603,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4838,2,['test'],['test']
Testability,"By using RAII, `ScopedAdvancedTimer` is less error-prone than `AdvancedTimer::stepBegin/stepEnd`. Let's use it more, in the goal of having only 1 way to define a timer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4177:708,test,test,708,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4177,2,['test'],['test']
Testability,ByStep\Visual\5_Visual.scn; examples\Tutorials\StepByStep\Visual\6_Visual.scn. [INFO] [PluginFinder] Found 132 files with warning:; examples\Benchmark\Analysis\constantMomentum.scn; examples\Benchmark\Performance\benchmark_cubes.scn; examples\Benchmark\Performance\BuildLCP\BuiltConstraintCorrection.scn; examples\Benchmark\Performance\BuildLCP\NonBuiltConstraintCorrection.scn; examples\Benchmark\TopologicalChanges\AffineMovementConstraint__RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\FixedConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\FixedPlaneConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\LinearMovementConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectDirectionConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectToLineConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectToPlaneConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectToPointConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\TriangularBendingSprings_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\TriangularFEMForceField_RemovingMeshTest.scn; examples\Components\constraint\AffineMovementConstraint.scn; examples\Components\constraint\AffineMovementConstraint3D.scn; examples\Components\constraint\AttachConstraintMatrix.scn; examples\Components\constraint\BilateralInteractionConstraint_PGS.scn; examples\Components\constraint\BilinearConstraint.scn; examples\Components\constraint\BilinearConstraint3D.scn; examples\Components\constraint\HermiteSplineConstraint.scn; examples\Components\constraint\NonBuiltConstraintCorrection.scn; examples\Components\constraint\PatchTestConstraint.scn; examples\Components\constraint\ProjectToPlaneConstraint.scn; examples\Components\engine\DisplacementMatrixEngine.scn; examples\Components\engine\GenerateCylinder.scn; examples\Components\engine\GenerateGrid.scn; examples\Components\engin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3352:1983,Benchmark,Benchmark,1983,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3352,1,['Benchmark'],['Benchmark']
Testability,CG was emitting inappropriate warnings regarding threshold-tolerance. This PR fixes it by checking if this is the first time step and first iteration.; This PR also checks the cases with division by zero. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/658:456,test,test,456,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/658,2,['test'],['test']
Testability,"CGAL 4.12+ now forward declares its package Polyhedron (see https://github.com/CGAL/cgal/commit/76ccc9a , hence the implicit; instantiation of undefined template compilation error. This PR fixes this. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/812:452,test,test,452,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/812,2,['test'],['test']
Testability,"CGAL is not available in CentOS official repos. On Ubuntu 18.04, a custom findCGAL.cmake is not necessary.; With a dumb project like; ```cmake; project(test); cmake_minimum_required(VERSION 3.6). find_package(CGAL REQUIRED). get_cmake_property(_variableNames VARIABLES); list (SORT _variableNames); foreach (_variableName ${_variableNames}); if(_variableName MATCHES ""^CGAL_""); message(""${_variableName} = ${${_variableName}}""); endif(); endforeach(); ```. I got this output:; ```bash; root@90bf513426c7:~/project/build# cmake ..; CGAL_3RD_PARTY_DEFINITIONS = ; CGAL_3RD_PARTY_INCLUDE_DIRS = /usr/include; CGAL_3RD_PARTY_LIBRARIES = ; CGAL_3RD_PARTY_LIBRARIES_DIRS = /usr/lib; CGAL_BUGFIX_VERSION = 0; CGAL_BUILD_SHARED_LIBS = TRUE; CGAL_BUILD_TYPE_INIT = Release; CGAL_BUILD_VERSION = 1000; CGAL_Boost_USE_STATIC_LIBS = OFF; CGAL_COMPONENT = ; CGAL_CONFIG = /usr/lib/x86_64-linux-gnu/cmake/CGAL/CGALConfig.cmake; CGAL_CONFIGURED_LIBRARIES = CGAL_Core;CGAL_ImageIO;CGAL_Qt5; CGAL_CONFIG_DIR = /usr/lib/x86_64-linux-gnu/cmake/CGAL; CGAL_CONFIG_LOADED = TRUE; CGAL_CONSIDERED_CONFIGS = /usr/lib/x86_64-linux-gnu/cmake/CGAL/CGALConfig.cmake; CGAL_CONSIDERED_VERSIONS = 4.11.1000; CGAL_CXX_FLAGS_DEBUG_INIT = -g; CGAL_CXX_FLAGS_INIT = -g -O2 -fdebug-prefix-map=/build/cgal-ZyilPF/cgal-4.11=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -frounding-math; CGAL_CXX_FLAGS_RELEASE_INIT = -O3 -DNDEBUG; CGAL_DIR = /usr/lib/x86_64-linux-gnu/cmake/CGAL; CGAL_DISABLE_GMP = ; CGAL_ENABLE_PRECONFIG = OFF; CGAL_ESSENTIAL_3RD_PARTY_LIBRARIES = GMP;MPFR;GMPXX; CGAL_EXT_LIB_Coin3D_PREFIX = COIN3D; CGAL_EXT_LIB_Eigen3_PREFIX = EIGEN3; CGAL_EXT_LIB_QGLViewer_PREFIX = QGLVIEWER; CGAL_EXT_LIB_Qt5_PREFIX = QT; CGAL_FOUND = 1; CGAL_GIT_SHA1 = ; CGAL_GRAPHICSVIEW_PACKAGE_DIR = /usr//include/CGAL/; CGAL_HEADER_ONLY = OFF; CGAL_INCLUDE_DIRS = /usr//include; CGAL_INSTALL_PREFIX = /usr/; CGAL_ImageIO_USE_ZLIB = ON; CGAL_LIB = CGAL; CGAL_LIBRARIES_DIR = /usr//lib/x86_64-linux",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1308#issuecomment-611416421:152,test,test,152,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1308#issuecomment-611416421,1,['test'],['test']
Testability,"CGAL plugin has some build issues in some circumstances, this PR aims to fix it:. - build error if ""image"" plugin is deactivated; - BOOST_PARAMETER_MAX_ARITY too low by default (5 by default, where CGAL needs 12 at least). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/351:474,test,test,474,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/351,2,['test'],['test']
Testability,CHANGE usage of d_totalMass in DiagonalMass and add tests,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/230:52,test,tests,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/230,1,['test'],['tests']
Testability,CHANGE: AdvanceTimer::Id::IdFactory is no more a singleton static class but a thread local class to prevent different threads to share the same instance of the class. FIX: DefaultTaskScheduler registration to TaskScheduler factory is forced to be executed after the TaskScheduler static initialization. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/792:554,test,test,554,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/792,2,['test'],['test']
Testability,"CHANGELOG:. - [cmake] rename FindThread.cmake into FindSofaThread.cmake because otherwise there is ""collision"" with the FindThreads.cmake provided by recent version of boost. ; - [all] My usuall cleaning PR (when I put my brain in automated mode to):; - move some code from .h to .cpp; - use msg_* API; - remove commented code; - group protected/public/ in .h; - add override on virtual constructor; - replace some NULL by nullptr (but I would like someone try clang-tidy to do that. Nothing should be broken with the change (expect your branches with a lot of divergence); ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/884:825,test,test,825,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/884,2,['test'],['test']
Testability,CHANGELOG:; - COSMETIC fixes in Data.h; - BUGFIX in SceneCheckerListener; - CHANGE in Binding_Base.cpp. I think that the change in Binding_Base may requires a bit of discussion as it is breaking. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1003:449,test,test,449,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1003,2,['test'],['test']
Testability,CHANGELOG:; - FIX the wrong size computation of the ModifyData window.; - FIX the rendering of the help text tooltips associated with data; - FIX the mouse wheel scrolling that on vector widget was changing the spinbox value instead of scrolling the widget.; - COSMETIC removal of commented code. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1011:550,test,test,550,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1011,2,['test'],['test']
Testability,CHANGELOG:; - FIXES SofaGeneralEngines/CMakeLists.txt ; - CLEAN SofaGeneralEngines/ComplementaryROI (should not change anything); - CLEAN SofaSimpleFEM/HexahedronFEMForceField (should not change anything); - CLEAN SofaSimpleFEM/TetrahedronFEMForceField (should not change anything); - REMOVE SOFA_SUPPORT_MAPPED_MASS that was not used because of missing #define. In case you disagree on some action please provide feedback. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/831:677,test,test,677,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/831,2,['test'],['test']
Testability,CHANGELOG:; - Replace Vector3 alias by Vec3; - Set groups in MeshLoader. ; - The data field's name are now conformant with Sofa coding style in MeshObjLoader; - Add a light/dark gray in RGBAColor. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1025:450,test,test,450,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1025,2,['test'],['test']
Testability,CI info: I disabled Defrost MacOS builder to force this PR to build on sofa-ci-dev-macos. To be merged asap (if CI agrees). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/719:375,test,test,375,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/719,2,['test'],['test']
Testability,CI on CentOS not happy with CUDA and stopped on MacOS.; Let's restart it to check (Mac) with the tests!. [ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1373#issuecomment-631274536:97,test,tests,97,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1373#issuecomment-631274536,2,['test'],['tests']
Testability,"CI seems not happy:; ```; Edge2QuadTopologicalMapping.cpp.obj; J:\0\src\modules\SofaTopologyMapping\src\SofaTopologyMapping\Edge2QuadTopologicalMapping.cpp(85): error C2146: syntax error: missing ')' before identifier 'and'; J:\0\src\modules\SofaTopologyMapping\src\SofaTopologyMapping\Edge2QuadTopologicalMapping.cpp(85): error C2065: 'and': undeclared identifier; ```. See [full log](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/PR-1861/CI_CONFIG=windows10_vs-2017,CI_PLUGINS=options,CI_TYPE=release/1/console) here",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1861#issuecomment-785683796:381,log,log,381,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1861#issuecomment-785683796,1,['log'],['log']
Testability,CI was missing disk space. I relaunch ;); [ci-build][with-scene-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/760#issuecomment-424019836:64,test,tests,64,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/760#issuecomment-424019836,1,['test'],['tests']
Testability,CI/Tests seem fine 😙,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1453#issuecomment-694084492:3,Test,Tests,3,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1453#issuecomment-694084492,1,['Test'],['Tests']
Testability,"CImgData.h only contains classes and things related to the image plugin.; Thats why it seems more consistent to move this file directly into the image plugin. Moreover, it had a non-met (soft) dependency on SofaBaseVisual (as there is no cpp, and it is only used by the image plugin, this was not an issue before). IMO, CImgPlugin should be only a plugin:; - introducing the cimg library; - using cimg, allowing loading various picture file format (jpg/png, etc). I added some includes here and there as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2307:1049,test,test,1049,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2307,2,['test'],['test']
Testability,"CImgPlugin is no longer required since the only usage is to save an image, which can be done via STB. As a bonus, TGA format is now supported. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4112:682,test,test,682,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4112,2,['test'],['test']
Testability,CMAKE_WARN_DEPRECATED sends warning when deprecated project is found.; This warning appears now for the Modeler and when the option; SOFA_WITH_DEPRECATED_COMPONENTS is activated. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/662:430,test,test,430,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/662,2,['test'],['test']
Testability,"CMake configuration of out-of-tree plugins using Sofa.Testing is broken after; - #3655 . The compat/ dir has been removed but not its reference for the target config. Error log: (from beamadapter CI):. ```; CMake Error in BeamAdapter_test/CMakeLists.txt:; Imported target ""Sofa.Testing"" includes non-existent path. ""/home/runner/work/BeamAdapter/BeamAdapter/sofa/include/Sofa.Testing/Sofa.Testing/compat"". in its INTERFACE_INCLUDE_DIRECTORIES. Possible reasons include:. * The path was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and references files it does not; provide.; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3694:54,Test,Testing,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3694,7,"['Test', 'log', 'test']","['Testing', 'log', 'test']"
Testability,"CMake now passes with SOFA-NG; Fixed some types and includes due to changes from SOFA-NG. The plugin still does not compile. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4338:664,test,test,664,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4338,2,['test'],['test']
Testability,"CRSMultiMatrixAccessor was isolated in #2220 and was make compilable by default.; The only case where it could be used is in MatrixLinearSolver by defining a macro (SOFA_SUPPORT_CRS_MATRIX), but this one was never defined so effectively the CRSMultiMatrixAccessor was never used (even if compiled). Thing is, CRSMultiMatrixAccessor takes a **loooong** time to compile (and takes heap of memory).; The reason is that it needs to compile ~~(6 * 6 * 6 * 2 * 2) * 2 = **1728**~~ functions because of chains of template. (EDIT actually it is even more than that: `(6 + (6*6) + (6*6*6) + (6*6*6*2) + (6*6*6*2*2)) * 2` = **3108**). So in the end, either you want to compile it and use it, or dont use it but dont compile it... ; A cmake (advanced) option is introduced for people who really wish to use it.; By the way CRSMultiMatrixAccessor code quality is very dubious (const_cast<> everywhere...), ; and the english comments are.... _special_. For the sake of it, std::cout calls have been replaced with msg_info() as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2372:1559,test,test,1559,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2372,2,['test'],['test']
Testability,"CUDA12 disabled the usage of a deprecated texture API, obviously used in our code 😅. Actually only TLED classes used necessarily texturing so no choice other than disable the compilation of these 2 classes if CUDA>=v12 at the cmake stage. Other files were including CudaTexture.h and were using the old API in code only activated with Macros (which I suspect, were never enabled anymore....) so I enclosed the include with the same `#ifdef` tests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3640:441,test,tests,441,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3640,3,['test'],"['test', 'tests']"
Testability,"Caduceus scene must leave, we should create a new default demo scene. See: https://github.com/bakpaul/TestScenes/tree/main/Experimental",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4201:102,Test,TestScenes,102,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4201,1,['Test'],['TestScenes']
Testability,"Call me weightwatcher!. Following the STC9, decision to remove the following plugins (unused/unknown):; - ARTrack: you confirm for you @omarboukhris ?; - SofaPML; - SofaStereo; - SofaVolumetricData. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1439:450,test,test,450,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1439,2,['test'],['test']
Testability,"Callback call in TopologySubsetData were missing:; - desctruction callback during Data remove method; - creation callback during Data add method. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2374:685,test,test,685,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2374,2,['test'],['test']
Testability,"Calls to OpenGL primitives are reduced. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3420:579,test,test,579,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3420,2,['test'],['test']
Testability,Can't wait to test this today! Awesome idea!,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1464#issuecomment-681500862:14,test,test,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1464#issuecomment-681500862,1,['test'],['test']
Testability,"Capture::saveScreenshot was not destroying the content of the Image pointer.; This solves this, plus adds one check on the pointer and add message output. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/533:406,test,test,406,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/533,2,['test'],['test']
Testability,Capture::screenshot() does not work with anti-aliased (MSAA) OpenGL rendering.; Using instead built-in Qt method. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/728:365,test,test,365,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/728,2,['test'],['test']
Testability,"Catch error if task could not be started, probably because Graphviz is not found.; Before, nothing mentioned that the feature required Graphviz. This feature allows to export a graph as an image like:. ![test](https://user-images.githubusercontent.com/10572752/157454936-6efab78a-295c-4631-b193-762a1084e878.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2771:204,test,test,204,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2771,3,['test'],['test']
Testability,CentOS: 15 scenes time out; MacOS: 87 crashes (time out as well) .. Let's :. [ci-build][with-all-tests][force-full-build],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/218#issuecomment-680735938:97,test,tests,97,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/218#issuecomment-680735938,1,['test'],['tests']
Testability,Cf Issue #1043. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1054:267,test,test,267,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1054,2,['test'],['test']
Testability,Chains are behaving normally now.; DefaultCollisionGroup seems to bring a different behavior by solving contact (with penalties) when the all objects are considered as one system. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/821:431,test,test,431,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/821,2,['test'],['test']
Testability,"Change CMake version in CMakePresets.json to make SOFA easier to compile with IDEs like CLion or VsCode. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4849:644,test,test,644,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4849,2,['test'],['test']
Testability,"Change Gitter to Discord. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4498:565,test,test,565,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4498,2,['test'],['test']
Testability,"Change Naming in cudaMatrix with rowSize and colSize which are the standard names in sofa. ; This change enables to use CudaMatrix as template. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1788:683,test,test,683,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1788,2,['test'],['test']
Testability,"Change `std::map` for `std::unordered_map` in `MapMapSparseMatrix`.; It means the data is no longer processed in a predictable order. In most cases, it does not change anything since the data structure is converted to another. This conversion does not depend on the order. Benchmarks from https://github.com/alxbilger/SofaBenchmark/pull/14 before:. ```; ---------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ---------------------------------------------------------------------------------; BM_MapMapSparseMatrix_writeLine/512 3.28 us 3.22 us 213333; BM_MapMapSparseMatrix_writeLine/1024 15.8 us 16.0 us 44800; BM_MapMapSparseMatrix_writeLine/2048 49.6 us 50.0 us 10000; BM_MapMapSparseMatrix_writeLine/4096 112 us 109 us 5600; BM_MapMapSparseMatrix_addCol/512/512 1.77 ms 1.80 ms 407; BM_MapMapSparseMatrix_addCol/1024/512 3.54 ms 3.53 ms 195; BM_MapMapSparseMatrix_addCol/2048/512 7.01 ms 7.11 ms 112; BM_MapMapSparseMatrix_addCol/4096/512 14.1 ms 14.1 ms 50; BM_MapMapSparseMatrix_addCol/512/1024 5.74 ms 5.72 ms 112; BM_MapMapSparseMatrix_addCol/1024/1024 11.8 ms 11.7 ms 56; BM_MapMapSparseMatrix_addCol/2048/1024 23.4 ms 23.4 ms 30; BM_MapMapSparseMatrix_addCol/4096/1024 46.1 ms 46.9 ms 14; BM_MapMapSparseMatrix_addCol/512/2048 23.5 ms 23.4 ms 28; BM_MapMapSparseMatrix_addCol/1024/2048 46.2 ms 45.8 ms 15; BM_MapMapSparseMatrix_addCol/2048/2048 92.6 ms 93.8 ms 9; BM_MapMapSparseMatrix_addCol/4096/2048 187 ms 188 ms 4; BM_MapMapSparseMatrix_addCol/512/4096 59.8 ms 59.7 ms 11; BM_MapMapSparseMatrix_addCol/1024/4096 119 ms 120 ms 6; BM_MapMapSparseMatrix_addCol/2048/4096 238 ms 240 ms 3; BM_MapMapSparseMatrix_addCol/4096/4096 480 ms 477 ms 2; ```. After:. ```; ---------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ---------------------------------------------------------------------------------; BM_MapMapSparseMatrix_writeLine/512 1.48 us 1.46 us 448000; BM_MapMapSp",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2641:273,Benchmark,Benchmarks,273,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2641,2,['Benchmark'],"['Benchmark', 'Benchmarks']"
Testability,"Change access specifier for the method set. A public access is needed in SofaCUDASolver plugin. . Moreover, regardless of the reasons of this modification, the fact that this method is at the beginning of the class declaration without any access specifier before is not wanted. Even if it is a class which makes its access private by default, it lacks of readability. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3834:909,test,test,909,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3834,2,['test'],['test']
Testability,"Change an error message into a warning in MeshVTKLoader due to new metadata not handled, but files are well loaded; Fix #652 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1037:378,test,test,378,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1037,2,['test'],['test']
Testability,"Change operator*. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3333:557,test,test,557,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3333,2,['test'],['test']
Testability,"Change the default plugins. Make multi-thread compiled by default, and removed cimg default. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4322:634,test,test,634,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4322,2,['test'],['test']
Testability,"Changed d_points from Indices to a TopologySubsetIndices so that the indices get updated on topology changes.; Discussed with @hugtalbot and @epernod in https://github.com/sofa-framework/sofa/discussions/3008. Is there a way to also do that for the external indices?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3037:807,test,test,807,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3037,2,['test'],['test']
Testability,"Changed input variable name ""InputMeshName"" of MeshbarycentricMapperEngine to ""topology"" for added clarity; Modified label descriptions of MeshbarycentricMapperEngine variables for added clarity; Added a parse function to warn about the name change of InputMeshName; Added an example scene for this component. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1487:561,test,test,561,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1487,2,['test'],['test']
Testability,Changed the mixed-precision mappings for generic ones. This fixes issue #892 (and is related to #893). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/898:354,test,test,354,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/898,2,['test'],['test']
Testability,"Changelog: ; Batch replacement of std::cout to msg_* API, removal of commented code ; The inpacted files are in:; - SofaBoundaryCondition; - SofaConstraint; - SofaEulerianFluid; - SofaExporter; - SofaGeneralEngine; - SofaGeneralExplicitODESolver; - SofaGeneralLoader; - SofaGeneralMeshCOllision; - SofaGeneralObjectInteraction; - SofaGeneralRigid; - SofaGeneralSimpleFEM; - SofaGeneralVIsual; - SofaMiscFEM; - SofaMiscForceField; - SofaMiscMapping; - SofaMiscSolver. @hugtalbot done. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [x] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/275:735,test,test,735,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/275,2,['test'],['test']
Testability,Changelog:; - Remove the plugins in deprecated directory ; - Remove DETECTIONOUTPUT_BARYCENTRICINFO (https://github.com/sofa-framework/sofa/pull/1046); - Remove remaining SOFA_WITH_FLOAT (https://github.com/sofa-framework/sofa/pull/1047); - Replace 3.14 with M_PI (https://github.com/sofa-framework/sofa/pull/1045) . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1048:568,test,test,568,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1048,2,['test'],['test']
Testability,"Changelog:; - added a mechanism to obtain extra args from command-line (everything following `--argv`); - forwarded extra args to python in `SceneLoaderPy`. Example:; ```python; # test.py; def createScene(node):; import sys; print(sys.argv); ```. ```sh; runSofa -a test.py --argv --spam --bacon eggs; # ['test', '--spam', '--bacon', 'eggs']; ```; ___________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/368:180,test,test,180,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/368,5,['test'],['test']
Testability,Changelog:; - remove SOFA_SUPPORT_MOVING_FRAME (because #ifdef is not the way to implement a feature); - remove SOFA_SUPPORT_MULTIRESOLUTION (because #ifdef is not the way to implement a feature); - move code from .h to .cpp in DefaultCollisionGroupManager. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/849:509,test,test,509,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/849,2,['test'],['test']
Testability,Changes:. - Removing deprecated datafields; - Use Accessors instead of beginEdits; - Remove aliases; - move addInputs / addOutputs from init() to ctor(); - Add alignedBoxes & orientedBoxes as inputs of the BoxROI engine; - Refactor init / reinit / doUpdate to guarantee full component update on data change. *BREAKING because of the removal of aliases & deprecated datafields*. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1482:629,test,test,629,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1482,2,['test'],['test']
Testability,"Changes:; - changes the old fashion SOFA logo in background; - make it repeatable; - change ERROR msg into warning message when SOFA is launched for the first time and some folder are not existing (e.g. screenshots). ![](https://i.ibb.co/2nT5d2V/test.jpg). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1758:41,log,logo,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1758,4,"['log', 'test']","['logo', 'test']"
Testability,"Check more values in DiagonalMass_test to be sure TotalMass, Density and VertexMass are well init from inputs. This reveals one bug when init using vertexMass resulting in one failing test:; UnitTests.SofaBaseMechanics_test/DiagonalMass3_test.checkMassDensityTotalMassFromVertexMass_Tetra. It will be fixed in next PR #2186 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2183:184,test,test,184,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2183,3,['test'],['test']
Testability,"Check that triangles index match the size of the triangleAroundVertexArray (Like it is done in EdgeSetTopologyContainer for EdgeAroundVertexArray). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4242:687,test,test,687,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4242,2,['test'],['test']
Testability,"Checks show SUCCESS but tests are ignored. ; Your unit test crashes, check the logs: https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/4259/console",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/72#issuecomment-266020393:24,test,tests,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/72#issuecomment-266020393,3,"['log', 'test']","['logs', 'test', 'tests']"
Testability,Cherry pick last useful changes from PR #788. All topologyData were set to dirty as soon as a topology modification was done. Check the Data link and set/clean dirty only topologyData link to the topology array modified. NB: factorisation will be done as soon as everything work fine. Having several methods per topology make my eyes cry but it helps to follow the data link for debug. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/889:637,test,test,637,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/889,2,['test'],['test']
Testability,Cherry-pick from master to v16.12.; Fix compilation (https://github.com/sofa-framework/sofa/pull/122) due to boost : FileRepository was not compiled if Boost_FILESYSTEM was not found.; Commits 586820f and 6454b77 fixing it. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/188:449,test,test,449,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/188,1,['test'],['test']
Testability,"Child force id is given as a parameter of the function `applyDJT`, and instead of using it, the force vector id from `MechanicalParams` is used. I suggest to use the given parameter in this PR. Both force ids should be equal in most cases, so I don't expect breaking changes of behavior. I just find it weird to give a parameter and not using it in favor of a hard-coded id. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4798:914,test,test,914,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4798,2,['test'],['test']
Testability,Ci is running : wait for the tests.; If successful --> ready,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1269#issuecomment-607109002:29,test,tests,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1269#issuecomment-607109002,1,['test'],['tests']
Testability,"Clang still does not implement parallel execution (https://en.cppreference.com/w/cpp/compiler_support); It was guarded before with has_include<execution> (could be used with GCC and MSVC). BUT the new XCode seems to introduce the header without implementation 🤔.; (has_include<execution> is true, and the execution header exists). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1542:582,test,test,582,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1542,2,['test'],['test']
Testability,Clean Manifold Topologies plugin:; - Replace serr/sout by msg_; - Move all code inside cpp files; - Clean header inclusions; - Fix template declaration; - Clean warnings. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1156:422,test,test,422,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1156,2,['test'],['test']
Testability,Clean SofaBoundaryCondition during STC5; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/696:292,test,test,292,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/696,2,['test'],['test']
Testability,"Clean all cmake var/options/names to follow the new guidelines and the new SOFA-NG module names; (fulfill some TODO written long ago as well). + Fix #2972. Remark/question: should we keep compatibility with all the cmake variables/options and preproc defines?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2974:800,test,test,800,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2974,2,['test'],['test']
Testability,Clean code during STC5. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/699:275,test,test,275,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/699,2,['test'],['test']
Testability,Clean some warnings regarding:; - Double to float conversion. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1196:313,test,test,313,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1196,2,['test'],['test']
Testability,Clean the Messaging.h class by:. - removing commented/unused code; - removing the double parentheses used for the conditions of the **msg_*_when(cond)**. Compiles fine. This should also remove some warnings. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/587:459,test,test,459,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/587,2,['test'],['test']
Testability,"Clean the inclusion graph using the combination of three technique. 1) do not rely on properties within class as this imply to have the full class definition to compile the code. ; Eg: `Node::SPtr` is strictly equivalent to `sofa::core::sptr<Node>` but the latter does not always requires the full class definition. ; 2) replacement of `dynamiac_cast<>()` with an opaque function that does not need the complete inheritance graph to be visible. ; 3) move definition of fonction from the .h to the .cpp . By applygin these refactoring step there is more opportunity to use forward declaration. . To handle the forward declaration it was decided during the reviewing of PR #1688 to use a dedicated file for that: ; Eg:; ```console; - sofa/core/fwd.h; - sofa/defaulttype/fwd.h; - sofa/helper/fwd.h ; ```; I also put in these files dynamic_cast replacement eg:; ```cpp; Node* getNodeFromBase(Base*);; ```. And there is also there is the definition of NodeSPtr as context free replacement for Node::SPtr. . The PR also contains: #1727 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1730:1571,test,test,1571,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1730,2,['test'],['test']
Testability,"Clean the template instantiations. I take this opportunity to test a PR from the Regression repo: ; [ci-depends-on https://github.com/sofa-framework/Regression/pull/42]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3833:62,test,test,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3833,3,['test'],['test']
Testability,"Clean, Fix, Upgrade, Harder, Better, Stronger...; wip. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/876:306,test,test,306,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/876,2,['test'],['test']
Testability,"Cleaning and refactoring in BarycentricMapping (only for topology container). _description from comment below:_. Sure, sorry. So I wanted to optimize the initialization of BarycentricMapping, see issue #784 for clear description of the problem. . To avoid more duplication of code, and to allow the optimization to be available for a maximum of topology types, I needed the code to be refactored. . So:. 1. I created an abstract class (BarycentricMapperTopologyContainer) that gather the shared implementations of BarycentricMapperEdgeSetTopology, BarycentricMapperTriangleSetTopology, BarycentricMapperQuadSetTopology, BarycentricMapperTetrahedronSetTopology, and BarycentricMapperHexahedronSetTopology. 2. Enabeling to refactor the apply(), applyJ(), applyJT(), getJ(), draw() functions and more importantly the function I want to optimize, init(). The PR also include some cleaning, in particular the renaming of variables. That could indeed break not updated code. . What I couldn't do, is to also refactor the code of BarycentricMapperMeshTopology... ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/797:1307,test,test,1307,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/797,2,['test'],['test']
Testability,"Cleaning continues, some files includes MechanicalObject either for no reason at all, or could use MechanicalState (from SofaCore) instead.; ▶ No more need for SofaBaseMechanics by SofaBoundaryCondition. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2015:743,test,test,743,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2015,2,['test'],['test']
Testability,Cleaning of JointSpringFF according to SOFA conventions ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/850:309,test,test,309,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/850,2,['test'],['test']
Testability,"Cleaning!!!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2577:552,test,test,552,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2577,2,['test'],['test']
Testability,Cmake 3.13 does not seem to allow the inclusion of `CPackNSIS` anymore.; This add a simple check on cmake version to prevent cmake configure failure.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/897:402,test,test,402,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/897,2,['test'],['test']
Testability,"Code cleaning of multiple classes, by :; - removing commented code,; - replacing calls to serr/sout with msg_info()/msg_warning()/msg_error(); - moving code from headers to put them .inl or .cpp.; - updating to sofa coding style.; One commit for one or two clean classes.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1116:524,test,test,524,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1116,2,['test'],['test']
Testability,"Code duplicated from the base class constructor (```FixedConstraint```), therefore called twice. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2830:636,test,test,636,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2830,2,['test'],['test']
Testability,"Coming from [Mei remark on the forum](https://www.sofa-framework.org/community/forum/topic/image-viewer-in-image-plugin/). - Add the automatic loading of the image_gui library when the plugin image is loaded (if the library is well there); - Add formating in associated CMakeLists. With the correct loading of image_gui, now the ImagePlaneWidget will work fine when opening a ImageViewer component. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1015:650,test,test,650,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1015,2,['test'],['test']
Testability,"Compared to other FEM force fields, `HexahedronFEMForceField` did not have the `addKToMatrix` optimization for bloc matrices. This PR adds it. It also changes the template type of the Conjugate Gradient in the following scenes:. - examples/Demos/caduceus.scn; - examples/Components/forcefield/HexahedronFEMForceField.scn. It changes from a matrix-free CG to an assembled bloc matrix CG, but it is faster in the case of the 2 scenes. About +50 FPS in the GUI for both scenes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2240:1014,test,test,1014,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2240,2,['test'],['test']
Testability,"Compilation error fix. When CMake variables PLUGIN_SOFACUDA and SOFACUDA_DOUBLE are enabled, CudaStandardTetrahedralFEMForceField.cu try to be compiled through NVCC (Nvidia compiler). It was leading to a compile error because of 2 missing function prototypes in the .cu file. This commit fixes the issue. Compilation was tested on my side on Fedora 29 with CUDA Toolkit v10.1. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/991:321,test,tested,321,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/991,3,['test'],"['test', 'tested']"
Testability,Compilation has been fixed with master and the regression test has been added.; Only the PR on regression must be merged and then reference in regression submodule udpated. Let's get it merged tomorrow.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-805278512:58,test,test,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-805278512,1,['test'],['test']
Testability,"Compilation was failing on clang{12,13} since ; - https://github.com/sofa-framework/sofa/pull/4835. I noticed that the `.array()` method was returning a const ref.; so I tried to structure binding to a const ref (instead of a const value) and... it worked on clang12,13 🫨 (while crashing if using values). I guess there is some bug around with clang12,13 around for this case, as clang14+ is working fine (and other compilers too). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4899:971,test,test,971,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4899,2,['test'],['test']
Testability,"Compiled modules before:. - tinyxml; - Sofa.Type; - Sofa.Helper; - Sofa.DefaultType; - Sofa.Core; - Sofa.SimulationCore; - Sofa.BaseTopology; - Sofa.BaseVisual. Compiled modules after:. - Sofa.Type; - Sofa.Helper; - Sofa.DefaultType. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2318:773,test,test,773,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2318,2,['test'],['test']
Testability,"Compiling sofa with SOFA_FLOATING_POINT_TYPE=double (no float) leads to a series of compile errors in Mapping and MultiMapping. I believe the bug has been introduced in PR #738. The reason for this crash is that some Mappings double->float are necessary for some applications (usually for visual models, CUDA, etc.).; Thus ExtVecXfTypes are always compiled, even when #ifndef SOFA_FLOAT. This PR fixes the bug, but also raises an important underlying point:; Having ifndefs everywhere in the code is very intrusive, source of errors, and most importantly, prevents having a full code coverage in the CI in a single build. Floats are slower, and much less precise than Doubles. We do not support XBox / PS3 code, thus we have one less reason to keep this code smell in the core of sofa.; If the only reason we still need floats is for Cuda compatibility and other visual rendering stuff, shouldn't the conversions be done in those components / plugins, instead of having this FLOAT things affecting the whole codebase of SOFA?. I dream of a sofa without all these ifdefs lying around polluting the code.; @courtecuisse @fredroy , you worked the most on CUDA stuff and visual rendering respectively, do you have an opinion on the subject?; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/827:1489,test,test,1489,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/827,2,['test'],['test']
Testability,"Complete documentation here: https://notes.inria.fr/sP50g-5eT7-T3aEXXYcf4g (changes are possible). Random things to have a look:. - `addKToMatrix` has been replaced by `buildStiffnessMatrix`; - `addBToMatrix` has been replaced by `buildDampingMatrix`; - `addMToMatrix` has been replaced by `buildMassMatrix`; - `buildGeometricStiffnessMatrix` has been added to mappings and works similar to `buildStiffnessMatrix` and `buildDampingMatrix`.; - A new module has been introduced: `Sofa.Component.LinearSystem`; - The class `LinearSystem` and its base classes (`TypedMatrixLinearSystem` and `BaseMatrixLinearSystem`); - Changes in `MatrixLinearSolver`, and how it interacts with a LinearSystem; - The class `MappingGraph`; - The component `MatrixLinearSystem`; - The file `MatrixAccumulator.h`; - How the matrices are mapped in `MatrixMapping.h`; - The compatibility layer in `MatrixAPICompatibility.h`. [ci-depends-on https://github.com/sofa-framework/Regression/pull/44]; [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/343]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777:1581,test,test,1581,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777,2,['test'],['test']
Testability,"Complete https://github.com/sofa-framework/sofa/pull/3093 .; It parallelize the assembly of the compliance matrix in the same way of the previous PR.; I changed some misleading variable name and added comment for future maintenance. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3154:772,test,test,772,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3154,2,['test'],['test']
Testability,"CompressedRowSparseMatrix is emitting verbose information even if SPARSEMATRIX_VERBOSE is set to false.; The test is actually done with the definition of the preprocessor define, not its value itself.; This PR fixes it by testing its existence AND its value (true or false). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1715:109,test,test,109,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1715,4,['test'],"['test', 'testing']"
Testability,"Conflicts were solved, tests are OK, and it has been long enough this PR is opened;ready to merge",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1311061497:23,test,tests,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404#issuecomment-1311061497,1,['test'],['tests']
Testability,"Confusion with space and total size for VecTypes and RigidTypes, while trying to write generic code for both of them... Should fix #3246 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3249:678,test,test,678,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3249,2,['test'],['test']
Testability,Congrats @Changjing-Liu Thanks a lot for your PR!!!. [ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3164#issuecomment-1193704452:73,test,tests,73,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3164#issuecomment-1193704452,1,['test'],['tests']
Testability,Congratulation Bruno @bcarrez for the new log messages ! !,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289696125:42,log,log,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289696125,1,['log'],['log']
Testability,"ConstantSparsityPatternSystem relies on the assumption that the sparsity pattern of the mechanical matrix is constant. If the pattern is not constant, the component crashes.; This PR introduces a verification that the pattern follows the initial pattern. In case of a mismatch, an error is emitted and the insertion is skipped. This allows the simulation not to crash and inform the user. However, this behavior is available only if `checkIndices` is enabled. It is disabled by default because the check is time consuming, and the goal of this component is performance-oriented. To illustrate the new behavior, one can test the following scene:. ```xml; <Node name=""root"" dt=""0.02"" gravity=""0 -10 0"">; <Node name=""plugins"">; <RequiredPlugin name=""Sofa.Component.Constraint.Projective""/> <!-- Needed to use components [FixedProjectiveConstraint] -->; <RequiredPlugin name=""Sofa.Component.Engine.Select""/> <!-- Needed to use components [BoxROI] -->; <RequiredPlugin name=""Sofa.Component.LinearSolver.Direct""/> <!-- Needed to use components [EigenSimplicialLDLT] -->; <RequiredPlugin name=""Sofa.Component.LinearSystem""/> <!-- Needed to use components [ConstantSparsityPatternSystem] -->; <RequiredPlugin name=""Sofa.Component.Mass""/> <!-- Needed to use components [UniformMass] -->; <RequiredPlugin name=""Sofa.Component.MechanicalLoad""/> <!-- Needed to use components [PlaneForceField] -->; <RequiredPlugin name=""Sofa.Component.ODESolver.Backward""/> <!-- Needed to use components [EulerImplicitSolver] -->; <RequiredPlugin name=""Sofa.Component.SolidMechanics.FEM.Elastic""/> <!-- Needed to use components [HexahedronFEMForceField] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Grid""/> <!-- Needed to use components [RegularGridTopology] -->; <RequiredPlugin name=""Sofa.Component.Visual""/> <!-- Needed to use components [VisualStyle] -->; </Node>. <VisualStyle displayFlags=""showBeha",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4428:619,test,test,619,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4428,1,['test'],['test']
Testability,"ConstraintAL contains 3 visitors which seems to be duplicated with other in simulation::core and constraint.lagrangian.solver. - MechanicalGetConstraintResolutionVisitor; Almost similar class (with the same name) in Constraint.Lagrangian.Solver and AnimationLoop.; The one in AnimationLoop allows setting a custom offset with its ctor (whereas the one in C.L.S is 0) so I added the same feature with a default value.; Slightly breaking because `cparams` are named differently 😅. - MechanicalAccumulateConstraint2 -> MechanicalAccumulateMatrixDeriv; nice `2`at the end 😅; MechanicalAccumulateConstraint2 is less complete than the other one so there should be no compat problem. - MechanicalSetConstraint -> MechanicalAccumulateMatrixDeriv; MechanicalSetConstraint also set a constraintId (MechanicalAccumulateMatrixDeriv does not) but it seems that this id is actually never used in implemented constraints (m_cid). In any case I add the set in MechanicalAccumulateMatrixDeriv. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4715:1516,test,test,1516,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4715,2,['test'],['test']
Testability,"Contains PR #1705 . Wait for #1705 and #1697. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1706:585,test,test,585,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1706,2,['test'],['test']
Testability,"Context: If creating a Rigid from a stream (typically deserializing a Rigid):; - it checks if the rotation is normalized; - if the case, warns the user that it is not; - normalize it. Several problems:; - even if the serialized rigid is perfectly normalized, there will be an unnecessary check (if you have a lots of it and you read it at each time step, it can be bothersome) ; - the normalization of the Quaternion is set with a fixed bound; - the most painful: it will write a warning for EVERY rigid not normalized, every time... Proposed solution:; - only check/print if you are debugging. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1229:846,test,test,846,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1229,2,['test'],['test']
Testability,"Continuation of #4266 . As required by https://github.com/conda-forge/staged-recipes/pull/23085, we must avoid static libraries to comply conda-forge rules.; Tests with more recent versions of metis (such as one available on conda-forge) seems to introduce some bugs (@bakpaul @alxbilger Do you have some inputs to provide here ?).; For now, the solution we converged to is to dynamically link metis with Sofa. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4450:158,Test,Tests,158,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4450,3,"['Test', 'test']","['Tests', 'test']"
Testability,Continue to uniform index type by (trying to) remove warnings.; Follow-up of #1453 ; Use and abuse of auto keyword 🥰. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1504:369,test,test,369,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1504,2,['test'],['test']
Testability,"Continue with masses. ![image](https://user-images.githubusercontent.com/10572752/214549683-a2e64aa2-2b01-4333-b7e1-cbba9140385d.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3605:674,test,test,674,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3605,2,['test'],['test']
Testability,"Continuing #2150. BTDLinearsolver has some Matrix classes in its compilation files (namely BTDMatrix and BlocFullMatrix) and DiagonalMatrix had an other class as well (BlockDiagonalMatrix). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2334:729,test,test,729,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2334,2,['test'],['test']
Testability,"Continuing #2150. Implementation of BaseMatrix and BaseVector using Eigen library was contained in SofaEigen2Solver. Those EigenVector/EigenMatrix are almost only used for ad-hoc code in FEMs (getJs, geometricStiffness) related to Flexible or Compliant. I tried to make it as compatible as possible, so it should not be breaking. I have deleted also an accessor on a special ""Eigen-""MultiMatrixAccessor:; - it is not used; - it would have introduced a dependency on Sofa.Core... (not possible). Finally, I think this classes wont really be useful in the future, especially that BaseVector/BaseMatrix using Eigen are present in SofaCaribou (https://github.com/jnbrunet/caribou/blob/master/src/SofaCaribou/Algebra/EigenVector.h for example) and seems better overall. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2339:1304,test,test,1304,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2339,2,['test'],['test']
Testability,"Continuing task #2402 (towards the huge task to remove *GeometryAlgoritms). - add geometry functions (will be called for DiagonalMass to replace GeometryAlgoritms, see #2436 ); - create the unit test module Sofa.Geometry_test and add some tests; - create the unit test module Sofa.Topology_test and add some tests for the getClosestHexahedron() function. I tried to make functions as generic as possible, so it could be used with different container (std::array, vec... could be std::list as well...) but I needed some functions from SOFA for dot/cross because I was a bit lazy 😗. Actually I dont know if we should be as generic as possible. Let discuss about that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2434:195,test,test,195,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2434,6,['test'],"['test', 'tests']"
Testability,"Continuing task #2402 . ""Simple"" PR moving all code related to TopologyData/Handler from SofaBaseTopology to Sofa.Core, along the other core topology structure. A lot of modules wont need SofaBaseTopology anymore because it was including TopologyData.inl from it.... As usual, there is a compatibility layer which surprisingly works very well in this case (i did not touch any other file in other plugins/modules). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2423:954,test,test,954,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2423,2,['test'],['test']
Testability,"Continuing task #2402 . Some components were including SofaBaseTopology components for nothing.; Some other were using Container which could be easily changes for the abstract `BaseMeshTopology` ; this change has the nice side-effect to make components supporting other topologies other than *TopologyContainer. (needs #2434 for a function in edge). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2449:889,test,test,889,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2449,2,['test'],['test']
Testability,"Continuing task #2402. Contains #2434 . As the title says, this PR removes the dependency (useless IMO) to *GeometryAlgorithms,; If a user was not adding a geometryAlgorithms, it was not computing mass, which is weird to me.; In the end, we use the newly introduced functions from #2434 instead; This allow to reveal some inconsistencies:; - these 2 masses compute volume for 2d and area for 1d.....; - diffusion (from TetraFEMDiffusion) is really weird and is using a side-effect to compute effectively the diffusion (template on 1d but manages space in 3D thanks to the instanciation of the geometryalgo). This PR will break (almost intentionally) the Diffusion, thus forcing us to redesign this code to be more ""consistent"". ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2436:1267,test,test,1267,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2436,2,['test'],['test']
Testability,"Continuing task #2402. Contains #2449. As usual, remove usage of GeometryAlgorithms with static functions from Sofa.Geometry and Sofa.Topology (and dont rely on the scene). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2465:712,test,test,712,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2465,2,['test'],['test']
Testability,"Convert double to SReal in NewmarkImplicitSolver. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4341:589,test,test,589,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4341,2,['test'],['test']
Testability,"Copy-pasting too fast I presume. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2903:572,test,test,572,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2903,2,['test'],['test']
Testability,Corrected the CMakeLists because the build of the tests is not always…,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1091:50,test,tests,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1091,1,['test'],['tests']
Testability,"Correction of the import of the queue library so that it can work with python3. The import and use of the queue library has changed between python2 and python3.; I updated it to use it in python3. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2572:736,test,test,736,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2572,2,['test'],['test']
Testability,"Cosmetic cleaning: alphabetical order, remove superfluous RequiredPlugin ... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4707:616,test,test,616,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4707,2,['test'],['test']
Testability,Could not just reopen #1307 because of a force-push after closure 👎 . Issue #1306. - Modularize all SofaMisc*; - Clean using pragma once/nested namespace; - rename all macros/file (e.g SOFA_MISC_FEM_API into SOFA_SOFAMISCFEM_API ). Breaking for :; - code doing initMisc() ; - with scenes requiring components from it and missing the mandatory <RequiredPlugin />; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - builds with SUCCESS for all platforms on the CI.; - does not generate new warnings.; - does not generate new unit test failures.; - does not generate new scene test failures.; - does not break API compatibility.; - is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1520:602,test,test,602,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1520,2,['test'],['test']
Testability,"Could someone give me a hint on what is the problem... @guparan or @damienmarchal maybe .; Looking for ""error"" in the full log give me this:; `..\SofaKernel\framework\sofa\core\..\..\sofa/defaulttype/DataTypeInfo.h(757) : fatal error C1060: compiler is out of heap space; c1xx : fatal error C1063: INTERNAL COMPILER ERROR`. Not sure if this is really the error that breaks the compile and if it is related to my modifications or to the VM used for the build.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/164#issuecomment-284352946:123,log,log,123,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/164#issuecomment-284352946,1,['log'],['log']
Testability,Could someone test if the AdvancedTimer is still working correctly with the new nlohmann_json version?; @jnbrunet @fredroy @damienmarchal ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/719#issuecomment-405506066:14,test,test,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/719#issuecomment-405506066,1,['test'],['test']
Testability,Could someone test on windows / mac with an intel graphics? @guparan maybe?; I need to find out if I have to fix that as a cross-platform or linux-specific issue.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/238#issuecomment-346566462:14,test,test,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/238#issuecomment-346566462,1,['test'],['test']
Testability,Could you think about a pertinent unit test?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4875#issuecomment-2262415200:39,test,test,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4875#issuecomment-2262415200,1,['test'],['test']
Testability,Crash dump will now appear on Jenkins scene-test crash summary. TODO (after merge): change Jenkins detection regex to ; `([^:]*): (error:.*)(([\r\n].*?)*?)### END OF OUTPUT ###`. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/644:44,test,test,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/644,3,['test'],['test']
Testability,Create Issue to rethink the way it is done: maybe centralize the regression-tests files in Regression plugin. This would require multiple changes like being able to find the path of all plugins to find the scenes and the regression files when they are inside of the plugin instead of Regression. . --> https://github.com/sofa-framework/sofa/issues/4424,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4420#issuecomment-1884536809:76,test,tests,76,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4420#issuecomment-1884536809,1,['test'],['tests']
Testability,Create a Camera component so that it become possible to render a scene. The difference with InteractionCamera is that the Camera component is not having any interaction so you can implement; your own 'application specific behavior' by using an external Controller (eg: PythonScriptController). Changes:; - the BaseCamera now has a link to a BackgroundSetting so multiple camera can have multiple background. ; - the BaseCamera now implement a draw() method. If you don't want to see what is drawn...then; restrict the rendering of your scene graph to only call drawVisuals() which is what it is supposed to do :) ; - the Camera alias is not anymore creating an InteractionCamera but a Camera object. Update the caduceus example. NB: I know there is much more to refactor but I have not time for that. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/674:1054,test,test,1054,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/674,2,['test'],['test']
Testability,Create a Sofa.Testing package,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1827:14,Test,Testing,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1827,1,['Test'],['Testing']
Testability,Create a page about verification / validation / regression / unit tests,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4207:66,test,tests,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4207,1,['test'],['tests']
Testability,Create github-test-action for scene testing in the plugins,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4265:14,test,test-action,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4265,2,['test'],"['test-action', 'testing']"
Testability,Create proper stretch test,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4543:22,test,test,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4543,1,['test'],['test']
Testability,Create the delegate functions that were supposed to be implemented in #1167 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1185:329,test,test,329,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1185,2,['test'],['test']
Testability,Creating tests on Topological operations,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/43:9,test,tests,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/43,1,['test'],['tests']
Testability,"Current Headless Recorder does not generate files correctly; for that reason, media player can have trouble detecting the format of the file.; Vlc 3.0.2 cannot read the file, except if you specify manually that the file use h264 in advanced options. This PR solves this shortcomming, and also aims to separate this procedure from the rest of the headless recorder to improve readability. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/666:639,test,test,639,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/666,2,['test'],['test']
Testability,"Current implementation has weird behavior when more than one axis is locked. Current implementation may make the objects rotate 180° when they should not. Current PR aims to prevent this issue using swing-twist decomposition algorithm.; As a bonus, code is now shorter. Everything was done inside the class, but the swing twist decomposition could be move to the main quaternion class. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1119:637,test,test,637,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1119,2,['test'],['test']
Testability,"Currently There is two different class that seems to implement similar things.; BaseClass and ClassInfo. This PR is a WIP in which I will try to:; - merge BaseClass and ClassInfo. ; And use the same approach as for TypeInfoRegistry to hold a single version of a ClassInfo and being able to retrieve it in constant time. Compared to TypeInfoRegistry, where it was hard to locate a single point where to register a type, for ClassInfo this is much easier as there is a single registration point that is the registration of the object to the ObjectFactory. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1836:1095,test,test,1095,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1836,2,['test'],['test']
Testability,Currently being tested : https://ci.inria.fr/sofa-ci-dev/job/sofa-custom/8615/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4767#issuecomment-2151812116:16,test,tested,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4767#issuecomment-2151812116,1,['test'],['tested']
Testability,"Currently canCreate is used for several things, one of the most common use is to implement template type deduction. . On this PR we implement a mechanism that will allow to separate the type deduction to actual possibilities of creation of the component. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3938:796,test,test,796,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3938,2,['test'],['test']
Testability,"Currently config.h is a all-in-one configuration file that is generated by CMakeLists and included nearly everywhere. The problem is that it contains also very specific options that very few files are using. But, each time any of these specific option is changed sofa needs to be recompiled entirely. This PR is a implementing a more modular approach in which each .cpp that specifically requires a given define include a dedicated file.; Eg:; #include<config/build_option_opengl.h> // to do #if(SOFA_WITH_OPENGL==1); or; #include<config/build_option_experimental.h> // to do #if(SOFA_WITH_EXPERIMENTALFATURE==1); or; #include<config/sharedlibrary_defines.h>. It is still possible to use the old file but by being more specific we will reduce the amount of file to recompile when we will changed something. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/475:1058,test,test,1058,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/475,2,['test'],['test']
Testability,"Currently in Sofa the Link implementation is very hard to maintain because; in a single implementation based on type-traits we are trying to handle to object; of different nature that are BaseData and Base. Link between Base is used everywhere in Sofa but a Link between two data; is only to hold the parent of a Data. It is questionable if such complex; implementation for Link is needed for just this single use case ?. Not doing that have a lot of consequence:; - Data implementation is simpler (because it is no needed to have Class ); - Link implementation is much simpler (and Link is used everywhere); - The instanciation of Link is time consuming in the compilation process and; requieres a lot of #include<> making the dependency graph more dense and thus; slow to compile. So in this PR I introduce a new DataLink & AbstractDataLink that aims at replacing; SingleLink<BaseData*, BaseData*>. In this PR I also add PathResolver, as path link resolution is important an currently it is spread everywhere in the sofa codebase. The underlying idea; is to have all path related things in a single location so we can check there is no duplicated code. The implementation are provided with unittest. The PR does not touch other files.; A second PR will be in charge of refactoring Data.h. But to minimize deltas I prefer to have; this one merged first. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1485:1606,test,test,1606,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1485,2,['test'],['test']
Testability,Currently in Sofa the attribute m_componentstate is not a data field. By transformating it into a data field allows different components to track each-other state (and changes) through the data tracker's mechanisms. . The implementation is focus on minimize the amount of change and is not breaking. ; There is a basic test for the feature.; There is a non-breaking deprecation mechanism implemented to ease the renaming of m_componentstate to d_componentstate.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1168:319,test,test,319,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1168,3,['test'],['test']
Testability,Currently in Sofa there is no real dedicated toolbox for geometrical operation. . So I made this (very) drafted module with an emphasize on having a simple API instead of performances. Ideally it should use algorithm that are already implemented in Sofa otherwise it fallback to third party library or custom implementation. ; ; There is tests on the c++ side.; There is a python binding (made with cython) as an independent module (not using the SofaPython). ; There is tests for this python binding. ; The python part is documented with docstrings. . Feedback & Contribution welcome. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/747:338,test,tests,338,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/747,4,['test'],"['test', 'tests']"
Testability,"Currently in Sofa we aren't catching any exceptions. . The consequence is that every exception propagates to the top level exception handler halting the application. ; Un-handled exception are useful to detect bugs but this is a non-sense to use such top level handler to process possible application errors like failure to load a plugin or a scene. . A good approach should be that any exception that can be fixed without editting the source code (ie. but by editting the scene or changing some system configuration and so on) should ends with a gracefull error message indicating to the user how to fix the error cause. To implement this I suggest to:; - add a close to top-level try/catch block around simulations/plugin actions; - add a SofaSimulationException that has an error message, the component that emitted it and can have a backtrace as well as a top level reactions to do (eg: set componentstate to invalid and stop simulation). We should also use this SofaSimulationException at any place we are using msg_error(). ; (Actually it could even make sense to replace the msg_error macro by throwing the exception). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2344:1665,test,test,1665,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2344,2,['test'],['test']
Testability,"Currently it is still included in AdvancedTimer so this does not breaks too much external code. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1853:637,test,test,637,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1853,2,['test'],['test']
Testability,Currently only object are supported by this function which is not consistant; with the rest of Sofa. Eg of consequence you cannot make a PythonScriptDataEngine connecting; data field from nodes (as only object are possible). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/984:476,test,test,476,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/984,2,['test'],['test']
Testability,"Currently the NameDecoder is not using DataTypeInfo<>::name. Probably fix: https://github.com/sofa-framework/sofa/issues/3450. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3465:666,test,test,666,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3465,2,['test'],['test']
Testability,"Currently the StackTraces are printed in std::cerr directly from the dump method(). Instead of doing that a new method is added to return the StackTrace as a vector; of strings allowing anyone to retrieve a StackTrace at any point; (including associating one with thrown exception). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2341:822,test,test,822,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2341,2,['test'],['test']
Testability,"Currently the icons in the scene graph are not reflecting the real state of the corresponding component's message log because the icons are set at scene loading and not updated after. This rise consistency issues for dynamic scene which adds at run-time new messages to component's log (see the example below where the messages is emitted on key pressed. . This is a follow up of PR #2398 . The PR produce the expected behavior with this kind of scene; ```python; import Sofa. class MyC(Sofa.Core.Controller):; def __init__(self, *argv, **kwargs):; Sofa.Core.Controller.__init__(self, *argv, **kwargs); self.node = kwargs.get(""target""); ; def onKeypressedEvent(self, event):; Sofa.msg_info(self, ""Info message in the component""); Sofa.msg_error(self.node, ""Error message in the target's node""). def createScene(root):; root.addChild(""Child1""); root.addObject(MyC(name=""Dmaien"", target=root.Child1)); ```. NB: I have considered having a Data<queue<Message>> but given how is implemented Data I need to provide << and >> operator which does not have real sense in this scenario. ; ______________________________________________________; By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3027:114,log,log,114,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3027,4,"['log', 'test']","['log', 'test']"
Testability,"Currently there is different ways to send messages in Sofa. Each way having its own 'side effects' leading to a different results exposed to the users. . This issues was already partially addressed in Issue https://github.com/sofa-framework/sofa/issues/160 or PR https://github.com/sofa-framework/sofa/pull/106 and others.... . The general goal of this Issue is to finally have only one system all around sofa to increase both code consistency and user interface behavior. ; ; Things to do to make that happen: ; - [x] implementing a per component logging system on top of the msg_api to prove we can replace the existing error logging system. (Done in PR https://github.com/sofa-framework/sofa/pull/106). - [x] replace the existing logging of error it should contains:; - removing the filling of the messages in sout.; - removing the old string based buffer (API BREAK).; - removing all the uses of the old message buffers and replace them with the new one (API BREAK).; - updating the gui to use the new msghandler buffers. - [ ] update sofaQtQuick (but there is no API break). - [x] update runSofa to the buffer API break, at least make it compile/run. - [x] clean the way we handle the printLog (see Issue https://github.com/sofa-framework/sofa/issues/160); - remove/rename the printLog data and implement backward compatibility ; - a replacement solution has to be implement to control the printing.; - a replacement solution has to be implement to control the messages based on a per-component selection of the printed messages. - [ ] extending/unifying the sout/serr with more sdebug/swarning. This must be discussed seriously during a meeting because I currently made a lot of attempts to this but didn't managed to implement a working solution without the sever flawn sout/serr have. If you have ideas on that please make a branch with working proposal so that we have sounded discussion (see Issue https://github.com/sofa-framework/sofa/issues/160). - [x] implementing the improvement of the",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/179:548,log,logging,548,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/179,3,['log'],['logging']
Testability,Currently there is the SOFA_EXTERNAL_DIRECTORY to add out-of-tree; directory in the compilation process. But when this directory contains; plugins those one are not handled the same way as are the one in; application/plugin. To unify that I added a SOFA_EXTERNAL_PLUGIN option and; did minimal change to the 'sofa_add_generic' macro to detect and; handle out of tree directory. So if you want to add external plugin you can use SOFA_EXTERNAL_PLUGIN; instead of SOFA_EXTERNAL_DIRECTORY. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/530:737,test,test,737,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/530,2,['test'],['test']
Testability,"Currently when object are unable to be created there is no filename/line information on where the problem come from. . In this PR I implemented the missing <<operator in messaging.h to report those line number. ; Now you can write: ; ```cpp; msg_info() << SOFA_FILE_INFO_COPIED_FROM(""myPythonFile.py"", 4) << ""blah balh"" ; ```; To have the file name & line number associated in the message emitting information. If you don't the emitting information will be the source code file&line location. . If updated the xml load to take this feature into account. ; The python loader is updated in the PR #304 . ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/314:855,test,test,855,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/314,2,['test'],['test']
Testability,"Currently, if you build Sofa with FFMPEG support, linking SofaFramework to an external project will require to find the FFMPEG_exec target, which will not be found: the cmake script to find the FFMPEG executable isn't installed by the Sofa install process. This FFMPEG executable path is never used in header files, only in cpp, I don't see any reason to force external projects to find it. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1177:642,test,test,642,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1177,2,['test'],['test']
Testability,"Currently, passing a nullptr to setLinkedBase just does nothing.; With this PR it breaks the link, (as, IMHO, it should). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1479:373,test,test,373,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1479,2,['test'],['test']
Testability,"Currently, when running runSofa without using the -g option for specifying if we want the GUI or batch, SOFA picks the last used one. I would rather like it to be the GUI all the time, and if you want to run in batch, then you would have to specify it explicitly. The current behaviour is annoying when running SOFA in parallel for example with SOFA launcher, because it then saves the batch mode by default.; I am aware my fix is maybe not perfect, I want to start the debate!; Thank you!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2979:1030,test,test,1030,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2979,2,['test'],['test']
Testability,"Currently:; - there must be a single VisualLoop in the scene; - this single one must be at the root of the scene. ; - there is no way to specify or change what is the rendered node; ; This PR allows to:; - have multiple (possibly different) visual loop in the scene (by updating simulation::draw()). ; - let user select which node to render (by using a SingleLink instead of a c++ attribute to store the node).; ; This is useful as it allows to increase the separation of the different ""concerns"" of an object and it make explicit in the GUI the link between a node and the rendered. . Old scenes are still possible:; ```xml; <DefaultVisualManagerLoop""/>; <Node name=""modelling"">; <Node name=""Tripod"">; </Node>; </Node> ; ```. But now we can also do:; ```xml; <DefaultVisualManagerLoop targetNode=""@/modelling/Tripod""/>. <Node name=""modelling"">; <Node name=""Tripod"">; </Node>; <Node name=""Nothing-to-Display"">; </Node>; </Node> ; ```; Or even; ```xml; <Node name=""modelling"">; <Node name=""Tripod"">; </Node>; </Node>; ; <Node name=""Simulation"">; </Node>. <Node name=""Rendering"">; <DefaultVisualManagerLoop targetNode=""@/modelling/Tripod""/>; </Node> ; ```. Visual example:; ![screen](https://user-images.githubusercontent.com/12644882/146540665-19f952c3-4a9f-4add-af88-47ca9fe2c96b.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2549:1825,test,test,1825,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2549,2,['test'],['test']
Testability,Cython is a de-facto standard to make ease binding between C++ and python. I use it to make 'per plugin' binding and will probably submit some in future PR. ; To ease the writing of cmake of these binding it is nice to detect if cython is installed what this file is doing. . The file is taken from (all credit should go to them):; https://github.com/thewtex/cython-cmake-example. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/734:632,test,test,632,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/734,2,['test'],['test']
Testability,DDGNode::addOutput fire assert(false),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1502:24,assert,assert,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1502,1,['assert'],['assert']
Testability,"Damned, it seems there's some test failing with BilateralInteractionConstraint_test/0.checkVec3ConstrainedPositions",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459#issuecomment-365332892:30,test,test,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459#issuecomment-365332892,1,['test'],['test']
Testability,"Damnit, I'm very sorry. I wanted to checkout this PR to test it out, but made a mistake with GH cli (which I'm trying for the first time). For the next dev meeting (since I cannot be there), if you guys agree with this PR, we can let it merged. Or I can make a revert PR. Very sorry again @alxbilger !. Edit: I will still try it on my side and report back if I see any issue !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2208#issuecomment-870762880:56,test,test,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2208#issuecomment-870762880,1,['test'],['test']
Testability,"Dashboard is showing good progress, only one scene crash on ubuntu & centos in an easy to fix issue.; Still one unknown test-failure on centos (but it may be a configuration problem related to LANG).; One test failure on windows is still because this machine does not have libjpeg/libtiff installed (or we need a full build ?). Three are test problem. The big dark spot is now the 26 remaining crashes ? Can someone with MacOS investigate the issues please ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/548#issuecomment-357504599:120,test,test-failure,120,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/548#issuecomment-357504599,3,['test'],"['test', 'test-failure']"
Testability,"Dashboard said no ^^; At first sight: ParallelFor.h:59:47: error: too many arguments provided to function-like macro invocation; assert(!(_last < _first), ""for range size() error"");",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/902#issuecomment-456080548:129,assert,assert,129,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/902#issuecomment-456080548,1,['assert'],['assert']
Testability,"Data `d_useSymbolicDecomposition` becomes `d_usePrecomputedSymbolicDecomposition` for a better understanding from users. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2904:660,test,test,660,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2904,2,['test'],['test']
Testability,"Data:; ```; Data< sofa::helper::vector< Real > > d_vertexMass;; Data< sofa::helper::vector< Real > > d_edgeMass;; ...; , d_vertexMass( initData(&d_vertexMass, ""vertexMass"", ""Specify a vector giving the mass of each vertex. If unspecified or wrongly set, another mass information is used."") ); , d_edgeMass( initData(&d_edgeMass, ""edgeMass"", ""values of the particles masses on edges"") ); ```; and topological Data with mechanism to update each other then they are changed or topological changes occurs.; ```; /// Values of the particles masses stored on vertices; topology::PointData<helper::vector<MassType> > d_vertexMass;; /// Values of the particles masses stored on edges; topology::EdgeData<helper::vector<MassType> > d_edgeMass;; ...; , d_vertexMassInfo( initData(&d_vertexMassInfo, ""vertexMassInfo"", ""internal values of the particles masses on vertices, supporting topological changes"") ); , d_edgeMassInfo( initData(&d_edgeMassInfo, ""edgeMassInfo"", ""internal values of the particles masses on edges, supporting topological changes"") ); ```. No need to have 2 sets of Data, topological Data can be used directly as PointData and EdgeData inherite from Data and support topological changes. -> Remove the normal Data but keep the names vertexMass and edgeMass which are used in code and scenes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2192:1864,test,test,1864,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2192,2,['test'],['test']
Testability,"Dear @faichele ,. Following the SOFA dev meeting 25/01/2017.; Multi-threading plugin proposed by @faichele. Your new plugin implements a static scheduling for collision detection. The implementation does not require any change of the existing collision components of SOFA. The bounding volume hierarchy methods is parallelized. It should be easy to use. Compared to the approach used in the MultiThreading plugin using the ""work-stealing"" scheduling pattern (https://en.wikipedia.org/wiki/Work_stealing), Fabian's implementation is based on ""conventional"" work-sharing, with a ""round-robin"" assignment of collision pair checks per thread. One extension is the fact that worker threads are persistent: they do not terminate after processing all assigned tasks, and no new threads are spawned when new collision pair check tasks are added to the thread pool. Instead, worker threads enter a ""sleeping"" state to avoid using CPU cycles when no tasks are processed. This avoids unnecessary respawning of threads every 10 to 50 ms, since the collision detection is typically called very often and in quick succession. @faichele , you mentioned it will be released under open-source license and with standalone for beta testing. Tests on potential performance gains remain to do (number of per checks).; Do not hesitate to correct me. In the context of the recent coding sprint, some new feature around multithreading were added in a branch ( https://github.com/sofa-framework/sofa/tree/issofa_multithreading ), not merged yet. This should be discussed and merged at the upcoming STC. @JeremieA , would you agree to prepare a short illustration/explanation of the API changes of your multithreading feature branch?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24#issuecomment-275074830:1213,test,testing,1213,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24#issuecomment-275074830,2,"['Test', 'test']","['Tests', 'testing']"
Testability,"Dear SOFA community and @sofa-framework/reviewers,. As you know, one of our main objectives is currently to propose a major evolution of SOFA: this is the project ""SOFA-NG"", standing for Next Gen. ; Let us give you some insight about the final plan and the steps to reach these objectives. Any feedback is welcome. ## Objectives. The final objective of SOFA-NG is to refactorize the current (non-core) modules and components by moving them into plugins. It will permit to:; - compile and load only the necessary modules; - clean all dependencies in SOFA; - help focusing the work of validation/verification/doc/test on specific codes; - improve the packaging of codes; - ease understanding the API of SOFA for new users. ## Steps of implementation. Our concerns; - Focus on non-core components only; - Make the transition as smooth as possible; - Keep the history. Steps to follow; - Propose an architecture and a folder structure; - Decide a place for each component (incrementally); - Create the folder structure in SOFA plugins directory; - Pluginize one by one the components towards their new place. Note that this project; - will be documented, scripts will be provided to help the transition in plugins; - is compatible (can be run in parallel) with the deprecation task. ## Proposed structure. ~~https://annuel2.framapad.org/p/sofang-v0~~; EDIT: latest proposal: https://annuel2.framapad.org/p/sofang-v3. As you can see the structure is quite similar to the old namespace structure of SOFA. ; Feel free to edit/comment this pad or to propose your own version.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/543:611,test,test,611,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/543,1,['test'],['test']
Testability,"Debug compilation was failing due to the fact that the header is not supposed to know `vector_access_failure` , defined in the cpp file. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1937:676,test,test,676,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1937,2,['test'],['test']
Testability,Define and create the test scenes for elasticity,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/233:22,test,test,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/233,1,['test'],['test']
Testability,"Definitely @EulalieCoevoet , you can ignore it by adding a `.scene-tests` in the applications/plugins/ArticulatedSystemPlugin/examples/_ repository and define in it:. ```; ignore ""robotGUI.py""; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2804#issuecomment-1106242947:67,test,tests,67,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2804#issuecomment-1106242947,1,['test'],['tests']
Testability,"Definitively, @damienmarchal could you point out an example of component/class unit test well written. To have the best practice.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/701#issuecomment-400575865:84,test,test,84,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/701#issuecomment-400575865,1,['test'],['test']
Testability,Defrost Test week19,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/268:8,Test,Test,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/268,1,['Test'],['Test']
Testability,"Dependencies packages were updated, we are testing it with standard builds.; And then we will launch new checks on this PR",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/185#issuecomment-289724146:43,test,testing,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/185#issuecomment-289724146,1,['test'],['testing']
Testability,"Dependency on #760 . This PR mimics the behavior of the DataEngine, by binding the cleanDirty method in python, and not calling cleanDirty before calling update(); Furthermore, update() is not called from OnBeginAnimationStep events anymore, but only through the natural DDGNode update mechanism. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/751:548,test,test,548,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/751,2,['test'],['test']
Testability,Depends #814; This PR renames DataTrackerDDGNode's isDirty() method to hasChanged() to reduce confusion between hasChanged and BaseData::isDirty(). It depends on #814 because replacing update with doUpdate forces the replacement of calls to data.isDirty() with m_dataTracker.isDirty(data) which means some extra calls are added in #814. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/822:588,test,test,588,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/822,2,['test'],['test']
Testability,"Depends on #1226 . This PR provides a callback method in Base to easily connect DDGNodes (inputs & outputs) within a component, through the use of DataTrackerEngines. It is inspired by a POC from @damienmarchal in a branch we have in SofaDefrost/sofa.; The syntax to create a callback is the following:. ```cpp; addUpdateCallback(""dataTrackerEngineName"", {&inputs}, []()->ComponentState{; // Some code in a lambda setting the componentState by return value; }, {&outputs});; ```; This method will create a DataTrackerEngine in a map within Base, give it a name, set this as its owner, set the given list of inputs and outputs for the engine, and finally, use the given lambda as a delegate method for the update() function of the engine (delegate, because engine->updateAllInputsIfDirty() is called before the lambda, and engine->cleanDirty() is called after... just like a normal engine.). The test in SofaSimulationGraph_test/DDGLink_test.cpp has been updated to show how to use it in a simple class with 1 input / 1 output. Actually, the code doesn't work... I get an ugly exception when my engine tries to call the delegate lambda:; ```; unknown file: Failure; C++ exception with description ""bad_function_call"" thrown in the test body.; ```. No idea what this is, if you have suggestions, please don't hesitate to correct me or tell me what I did wrong... ;); Enjoy the WE =). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1227:895,test,test,895,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1227,4,['test'],['test']
Testability,"Depends on #3426 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3429:558,test,test,558,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3429,2,['test'],['test']
Testability,"Depends on #740 ; Part 2 of #629 This PR allows PSDEs to derive the type of their I/O datafields according the what they are linked to (position=""@../whatever""). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/742:413,test,test,413,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/742,2,['test'],['test']
Testability,"Depends on #740 and #742 ; Part 3 of #629 This PR allows you to create PSDE component in your scene the same way you do with Cpp engines, by calling createObject() and passing your Input/output datafields directly there. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/743:472,test,test,472,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/743,2,['test'],['test']
Testability,"Depends/include PR #2192 and PR #2191. [ci-depends-on https://github.com/sofa-framework/regression/pull/14]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2193:648,test,test,648,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2193,2,['test'],['test']
Testability,"Deprecation messages popping while compiling the deprecated thing is a bit annoying so this PR disables the warnings while building the deprecated stuff. ~~\+ remove (real) deprecation warnings about the usage of rebind~~. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3236:762,test,test,762,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3236,2,['test'],['test']
Testability,"Deprecation warnings were displayed at every `#include <sofa/defaulttype/VecTypes.h>`; They are now emitted only when using the deprecated types ExtVec*. @fredroy Is there a reason you did not use inherited structs in the first place?. Also, could someone explain why putting the `[[deprecated]]` attribute on a `using` alias does not emit a warning only when the alias is used?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1139:631,test,test,631,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1139,2,['test'],['test']
Testability,"Deprecation/Removal macros (for TData,Link, etc) wants an argument (message) but they are called a lot of times without any.; On Windows/MSVC2019, this generates **A LOT** of warnings (>40k halfway of a standard build). ```; warning C4003: not enough arguments for function-like macro invocation 'SOFA_ATTRIBUTE_DEPRECATED__CLASSNAME_INTROSPECTION'; ```; for example.; The dashboard does not take them into the global number of warnings, but still appears in the log file.; And it seems only triggered with MSVC compilers. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1876:463,log,log,463,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1876,3,"['log', 'test']","['log', 'test']"
Testability,"Description is in the code. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3584:567,test,test,567,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3584,2,['test'],['test']
Testability,"Detected by the CI sporadically.; The crash is triggered ""correctly"" when executing in Debug mode. The problem comes from the fact that the stored Jacobian matrix is not updated when the model (i.e mechanicalObject) is modified topologically.; There are some problems still with topological changes (#2242 ) so I opted for a check every time projectResponse() is called.; Not ideal so would need to be changed once topological changes mechanism is finished. Also create a updateJacobian() method (instead of reinit()). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2241:1058,test,test,1058,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2241,2,['test'],['test']
Testability,"Detected from the task ""remove warnings"" #2378 , and decided to put them into a different PR.; It will easier to read or analyze the code (and to revert in case of...). Each commit should fix one class. One of the worst problem (mainly located in topology classes ) is that ""Coord"" was always supposed to be a Vec3, but could be a Vec2 (from the instanciation with Vec2Types), thus doing a out-of-bound access. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2379:950,test,test,950,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2379,2,['test'],['test']
Testability,"Did not follow the move in examples/Component; - #3588 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3674:596,test,test,596,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3674,2,['test'],['test']
Testability,"Did not have time to start this yet. 😢 ; As discussed last wednesday, the idea would be to simply `cat` the output of crashed tests during the `print-summary()` phases (for unit tests and scene tests). So only scripts stuff.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/191#issuecomment-283715155:126,test,tests,126,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/191#issuecomment-283715155,3,['test'],['tests']
Testability,Did you have some time to test my patch @epernod ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/958#issuecomment-476541612:26,test,test,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/958#issuecomment-476541612,1,['test'],['test']
Testability,Did you test a scene with a loader below (in the scene file order) a MechanicalObject or Topology ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2094#issuecomment-842953279:8,test,test,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2094#issuecomment-842953279,1,['test'],['test']
Testability,Do python tests work in similar way? Ok.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/400#issuecomment-330598775:10,test,tests,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/400#issuecomment-330598775,1,['test'],['tests']
Testability,Do someone knows why do tests are failing ? (In QuaterTest),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/399#issuecomment-343414028:24,test,tests,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/399#issuecomment-343414028,1,['test'],['tests']
Testability,"Do we allows data field's name with spaces ? . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5002:586,test,test,586,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5002,2,['test'],['test']
Testability,"Do we want to create a new PR to fix some tests, or should we start fixing them directly in this PR?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288973746:42,test,tests,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288973746,1,['test'],['tests']
Testability,Does https://github.com/sofa-framework/sofa/pull/3832 fix the failing unit test?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1532915092:75,test,test,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1532915092,1,['test'],['test']
Testability,Does this test still fail? I have tested and cannot reproduce it. And I did not do anything to fix it.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4323#issuecomment-1860172648:10,test,test,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4323#issuecomment-1860172648,2,['test'],"['test', 'tested']"
Testability,"Don't mind me, I'm testing CI stuff...; [ci-build][generate-binaries]",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2740#issuecomment-1059287331:19,test,testing,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2740#issuecomment-1059287331,1,['test'],['testing']
Testability,Done and tested in #857,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/829#issuecomment-445824183:9,test,tested,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/829#issuecomment-445824183,1,['test'],['tested']
Testability,Done in :; - SofaBaseTopology; - SofaCore; - CGALPlugin. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1376:308,test,test,308,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1376,2,['test'],['test']
Testability,Done! [ci-build][with-scene-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/540#issuecomment-357289750:28,test,tests,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/540#issuecomment-357289750,1,['test'],['tests']
Testability,"Done, let's [ci-build][with-all-tests] again :+1:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1186#issuecomment-542682672:32,test,tests,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1186#issuecomment-542682672,1,['test'],['tests']
Testability,"Downcasting from a base class to a child would be much better handled with an explicit dynamic_cast or a static_cast (or a q_cast as pointed by @untereiner) than with an implicit C-cast.; ____________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1816:725,test,test,725,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1816,2,['test'],['test']
Testability,"Due to SofaGeneral' s modularization.; Stumbled on the issue while doing PR #1646... [SofaOpenCL is not enabled on the CI]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1647:663,test,test,663,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1647,2,['test'],['test']
Testability,"Due to multiple final definition error, the plugin was not compiling anymore. Virtual inheriting was necessary.; Fix warnings and templating due to last VecTypes change. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1019:421,test,test,421,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1019,2,['test'],['test']
Testability,"Due to the static nature of the ObjectFactory, the alias survived the destruction of a MakeDataAliasComponent. It is a problem if the program continues and still uses the ObjectFactory. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2832:725,test,test,725,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2832,2,['test'],['test']
Testability,"During a discussion with @olivier-goury, it appeared that the sofa-launcher script was needed to use the MOR plugin. So when using this plugin, the users needed to download the sofa sources to get access to it because it was not shipped in the binaries. . This pr adds this folder to the install/releases. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4245:845,test,test,845,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4245,2,['test'],['test']
Testability,"During my Way of the Cross of fusing StiffSpring and its parent, I saw that the topological change of removing points didn't work as planned for topologySubsetIndices when there is multiple occurrence of the same element in the data. . I've fixed that and added tests. . One question is remaining though : here I kept the original mechanism using a swap of the deleted element and the last one. This is efficient in term of memory but it has the side effect of changing the indices order in the data. ; --> My question is, *is that what we want ?* Do we prefer memory/time efficiency over order coherency for this data ? Is it logical to get a random order of the vector out of a simple topological change ? This answer will change a bit the way I'll finish the refactoring in https://github.com/sofa-framework/sofa/pull/4649 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4738:262,test,tests,262,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4738,4,"['log', 'test']","['logical', 'test', 'tests']"
Testability,"During my peregrinations .. significant changes for the SOFA beauty :tulip: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3975:617,test,test,617,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3975,2,['test'],['test']
Testability,"During remove process inside `TopologySubsetData` the current Data was being modified but the method `TopologySubsetIndices::indexOfElement` was also called.; This method was using: ; `const container_type& data = this->getValue();` which call updateIfDirty messing WriteAccessor in the caller method.; Fix it by using directly: `const container_type& data = m_value.getValue();`. The others modifications are just better logs for debug. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3330:422,log,logs,422,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3330,3,"['log', 'test']","['logs', 'test']"
Testability,During the meeting it was considered as needed to have a scene test to validate the mis-behavior and the fix. @ScheiklP do you have something (otherwise @epernod will have to do one).,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3268#issuecomment-1253437880:63,test,test,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3268#issuecomment-1253437880,1,['test'],['test']
Testability,"Dynamic data field added from the mechanical object are not using the ""addData"" method. The drawback is that they are not registered in the ""alias"" map which is used in getData/findData to query the data by name. . In addition the name added there are using a weird naming schema by post-fixing the type of the vector so to the name ""constraint_dx"" is associated the ""constraint_dx(V_DERIV)"" datafield which is and conflicting with python syntax. . I may be an option to fix the bug and deprecate that behavior... but it may be breaking (if two data have conflicting base names that was not conflicting before due to the postfixing of the typename).; ; This should solve the issue reported in discussion #3779. _____________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3783:1249,test,test,1249,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3783,2,['test'],['test']
Testability,"Each readXX method exists in two implementation. One that takes State* while the other is taking a SingleLink<State>. Given that from a SingleLink<State> one can get the corresponding State* using the get() method it is questionable why to maintain two set of methods for the same service. To mimimize the surface of the API I removed the link based version and update the code base accordingly. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3304:935,test,test,935,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3304,2,['test'],['test']
Testability,"Easy quicky. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1614:552,test,test,552,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1614,2,['test'],['test']
Testability,"Edge2QuadTopologicalMapping needs QuadSet container and modifier, and was merely just searching into its node for them, with no check whatsoever. So if one of the two was not present, a crash happened without any warning/error... So in this PR, links are added (so no need to search the context every time), warn the user if not set and let the component to Invalid. \+ some cleanups for good measure. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4361:941,test,test,941,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4361,2,['test'],['test']
Testability,"Embedded external libs (DiffLib, Json and STB) rely on cmake variables (resp. DIFFLIB_ROOT, JSON_ROOT and STB_ROOT) as HINTS / PATHS for find_path() in their respectives cmake find modules (FindDiffLib.cmake, FindJson.cmake and FindSTB.cmake). ; If CMAKE_FIND_ROOT_PATH is set (typically the case when cross-compiling and for my concerns when building a Conda package for Sofa), default behavior is to prepend all contained paths to the search performed by the find_path() calls. But as the *_ROOT variables are set with absolute paths, the search for these embedded libs will typically fail. ; This PR disables the use of CMAKE_FIND_ROOT_PATH for these libs. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3870:1199,test,test,1199,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3870,2,['test'],['test']
Testability,Enforcing python module reload (to use their eventual modifications). Note it could easily be added manually to the scene we are working on rather than doing it automatically at each scene loading. Based on @damienmarchal code!!!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old.; - [x] #204 is merged. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/202:456,test,test,456,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/202,1,['test'],['test']
Testability,"Ensure data_->getHelp() is not null.; If it's null an empty string will be used, instead of make runSofa crash. EDIT : fixes #381 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/382:383,test,test,383,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/382,2,['test'],['test']
Testability,"Entering into init() is only allowed if the component is in a non ready state. ; Implement basic checking on two problematic component that emits warning/error messages when emitted twice. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3054:728,test,test,728,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3054,2,['test'],['test']
Testability,Error at component creation not reported in the log,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/378:48,log,log,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/378,1,['log'],['log']
Testability,"Error due to passing const & to temporary vector created inside the method. Use ref to static vector instead. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2459:649,test,test,649,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2459,2,['test'],['test']
Testability,"Error message was already fired if mesh file is not found. This PR just avoid the crash at init.; Only add some check in the finest level and set it to invalid if topology is not loaded.; Then propagate the invalid status to the higher level. fix #4162 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4164:794,test,test,794,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4164,2,['test'],['test']
Testability,"Error message when the creation of an object fails are difficult to read and it isn't always obvious where the error is. With this PR, the message is a little bit more clear. Now we only need to add error message inside the components `canCreate` methods (see the changes I made in the `ForceField` class in this PR). Before:; ![image](https://user-images.githubusercontent.com/6951981/75893831-a9015000-5e33-11ea-8871-ae414f1f8208.png). After:; ![image](https://user-images.githubusercontent.com/6951981/75893859-b0285e00-5e33-11ea-8318-12c484a4852a.png). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1266:808,test,test,808,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1266,2,['test'],['test']
Testability,"Error of one test involving topological change : TopologicalChangeProcessor_test.Incise; ```; [ RUN ] TopologicalChangeProcessor_test.Incise; [DEPRECATED] [Sofa_test] Sofa_test & BaseSofa_test are now deprecated classes. To fix this message you should replace their usage by BaseTest, NumericTest or BaseSimulationTest to implement your tests; /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/PR-1150/mac_clang-3.5_options_release/src/modules/SofaMiscTopology/SofaMiscTopology_test/scenes/IncisionTrianglesProcess.scn; [WARNING] [DiagonalMass(default5)] Negative value of vertexMass vector: vertexMass[357] = -0.138459; [ERROR] [DiagonalMass(default5)] doUpdateInternal: incorrect update from vertexMass; ```. maybe nodes/elements which are removed twice ... @epernod",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1150#issuecomment-534008149:13,test,test,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1150#issuecomment-534008149,2,['test'],"['test', 'tests']"
Testability,Error on compilation: ; - (WIN) error C3861: 'not': identifier not found; - (MAC) unexpected crash of Compliant_test. [ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/990#issuecomment-484005693:138,test,tests,138,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/990#issuecomment-484005693,1,['test'],['tests']
Testability,"Error where displayed when using generated binaries on another computer. I'm not sure why this didn't happend when it was launched on the computer that built the binaries... . The path comparison didn't work when they weren't in a canonical form. This method only appeared in c++17, but if I am right we only support the c++ version of the two last LTS, 22.04 distributing gcc11 which provides a full support of c++17. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4754:960,test,test,960,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4754,2,['test'],['test']
Testability,"Especially relevant for clang compilers. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1630:580,test,test,580,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1630,2,['test'],['test']
Testability,"Etienne, if the test succeeds on your PC please fix your branch so that the test succeeds on the dashboard also. Otherwise, this pull request could not be accepted.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/72#issuecomment-265968279:16,test,test,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/72#issuecomment-265968279,2,['test'],['test']
Testability,"Even if it's not a good practice, it is possible to call `BaseObject::init()` several times.; In most cases, `DataEngine::init()` was the place where input and output Data were defined. Therefore, input and output could be defined several times, but it is not advisable.; This PR moves the input/output definition from the `init()` method to the constructor. Therefore, `init()` could be called multiple times safely (regarding only the input/output). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2825:991,test,test,991,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2825,2,['test'],['test']
Testability,"Even if this pattern is a code smell, this call was missing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4432:600,test,test,600,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4432,2,['test'],['test']
Testability,"Events were propagated to objects through a visitor, and applied on the list of objects contained in each Node. However, if an object is a child of another, it is not in the list of the Node. Therefore, the event is not propagated to this object. The event is also propagated to children in this PR. ; I also added a security in case the object appears multiple times in the graph.; Finally, I make a copy of the list before processing the list, so that the event can modify the graph during the iterations. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2348:1047,test,test,1047,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2348,2,['test'],['test']
Testability,Every plugin/module in SOFA should handle its dependencies and errors itself. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/608:329,test,test,329,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/608,2,['test'],['test']
Testability,"Everything depending on Metis is now in moved in https://github.com/sofa-framework/Sofa.Metis. [ci-depends-on https://github.com/sofa-framework/CSparseSolvers/pull/3]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4588:707,test,test,707,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4588,2,['test'],['test']
Testability,"Everything in the title : data.setValue(XXX) does not take params as parameter anymore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1869:627,test,test,627,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1869,2,['test'],['test']
Testability,Everything is in the name.; I checked compilation on Linux. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1427:311,test,test,311,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1427,2,['test'],['test']
Testability,Everything is in the title !; Towards a really clean and green dashboard !. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/584:327,test,test,327,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/584,2,['test'],['test']
Testability,"Everything is in the title!. Now we can go on holiday!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1976:595,test,test,595,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1976,2,['test'],['test']
Testability,"Everything is in the title.; Also update SOFA version in CMake to `18.06.dev`. From source dir: `./scripts/licenseUpdater/licenseUpdater.sh . auto 2018 ""development version""`. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/585:427,test,test,427,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/585,2,['test'],['test']
Testability,Everything is is in the title. The test was wrong. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/405:35,test,test,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/405,3,['test'],['test']
Testability,Everything is the title; and replace it with AdvancedTimer! Cheers!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1267:320,test,test,320,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1267,2,['test'],['test']
Testability,Everything seems OK; ```; ciosx:build ci$ time ./bin/MultiThreading_test; [INFO] [PluginManager] Loaded plugin: /Volumes/Jenkins/workspace/sofa-framework/PR-727/mac_clang-3.5_options_release/build/lib/libSofaMiscCollision.dylib; [INFO] [PluginManager] Loaded plugin: /Volumes/Jenkins/workspace/sofa-framework/PR-727/mac_clang-3.5_options_release/build/lib/libSofaAllCommonComponents.dylib; [INFO] [PluginManager] Loaded plugin: /Volumes/Jenkins/workspace/sofa-framework/PR-727/mac_clang-3.5_options_release/build/lib/libSceneCreator.dylib; [==========] Running 4 tests from 1 test case.; [----------] Global test environment set-up.; [----------] 4 tests from TaskSchedulerTests; [ RUN ] TaskSchedulerTests.FibonacciSingle; [ OK ] TaskSchedulerTests.FibonacciSingle (15 ms); [ RUN ] TaskSchedulerTests.FibonacciMulti; [ OK ] TaskSchedulerTests.FibonacciMulti (20 ms); [ RUN ] TaskSchedulerTests.IntSumSingle; [ OK ] TaskSchedulerTests.IntSumSingle (47 ms); [ RUN ] TaskSchedulerTests.IntSumMulti; [ OK ] TaskSchedulerTests.IntSumMulti (68 ms); [----------] 4 tests from TaskSchedulerTests (150 ms total). [----------] Global test environment tear-down; [==========] 4 tests from 1 test case ran. (150 ms total); [ PASSED ] 4 tests. real 0m3.061s; user 0m0.551s; sys 0m0.159s; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/727#issuecomment-408800487:563,test,tests,563,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/727#issuecomment-408800487,9,['test'],"['test', 'tests']"
Testability,"Example scenario [scene.txt](https://github.com/sofa-framework/sofa/files/2894540/scene.txt). Result is not physically plausible. Points of junction seem to be “heavier” than the others. They then gain speed, and the whole thing turn into a windmill. No crash.; You can compare the results using the commented section in the scenario of the initial post (section # This does not work / # Works). Log does not provide any useful information other than INFO messages (loaded plugins, etc). Problem exist both on master and 0057a0cfd3d3fb6b9b3cdb00ca22eae4c17ae384 (So before latest refactor of AttachConstraint).; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/940:396,Log,Log,396,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/940,1,['Log'],['Log']
Testability,"Example scene files are in ""scenes"" directory and not in ""examples"" directory,; as expected by CMake install command. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/299:369,test,test,369,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/299,2,['test'],['test']
Testability,"Expanding Node (with the context menu) was leading to a stack overflow.; This PR corrects it. Fix #2057 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2069:645,test,test,645,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2069,2,['test'],['test']
Testability,"Explicit and implicit conversion to scalar are introduced for matrices 1x1. Unit tests are added. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3498:81,test,tests,81,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3498,3,['test'],"['test', 'tests']"
Testability,"Explicit instanciation of FullMatrix and FullVector for float, double and bool; Move code definition from header (.h) to translation unit (.cpp or .inl).; Forward declare Mat<> in sofa/type/fwd.h; Replace AClass::Index with the generic sofa::Index; . If you were using AClass::Index, use sofa::Index instead; If you do your own template instanciation don't forget to include the corresponding .inl file instead of the .h. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1792:961,test,test,961,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1792,2,['test'],['test']
Testability,"Explicit instanciation of `list<const sofa::core::topology::TopologyChange*>;` was moved to _TopologyChange_ files from _TopologyHandler_ in #1912; But it seems it was (wrongfully) introduced again in _TopologyHandler_ in #1898 (I suppose from a merge). This PR just remove the duplicated explicit instanciation. NB: Seems weird to me that the CI does not say anything? (maybe a compiler option avoids this); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1981:948,test,test,948,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1981,2,['test'],['test']
Testability,"Explicit instantiation of some common template for `CompressedRowSparseMatrix`.; This is to force the template specialization of some functions for specific templates (function `add` and `filterValues`). Before, template was specialized, but not in the right way. The specialization was not taken into account.; Also, `filterValues` has been factorized (1 function instead of 4 identical functions). Now, `add` uses the correct specialization when it is used in a force field (badly introduced in #2281). It comes with the expected speed up. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2306:1081,test,test,1081,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2306,2,['test'],['test']
Testability,ExplicitConversion<sofa::type::vector<sofa::type::Vec3>>/1000000 6556092 ns 6666667 ns 75; BM_Data_ReadAccessor_StarOperatorConversion<int> 2.61 ns 2.62 ns 280000000; BM_Data_ReadAccessor_StarOperatorConversion<sofa::type::vector<int>>/10000 2.59 ns 2.55 ns 263529412; BM_Data_ReadAccessor_StarOperatorConversion<sofa::type::vector<int>>/100000 2.58 ns 2.55 ns 263529412; BM_Data_ReadAccessor_StarOperatorConversion<sofa::type::vector<int>>/1000000 2.60 ns 2.61 ns 263529412; BM_Data_ReadAccessor_StarOperatorConversion<sofa::type::vector<sofa::type::Vec3>>/10000 2.80 ns 2.83 ns 248888889; BM_Data_ReadAccessor_StarOperatorConversion<sofa::type::vector<sofa::type::Vec3>>/100000 2.76 ns 2.76 ns 248888889; BM_Data_ReadAccessor_StarOperatorConversion<sofa::type::vector<sofa::type::Vec3>>/1000000 2.80 ns 2.76 ns 248888889; ```. After:. ```; ------------------------------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------------------------------------------------------------; BM_Data_GetValue<int> 2.26 ns 2.26 ns 248888889; BM_Data_GetValue<sofa::type::vector<int>>/10000 2.13 ns 2.15 ns 320000000; BM_Data_GetValue<sofa::type::vector<int>>/100000 2.14 ns 2.14 ns 298666667; BM_Data_GetValue<sofa::type::vector<int>>/1000000 2.14 ns 2.15 ns 320000000; BM_Data_GetValue<sofa::type::vector<sofa::type::Vec3>>/10000 2.00 ns 2.01 ns 373333333; BM_Data_GetValue<sofa::type::vector<sofa::type::Vec3>>/100000 1.94 ns 1.90 ns 344615385; BM_Data_GetValue<sofa::type::vector<sofa::type::Vec3>>/1000000 2.01 ns 2.01 ns 373333333; BM_Data_ReadAccessor_ImplicitConversion<int> 2.88 ns 2.85 ns 235789474; BM_Data_ReadAccessor_ImplicitConversion<sofa::type::vector<int>>/10000 2.81 ns 2.83 ns 248888889; BM_Data_ReadAccessor_ImplicitConversion<sofa::type::vector<int>>/100000 3.02 ns 3.01 ns 248888889; BM_Data_ReadAccessor_ImplicitConversion<sofa::t,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2583:3213,Benchmark,Benchmark,3213,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2583,1,['Benchmark'],['Benchmark']
Testability,"Externalize the plugin SofaSphFluid and add the fetching mechanism. This aims at disabling the regression tests when it is not built (e.g. for default configurations on the CI). I've externalized the plugin here: https://github.com/sofa-framework/SofaSphFluid and kept the history of changes. [ci-depends-on https://github.com/sofa-framework/Regression/pull/61]; [ci-depends-on https://github.com/sofa-framework/ci/pull/46]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4526:106,test,tests,106,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4526,3,['test'],"['test', 'tests']"
Testability,"Extract the LMConstraint-related codes from SOFA and store it into a plugin. Fix #976. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1659:626,test,test,626,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1659,2,['test'],['test']
Testability,"ExtrudeQuadsAndGenerateHexas does exactly what the name says. ; The point order used when generating the hexas was causing different issues:; - mapping fallure ; - inverted forces (e.g. gravity and mouse spring). This PR allows to change the point order and fixes the issues.; The PR also adds two examples, one for Edge2QuadTopologyMapping, and one for ExtrudeQuadsAndGenerateHexas. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1673:923,test,test,923,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1673,2,['test'],['test']
Testability,"FA_study/SOFA_v23.06.00_MacOS; --- PYTHONPATH ---; /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages:/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.12.01_MacOS/plugins/SofaPython3/lib/python3/site-packages:/path/to/SofaPython3/lib/python3/site-packages:; --- sys.path ---; ['', '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages', '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.12.01_MacOS/plugins/SofaPython3/lib/python3/site-packages', '/path/to/SofaPython3/lib/python3/site-packages', '/opt/anaconda3/envs/sofarl/lib/python38.zip', '/opt/anaconda3/envs/sofarl/lib/python3.8', '/opt/anaconda3/envs/sofarl/lib/python3.8/lib-dynload', '/opt/anaconda3/envs/sofarl/lib/python3.8/site-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. (sofarl) bemore@BeMores-MacBook-Pro site-packages % python ; Python 3.8.19 (default, Mar 20 2024, 15:27:52) ; [Clang 14.0.6 ] :: Anaconda, Inc. on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import Sofa; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS; ---------------------------------------; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/__init__.py"", line 140, in <module>; import Sofa.Helper; ImportError: dlopen(/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so, 0x0002): ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4690:4835,Log,Logs,4835,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4690,1,['Log'],['Logs']
Testability,FILE should stay a C keyword for managing FILE. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1465:299,test,test,299,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1465,2,['test'],['test']
Testability,FIX allows to extend VTKExporter in a plugin (for quadratic meshes for example). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/309:332,test,test,332,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/309,2,['test'],['test']
Testability,FIX install path for headers in `unsupported/Eigen`. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1240:304,test,test,304,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1240,2,['test'],['test']
Testability,FIX issue #757 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/813:268,test,test,268,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/813,2,['test'],['test']
Testability,"FIX qt target handling. ; The QT_TARGETS variable used to store qt targets that the project depends on, was overridden by the libQGLViewer CMakeLists. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4354:692,test,test,692,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4354,2,['test'],['test']
Testability,FIX scene: update GenerateGrid usage to match current component interface. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/303:326,test,test,326,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/303,2,['test'],['test']
Testability,FIX some scene files using the mass and having issues with mass datanames (_totalmass_ instead of _totalMass_); FIX initialization in UniformMass.cpp due to wrong default filename in Rigid case. Fix #724. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/779:456,test,test,456,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/779,2,['test'],['test']
Testability,"FIX this Regression_test error: ""Condition IsValidParamName(param_name) failed. Parameterized test name 'EulerExplicitSolver-diagonal' is invalid"". ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1881:94,test,test,94,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1881,3,['test'],['test']
Testability,"FIX: Name of a parameter (allowing to select incremental potential energy): before, the name contained spaces, was replaced by useIncrementalPotentialEnergy. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/624:409,test,test,409,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/624,2,['test'],['test']
Testability,"FIX: a bug which appeared when the simulation is restarted without restarting SOFA. There is a map-vector (mapOrient) which was not cleared properly (unlike his friend ""map"") which was. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/710:439,test,test,439,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/710,2,['test'],['test']
Testability,FO] [SofaPython3] Shared library name is 'libpython3.8m.so'; [ERROR] [PythonTestExtractor] File skipped: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Components/Components.py ; ModuleNotFoundError: No module named 'Sofa.Components'. At:; Components.py(4): <module>; <frozen importlib._bootstrap>(219): _call_with_frames_removed; <frozen importlib._bootstrap_external>(783): exec_module; <frozen importlib._bootstrap>(686): _load_unlocked; <frozen importlib._bootstrap>(702): _load; /opt/rh/rh-python38/root/usr/lib64/python3.8/imp.py(171): load_source; /opt/rh/rh-python38/root/usr/lib64/python3.8/imp.py(234): load_module; <string>(3): <module>. [ERROR] [PythonTestExtractor] File skipped: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Core/MyRestShapeForceField.py ; No test suite found. Make sure there is at least one class in the script that inherits from TestCase.; [INFO] [PythonTestExtractor] File 'Base.py' loaded with 10 unit tests.; [INFO] [PythonTestExtractor] File 'PythonRestShapeForceField.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'BaseData.py' loaded with 29 unit tests.; [INFO] [PythonTestExtractor] File 'DataEngine.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'BaseLink.py' loaded with 11 unit tests.; [INFO] [PythonTestExtractor] File 'BaseObject.py' loaded with 12 unit tests.; [INFO] [PythonTestExtractor] File 'Controller.py' loaded with 7 unit tests.; [INFO] [PythonTestExtractor] File 'ForceField.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'FileRepository.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Message.py' loaded with 2 unit tests.; [INFO] [PythonTestExtractor] File 'Node.py' loaded with 26 unit tests.; [INFO] [PythonTestExtractor] File 'Simulation.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'RGBAColor.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Vec3.py' loaded,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796:3014,test,tests,3014,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796,1,['test'],['tests']
Testability,FSEvents; 0x7fff27414000 - 0x7fff27438fff com.apple.coreservices.SharedFileList (144 - 144) <C861FAD6-D3A5-302C-88AE-B2813F7201A7> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList; 0x7fff27439000 - 0x7fff2743bfff libapp_launch_measurement.dylib (14.1) <2BBB708C-4D91-364E-ABD0-39BF198688A6> /usr/lib/libapp_launch_measurement.dylib; 0x7fff2743c000 - 0x7fff27484fff com.apple.CoreAutoLayout (1.0 - 21.10.1) <7A2E42E6-3AF2-3ECB-8A16-5C4AC41206EE> /System/Library/PrivateFrameworks/CoreAutoLayout.framework/Versions/A/CoreAutoLayout; 0x7fff27485000 - 0x7fff27567fff libxml2.2.dylib (34.9) <E0BF29C7-869B-3DD5-82AE-F36E6398091A> /usr/lib/libxml2.2.dylib; 0x7fff27568000 - 0x7fff275b4fff com.apple.CoreVideo (1.8 - 408.4) <50857F8D-C7CC-3609-B0DB-FC3C7382243B> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo; 0x7fff275b5000 - 0x7fff275b7fff com.apple.loginsupport (1.0 - 1) <B149BCAF-854C-3820-809D-15C6077FFB8B> /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport; 0x7fff275b8000 - 0x7fff275e0fff com.apple.aps.framework (4.0 - 4.0) <D86ED827-F22D-3A52-B055-251478B29AE1> /System/Library/PrivateFrameworks/ApplePushService.framework/Versions/A/ApplePushService; 0x7fff275e1000 - 0x7fff275fefff com.apple.UserManagement (1.0 - 1) <B6B35079-3860-384F-B7A2-584192BAAE70> /System/Library/PrivateFrameworks/UserManagement.framework/Versions/A/UserManagement; 0x7fff275ff000 - 0x7fff2779efff com.apple.cloudkit.CloudKit (970 - 970) <58BD254C-AAF1-3CC5-AAB7-2EF0A70BA033> /System/Library/Frameworks/CloudKit.framework/Versions/A/CloudKit; 0x7fff27822000 - 0x7fff27bc7fff com.apple.CoreML (1.0 - 1) <21D89ABE-2DEC-3099-81CC-78D9ADB9D12B> /System/Library/Frameworks/CoreML.framework/Versions/A/CoreML; 0x7fff2851b000 - 0x7fff28598fff com.apple.corelocation (2420.12.16 - 2420.12.16) <8BD49018-78D4-3A81-88AD-47DE1A8E3BFE> /System/Library/Frameworks/Co,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:30914,log,login,30914,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['log'],['login']
Testability,FVM plugin should now be fixed . [ci-build][with-all-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1965901959:53,test,tests,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4533#issuecomment-1965901959,1,['test'],['tests']
Testability,FYI : no need to run the scene tests etc.; It works!,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1185#issuecomment-541198303:31,test,tests,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1185#issuecomment-541198303,1,['test'],['tests']
Testability,"FYI guys another test was failing, it's fixed as well.; Close your eyes and believe me.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1386#issuecomment-631443254:17,test,test,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1386#issuecomment-631443254,1,['test'],['test']
Testability,"FYI, `SimpleCarving.py` is not exectuted by the CI (or more precisely, there is no mention of it in the logs)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3457#issuecomment-1707519816:104,log,logs,104,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3457#issuecomment-1707519816,1,['log'],['logs']
Testability,FYI: unit tests are OK; there are no scene tests or regression however.; ```; Plugin SoftRobots: built (found libSoftRobots.so libSoftRobots.so.1.0); Plugin SoftRobots: no examples/ nor scenes/ directories.; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1569299565:10,test,tests,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1569299565,2,['test'],['tests']
Testability,"Factories were used only with `std::string` as a key. That is why it was not noticeable that factories were not compatible with other types than `std::string` as the key.; The limitations come from:. - `logFactoryRegister` assumed `Key` is a string. It is now a template function.; - `Creator` inherits from `Key` and instances was used such as it was a string. Now, `Creator` no longer inherits from `Key` but just stores the key as a class member. A unit test is added for enum type as a key. Small downside: `std::string& getFactoryLog()` is now available outside the translation unit. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2259:203,log,logFactoryRegister,203,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2259,4,"['log', 'test']","['logFactoryRegister', 'test']"
Testability,"Factorize all compatibility code in the SofaFramework (GL, Helper, Defaulttype, Core) into a common module, to simplify maintainability. For now, it is forcefully loaded for all the modules, as no code has been ported to the new architecture yet. In the future, this module should be optional (and its inclusion in an other cmake file in a module/ directory for example). (out-of-tree configuration tested with SofaPython3); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1944:399,test,tested,399,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1944,3,['test'],"['test', 'tested']"
Testability,"Factorize default plugin list filtering and review which plugin are removed from the default list. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4748:640,test,test,640,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4748,2,['test'],['test']
Testability,"Factorize:; - use updateIfDirty in BaseData.h; - in Data.h in the beginEdit function use: beginWriteOnly. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1569:645,test,test,645,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1569,2,['test'],['test']
Testability,Failing unit tests without compatibility layer,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3389:13,test,tests,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3389,1,['test'],['tests']
Testability,"FastTetrahedralCorotationalForceField initialized its Poisson's ratio and Young's modulus with different values than the other tet FEM force fields. TODO:. - [x] Update tests; - [x] Update doc: https://github.com/sofa-framework/doc/pull/83. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3563:169,test,tests,169,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3563,3,['test'],"['test', 'tests']"
Testability,"File `CudaTypes.cpp` is removed as it does not contain anything else than explicit template instantiations that are already instantiated in `CudaMultiMapping.cpp`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3807:703,test,test,703,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3807,2,['test'],['test']
Testability,"FileRepository needs to be checked and fixed. It does not work for sure in some situations, e.g. if a sofa install is copied in a path containing accents on windows, FileRepository does not find the files. Note I have not go any further, and everything needs to be investigated.; I did not test with the distributed, precompiled package. I did not test on linux...",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/17:290,test,test,290,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/17,2,['test'],['test']
Testability,"Final PR for the modularization of SofaGeneral. #1529; SofaGeneral is going to be a collection (set of modules).; So for now, it wont be breaking to do ; `find_package(SofaGeneral)` ; and ; `target_link_library(blabla PUBLIC SofaGeneral)` . But now it is recommended to only find and link the module you need (like SofaMisc and SofaAdvanced actually). This PR is slightly breaking for applications calling initSofaGeneral(), as it should not be called anymore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1596:1000,test,test,1000,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1596,2,['test'],['test']
Testability,Finally apply the doUpdateInternal to MeshMatrixMass; This class should definitely be in SofaBaseMechanics ... ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1151:362,test,test,362,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1151,2,['test'],['test']
Testability,"Finally decided to remove the warning; `The collection SofaSimulation (/home/fred/sofa/src/current/applications/collections/deprecated/SofaSimulation) does not exist and will be ignored.` at every cmake config step. I guess this collection thingy should be deleted in the future anyway. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4320:826,test,test,826,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4320,2,['test'],['test']
Testability,"Finally, here it is! . Please edit this description to complete the changelog:; - Remove all SOFA_EXTERN_TEMPLATE; - Remove all #ifdef SOFA_DEV; - Remove PS3 and XBOX code; - Remove SOFA_SUPPORT_MAPPED_MASS; - Remove into weird #pragma once ; - Remove commented code.; - Replace conditionally compiled code.; Eg: ; ```cpp; #ifndef NDEBUG; serr << ""Loop for computing connexity has reach end."" << sendl;; #endif; ```; By a systematically compiled version; ```cpp; if (CHECK_TOPOLOGY); msg_error() << ""Loop for computing connexity has reach end."";; ```; - Remove all code using #define SOFA_NEW_HEXA; - Add macro CHECK_TOPOLOGY (see above) to turn all topology component in verbose mode; - FIX several dll macro missing in Base and Mesh collisions. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/834:998,test,test,998,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/834,2,['test'],['test']
Testability,"First plugin to be moved out, as detailed in issue #1442 ; Plugin is now located here: https://github.com/sofa-framework/InvertibleFVM. All feedback are more than welcome. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1443:423,test,test,423,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1443,2,['test'],['test']
Testability,"First step in post-NG cleaning work :muscle: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2958:586,test,test,586,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2958,2,['test'],['test']
Testability,"First step of cleaning for the SOFA lifecycle ahead of the v23.12. [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/101]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4034:678,test,test,678,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4034,2,['test'],['test']
Testability,"First step to remove OBBMode/CapsuleModel from SofaBaseCollision, as those primitives are not really deemed as ""basic"".; They are instead displaced into SofaMiscCollision, with other custom primitives. The code in DiscreteIntersection, etc is much clearer in this way, and leads to less cluttering in dependencies. Next steps:; - refactor Intr* utilities classes; - refactor FixParticlePerformer; - finally move OBBModel and CapsuleModel (and their sidecar files) into SofaMiscCollision. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2073:1027,test,test,1027,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2073,2,['test'],['test']
Testability,"First steps for a consistent, uniformed and centralized configuration storage. This PR adds the ability to retrieve the current local config folder for the user. . These return respectively (local account is `fred`):; - Linux:; ```; getUserLocalDirectory(): /home/fred/.config; getSofaUserLocalDirectory(): /home/fred/.config/SOFA; ```. - macOS:; ```; getUserLocalDirectory(): /Users/fred/Library/Application Support; getSofaUserLocalDirectory(): /Users/fred/Library/Application Support/SOFA; ```; - Windows:; ```; getUserLocalDirectory(): C:/Users/Fred/AppData/Local; getSofaUserLocalDirectory(): C:/Users/Fred/AppData/Local/SOFA; ```. `getSofaUserLocalDirectory()` creates also the directory if it is not created yet. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4875:1259,test,test,1259,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4875,2,['test'],['test']
Testability,"First steps to move TopologyData/Change into Sofa.Core (see #2402). The goal of this PR is to remove *TopologyContainer dependencies in TopologyData mechanism.; TopologyHanderData has direct dependencies on *TopologyContainer because it wants to link their specific Data(d_edges, d_triangles, etc) into a list of engines handled by itself.; It should not know how a topology is managing its data IMO.; So this PR:; - is abstracting the function to add a Data to list of engines ; - change the way how the engine lists is managed: each Subclass was setting its engine list (edgeset and then triangleset and then....), now the base class is storing a vector of list of engines (indexed on the type of topology); - removes the direct dependency on TopologyContainer in TopologyHandlerData.inl. After this PR, all Topology*Data mechanism will be moved in to Sofa.Core, along Topology* class (sofa::core::topology). NB: I let the code building a dep graph which was done for debugging purpose, but it is matter of discussion to keep it or not); . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2387:1581,test,test,1581,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2387,2,['test'],['test']
Testability,"First task of https://github.com/sofa-framework/sofa/issues/2483. - Replace newmat with Eigen in TriangularFEMFF and PlasticMaterial (used only to do a JacobiSVD); - Remove the use of NewMatMatrix in HexahedronCompositeFEMForceFieldAndMass. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2531:780,test,test,780,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2531,2,['test'],['test']
Testability,"First task of removing(deprecating) the usage of nodeData (noticed in #4327). Those two visitors are using the pointer nodeData for local computations so It was changed to local (weak) stored pointers. ; Not fan of pointers but it does not break API. (a SReal to count is weird btw). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4328:823,test,test,823,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4328,2,['test'],['test']
Testability,"Fix #1166. @jnbrunet @marques-bruno Is this reasonable to definitely remove the DataTrackerEngine and its test although we did not end the work on DataUpdate?. For review, maybe pay a specific attention to Binding_base and generateTypedefs/Main.cpp. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1238:106,test,test,106,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1238,3,['test'],['test']
Testability,Fix #1209. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1221:262,test,test,262,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1221,2,['test'],['test']
Testability,"Fix #1507. ~~Breaking for code using vector of Vec4f with the drawtools~~. + with deprecation for methods using Vec4f; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1626:658,test,test,658,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1626,2,['test'],['test']
Testability,"Fix #1568 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1627:551,test,test,551,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1627,2,['test'],['test']
Testability,"Fix #1597; Final PR for the modularization of SofaCommon. . SofaCommon is going to be a collection (set of plugins).; So for now, it wont be breaking to do; find_package(SofaCommon); and; target_link_library(blabla PUBLIC SofaCommon). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1609:774,test,test,774,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1609,2,['test'],['test']
Testability,"Fix #1702. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1785:550,test,test,550,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1785,2,['test'],['test']
Testability,"Fix #1784. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1789:550,test,test,550,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1789,2,['test'],['test']
Testability,"Fix #1841 . + a little bit of cleaning. And Fix #1884 (not related but very small fix indeed); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1914:634,test,test,634,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1914,2,['test'],['test']
Testability,"Fix #1867. Follow the PR on Sofa.GL; Reminder: ; - do not use the **_cmake variable_** SOFA_NO_OPENGL in the cmake files. Instead, use `sofa_find_package(Sofa.GL)` and Sofa.GL_FOUND,; - neither the **_preprocessor macro_** SOFA_NO_OPENGL in your h/cpp files. Instead, use the preprocessor macro YOURPLUGINNAME_HAVE_SOFA_GL (generated from the previous `sofa_find_package(Sofa.GL)` ). What this PR does:; - Propagate the removal of the **_preprocessor macro_** SOFA_NO_OPENGL in almost all the plugins; - remove in Sofa.Config the file option build_option_opengl.h , which has the nice effect to not recompile ALL sofa if you enable/disable the **_cmake option__** SOFA_NO_OPENGL; - some cmake fixes, in sofacuda especially. Breaking because of the removal of build_option_opengl.h, thus SOFA_NO_OPENGL is not defined anymore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1888:1365,test,test,1365,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1888,2,['test'],['test']
Testability,"Fix #1931. Still a question about the value to compare float/double against. numeric_limits<real>::epsilon()? min() or a fixed value like 1e-100 (previous value of MIN_DETERMINANT) ?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1932:723,test,test,723,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1932,2,['test'],['test']
Testability,"Fix #2056 . May be fix rendering issues for people using VisualManagerSecondaryPass. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2068:624,test,test,624,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2068,2,['test'],['test']
Testability,"Fix #2159. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2405:550,test,test,550,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2405,2,['test'],['test']
Testability,"Fix #2426. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2427:550,test,test,550,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2427,2,['test'],['test']
Testability,"Fix #2955 . \+. Some tests were missing from the sofang move (presently from SofaBoundaryCondition), so they have been ported to S.C.MechanicalLoad_test and S.C.Constraint.Projective_test (and are using the new paths, etc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2991:21,test,tests,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2991,3,['test'],"['test', 'tests']"
Testability,"Fix #3531 (see last comment). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3886:569,test,test,569,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3886,2,['test'],['test']
Testability,"Fix #3878. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3920:550,test,test,550,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3920,2,['test'],['test']
Testability,"Fix #4186 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4187:551,test,test,551,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4187,2,['test'],['test']
Testability,"Fix #4321 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4330:551,test,test,551,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4330,2,['test'],['test']
Testability,"Fix #4416. This PR should allow to merge #4410. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4425:587,test,test,587,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4425,2,['test'],['test']
Testability,"Fix #528. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2121:549,test,test,549,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2121,2,['test'],['test']
Testability,"Fix #632 . The plugin list was never updated if we removed a plugin in the cmake configuration.; Plus, it was possible to append several identical targets. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/645:407,test,test,407,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/645,2,['test'],['test']
Testability,Fix #795 hopefully .; Problem comes from the interpolation between starting and final position: was working well for vec3d but not well for Rigids by messing up the quaternion.; New implementation not optimum as some code bits are copy-pasted.; Please comment!; Olivier. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/824:522,test,test,522,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/824,2,['test'],['test']
Testability,"Fix #809; Following the STC decision to replace the DataEngine with the SimpleDataEngine, here's the PR that does just that. This replacement involves taking every engine in Sofa and:; - replacing its **update()** method with the new delegate **doUpdate()**.; - Remove the calls to **data.isDirty()** and (smartly) replacing them with **m_dataTracker.isDirty(data)**; - Remove the **cleanDirty()** calls while making sure we don't break the engine's behavior. Most engines present in SOFA are either in SofaGeneralEngine or SofaMiscEngine. ______________________________________________________ ; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/814:792,test,test,792,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/814,2,['test'],['test']
Testability,"Fix #957 . Breaks:. 1. as extvec3 and vec3 are synonyms, compilation will fail if templates are instanced on Vec3 and ExtVec3. Especially for mapping:; e.g: ; `SomeMapping<Vec3Types, ExtVec3Types>; SomeMapping<Vec3Types, Vec3Types>`. this will fail because the compiler will try to instanciate SomeMapping twice with the same types. 2. scenes where a mechanicalobject, an OglModel and a mapping are present in the same node:; e.g:; ` <Node>; 	 ....; <MechanicalObject name=""DOFs"" template=""Vec3d"" translation=""0 0 -4"" />; ...; <OglModel name=""Visual"" color=""red"" />; <IdentityMapping input=""@."" output=""@Visual"" />; </Node>`; ; will fail now because the mapping could think you are referring to the same input and output. (linking ¨@."" to the OglModel instead of the MechanicalObject); It was not failing previously because there is no mapping instanced on <ExtVec,Vec>, therefore the mapping was finding the MechanicalObject as its input. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1055:1191,test,test,1191,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1055,2,['test'],['test']
Testability,Fix #989 . and fix compilation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1044:283,test,test,283,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1044,2,['test'],['test']
Testability,"Fix **one** of the bugs breaking the Geomagic behavior. When updating the position of the Omni visual node, visitor update was call on the Omni->getContext() which is usually the Root node, thus all node where updated outside of the normal mechanical step leading to bad physic behavior. ; Call the update on the Omni visual node only. + some small change and warning fix. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/761:626,test,test,626,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/761,2,['test'],['test']
Testability,"Fix 2 missing deps in Flexible due to pluginization. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1590:592,test,test,592,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1590,2,['test'],['test']
Testability,Fix 4 crashing (timeout) scenes on Windows CI:; - GenerateCylinder; - GenerateGrid; - Flexible: linearAffine_flex331.scn; - Compliant: FEM-donuts.scn. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/641:402,test,test,402,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/641,2,['test'],['test']
Testability,Fix LightManager test,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/70:17,test,test,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/70,1,['test'],['test']
Testability,"Fix SofaPython3 advanced_timer.py test when launched from runSofa (and a gui). The draw() function was pushing_back() new points, making the loop slower and slower (and the memory exploding...); Rewrote in a cleaner and more readable way. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1766:34,test,test,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1766,3,['test'],['test']
Testability,Fix TetrahedronModel topology handling and remove the old mechanism. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1354:320,test,test,320,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1354,2,['test'],['test']
Testability,"Fix Zlib find errors by adding `<plugin>/lib `and `<plugin>/bin` in `CMAKE_LIBRARY_PATH` for each relocatable plugin. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1708:657,test,test,657,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1708,2,['test'],['test']
Testability,"Fix ```MechanicalObject``` resize method to resize all its vectorsCoord only if the new size is different from the current one. . In a normal case, resizing a vector with it's current size won't have consequences but here as the VectorCoords are Data, they were all set to dirty each time a not needed resize was performed. And this on the position / rest_position/ freePosition and resetPosition. For example in ; ```; void BarycentricMapping<TIn, TOut>::apply(...; ...; d_mapper->resize(this->toModel);. ```; was always setting all MechanicalObject VectorCoords Data to dirty even if not needed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1977:1139,test,test,1139,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1977,2,['test'],['test']
Testability,"Fix a crash at init of example `DistanceGridForceField-liver.scn`, when FlowVR library is not compiled. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3400:643,test,test,643,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3400,2,['test'],['test']
Testability,"Fix a peculiar bug where:; - one wants to compile a project out-of-tree,; - on WIndows,; - this project needs Sofa.GL; - Sofa.GL is find_package()'d first. As GLEW config on windows is special (windeppack stuff), its configuration is set-up in Sofa.Helper.; But the cmake config file for out-of-tree (Sofa.GLConfig.cmake.in) was trying to find GLEW before Sofa.Helper, hence cmake could not configure the projet and was yelling about not finding GLEW.; (got the case with registration plugin). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3098:1033,test,test,1033,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3098,2,['test'],['test']
Testability,Fix a typo and clean headlessRecorder_test. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1174:295,test,test,295,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1174,2,['test'],['test']
Testability,"Fix a typo pointed by Julien Ducrocq. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2324:577,test,test,577,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2324,2,['test'],['test']
Testability,"Fix all failing/crashing unit tests, scene tests, regression tests. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/978:30,test,tests,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/978,3,['test'],['tests']
Testability,"Fix an infinite loop. I just reverted without changes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4902:594,test,test,594,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4902,2,['test'],['test']
Testability,Fix bug in collision visitor. ; Check if the narrow phase is null before calling getNarrowPhaseDetection. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/962:357,test,test,357,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/962,2,['test'],['test']
Testability,"Fix bug introduced in #2193 and reported by @jnbunet in the Caribou CI! Thanks again @jnbrunet and @epernod for the discussions !. - Homogeneize the use of the massLumpingCoeff; - In the test, only cosmetic change; - homogeneize and add scenes in the regression. Fixes #2301. [ci-depends-on https://github.com/sofa-framework/Regression/pull/18]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2305:187,test,test,187,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2305,3,['test'],['test']
Testability,"Fix bug introduced in #521 . If threshold is met at first step with den=0, break but info msg; about the status of the linear system. If threshold is met at first with den!=0, then continue one more iteration; and warning about threshold value too large. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/556:506,test,test,506,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/556,2,['test'],['test']
Testability,"Fix compilation error due to namespace change. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2543:586,test,test,586,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2543,2,['test'],['test']
Testability,"Fix compilation for Qt version< 5.11 or we decide to remove that and I update my computer:; ```if (QT_VERSION < QT_VERSION_CHECK(5, 11, 0))```. ```18>C:\projects\sofa-src\modules\SofaGuiQt\src\sofa\gui\qt\RealGUI.cpp(456,49): error C2027: use of undefined type 'QDesktopWidget'; 18>C:\Qt\5.10.1\msvc2017_64\include\QtWidgets\qapplication.h(57): message : see declaration of 'QDesktopWidget'```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1904:934,test,test,934,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1904,2,['test'],['test']
Testability,Fix compilation of cgal (include problem). Comment the part of the code that is not compiling with cgal 5. Fix #1474 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1522:370,test,test,370,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1522,2,['test'],['test']
Testability,"Fix compilation warning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2260:564,test,test,564,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2260,2,['test'],['test']
Testability,Fix compilation when using the option SOFA_DUMP_VISITOR_INFO; Thanks to Marco from UniLux. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1415:342,test,test,342,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1415,2,['test'],['test']
Testability,Fix compilation with flag NO_OPENGL and clean CMake. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1478:304,test,test,304,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1478,2,['test'],['test']
Testability,"Fix compilation without openHaptics to be able to activate it on the CI. ; Warning the GeomagicDriver will be invalid by default. include PR #2113 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2115:688,test,test,688,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2115,2,['test'],['test']
Testability,"Fix crash on CI with scene _HexahedronForceFieldTopologyChangeHandling.scn_; Further to PR #1031 , the case where topo changes occur and X0 (points) size becomes zero (all points removed) the doUpdte() directly led to `return` without actually updating the output data field as being empty !; Now, all data are by default cleaned at the begin of the doUpdate() and filled only if X0.size is not zero and topology is not empty neither. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1056:686,test,test,686,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1056,2,['test'],['test']
Testability,Fix crash when calling updateBBox w/o an mstate in TetrahedronFEMForceField. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1403:328,test,test,328,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1403,2,['test'],['test']
Testability,"Fix crash when removing triangles in scene using TriangleModel component. Clean and comment the class while undusting it (sorry hard to read the diff). - remove serr/sout; - change all protected members prefix; - rewritte init and updateFromTopology methods; - Remove the handleTopologyChange method. As this class use directly the topology buffers, no need neither for TopologyData. Just check the topology revision and update the component if topology has changed.; - Update RemovingTrianglesProcess and AddingTrianglesProcess tests scenes to test the TriangleModel; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/903:529,test,tests,529,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/903,4,['test'],"['test', 'tests']"
Testability,"Fix crash when solver was not in the same context (node); I am not really an expert of solvers and Vectors (VecId stuff) but the reference to the vector of position is changed everytime the odesolver solves if this one (and I guess the linearsolver) is not in the same context.; I roughly guess that it is because the system has not the same number of nodes and everything.; Anyway, reviews/comments from @ChristianDuriez would be most welcome 😺 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1230:699,test,test,699,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1230,2,['test'],['test']
Testability,Fix cuda compilation (problems with float/double in cuda); ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/912:310,test,test,310,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/912,2,['test'],['test']
Testability,Fix cuda compilation with new index types. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1551:294,test,test,294,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1551,2,['test'],['test']
Testability,Fix cuda include compilation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1550:281,test,test,281,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1550,2,['test'],['test']
Testability,"Fix double compilation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3081:563,test,test,563,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3081,2,['test'],['test']
Testability,"Fix error introduced in ; - https://github.com/sofa-framework/sofa/pull/3635. Mat4x4 did not have a ""SReal"" template. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3675:657,test,test,657,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3675,2,['test'],['test']
Testability,Fix errors introduced in #1279 which I merged too quickly. Additional fixes:; - fix order warning; - fix unused warning; - fix hidden overload in clang; - fix two scenes of SOFA; - remove crashing (but working) scene due to use of shaders. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1289:491,test,test,491,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1289,2,['test'],['test']
Testability,"Fix failing test because the user is giving a focal radius of zero.; This became an error in #2099 . But it could happen that a user gives both a radius (non zero) and a focal radius (with zero).; This should not be really a fatal error (acting like the focal radius has not be given), ; but more a ""warning"" (a ""focal"" radius at 0 is still wrong after all). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2126:12,test,test,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2126,3,['test'],['test']
Testability,Fix following discussion on issue #871. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/924:291,test,test,291,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/924,2,['test'],['test']
Testability,"Fix following https://github.com/sofa-framework/sofa/pull/3550. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3591:603,test,test,603,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3591,2,['test'],['test']
Testability,"Fix for OOT compilation linking to Multithreading. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4619:592,test,test,592,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4619,2,['test'],['test']
Testability,"Fix from @hugtalbot in #900 . Changes :; - decrease the damping,; - set a total mass to the rigid tori; - decrease the time step. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/987:381,test,test,381,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/987,2,['test'],['test']
Testability,"Fix https://github.com/sofa-framework/doc/issues/84. In the CI I trust. :warning: could not compile the PR right now (clang issue blocking me with latest master version). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4882:710,test,test,710,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4882,2,['test'],['test']
Testability,Fix image test [WIP],MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/460:10,test,test,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/460,1,['test'],['test']
Testability,Fix in DefaultCollisionGroupManager::createGroups the wrong search of deformable object nodes in collision group nodes already created. . The search was always failing and a new collision group was always created and added in the scene graph. This PR is supposed to explain the wrong behavior issue #994. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1060:556,test,test,556,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1060,2,['test'],['test']
Testability,"Fix install further to #4410 ; \+ minor warning fix. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4451:592,test,test,592,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4451,2,['test'],['test']
Testability,"Fix issue #2070 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2072:557,test,test,557,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2072,2,['test'],['test']
Testability,"Fix issue #2080. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2083:556,test,test,556,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2083,2,['test'],['test']
Testability,"Fix issue #7 . Summary: drawQuad needed a call to glBegin(GL_QUADS) to draw a quad, defeating the purpose to avoid to use explicitly OpenGL API. Same problem with drawTriangle and drawPoint,; I suppose that these functions, at the beginning, was just needed to factorize OpenGL code (but still you needed to use OpenGL with it). ; Now that we remove the explicit calls, those functions should not be accessible outside.; But a few code in Sofa (and maybe plugins?) are using those calls to draw one primitive. Finally, what have been done:; - remove public visibility to those functions and rename it to internalDrawXXXX (where XXXX is point, triangle, quad); - keep the old calls to keep compatibility; - add addLine to keep consistency with the other primitives. I am wondering if in the future (or just right now), the drawXXX (drawing ONE primitive) should be removed and force users to use the drawXXXXs with a vector (and oblige user to build a std::vector with ONE primitive. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/293:1234,test,test,1234,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/293,2,['test'],['test']
Testability,Fix issue #749; https://github.com/sofa-framework/sofa/issues/749. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1020:318,test,test,318,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1020,2,['test'],['test']
Testability,"Fix issue https://github.com/sofa-framework/sofa/issues/2158. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2413:601,test,test,601,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2413,2,['test'],['test']
Testability,"Fix it also in FixedConstraint for Rigid3.; Also replace some push_back by emplace_back. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3143:628,test,test,628,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3143,2,['test'],['test']
Testability,"Fix libs copy on Windows with multi-config generator (Visual Studio). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2261:609,test,test,609,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2261,2,['test'],['test']
Testability,"Fix memory leak in task scheduler:. - Add comments; - Add unit tests; - Use shared pointer instead of raw pointer: . The static raw pointer had two bad effects:; - Memory leak; - Task scheduler not being stopped. Note: The current API for the task scheduler is very confusing. I suggest to clarify the expected behavior. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1927:63,test,tests,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1927,3,['test'],"['test', 'tests']"
Testability,"Fix mess in *Config.cmake.in and some dependencies from modularization. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1570:611,test,test,611,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1570,2,['test'],['test']
Testability,Fix or approve new result of existing regression test.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/828:49,test,test,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/828,1,['test'],['test']
Testability,"Fix plugin CMakeLists; Add example; Improve README. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1830:591,test,test,591,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1830,2,['test'],['test']
Testability,"Fix problem encountered in SPH scenes where the number of particles is 0 at start. ; Therefor the vertexMass was set to 0 during the first steps and all particles created during the next simulation steps were still having no mass. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4151:772,test,test,772,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4151,2,['test'],['test']
Testability,Fix quaternion test,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/144:15,test,test,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/144,1,['test'],['test']
Testability,"Fix regression (appeared when boost was supposed to be removed from Sofa).; -> Plugins _not able to find Boost automatically_ failed to compile (because it needs boost to compile obviously); ; The problem was coming on Windows mainly, as boost are often installed in the system directories on Unix system. And few changes were added to make boost's CMake part more consistent. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/421:630,test,test,630,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/421,2,['test'],['test']
Testability,Fix regression test on MeshSpringFF,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2983:15,test,test,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2983,1,['test'],['test']
Testability,"Fix scene crashing and regression tests; Still 3-4 voluntary failing unit tests. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1669:34,test,tests,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1669,4,['test'],"['test', 'tests']"
Testability,"Fix several bugs when having a metis package installed and its cmake config files are expected to be used by our Findmetis cmake module file:; - cmake config files provided by metis packages (at least conda, as APT do not provide such) are prefixed with an uppercase (e.g. MetisConfig.cmake instead of metisConfig.cmake), although all cmake variables and targets are then correctly set to lowercase. This will make the library not findable in config mode on case senstitive OS such linux. ; - do not fail if invalid version of metis is found on the system, instead allow fetching the right one (is SOFA_ALLOW_FETCH_DEPENDENCIES is ON). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4570:1175,test,test,1175,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4570,2,['test'],['test']
Testability,"Fix similar problem encountered in #4142 where the global rendering stays red. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4150:620,test,test,620,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4150,2,['test'],['test']
Testability,"Fix sofa::type namespace variables in CGALPlugin for release v21.06. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2246:608,test,test,608,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2246,2,['test'],['test']
Testability,Fix some of the failing tests for a greener dashboard.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/279:24,test,tests,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/279,1,['test'],['tests']
Testability,Fix some the last SOFA-related warnings in option:. - fix hidden overload; - remove unused iterator; - Fix size_t int comparison; - add overrides; - fix CUDA collision models; - add override on getTemplateName function . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1316:472,test,test,472,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1316,2,['test'],['test']
Testability,Fix tests further to #1323 . - SofaExporter_test was expecting to export Hexa while option computeHexa was false in RGrid; - RegularGridTopology_test was expecting the wrong number of edges since the computation is now under the condition whether the triangles are used or not to compute the edges. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1335:4,test,tests,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1335,3,['test'],"['test', 'tests']"
Testability,Fix tests on CI: UtilsTest.string_to_widestring_to_string + Link_test.read_test,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/978:4,test,tests,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/978,1,['test'],['tests']
Testability,"Fix the FindAssimp.cmake by changing variable set by assimp to new names. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4326:615,test,test,615,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4326,2,['test'],['test']
Testability,Fix the example scenes and fix #926 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1355:289,test,test,289,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1355,2,['test'],['test']
Testability,Fix the failing test in; - MeshROI_test ; - PluginManager_test; - in TestMessageHandler remove un-used attribute that was causing a compilation warning in clang; - in image_test do some cosmetic cleaning to find why it fails... but in fact the problem should be fixed on the CI by installing convert & gm.exe on the VM. (this is done since this morning); - Improve the tests in FixedConstraint_test.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/279:16,test,test,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/279,5,"['Test', 'test']","['TestMessageHandler', 'test', 'tests']"
Testability,Fix the scene as reported in issue #681. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/716:292,test,test,292,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/716,2,['test'],['test']
Testability,"Fix the script, now ready to in service :100: !. Examples:; - warning message, example in [Discussion #4076](https://github.com/sofa-framework/sofa/discussions/4076#discussioncomment-7819845); - soon closed message, example in [Discussion #4188](https://github.com/sofa-framework/sofa/discussions/4188#discussioncomment-7819844). To be discussed at the SOFA dev meeting; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4348:910,test,test,910,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4348,2,['test'],['test']
Testability,"Fix the unit tests introduced in #3500. Related to issue #3499.; Very similar to #3505. More details in #3511 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3512:13,test,tests,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3512,3,['test'],"['test', 'tests']"
Testability,Fix the values with which the quaternion is being compared after creation from euler angles. The quaternion is obtained from the euler rotation angles applied in the **zyx order**. The test fails because the previous values considered to be good for comparison are wrong. This PR modifies them.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/144:185,test,test,185,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/144,1,['test'],['test']
Testability,"Fix these errors: https://ci.inria.fr/sofa-ci-dev/job/sofa-custom/963/CI_CONFIG=ubuntu_gcc-7,CI_TYPE=release/console. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1724:657,test,test,657,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1724,2,['test'],['test']
Testability,"Fix tiny errors in linearsolvers and preconditioners. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2883:593,test,test,593,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2883,2,['test'],['test']
Testability,"Fix two issues, #1148 and #1213 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1217:285,test,test,285,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1217,2,['test'],['test']
Testability,"Fix various warnings:; - type comparison; - misleading indentation; - unused variable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2196:626,test,test,626,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2196,2,['test'],['test']
Testability,Fix warning for ; - SphereCollisionModel ; - RegularGridTopology; - EulerExplicitSolver ; - RungeKutta4Solver . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1279:363,test,test,363,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1279,2,['test'],['test']
Testability,Fix warnings in Demos/ scenes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1021:282,test,test,282,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1021,2,['test'],['test']
Testability,"Fix warnings in VisualModelImpl; Fix scene TetrahedronDiffusionFEMForceField due to wrong scale (canceled by the Mapping) disturbing the bbox for visualization. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2412:700,test,test,700,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2412,2,['test'],['test']
Testability,"Fix wrong string comparison that displayed a lot of warning at compilation. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4854:617,test,test,617,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4854,2,['test'],['test']
Testability,Fix: ; - Dll export + Add config file; - Stop scheduler only if thread has successfully started. Enhancements:; - Add: specific method to handle tool buttons; - Add: send script event when button are used.; - Add: option to not automatically start tool at init but manually start it through a method call. (start at init by default); - Update: m_errorDevice is not anymore a bool but store the HD_DEVICE_ERROR. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/786:662,test,test,662,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/786,2,['test'],['test']
Testability,Fix: inclusion test in MeshNewProximityIntersection,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/12:15,test,test,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/12,1,['test'],['test']
Testability,Fixed Vertex2Frame (deleted a _return_ which prevented the component to work properly). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/398:339,test,test,339,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/398,2,['test'],['test']
Testability,"Fixed false error detection in MeshGmsh.cpp file when reading .msh type files.; Without these lines, we have this kind of error `'$Elements' expected, found '$Elements`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3030:709,test,test,709,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3030,2,['test'],['test']
Testability,"Fixed the linking of libSofaCuda : missed the definition of the mapping destructor.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2708:624,test,test,624,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2708,2,['test'],['test']
Testability,"Fixed this error while trying to configure a out-of-tree compilation of a plugin depending on SofaGuiQt. `CMake Error at sofa/install/lib/cmake/SofaGuiQt/SofaGuiQtConfig.cmake:49 (find_package):; Found package configuration file:. sofa/install/plugins/SofaMiscForceField/lib/cmake/SofaMiscForceField/SofaMiscForceFieldConfig.cmake. but it set SofaMiscForceField_FOUND to FALSE so package; ""SofaMiscForceField"" is considered to be NOT FOUND. Reason given by; package:. The following imported targets are referenced, but are missing:; SofaBaseMechanics`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2707:1092,test,test,1092,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2707,2,['test'],['test']
Testability,"Fixed two things : ; - Compilation error in CudaTriangular[..]; - Undefined symbol while loading the plugin in CudaConstant[..] . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2634:669,test,test,669,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2634,2,['test'],['test']
Testability,"FixedConstraint & PartialFixedConstraint for size-varying mechanical objects"".; - MechanicalObject: fix crash in debug with null pointer; - Mass: fix remove error logging in Mass method that are inherited from Forcefield API and that are not relevant for Mass; - MechanicalMatrixVisitor and MechanicalOperations: fix if using a Linear Solver, projective constraints were wrongly applied when a force field is in a child node; - Mesh2PointMechanicalMapping: fix constraints ApplyJT; - Metis(gk_arch.h): fix compilation with Visual Studio 2015; - ParticlesRepulsionForceField and RepulsiveSpringForceField: fix avoid division by 0 on repulsion force fields; - PersistentContactBarycentricMapping: fix init variables in constructor; - RestShapeSpringsForceField: fix Runtime stiffness tunning was not working + optimisation and cleaning; - SkinningMapping: fix compilation of SofaRigid; - SofaViewer: fix crashes when current camera of pick-handler is NULL; - SurfacePressureForceField: fix volume computation formula; - TaitSurfacePressureForceField: fix contribution to the stiffness matrix for the second component df = P+dN in TaitSurfacePressureForceField; - TopologicalMapping: fix display error messages when a TopologicalMapping failed to be created; - TriangularFEMForceFieldOptim: fix principal values ordering with input matrix is diagonal + uninitialized value warning; - VisualModelImpl: fix wrong object (triangles) called when adding quads in handleTopologyChange(); - VoxelGridLoader: `std::unique` result was not used. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/218:2983,test,test,2983,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/218,1,['test'],['test']
Testability,"Fixes #1791 . Screenshot mechanism was broken and inconsistent between viewers. With this PR, using the screenshot button or pressing ""S"" will do the same thing, regardless of the viewer. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2507:727,test,test,727,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2507,2,['test'],['test']
Testability,"Fixes #2133. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2151:552,test,test,552,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2151,2,['test'],['test']
Testability,"Fixes #2321 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2312:553,test,test,553,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2312,2,['test'],['test']
Testability,"Fixes #2576. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2837:552,test,test,552,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2837,2,['test'],['test']
Testability,"Fixes #308 with initialization of SparseGridTopology with a mesh. Before, a 1% scaling was automatically applied on the grid bounding an input mesh. Removing the scaling was leading a crash since vertices could be exactly on the boundary surface (surface of the BBox of the mesh).; Now a safety check is done and a final check is done to alert if a vertex is not found. Minor cleans of the msg API are also added. @epernod @fredroy your feedback using your own scenes involving the SparseGrid would be useful. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/670:761,test,test,761,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/670,2,['test'],['test']
Testability,Fixes #33.; Remove deprecated miniBoost dependency. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/273:277,test,test,277,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/273,1,['test'],['test']
Testability,Fixes #464 . Changelog: http://libqglviewer.com/changeLog.html. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/545:315,test,test,315,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/545,2,['test'],['test']
Testability,"Fixes #4809. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4811:552,test,test,552,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4811,2,['test'],['test']
Testability,Fixes #493 . Every Laparoscopic related code has been removed.; The ImageBMP dependency has been removed and replaced by the FactoryImage stuff. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/499:396,test,test,396,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/499,2,['test'],['test']
Testability,Fixes #561 . This PR does the same work as #564 but using the existing `Utils::getSofaPathPrefix()` function and avoiding heavy macro creation in root CMakelists.; I also removed all the PluginRepository and DataRepository re-inits. Sorry @ErwanDouaille I did not know this function before :-/. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/568:546,test,test,546,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/568,2,['test'],['test']
Testability,Fixes #717 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/722:264,test,test,264,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/722,2,['test'],['test']
Testability,Fixes #79 . Add a new test corresponding to this bug to avoid future regression.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/88:22,test,test,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/88,1,['test'],['test']
Testability,Fixes #992; Old version was just creating an object in the ctor... ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1083:318,test,test,318,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1083,2,['test'],['test']
Testability,Fixes `error: chosen constructor is explicit in copy-initialization`; see https://ci.inria.fr/sofa-ci/job/mac_clang-3.4_options/6311/console. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/483:393,test,test,393,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/483,2,['test'],['test']
Testability,"Fixes a bug in the component, that happens when using a child class that has its own implementation of _accumulateJacobiansOptimized_ and leads to an undefined J1 and J2 matrices after initialization, thus leading to a crash when setting J1eig to match its size. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1587:802,test,test,802,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1587,2,['test'],['test']
Testability,"Fixes https://github.com/sofa-framework/sofa/discussions/4100. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4102:602,test,test,602,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4102,2,['test'],['test']
Testability,"Fixes https://github.com/sofa-framework/sofa/discussions/4520. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4521:602,test,test,602,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4521,2,['test'],['test']
Testability,"Fixes https://github.com/sofa-framework/sofa/discussions/4701. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4724:602,test,test,602,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4724,2,['test'],['test']
Testability,"Fixes https://github.com/sofa-framework/sofa/issues/2366. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2998:597,test,test,597,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2998,2,['test'],['test']
Testability,"Fixes https://github.com/sofa-framework/sofa/issues/2937. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2938:597,test,test,597,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2938,2,['test'],['test']
Testability,"Fixes https://github.com/sofa-framework/sofa/issues/3006; Due to https://github.com/sofa-framework/sofa/pull/2974/files. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3007:660,test,test,660,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3007,2,['test'],['test']
Testability,"Fixes https://github.com/sofa-framework/sofa/issues/3389. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3406:597,test,test,597,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3406,2,['test'],['test']
Testability,"Fixes https://github.com/sofa-framework/sofa/issues/3445. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3508:597,test,test,597,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3508,2,['test'],['test']
Testability,"Fixes https://github.com/sofa-framework/sofa/issues/3726. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3727:597,test,test,597,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3727,2,['test'],['test']
Testability,"Fixes https://github.com/sofa-framework/sofa/issues/3943. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3944:597,test,test,597,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3944,2,['test'],['test']
Testability,"Fixes https://github.com/sofa-framework/sofa/issues/4323. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4392:597,test,test,597,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4392,2,['test'],['test']
Testability,"Fixes the failing unit test introduced in https://github.com/sofa-framework/sofa/pull/2999; Fixes https://github.com/sofa-framework/sofa/issues/3043. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3084:23,test,test,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3084,3,['test'],['test']
Testability,"Fixes the verbosity introduced in #3053. ; These messages should be associated with the solver object, so that they are only printed if `printLog` is set to true. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3232:702,test,test,702,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3232,2,['test'],['test']
Testability,"Fixing all the example scenes as discussed in #3352 . Only the OldTutorial has still to be covered. fix #3352. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3526:650,test,test,650,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3526,2,['test'],['test']
Testability,"Fixing build error on sofa-custom: https://ci.inria.fr/sofa-ci-dev/job/sofa-custom/683/CI_CONFIG=ubuntu_gcc-7,CI_TYPE=release/console. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1648:674,test,test,674,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1648,2,['test'],['test']
Testability,Fixing some components linkage on Windows; Needed for ModelOrderReduction plugin. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/910:333,test,test,333,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/910,2,['test'],['test']
Testability,"Follow issue #495 , implements the removal. Changelog:; - Remove SOFA_FLOAT specific code everywhere.; - Remove all template instantiation based on double type.; - All types now have strict version eg: Vec3f, Vec3d and well as an un-defined precision one Vec3. This is implemented without #ifdef ; - All the component registred to the ObjectFactory are now only using the un-defined precision version of their template. ; - Add a mechanism to TemplateAlias.cpp so we can print a warning ; - In sofa scenes, both xxtypexxf and xxtypexxd are translated into xxtypexx using the TemplateAlias mechanisme. If the conversion involve a precision change a warning is emitted. ; - Clean a sources by removing commented code.; - Deprecate the use of #include <sofa/defaulttype/Vec3Types.h> and use #include <sofa/defaulttype/VecTypes.h> (because using two files pointing to the same thing is only adding noise). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/853:1153,test,test,1153,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/853,2,['test'],['test']
Testability,"Follow up of https://github.com/sofa-framework/sofa/pull/1663; For comparison with #1797. In this PR we cut the coupling between vector and vector_device to make them really independant class. ; We then split the vector.h class in multiple separated parts for the differents specializations. . Because of unclear problems with windows explicit specialization interger, real and strings (extern template) have been removed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1799:964,test,test,964,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1799,2,['test'],['test']
Testability,"Follow-up #1767 . SofaBaseCollision just needs SofaSimulationCore. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1768:606,test,test,606,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1768,2,['test'],['test']
Testability,"Follow-up of #1770 where it was decided to throw an error if calling the erroneous function but was merged before I could do it 😬; Using the =delete keyword is an elegant way to do this. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1774:726,test,test,726,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1774,2,['test'],['test']
Testability,"Follow-up of #2436 . The replacement of the usage of the GeometryAlgorithms had the unattended consequence that there was not information anymore about the geometry itself (it was hidden before by the geometryAlgorithms having a pointer on the topology before).; Now if one wants to define a geometry type different of the type of the associated state, it can be done by giving a third template (called GeometricalTypes). This template is equal to DataTypes by default if omitted (as it was before). It should fix the scene failing since #2436 (about the diffusion, which is having a geometrical type (Vec3d) different of its associated state (Vec1d). This PR cleans the DiffusionFEM as well (trivial optimizations, removal of one useless data which can be infered from the DataTypes). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2476:1325,test,test,1325,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2476,2,['test'],['test']
Testability,"Follow-up on the quest to remove boost (at least the parts where the libraries are needed). ### 1; The only remaining part of SOFA using boost::thread is Sofa.Helper/Watchdog whose only purpose is to kill the current process if it exceeds a given time.; It is only used in the deprecated sofaInitTimer project, whose is litteraly a ""temporary"" project and was done to monitor the init() of the scenes... a kind of SofaVerification. Even the [commit ](https://github.com/sofa-framework/sofa/commit/0cbb991f6a7d6d1b1f32489d82c3267a6adc36a3) is saying ""ADD: temporary project to profile the initialization of some scenes"". Anyway, I decided to not delete the file by pity, and just moved the Watchdog class into this project.; Frankly, this class and the sofaInitTimer could be deleted in my opinion. ### 2; Sensable plugin is using optionnally `boost::thread::yield`, which:; 1. is deprecated; 2. can be replaced with std::this_thread::yield(). ### 3; CircularQueue had its tests disabled since... forever. I saw that because it was using boost::thread.; I made these tests compiled again but 2 are failing. I made them disabled, if somebody wants to fix them... ### 4; Sofa.Helper does not need boost::thread anymore and thus is removed from the CMake files.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2264:972,test,tests,972,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2264,4,['test'],"['test', 'tests']"
Testability,"Following #1237 , some error messages were not expected in some unit tests; triggering a FAILED status.; This PR fixes that, and add two more (real) unit tests for RandomPointDistributionInSurface and JoinPoints engines.; Moreover, it fixes also an example of the ExtrudeEngine scene and adds a example scene for RandomPointDistributionInSurface . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1280:69,test,tests,69,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1280,4,['test'],"['test', 'tests']"
Testability,"Following #1619. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1631:556,test,test,556,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1631,2,['test'],['test']
Testability,"Following #1720 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1721:557,test,test,557,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1721,2,['test'],['test']
Testability,"Following #2251 (missed other duplicated scenes). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2252:589,test,test,589,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2252,2,['test'],['test']
Testability,"Following #2368 . Some projects (mainly tests) are using find_package(SofaBase) which still uses the project SofaEigen2Solver for compatibility purpose. This leads to a few prints in the cmake output about the SofaEigen2Solver being deprecated.; Of course this is a bit slightly annoying to read the cmake output. This PR limits the deprecation display to once a cmake configuration pass. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2386:40,test,tests,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2386,3,['test'],"['test', 'tests']"
Testability,"Following #2719, here is the version with forced comments. Command executed: ; ```bash; ./scripts/doxygenDataComments.sh --force .; ```. Happy reviewing :sweat_smile: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2751:708,test,test,708,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2751,2,['test'],['test']
Testability,"Following #2777, `buildStiffnessMatrix` and `buildDampingMatrix` are implemented for `FastTetrahedralCorotationalForceField`. I took the opportunity to simplify the code and clean it compared to `addKToMatrix`. I also changed the example scene, as it was not really functional. Now, the scene is the same than `TetrahedronFEMForceField`. I also added the possibility to define the method as `small`, for consistency with `TetrahedronFEMForceField`. At some point, this should be refactored with an OptionGroup. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3929:1050,test,test,1050,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3929,2,['test'],['test']
Testability,"Following #2940 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2953:557,test,test,557,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2953,2,['test'],['test']
Testability,"Following #4876 (but not depending on it) this PR proposes to define a gravity-inheritance from the parent node when the data gravity is not set. A test is added but does not work due to SimpleAPI not taking into account data set in nodes.; Currently under investigation (this is why I draft this PR). ---. Suggestion : **TODO after this PR**; - Remove the class Gravity and use one single way to play with gravity : the associated data in the nodes; - Apply the change in all scenes using the Gravity component. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4910:148,test,test,148,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4910,3,['test'],['test']
Testability,"Following (and fixing) #1823 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1825:570,test,test,570,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1825,2,['test'],['test']
Testability,"Following code review in PR #4053 regarding Triangle version, propagate the same method name in Edge class. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4165:647,test,test,647,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4165,2,['test'],['test']
Testability,Following discussions with @fjourdes in #502 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/518:298,test,test,298,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/518,2,['test'],['test']
Testability,"Following https://github.com/sofa-framework/sofa/pull/2016. I thought SofaCUDA scenes were not tested at all on CI but actually they are (some of them at least).; A `.scene-test` file is used to ignore all the scenes that require SofaCUDA. Here are the scenes that are successfully tested (check them out [here](https://ci.inria.fr/sofa-ci-dev/job/sofa-framework/job/master/CI_CONFIG=windows10_vs-2017,CI_PLUGINS=options,CI_TYPE=release/2474/testReport/SceneTests/applications_plugins_SofaCUDA_examples/)):; - StandardTetrahedralFEMForceFieldCPU.scn; - TetrahedralTensorMassForceFieldCPU.scn; - beam10x10x46-fem-implicit-CPU.scn; - beam10x10x46-hexafem-implicit-CPU.scn; - beam10x10x46-hexafem-rk4-CPU.scn; - beam16x16x76-fem-implicit-CPU.scn; - beam16x16x76-hexafem-rk4-CPU.scn; - quadSpringSphere.scn. Does it makes sense to have non-CUDA scenes in SofaCUDA? ; Maybe should we ignore all the plugin scenes?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2042:95,test,tested,95,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2042,6,['test'],"['test', 'testReport', 'tested']"
Testability,Following https://github.com/sofa-framework/sofa/pull/4420. A good idea would be to centralize the regression-tests files in Regression plugin. . This would require multiple changes like being able to find the path of all compiled plugins to find the scenes and the regression references when they are inside of the plugin instead of Regression.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4424:110,test,tests,110,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4424,1,['test'],['tests']
Testability,"Following https://github.com/sofa-framework/sofa/pull/4495; This is to fix https://github.com/sofa-framework/BeamAdapter/actions/runs/8069371516/job/22044285700?pr=140; ```; CMake Error at BeamAdapter_test/CMakeLists.txt:5 (find_package):; Found package configuration file:. D:/a/BeamAdapter/BeamAdapter/sofa/lib/cmake/Sofa.Testing/Sofa.TestingConfig.cmake. but it set Sofa.Testing_FOUND to FALSE so package ""Sofa.Testing"" is; considered to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing:; Sofa.SimpleApi. -- Configuring incomplete, errors occurred!; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4542:324,Test,Testing,324,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4542,5,"['Test', 'test']","['Testing', 'TestingConfig', 'test']"
Testability,"Following https://github.com/sofa-framework/sofa/pull/4764 . [ci-depends-on https://github.com/sofa-framework/Regression/pull/66]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4769:670,test,test,670,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4769,2,['test'],['test']
Testability,"Following issue identified in PR #2026. Check that the topology pointer given is not null before registering it. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2027:654,test,test,654,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2027,2,['test'],['test']
Testability,"Following my [comment](https://github.com/sofa-framework/sofa/pull/2773#issuecomment-1075391909) on #2773.; This PR restores the default component naming for python. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2801:705,test,test,705,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2801,2,['test'],['test']
Testability,Following other components let's apply the updateInternal API to DiagonalMass. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1150:330,test,test,330,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1150,2,['test'],['test']
Testability,"Following our recent discussions, the ""find or fetch"" is replaced by a more classical find package strategy. The package management is fully left to the user. ; As some package managers were not providing cmake config files for tinyxml2 (at least APT), this PR also provides a cmake find module to look for a config file first, and if none found, look manually for the tinyxml2 library. ; Tested with:; - APT package libtinyxml2-dev (v9.0.0), no cmake config file provided; - conda package tinyxml2 (v9.0.0), cmake config file provided; - vcpkg package tinyxml2 (v9.0.0), cmake config file provided.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4240#issuecomment-1785355094:389,Test,Tested,389,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4240#issuecomment-1785355094,1,['Test'],['Tested']
Testability,"Following recent changes, when compiled externally (out-of-tree), plugin libraries are not generated in the `plugin/` folder of SOFA build repository anymore, but in a dedicated `external_directories` folder. However this folder was not included in the reference folders (defined in `FileRepository.cpp`) in which the RequiredPlugin component searches for plugins at run time. This is not necessarily an issue when loading manually the plugins using the GUI's plugin manager, but it doesn't work when launching a scene which requires an external plugin in batch mode. The issue was pointed out recently by @VannesteFelix . This commit simply add `external_directories/` in the reference folders to search for plugins. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2927:1257,test,test,1257,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2927,2,['test'],['test']
Testability,Following the ConstantForceField let's apply the updateInternal API to UniformMass. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1149:335,test,test,335,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1149,2,['test'],['test']
Testability,"Following the PR #2300 here is a new version of the scene TriangleSurfaceCutting.scn with a texture. See picture in PR #2300. For the Regression program I had to add in the scene:; CImgPlugin as requiredPlugin to be able to use this line:; ```<OglModel name=""Visual"" texcoords=""@../meshLoader.texcoords"" texturename=""textures/colorMap.png"" />```. [ci-depends-on https://github.com/sofa-framework/Regression/pull/19]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2381:956,test,test,956,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2381,2,['test'],['test']
Testability,"Following the comments in https://github.com/sofa-framework/sofa/pull/2720, this PR replaces:. 1. https://github.com/sofa-framework/sofa/pull/2720; 2. https://github.com/sofa-framework/sofa/pull/2729. A base class for TopologicalMapping is introduced (BaseTopologicalMapping). It has no link to topologies. SubsetMultiMapping is now a BaseTopologicalMapping and has MultiLinks for input topologies and output topologies.; The consequence is that SubsetMultiMapping gets the propagation of the topological changes through the visitor `TopologyChangeVisitor`. It does not need any callback and subscribe to any topology. Note that `TopologyChangeVisitor` is now called on the root, rather than on the Node of the topology undergoing changes. It's a bit more expansive, but my SubsetMultiMapping is not in the same Node. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2744:1357,test,test,1357,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2744,2,['test'],['test']
Testability,"Following the discussion of STC#3, here is a short summary. The work of validation started.; If mainly focused on linear elasticity and corotational approach. It consists in both verification against analytical solutions and industrial softwares. . This work aims at:. - structure the selected forcefield and homogenize them; - consistency of functions,; - data structure; - and data naming; - use inheritance to decrease code complexity and improve readability : one class corresponds to one mechanical constitutive law; - define properly the mechanical tests assessing the mechanics; - defining validated components with associated tests (unit, functional and regression). Later we could consider heterogeneity and anisotropy.; Under the same workflow, the hyperelasiticity will be introduced.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/25#issuecomment-291186601:555,test,tests,555,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/25#issuecomment-291186601,2,['test'],['tests']
Testability,"Following the discussions about https://github.com/sofa-framework/sofa/pull/4943, the implementations of methods and composants must override the template-specific API instead of the generic one. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4982:735,test,test,735,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4982,2,['test'],['test']
Testability,"Following the discussions of dev meeting, it is possible to add custom filters to Doxygen to parse initData as a member comment. Tested successfully on a simple example :+1:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2613#issuecomment-1023300619:129,Test,Tested,129,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2613#issuecomment-1023300619,1,['Test'],['Tested']
Testability,"Following the issue #183 , this is a proposed solution since the issue is starting to date and is still present on OS X. Don't hesitate to refuse it if you prefer to go with another solution. At least now this fix will be publicly seen by people who wish to get a fast fix for the bug. This is a small change that forces the GUI to use the Qt menu instead of the native one for Mac OS X. This feature is available for other operating system by disabling a new cmake option named ""SOFAGUI_ENABLE_NATIVE_MENU"" (the name matches the other gui related cmake options). This cmake option is true by default on every OSes except Mac OS X (Darwin). . Since I think that many people execute runSofa directly in the build directory instead of a bundled mac application (.app), this should fix the unresponsive menu bug. Note that the menu will be displayed directly onto the GUI instead of the native menus of OS X GUI. Note also that I didn't test this feature on Windows since I don't own a license. It does work well on Gnome shell based linux distro last time I checked. But anyway, the feature is disabled on other OSes than OS X, so it shouldn't change anything for those who use Windows or Linux. If some people could help me by testing this feature on Windows and some Linux desktop environments, that would be great and bullet proofing the feature for people who wish to use the Qt menus even if they are not with OS X.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/366:934,test,test,934,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/366,4,['test'],"['test', 'testing']"
Testability,"Following the rise of discussions about further using Eigen inside SOFA, this PR aims at standardizing its inclusion in the framework. Right now, SOFA automatically pulls a fixed version of Eigen (3.2). It also install it along with SOFA, which is a big problem when an external program or library tries to compile with both SOFA and another version of Eigen. . This PR removes the automatic pull of Eigen, and instead rely on the standard find_package(Eigen3) which is available in almost all distributions via the system package manager (apt, dnf, pacman, etc), for instance:. <table>; <tr><td>Debian 9</td><td>Eigen 3.3.2</td></tr>; <tr><td>Debian 10</td><td>Eigen 3.3.7</td></tr>; <tr><td>Ubuntu 18.04</td><td>Eigen 3.3.4</td></tr>; <tr><td>Ubuntu 19.10</td><td>Eigen 3.3.7</td></tr>; <tr><td>Fedora 29</td><td>Eigen 3.3.5</td></tr>; <tr><td>Fedora 30-31</td><td>Eigen 3.3.7</td></tr>; </table>; ; Right now, this PR compiles with all of the previous distributions (I've tested it with Docker by simply installing eigen3-devel and compiling Sofa). ~~However, there is a faulty test with Eigen > 3.2: the **compliant_test** from the Compliant plugin. It seems to come from the Assembly visitor of the plugin, which relies a lot on Eigen to build the system matrices. I'll have a look at it in the next days, but if someone have an idea...~~ ; Found the nasty bug at 53dd4f5 - memcopy is _dangerous_ !. Everything ~~else~~ seems to be fine with recent versions of Eigen. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1281:975,test,tested,975,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1281,4,['test'],"['test', 'tested']"
Testability,"Following work with @ChristianDuriez at STC6, here is a way to fix the geomagic plugin scenes and recover behavior from before the PR on freeAnimationLoop and lambda function. . Also add:. - a second RigidSkull.scn example to show another way to map the haptic tool.; - A small bool to know if the haptic tool is in contact with an object. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/858:591,test,test,591,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/858,2,['test'],['test']
Testability,"Following; - #4296 . (Part of the task #4217 ). Mat<> is now a composition of std::array of line (which is vec) instead of inhering fixed_array<Vec>. Note: The change in ParallelTetra is due to a static_assert triggered (N >0 in Vec) in the lambda in MSVC, I dont understand why 🤔. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4396:821,test,test,821,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4396,2,['test'],['test']
Testability,"Follows #2073 and then #2081. PickParticlePerformer has a hard dependency on OBBModel & CapsuleModel to compute where it sets its constraint with the mouse while picking.; So this forces the modules SofaUserInteraction to know those classes before hand. This design is not that good, as it is not possible for someone creating a new CollisionModel (in a plugin, etc) and use the PickParticlePerformer. This PR adds a (static) registration system, similar to the ObjectFactory and co., so if anybody wants to add a new collision model to pick on, it just has to register its model, along a callable (lambda, std::function, etc) on how to get the points on this model.; PickParticlePerformer registers by itself the triangle, sphere and rigidsphere models.; SofaMiscCollision (where OBB&Capsule are) registers the obb and capsule model functions. Fix #1624 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2084:1396,test,test,1396,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2084,2,['test'],['test']
Testability,"For Regression-Test to be able to test scenes with name like: EulerExplicitSolver-diagonal.scn . Solves error:; ```; [ FATAL ] /data/Softwares/sofa/src/master/extlibs/gtest/include/gtest/internal/gtest-param-util.h:569:: Condition IsValidParamName(param_name) failed. Parameterized test name 'EulerExplicitSolver-diagonal' is invalid, in /data/Softwares/sofa/src/master/applications/projects/Regression/Regression_test/Regression_test.cpp line 224; ```. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1265:15,Test,Test,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1265,5,"['Test', 'test']","['Test', 'test']"
Testability,"For a long time the ""Export Graph"" button causes runSofa to segfault. - What was the exact feature ?; - Since when is it crashing (obviously not tested) ?; - Is it worth keeping ?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1702:145,test,tested,145,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1702,1,['test'],['tested']
Testability,"For better visibility and browsing into RigidTypes.h (which was a mess); and tried to reorganize a little bit their includes. I was wondering as well if Rigid{Coord, Deriv, Mass} should move to Sofa.Type... . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3282:748,test,test,748,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3282,2,['test'],['test']
Testability,"For compilation without compat. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3223:571,test,test,571,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3223,2,['test'],['test']
Testability,"For consistency purpose, added a helper function to handle the file related errors for loaders and components. To use it: ; ```; FILE *f = fopen(filename.c_str(), ""r"");; msg_error_when(!f)<<sofa::helper::message::UnableToOpenFile(filename.c_str());; ```. Modified the usage in only ""MeshTrian.cpp"". With feedback, if I am in right direction, I will make changes to other loader and component accordingly.Solving issue #197 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/639:676,test,test,676,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/639,2,['test'],['test']
Testability,"For float compilation of course 😎. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3629:574,test,test,574,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3629,2,['test'],['test']
Testability,"For information here is the current Topoogy classes architecture in sofa core.; ![Présentation sans titre](https://user-images.githubusercontent.com/21199245/111889075-75fc1100-89e2-11eb-9abc-ce8a4391ce7c.png). Here is the **current** architecture of TopologyData, TopologyHandler and TopologyEngine; ![Présentation sans titre(1)](https://user-images.githubusercontent.com/21199245/111889097-9f1ca180-89e2-11eb-9d80-ace8440c2887.png). With the **current** pipeline; ![Présentation sans titre(2)](https://user-images.githubusercontent.com/21199245/111889104-aa6fcd00-89e2-11eb-970d-050305cf0923.png). Here is the proposal of this PR. Basically all TopologyEngine have been removed and the code has been moved to TopologyData or TopologyHandler; ![Présentation sans titre(4)](https://user-images.githubusercontent.com/21199245/112510923-3773a700-8d92-11eb-9559-49d7c34c50b5.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1898:1417,test,test,1417,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1898,2,['test'],['test']
Testability,"For me there is no more color, neither gtest's or sofa's. The `Fatal` messages should also be considered as failures by default.; Can you see why it is annoying to copy default behaviors to each test? Now we have to modify every of them rather than only a the default place...; If we let deprecated and warning messages on the side for now, but we want to activate them later, it is the same story.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-292506026:195,test,test,195,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-292506026,1,['test'],['test']
Testability,"For non-time critical algorithm it is better to implements them in their base class (here BaseLink) instead of the in their concrete class (Link). In this PR we are moving the TLink::read() method to BaseLink::read().; To implement BaseLink::read() we added several methods in BaseLink:; - add and clear the internal container; We also added a new method in PathResolver::FindBaseFromClassAndPath. . This PR is based on #1735 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1736:967,test,test,967,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1736,2,['test'],['test']
Testability,"For now the performances are not better. It needs more work. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4140:600,test,test,600,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4140,2,['test'],['test']
Testability,"For now, VMs are used for CI and the test of the scenes using a GPU support can not be tested.; A dedicated machine (maybe using LinuxBuilder) should be set up for this purpose.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/665:37,test,test,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/665,2,['test'],"['test', 'tested']"
Testability,"For now, the serialization of a CSR cannot be used a deserialization as the format are different.; In a nutshell, it is not possible to do:; ```; std::ostringstream oss;; oss << outMatrix;. CSR inMatrix;; std::istringstream iss(oss.str());; iss >> inMatrix;; ```. So this PR tries to fix it by changing the output format of the serialization.; \+ more concise (faster to serialize, less space); \- much less human-readable. Other/complimentary solutions:; \- adding a nice printing (same as the deserialization now); \- dont change the serialization but the deserialization. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5087:1114,test,test,1114,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5087,2,['test'],['test']
Testability,"For old modules with no headers like SofaGTestMain, SofaHelper, SofaDefaultType, SofaCore, Sofa.SimulationCore, SofaGuiQt. Should fix this kind of error:; ```text; Imported target ""SofaCore"" includes non-existent path; ""/home/runner/work/BeamAdapter/BeamAdapter/sofa/include/SofaCore""; in its INTERFACE_INCLUDE_DIRECTORIES. Possible reasons include:; * The path was deleted, renamed, or moved to another location.; * An install or uninstall procedure did not complete successfully.; * The installation package was faulty and references files it does not; provide.; ```; taken from https://github.com/sofa-framework/BeamAdapter/runs/6790181313?check_suite_focus=true. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3023:1206,test,test,1206,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3023,2,['test'],['test']
Testability,"For people including the inl to create their own instantiations (happening for gcc/clang). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3182:630,test,test,630,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3182,2,['test'],['test']
Testability,"For scenes with `BTDLinearSolver`, as it is a linear solver only templated on `BTDMatrix<6,Sreal>`. MatrixLinearSystem<BTDMatrix6> is not present in the factory. Interestingly, it will still create a MatrixLinearSystem templated on BTDMatrix6 and set it as slave, so this PR is mainly to avoid the error/warning due to the object creation/factory. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4189:887,test,test,887,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4189,2,['test'],['test']
Testability,"For small scenes I found very convenient to write the scene directly in the test...; This allow to iterate on each variation of scene elements (PointLight, DirectionalLight, SpotLight) (or templates (Vec3d, Vec3f, Rigid)) with just a simple loop and string concat. . ```cpp; void mytestThatShouldExistsForAllLights(std::string& lighttype){; std::stringstream scene ;; scene << ""<?xml version='1.0'?> \n""; ""<Node 	name='Root' gravity='0 -9.81 0' time='0' animate='0' > \n""; "" <Node name='Level 1'> \n""; "" <MechanicalObject/> \n""; "" <""<< lighttype << "" name='light1'/> \n""; "" </Node> \n""; ""</Node> \n"" ;; Node::SPtr root = SceneLoaderXML::loadFromMemory (""testscene"",; scene.str().c_str(),; scene.str().size()) ;. ... the actual meat of the test....; }; ```; For complex scene I think that using a template langage could be an option ...but needs more work.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/43#issuecomment-265274667:76,test,test,76,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/43#issuecomment-265274667,3,['test'],"['test', 'testscene']"
Testability,"For the CI:; - ignore scene using SofaCUDA plugin; - reduce the number of iterations for CPU version as they are all heavy simulations. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2616:675,test,test,675,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2616,2,['test'],['test']
Testability,"For the future, the work on improving the SOFA API has to be done to ensure a good initialization / update of components.; A good test would be to run sequentially: `storeResetState()` and `reset()`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3123#issuecomment-1189978414:130,test,test,130,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3123#issuecomment-1189978414,1,['test'],['test']
Testability,"For the ignoring part,apparently you have to set the 2 ignore lines into examples/.scene-tests ( and not into examples/Benchmark/TopologicalChanges/.scene-tests )",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2161#issuecomment-866669649:89,test,tests,89,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2161#issuecomment-866669649,3,"['Benchmark', 'test']","['Benchmark', 'tests']"
Testability,"For the moment we cannot use the component MechanicalMatrixMapper if the force field and mass are in the same component (for example AdaptiveBeamForceFieldAndMass from the plugin BeamAdapter). This PR just adds the option. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3173:764,test,test,764,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3173,2,['test'],['test']
Testability,For the record I just tested if I totally remove the conditionnal management... and nothing bad happens. @alxbilger Do you have any idea if bad things could happen (in term of building numerical system/solving/animation loop).,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3954#issuecomment-1592523781:22,test,tested,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3954#issuecomment-1592523781,1,['test'],['tested']
Testability,For those that are curious about the current status on this branch..you can see the inclusion dependencies in:; https://rawgit.com/SofaDefrost/sofa/reduceInclude2/include_2017_12_18.html. And the same for the current master; https://rawgit.com/SofaDefrost/sofa/reduceInclude2/include_master_2017_12_18.html. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/542:559,test,test,559,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/542,2,['test'],['test']
Testability,"For whatever reason, MSVC19 does not compile anymore because of streams in fixed_array (maybe an update in the stl code); And after further tries, it is not really possible to just deal with iosfwd.h and the implementation in a cpp file (because of templates). ; Anyway, everything is including iostream so it wont hurt more the compilation time.⏳. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1426:600,test,test,600,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1426,2,['test'],['test']
Testability,"For you @Camille-K and Antoine. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3087:571,test,test,571,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3087,2,['test'],['test']
Testability,"For you @guparan :heart: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2093:566,test,test,566,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2093,2,['test'],['test']
Testability,"Force the constraint force to zero or restPosition. As @damienmarchal said, this is a new version of what Christian proposed in PR #1022 the only difference is that Damien propose to change all the for loops (inside the getConstraintViolation function) by one lambda function. And I will complete this PR next weeks by doing this in all constraints component. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1027:613,test,test,613,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1027,2,['test'],['test']
Testability,"Forgot to install libglew-dev on a new system, cmake is OK but when compiling, an error on the fact that gl/glew.h could not be found. Some time ago, it had been decided that the gl subsystem will always need glew (it was optional before); But the cmake did not reflect this choice. Now cmake will complain if glew is not found (if SOFA_WITH_OPENGL is enabled of course!). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2358:912,test,test,912,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2358,2,['test'],['test']
Testability,Formatted spreadsheet of the benchmark result; [sparsematrixproductBenchmark.ods](https://github.com/sofa-framework/sofa/files/14458867/sparsematrixproductBenchmark.ods),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4547#issuecomment-1972798556:29,benchmark,benchmark,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4547#issuecomment-1972798556,1,['benchmark'],['benchmark']
Testability,"Forward declare a class, so that avcodecs headers are only required when compiling the cpp.; That way, this header can be included even if FFmpeg headers are not in context (which lead to compilation failure). --> Can this change be also backported to 18.06 branch ?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/752:519,test,test,519,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/752,2,['test'],['test']
Testability,"Found it, this is my fault (sorry):. - we have some mappings implemented in python in Compliant; - setting up the mapping uses scipy, which is not the expected version on some plateform (mostly osx for now), which triggers a python error; - the python code returns to c++ before having a chance to finish the test and keeps going on forever. I fixed the offending script, assuming it is the only one. I'll monitor the builds to see if there's more. I'll try to add some mechanism to detect uncaught python exceptions during test execution, and fail the script should this happen. With all my apologies for killing the CI engine :-/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289499063:309,test,test,309,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289499063,2,['test'],['test']
Testability,"Found out that Eigen3 in Fedora 29 installs a `FindEigen3.cmake` that do not set the imported target **Eigen3::Eigen**, resulting in CMake failure when compiling SOFA or linking against it. ```; $ dnf locates /usr/share/cmake/Modules/FindEigen3.cmake; eigen3-devel-3.3.5-2.fc29.noarch : A lightweight C++ template library for vector and matrix math; Repo : fedora; Matched from:; Filename : /usr/share/cmake/Modules/FindEigen3.cmake; ```. There is also third party software that install their own, such as CGAL:. ```; $ dnf locates /usr/lib64/cmake/CGAL/FindEigen3.cmake; CGAL-devel-4.13-0.2.beta1.fc29.x86_64 : Development files and tools for CGAL applications; Repo : fedora; Matched from:; Filename : /usr/lib64/cmake/CGAL/FindEigen3.cmake; ```. Hence to avoid any of those, it is safer to set the NO_MODULE options to `find_package(Eigen3)` to look for **Eigen3Config.cmake** instead, which always define the imported target. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1348:1181,test,test,1181,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1348,2,['test'],['test']
Testability,"Found while investigating https://github.com/sofa-framework/sofa/discussions/2815. Tangents and bitangents were of type Vec3d but was set as float while setting the OpenGL buffer.; This rises the problem of data for visual things. This PR is only for fix, but it would make sense to template the VisualModelimpl to have either everything in float (for speed) or double (for precision). Not related, but I put references and some cleanings here and there in VisualModelimpl (while investigating the problem). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2855:1047,test,test,1047,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2855,2,['test'],['test']
Testability,"From Clang12 & gcc11. Mostly warnings about ; - signed int to unsigned int (and vice versa); - invertMatrix return value was not retrieved (replace with an assert for the moment but exceptions would be a better way); - deprecated things. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2378:156,assert,assert,156,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2378,3,"['assert', 'test']","['assert', 'test']"
Testability,From my above remark we should make a test,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4848#issuecomment-2265444735:38,test,test,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4848#issuecomment-2265444735,1,['test'],['test']
Testability,"From what I understand, we have 2 different topics here. 1. cut dependencies to SofaTest, which I totally approve. This point reaches consensus I think. I don't see anything that can go against the merge of this PR in this topic. 2. split unit tests and functionnal tests; This is a different topic and should be discussed in a separate issue. Anyway my 2 cents about this:; - obviously this is a good idea. I cannot push forward enough this idea.; - just keep in mind that these unit-tests should remain FAST to run, since they will be run at each build. (ie. the filemonitor tests, for example, should be refactored to spend less than 10 seconds to run otherwise they will soon become a pain). To resume my point of view:; 1. merge this PR first; 2. communicate around the fact that tests should not rely on SofaTest anymore (when possible) ==> why not log a warning or ""deprecated"" message when using SofaTest utilities ?; 3. progressively cut unit tests from SofaTest, on-the-go. In parallel, open the ""always run unit-tests"" discussion on a separate topic.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/471#issuecomment-339258700:244,test,tests,244,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/471#issuecomment-339258700,8,"['log', 'test']","['log', 'tests']"
Testability,"FromImage.cpp.o; ""_readImage(char const*)"", referenced from:; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; ""ImageIO_alloc(unsigned long)"", referenced from:; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; ""CGAL::Image_3::private_read(point_image*)"", referenced from:; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, double>, sofa::defaulttype::Vec<3, double>, double>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; cgal::MeshGenerationFromImage<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float>, sofa::defaulttype::Image<unsigned char> >::update() in MeshGenerationFromImage.cpp.o; ld: symbol(s) not found for architecture x86_64; ```. This file is only included if the image plugin is activated, thus making this error appear only in specific cases. Moreover, since CGAL seems not tested on CI, this error might be quite old, as it has passed under the radar so far. It has been observed on OS X, and Linux. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/352:2348,test,tested,2348,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/352,1,['test'],['tested']
Testability,"Function is too long and complex. It needs to be divided. This is not finished, but it's better than before. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5079:648,test,test,648,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5079,2,['test'],['test']
Testability,Further #1834 : . Tests: merge SofaTests with Sofa.Testing; Make sure that examples (see in Plugin Example : https://github.com/sofa-framework/sofa/blob/master/applications/plugins/PluginExample/PluginExample_test/MyBehaviorModel_test.cpp) and doc are up to date: https://www.sofa-framework.org/community/doc/contributing-to-sofa/writing-tests/. Connected to #417 #489. and PRs: #455 #471,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1885:18,Test,Tests,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1885,3,"['Test', 'test']","['Testing', 'Tests', 'tests']"
Testability,"Further tests: if LTO is not enabled, then it does not crash as well, so the culprit would be something about the optimizer/vectorizer 🧐",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4180#issuecomment-1730804223:8,test,tests,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4180#issuecomment-1730804223,1,['test'],['tests']
Testability,Further to #1397 fix compilation in :; - Geomagic; - VolumetricRendering. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1428:325,test,test,325,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1428,2,['test'],['test']
Testability,"Further to #2300 and issue was noticed in #2392 : texture coordinates of the OglModel were not updating anymore from parent (InterpolationEngine recomputing the tex coord) since the link was broken. It has been decided that if dynamic tex coordinates are managed by the parent component the option `handleDynamicTopology=""0""` could be used. The two corresponding scene are changed here. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2445:926,test,test,926,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2445,2,['test'],['test']
Testability,"Further to #2719 I noticed missing description in HexahedronFEMForceField. I therefore merged the descriptions for both linear elastic codes on Hexa and Tetra. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2740:699,test,test,699,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2740,2,['test'],['test']
Testability,"Further to #4603 ; It appears that several hyperelastic materials are not passing the tests:; - Ogden + Mooney-Rivlin for PK2; - Costa for the Hessian-ElasticityTensor. This has to be investigated.; Code initially written by Epione team, maybe contact Hervé.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4605:86,test,tests,86,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4605,1,['test'],['tests']
Testability,Further to PR #1269 warnings were added in the core of SOFA.; This PR fixes these warnings due to deprecated formats and unused variables. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1329:390,test,test,390,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1329,2,['test'],['test']
Testability,Further to a discussion with @alxbilger and @ChristianDuriez ; Some check is performed in LocalMinDistance leading to possible null determinant. Case: two adjacent lines (with a common vertex) then of collide lines will coincide; However I do not see how to prevent / sort this before `LocalMinDistance::testIntersection()`. BruteForce::canIntersect → MemberElementIntersector::canIntersect() → LocalMinDistance::testIntersection(),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2077:304,test,testIntersection,304,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2077,2,['test'],['testIntersection']
Testability,"Further to discussions about #3999. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4046:575,test,test,575,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4046,2,['test'],['test']
Testability,"Further to discussions with @alxbilger and maybe in #3912. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4128:598,test,test,598,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4128,2,['test'],['test']
Testability,"Further to dummy question to @fredroy :). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3172:581,test,test,581,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3172,2,['test'],['test']
Testability,"Further to https://github.com/sofa-framework/sofa/discussions/5030 I thought it would be good to have some regression on RK4. [ci-depends-on https://github.com/sofa-framework/Regression/pull/71]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5036:735,test,test,735,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5036,2,['test'],['test']
Testability,"Further to investigation for #1551 minor clean, but let's share them!. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1571:610,test,test,610,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1571,2,['test'],['test']
Testability,"Further to merge of both #4059 and #4019 . Can be fast merged @fredroy . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4094:612,test,test,612,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4094,2,['test'],['test']
Testability,"Further to renaming of FixedConstraint into FixedProjectiveConstraint ( https://github.com/sofa-framework/sofa/pull/4302 ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4764:663,test,test,663,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4764,2,['test'],['test']
Testability,"GKRAND support allows the portability of random number generation across different architectures, hence a portable matrix factorization. It is supposed to fix the tests in https://github.com/sofa-framework/sofa/pull/3050. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3072:163,test,tests,163,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3072,3,['test'],"['test', 'tests']"
Testability,"GLDouble is defined in SolidTypes. ; I assume this is because of the writeOpenGLMatrix method. . But, such design is wrong because we don't want and shouldn't have a dependency to opengl.; So either we need to really know GLdouble to implement writeOpenGLMatrix... in that case writeOpenGLMatrix; should become a free function moved to some ogl packager which do the proper include to Opengl.h. . Or we don't care so much about GLdouble and in that case we juste use ""double"" instead. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3060:1024,test,test,1024,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3060,2,['test'],['test']
Testability,GUI to be tested by some else (me?),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3027#issuecomment-1162867893:10,test,tested,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3027#issuecomment-1162867893,1,['test'],['tested']
Testability,"GenerateRigidMass was marked to be moved from SofaGeneralEngine to Sofa.Component.Engine.Transform, but it is actually in Sofa.Component.Engine.Generate. Thanks to @EtienneMenager for reporting the issue. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3560:744,test,test,744,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3560,2,['test'],['test']
Testability,"Generating a lot of warnings because those files are pretty much included by everybody. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1681:627,test,test,627,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1681,2,['test'],['test']
Testability,"Given a link to the topology, link to the corresponding mechanicalObject and a boundingBox. The component will remove all elements (topology and dofs) going outside from this boundingbox. **-> Any better name suggestion is welcomed.; -> if this component is not useful in SOFA, abort the PR. otherwise I will add more comments in the header.**. Example of use:; ```; <MechanicalObject src=""@../grid_1"" name=""Volume"" />; <TetrahedronSetTopologyContainer name=""Tetra_con"" src=""@../Beam_generator_01/Container""/>; <TetrahedronSetTopologyModifier name=""Modifier"" />; <TetrahedronSetGeometryAlgorithms name=""GeomAlgo"" template=""Vec3d"" drawTetrahedra=""1"" drawScaleTetrahedra=""0.8""/>; ; <TopologyBoundingTrasher box=""-40 -40 -50 50 50 50"" topology=""@Tetra_con"" drawBox=""1"" position=""@Volume.position""/>; ```. Video of the result of a tissue falling in 3D:; **Right now in SOFA:**; ![ezgif com-gif-maker(1)](https://user-images.githubusercontent.com/21199245/129875985-79e1c469-46ae-459a-a6af-306be7effdf2.gif). **Using the trasher!**; ![ezgif com-gif-maker](https://user-images.githubusercontent.com/21199245/129875812-e2e6af18-bde2-4d76-89ac-3d4369bdc184.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2288:1694,test,test,1694,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2288,2,['test'],['test']
Testability,"Given that BaseClass is to describe Base* object and that Link can only hold Base* either it make sense to returns Base* from dynamicCast as well as from findLinkDest. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1700:709,test,test,709,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1700,2,['test'],['test']
Testability,"Given that the 20.12 release is on its way we can probably update the tests to the new value. Reminder of the convention:; TypeInfo::GetTypeName() => is a string representing the type as seen from c++, eg: vector<Vec<double, 3>>; TypeInfo::name() => is a string representing the type with as much as short cut, eg: vector<Vec3d>. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1709:70,test,tests,70,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1709,3,['test'],"['test', 'tests']"
Testability,Given the implement is highly questionnable (testing on string representation) I suggest to remove it and if some needs pop's up then propose a new implementation.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2694#issuecomment-1054572287:45,test,testing,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2694#issuecomment-1054572287,1,['test'],['testing']
Testability,Giving more info: it was not supported for Ubuntu2004 while I implemented this feature in BeamAdapter. https://github.com/sofa-framework/BeamAdapter/actions/runs/2880398323; (no more logs unfortunately),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3358#issuecomment-1275425441:183,log,logs,183,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3358#issuecomment-1275425441,1,['log'],['logs']
Testability,"Glut is a deprecated library and in my opinion, should be not used anymore. (not compatible with newer version of OpenGL, etc); It can be replaced with GLFW to create quick graphical applications. This first PR is moving the SofaGuiGlut to the applications directory, in case any people are still using it.; Actually, the code was not compatible with the current SofaGui API and was not compiling.; The code is now compilable and launchable anyway. Any reference to Glut are removed from the SofaFramework (header, CMake) and from runSofa. Lastly, a replacement using gflw will be pushed in the near future, for people wishing to have a simple GUI without the heavy-duty Qt Framework. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/598:936,test,test,936,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/598,2,['test'],['test']
Testability,"Gmsh seems to export an edge list along with the tetrahedron list. This list is not the list of all the edges contained in the tetrahedrons, but only a subset (the most important?). See in the 'before' video what edges are exported.; When the topology is computed, it sees that a list of edges is already there. At some point, it loops over the edges in the triangles and cannot find an edge in the edge list. Which makes sense because the edge list is only a subset.; Instead of stopping and returning an error. I suggest to add the missing edges in the list. Before:. https://user-images.githubusercontent.com/10572752/149795361-2bda98ea-3b3f-4ad0-bf72-eed7d3119360.mp4. After:. https://user-images.githubusercontent.com/10572752/149795490-b660cfea-ac5d-4804-b269-2eda829f6acf.mp4. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2607:1323,test,test,1323,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2607,2,['test'],['test']
Testability,"Good afternoon!; This PR proposes a fix for a crash when loading a vtk file that was generated by Gmsh. `; myNode.createObject('MeshVTKLoader', name='loader', filename='gmshMesh.vtk'); myNode.createObject('TetrahedronSetTopologyContainer', src=""@loader""); `. The mesh generated by default with Gmsh gives a list of edges and triangles that is incomplete and contains only edges and triangles on the boundary of the mesh. However the list of Tetrahedra is complete. This leads to a crash when using a TetrahedronSetTopologyContainer.; This PR tries to address this problem. Cheers!; Olivier. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1008:842,test,test,842,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1008,2,['test'],['test']
Testability,Good catch @bakpaul. I made a PR on your branch to also restore the corresponding unit tests. See https://github.com/mimesis-inria/sofa/pull/17,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2332#issuecomment-916019297:87,test,tests,87,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2332#issuecomment-916019297,1,['test'],['tests']
Testability,"Good for me! Setting to 'ready'. ; If you have the time, add unit tests for your changes. It could be in another PR.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2527#issuecomment-993262350:66,test,tests,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2527#issuecomment-993262350,1,['test'],['tests']
Testability,"Good news, the mstate is already a link:. https://github.com/sofa-framework/sofa/blob/07119acb36dad5526e6af1c8e25190be2b575b57/SofaKernel/modules/SofaCore/src/sofa/core/behavior/ForceField.h#L228. Hence, you could simply do something like this:; ```cpp; template<class T>; static bool canCreate(T*& obj, objectmodel::BaseContext* context, objectmodel::BaseObjectDescription* arg); {; // Get the mechanical state link path set in the scene by the user; std::string requested_mstate_path = arg->getAttribute( ""mstate"", """");; ; // Get the mechanical state from the path; const auto * mstate = dynamic_cast<MechanicalState<DataTypes>*>(; PathResolver::FindBaseFromPath(context, requested_mstate_path); );; ; // If a mechanical state path was specified but could not get resolved (ex. is not of the same datatype, or simply if the path isn't good); if (!requested_mstate_path.empty() && !mstate) {; if (!PathResolver::CheckPath<BaseState>(context, requested_mstate_path)) {; arg->logError(std::string(""Unresolved path to a mechanical state ('"") + requested_mstate_path + ""')."");; } else {; arg->logError(std::string(""The specified mechanical state ('"") + requested_mstate_path + ""') was found but its datatype is not "" + DataTypes::Name() + ""."");; }; return false;; }; ; // If no mechanical state specified, try to find one in the current context node; if (!mstate) {; mstate = dynamic_cast<MechanicalState<DataTypes>*>(context->getMechanicalState());; }; ; if (!mstate) {; arg->logError(std::string(""No mechanical state with the datatype '"") + DataTypes::Name() + ""' found in the current context node."");; return false;; }. arg->setAttribute(mstate->getPathName());; return BaseObject::canCreate(obj, context, arg);; }; ```. Maybe @damienmarchal could validate if the usage of the `PathResolver` is correct here, I didn't find any documentation on these methods ;-)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1506#issuecomment-705015621:975,log,logError,975,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1506#issuecomment-705015621,3,['log'],['logError']
Testability,"Good to me, tests are always welcome :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/268#issuecomment-302633096:12,test,tests,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/268#issuecomment-302633096,1,['test'],['tests']
Testability,Good to me.; Just a small note that in a future PR it would be better to test if the componentState is Valid before drawing.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1480#issuecomment-693275647:73,test,test,73,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1480#issuecomment-693275647,1,['test'],['test']
Testability,"Got a GlError() somewhere else and finding where it came from was a pain...; It appears that drawLines (version with multiple colors) was incorrectly implemented, as it was calling setMaterial/resetMaterial between glBegin()/glEnd() and this is not possible apparently because those 2 functions call glDisable() and glDepthMask() and it is not possible to call them between glBegin/glEnd. (yes old OpenGL is... marvelous). Anyway this PR regroups the lines per color and call the drawLine() with one color. Implementation with map is not nice IMO but all the DrawTool implementation itself is, anyway. \+ UnilateralInteractionConstraint was calling twice saveLastState(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3260:1211,test,test,1211,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3260,2,['test'],['test']
Testability,"Got a missing linker reference to pthread with my configuration.; I suppose this does not appear on the CI because of some differences in the cmake config (packages?). Related to the removal of boost::thread which was doing the job for everybody before. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2302:793,test,test,793,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2302,2,['test'],['test']
Testability,"Got some crashes on some simulations, when trying to unload them.; Here's the fix. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1445:334,test,test,334,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1445,2,['test'],['test']
Testability,Great thank you :+1: ; [ci-build][with-scene-tests],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/617#issuecomment-376551497:45,test,tests,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/617#issuecomment-376551497,1,['test'],['tests']
Testability,Great...shouldn't the test scene become a test to detect future regression ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/406#issuecomment-329785483:22,test,test,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/406#issuecomment-329785483,2,['test'],['test']
Testability,"H_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /home/giang/sofa/build/install; Adding library Sofa.Config; Using legacy headers is enabled.; Headers from v21.12 are usable, but it is advised to change your code to use the new headers introduced in v22.06.; Adding library Sofa.Compat; Adding library Sofa.Component.Compat; Adding library Sofa.Type; Adding library Sofa.Geometry; Adding library Sofa.Topology; Adding library Sofa.Helper; Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; Found Json: /home/giang/sofa/src/extlibs/json (Required is at least version ""3.1.2"") ; Found STB: /home/giang/sofa/src/extlibs/stb ; Found DIFFLIB: /home/giang/sofa/src/extlibs/difflib ; Adding library Sofa.LinearAlgebra; Adding library Sofa.DefaultType; Adding library Sofa.Core; Adding library Sofa.Simulation; Adding library Sofa.Simulation.Core; Adding library Sofa.Simulation.Common; Adding library Sofa.Simulation.Graph; Adding library Sofa.Testing; Found PythonInterp: /usr/bin/python (found version ""3.8.10"") ; Looking for pthread.h; Looking for pthread.h - found; Performing Test CMAKE_HAVE_LIBC_PTHREAD; Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; Check if compiler accepts -pthread; Check if compiler accepts -pthread - yes; Found Threads: TRUE ; Adding library Sofa.Framework; Adding module Sofa.Component; Adding module Sofa.Component.ODESolver; Adding module Sofa.Component.ODESolver.Forward; Adding module Sofa.Component.ODESolver.Backward; Adding module Sofa.Component.IO; Adding module Sofa.Component.IO.Mesh; Found ZLIB: /usr/lib/x86_64-linux-gnu/libz.so (found version ""1.2.11"") ; Adding module Sofa.Component.Playback; Adding module Sofa.Component.SceneUtility; Adding module Sofa.Component.Topology; Adding module Sofa.Component.Topology.Container; Adding module Sofa.Component.Topology.Container.Constant; Adding module Sofa.Component.Topology.Container.Dynamic; Adding module Sofa.Component.Topology.Container.Grid; Adding module Sofa.Component.Topol",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:1830,Test,Testing,1830,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815,1,['Test'],['Testing']
Testability,Haha no surprise tests didn't worked :),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3278#issuecomment-1238968104:17,test,tests,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3278#issuecomment-1238968104,1,['test'],['tests']
Testability,Happened after migration to Let's Encrypt SSL certificate on sofa-framework.org. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/236:306,test,test,306,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/236,1,['test'],['test']
Testability,"Happening on **clang ONLY** (linux or mac, same) . Kind of 'mysterious' behavior happened here: https://github.com/sofa-framework/sofa/blob/65a54acb1d47c09acf294333ddfb5a5d57c1d0fe/SofaKernel/modules/SofaCore/src/sofa/core/topology/Topology.h#L86. core::topology::InvalidEdge was getting (0,0) instead of the expected (invalidID, invalidID). _Assumption (really just guessing)_; the inline static initialization (with clang) is done through a first stage compilation where the default constructor of Edge has not been generated yet, hence calling a (really) default constructor initializing array with a zero-initialization. ; One hint came from the fact that if I switched the inline static init in the h, with a ""classical"" static declaration in h + initialization in the cpp, it was correctly initializing InvalidEdge with (invalidID, invalidID)... Instead of just reverting to the classical static init, I have put all those inline static to constexpr members, leading to the fact that fixed_array's default constructor was not constexpr (forgotten 😗); Anyway, now everything is constexpr and the inline static initialization is correct now.... Bear in mind that it seems that GCC and MSVC are different than CLANG in that regard. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2357:1774,test,test,1774,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2357,2,['test'],['test']
Testability,Haptic scenes behavior has been changed by PR #1369 ; Modify them to match the old behavior. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1435:344,test,test,344,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1435,2,['test'],['test']
Testability,"Hard coding interaction in core component is not a good software design as it couple the behavior of a component and how it is used in the context of a specific interactive scene. . This PR remove this behavior and warns users. To avoid re-implementing things no one use, it is requested in the deprecation message that user need to report if they miss the feature so so we can restore it but with the proper software design. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4163:967,test,test,967,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4163,2,['test'],['test']
Testability,"Harmless (already tested) and needed for v21.06.01 :rocket: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2373:18,test,tested,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2373,3,['test'],"['test', 'tested']"
Testability,"Harmless PR to clean the logs when packaging on MacOS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2120:25,log,logs,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2120,3,"['log', 'test']","['logs', 'test']"
Testability,Have you tested it with different versions of gmsh format @Younesssss?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3030#issuecomment-1151544065:9,test,tested,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3030#issuecomment-1151544065,1,['test'],['tested']
Testability,"HeadlessRecorder is, as its name suggest, a new gui plugin who allow users to records sofa visualisation without any windows (batch only). ⚠ Linux only ⚠. https://github.com/sofa-framework/sofa/issues/537. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/538:457,test,test,457,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/538,2,['test'],['test']
Testability,"Hello ! ; I've read your PR and I am currently compiling it on my side to test the GUI and the Modeler. . Some changes will need to be performed in order to accept your PR : ; 1. You have added some commented code that need to be removed. ; 2. You have expended the namespaces of some files, which is not in accordance with our standard, it is certainly your IDE. But could you please revert those changes ? ; 3. You have set default value to attributes directly in the class declaration, this should be done only in the constructor. ; 4. You have made some breaking changes: for instance, you removed the call to the superinit of ConfigurationSetting. Do you have any justification for that ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4673#issuecomment-2097577135:74,test,test,74,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4673#issuecomment-2097577135,1,['test'],['test']
Testability,"Hello @ChristianDuriez,. I've been discussing the sparse matrix issue with @matthieu-nesme for some time now. Here are some thoughts on the subject. The biggest issue with sparse matrices is that there is no silver bullet representation that covers everyone's needs: some people like it compressed (row/column), others like to have small dense chunks instead of single floating points, and so on. In particular, I see two major orthogonal uses of sparse matrices:; 1. getting matrix data out of components; 2. working with sparse matrices (linear algebra, factorization, assembly). It is not at all obvious that the two operations should use the same representation, and in fact I would argue against it. For instance in the Compliant plugin, we use Eigen sparse matrices for everything, and end up doing a lot of work in order to shift matrix blocks around which is tedious and costly. I've been toying around with alternate designs, and the simplest I found so far is to use a plain old vector of triplets (row, column, value) for fetching matrix data. More precisely, mappings/forcefields directly `push_back` matrix data into a `std::vector<Eigen::Triplet<SReal> >` through a `std::back_insert_iterator`. With this design the caller is then responsible for structuring the sparse data further (sorting/converting to CSR, shifting rows/columns, handing over to another library, etc) Of course this approach is tailored for our needs and might not fit others, and performance-wise it needs thorough benchmarking anyways, but I think that using separate data structures for *getting the data* and *working with the data* instead of a single structure is the way to go.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/26#issuecomment-292248716:1501,benchmark,benchmarking,1501,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/26#issuecomment-292248716,1,['benchmark'],['benchmarking']
Testability,"Hello @alxbilger, @fredroy, @hugtalbot . Here is a quick test around the idea we discussed during the today's sofa dev meeting: https://godbolt.org/z/9f1z4nbfq",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3126#issuecomment-1232800715:57,test,test,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3126#issuecomment-1232800715,1,['test'],['test']
Testability,"Hello @damienmarchal . I tried to execute tests manually using python. And I got import errors like:; _Traceback (most recent call last):; File ""test_mass.py"", line 8, in <module>; from SofaTest.Macro import *; ImportError: No module named SofaTest.Macro_; or; _Traceback (most recent call last):; File ""test_MeshLoader.py"", line 1, in <module>; import SofaPython.MeshLoader; ImportError: No module named SofaPython.MeshLoader_. It seems I should attach some additional modules (plugins), but I don't know what exactly I should do.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/400#issuecomment-329773331:42,test,tests,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/400#issuecomment-329773331,1,['test'],['tests']
Testability,"Hello @hugtalbot,. Actually I'm not really in favor of merging this PR and view it as a compiling (and regression test) draft that I wanted to share so we can discuss. . Before discussing about having a naming convention to me the real question is to ask ask ourself if we want to have all the forward declarations in a single file on a per sofa module basis or not :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1509#issuecomment-706166486:114,test,test,114,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1509#issuecomment-706166486,1,['test'],['test']
Testability,"Hello @sofa-framework/reviewers . Yes, we are taking SOFA-NG project up again :tada: ; Thanks to @fredroy we now have at least 1 engineer working on this project every day :+1:; This issue is meant to be the main follow-up of the project, complementary to #543 (still a good read). ## Objectives. The final objective of SOFA-NG is to refactorize the current (non-core) modules and components by moving them into plugins. It will permit to:; - compile and load only the modules we want; - clean all dependencies in SOFA; - help focusing the work of validation/verification/doc/test on specific codes; - improve the packaging of codes; - ease understanding the API of SOFA for new users; - cleaning the applications/plugins repository. ## Tasks. Here are the main steps of the project.; Tasks NG1 and NG2 can be done in parallel if we work ""bottom->top"" in NG1 and ""top->bottom"" in NG2.; Task NG3 can also be started in parallel. We need to iterate on the architecture proposal to refine it as much as possible before steps NG1 and NG2 are over.; Task NG4 cleaning the applications/plugins repository in order to better handle code lifecycle. ### NG1: Simplify headers dependency graph by removing un-needed includes. 1. SofaKernel; - clean/rewrite/reorganize SofaHelper and SofaDefaulttype #1521 ; - remove completely useless files. <img src=""https://user-images.githubusercontent.com/11028016/106575747-b3910180-653c-11eb-8f43-6ec65390ce2f.png"" width=""350"" > &nbsp; <img src=""https://user-images.githubusercontent.com/11028016/106575725-ae33b700-653c-11eb-89e3-4bdeae912a94.png"" width=""350"" >. 2. Other modules (SofaGeneral, etc); - clean deps (useless includes, use lower level objects, etc), linked with the following NG2 actually. SOFA modules dependency (library link) graph: https://www.sofa-framework.org/graph/. *clang tools?*; *include-what-you-need?*. ### NG2: Pluginize all SOFA modules; Pluginizing a module = making it a [CMake Package](https://cmake.org/cmake/help/latest/manual/cmake-pac",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1527:576,test,test,576,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1527,1,['test'],['test']
Testability,"Hello Bruno,. Thanks for the work done, I fully agree that this is needed. . I don't understand the need for MODULE_SOFASPARSESOLVER. This is a module/plugin so is the classic find_package(SofaSparseSolver) then (SofaSparseSolver_FOUND) not enough ?; It should be the same with SofaPython. Its availability should be tested with find_package(SofaPython). . Now about the other defines that are not related to module or plugin, it is of course important to export them properly in the SofaFramework package.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/927#issuecomment-462713812:317,test,tested,317,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/927#issuecomment-462713812,1,['test'],['tested']
Testability,"Hello Erik,. I don't know there is no so much places where I consider the tests well written :); I like the following:; - vector_test.cpp and Utils_test.cpp are interesting because they use the INSTANTIATE feature of gtest; - SimpleApi_test.cpp is interesting especially the ""SimpleApi_test::testParamString"" as it use the c++ api equivalent to the python one to create dynamic scenes. ; - BaseContext_test is also interesting because it inherit the test from BaseSimulationData",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/701#issuecomment-400579740:74,test,tests,74,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/701#issuecomment-400579740,3,['test'],"['test', 'testParamString', 'tests']"
Testability,"Hello Eulalie,. - `isRequired()` should be true by default [OK]; - `hasDefaultValue()` should be true by default as well [OK]; - `setRequired(false)` should also change things so that `hasDefaultValue()` returns false ; To me this is independant; - current `setRequired(true)` should be replaced by `setHasDefaultValue(false)` or something like that... ; Same here, the two things are separated I don't see why we should couple them. . - in BaseObject::init() print a warning/error message...; I was more thinking for `if (data->isRequired() && !(data->hasDefaultValue() || data->isSet()) )`; So the message prints if the field is required (i.e not optional) and there is neither a default value nor a user provided data. . - finally update the GUI to handle `hasDefaultValue()` and display an empty field if it returns false; actually in my tests I tried with a ""light gray text"" showing something like: ""<optional, type to set>""; ; I think one PR could be done to implement the described behavior in Data.h including tests for then ; then a second one update the runSofa widgets so they can take profit of that.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1675#issuecomment-767133475:842,test,tests,842,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1675#issuecomment-767133475,2,['test'],['tests']
Testability,"Hello Everyone,. @ziqiu-zeng noticed compilation errors in the CGALPlugin with the latest changes in SOFA. Here are the quick fixes we came up together. Please let us know if anything else should be needed. Pedro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2065:753,test,test,753,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2065,2,['test'],['test']
Testability,"Hello François (@fjourdes),. Thank for the long and interesting reply. . Your last comment rise an interesting question related to differentiating unittest to functionnal tests. ; Currently in Sofa we don't make any distinction between unit test and functionnal test but my thinking is that in general utility classes have unit tests while components have functional tests . Making the distinction would be indeed better so the question is how to get there from where we are a now. Here is a proposal. ; In the current PR there is a ```BaseTest``` and ```BaseSimulationTest```, this could actually be transformed without too much effort into UnitTest and FunctionalTest. The tests inheriting from UnitTest shouldn't use the factory in any way and shouldn't have external dependencies. The test in-heriting from FunctionalTest should use the factory and can make the assumption that specific plugins are loaded. We could event go one step further and emphasizing things by having two set of file, ones named *MyClass_unittest.cpp* and *MyComponent_functionaltest.cpp* and in our CMakeLists.txt compile the two set of tests separately with different build targets. This would make things very clear, be compatible with your workflow where unit test are considered as compilation failure, be compatible with our workflow where functional tests are used because they allow to get decent code coverage and last point as it would use the loose coupling approach it would totally cut the dependency at compile time to SofaTest. . Small note, some Functional tests may rely on components implemented in plugins. I have not clear view if we should disable the test if the plugin is not there or if we should make it fails or if we should ""disable"" it at runtime. . EDIT: changes some sentences.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/471#issuecomment-337536552:171,test,tests,171,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/471#issuecomment-337536552,12,['test'],"['test', 'tests']"
Testability,"Hello François, . Here is a summary of my current understanding of your comments. ; It seems that you want to:; 1 - cut the dependency to SofaTest; 2 - have a clear separation between unittest vs functionaltest; 3 - cut the dependency to SofaFramework (ie not having the test inheriting from SofaFramework/BaseTest or something like that) for the unittests. . Initially this PR was only about -1- cutting the dependency to SofaTest. My thinking is that the SofaTest dependency is a major problem for everyone using the master branch of sofa because of the high impact on code coupling. . About -2- Following your remarks I'm in favor of improving a more clear separation between unit-test and functional test but as this is something new and maybe this should discussed that in the ""issues"" section of github instead of inside a specific PR. . About -3- cutting the dependency to SofaFramework. This is something that was never discussed before and worse than that, up to now the general consensus that, as we are in Sofa, we should inherit from a single BaseTest that install all the may be needed to do the test. A good reason for this scenario is nothing related to Scene/Simulation management but because BaseTest provides a default handler for EXPECT_MSG_EMIT/NOEMIT. Of course if your code is not using at all those elements, then you should feel free to use gtest. . As said in previous comment compared to the current Sofa code base I would be very happy to have -1- and -2- done. . It seems that -3- is not a big deal for people using the CMakelists.txt from Sofa but it may be of importance for your specific workflow in which, if I understand your previous answers, you integrate unittest as compilation failure. Maybe you can provide us more details on your workflow so that we can see the drawback of having the tests written in SofaFramework to be inheriting from a BaseTest (which is also defined in SofaFramework). Damien.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/471#issuecomment-338697814:271,test,test,271,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/471#issuecomment-338697814,5,['test'],"['test', 'tests']"
Testability,"Hello Guillaume,. As you are in this kind of things...the solution to handle scenes that rely on plugins and that should be started only if the required plugin is there should be to generate the .test-scene file with the adequate ignore command from CMake. I can give it a try or, as you are fluent in Cmake you can do it :).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/575#issuecomment-360443780:196,test,test-scene,196,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/575#issuecomment-360443780,1,['test'],['test-scene']
Testability,"Hello Guillaume,. I'have mixed feeling. On one side I would like the sprint branch to be merged asap so that we can all start from this baseline and continue deprecating/pluginizing (I know bruno is waiting, as is the pluginization done during the STC) but, on the other side I dislike to merge things that fails. . Currently the base branch have several tests failing and I fixed all of them in #457. I'm not sure all of them are easy to cherry-pick so I would recommend to merge this one and immediately after merge the #457 so that master is not in a broken state for a long time. . Actually in #457 only one test remains to be fixed, the ""VariationalXXX"". This one was not in the base branch but appeared during the sprint. I have no idea what is wrong so if this speak to you @hugtalbot , @StephaneCotin, @ChristianDuriez please help. . So my opinion is that we should accept the risk of merging #453 and #457 in a row so that we can restart working from a shared code base and continue our work and deals with the breaking/regression introduced. ; It also have advantages as more people will try this branch we will have more feedback on the deprecation process.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/453#issuecomment-335416963:355,test,tests,355,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/453#issuecomment-335416963,2,['test'],"['test', 'tests']"
Testability,"Hello Hugo,. I disagree about your suggestion as this PR is not about binding GeometryAlgorithm's like object. . GeometryAlgorithm is inheriting from BaseObject. To use it you need the full Scene Graph and plenty of dependency to Base/BaseObject/Data/Link/SceneGraph/..... The underlying idea is to use them in ""your scene"" as part of your scene/simulation. But if you 'just' want to test intersection between ray/plane using GeometryAlgorithmes imply a lot of boilerplate code to manage the ""scene graph"" and baseobject management. . In this PR the target is not to expose GeometryAlgorithm in python, it is more to have a low-level API that propose geometrical object (c++ object, not BaseObject) and their associated operations as well as the corresponding binding to python. The key target of that this API is to be usable with as few as possible boilerplate code and without any scene graph/base/baseobject's folks. . So the SofaGeometry module proposed in this PR can be seen as 'one' level lower in the software stack that GeometryAlgorithm. The interest of this module is that it can be used as-is (API style), in C++ or in python. Of course it is possible to go one step further (in that case I suggest to do that in a different module and in a different PR) where the c++ object implemented in SofaGeometry are exposed in the SceneGraph by inhering from BaseObject. . Hope it is more clear.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/747#issuecomment-413541498:384,test,test,384,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/747#issuecomment-413541498,1,['test'],['test']
Testability,"Hello Hugo,. Thank for the PR. . There is currently no test at all to this component. ; It would be nice to add some before doing changes and validate the changes behavior.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/714#issuecomment-405875637:55,test,test,55,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/714#issuecomment-405875637,1,['test'],['test']
Testability,"Hello Maxime,. Thanks for the precise analysis that is really helpful as well as on tracking the 'hidden overheads' in sofa. . All that sound reasonable to me and I share your view that the cost hit of creating object in case of collision is a strong point for doing something. . Maybe people interested in this topic could experiment in a dedicated branch so that we have an alternative implementation as well as a real test benchmark illustrating the speedup (eg: an hardcoded component creating a huge amount of collisions). . Regards, ; DM.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/44#issuecomment-255351195:421,test,test,421,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/44#issuecomment-255351195,2,"['benchmark', 'test']","['benchmark', 'test']"
Testability,"Hello all, . I've added some modifications on this PR. . First I've created a new *Python* script in PythonSofa to make the use of the *AdvancedTimer* easier. Now, if you want to use it in a *Python scene*, the easiest way to do it is to use the script with the method *measureAnimationTime*. You will have to add this line: . ```py; from SofaPython import PythonAdvancedTimer; ```. at the beginning of your script. Then you have to add the method *bwdInitGraph(self, node)* method at least as the following:. ```py; def bwdInitGraph(self, node):; # It will call the simulationStep method too; PythonAdvancedTimer.measureAnimationTime(node, ""timerPoutre"", ; 2, ""ljson"", ""poutre_grid_sofa_timerLog"", 0.1, 1000); return 0; ```. If you already have defined a bwdInitGraph, you juste have to add the *measureAnimationTime()* method to get your scene analyzed. To use it by your own way, you can take a look at the *PythonAdvancedTimer.py* script. You'll find it in the *Sofa project* at *SofaPython/python/SofaPython/PythonAdvancedTimer.py*. Second, I've added two scripts to use the returned *light JSON* files of the *AdvancedTimer* : *TimerLJSONPlot.py* and *timerLjsonManyFilesPlot.py*. I've also added the documentation to informe future users how to use the *AdvancedTimer* and the plotting scripts. The tests will come soon. Thank you for your feedback @damienmarchal .",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/360#issuecomment-324669680:1306,test,tests,1306,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/360#issuecomment-324669680,1,['test'],['tests']
Testability,"Hello all,. This PR adds (hopefully) proper GIL handling to `SofaPython`, so that it is possible to run python threads concurrently with the main Sofa program. It enables the following scene to run concurrently with the main program: . ```python; def createScene(node):. from threading import Thread; import time; ; def target():; while True:; time.sleep(1); print(""it's aliiive!""); ; thread = Thread(target = target); thread.daemon = True; thread.start(). time.sleep(2); ```. This is achieved through the RAII class `PythonEnvironment::gil`, which is meant to protect the boundaries between c++ and python code as follows:. ```c++; // some function called from the c++ side; {; PythonEnvironment::gil lock;; // safely call python functions here: the GIL ; // is acquired and released automatically; }; ```. The trick is that the GIL should also be released prior to the first lock so that the last object to unlock the GIL gives an opportunity to python threads to run, if any. Otherwise, the main thread still holds the GIL after the last lock is destroyed, and python threads never get to run. This is a work in progress, but should be pretty harmless and easy to disable if something goes wrong. EDIT: it does not work on this branch :-/; ___________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/326:1491,test,test,1491,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/326,2,['test'],['test']
Testability,"Hello all,. While trying to disable some unused components/plugins from my setup in order to reduce compilation times, I discovered that SceneCreator depends on many base plugins, and that most test plugins depend on SceneCreator. This design makes it *really* hard to disable any plugin if somebody wants to compile tests for the remaining enabled plugins. I guess the ""correct"" way would be to split the SceneCreator features in each plugin so that you never pay for what you don't use (we're doing c++ after all :-). Any idea/feedback?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/417:194,test,test,194,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/417,2,['test'],"['test', 'tests']"
Testability,"Hello everyone,. I'm still not sure I fully understand the problem, but I'll describe it and PR a solution for discussion. When SofaCUDA is required as a dependency in an in-tree build, the CMake configure step is unable to locate `SofaCUDANvccFlags.cmake`. To reproduce the issue you may choose a dummy plugin (eg, [MyAwesomeComponents](https://github.com/sofa-framework/MyAwesomeComponents)), add to `CMakeLists.txt` and `*Config.cmake.in`:; ```; find_package(SofaCUDA REQUIRED); ```; And compile it in-tree.; I haven't tested how this goes in out-of-tree compilation. A really simple fix (PR ready) is to update the installation path SofaCUDANvccFlags.cmake to `build/lib/cmake` where it is surely found.; So in `SofaCUDA/CMakeLists.txt`:; ```; configure_file(SofaCUDANvccFlags.cmake ${CMAKE_BINARY_DIR}/lib/cmake/SofaCUDANvccFlags.cmake COPYONLY); ```. I understand though cmake config files should be placed and found on `build/cmake` and I do not know why it does not happen. Every insight will be much appreciated. Pedro",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2021:522,test,tested,522,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2021,1,['test'],['tested']
Testability,"Hello, . On that PR I recommand that some voluntary people, not involved in the refactoring, to add some additionals tests to see if their understanding match what is implementation.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/718#issuecomment-411334181:117,test,tests,117,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/718#issuecomment-411334181,1,['test'],['tests']
Testability,"Hello, Maxime,. Thanks a lot for the report. Appart from the unconventional way to test strings on my side I fully support the idea of removing the group by prefix feature for two reasons: the first one is that I prefer explicit things vs implicit one. . PS: you don't need to argue :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/528#issuecomment-347117728:83,test,test,83,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/528#issuecomment-347117728,1,['test'],['test']
Testability,"Hello,. A simple [blame](https://github.com/sofa-framework/sofa/blame/25f245b2383a86f097cabdea13697aa42665568e/modules/SofaConstraint/BilateralInteractionConstraint.cpp) shows the 2 commits where these values where last set:; https://github.com/sofa-framework/sofa/commit/bb99399cba47a95301025531577c2e3ac3f728ab; https://github.com/sofa-framework/sofa/commit/8b294f75884a0216ce26f5457b8689da57dd081a. They were done for a PhD work, tuning for specific cases but without giving real reasons in the log. So this is not something that was really meant to be preserved like that, indeed it does not make sense that the value is much higher for double that floats. But the actual refactoring that is needed is to expose this tolerance as a Data instead of hiding it within the code itself, so that it can be tuning within the simulations that require it instead of requiring a patch within Sofa. Ideally the value in the Data should preserve the current behaviour in order not to break existing scenes, possibly with the isRequired flag set such that others will know that they should set the value specifically instead of relying on the previously hidden and inconsistent default. Jeremie.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/45#issuecomment-257955683:498,log,log,498,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/45#issuecomment-257955683,1,['log'],['log']
Testability,"Hello,. Could you post the logs of the build with VS2022 ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4246#issuecomment-1774466757:27,log,logs,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4246#issuecomment-1774466757,1,['log'],['logs']
Testability,"Hello,. Here are a few remarks and suggestions regarding this topic:. 1. I would be wary about relying on performance measurements from a blog post that is 8 years old and does not mention the exact platform and compilers used. Thread Local Storage (TLS) is highly dependent on OS, ABI, compiler, flags. Here is for instance a quick test using compiler explorer: https://godbolt.org/z/6ObfHR.; 2. one usage requiring ExecParams to have a thread-local storage was to be able to do asynchronous loops (mainly simulation and rendering) with full access to the scene graph without copies, by using copy-on-write for large Data and having each thread be assigned a ""version"" (called ""aspect"" per the published work that was used). See the MultithreadGUI for an example of this mechanism.; 3. As far as I know, all asynchronous/external rendering engines integrations that are used with Sofa relied instead on a design where the Sofa scene graph is not exposed but only visual meshes (based on SofaPhysicsAPI), therefore this feature was never enabled/tested in real applications so it can make sense to remove it.; 4. It would be interesting to measure if there are any performance gained from just removing the TLS qualifier (as done in PR #1129). I expect it to not be measurable, but performances can be surprising, which is why any optimization efforts should measure before and after ;); 5. If the TLS part of ExecParams is removed, then you should also remove everything that depends on it: MultithreadGUI, ExecParams::threadID, aspectID, AspectPool, *AspectVisitor, DDGNode::currentAspect()/copyAspect()/..., and all the aspect-related features in Data and Link. Otherwise all these code will be silently broken by the change.; 6. Note that this also makes ExecParams itself a bit pointless. The initial rational was that this provides a thread-safe way to set parameters controlling all codes in such a way that even if it is not explicitly passed in to all API calls, it can be queried with ExecPa",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1147#issuecomment-532775748:333,test,test,333,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1147#issuecomment-532775748,2,['test'],"['test', 'tested']"
Testability,"Hello,. I was playing with SimpleGUI, and it did not compile with recent sofa::type changes.; Here are some fixes, so it can compile and run well with the latest release. Cheers,. Pedro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2274:726,test,test,726,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2274,2,['test'],['test']
Testability,"Hello,. PR of a small fix to #1731. I simply removed the debug message which seems to be left behind at the code. It should be compatible to both master branch and the latest release. Please let me know if I should create a PR to master instead. Cheers,. Pedro. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1732:801,test,test,801,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1732,2,['test'],['test']
Testability,"Hello,. Since we talked about it during the SofaDev meeting,; Here's our QuickNDirty answer to the make install fail for CImgPlugin.; Of course as-is it is not acceptable or mergeable but it's here. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/609:450,test,test,450,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/609,2,['test'],['test']
Testability,"Hello,. Thanks for the PR. I fully agree on generalizing more the 'delegate' pattern and this is a proper usecase. . - About the use of final (on the public api) and private (on the delegated part): both are the way to go. . - About testing privates methods:; In tests, shouldn't we prefer implementing tests using the generic interface, so by calling BaseForceField::addKToMatrix() on instance of BeamFEMForceField instead of writing tests for the specific BeamFEMFOrceFIeld::doAddKToMatrix(). I see a lot of added values of writing tests using the public API while testing private method of a delegated patterns are not obvious to me but. ; That's said if BeamFEMForceFIeld::doAddKToMatrix() is private and final, we can probably make it ""testable"" by having a friend class Test<BeamFEMForceField>; . In the code base we are making the use of this pattern obvious by using a specific naming scheme (XXXX -> doXXX). ; The intention what to make visually clear what part was part of the public API and what part was using the ""delegate"" pattern. ; As in: ; ```cpp; BaseData::beginEditVoidPtr() ; Data<T>::doBeginEditVoidPtr() ; ```. I think it would be worth to stick to the scheme for the following reasons: ; - it de-ambiguate the purpose of each of the function. With addKToMatrix(blabla) and addKToMapping(otherblabla) nothing indicates, at first glance, that the two are in fact not equivalent, and ones has to refer to code comment or documentation (if any) to get that a very specific design pattern is involved. Having addKToMatrix(blablag) and doAddKToMapping(otherblablab) makes it in the contrary cristal clear).; - using the ""do"" prefix also have the advantage that to the pattern is possible when the method's attributes are the same (In the PR using the same names works because the de-ambiguation is implicitly done through the different BaseMatrix and MechanicalParams). ; - more consistant codebase . Of course, this means renaming the the addKToMatrix but in that matter, earlier is ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4943#issuecomment-2340099920:233,test,testing,233,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4943#issuecomment-2340099920,8,"['Test', 'test']","['Test', 'testable', 'testing', 'tests']"
Testability,"Hello,; A very small PR to perform a check at the start of the doUpdate function to make sure the rest-position is defined and avoid a crash when it is not the case. This typically happens when calling init() on a boxROI in the SOFA scene without calling init() on the associated mesh loader for example. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1031:556,test,test,556,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1031,2,['test'],['test']
Testability,"Hello,; For the case of Rigid Mechanical Object (thus with position marked by the combination of a Vec3D and a quaternion for rotations), this PR adds a check if the quaternion is of unit 1 and normalizes it, if it is not. ; This PR does not handle the case when the user changes the value of the quaternion in the GUI. Cheerio. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/790:580,test,test,580,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/790,2,['test'],['test']
Testability,"Hello,; would it be possible to provide a simple test?; It seems there is no unit/scene/regression tests which are using Multi2Mapping and its `input2` apparently.; And by just looking at the code, I cannot see why `input2` would be impacted by #3665 as there is no `validator` for input2 😅; It would be much easier to track down the bug, thanks !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3705#issuecomment-1457371112:49,test,test,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3705#issuecomment-1457371112,2,['test'],"['test', 'tests']"
Testability,Hello. ; Does anyone knows how to run python tests in SOFA framework?. @hugtalbot . Thank you for information. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/400:45,test,tests,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/400,1,['test'],['tests']
Testability,"Hello. > Hi @sergeiNikolaev; > thank you for sharing your zip test. I think we will be able to work it out from here.; > TODO for me:; > ; > * Need a test in c++ for checking new functionality, to be implemented from py example.; > * Add an example in SOFA. My question is what test it is possible to write for Polynomial springs?; Personally me, I verified them by generating some data using the scene from .zip and then compare it visually with the polynomial result. But, I am not sure it is possible to perform the same stuff as a functional test.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-624616296:62,test,test,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-624616296,4,['test'],['test']
Testability,Hello. I made a test with the following scene. It actually pass in the current testing framework despite crashing upon loading in the GUI mode. ; ```; <?xml version='1.0'?>; <Node 	name='Root'>; <VisualStyle displayFlags='showForceFields'/>; <Node name='FEMnode'> ; <MechanicalObject/> ; <TetrahedronFEMForceField/> ; </Node>; </Node>; ```,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/79:16,test,test,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/79,2,['test'],"['test', 'testing']"
Testability,"Helper for the case where the user wants to use external cxxopts, as cmake does not provides a find module for cxxopts. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4538:659,test,test,659,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4538,2,['test'],['test']
Testability,"Helping newcomers with up-to-date information. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2741:586,test,test,586,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2741,2,['test'],['test']
Testability,"Here are a few fixes needed for SofaPython2 -> SofaPython3 transition on CI :+1:. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1829:621,test,test,621,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1829,2,['test'],['test']
Testability,Here are a few tests about following components :; - IndicesFromValues; - MergePoints. They should not disturb any others functionality of SOFA.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old (or has fast-merge label).; - [x] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/268:15,test,tests,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/268,2,['test'],"['test', 'tests']"
Testability,Here are all the changes made for v18.12 release.; Mostly CMake and CPack stuff. :warning: Notice the removal of all deprecated components [as planned in Changelog](https://github.com/sofa-framework/sofa/blob/master/CHANGELOG.md#deprecated). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/905:493,test,test,493,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/905,2,['test'],['test']
Testability,"Here are all the changes that were pushed directly to v20.12 to accelerate its delivery.; Mostly changes in packaging steps (CPack and postinstall scripts) for dependencies and RPATH management. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1804:734,test,test,734,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1804,2,['test'],['test']
Testability,"Here are binaries of this PR to test:; [Linux binaries](https://ci.inria.fr/sofa-ci-dev/job/sofa-custom/547/CI_CONFIG=ubuntu_gcc-7,CI_TYPE=release/artifact/build/SOFA_v20.06.99_Linux.zip); [Windows binaries](https://ci.inria.fr/sofa-ci-dev/job/sofa-custom/547/CI_CONFIG=windows10_vs-2017,CI_TYPE=release/artifact/build/SOFA_v20.06.99_Win64.zip)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1570#issuecomment-718797548:32,test,test,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1570#issuecomment-718797548,1,['test'],['test']
Testability,"Here are the changes I made for v19.06, mostly cleans and fixes. Important changes:; - [[SofaMacros] ADD version to each target properties](https://github.com/sofa-framework/sofa/pull/1114/files#diff-c271701edce37b698b29020065753857) ; - [[CMake] ADD post-install script for Linux](https://github.com/sofa-framework/sofa/pull/1114/files#diff-16510636c780c3f88d6aaeb73dc3a80d). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1114:628,test,test,628,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1114,2,['test'],['test']
Testability,"Here are the latest changes done directly in v20.06 branch to finalize the release. Main changes:; - [CMake] ADD SOFA_ENABLE_SOFT_DEPS_TO_SOFAPYTHON option (default is ON); When OFF, SofaPython will be added later during CMake generate so that all soft dependencies to SofaPython will be unsatisfied.; This is useful to generate binaries with at least SofaPython dependencies as possible.; - [CMake] FIX postinstall-fixup scripts call order; postinstall-fixup scripts are now in tools/postinstall-fixup and are included after all other parts of SOFA (even external directories); - [SofaMacros] FIX install dir for plugins with no INCLUDE_SOURCE_DIR; There was an issue with installed include directories introduced by #1397 ; - Backport #1428 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1432:996,test,test,996,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1432,2,['test'],['test']
Testability,"Here is a fix for issue: https://github.com/sofa-framework/sofa/issues/512. # Objectives; - add optional short argument ☑; - add more flexibility. We don't want to edit the main.cpp each time we want to add new arguments ☑; - simplifcation of ArgumentParser. We will use the boost program option ☑. # Changelog. - `ArgumentParser` completely changed. It's now using boost program option. It's better using existing things rather than creating our own implementation and maintain it; - `SceneCreatorBenchmarks.cpp ` use the new ArgumentParser; - `runSofa/Main.cpp` use the new ArgumentParser; - `BaseGUI.h` use the new ArgumentParser, and changed the way we can parse arguments.; - `BatchGUI` use the new ArgumentParser, and add argument registration; - `GUIManager.cpp` changed the api, removed initGUI (useless most of the time); - `gui/Main.cpp` use the new GUIManager function (replace the GUIManager); - `MultithreadGUI` use the new ArgumentParser and GUIManager; - `SimpleGUI` use the new ArgumentParser and GUIManager; - `RealGUI` use the new ArgumentParser and GUIManager. ## API Breaking. - `ArgumentParser` everything changed; - `BaseGUI` use the new ArgumentParser, and changed the way we can parse arguments.; - `GUIManager` changed the api, removed initGUI (useless most of the time). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/513:1548,test,test,1548,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/513,2,['test'],['test']
Testability,Here is a fix for the VideoRecorder broken since #1121 due to change in API and in CMakeLists. - Add findPackagae for ffmpeg since add_definitions does not propagate SOFA_HAVE_FFMPEG_EXEC above the caller project; - Change function initRecorder including both code extension and code name. Here you are @fspadoni ;). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1138:568,test,test,568,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1138,2,['test'],['test']
Testability,"Here is a new plugin which implements a beam force field component with plastic behaviour (to model nonlinear and permanent deformation). The general structure is inspired from the BeamFEMForceField component. At the moment, I kept the new component in a dedicated plugin (BeamPlastic), but I guess it could be moved to where the BeamFEMFF component already is (providing the PR is mergeable). Two pull-requested files (in applications/plugins/BeamPlastic/quadrature) were implemented by someone else and published under the open source Boost Software License 1.0 (BSL-1.0). I mentioned this in both files headers, but I don't know if the BSL-1.0 is compatible with the SOFA license. If not, these files can be removed and I can re-implement the corresponding methods (for reduced gaussian integration). The code compiles on my side, and the two provided example files work fine, but there are quiet a few things that could/should be improved (including unit tests). I have already noted some of them, but as this is my first PR I'm not familiar with how or where these should be discussed.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1618:959,test,tests,959,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1618,3,['test'],"['test', 'tests']"
Testability,"Here is a plugin communication ; The purpose of this plugin is to add ability to the users to simply send/receive data´s from sofa. Instead of creating many plugins for each implementation/hardware, we propose to regroup all of them in one communication plugin. . Actually there is two network protocol implemented : ; - OSC (has packet size limiations ...); - ZMQ. Improvements : ; - better thread safe implementation; - more types; - add others library implementation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/534:722,test,test,722,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/534,2,['test'],['test']
Testability,"Here is a quick summary of NG project evolution. A proof of concept for a minimal version of SOFA has been pushed: https://github.com/sofa-framework/sofa-minimal-poc. Multiple iterations were made on NG architecture: ; https://annuel2.framapad.org/p/sofang-v0; https://annuel2.framapad.org/p/sofang-v1; https://annuel2.framapad.org/p/sofang-v2; https://annuel2.framapad.org/p/sofang-v3. We converged towards a namespace oriented architecture splitted in two main parts: modules and plugins.; At the end, we want modules and plugins to be strictly identical in the way they are built. Same CMake behavior, same dependency handling. ; The only difference that make us separate the two is the way we see their proximity with SOFA core in a long term future.; modules = things that should stay in SOFA repository; plugins = things that should move to an external repository. Most of the work done has been offline testing and discussions on [Gitter](https://gitter.im/sofa-framework/sofa-ng). Different refactors and different CMake behaviors were tested, trying very hard not to break SOFA (or at least not too much). @damienmarchal wrote a tool to automatize refactoring (moved to a separated repo): https://github.com/guparan/sofa2ng; It is still in early state but will be the base of future works. Despite all this offline testing phase, the question of a clean and generic CMakeLists template for any module/plugin remains. I guess we will converge on this by actually doing the refactoring. Finally, I just opened a primary pull-request: https://github.com/sofa-framework/sofa/pull/620. Next steps will mainly focus on cleaning SOFA codebase to make further refactoring as easy as possible. See [previous comment](https://github.com/sofa-framework/sofa/issues/543#issuecomment-372626690) for specific tasks.; In parallel, Damien's tool shall be tested and improved to move on about the CMake questions.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/543#issuecomment-377283598:910,test,testing,910,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/543#issuecomment-377283598,4,['test'],"['tested', 'testing']"
Testability,Here is a very simple implementation that enable extra printing to help in understanding why some scenes are failing/crashing. . I also add few scenes with single solvers because those components where not tested anywhere in our CI. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/667:206,test,tested,206,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/667,3,['test'],"['test', 'tested']"
Testability,Here is an update of PluginExample to clarify how to create a deploy-and-share friendly plugin. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1053:347,test,test,347,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1053,2,['test'],['test']
Testability,"Here is another proposal to fix ExtVec warnings issue. When building with GCC:; - Deprecation warnings were displayed at every #include<sofa/defaulttype/VecTypes.h>; - They are now emitted only when using the ExtVec* typedefs (ExtVec3dTypes, ExtVec3fTypes, ExtVec3Types, ...); - Using directly ExtVectorTypes will not trigger any warning. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1140:590,test,test,590,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1140,2,['test'],['test']
Testability,"Here is my error : ; ```bash; /data/Softwares/sofa/src/master/Sofa/Component/SolidMechanics/FEM/HyperElastic/tests/Material_test.cpp; /data/Softwares/sofa/src/master/Sofa/Component/SolidMechanics/FEM/HyperElastic/tests/Material_test.cpp:56:18: error: too few template arguments for class template 'Matrix'; const Eigen::Matrix<Real, 3>& eigenvalues = eigensolver.eigenvalues();; ^; /usr/include/eigen3/Eigen/src/Core/Matrix.h:178:7: note: template is declared here; class Matrix; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4724#issuecomment-2110844690:109,test,tests,109,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4724#issuecomment-2110844690,2,['test'],['tests']
Testability,"Here is the PR with the PSL plugin to simplify the writing of scene with SOFA. Video with examples:; https://www.youtube.com/watch?v=_lU6hJIXz1g&feature=youtu.be. The ""in-progress"" documentation: https://github.com/SofaDefrost/sofa/tree/PSL/applications/plugins/PSL/README.md. If you have idea of extension we have a ""pep"" directory with open-suggestion there:; https://github.com/SofaDefrost/sofa/tree/PSL/applications/plugins/PSL/pep. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/541:688,test,test,688,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/541,2,['test'],['test']
Testability,"Here is the naive tentative I did:; ```; $ ./bin/SofaHelper_test.exe --gtest_filter=PluginManager_test.loadTestPluginByPath; Note: Google Test filter = PluginManager_test.loadTestPluginByPath; [==========] Running 1 test from 1 test case.; [----------] Global test environment set-up.; [----------] 1 test from PluginManager_test; [ RUN ] PluginManager_test.loadTestPluginByPath; 0; [INFO] [PluginManager] Loaded plugin: J:/0/build/bin\TestPlugin.dll; 1; [ERROR] [FileSystem::exists()] J:/0/build/bin/J:/0/build/bin\RandomNameForAPluginButHopeItDoesNotExist.dll.dll: error 123: The filename, directory name, or volume label syntax is incorrect. [ERROR] [PluginManager] File not found: J:/0/build/bin\RandomNameForAPluginButHopeItDoesNotExist.dll; 1; toDelete.push_back(TestPlugin); pm.getPluginMap().size() = 1; unloadPlugin(J:/0/build/bin\TestPlugin.dll); PluginManager::unloadPlugin; DynamicLibrary::unload; DONE DynamicLibrary::unload; DONE PluginManager::unloadPlugin; unloaded J:/0/build/bin\TestPlugin.dll; pm.getPluginMap().size() = 0; [ OK ] PluginManager_test.loadTestPluginByPath (33 ms); [----------] 1 test from PluginManager_test (33 ms total). [----------] Global test environment tear-down; [==========] 1 test from 1 test case ran. (33 ms total); [ PASSED ] 1 test.; Segmentation fault; ```; As you can see, unloading went well. Something else is triggering the Segfault...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1274#issuecomment-604356435:138,Test,Test,138,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1274#issuecomment-604356435,14,"['Test', 'test']","['Test', 'TestPlugin', 'test']"
Testability,"Here is what I tested:. - The scene that @hugtalbot provided: using the mouse does not impact the movement or the deformation. However, setting `useOdeSolverIntegrationFactors` in `UncoupledConstraintCorrection` to false seems to work.; - In the caduceus scene, `useOdeSolverIntegrationFactors` is already set to false. I also observe that I can pull only to the right direction.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-1180610000:15,test,tested,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-1180610000,1,['test'],['tested']
Testability,"Here it is! This PR adds a new NG component: Sofa.Helper.Bvh. How to reproduce:; 1. Checkout [sofa2ng](https://github.com/guparan/sofa2ng) in the `tools` folder of your SOFA; 2. cd into sofa2ng and run `deploy.sh recipes/Sofa.Helper.Bvh.rcpy`; 3. Integrate your new NG module into SOFA by hand. How to integrate (things not done by sofa2ng):; - Create all NG structure if needed (here I created Sofa.Helper); - `add_subdirectory` your module at the right place (here I did it in SofaFramework/CMakeLists.txt); - Link your module to SOFA old modules when needed; - Remove old file inclusions in CMake (here it was in sofa/helper/CMakeLists.txt). ***************; **Summary:**; - The recipe I used with sofa2ng is here: [Sofa.Helper.Bvh.rcpy](https://github.com/guparan/sofa2ng/blob/master/recipes/Sofa.Helper.Bvh.rcpy); - The result of recipe application is here: https://github.com/sofa-framework/sofa/pull/741/commits/2c729aa646866c2b01792069e95d47cc450edcca; - The changes I did by hand are here: https://github.com/sofa-framework/sofa/pull/741/commits/6d6cd06fc34f6ae2ca53feed8af5b8a1cb452da6 (patch version [here](https://github.com/sofa-framework/sofa/commit/6d6cd06fc34f6ae2ca53feed8af5b8a1cb452da6.patch)); ***************. This is the right place to discuss about SOFA-NG, do not hesitate to comment!. I let this here and I go to vacation, see you in two weeks :wink: ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/741:1629,test,test,1629,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/741,2,['test'],['test']
Testability,"Here we go as promised:. This PR stores within a SOFA Object (inheriting Base) links to the owners that given object in a vector, that can be accessed by calling getDDGLinkOwners(). Currently, pointers are stored within a vector of const Base*, but we could imagine using a map, that would store the link owners according to a CATEGORY, (ForceField, Mass, MO, Topo...), or having a multimap with the component names..? I don't know, I guess it depends on the use case.; @jnbrunet @epernod that PR is specifically for you, so you probably have a better idea of how you'd like to manipulate that list. let me know what you think!. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1228:882,test,test,882,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1228,2,['test'],['test']
Testability,"Here we go, let's try to [ci-build][with-scene-tests]",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/586#issuecomment-365607713:47,test,tests,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/586#issuecomment-365607713,1,['test'],['tests']
Testability,"Here's a bunch of fixes for the HAPI plugin:. * `config.h` was not generated --> added automatic generation to the cmake and fix the template to use cmake variable replacement. * there is some broken code in CMakeLists, not sure what was used for but it's not even a valid cmake code (broken if clause). For the moment I just commented out, I'm open to advices... * updated the code with recent member renaming in main sofa code (`indice` --> `d_indice`). * fix for `findH3D.cmake` to find the module without relying on non-default installation path (i.e. if you install H3D into a given directory, that is the root path from which `include` and `lib` can be easily found ). * fixes for `findHAPI.cmake` --> using `hapi_ROOT` to easily find the module (instead of relying on the mutual position of HAPI and H3DUtils). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1189:1069,test,test,1069,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1189,2,['test'],['test']
Testability,Here's a simpler implementation of sofa::core::DataEngine. This implementation hides the code related to updating datafields and calling cleanDirty() in an attempt to reduce human errors. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/760:439,test,test,439,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/760,2,['test'],['test']
Testability,"Here's a small test class that displays the different features I implemented in that ImplicitDataEngine mother class of mine:. ```; struct TestEngine : public ImplicitDataEngine; {; SOFAOR_CALLBACK_SYSTEM(TestEngine); // Required to setup the callback mechanism. public:; sofa::Data<int> d_a;; sofa::Data<int> d_b;; sofa::Data<int> d_c;; sofa::Data<int> d_a_out;; sofa::Data<int> d_b_out;. SOFA_CLASS(TestEngine, ImplicitDataEngine);. TestEngine(); : d_a(initData(&d_a, 0, ""a"", ""An input with a callback method"")),; d_b(initData(&d_b, 0, ""b"", ""An input without callback methods"")),; d_c(initData(&d_c, 0, ""c"", ""A simple data field with a callback"")); d_d(initData(&d_d, 0, ""d"", ""A simple data field without callback"")); {; d_a_out.setName(""a_out""); // the processed output of a; d_b_out.setName(""a_out""); // the processed output of b; }. void init(); {; SOFAOR_ADD_INPUT_CALLBACK(&d_a, &TestEngine::increment, false);; addInput(&d_a);; addInput(&d_b);; SOFAOR_ADD_CALLBACK(&d_c);. addOutput(&d_a_out);; addOutput(&d_b_out);; addOutput(&d_c_out);; }. void update(); {; // do something that's generic for any of the data fields. Called AFTER the data callbacks; }. private:; void increment(sofa::core::objectmodel::BaseData* data); {; d_a.setValue(d_a.getValue() + 1);; }; void decrement(sofa::core::objectmodel::BaseData* data); {; d_b.setValue(d_b.getValue() - 1);; }; };; ```. And here's what happens in the base class:. - The SOFAOR_CALLBACK_SYSTEM is a macro that creates a callback functor:; ```; class CallbackFunctor; {; public:; virtual void call(sofa::core::objectmodel::BaseData* o) = 0;; };. #define SOFAOR_CALLBACK_SYSTEM(T) \; typedef T SOFAOR_CLASS; \; class Callback : public sofaor::common::CallbackFunctor \; { \; typedef void (SOFAOR_CLASS::*Func)(sofa::core::objectmodel::BaseData * o); \; \; SOFAOR_CLASS* m_obj; \; Func m_func; \; \; public: \; Callback(SOFAOR_CLASS* _this, Func f) : m_obj(_this), m_func(f) {} \; void call(sofa::core::objectmodel::BaseData* data = 0) \; { \; (m_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367473816:15,test,test,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367473816,6,"['Test', 'test']","['TestEngine', 'test']"
Testability,"Here, I propose a raw version of Force Field for solving FEM model of Reissner-Mindlin Flat Shell Element (quad element, 5 degrees of freedom). ; Note that, at this current stage, I assume that 2 degrees of freedom related to rotational displacements of a node in x and y-axis (z is the normal axis of the element) are ignored for the purpose of my project. However, I also want to include these components in the calculation but have no clue. Furthermore, only the small displacement method is considered, I just wonder whether we can apply the co-rotational method to this type of element. Since I am not an expert in FEM, the calculation process and coding flow are inspired by many online materials and the TriangularFEMForceField, respectively. I believe it still got a lot of problems that I have not known yet, and also, this is my first contribution and PR, thus any helps from SOFA community will be sincerely appreciated; PS: a scene that includes this FF is also provided and works perfectly (for me). Needs merge of : https://github.com/sofa-framework/regression/pull/10; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1745:1623,test,test,1623,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1745,2,['test'],['test']
Testability,"Here, I propose a raw version of Force Field for solving FEM model of Reissner-Mindlin Flat Shell Element (quad element, 5 degrees of freedom). I mainly attempt to exploit SOFA to . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1739:721,test,test,721,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1739,2,['test'],['test']
Testability,"HexahedronForceFieldTopologyChangeHandling.scn has been fixed in #1573 ; and testOmniDriverEmu.scn fixed in .... PR ? Can't find where, feel free to fill this up if somebody know. Closing the issue itself",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1461#issuecomment-774170003:77,test,testOmniDriverEmu,77,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1461#issuecomment-774170003,1,['test'],['testOmniDriverEmu']
Testability,"Hey @alxbilger , thanks for this benchmark. My guest would be that solving one big system (the merge of both objects) is slower than solving to smaller system. However, solving two system independently should, I think, produce incorrect results as . 1. You are applying the interactions (for example, contact forces) at different solving states. For example, the first object is solved, its node positions are updated to the step t+1. Collisions are then computed. But the state of the second object is still at the time step t. Oscillation will therefore probably happen and the convergence will be delayed. ; 2. In addition, the solution state with both objects merged under the same system takes into account the interaction between the two objects. For example, when both objects are merged into a same system, you can create entries inside the system matrix to create a relationship between a node in the first object and a node in the second object. This is not possible when the two objects are separated. **TLDR**: Solving two objects independently is faster than solving one big system containing both objects. However it will take longer to converge to a steady solution (in number of steps), and even probably converge to an incorrect solution.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842947771:33,benchmark,benchmark,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842947771,1,['benchmark'],['benchmark']
Testability,"Hey @alxbilger . Taking another look at this issue, and I realized that :; - contacts are created as SUB-nodes and connected to the associated object though a mapping; - then (if `response='default'` meaning Penality approach is chosen for the ContactResponse), a PenalityContactForceField is added in the root node with a BarycentricPenalityContact which distributes the spring forces on the SUB-node MechanicalObject. As stiffness matrices (implicit force contributions) are not propagated through mappings (yet), only the addForce is used and the need of a AddKToMatrix never arose. I tried an implementation shortly but I would need to test it which is yet not possible. Hope this updates this issue.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2060#issuecomment-908068228:640,test,test,640,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2060#issuecomment-908068228,1,['test'],['test']
Testability,"Hey @epernod . Yeah sorry, I'll give a bit more details. The force vector (built from addForce) should be the same (or very close), either you are using a lumped mass matrix or a (full) mass matrix. This was the case before, but isn't anymore. Here a quick unittest that could help:. ```c++; using sofa::helper::system::PluginManager ;; using namespace sofa::simulation;; using namespace sofa::simpleapi;. TEST(MeshMatrixMass, addForce) {; using namespace sofa::core::objectmodel;; setSimulation(new sofa::simulation::graph::DAGSimulation());. // Create the scene; auto root = getSimulation()->createNewNode(""root"");; createObject(root, ""RequiredPlugin"", {{""pluginName"", ""SofaBoundaryCondition SofaEngine SofaTopologyMapping""}});; createObject(root, ""RegularGridTopology"", {{""name"", ""grid""}, {""min"", ""-7.5 -7.5 0""}, {""max"", ""7.5 7.5 80""}, {""n"", ""3 3 9""}});; auto mo = dynamic_cast<sofa::component::container::MechanicalObject<sofa::defaulttype::Vec3Types> *>(; createObject(root, ""MechanicalObject"", {{""name"", ""mo""}, {""src"", ""@grid""}}).get(); );; createObject(root, ""TetrahedronSetTopologyContainer"", {{""name"", ""topology""}});; createObject(root, ""TetrahedronSetTopologyModifier"");; createObject(root, ""TetrahedronSetGeometryAlgorithms"");; createObject(root, ""Hexa2TetraTopologicalMapping"", {{""input"", ""@grid""}, {""output"", ""@topology""}});; auto sofa_mass = dynamic_cast<sofa::component::mass::MeshMatrixMass<sofa::defaulttype::Vec3Types, sofa::defaulttype::Vec3Types::Real> *> (; createObject(root, ""MeshMatrixMass"", {{""name"", ""sofa_mass""}, {""topology"", ""@topology""}, {""massDensity"", ""2""}, {""lumping"", ""false""}}).get(); );; auto sofa_mass_diagonal = dynamic_cast<sofa::component::mass::MeshMatrixMass<sofa::defaulttype::Vec3Types, sofa::defaulttype::Vec3Types::Real> *> (; createObject(root, ""MeshMatrixMass"", {{""name"", ""sofa_mass_diagonal""}, {""topology"", ""@topology""}, {""massDensity"", ""2""}, {""lumping"", ""true""}}).get(); ); ; getSimulation()->init(root.get());. // Get residual vectors; DataVecDeriv d_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2301#issuecomment-901856585:406,TEST,TEST,406,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2301#issuecomment-901856585,1,['TEST'],['TEST']
Testability,"Hey @guparan ,. Thanks a lot for this. I've tested it very quickly. In order to use this for SofaPython3, we would need to be able to specify where to install some targets and files relative to the install prefix. For example, the binding libraries should be installed in `lib/python3/site-packages/...` . Here is the installation tree that we would need for SofaPython3:; ```; .; ├── bin; │   ├── Bindings.Modules.Tests; │   ├── Bindings.SofaRuntime.Tests; │   ├── Bindings.Sofa.Tests; │   ├── Bindings.SofaTypes.Tests; │   ├── Components; │   │   └── Components.py; │   ├── Core; │   │   ├── BaseData.py; │   │   ├── BaseLink.py; │   │   ├── BaseObject.py; │   │   ├── Base.py; │   │   ├── Controller.py; │   │   ├── DataEngine.py; │   │   ├── ForceField.py; │   │   ├── ForceField.py.orig; │   │   ├── MyRestShapeForceField.py; │   │   └── PythonRestShapeForceField.py; │   ├── Helper; │   │   ├── FileRepository.py; │   │   └── Message.py; │   ├── pyfiles; │   │   └── vector_test.py; │   ├── Simulation; │   │   ├── Node.py; │   │   └── Simulation.py; │   ├── SofaDeformable; │   │   ├── LinearSpring.py; │   │   └── SpringForceField.py; │   ├── tests; │   │   └── Base.py; │   └── Types; │   ├── BoundingBox.py; │   ├── RGBAColor.py; │   └── Vec3.py; ├── include; │   └── SofaPython3; │   ├── config.h; │   ├── DataCache.h; │   ├── DataHelper.h; │   ├── initModule.h; │   ├── Prefab.h; │   ├── PythonEnvironment.h; │   ├── PythonFactory.h; │   ├── PythonTestExtractor.h; │   ├── PythonTest.h; │   ├── SceneLoaderPY3.h; │   ├── Sofa; │   │   ├── Components; │   │   │   └── Submodule_Components.h; │   │   ├── Core; │   │   │   ├── Binding_BaseCamera_doc.h; │   │   │   ├── Binding_BaseCamera.h; │   │   │   ├── Binding_BaseContext.h; │   │   │   ├── Binding_BaseData_doc.h; │   │   │   ├── Binding_BaseData.h; │   │   │   ├── Binding_Base_doc.h; │   │   │   ├── Binding_Base.h; │   │   │   ├── Binding_BaseLink_doc.h; │   │   │   ├── Binding_BaseLink.h; │   │   │   ├── Binding_BaseObject_doc.h;",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1671#issuecomment-756112592:44,test,tested,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1671#issuecomment-756112592,5,"['Test', 'test']","['Tests', 'tested']"
Testability,Hey @lagarkane ; There's still 22 new failures of the tests. Is that normal? Looks your commit : 092b19f did it,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/317#issuecomment-317355130:54,test,tests,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/317#issuecomment-317355130,1,['test'],['tests']
Testability,"Hey @maxime-tournier ,. You bring valuable points here. You are absolutely right, it is not that trivial, I'm starting to see it now. Here is what I observed during my tests (I'm working part time on this, it is entirely possible that I come back later to correct those statements of mine :) ). > you need to properly initialize/finalize sofa and core modules (see Main.cpp in the runSofa application). Yes. I'm usually leaning towards making most of the functions available and let the script use what it need. So if I'm writing a _runSofa_ like application in python, I should be able to init the components there, create/set the simulation, add the needed message handlers to the MessageDispatcher, and set the paths (plugin, config, sofa prefix) there. If this complicate too much the python script, than making optional python util scripts that set all of this for the user could be a clean option. But I don't think the library should do this in the user's back without transparency. > you need to handle the case where the loaded scene already has python scripts, and let the PythonEnvironment know the interpreter is being run from the outside when initializing (and maybe deal with all the sys.path / __file__ abuses down there). The PythonEnvironment will create an interpreter if there isn't one (like when launching for a binary executable), or use the one already defined. In this case, PythonEnvironment will use the interpreter that called the script (ex python runSofaPython.py). No new python interpreter nor python thread a created (I've just checked to be sure). > probably have a good fight with the GIL down the road. The current GIL usage in the plugin seems to align correctly with this feature since we ""attach"" the PythonEnvironment to an interpreter instead of initialising a new one. No new threads are created. > how should this feature integrate with existing python scenes? Should it be possible to load scenes from within python scenes?. Yes, it seems to work so far. Ho",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/492#issuecomment-339630525:168,test,tests,168,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/492#issuecomment-339630525,1,['test'],['tests']
Testability,"Hey @nhnhan92 ; Thank you so much for your patience and your efforts regarding the headers. It is great to have homogeneous headers for the project, especially for people to use SOFA under one single LGPL license. To my best knowledge, it is not really possible to have ""two versions"" of the code in SOFA and a plugin of yours. But here is what I would recommend: once this PR is merged, create a specific branch in your fork where you can implement / test new evolutions. Each time you think the time is appropriate to contribute it back, you can simply pull-request your branch. This is the power of Git!. Finally, regarding my remark about the test, I was thinkg about a C++ test (that we run on the CI, you can have a look to the C++ files _\*\*\*\_test.cpp_. In this test, it would be ideal to have a numerical validation, assessing that the shell model is following the theoretical behavior (e.g. using method of manufactured solutions (MMS)); See: https://link.springer.com/article/10.1007/s00366-017-0572-4. Let us know what you think about it. We can make it step by step!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-786281204:452,test,test,452,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-786281204,4,['test'],['test']
Testability,"Hey I hope I got this one right...:. To me the APIVersion component is used to specify the latest version of SOFA we can guarantee compatibility with. Thus when it is already present in an existing scene, the tag is set explicitely in the scene file.; When creating and saving a scene from a modeler for instance though, an APIVersion should be created, and the level should be the level of the version of SOFA the user is running. By default, an APIVersion without a version number was automatically setting the level to 17.12, which to me makes no sense, because we can't guarantee compatibility with 17.12 on a scene that doesn't have an APIVersion set.; Also, somewhere in SceneCheckAPIChange, a 20.06 was hardcoded in a variable `m_selectedApiLevel`. This PR takes the SOFA_VERSION_STR, set by CMake in <sofa/version.h>, and uses this value to replace the default level value in APIVersion, and the selectedAPILevel in SceneCheckAPIChange. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1473:1196,test,test,1196,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1473,2,['test'],['test']
Testability,Hey dear reviewers... I'd like you to pay close attention to the `size()` and `size(const DataType & /*data*/)` functions... To me both the documentation in DataTypeInfo.h is incorrect. Depending on your answers correct the doc in DataTypeInfo.h in this PR. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1373:509,test,test,509,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1373,2,['test'],['test']
Testability,"Hey guys,. Sorry for the delay. This is a draft PR so that people can start reviewing/testing this feature if they want. There is still some things missing before merging. ### Needs to be addressed before merging. - MacOS and Windows compatibility: python import command only tries to load .so extension, so the cmake of the plugin should generate both SofaPython.dylib (.dll) and SofaPython.so for it to work.; - Handling the case of python script loading a python scene (the current GIL handling implementation will prevent the main python script to get back the interpreter after a python scene runs). ### What this PR brings. Right now, in order to use the SofaPython plugin, you need to create a python scene and run it through a C++ executable (such as runSofa). What I'm proposing here is to simply load the Sofa plugin inside a python script, that's it. A python script could then look like : . ```#!/usr/bin/python2.7; from libSofaPython import Sofa; import argparse. # Parse the arguments; parser = argparse.ArgumentParser(); parser.add_argument(""-n"", ""--number_of_steps"", type=int, help=""Number of steps until the final forces are reach"", default=10); o = parser.parse_args(). sim = Sofa.createSimulation(""DAG""); Sofa.setSimulation(sim); root = Sofa.createNode(""root""). # ...; # some code that creates the scene tree; # ... root.init(). for i in range(number_of_steps):; root.simulationStep(dt); updateConvergencePlot(root). analysis = complexCalculsOnMatrices(root); saveResults(root, analysis); ```. You could even make your own runSofa.py that launches the runSofa GUI (a more complete python runSofa script can be found in an example file provided by this PR) :. ```#!/usr/bin/python2.7. from libSofaPython import Sofa. sim = Sofa.createSimulation(""DAG""); Sofa.setSimulation(sim). root = Sofa.loadScene(""examples/Demos/caduceus.scn""); root.init(). sofa_prefix = ""/home/jnbrunet/sources/sofa/build""; Sofa.GUIManager.setSofaPrefix(sofa_prefix); Sofa.GUIManager.setConfigDirectoryPath(sofa",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:86,test,testing,86,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,1,['test'],['testing']
Testability,"Hey guys,. apparently, 30 tests out of 32 crash with exit code 53. (And bring some bad red color to the beautiful dashboard). This code is ""The network path was not found"". Is every binary/file where it's supposed to be ?. NB : Is this config worth the trouble ? Or should it be removed as VS2015 is freely available ? (I heard something about people **needing** it but...)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/155:26,test,tests,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/155,1,['test'],['tests']
Testability,"Hey, . Waiting for FOSDEM to start...so let's make a small cleaning PR. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/915:325,test,test,325,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/915,2,['test'],['test']
Testability,"Hey,. I am very new in sofa, and I am looking for a simple solution for the following :) :; I would like to simulate the cutting through of a 2-d mesh (surface) with a sharp tool.; My goal is to use this simulation to test the cutting of a soft tissue with a robot. For two reasons, I would not to use the cutting Plugin: I need it for a research project for which I do not have financial budget to buy the plugin (maybe in the future, I will). The second reason that I would like to keep the simulation very simple and operate with a low number of parameters. My question is: which examples should I take a look at? Is there anybody, how implemented such a scenario (maybe also with SofaPython3)?. Thank you very much in advance!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4071:218,test,test,218,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4071,1,['test'],['test']
Testability,"Hey,. I just tested differents gui arguments and encounter a weird argument name issue.; if you run : `runsofa -g qt` this will run the opengl view. Everything is working well, but the argument name is a bit ... confusing.; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/480:13,test,tested,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/480,1,['test'],['tested']
Testability,"Hi @EulalieCoevoet,. Thanks for you PR. . Given that this PR: ; - [x] successfully compile in our settings on the CI.; - [x] does not generates new warnings or test failure. ; - [x] shouldn't break existing scenes.; - [x] add new features & corresponding tests. ; - [ ] does not break API compatibility. ; - [x] is now more 1 week old. Its breaks the API compatibility but this is to match the sofa coding style so I suggest a merge (@hugtalbot). @EulalieCoevoet about your question about PlaneROI I suggest you to make an issue dedicated .",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/108#issuecomment-273826140:160,test,test,160,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/108#issuecomment-273826140,2,['test'],"['test', 'tests']"
Testability,"Hi @FabienPean, ; Any idea why RigidLinearDeformationMappings_test is failing on Windows ?; See [windows7_VS-2015_amd64_origin_options tests report](https://ci.inria.fr/sofa-ci/job/windows7_VS-2015_amd64_pr_2_options/266/testReport/). EDIT: This is certainly nothing related to your PR. It is also failing for sofa-framework/sofa#261. EDIT 2: The problem is known, see issue sofa-framework/Flexible#4.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/262#issuecomment-300141659:135,test,tests,135,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/262#issuecomment-300141659,2,['test'],"['testReport', 'tests']"
Testability,Hi @ScheiklP . Thanks for the PR. The SphereCollisionModel works historically without a topology (relying on the mstate). The tests are failing due to the absence of a PointSetTopology. What could be done is to change the warning into an info saying that no topology is found therefore no topological change will be supported. What do you think?. Another change in order to make the component topologically robust would be to make the data `radius` as a PointData:; ``` cpp; Data< VecReal > radius; ///< Radius of each sphere; ```. should become; ``` cpp; PointData< Real > radius; ///< Radius of each sphere; ```; (connected to a topology handler),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3203#issuecomment-1210431318:126,test,tests,126,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3203#issuecomment-1210431318,1,['test'],['tests']
Testability,Hi @Younesssss . Thanks for your PR. . I strongly support removing the #define/#ifdef where-ever this is possible because #ifdef leads to code that is very hard to maintain and test in a CI. Your proposition is going toward that so I like it. . Matthieu suggested an alternative way to achieve the same result do you think you can do it or is it too far away from what you had in mind ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/288#issuecomment-306479445:177,test,test,177,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/288#issuecomment-306479445,1,['test'],['test']
Testability,"Hi @alxbilger,. Thanks for the tests, which if I understand correctly are working as expected. . When doing; ```xml; <Import fromPlugin=""MultiThreading"" components=""ParallelBVHNarrowPhase"" as=""BVHNarrowPhase""/>; ```; The alias BVHNarrowPhase that is initially pointing to SofaBaseCollision.BVHNarrowPhase should be replaced with one with the same named BVHNarrowPhase but pointing to Multithread.BVHNarrowPhase.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2512#issuecomment-1005149509:31,test,tests,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2512#issuecomment-1005149509,1,['test'],['tests']
Testability,"Hi @damien-marchal,. Yes I will do it. Maybe just need to talk with @matthieu-nesme to; understand more his suggestions. Thanks. 2017-06-06 15:03 GMT+02:00 Damien Marchal <notifications@github.com>:. > Hi @Younesssss <https://github.com/younesssss>; >; > Thanks for your PR.; >; > I strongly support removing the #define/#ifdef where-ever this is possible; > because #ifdef leads to code that is very hard to maintain and test in a; > CI. Your proposition is going toward that so I like it.; >; > Matthieu suggested an alternative way to achieve the same result do you; > think you can do it ?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/sofa-framework/sofa/pull/288#issuecomment-306479445>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AXU08Yg8acAOCZtwUhU61g0EnlJ8Ck5Zks5sBU40gaJpZM4NxEC9>; > .; >. -- ; Yinoussa ADAGOLODJO. Doctorant en Simulation Médicale; Laboratoire ICube - UMR 7357; IRCAD Hôpitaux Universitaires; 1 place de l'hôpital F. 67091 Strasbourg Cedex",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/288#issuecomment-306565218:422,test,test,422,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/288#issuecomment-306565218,1,['test'],['test']
Testability,Hi @damienmarchal ! Do you have any comments on the unit tests ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/360#issuecomment-329404570:57,test,tests,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/360#issuecomment-329404570,1,['test'],['tests']
Testability,Hi @damienmarchal . I need a review of the first version of the unit tests.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/360#issuecomment-326303609:69,test,tests,69,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/360#issuecomment-326303609,1,['test'],['tests']
Testability,Hi @damienmarchal . Is this PR still in your plans @damienmarchal?; It even had the approval from Guillaume but the CI was failing then. Now the PR is too old to access any log.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2512#issuecomment-1708442304:173,log,log,173,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2512#issuecomment-1708442304,1,['log'],['log']
Testability,"Hi @damienmarchal, thank you for this massive work.; 117 changed files in 1 commit is not easy to review so this may take a while to be merged but be sure we (I included) are going to check it out.; About the deprecation policy, I agree with your proposal of 1 year transition + highlights in releases.; I'm curious to see this PR [ci-build]'ed [with-scene-tests] 😉",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/389#issuecomment-328514613:357,test,tests,357,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/389#issuecomment-328514613,1,['test'],['tests']
Testability,"Hi @damienmarchal,; You broke [DataFileName_test](https://ci.inria.fr/sofa-ci/job/windows7_VS-2015_amd64_pr_1_options/178/testReport/(root)/DataFileName_test/checkSetGetRelativePath/) on Windows with this PR. ; Could you have a look?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/250#issuecomment-300142620:122,test,testReport,122,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/250#issuecomment-300142620,1,['test'],['testReport']
Testability,"Hi @epernod , @fspadoni . Thanks for the PR. ; This is the kind of code I would like to have test unit for. Do you think it could be possible ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/701#issuecomment-400500548:93,test,test,93,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/701#issuecomment-400500548,1,['test'],['test']
Testability,"Hi @epernod . Can I add more tests on this PR ? Because I think we should validate a bit more ""negative/bad"" case to enforce the behavior of component when used improperly.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/270#issuecomment-302034546:29,test,tests,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/270#issuecomment-302034546,1,['test'],['tests']
Testability,"Hi @fjourdes, thanks for the suggestion. I used HOBAK for the implementation, adapting it to SOFA `TetrahedronHyperelasticityFEMForceField`. I implemented only the material. Therefore, everything outside of the material, such as matrix clamping, is not yet implemented. Note that HOBAK has also a test suite, with some similarities with mine (test derivative against finite differences). I guess we can check that both test suites match for the same input.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4603#issuecomment-2024912176:297,test,test,297,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4603#issuecomment-2024912176,3,['test'],['test']
Testability,Hi @fredroy . Several questions: ; - shouldn't we drop the dependency to SceneCreator (as discussed (https://github.com/sofa-framework/sofa/issues/417) ? ; - why not defining the test in Sofa.component.ODESolver.tests in place of Sofa.component.ODESolver_test ? To me this looks more consistant and coherent with our naming scheme as well as having the tests in a child directory of ODESolver. ; - why centralizing the testing.tools which breaks modularity instead of letting them at their right logical location ? ; To me having something like; ```console; SofaDeformable.testing.tools/MassSpringSystemCreation ; ``` ; Is much better than; ```console; Sofa.testing.tools/MassSpringSystemCreation ; ``` ; Because the latter creates a dependency from package SofaDeformable to package Sofa.testing.toos. ; While the First has only a dependency from SofaDeformable to SofaDeformable.testing,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2650#issuecomment-1040482854:179,test,test,179,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2650#issuecomment-1040482854,9,"['log', 'test']","['logical', 'test', 'testing', 'tests']"
Testability,"Hi @ggrosshenny . For the tests I think that the ideal target of testing to have a good code coverage (https://en.wikipedia.org/wiki/Code_coverage). A very strong level of testing may requires ""path coverage"". This means that all the execution path are at least executed once. This is very hard to achieve an so a more manageable target is to be close to ""function coverage""+""branch coverage"" in which each line of the function is at least executed once. I found that in sofa a succesfull strategy is to make tests with ""Parameter value coverage"" in which in a method taking parameters, all the common values for such parameters be considered. This give good results and is really easy to do. More concretely in your PR you could: ; - test each python function with different parameters. At least one with a valid value, 1 with out of bound values, 1 test with extrema values (min & max) and if there is multiple parameter...you either have to do a cartesian product, random values or fixed lists of parameter sets. eg for Sofa_setOutputType... the following tests would be nice:; ```python; Sofa_setOutputType(""validID"", ""JSON""); Sofa_setOutputType("""", ""JSON""); Sofa_setOutputType(""invalid"", ""JSON""); Sofa_setOutputType(""validID"", ""LJSON""); Sofa_setOutputType(""validID"", ""STDOUT""); Sofa_setOutputType(""validID"", """"); Sofa_setOutputType(""validID"", ""invalidType""); ```. And in Sofa_end:; ```python; Sofa_end(""validId"", aNode); Sofa_end("""", aNode); Sofa_end(""validId"", 1.0) # This shouldn't crash but report a python exception ; Sofa_end(""validId"", None) # This shouldn't crash but report a python exception; ```. - test each c++ function in the same way. A weaker approach of testing (if you really lack of time) is to only test ""the good"" case and not invalid values. To me this is only acceptable if the function is not accessible by the users and never process data provided by users. . More feedback:; - It found the following function's name Sofa_end and Sofa_setOutputType not very clear. They do",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/360#issuecomment-323685977:26,test,tests,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/360#issuecomment-323685977,6,['test'],"['test', 'testing', 'tests']"
Testability,"Hi @guparan ; I added tests & the use of SOFA_VERSION but is this contains a real value ? On my system it was 999999; which is pretty useless. Could the value be set to the ""next release"" ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/329#issuecomment-315888752:22,test,tests,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/329#issuecomment-315888752,1,['test'],['tests']
Testability,"Hi @hugtalbot . I removed all the experimental stuff (sad), the commit history is cleaned, the CI is compiling (but as there is now the test scenes by default it is super laggy). . The first six commits are touching Sofa files and are fixes. ; The two other are adding the PSL plugin. . About the number of files, the 2/3 are examples and test scenes. ; The failing test in windows are because of the missing module on the windows machine:; https://github.com/hjson/hjson-py. EDIT: the crash on mac-os is because the tests scenes are using components that uses OpenGL. I think I will remove those tests as they are not really usefull anymore. EDIT2: Here it is...and it fullfill our merging list check boxes :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/541#issuecomment-353217703:136,test,test,136,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/541#issuecomment-353217703,5,['test'],"['test', 'tests']"
Testability,"Hi @hugtalbot what does it means ""tested first"" ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2512#issuecomment-994941714:34,test,tested,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2512#issuecomment-994941714,1,['test'],['tested']
Testability,"Hi @kriptian88,. Thank you very much for your contribution and welcome in the sofa development community. ; I will test it asap.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/369#issuecomment-323769996:115,test,test,115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/369#issuecomment-323769996,1,['test'],['test']
Testability,Hi @lagarkane . Thanks for this PR. +1 for adding new tests :),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/312#issuecomment-312248734:54,test,tests,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/312#issuecomment-312248734,1,['test'],['tests']
Testability,"Hi @maddin200 ; Thanks for the notice, I will test it within the week. But it clearly appears uninitialized.; I put here the [link to ImageTypes.h](https://github.com/sofa-framework/sofa/blob/d1434b2eaaf2b8ef516a428544f9c0d65ed3d4df/applications/plugins/image/ImageTypes.h#L303)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1133#issuecomment-526942267:46,test,test,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1133#issuecomment-526942267,1,['test'],['test']
Testability,"Hi @nhnhan92 ; Here is what we propose: let's get this nice work merged as is. I will only add a regression scene to check that no alteration of the model occurs in the future. I will also write a short doc about it, and I will let you append any additional details on it. A C++ test inspired from the [article](https://link.springer.com/article/10.1007/s00366-017-0572-4) would be nice in another PR. For writing test, you can:; - see the [doc here](https://www.sofa-framework.org/community/doc/contributing-to-sofa/writing-tests/); - get inspired from the [PluginExample test](https://github.com/sofa-framework/sofa/blob/master/applications/plugins/PluginExample/PluginExample_test/MyBehaviorModel_test.cpp). Is this fine for you?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-789654667:279,test,test,279,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1745#issuecomment-789654667,4,['test'],"['test', 'tests']"
Testability,"Hi @nim65s . Sorry for the delay in our reply, a mixture of things, including a vacation, have kept us away from the code for several days! Here we are again!; Once again thanks a lot for you very nice contribution. Have you taken another look regarding the Ubuntu issue?; During our weekly dev meeting, we discussed it and it might not be related to Nix but possibly to Wayland now by default in Ubuntu 24.04. We could therefore test with Ubuntu 22.04. Cheers",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2459631954:430,test,test,430,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2459631954,1,['test'],['test']
Testability,"Hi @olivier-goury , @ChristianDuriez . Some tests on our CI are crashing with your PR, following the link ; https://www.sofa-framework.org/dash/?branch=pr/mapped_forcefield_matrix; You will find the crashing tests, those are the one that have a negative runtime, in the stackstrace you can see it is related to some Eigen spare matrix operation.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/276#issuecomment-302852972:44,test,tests,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/276#issuecomment-302852972,2,['test'],['tests']
Testability,Hi @sergeiNikolaev . I'm not sure what you want. ; There is actually several tests of python functionality in different plugins. ; SofaPython_test and SofaTest are good starting point. . Now if you want to lauch automatically something like 'unittest' or 'coverage' I have no idea but this is a good question.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/400#issuecomment-329769083:77,test,tests,77,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/400#issuecomment-329769083,1,['test'],['tests']
Testability,"Hi @sergeiNikolaev ; Sorry for the latency on this topic, tests can be made so that we create a simple scene in c++ imposing rest shape and an imposed displacement. Thus, the resulting force should be analytically defined.; By the way do you have any latex file for the polynomial equations?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-643111261:58,test,tests,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-643111261,1,['test'],['tests']
Testability,"Hi @sergeiNikolaev ; thank you for sharing your zip test. I think we will be able to work it out from here.; TODO for me:; - Need a test in c++ for checking new functionality, to be implemented from py example.; - Add an example in SOFA.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-624527110:52,test,test,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-624527110,2,['test'],['test']
Testability,"Hi @sofa-framework/reviewers,. May was quite quiet for our beloved NG project.; Don't worry, I still have some news for you :wink:. ## Discussions. Pluginization works are possible but they have to be done in-place (not moving the files). This will permit to simplify the dependencies between SOFA modules. . About the NG branch, to avoid big divergence, we propose to merge it with master as soon as some big step is done. The next big step is SofaFramework coverage. ## Bootstrapping scripts. Previously named SPM, the [bootstrapping scripts](https://github.com/guparan/sofa2ng) are now able to handle test folders. ## Process. Here is the process to cover one module:; 1. Create/update a recipe based on an existing one.; 2. Run the bootstrapping scripts with the recipe.; 3. Inspect the output; 4. If something is wrong or missing, edit the bootstrapping scripts and *goto 1*; 5. Do specific changes by hand like namespace aliases; 6. Create a patch of all changes made by hand; 7. Open a pull-request providing the recipe and the patch (previously pushed to sofa2ng). This process will be rewritten in Sofa.Helper.Bvh pull-request. ## Sofa.Component.Utils. The first NG pull-request has been merged to the NG branch. There is still some updates to do though, because the bootstrapping scripts changed. ## Sofa.Helper.Bvh. The recipe has been updated. ; This work will be the base of further contributions. I will detail all the bootstrapping + patching process in the pull-request. ## Next steps; - Pluginize without moving files: use plugins mechanism to work on modules dependencies ; Start with the less dependent ones and progress towards SOFA core.; Objective: simplify dependencies between modules.; - Validate Damien's architecture proposal for SofaFramework: https://github.com/SofaDefrost/sofa/tree/cleanTheMessStep1/ng/kernel/Sofa; Particularly about Sofa.Helper.Types; - Create Sofa.Helper.Bvh pull-request; Will give a clear example and all the process to refactor parts of SofaFramew",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/543#issuecomment-393927223:604,test,test,604,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/543#issuecomment-393927223,1,['test'],['test']
Testability,"Hi @tgaugry ; I think I fixed the issue:; - first, I added a condition checking before resizing constraintReleased; - second, a beginEdit() on d_constraintFactor was actually forcing the d_constraintFactor.isSet() function to return true (since the the beginEdit is considered as ""setting"" the data); Let me know if it suits you, I tested your scene it works with or without specifying the constraintFactor; - third, use of bwdInit() function: when AttachedContraint focuses on subnodes (these might not be initialized yet) and the initialization of AttachedContraint requires MO size info. With the work on Data dependencies bwdInit() should be later removed. Thanks for noticing the issue.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/650#issuecomment-447334444:332,test,tested,332,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/650#issuecomment-447334444,1,['test'],['tested']
Testability,"Hi @untereiner . From my experience you will have more feedback if you provide more information on the PR description to give other some envy to try it. . Given the complexity of the PR here is what people passing by may need:; - what the PR does precisely ? ; - what is the existing state on this topic in Sofa (the title speak about dynamic topology...isn't there dynamic topology in Sofa since year) ? ; - how this PR handle the problem, ; - use CGOGN library... what is this CGOGN library ? ; - argument on why the PR is it useful/mandatory/improvement,; - trying to convince people why they should spend time testing it,; - provide some idea on how invasive the PR will be (non breaking at all, breaking the SofaCore API, breaking existing scenes)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/700#issuecomment-402418819:614,test,testing,614,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/700#issuecomment-402418819,1,['test'],['testing']
Testability,"Hi Camille,. Thanks a lot for the detailed reports. I just tested the files and can confirm the issue.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1014#issuecomment-487539429:59,test,tested,59,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1014#issuecomment-487539429,1,['test'],['tested']
Testability,"Hi Damien,. Actually, Jenkins is already doing this, here is a regression: https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/3955/testReport/(root)/ImagePNG_test/ImagePNG_NoFile/. We can also access this results with a GET request: https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/3955/testReport/api/json?pretty=true; Just search for ""REGRESSION"". So it is possible to count them in the ""post build"" step :). About colors, I don't agree with you because it would make people think ""It's green, I don't care about new tests failing"". If we are adding (failing) tests, it is precisely because we want to warn people that something is broken and needs to be fixed.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/52#issuecomment-258823053:135,test,testReport,135,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/52#issuecomment-258823053,4,['test'],"['testReport', 'tests']"
Testability,"Hi Damien,. I haven't had much time to devote to this as of late, but here is some quick feedback so far:. - lots of code need modification (like *lots*), deep down the core and you need lots of patience to recompile everything over and over again,; - it makes little sense to optimize data initialization if you don't optimize links as well since they use a similar initialization mechanism,; - the speedups in my test scenes were disappointing, being largely dominated by other code paths (contact detection and response mostly, since this is the main use case as the graph gets dynamically altered at every time step),; - IIRC there was a data/link notification mechanism on insertion that could cause accidental quadratic complexity when used sequentially (I'll try to fix this one soon),; - beware of CollisionGroup managers that was causing huge slowdowns in my case for no visible reason as there was a single group. The takeaway: this is probably premature optimization at this point. I might give it another shot in the next few months as my work may depend on it but until then, don't expect major changes on this front. (edit: typos)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/44#issuecomment-270123574:415,test,test,415,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/44#issuecomment-270123574,1,['test'],['test']
Testability,"Hi Erik, . Thank for your question. The caller's is the one that call the create function. Some of them looks if the arg's log is empty and if not they consider this is an error. ; The problem is that for the deprecation message they should not be considered as error but real deprecation message. This is what I do in this PR. The deprecation message are handled separately, out of the arg's log, so the arg's log behave as usual and deprecation messages are properly handleded.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/939#issuecomment-465237578:123,log,log,123,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/939#issuecomment-465237578,3,['log'],['log']
Testability,"Hi Erik, . There is one test crash in TetrahedronFEMForceField_test. Is this related to your changes ?. DM",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/270#issuecomment-301898283:24,test,test,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/270#issuecomment-301898283,1,['test'],['test']
Testability,"Hi Erik,. Nice commit. Some (cosmetic) remarks:; - you updated some attributes/data field names but the name you use are not following the sofa guidelines. Data should starts with d_ not m_ (https://github.com/sofa-framework/sofa/blob/master/GUIDELINES.md). ; - there are std::cout which should be replaced by the msg_error api ; ; +1 for the examples.; Would be nice to also have a test file validating the behavior.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/133#issuecomment-273165258:383,test,test,383,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/133#issuecomment-273165258,1,['test'],['test']
Testability,"Hi Erik,. Thank you for the offer,; If you have time you could look at the failing scenes to see what is wrong and how it would be best to validate that. Maybe testing this branch with your plugins or scenes would also be very useful. DM.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/853#issuecomment-446186538:160,test,testing,160,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/853#issuecomment-446186538,1,['test'],['testing']
Testability,"Hi François,. Thank for this PR. Currently SofaTest contains two different things: 1) a set of utilitary classes to implement tests and 2) specific tests on component. . To me the right approach is to split that in two. The utility classes should be moved into SofaKernel and be part of the framework as we want to use the utility classes to make test. While the specific tests can stay on SofaTest. . Once that done the dependency to SofaTest can be removed. But the test in framework are still using the helper class including the ability to generate failure based on sofa error messages. . EDIT: I forgot to say that your are totally right saying that these backward dependencies are bad and have a lot of consequence on modularization & compilation time in Sofa. As far as I can say @maxime-tournier is also working actively on that.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/455#issuecomment-335746406:126,test,tests,126,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/455#issuecomment-335746406,5,['test'],"['test', 'tests']"
Testability,"Hi Fred, . The splitting seems to perpetuate the spurious dependency from SceneCreator to sofa.testing.tools. ; Maybe it is the time to remove the dependency to SceneCreator and use simpleapi in place so that sofa.testing is cleaned from SceneCreator.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2692#issuecomment-1040449818:95,test,testing,95,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2692#issuecomment-1040449818,2,['test'],['testing']
Testability,"Hi Fred,. Thank for this PR. . +1 for the cleannig; +1 for the tests ; Maybe it should be told in the PR description. . I'm surprise by the C++ code in the test.glsl file. I don't think this is a good naming convention because it is really hard to understand that the content of the .gsl file is actually c++. So I suggest to rename the file with a more classical .cpp (or .cppglsl if you really want something no .cpp). . There is some place in the code that introduces new std::cerr. Can you please update to use the dmsg_* API . I will try the PR to see if it does not interfere with the livecoding features.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/158#issuecomment-276338378:63,test,tests,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/158#issuecomment-276338378,2,['test'],"['test', 'tests']"
Testability,"Hi Fred,. Thank you for your pull-request. ; It looks really nice. . Some user friendly stuff...; - I would be great to have more details in the help string of the added Data. Currently it is more or less duplicating the name; maybe you can say what is it used for in term of rendering and shadowing.; - I have now clear opinion on that but maybe we should also add the default values in the docstring (I found it very annoying for the users to look in the source code to know what the default values are). ; - In the same spirit I think that somewhere VMS should be documented to the user. Maybe in the component helpstring when it is registered ? . I will test that by thursday unless someone else do that before.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/73#issuecomment-263723195:658,test,test,658,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/73#issuecomment-263723195,1,['test'],['test']
Testability,"Hi Guillaume,. Thank for the fix. Sorry about the the tailing tests since the beginning... I was assuming that Jenkins would correctly report this information with its regression/failure status & tracking. . DM.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/54#issuecomment-263480331:62,test,tests,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/54#issuecomment-263480331,1,['test'],['tests']
Testability,"Hi Guillaume,. The problem of matrix reading was visible because of the UniformMass<Rigid3> was generating a warning at run-time. The test was designed to fail if the uniformmass generates such a warning or cannot read the given values. Finally the error was not in UniformMass but in Mat.h, so I fixed the problem and keept the written test (not failing now).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/993#issuecomment-484738528:134,test,test,134,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/993#issuecomment-484738528,2,['test'],['test']
Testability,"Hi Hugo,. If I remember correctly there is still an inconsistency between the internal logic between DiagonalMass and UniformMass. I started with these two because I wanted to review all the component we are using in our soft-robots plugins. DM.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/36#issuecomment-268331516:87,log,logic,87,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/36#issuecomment-268331516,1,['log'],['logic']
Testability,"Hi Mathieu,. - About the 'd_size' data field. It is there just to store the attribute passed by the user. As the parse function already do the resize using the raw value of the attribute it was not needed to do any resize(d_size.getValue) anywhere. . - I share your concern about the cost of adding data. ; According to the last updates in Issue https://github.com/sofa-framework/sofa/issues/44) it seems that data is not that crucial for a real simulation. . To have more insight I just made a quick test with the following result: ; The time to create 200 000 (empty) component (without calling the init function):; - with 6 Data field is 1.10sec; - with 10 Data field is 1.55sec; So one data field added to a component cost 0.05ms at component creation (it is higher than what I expected). ; Now for a more realistic scenario with 200 SphereModel created and initialized one extra data field rise the cost from 3.1 ms 3.2ms and that this is 'dialuated' in all the other cost (collision detection, mechanics). . About your suggestion to set everything to persistent by default and have each component decide what is good to save or not. This is what SOFA actually does and this behave terribly. ; I see two reason for that:; - there is a lot of component that 'forgot' to set/unset the persistent values.; - it is very hard to identify what is relevant to save, IMO because what is relevant to save is a matter of context of use, a Data 'useless' for one may be very useful for someone else. . This is why I choose to do things in the reversed way and let the client code to select what to save (so that you may eventually implement dedicated widgets to let the user select what to save). . I see at least to different context of use and thus saving strategies. . For my context of use it is more important to save scenes that are as close as possible as the one written by the user. This is why I made the XML loader and the GUI have the responsability to make persistent:; - the value given explic",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/116#issuecomment-272314495:501,test,test,501,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/116#issuecomment-272314495,1,['test'],['test']
Testability,"Hi Mathieu,. Best wishes for this year. . Daccord is an old repository on gforge storing a lot of experimental feature (UI & modelling) that are pending for integration in sofa. . I fully agree with your suggestion for point first&second; for third:; - what about adding a Data for template & src ? (I really would like to preserve as much as much as possible the original scene because) ; - ""type"" I don't know but it handled specifically in (XML.cpp). I started a new branch for this task so we can work and tests : ; https://github.com/SofaDefrost/sofa/tree/xmlsave. EDIT: I have updated this branch saving is now working (at least the caduceus scene). If some of you have time please give feedback.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/41#issuecomment-270089246:510,test,tests,510,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/41#issuecomment-270089246,1,['test'],['tests']
Testability,"Hi Mathieu,. I see what you mean. ; ; The new implementation allows you to select precisely how gtest suceed or fail according to the messages emitted by a component by using either the MessageAsTestFailure or/and ExpectMessage RAII. . To update the old tests with *a minimal amount of effort* to restore the behavior you described. ; I think in each test setup we can simply add something like ; ```cpp; MessageAsTestFailure raii_warning(Message::Warning) ;; MessageAsTestFailure raii_error(Message::Error) ;; ```; I can devote some time to do that.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/211#issuecomment-288386290:254,test,tests,254,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/211#issuecomment-288386290,2,['test'],"['test', 'tests']"
Testability,"Hi Mathieu,. Thank for the feedback. . STLExport & MeshExporter are exporting single object while OBJExporter is exporting a whole scene. ; I didn't change that because it would cause too much refactoring and it seems there is an agreement on that. . In this PR what I did was just to factorize the existing quasi-duplicated functionalities into an unique class. So now the three objects have a consistent behavior regarding the filename & path creation as well as the attributes behavior. . I'm very sorry about the difficulty to review this kind of changes... I think the best approach is not to use the diff which are too complex and instead review the resulting file which are (I hope) good looking. . I also have added tests (+30) to check that things goes fine and help in future refactoring to detect regression. As you said one year ago ...we need more tests :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/372#issuecomment-328071631:724,test,tests,724,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/372#issuecomment-328071631,2,['test'],['tests']
Testability,"Hi Maxime,. This is great news. This evening I still had to kill manually some Compliant_test running in endless loop. Now the MacBuilder is ""knocked out"" for the night because there is no more space left on the device and we need to log in manually to clean that. . If you are curious here are the builds: ; 35GB https://ci.inria.fr/sofa-ci/job/mac_clang-3.4_options/4959/console; 41GB https://ci.inria.fr/sofa-ci/job/mac_clang-3.4_options/4958/console. I hope your fix will remove this kind of problem.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289565745:234,log,log,234,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/221#issuecomment-289565745,1,['log'],['log']
Testability,"Hi Paul,. I made some tests on basic scenes and it seems empty systems are supported (in the sense it does not crash). See https://github.com/sofa-framework/sofa/pull/3500. The factorization is supposed to stop here: https://github.com/sofa-framework/sofa/blob/master/Sofa/Component/LinearSolver/Direct/src/sofa/component/linearsolver/direct/SparseLDLSolver.inl#L93. Can you debug your scene around this line to investigate why this condition is not reached?. Alex",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1323257851:22,test,tests,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1323257851,1,['test'],['tests']
Testability,"Hi Raphael,. Many thank for your pull request. ; The feature sounds appealing and at first sight it looks ok. I have never used this component so if someone can give feedback it would be great. . EDIT: do you mind if I push some cleaning commit on this component in your PR. I would like to add some test cases for this component.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/394#issuecomment-328134531:300,test,test,300,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/394#issuecomment-328134531,1,['test'],['test']
Testability,"Hi Remi, thanks for the bug report and the scene.; @epernod, @EulalieCoevoet can you say which change is the latest so we can test before this version if the code work ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/988#issuecomment-483757703:126,test,test,126,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/988#issuecomment-483757703,1,['test'],['test']
Testability,"Hi Thomas,. Currently it seems there is some problem in compiling it, but fundamentally I think this is a great objective. ; Thank you very much to tackling this. . If I understand correctly now we can have the two syntax to read vectors (the one from Python and the historical one). +Backward compatibility is preserved and you added tests to validate the new behavior. This all looks great to me. . You also changed the getStringValue...here I think this is a problem as it will break a lot of third party code. This is why you had to fix a lot of failing test. Instead of changing the behavior of an existing function it would be much better to offer a second function to serialize to python format (or adds a parameter to the existing one to control the behavior eg: getStringValue(SerializingMode mode=SerializingMode::ClassicSofa)). The underlying idea is that by default old code will function as usual and ""awared"" users can take profit of the existing function getStringValueAsPython() or getStringValue(SerializingMode::Python). . I'm sorry because I think it probably took you a lot of time to update the failing tests but the tests shouldn't have been changed, only new one should have been added to validate the new syntax and corner case. . Minor details: ; There is some msg_error(""(S)Vector"") in vector shouldn't it be vector<> instead ?. ; Maybe you will find this pattern usefull: ; ```cpp; namespace sofa {; namespace helper {; namespace logging {; inline bool notMuted(const sofa::helper::io::MeshVTK* ){ return true; }; inline ComponentInfo::SPtr getComponentInfo(const sofa::helper::io::MeshVTK*); {; return ComponentInfo::SPtr(new ComponentInfo(""MeshVTK"")) ;; }; } /// logging; } /// helper; } /// sofa; ```. It allows to write the implicit (this) msg_* as in ; ```cpp; msg_error() << ""Blahblah""; ```. Instead of; ```cpp; msg_error(""MeshVTK"") << ""Blahblah""; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/330#issuecomment-314893430:335,test,tests,335,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/330#issuecomment-314893430,6,"['log', 'test']","['logging', 'test', 'tests']"
Testability,"Hi Thomas,. Glad you made this PR, so thank you. ; ; Some feedback:; - Everything in sofa is a component so the default name of ""DistanceGridComponent"" should be shortened into ""DistanceGrid"" when it is used in the scene. You can do that by overriding the function std::string Base::getClassName() const.; - I would be much better to have the number of samples (the nx,ny,nz) stored at the beginning of the tmg file. ; - I assume that in MeshGenerationFromDG, the DG is for DistanceGrid. As it work with ImplicitShape wouldn't it be better to name it MeshGenerationFromImplicitShape ? ; - There is not tests for the added classes.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/354#issuecomment-319761815:602,test,tests,602,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/354#issuecomment-319761815,1,['test'],['tests']
Testability,"Hi Thomas,. I made a small PR #371 trying to implement that. As you said a message is send if duplicated names exists.The name checking is done either on the node or on the object lists. The PR also contains basic tests to validate thee behavior. But, as usual, things are a bit more complex in the details...so I have several question.; - do we really want to have a test of linear complexity for each add to the scene graph ? ; To face this issue I have two solution one is to only activate the tests when there is #define WITH_SOFA_DEVTOOLS so that when we are using runSofa to make or debug ""scenes"". Once the scene is done it can be executed with improved performances on a runSofa (or any other scene runner) compiled without the DEVTOOLS enabled. ; The other approach would be to have an implicit extra param to the addChild(..., warnOnDuplicates) ;. - Second issue is that it is unclear to me if we have to check that all the time. Isn't there cases in which we have duplicate name (ie when adding object either with an""undefined"") that are then fixed ""later"". There is a lot of test (in simulation) that are now emitting a warning because of that so I assume the ""old"" behavior usage was quite common. . So guys (@jeremieallard, @thomas-lemaire, @matthieu-nesme, @maxime-tournier , @bcarrez , @fredroy ...) ...what design do we want ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/362#issuecomment-323859167:214,test,tests,214,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/362#issuecomment-323859167,4,['test'],"['test', 'tests']"
Testability,"Hi Thomas,. You said:; ""As long as the deserialization operator is compatible with the serialization one, I do not see any issue. And no example scene is failing because of that."". You have to take the whole picture into consideration, everyone is not using serialization/deserialization as ""pairs"". The actual default serialization format is used in a lot of other software (GUIs, scene processing tools written in python, perl and C++). If you change the behavior of the default serialization mechanism all of them will stop working and required to be updated. This is a very, very, very nasty thing to impose to other users of Sofa. A PR doing has no changes to be accepted. . Actually tests is part of our guard line because they validates the API compatibility and allow us to detect changes that breaks it. The existing tests should be considered as validating the ""the existing"" sofa API. It was normal to have them to fail on your PR because it shows that the PR was breaking the compatibility. . I really like the idea of keeping the old serialization behavior as it is and add the other deserialization as an extra feature. This will make the whole PR transparent for users that don't want to update their code base. It thus it can be merged very quickly. . About the test: ; You are right that it would be better if we had test specific tests to validate the serialization alone.; I personally would like to have tests to validate that getValueString() return ""1 2 3"" and that getValueAsPythonString() return ""[1 2 3]"" . And also as you said having tests to validate against the real values instead of their serialization would be nice. . . About the branches:; The rule is to never work directly on the sofa-framework repository. There is no reason to do so (if you really want to make two PR one in anatoscope and one in sofa ... you need to to that from two branches located in the anatoscope repo). Otherwise this consume a lot of disk space on the CI servers that we have to fix manual",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/330#issuecomment-315028626:689,test,tests,689,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/330#issuecomment-315028626,2,['test'],['tests']
Testability,"Hi Vlad. We have discussed your PR during the sofa dev meeting. And this is what came out : ; This is of interest but would require an example/context (plugin using it) of use to see how you use it. More over, it still need a lot to do to integrate it in a more standardized way to be more generic regarding the type of element. And finally, and we could help you for this, this feature would need unit tests. This pr is currently set to WIP, waiting for further comment from you.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4226#issuecomment-1757148121:403,test,tests,403,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4226#issuecomment-1757148121,1,['test'],['tests']
Testability,"Hi again @EulalieCoevoet ; I tried to check the difference with the PR #797; I suppose it is this commit: https://github.com/sofa-framework/sofa/pull/798/commits/5f56d38ac531e7dfd8a0d63eb7d00ddc870c21ea; Could you add in 2 lines in the header, what criteria is used to create the hash table and then which method is used to find element in the table. If already done I apologize, the changes log is very hard to read.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/798#issuecomment-444042411:392,log,log,392,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/798#issuecomment-444042411,1,['log'],['log']
Testability,"Hi all, . BaseLoader was implemented in .h. ; This is bad so I splitted it into BaseLoader.cpp/h ; Then I removed the un-needed includes; Then I updated all the codebase that were missing specific includes. In case your code does not compile... after this PR then you need to add the include you are missing ; (probably fstream or sofa::helper::system::FileRepository) ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/393:622,test,test,622,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/393,2,['test'],['test']
Testability,"Hi all, . I'm not sure SOFA_SUPPORT_MAPPED_MATRIX is used anymore. ; It is based on defines and there is no way to activate it from CMakeLists.txt. ; I suspect it is connected to some SOFA_DEV repository. Anyhow, as it does not seems used anymore I remove it. In case this is important to you please; contact us so we can find a better design than using ifdef's. . This one is based on stc5 branch (not master). . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/819:665,test,test,665,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/819,2,['test'],['test']
Testability,"Hi all, . It was tested two weeks ago at Defrost, @EulalieCoevoet try our tutorials/tripods and it works like a charm. @TanguyNav found a bug that was reported. To us, it is going in the right direction and we support the merge of this work. . We hope the rest of the community will provide feedback asap.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1469608892:17,test,tested,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1469608892,1,['test'],['tested']
Testability,"Hi all, . The failing test in Compliant seems to be broken by design. The object holds in SPTR pointers are reused (dof1, node1) while there is dangling WriteAccessor still pointing to them...leading to a crash in the WriteAccessor's destructor. So it is just ""normal"" for the tests to crash and it a good news it does now so we can fix it in a future PR.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1269#issuecomment-610036837:22,test,test,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1269#issuecomment-610036837,2,['test'],"['test', 'tests']"
Testability,"Hi all, . There has been quite a lot of discussion recently about how the to implement update mecanisms. ; There is of course the DataTracker, but we are quite a lot to implement complementary mecanism in our respectives plugins so it may be a good idea to see what can be factorized into SofaCore. To do that it would be nice to have examples / snippets / draft of the different approaches we have tested or in mind so that we can evaluate the code impact and interoperability. @bruno-marques, @hugtalbot, @epernod, @jnbrunet feel free to add your ideas. ______________________________________________________; Dedicated Gitter room : https://gitter.im/sofa-framework/data-update?utm_source=share-link&utm_medium=link&utm_campaign=share-link",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/597:399,test,tested,399,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/597,1,['test'],['tested']
Testability,"Hi all,. Here are the result why BarycentricMapping<> is failing in the BarycentricMappingTruss example. Summary on how object are registered in the factory in sofa/master: ; 1) BarycentricMapping<Vec3d,Vec3d> is added into the factory using ""BarycentricMapping"" as entry name; Then ; 2) BarycentricMapping<Vec3d, Rigid3d> is aded into the factory using ""BarycentricMapping"" as entry name (so this actually adds a new template to the existing one). With the PR this is what happens:; 1) BarycentricMapping<Vec3d,Vec3d> is added into the factory using ""SofaBaseMechanics.BarycentricMapping"" as entry name. ; 2) Then, for compatibility, it adds an alias from BarycentricMapping to SofaBaseMechanics.BarycentricMapping. ; 3) Then BarycentricMapping<Vec3d, Rigid3d> is added into the factory using ""SofaMiscMapping.BarycentricMapping"" as entry name. This is actually correct (as SofaMiscMapping is the target where this mapping lies in). But the alias is not updated to point both to SofaBaseMechanics.BarycentricMapping and SofaMIscMapping.BarycentricMapping...which, actually seems pretty logic...one name - one object. . Maybe we can change the alias mechanism so we allow an alias to point to multiple different object...which I'm not very convinced this will not get into troubles.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2512#issuecomment-1007333869:1087,log,logic,1087,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2512#issuecomment-1007333869,1,['log'],['logic']
Testability,"Hi all,. Here is a proposal PR to remove Aspects from the core of Sofa. ; The rational behind this PR is that:; - they are very rarely used, ; - they are often mis-understood by most developpers and thus are mis-used.; - they introduce a lot of noise at the core of our code base for near to zero benefit,. Removing them is in fact easy and should not be breaking as the code actually compile with 1 Aspect...so it should behave exactly the same with or without aspects. @JeremieA, @epernod, @fredroy . EDIT: this topic was discussed in https://github.com/sofa-framework/sofa/issues/1147; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1269:840,test,test,840,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1269,2,['test'],['test']
Testability,"Hi all,. I will try to give weekly news on the runSofa2 project progress. . So let's start, ; here are runSofa2 recent merges:; - adding a new widget to handle DataFilename (which pop-up a file selector); - adding a new widget to handle Data<RGBAColor> ; - adding a new widget to handle Data<OptionsGroup> ; - add a button in the graph view to open the current scene in your prefered text editor. . recently opened merge requests:; - add the files needed to do testing of qml & sofaQtQuick component. ; - code cleaning around SofaApplication; - replace the DynamicContent drop down menu by a static one name ViewSelector. If you have time & interest please join the development effort. ; https://gitlab.inria.fr/ocarre/sofaqtquick",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/187#issuecomment-300765854:461,test,testing,461,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/187#issuecomment-300765854,1,['test'],['testing']
Testability,"Hi all,. I'm from elementary school doing an internship at DEFROST. ; I was asked to update the serr into msg_error(). ; And I was asked to update the sout into msg_info(). Here is the result of my work. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/916:455,test,test,455,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/916,2,['test'],['test']
Testability,"Hi all,. I'm hesitating between the following two design:. ```__getattr__``` returns a DataContainer object implementing lot of operations allowing:; ```python; root = Sofa.Node(""root""); obj = root.createObject(""MechanicalObject"", name=""test"", position=aList). np = numpy.zeros((100,3)). p.position = [[1.0,2.0,3.0]]; p.position = np; p.position += [1.0,2.0,3.0]; p.position += np; p.position += Vec3d((0.,0.0,0.0)). ## To get a numpy array view out the DataContainer it is needed to request it like that:; with p.position.array() as wa: ; wa += np ; wa *= np; # Other numpy.array operation; ```; This syntax guarantee that the beginEditPtr/endEditPtr is correctly called when the data are written. The drawback is that I have to re+implement a lot of operation on the DataContainer object (add,mul, iadd, imul, etc..etc...)which is annoying. The other approach is much lighter in term of code as it is directly a numpy.array out of the ```__getattr__``` function. This allows to do; ```python; np = numpy.zeros((100,3)). p.position = [[1.0,2.0,3.0]]; p.position = np; p.position += [1.0,2.0,3.0]; p.position += np; p.position += Vec3d((0.,0.0,0.0)). ## To get have correct management of begin/end... you should do like that:; with p.WriteAccessor(""position"") as wa:; wa += np ; # Other numpy.array operation; ```; The problem with this version is that doing:; ```; d = p.position; d += np; ```; Will change the data through numpy code without incrementing the data counter which violates the expected semantic of the DataEngine mechanismes. I have tried different solution in the last two days but cannot find one. . So any comment and help is welcomed :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/771#issuecomment-426624335:237,test,test,237,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/771#issuecomment-426624335,1,['test'],['test']
Testability,"Hi all,. In some of my work I tend to add new Data to Base object and as rightly pointed by @matthieu-nesme this may have a significant cost. To have more insight I just made a quick test with the following result:; The time to create 200 000 (empty) component (without calling their init() function):; - with 6 Data field is 1.10sec; - with 10 Data field is 1.55sec; So, one data field added to a component cost 0.05ms at component creation (it is higher than what I expected). Now for a more realistic scenario with 200 SphereModel created and initialized one extra data field rise the cost from 3.1 ms 3.2ms and that this is 'dialuated' in all the other cost (collision detection, mechanics). My question now is should we stop adding Data to Base or do we find a solution to decrease the cost of all the initData ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/44#issuecomment-276748182:183,test,test,183,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/44#issuecomment-276748182,1,['test'],['test']
Testability,"Hi all,. It seems there a lot of new test-scene failures since the merge of this PR. ; https://ci.inria.fr/sofa-ci/job/centos_clang-3.4_options/635/console. We probably need to fix that in a new PR.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/219#issuecomment-297932196:37,test,test-scene,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/219#issuecomment-297932196,1,['test'],['test-scene']
Testability,"Hi all,. It seems there is new test-scene failure since the merge of this PR. ; - examples/Components/topology/Bezier2MeshMechanicalMapping.scn: [ERROR] [DAGNode ""TriangleTopology""] Object type ""Bezier2MeshTopologicalMapping"" creation Failed; - examples/Components/topology/Bezier2MeshMechanicalMapping.scn: [ERROR] [DAGNode ""TriangleTopology""] Object type ""Bezier2MeshMechanicalMapping"" creation Failed; - examples/Components/topology/Bezier2MeshMechanicalMapping.scn: [ERROR] [DAGNode ""BezierCubicTriangleTopology""] Object type ""BezierTriangleSetTopologyContainer"" creation Failed; - examples/Components/topology/Bezier2MeshMechanicalMapping.scn: [ERROR] [DAGNode ""BezierCubicTriangleTopology""] Object type ""BezierTetra2BezierTriangleTopologicalMapping"" creation Failed; - examples/Components/topology/Bezier2MeshMechanicalMapping.scn: [ERROR] [DAGNode ""BezierCubicTriangleTopology""] Object type ""BezierTriangleSetGeometryAlgorithms"" creation Failed; - examples/Components/topology/Bezier2MeshMechanicalMapping.scn: [ERROR] [DAGNode ""BezierTriangleMeshFromEngine""] Object type ""BezierTetrahedronSetTopologyContainer"" creation Failed; - examples/Components/topology/Bezier2MeshMechanicalMapping.scn: [ERROR] [DAGNode ""BezierTriangleMeshFromEngine""] Object type ""BezierTetrahedronSetGeometryAlgorithms"" creation Failed; .... more in the logs....; ; We need to fix that in a new PR.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/222#issuecomment-297932539:31,test,test-scene,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/222#issuecomment-297932539,2,"['log', 'test']","['logs', 'test-scene']"
Testability,"Hi all,. One test related to LightManager is failing only on windows eg:; https://github.com/sofa-framework/sofa/commit/6d3e1398363cc617124fd25522193ef20b1b7b1c. The failing scene is rather simple: ; ```xml; <Node name='Root' gravity='0 -9.81 0' time='0' animate='0' >; <Node name='Level 1'>; <MechanicalObject template='Vec3d'/>; <LightManager name='lightmanager'/>; </Node>; </Node>; ```; Any one know why the test on Windows behave differently to to other plateforms ? . DM.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/54:13,test,test,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/54,2,['test'],['test']
Testability,"Hi all,. Thank Erik for the review of this PR. It seems there is one scene test failure that may be related ""RuleBaseCollisionManager"". @ChristianDuriez any idea where this could come from ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/901#issuecomment-458522196:75,test,test,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/901#issuecomment-458522196,1,['test'],['test']
Testability,"Hi all,. This PR is implementing what was discussed in in #362 . CHANGELOG:; - refactor the SceneChecker object for more modularity. Adding new checks should be easier. ; - add a SceneCheckDuplicateName that warns user if the scene contains duplicated names. ; - add the corresponding tests. ; - use the new version in runSofa. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/392:285,test,tests,285,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/392,3,['test'],"['test', 'tests']"
Testability,"Hi all,. We are using bigger and bigger mesh at defrost and noticed that the init time of BarycentricMapping<Tetrahedron> is growing a lot. . Eulalie pointed out that this is because there is a imbricated for() loop to find closest tetrahedron for each of the points in the target geometry. . At line 865 in BarycentricMapping.inl in BarycentricMapperTetrahedronSetTopology; ```cpp; ....; for ( unsigned int i=0; i<out.size(); i++ ); {; sofa::defaulttype::Vec3d pos = Out::getCPos(out[i]);; sofa::defaulttype::Vector3 coefs;; int index = -1;; double distance = 1e10;; for ( unsigned int t = 0; t < tetrahedra.size(); t++ ); {; sofa::defaulttype::Vec3d v = bases[t] * ( pos - in[tetrahedra[t][0]] );; double d = std::max ( std::max ( -v[0],-v[1] ),std::max ( -v[2],v[0]+v[1]+v[2]-1 ) );; if ( d>0 ) d = ( pos-centers[t] ).norm2();; if ( d<distance ) { coefs = v; distance = d; index = t; }; }; if ( distance>0 ); {; ++outside;; }; addPointInTetra ( index, coefs.ptr() );; }; ```. Adding a geometric acceleration structure (aabb, sweep & prune, voxel or spatial hashing would help in keeping to a n.log.n complexity and reduce a lot the computation time. ; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/784:1097,log,log,1097,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/784,1,['log'],['log']
Testability,"Hi all,. as earlier, I'm making PR on several 'simple' behavior that I implemented a long time ago but could make user of runSofa happier. Here is one that allows to drag & drop data or scene from the gui into and external text editor to have the data serialized. This feature is very useful if you like editing your scene in runSofa and need to transfer the results into sofa. . As GUI stuff are nicer with image... I will make a small video to show it in use. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/373:715,test,test,715,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/373,2,['test'],['test']
Testability,"Hi all,; As discussed with @alxbilger in https://github.com/sofa-framework/sofa/issues/3499. Add a check that catches an empty system to solve. This might happen due to topological changes. Thanks again for the help, @alxbilger ! :). Cheers,; Paul; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3529:788,test,test,788,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3529,2,['test'],['test']
Testability,Hi all. @EulalieCoevoet @epernod @matthieu-nesme @thomas-lemaire @hugtalbot @guparan @fredroy . I suggest we use this issue for general communication about what is happening on the UX group either on github and/or on gitlab. . Please tell anyone interested to join/. Our general target for the next sofa release (17.06) is to ship a runSofa2 application. ; This means we only have less than 3 month. ; I suggest that in April & first day of May we add the missing features and we keep the last month to test and bug fix the software. . DM.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/187#issuecomment-291478457:503,test,test,503,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/187#issuecomment-291478457,1,['test'],['test']
Testability,"Hi bruno, thanks for this PR :). - It compiles nicely on the different targets on the CI,; - The implementation follows the unit-test of file monitor. . So it looks ok to me. @guparan ; Is there a way to make something like ([ci-fullbuild]) so that we see if there is compiler's warning in the PR code ? This could be really useful.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/109#issuecomment-267908657:129,test,test,129,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/109#issuecomment-267908657,1,['test'],['test']
Testability,"Hi dear reviewers,; I'm waiting for the ci-build, but I believe that the problems are now solved, and the fix now comes with a few unit tests =); @matthieu-nesme I also restored the static_assert that I previously removed so the code is not only better.; Any other suggestion?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/317#issuecomment-325378873:136,test,tests,136,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/317#issuecomment-325378873,1,['test'],['tests']
Testability,"Hi everyone, this this is an ""all in one"" branch that adds functions in Sofa ; before we can make a PR with the PSL plugin. The PR is two month old...no one complains and now all the added function are tested & documented so it may be merged soon.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/410#issuecomment-344618765:202,test,tested,202,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/410#issuecomment-344618765,1,['test'],['tested']
Testability,"Hi everyone,. I'm working right now on a small improvement that will allow people to directly import SofaPython plugin library (libSofaPython.so) inside their python script without the need for an external application (exemple runSofa). A python script could than looks something like:. ```; # scene.py; from libSofaPython import Sofa. root = Sofa.loadScene(""examples/Demos/caduceus.scn""); root.init(); for i in range(0,2):; ...; root.simulationStep(0.01); # Some data and timing analysis in python here...; ...; Sofa.cleanup(); ```; and could be called simply with; `python scene.py`. You can follow the development on the branch; https://github.com/jnbrunet/sofa/tree/sofa_python_without_executable. For now, the primary use for us is to create a batch application directly in python for our experiments (mainly time and precision benchmarks), but maybe some day we could also use this for a complete GUI experience. If you got any suggestion, please do not hesitate to write them here. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/492:833,benchmark,benchmarks,833,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/492,1,['benchmark'],['benchmarks']
Testability,"Hi everyone. I just created a new branch (https://github.com/mimesis-inria/sofa/tree/cmtopology_module) where I put everything into a module called ""SofaCombinatorialMaps"" instead of using different existing sofa modules.; To test it, you just have to put the cgogn repository that @guparan extrated earlier into a sofa/modules/SofaCombinatorialMaps/cgogn2 directory and it should compile :crossed_fingers:.; I am able to launch examples/CMTetrahedralCorotationalFEMForceField.scn",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/700#issuecomment-412876226:226,test,test,226,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/700#issuecomment-412876226,1,['test'],['test']
Testability,"Hi fred,. You are right, an automated system to report the default values is better. . Your ""[shadowing] "" in the docstring make me wonder a more general question about datas that only have a meaning when an other parameter is enable. . To make a more user friendly sofa we should: ; - test the data this kind of pattern in the init function:; ```cpp; if( !d_shadowsEnabled.getValue() && d_shadowTextureSize.isSet()){; msg_warning(this) << ""The shadow are not enabled but the shadowTextureSize parameter is set. ""; ""To remove this warning you can either : ""; ""- enable the 'shadow' parameter. "" ; ""- remove the use of the shadowTextureSize parameter.""; }. - group and gray/ungrayed in the GUI the connected parameters. Do you think we could use the widget string in the Data field for that ?; ; DM.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/73#issuecomment-264118684:286,test,test,286,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/73#issuecomment-264118684,1,['test'],['test']
Testability,"Hi guillaume, . Many thanks for the links to the jenkins API, this will helps us in differentiating the tests. . I think the meaning of the colors depend on what the dash board is used for:; a) if the dash board is used to know what is the current state of the sofa code base (so answer the question: ""is this version of sofa good"") then, as you say, it should be red showing that something is bad. . b) but, if the dash board is used to get feedback of a given (personal) contribution (answering the question: ""did I introduced regression or is my contribution positive""). In this perspective a transition from green-to-red will be considered as:; - ""SHIT, I did something wrong !""; - ""OMG, other people will see that !""; - ""I quickly need to revert or fix that mess"". ; - ""But I have no time to fix the Sofa bug...so I remove the test i made showing an existing defect"" . From what I see in the defrost team the dash board is only use in the (b) situation and I regularly see people not commiting because they are afraid of putting the dash board to red. . Consequently and if we want to increase the number of commits (containing tests showing existing sofa defect) we should reward contributor with an positive feedback mecanism (whatever it is). DM.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/52#issuecomment-258838277:104,test,tests,104,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/52#issuecomment-258838277,3,['test'],"['test', 'tests']"
Testability,"Hi guys!. Thanks again, Bruno, for your suggestions! I'm happy to read you find the PSDE useful. I especially like your extension to allow for for automatic derivation of the types for Inputs. This was also one of my top ideas to improve the PSDE, but I didn't have any more time to pursue this development. In the next days I'll test your Pull Request and try to give feedback on the different topics discussed here!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-392039499:330,test,test,330,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-392039499,1,['test'],['test']
Testability,"Hi guys,. Actually I think this PR should not be merged in this state. It is a proof of concept to show the possibilities.; I just updated a scene that you can use to test the new components. The scene called ""TetrahedralCorotationalFEMForceField"" has two nodes. The first one uses ; the components ""VolumeTopologyContainer"" and ""CMTetrahedralCorotationalFEMForceField"" that are completely written using cgogn and ""MapTetrahedronSetTopologyContainer"" a compatibility wrapper that allows to use ""classical"" sofa components with cgogn. @damienmarchal concerning your questions:. - what the PR does precisely ?; - This PR adds a new data structure for handling meshes. This data structure is designed to handle dynamic (with topological changes) meshes.; - what is the existing state on this topic in Sofa (the title speak about dynamic topology...isn't there dynamic topology in Sofa since year) ?; - I think there is a pipeline for topological changes in Sofa. I do not know much about the efficiency of this pipeline. What I can say (I should provide figures) is that this data structure is as effective as the sofa ones in ""static"" scenarios and more effective and reliable in ""dynamic"" scenarios.; - how this PR handle the problem,; - by changing to a more appropriate data structure; - use CGOGN library... what is this CGOGN library ?; - a topological modeling kernel (see https://cgogn.github.io). I am not sure you need more information about it.; - argument on why the PR is it useful/mandatory/improvement, trying to convince people why they should spend time testing it,; - this work has been in progress since 3 years now. His interest has already been debated. I do not want to debate an infinite time on it. If someone is interested in topological changes, it should save him time.; - provide some idea on how invasive the PR will be (non breaking at all, breaking the SofaCore API, breaking existing scenes); - depends on the meaning of beaking. It does not change the sofa API for topolo",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/700#issuecomment-402690583:167,test,test,167,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/700#issuecomment-402690583,1,['test'],['test']
Testability,"Hi guys,. This PR is a proof of concept to show an alternative implementation dynamic topologies and meshes using the CGOGN library. If you never heard about, CGOGN is a topological modeling kernel (see https://cgogn.github.io) implementing efficiently combinatorial maps to encode the topology and geometrical informations. . The current implementation is based on implementing new topology into new components. The PR introduce the following components: ; - VolumeTopologyContainer ; - CMTetrahedralCorotationalFEMForceField ; - MapTetrahedronSetTopologyContainer (wrapper that allows to use ""classical"" sofa components). The PR is not supposed to be merged in this state and we welcome any feedback on how to improve and generalize this work. EDIT: I (damien) changed the description of the PR trying to summary the discussion. . EDIT 2: ; Steps to compile:; - checkout the branch with a modularized version from [ (https://github.com/mimesis-inria/sofa/tree/cmtopology_module)](https://github.com/mimesis-inria/sofa/tree/cmtopology_module); - checkout CGoGN in a folder sofa/modules/SofaCombinatorialMaps/cgogn2; Compile and run the examples in sofa/modules/SofaCombinatorialMaps/examples. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/700:1445,test,test,1445,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/700,2,['test'],['test']
Testability,"Hi mathieu, ; ; This is a good question. . I recently wrote a lot test for sofa component and it appears to me that more than half of my tests cases are in fact verifying that component correctly rise errors or warnings when they are used improperly. Making these tests is very important to avoid un-detected bugs on the error handling code paths and it bring a lot to the general quality of sofa. . About the fact that the ""error as test failure by default"" is covering 99% of our tests... to me this is an indication that our tests are only covering half of the things they should and I'm not sure we should facilitate this behavior. . This is why I came up to making the things explicit in each test because it force the test writer to specify what are his underlying assumption and expectation for each of his tests making things very clear. In addition it put in front of his eyes what he is testing.. and what he is not testing. . PS: I really like the very detailed test failure that are reported with the explicit approach, we have either the filename & lineno of the failing test as well as the location of the message emission. ; eg: https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5020/testReport/(root)/DilateEngine_test_0/NormalBehavior/. EDIT: Your question make me think that some way to improve the things so maybe we can discuss what are the desirable features and how to expose them to the developpers. This is very hard because it is connected to lack of standardized way our code base reports errors (not exception, some uses error codes ,some uses messages). But I'm very afraid of starting such kind of very impacting discussion (I want to do UI ;)). In the meantime I suggest to use this PR. . EDIT2: what should i do with this:; https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5020/testReport/(root)/TrianglePressureForceField_test_0/trianglePressureForceFieldTest/ ? ; 1) Should I ignore the warning in the test generation ? ; 2) Should the function be pure virt",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288543197:66,test,test,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288543197,11,['test'],"['test', 'testing', 'tests']"
Testability,"Hi matt, . Can you have a look at my last version...the one that mimic the gtest API. ; It is not solving the point you are addressing but I see good things in this solution as it makes everything looking very consistant and in a test, no one complain there is a lot of EXPECT_ ... so adding few more to check the message behavior looks very fine to me. ; In addition it also report correctly where the problem arise instead of reporting that the problem happens in the base class. . Now about your suggestion... I like it because it is more like saying that everything that is not explicitely allowed is a failure and I really support that. I'm not yet sure how to mix the two things but we will find that ;). PS: have you noticed that if we makes warning a failure by default we will have +30 test failure in the current sofa (which is fine to me because these failures a either showing a problem or a not precise enough test). . EDIT: I may have a drafted mix between the two approach soon.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288691167:230,test,test,230,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288691167,3,['test'],['test']
Testability,"Hi matt,. 1) Color are not disabled in runSofa for me. It is only one line that disable them in Sofa_test.cpp and I don't see why it would impact something else. Do you have any idea ? ; 2) Fatal is already part of the default mode. ; 3) I removed Warning&Deprecated by default ; 4) There is no need to change all the tests if in the future if we want to reactivate Warning&Deprecated by default, we will just have to change few lines in Sofa_test.h.; Maybe my scoping examples was not clear but the whole system is scoped per type of message so EXPECT_MSG_NOEMIT(Error) in tests have not consequence on the fact that you can add EXPECT_MSG_NOEMIT(Warning) in Sofa_test to catch all warnings. ; Do you see what I mean ? . About explicit test vs default mode... ; To me if the only aspect we care is how fast we can disable/re-enable tests failures then the default mode in Sofa_test is great. But is this the only aspect we care ? ; What about the fact that default mode is reporting useless filename&line (.../Sofa_test:93). Because of that I loose time each time I have to investigate test failures. On the contrary explicit messages specifications reports real file&line and allow to narrow the problem to very precise code location which save time. And these savings sums up each time someone is looking at tests failures. . In general I write a test once... but investigate failures several time... so I find it worth the effort of spending a bit more time on writing a good test with narrow message catching because they proved to saves time while investigating failure. . This is a totally different story with the time saving of changing the default mode by changing Sofa_test. It saves time as long as we are hesitating on what should be the default mode but after that it will slow down all failure investigations. . So... I made my best to explain why I care of explicit test but the important things to me are:; - what do I have to change so that PR can be be merged so that I can close it",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-292681008:318,test,tests,318,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-292681008,4,['test'],"['test', 'tests']"
Testability,"Hi matt,. I made a new version mixing you expectations and mine :) ; The implementation is probably drafty but I like the general API...; Two aspect I like is that:; - it is ""incremental"", each time you add more EXPECT_MSG_ in the code better are the narrowing of the errors. ; - the defaut mode can be specified in a Sofa_test<> as well as in fact into any object or function body; - it is stack based so we restore the context when an area is left. To give you a look of how it is (the V2 stuff are just transitional of course):; ```cpp; #include <SofaTest/Sofa_test.h>; using sofa::Sofa_test;. #include <SofaTest/TestMessageHandler.h>; using sofa::helper::logging::GtestMessageHandler ;. /// We can define a default policy for a complete class this way so that if not more; /// expectation are given this generates test failures.; class Sofa_test2 : public Sofa_test<float>; {; EXPECT_MSG_NOEMIT_V2(Error) ;; EXPECT_MSG_NOEMIT_V2(Warning) ;; EXPECT_MSG_NOEMIT_V2(Deprecated) ;; };. class TestMessageHandler_test : public Sofa_test2; {; public:; void defaultTestBehavior(); {; msg_deprecated(""HERE"") << ""This should generate a failure"" ;; msg_warning(""HERE"") << ""This should generate a failure"" ;; msg_error(""HERE"") << ""This should generate a failure"" ;; }. void catchingTestBehavior(); {; EXPECT_MSG_EMIT_V2(Warning) ;; EXPECT_MSG_EMIT_V2(Error) ;. msg_warning(""HERE"") << ""This should not generate a failure"" ;; msg_error(""HERE"") << ""This should not generate a test falure"" ;; }. /// THIS TEST SHOULD FAIL.; void expectAMessageissingBehavior(); {; EXPECT_MSG_EMIT_V2(Warning) ;; EXPECT_MSG_EMIT_V2(Error) ;. //msg_warning(""HERE"") << ""This should not generate a failure"" ;; //msg_error(""HERE"") << ""This should not generate a test falure"" ;; }. void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT_V2(Warning) ;; EXPECT_MSG_NOEMIT_V2(Error) ;. msg_warning(""HERE"") << ""This should generate a failure but with line number close to "" << __LINE__ ;; msg_error(""HERE"") << ""This should generate a test falure wi",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288782643:616,Test,TestMessageHandler,616,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288782643,3,"['Test', 'log', 'test']","['TestMessageHandler', 'logging', 'test']"
Testability,"Hi matt,. I wanted to test a very basic approach based on completely reinitializing the Python environment ; you can have a look here: https://github.com/SofaDefrost/sofa/tree/reinit-plugin. But there is problem with numpy (an probably other modules) that does not support to be reloaded and crashing sofa. But if I comment the numpy parts it is working ok. . Now the challenge is either to fix the numpy crash or to come with a different approach (probably closer to what I implemented in the livecoding module) in which we don't destroy the python environment but only reload some of the modules. D",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/193#issuecomment-284719373:22,test,test,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/193#issuecomment-284719373,1,['test'],['test']
Testability,"Hi there, . I would bet on a mismatch between system python and user-installed python (osx, right?). You can probably find out by printing `sys.path` from a test sofa scene, and from a regular python script. If the path for the standard lib don't match you should see it, then adapt the python path in the cmake command.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/531#issuecomment-347198220:157,test,test,157,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/531#issuecomment-347198220,1,['test'],['test']
Testability,"Hi there,. You cannot load tests using the python binary because the sofa bindings are only available for the embedded interpreter. . There are some python tests under SofaTest/python IIRC.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/400#issuecomment-329794323:27,test,tests,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/400#issuecomment-329794323,2,['test'],['tests']
Testability,"Hi vlad, this PR has also been discussed during the dev meeting. ; The conclusions are the same as for the #4226 : we need more context/example of use (for instance to see how you use it in your scenes or plugin). . We are also curious to know how you handle differences between this and the group mechanism : what happens if you are in the same time in the same group and in the same layer ? Are the two mechanism really necessary ? ; It could be also possible to remplace the group mechanism by yours to have a more positive mechanism (same layer = collision instead of diffrent group = collision). But for this it would need to handle multiple layer by object. . And finally, again, some unit testing would be great if we manage to find a mechanism that suites every one.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4219#issuecomment-1757168402:696,test,testing,696,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4219#issuecomment-1757168402,1,['test'],['testing']
Testability,"Hi! :). The original issue and nice chronological story is described here; https://github.com/sofa-framework/sofa/issues/3318. TLDR:; 1. The destructor of `NarrowPhaseDetection` should clean up its map of `DetectionOutputVector`s; 2. `IntersectorFactory` should also keep track of already created `TIntersectorClass`s and release the old ones. Cheers,; Paul; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3337:898,test,test,898,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3337,2,['test'],['test']
Testability,"Hi!. When building plugins as standalone projects, the SofaFramework package doesn't expose the cmake config options used to build SOFA.; In the SoftRobots plugin (among others), tests are performed to know if SOFA has been built using the required options (such as SOFA_BUILD_METIS, MODULE_SOFASPARSESOLVER, PLUGIN_SOFAPYTHON, SOFA_BUILD_TESTS etc.) and out-of-tree configurations require to re-specify those options, even though they are only defined in the SOFA build. I've modified the SofaFrameworkConfig.cmake.in to expose those options to whoever does a find_package(SofaFramework), although that might not be the smartest way to do it (the list is non exhausive and it would be best if options were added in a smarter way.; I think that modules such as SOFASPARSESOLVER should export the MODULE_SOFASPARSESOLVER themselves for instance, and so should the plugins.; But then there's also a long list of options that would be worth exposing, such as:; - SOFA_BUILD_TESTS; - SOFA_BUILD_METIS; - SOFA_BUILD_TUTORIALS; - SOFA_WITH_DEPRECATED_COMPONENTS; - SOFA_WITH_THREADING; - SOFA_WITH_DEVTOOLS; - SOFA_USE_MASK; - .... And I don't know where those should be exposed.. So I'm looking fwd to your opinion on the question!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/927:179,test,tests,179,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/927,3,['test'],"['test', 'tests']"
Testability,"Hi!; Here's a simple test scene showing the problem:; ```<?xml version=""1.0"" ?>; <Node name=""lroot"" gravity=""0 -9.81 0"" dt=""0.02"">; <Node name=""Liver"">; <EulerImplicitSolver name=""cg_odesolver"" rayleighStiffness=""0.1"" rayleighMass=""0.1"" />; <SparseLDLSolver saveMatrixToFile=""true""/>; <!-- <CGLinearSolver name=""linear solver"" iterations=""1000"" tolerance=""1e-09"" threshold=""1e-09"" /> -->; <MeshGmshLoader name=""meshLoader"" filename=""mesh/liver.msh"" />; <TetrahedronSetTopologyContainer name=""topo"" src=""@meshLoader"" />; <MechanicalObject name=""dofs"" src=""@meshLoader"" />; <TetrahedronSetGeometryAlgorithms template=""Vec3d"" name=""GeomAlgo"" />; <DiagonalMass name=""computed using mass density"" massDensity=""1"" />; <TetrahedralCorotationalFEMForceField template=""Vec3d"" name=""FEM"" method=""large"" poissonRatio=""0.3"" youngModulus=""3000"" computeGlobalMatrix=""0"" />; <FixedConstraint name=""FixedConstraint"" indices=""3 39 64"" />; <Node name=""BUG"" >; <MechanicalObject name=""MO"" position=""1 1 1 2 2 2 3 3 3"" />; <Sphere radius=""1"" />; </Node>; </Node>; </Node>; ```. I have a very bad comprehension of these things, but apparently, Sofa concatenates the points in the mechanical object ""/dofs"" and ""/BUG/MO"", even though there is no mapping to link both objects.; If you replace the SparseLDLSolver by the CGLinearSolver, it will work, but that's because CG doesn't invert the matrix.; I am reporting @IPeterlik's explanations here, but Igor can undoubtedly explain better than me what's actually happening here.. :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/581#issuecomment-390925346:21,test,test,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/581#issuecomment-390925346,1,['test'],['test']
Testability,"Hi, . This PR follows the changes made in BarycentricMapping (i.e use of spatial hashing to find the nearest points instead of an exhaustive search). This new PR:. 1. Handle cases of several grid cells having the same h index. In such case, the distance between two points, that have the same h index, should be computed only if the points are in the same grid cell. This PR add this implementation. Each element is now stored in the hash table with its corresponding grid cell indices. 2. The nearest point, in a shared grid cell, may not be the global nearest point. To improve that, we detect when neighboring cells may contain a better solution, and do the check. These additional computations are still far better than the exhaustive search. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/896:1000,test,test,1000,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/896,2,['test'],['test']
Testability,"Hi, ; I think I have solved the test problem.. by changing the test ! ; It was not designed to take into account the tolerance of the solver...; see commit:; https://github.com/fjourdes/sofa/commit/78b84592651836809078c18971300f6abde6806a",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459#issuecomment-387922879:32,test,test,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459#issuecomment-387922879,2,['test'],['test']
Testability,"Hi, ; could you specify which version of CGAL and which version of SOFA you are using.; Could you past the error log as well; Thanks",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1334#issuecomment-621363273:113,log,log,113,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1334#issuecomment-621363273,1,['log'],['log']
Testability,"Hi, here is the content:. 1) [SofaKernel] FIX segfault in TetrahedronSetGeometryAlgorithms; The segfault happens when the component is located in a node without; a topology and a mechanical object. Then the 'draw' function is crashing. 2) [SofaKernel] ADD a link to manually set the topology in TetrahedronFEMForceField; The component was searching the topology in the context which was:; - implicit; - constraining the organization of components the scene graph. To solve this I added a SingleLink that allows to specify the topology.; If the link is not set then the existing behavior is used. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/973:847,test,test,847,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/973,2,['test'],['test']
Testability,"Hi, the createFromRotationVector was broken because of inverted inequation. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2332:615,test,test,615,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2332,2,['test'],['test']
Testability,"Hi, tried both SOFA v22.06.00 and v23.06.00 versions, but not able to load Sofa.Component.UserInterface.ConfigurationSetting plugin, which is causing failure of loading all the remaining plugins. check below error log. I am trying to run lapgym repo implementation , reach environment. Repo : https://github.com/ScheiklP/sofa_env; File : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/scenes/reach/scene_description.py; scene header file where plugins are loaded : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/sofa_templates/scene_header.py. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtili",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:214,log,log,214,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,1,['log'],['log']
Testability,"Hi,. As discussed at Journées HPC INRIA in Lille, here is an initial nix package for sofa. It also include a flake (and its lock), which is not mandatory, but ease the use of the package, with commands like; - `nix build`, to compile the package in a sandbox; - `nix develop`, to provide a shell with an environment containing all required dependencies to build the project in the usual CMake way; - `nix run`, to start the software. All these commands take an optional path argument, defaulting to the current working directory, but we could also build / develop / run any commit / tag / branch / fork of the project with eg. `nix build github:sofa-framework/sofa`(for master) or `nix run github:nim65s/sofa/58ae0644d117aea880ed284f6cc0beb7e9802f96`. While here, this also setup some CI for this packaging, mostly to detect early:; - if anything new in the repo would break the nix packaging; - if any update from a dependency in upstream [nixpkgs](https://github.com/NixOS/nixpkgs/) would break sofa. But also, a nix binary cache can be set up with eg. https://www.cachix.org/, so that once a commit is build in CI, users & developers can directly use that cache instead of compiling themselves.; (it is also true in the other way: developers with write access to the cache can send their build result to it so that the CI will be instantaneous cache hit). Here is an example of CI build log: https://github.com/nim65s/sofa/actions/runs/11306279152/job/31446709649. PS: I did not test on macos yet, so this is probably a bit early to expect it work. It at least require darwin signatures I guess, I'll try to test that this week, when I can use an apple system. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ________________________________",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059:251,sandbox,sandbox,251,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059,1,['sandbox'],['sandbox']
Testability,"Hi,. Could you put your scene example here and the error message you get.; The Geomagic plugin just create SOFA components to be used in the scene graph so there should be no interference with the SofaPython3 mechanism.; But nothing is better than testing! 😄",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3185#issuecomment-1327155580:248,test,testing,248,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3185#issuecomment-1327155580,1,['test'],['testing']
Testability,"Hi,. Here is our 'newtests' contributions for sofa this week. . It is very simple and consists in several new test for components:; - Light, LightManager, LocalMinDistance. One of them is tagged with OpenIssue because it shows a User Interface consistency problem; the ambient term of LightManager is a color but it does not accept string based color name as other sofa component do. To fix this we will need to unify the 'color' in all sofa. ; ; There is also a weird test called AllComponent that checks each sofa components if there is a corresponding example. Currently it fails because only 1/3 of them have one. . Finally Jérémie commited a script to convert the alias in a sofa scene to the real component name.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/69:110,test,test,110,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/69,2,['test'],['test']
Testability,"Hi,. I love @sescaida's PythonScriptDataEngine, I find it extremely useful when you don't want to implement a whole component to perform very basic actions. Though I find it cumbersome to have to manually specify the type of the input/output datafields.; While I have no idea (yet) how to fix this for the component's outputs, I implemented a small method to try to derive the input type from the linked value. We could also add scalar types to this method, to be able to handle passing scalar parameters directly from python.; Also, I think it would make more sense to use directly the output of ; ```; datafield->getValueTypeInfo()->name(); ``` ; instead of an arbitrary __char__ when expliciting the datafield type in the PSDE factory. If you have any idea how I could do something similar for output fields, I'm taking any advice :). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629:1089,test,test,1089,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629,2,['test'],['test']
Testability,"Hi,. In order to reduce compile time of sofa plugins, I decided to compile my plugins outside of Sofa (a build folder for each plugin, CMAKE_PREFIX_PATH and CMAKE_INSTALL_PREFIX to tell cmake where to find sofa); Compiling tests then doesn't work since the gtest headers, that are bundled in sofa, are not deployed on sofa's install dir. This PR rectifies that. @sofa-framework/consortium, I also believe that there should be clear guidelines in SOFA to determine what the ""normal"" way of compiling plugins should be.; I believe that outsourced builds should be the way to go, instead of adding plugins through ; `applications/plugins/CMakeLists.txt`; or cmake's; `EXTERNAL_DIRECTORIES`; since it allows people to isolate SOFA a bit more from their work. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/395:223,test,tests,223,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/395,3,['test'],"['test', 'tests']"
Testability,"Hi,. Thanks for this PR and nice work. . This PR: ; - [ ] succeed to be compiled on each configuration on the CI.; - [ ] does not generates new warnings or test failure. ; - [ ] does not break existing scenes.; - [ ] does not break API compatibility. ; - [x] is now 1 week old. Once the CI will confirm nothing is broken and upon @matthieu-nesme agreement I suggest we merge this PR without waiting 1 week :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/139#issuecomment-273764567:156,test,test,156,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/139#issuecomment-273764567,1,['test'],['test']
Testability,"Hi,. The current dash board does not allows to differentiate tests that fails because they are 'showing' a not yet fixed sofa defect to the one caused by regression (ie tests that were supposed to work but don't anymore). . This is a problem because while introducing new regression failure is a bad thing, introducing new tests that exhibit sofa defect is a positive thing. But they have the same results...turning the dashboard to orange. . I see two consequences:; - when there is test failures because of open-issues we will detect much less easily the regressions tests (that are 'more' important !) ; - people will prevent themselves to push open-issues test to avoid to turn the dash board to a not green status (because they are ashamed...or because they prefer to preserve the readability of the dash board to detect regression). So would it be possible to change that so that each tests with a pattern (lke ""OpenIssue"" in their name are counted separately ?. This would allow to reports two numbers instead of one eg:; regression test failure : 0 ; open issues tests failure: 123 ; And also to let the dashboard green for open issues tests failure. . DM.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/52:61,test,tests,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/52,10,['test'],"['test', 'tests']"
Testability,"Hi,. This PR fix the live coding of python component. I found two problems. . One is a bug in the FileMonitor which prevent to monitor several files located in the same directory but given in a different manner as in: ; ```; ""./examples/Afile.txt""; ""/this/is/absolute/examples/Afile2.txt""; ```. The second problem is a missing PythonEnvironement::gil before calling python code. This PR fix the two. ; @guparan and @hugtalbot Could this PR be treated in fast-path please ? . @maxime-tournier I took me a while to understand that ; ```cpp; PythonEnvironment::gil lock(); ; ```; Is not doing anything useful. The problem is well known but in general it is quickly catched but here, as lock is a RAII, everything compile but just crash when calling python code. I'm quite sure this will happen to a lot of people so I wonder if we can make something more elegant that removing the default constructor and forcing to provide the *trace pointer (possibly nullptr). Any idea ? . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/414:1224,test,test,1224,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/414,2,['test'],['test']
Testability,"Hi,. What is exactly the ""Haptic module""? It's weird that is tries to use directly the constructors. You are right that the constructors are protected, so they cannot be used. So I am curious to know if this code ever worked.... To fix the code, you should have a look on the [tutorials](https://github.com/sofa-framework/sofa/tree/master/applications/tutorials), for example this line: https://github.com/sofa-framework/sofa/blob/master/applications/tutorials/oneTetrahedron/oneTetrahedron.cpp#L94; It uses the friend class `New` to instantiate the objects. There are also many examples in the unit tests.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4336#issuecomment-1840186364:600,test,tests,600,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4336#issuecomment-1840186364,1,['test'],['tests']
Testability,"Hi,. While trying to compile SOFA(https://github.com/sofa-framework/sofa => branch ""v23.06"") with LLVM 16 , we are getting linker errors as below,. ld.lld: error: undefined symbol: vtable for sofa::linearalgebra::FullVector<double>; >>> referenced by ld-temp.o; >>> lto.tmp:(sofa::component::odesolver::testing::getVector(boost::intrusive_ptr<sofa::simulation::Node>, sofa::core::TVecId<(sofa::core::; VecType)0, (sofa::core::VecAccess)0>, bool)); >>> did you mean: typeinfo for sofa::linearalgebra::FullVector<double>; >>> defined in: ../../../../../lib/libSofa.LinearAlgebra.so.23.06.00; >>> the vtable symbol may be undefined because the class is missing its key function (see https://lld.llvm.org/missingkeyfunction); clang-16: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [Sofa/Component/ODESolver/Backward/tests/CMakeFiles/Sofa.Component.ODESolver.Backward_test.dir/build.make:212: bin/Sofa.Component.ODESolver; .Backward_test] Error 1; make[1]: *** [CMakeFiles/Makefile2:5981: Sofa/Component/ODESolver/Backward/tests/CMakeFiles/Sofa.Component.ODESolver.Backward_test.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs... To Resolve this, we have included definition of key function of FullVector calss in FullVector.cpp. The key function seems to be resize() - i.e the first non-pure, non-linear and virtual function in a polymorphic class. The actual definition of resize() is present in FullVector.inl file and we have commented it out. . Please let us know if the changes are good. . Thanks,; Sandeep.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4402:303,test,testing,303,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4402,3,['test'],"['testing', 'tests']"
Testability,"Hi,. it is logical that when using a RegularGrid, the discretization should be > 1 in each direction. But the constructor take ; `RegularGridTopology(int nx, int ny, int nz);`. And there is no check on those values. They could even be null or negative.; Then in some methods you have this code:; `i*2*r/(nx-1)`; which could lead to a division by 0 and crash Sofa. As there is not catch and try, how could I block the creation of a RegularGrid(1, 1, 1) ?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/163:11,log,logical,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/163,1,['log'],['logical']
Testability,"Hi,. nice to have you back!. I think the fact that the ```doLoad``` is called 3 times is because your callback is not connected to all your output data at the same time. So each time you ask for a data independently it will relaunch the callback. Then the second point is because you don't override the method ```doClearBuffers```. you can see how ```meshObjLoader``` has been updated in commit ca3a1a4 (I don't know how to link the commit here...); date of the commit: Date: Wednesday, June 24, 2020 2:26:41 PM. I didn't know this loader. It would be nice if you could push a small example with it's mesh in the main repository of SOFA. Like for the other meshloader in: examples/Components/loader/ ; Moreover as soon as a scene is set, it would be tested by the CI of SOFA.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1534#issuecomment-711993815:750,test,tested,750,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1534#issuecomment-711993815,1,['test'],['tested']
Testability,"Hi,. several tests were already done for topological modifier, they are tested through scenes in examples/Components/Topology/TopologicalModifiers. They test: add/remove of topological elements; - Is sofaVerification still used? ; - I can easily rewrite those tests in c++ using the ::Sofa_test api. Is it better? what is the politic between doing tests through scene or Sofa_test.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/43:13,test,tests,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/43,5,['test'],"['test', 'tested', 'tests']"
Testability,"Hi,. yes you are right, thanks!; Do you have a small use case where you could see that bug? (it could be helpful to create a test). Could you push the fix in a PR?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1213#issuecomment-553807961:125,test,test,125,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1213#issuecomment-553807961,1,['test'],['test']
Testability,"Hi,; ; Here's my fix for issue #1534. The problem was the use of `beginEdit()`, `endEdit()`... I'm not sure what was happening exactly,; but it looked like it was triggering extra callback... - I've replaced all `beginEdit()` with `getWriteOnlyAccessor()` and removed the `endEdit()` when there was any. I'm pretty sure `MeshGmshLoader` is also broken. I was about to fix it, but I came across another problem.; `MeshGmshLoader` uses calls to `addTriangle(...)`, `addEdge(...)`, `addQuad(...)`, etc., which are implemented in `MeshLoader`.; For the moment, `addTriangle` is the only one which has been duplicated to work with data returned by `getWriteOnlyAccessor()`.; I think we all agree that duplication of code should be avoided. I'm not sure what we should do here. Should we generalize the use of `getWriteOnlyAccessor()` in all loaders, and change all `addEdge(...)`, `addQuad(...)`, etc., signature once and for all (no duplication)?; Or should it be fine to use `beginEdit()`, and my fix doesn't solve the real problem? . Fixes #1534; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1554:1296,test,test,1296,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1554,2,['test'],['test']
Testability,"Hi,; Found during investigation of https://github.com/sofa-framework/SofaPython3/issues/306; Does not solve the issue, but might still be a good idea. :). Cheers,; Paul. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3365:709,test,test,709,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3365,2,['test'],['test']
Testability,"Hi,; I have also been away for the last 2 weeks, so couldn't test more. Yes, I suspect this is an issue with Wayland, I can probably test that on Friday. It should not matter whether ubuntu is 22.04 or 24.04. Btw, I'll be in Lille from 25/11 to 30/11: https://wiki.2rm.cnrs.fr/AnfRust2024, same as sofa week, so we may find another discussions place there :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2459720224:61,test,test,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2459720224,2,['test'],['test']
Testability,"Hi,; `SpringForceField` currently only implements `applyRemovedPoints`.; If a point is removed from the topology, the springs are removed correctly.; If only an edge is removed, the springs are not changed. https://user-images.githubusercontent.com/29635054/188287191-cebd8b7d-b66d-4f25-90f7-e7b90efa2098.mp4. The PR is marked as WIP, because I need help on correctly registering the component to listen for `core::topology::TopologyChangeType::EDGESREMOVED`.; The current code compiles fine, but the code of `applyRemovedEdges` is never reached. Could someone give me a hint on what is missing? :). Cheers,; Paul; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3269:1154,test,test,1154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3269,2,['test'],['test']
Testability,"Hi,; at the moment, `springsIndices1` and `springsIndices2` are not updated, when calling `removeSpring` in `SpringForceField`. Added a call to `updateTopologyIndicesFromSprings` in `removeSpring`. Cheers,; Paul. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3268:752,test,test,752,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3268,2,['test'],['test']
Testability,"Hi,; removing `SphereCollisionModel` elements from a `EdgeSetTopologyContainer` currently does not work, because . `TopologicalChangeManager::removeItemsFromSphereModel` calls `getCollisionTopology`; https://github.com/sofa-framework/sofa/blob/d42e3547dffaf385448fb077d466fc0bebc39bc9/Sofa/GUI/Component/src/sofa/gui/component/performer/TopologicalChangeManager.cpp#L297; which is not implemented in `SphereCollisionModel`, and the default from `BaseMeshTopology` returns `nullptr`.; https://github.com/sofa-framework/sofa/blob/471a3df6a377f92155f34ab4a75e931ec9559f7f/Sofa/framework/Core/src/sofa/core/CollisionModel.h#L357. I tried porting over the topology linking from [TriangleModel](https://github.com/ScheiklP/sofa/blob/sphere_on_edge_topo_changes/Sofa/Component/Collision/Geometry/src/sofa/component/collision/geometry/TriangleModel.inl), but it seems I am missing something, because it does not work :D ; https://cloud.ipr.kit.edu/s/ZHW7Jkz5yE6wb42. Is anyone seeing something obvious?. Cheers,; Paul. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3203:1550,test,test,1550,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3203,2,['test'],['test']
Testability,"Hi,; thank you for the report and the scene. I have tested on my side and I also have an... helicopter motion.; I will work on it... hopefully this week, or next week. ++erik",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4833#issuecomment-2230189137:52,test,tested,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4833#issuecomment-2230189137,1,['test'],['tested']
Testability,"Hi,; with @IPeterlik we noticed not so long ago that the pointers to the velocity, forces and positions of the mechanical object linked to the Monitor were not pointing at the same place before and after the call to init().; To show the issue I made this test scene for the monitor, but now the problem doesn't show up anymore. So it either has been corrected or the problem came from somewhere else. Anyway the test is coded now, so here's a PR for it. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/312:255,test,test,255,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/312,4,['test'],['test']
Testability,"Hi. I completely thought it was fromModels and toModels. I'll test with input and output, thanks!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1293#issuecomment-605438196:62,test,test,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1293#issuecomment-605438196,1,['test'],['test']
Testability,"Hmmm ok, the Add*.scn are created with empty topo and then topology is created.; Warning is logic.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1199#issuecomment-547830019:92,log,logic,92,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1199#issuecomment-547830019,1,['log'],['logic']
Testability,"Homogeneize the API for update.; A layer is added to avoid a direct access to the DataTracjer which is now private:; - in DataTrackerDDGNode: trackInputData, hasInputDataChanged, haveInputsDataChanged, cleanInputTracker; - in BaseObject: trackData, hasDataChanged. The name of the update function is:; - `doUpdate()` for Engines; - `doInternalUpdate()` for components inheriting from BaseObject. Update engines, and tests accordingly. Rename UpdateInternal(DataVisitor) into InternalUpdate(DataVisitor). Remove the DataTrackerFunctor and its test. TODO: update constantFF with new API. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1163:416,test,tests,416,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1163,4,['test'],"['test', 'tests']"
Testability,"Hopefully this will fix our CI restart problems. We are now clamping the scene-test warnings file to 5000 warnings max.; If clamping is done, an error is reported in output and in scene-test errors summary. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/559:79,test,test,79,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/559,4,['test'],['test']
Testability,"Hot fix ! :fire: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2408:558,test,test,558,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2408,2,['test'],['test']
Testability,Houston we got a problem: https://ci.inria.fr/sofa-ci/job/ubuntu_clang-3.8_options-debug/545/testReport/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/410#issuecomment-346931244:93,test,testReport,93,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/410#issuecomment-346931244,1,['test'],['testReport']
Testability,However it seems to add a failing test on the CI: could this be due to the differences noticed between your machine and the CI?; @epernod @guparan,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1581#issuecomment-724770470:34,test,test,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1581#issuecomment-724770470,1,['test'],['test']
Testability,"Hum, yes, I only tested that on NixOS, sorry. I'll try on ubuntu, with x11 and wayland. I guess this is only a matter of selecting the correct QT_QPA_PLATFORM or something.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2418799849:17,test,tested,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2418799849,1,['test'],['tested']
Testability,"I actually just used grep to parse clang's compilation output to find the files and lines where the warning occurred, then sed to add the override keyword. I didn't do all plugins so there might still be a lot to add. But for the ones I went through, the number of override warnings went from over 1000 to none (with clang 5 on Linux).; It's true that I didn't test on Mac... At least now when we add override somewhere it should remove warnings rather than add more.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/423#issuecomment-333872909:361,test,test,361,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/423#issuecomment-333872909,1,['test'],['test']
Testability,"I added a boolean data, useSymbolicDecomposition, to the sparse solver LDL to enable the user to choose if they want to use a symbolic decomposition or if they want the solver to compute the decomposition at each step.; By default this boolean is true. It will follow the same behavior as previously, the solver will use a symbolic decomposition.; If this boolean is false then the solver will compute the decomposition at each step. I also fixed some spelling mistakes in the commentaries. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2756:1030,test,test,1030,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2756,2,['test'],['test']
Testability,"I added a test (FileRepository_test) empathizing the problem.; Successing on linux, failing on windows.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/17#issuecomment-248837757:10,test,test,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/17#issuecomment-248837757,1,['test'],['test']
Testability,"I agree that maintaining those ifdef are quite cumbersome and there are probably easier ways to manage this. Just a small remark, while arithmetic operations on double are probably faster than float (well, at least on most of our hardware), using float might minimize cache misses and might, with the help of compiler optimisations, produce faster execution times on memory intensive application (like SOFA) . I think we should test this before removing floats from everywhere. If we got different results, maybe we could set a default floating type for the entire Sofa, and allow modules to change this default value for their components.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/827#issuecomment-438663241:428,test,test,428,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/827#issuecomment-438663241,1,['test'],['test']
Testability,"I agree that we should embed the 'muted' test in the macro ; msg_info() << ""Emitted only when InfoMessageLevel is not Muted""... The macro trick should work with clang (but didn't tested) so now we could vote for the version we prefer. ; @matthieu-nesme, @hugtalbot, @thomas-lemaire, @bcarrez, @epernod, @EulalieCoevoet, @fredroy . Which one would you prefer to use: ; ```cpp ; msg_info() << ""I'm a message from the 'this' component...""; msg_info(other) << ""I'm a message from the 'other' component...""; msg_info(""NotAComponent"") << ""I'm a message emitted not from a component...""; ```; or; ```cpp ; msg_info() << ""I'm a message from the 'this' component...""; msg_info_from(other) << ""I'm a message from the 'other' component...""; msg_info_from(""NotAComponent"") << ""I'm a message emitted not from a component...""; ```; or; ```cpp ; msg_info() << ""I'm a message from the 'this' component...""; msg_info_component(other) << ""I'm a message from the 'other' component...""; msg_info_name(""NotAComponent"") << ""I'm a message emitted not from a component...""; ```; Please answer 1,2 or 3 :) . PS1: In case you prefer something else...please explain a bit; PS2: sout/serr will be fixed independently. ; During a transitional period we should make a macro that maps sout to msg_info and serr to msg_warning. PS 3: @thomas-lemaire I have added the muted test to the branch.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/179#issuecomment-281687351:41,test,test,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/179#issuecomment-281687351,3,['test'],"['test', 'tested']"
Testability,"I agree. I also have to modify the SOFA_BUILD_COMPONENTSET to change the levels from core/full/deprecated to core/light/standard/full where:; - core contains only the ""glue"" of sofa (simulation, framework, ...); - light contains a restricted/basic set of components (to be defined); - standard contains most sofa components and features; - full = standard + deprecated components/tests. Hopefully this will be done by the end of this week.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/426#issuecomment-334384140:380,test,tests,380,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/426#issuecomment-334384140,1,['test'],['tests']
Testability,I also would like to get rid of the failure in Utils:; https://ci.inria.fr/sofa-ci/job/centos_clang-3.4_options/1522/testReport/. Here is the associated msg_warning:; [WARNING] [Utils::widenString()] Invalid or incomplete multibyte or wide character. Could it be because this one is changing the locale and depending on the system things goes wrong with the french character used in the string ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/460#issuecomment-335428709:117,test,testReport,117,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/460#issuecomment-335428709,1,['test'],['testReport']
Testability,I am catching up with all PRs of the last four weeks.; @pedroperrusi I would be awesome if you could contribute a test ensuring that we detect the possible problem induced. Would you agree?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2265#issuecomment-891708693:114,test,test,114,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2265#issuecomment-891708693,1,['test'],['test']
Testability,"I am not able to reproduce this issue. I close it for now, but if you have time @jnbrunet and @AndreaMendizabal test it again and re-open the issue if necessary. I tried to run the mentioned scene. Result: an error message without crash; ```; [ERROR] [SparseGridTopology(SparseGridTopology1)] vertex 0 not found in hexahedral topology; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1748#issuecomment-1152390531:112,test,test,112,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1748#issuecomment-1152390531,1,['test'],['test']
Testability,I am not on Ubuntu. It seems to be a problem with a test in the Flexible plugin.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459#issuecomment-389593983:52,test,test,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459#issuecomment-389593983,1,['test'],['test']
Testability,"I am not sure it is necessary to integrate the logger. It makes the code more complex, and IMO nobody will use it.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1333575575:47,log,logger,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3515#issuecomment-1333575575,1,['log'],['logger']
Testability,"I am not sure of the consequence to change the maps, but if :; - the tests (yours + current scene tests) behave exactly the same,; - it is easy to revert in case we find drawbacks later on. I am ok with that.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2047#issuecomment-829324334:69,test,tests,69,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2047#issuecomment-829324334,2,['test'],['tests']
Testability,"I am not sure we want to add it manually to each test.; It would be better if it could be added automatically to any Sofa_test, as it would satisfy 99% of the tests.; It would be more convenient to have extra stuff only for the more complicated tests that raise an error on purpose.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288463882:49,test,test,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213#issuecomment-288463882,3,['test'],"['test', 'tests']"
Testability,"I am on Windows and did not try on Linux, so my hopes still hold as long as that yellow dot does not become a cross for the windows VS build :D. The error on the linux build seem trivial fortunately. However it stopped at the first error... Would it be possible for the build system not to stop at this first error and try compiling the remaining ? Since I cannot test on every platform/os that would be valuable to have all potential error at once.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/262#issuecomment-305322072:364,test,test,364,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/262#issuecomment-305322072,1,['test'],['test']
Testability,"I am trying to compile SofaPython3/master with SOFA v20.06 and it doesnt compiles. This is one of the errors I have. The full log is 2k lines, I wont share if not needed. . ```FAILED: bindings/SofaRuntime/CMakeFiles/Bindings.SofaRuntime.dir/src/SofaPython3/SofaRuntime/Timer/Submodule_Timer.cpp.o; /usr/bin/c++ -DBOOST_ALL_NO_LIB -DBOOST_FILESYSTEM_DYN_LINK -DBOOST_PROGRAM_OPTIONS_DYN_LINK -DBOOST_SYSTEM_DYN_LINK -DBOOST_THREAD_DYN_LINK -DBindings_SofaRuntime_EXPORTS -DNDEBUG -DSOFA_HAVE_SOFAPYTHON3 -I/mnt/D/jjcasmar/libs/srcs/plugin.SofaPython3/bindings/SofaRuntime/src -I/mnt/D/jjcasmar/libs/srcs/plugin.SofaPython3/Plugin/src -I/mnt/D/jjcasmar/libs/srcs/plugin.SofaPython3/bindings/Sofa/src -isystem /usr/include/python3.8 -isystem /usr/local/include/SofaSimulation -isystem /usr/local/include/SofaFramework -isystem /usr/local/include/extlibs/json -isystem /usr/local/include/eigen3 -isystem /usr/local/include/SofaBase -fPIC -fvisibility=hidden -std=c++17 -flto -fno-fat-lto-objects -Dregister= -fvisibility=hidden -std=c++17 -MD -MT bindings/SofaRuntime/CMakeFiles/Bindings.SofaRuntime.dir/src/SofaPython3/SofaRuntime/Timer/Submodule_Timer.cpp.o -MF bindings/SofaRuntime/CMakeFiles/Bindings.SofaRuntime.dir/src/SofaPython3/SofaRuntime/Timer/Submodule_Timer.cpp.o.d -o bindings/SofaRuntime/CMakeFiles/Bindings.SofaRuntime.dir/src/SofaPython3/SofaRuntime/Timer/Submodule_Timer.cpp.o -c /mnt/D/jjcasmar/libs/srcs/plugin.SofaPython3/bindings/SofaRuntime/src/SofaPython3/SofaRuntime/Timer/Submodule_Timer.cpp; In file included from /usr/local/include/SofaFramework/sofa/simulation/Node.h:59,; from /usr/local/include/SofaFramework/sofa/simulation/Simulation.h:25,; from /usr/local/include/SofaFramework/sofa/helper/AdvancedTimer.h:25,; from /mnt/D/jjcasmar/libs/srcs/plugin.SofaPython3/bindings/SofaRuntime/src/SofaPython3/SofaRuntime/Timer/Submodule_Timer.cpp:28:; /usr/local/include/SofaFramework/sofa/simulation/MutationListener.h:37:32: error: variable ‘sofa::simulation::SOFA_SIMULATION_CORE",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1429:126,log,log,126,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1429,1,['log'],['log']
Testability,"I am trying to create a MechanicalObject for a unit test. I have the following:. ```; namespace VNCS; {; namespace Sim2D; {; struct Kernel {; using Real = double;. using SimType = typename sofa::defaulttype::Vec2Types;; static constexpr int SimSize = 2;; using Coord = typename SimType::Coord;; using Deriv = typename SimType::Deriv;; using VecCoord = typename SimType::VecCoord;; using VecDeriv = typename SimType::VecDeriv;; using MatrixDeriv = typename SimType::MatrixDeriv;; using DataVecCoord = typename sofa::Data<VecCoord>;; using DataVecDeriv = typename sofa::Data<VecDeriv>;; using DataMatrixDeriv = typename sofa::Data<MatrixDeriv>;. using Point = Eigen::Vector2d;; };; } // namespace Sim2D. } // namespace VNCS; ```. ```; #include <SofaBaseMechanics/MechanicalObject.h>; #include <SofaBaseMechanics/MechanicalObject.inl>. namespace VNCS; {; namespace Sim2D; {; using MO = sofa::component::container::MechanicalObject<VNCS::Sim2D::Kernel::SimType>;. } // namespace Sim2D; } // namespace VNCS; ```. ```; #include <gtest/gtest.h>; #include <VNCS/2D/MechanicalObject.h>. TEST(MechanicalObject, 2D); {; // Create a Clustering matrix; auto mo = sofa::core::objectmodel::New<VNCS::Sim2D::MO>();; // mo->resize(10);; // auto positions = mo->readPositions();. // EXPECT_EQ(positions.size(), 10);; }; ```; My linking line is the following:. ```; 2/2 0.4/sec] Linking CXX executable bin/tst_mechanicalobject; FAILED: bin/tst_mechanicalobject ; : && /usr/bin/c++ -O3 -DNDEBUG tests/MechanicalObject/CMakeFiles/tst_mechanicalobject.dir/tst_mechanicalobject.cpp.o -o bin/tst_mechanicalobject -Wl,-rpath,/opt/libs/sofa/build/install/lib /opt/libs/sofa/build/install/lib/libSofaBaseTopology.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaSimulationCommon.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaSimulationCore.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaCore.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaDefaultType.so.20.06.99 /opt/libs/sofa/build/install/lib/libSofaHelper",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1752:52,test,test,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1752,1,['test'],['test']
Testability,"I am unsure this PR is correct, so it really needs a green light from others before merge. When trying to call `std::exit` in some plugin, I had a segfault in cleanup code similar to this one:. ```c++; // Detect missing cleanup() call.; static const struct CleanupCheck; {; CleanupCheck() {; }; ; ~CleanupCheck() {; if (core::isInitialized() && !core::isCleanedUp()); helper::printLibraryNotCleanedUpWarning(""SofaCore"", ""sofa::core::cleanup()""); // segfault; }; } check;; ```. In fact, most `init.cpp` files in SOFA have code similar to this one. In my case, `MessageDispatcher::LoggerStream::~LoggerStream` caused a call to `MessageDispatcher::process` which would then cause a segfault. What I don't understand is *why* the above code snipped does not simply `cleanup()` the library in the destructor, since the latter is being called while the library unloads and this is the last chance to actually clean things up, instead of (trying to) emit a warning while the whole program is being terminated. So unless there is a compelling reason to leave it this way (and I would really like to know it), I suggest the above to be changed to:. ```c++; static const struct CleanupCheck; {; CleanupCheck() {; init();; }; ; ~CleanupCheck() {; cleanup();; // leaving the warning if for some reason cleanup failed; if (core::isInitialized() && !core::isCleanedUp()); helper::printLibraryNotCleanedUpWarning(""SofaCore"", ""sofa::core::cleanup()"");; }; } check;; ```. so that the library automatically `init()` and `cleanup()` upon `dlopen`/`exit`. <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old.; **Reviewers will merge only if all this checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/168:579,Log,LoggerStream,579,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/168,3,"['Log', 'test']","['LoggerStream', 'test']"
Testability,"I am vsync-limited on my setup so cannot really test.; Lets simply revert this PR, I will see later",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2458#issuecomment-967174468:48,test,test,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2458#issuecomment-967174468,1,['test'],['test']
Testability,"I believe whatever the approach taken it should allow to keep things pretty clear between ; - unit tests, ie tests that hardly depend on initializing a scene. In these tests you hardly need a concrete instance of node or simulation. If you need this it may be nice to have a class to derive from which does it for you, but then again it should stay optional, because you should really think again about how you designed your component if you need a full fledged simulation to actually make some basic testing on your component. ; No matter what, these tests should be executed at each build (even for devs) and must pass. Failing in this kind of tests must be equal to a compilation error.; In that respect there is something that I am reluctant to allow for this type of tests is a lose coupling approach where you instantiate components using keys from the object factory. You may end up writing tests that in fact do not compile from a scratch build because this allows you to not take care about the dependencies between the libs. That is to say a test may instantiate a component that is not available yet, because it belongs to a library which is deeper in the build dependency tree at the time the unit test is built and executed during the compilation. - Functional tests, that require a working scene with probably more components than the one actually tested. These tests can be longer and therefore should not be mandatory during the compilation. ; They will be run only in ci machines, but can be also easily executed by any developers on its machine mostly to debug what is the nature of a new regression in these kind of tests. ; From our experience at InSimo these kinds of tests regress quite often during the development of a new feature, because you make some optimisation in the code, and you get some epsilon difference, or because you change the approach entirely and the scene is no longer relevant for you and should be changed. So you probably do not want too many of these fun",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/471#issuecomment-337507243:99,test,tests,99,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/471#issuecomment-337507243,8,['test'],"['testing', 'tests']"
Testability,"I benchmarked only TetrahedronFEMForceFieldScene:. Before; ```; ------------------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; ------------------------------------------------------------------------------------------------------------------------; BM_Scene_bench_StepFactor<TetrahedronFEMForceFieldScene>/512 3197 ms 3188 ms 1 FPS=160.627/s frame=6.22559ms; BM_Scene_bench_StepFactor<TetrahedronFEMForceFieldScene>/1024 6434 ms 6438 ms 1 FPS=159.068/s frame=6.28662ms; BM_Scene_bench_StepFactor<TetrahedronFEMForceFieldScene>/2048 12923 ms 12938 ms 1 FPS=158.3/s frame=6.31714ms; BM_Scene_bench_StepFactor<TetrahedronFEMForceFieldScene>/4096 26074 ms 26062 ms 1 FPS=157.161/s frame=6.36292ms; ```. After. ```; ------------------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; ------------------------------------------------------------------------------------------------------------------------; BM_Scene_bench_StepFactor<TetrahedronFEMForceFieldScene>/512 3128 ms 3125 ms 1 FPS=163.84/s frame=6.10352ms; BM_Scene_bench_StepFactor<TetrahedronFEMForceFieldScene>/1024 6343 ms 6344 ms 1 FPS=161.419/s frame=6.19507ms; BM_Scene_bench_StepFactor<TetrahedronFEMForceFieldScene>/2048 12693 ms 12656 ms 1 FPS=161.817/s frame=6.17981ms; BM_Scene_bench_StepFactor<TetrahedronFEMForceFieldScene>/4096 25060 ms 25062 ms 1 FPS=163.431/s frame=6.11877ms; ```. It's not very significative since it is run only once, but it tends to confirm that the changes do accelerate the simulations.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2647#issuecomment-1025485195:2,benchmark,benchmarked,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2647#issuecomment-1025485195,3,"['Benchmark', 'benchmark']","['Benchmark', 'benchmarked']"
Testability,I built Sofa with the registration plugin successfully. When I had a test with ICPRegistration_ShapeMatching.scn in .\applications\plugins\Registration\examples. It reminded these errors:. [INFO] [SofaPython] Added ‘F:/SOFA16.12/sofaproject/sofasrc/applications/plugins/image/python’ to sys.path; [INFO] [SofaPython] Added ‘F:/SOFA16.12/sofaproject/sofasrc/applications/plugins/Registration/python’ to sys.path; [INFO] [SofaPython] Added ‘F:/SOFA16.12/sofaproject/sofasrc/applications/plugins/SofaPython/python’ to sys.path; [INFO] [PluginManager] Loaded plugin: F:/SOFA16.12/sofaproject/sofabuild/bin/Release/SofaPython.dll. [INFO] [PluginManager] Loaded plugin: F:/SOFA16.12/sofaproject/sofabuild/bin/Release/Registration.dll; [ERROR] [RequiredPlugin] Plugin not found: “SofaMiscForceFieldDev”; [ERROR] [DAGNode “source”] Object type “RotationFinder” creation Failed; [ERROR] [DAGNode “source”] Object type “ShapeMatchingForceField” creation Failed; [ERROR] [SceneLoaderXML] Node initialization failed. I didn’t find any information about this SofaMiscForceFieldDev plugin. Can anyone give me some tips about that?. Thanks in advance!,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/307:69,test,test,69,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/307,1,['test'],['test']
Testability,"I call it stupid because I don't know how the discrepancy occurred.; Since I think that this component is not that important, I did not want to spend more time on it. At least, now it does not crash. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3692:739,test,test,739,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3692,2,['test'],['test']
Testability,"I call that 'un doigt dans l'engrenage', nice ! . I totally agree on the fact that those methods should be final otherwise the 'delegate' pattern used here makes no sense because we cannot trust it for child class... . But then I don't fully agree on the protected part : it might become cumbersome to test them in unit test with such protection . It might be good to understand why those base methods where overridden instead of the ""delegate' one, maybe old artifact on un-refactored components ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4943#issuecomment-2315676097:302,test,test,302,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4943#issuecomment-2315676097,2,['test'],['test']
Testability,"I can't add much more than this title. Fix #4202. [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/247]; [ci-depends-on https://github.com/SofaDefrost/SoftRobots/pull/258]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4205:725,test,test,725,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4205,2,['test'],['test']
Testability,"I cannot really explain but MSVC was complaining about `warning C4723: potential divide by 0` even if there was a check on the denominator ; https://github.com/fredroy/sofa/blob/0748ab24dff55ebab5c6c339e1ade7ebbd24ddd0/Sofa/Component/MechanicalLoad/src/sofa/component/mechanicalload/PlaneForceField.inl#L376. I suspect the compiler gets a bit awkward because of the `type::Vec3d normal { d_planeNormal.getValue() };` which basically converts any vec/fixed_array of any size to Vec3d (this assumption comes especially from the fact that the warnings come only if the DataTypes is not 3 dimensions); So this PR explicitly converts to Vec3, and because all this stuff was done twice, factorize the code in an anonymous function (and change the check as well). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3315:1296,test,test,1296,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3315,2,['test'],['test']
Testability,I cannot test myself on window but:; - the tests is not failing anymore. ; - no new tests are failing. ; - I don't think the new boost dependency is a problem. . I let @matthieu-nesme (who made the issue #17) to make the final decision.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/99#issuecomment-266705530:9,test,test,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/99#issuecomment-266705530,3,['test'],"['test', 'tests']"
Testability,I changed a little bit the unit tests. I will add a last commit in a few minutes,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/360#issuecomment-329419961:32,test,tests,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/360#issuecomment-329419961,1,['test'],['tests']
Testability,I checked the QuaterTest **EulerAngles** and it is not using code touched by this PR. This sounds like another blinking error test. ; Ok to open an issue on that but it is not related to this PR.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1449#issuecomment-679390995:126,test,test,126,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1449#issuecomment-679390995,1,['test'],['test']
Testability,"I chose the library https://github.com/yhirose/cpp-httplib because it allows also to create a server (but not used in this PR). In any case, whatever the library we choose, we must use openSSL (we request a https). This is the main concern about this PR. In terms of installation, I think Ubuntu and macOS are straightforward because there are packages. But Windows is bit more tricky. The pre-built binaries are not available on the openSSL website. I found them here: https://slproweb.com/products/Win32OpenSSL.html. After installation, I had to define `OPENSSL_ROOT_DIR`, and add the `bin` folder to my path. In this PR, the newly introduced module is linked only in Sofa.GUI.Qt and the version checker is called at init (for test). A later contribution will use the introduced function to show the latest version in the GUI. Output example:; ```; [INFO] [VersionChecker] You are using the latest version (24.06.99). {272.525 ms}; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4702:729,test,test,729,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4702,3,['test'],['test']
Testability,I close this pull-request because of a problem in one test. I will recreate one when the problem will be fixed.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/69#issuecomment-263152451:54,test,test,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/69#issuecomment-263152451,1,['test'],['test']
Testability,"I converted the warning to an error in the following code of the ObjectFactor:; ```cpp; if (isUserTemplateNameInTemplateList); {; msg_warning(object.get()) << ""Requested template '"" << usertemplatename << ""' ""; << ""is not compatible with the current context. ""; << ""Falling back to the first compatible template: '""; << object->getTemplateName() << ""'."";; }; else; {; msg_warning(object.get()) << ""Requested template '"" << usertemplatename << ""' ""; << ""cannot be found in the list of available templates ["" << ss.str() << ""]. ""; << ""Falling back to default template: '""; << object->getTemplateName() << ""'."";; }; ```. To me, this situation is to be taken into account more seriously than a warning. As failing template deduction is now an error, it leads to a lot of failing tests. I fixed them as well. I added unit tests for `OglModel`. I factorize the parse code from the 3 masses. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3404:775,test,tests,775,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3404,4,['test'],"['test', 'tests']"
Testability,"I copied/pasted a path with backslashes in the env variable SOFA_ROOT, and a bad thing happened. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2970:636,test,test,636,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2970,2,['test'],['test']
Testability,"I did not bother to test/compile/configure, as it is based on Compliant which was deprecated (and abandoned I suppose) for quite a long time. for those who are curious -> https://github.com/sofa-framework/PreassembledMass. https://github.com/sofa-framework/sofa/issues/1442. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3802:20,test,test,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3802,3,['test'],['test']
Testability,"I did not find how the macro `SOFA_DDG_TRACE` was enabled. The code inside did not compile. The intended behavior can be obtained using a debugger. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4590:687,test,test,687,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4590,2,['test'],['test']
Testability,"I did not manage to compile it fully. SofaDenseSolver is now ok but not the remaining of Sofa. I started to fix some errors, however it seems that this feature was not actively maintained recently. ; With latest commit it should compile but it gives weird runtime visualization. (Windows VS2015 also); ![image](https://cloud.githubusercontent.com/assets/9134757/26287521/acf354d4-3e7d-11e7-8e6f-bc5d1a2e6ca2.png); ![image](https://cloud.githubusercontent.com/assets/9134757/26287526/b7ce280c-3e7d-11e7-8262-c22a7fc16069.png); ![image](https://cloud.githubusercontent.com/assets/9134757/26287527/c4514e1a-3e7d-11e7-96e3-a18bcf007403.png). If the feature is a must-have, maybe the CI should test with float-only and double-only instead of ""both"" ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/262#issuecomment-302964842:689,test,test,689,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/262#issuecomment-302964842,1,['test'],['test']
Testability,"I did some tests with and without the code in the reinit of the mechanicalObject, appently it only change the value of the Data P0 but the result is the same (see pic right is without the code and left with); Thus I'm going to just remove the code. ![screenshot from 2017-05-17 19-01-03](https://cloud.githubusercontent.com/assets/21199245/26166261/3e1ebe42-3b33-11e7-83e2-e056ad7a3e56.png)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/162#issuecomment-302155571:11,test,tests,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/162#issuecomment-302155571,1,['test'],['tests']
Testability,I didn't change anything else except in DataFilename the enum FILE is colliding with the FILE* defined in cstdio. ; So I used an enum class instead (which is a c++11 designed for that). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1460:437,test,test,437,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1460,2,['test'],['test']
Testability,"I dislike the current name of collision response method:; - ""default"" --> which I changed for ""penality""; - ""FrictionContact"" --> which I changed for ""LagrangeMultipliers"". It is definitely open to discussion but it would prevent from misleading users, what's your opinion?. ![](https://i.ibb.co/N76dF3C/Screenshot-from-2021-02-27-19-24-18.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1871:885,test,test,885,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1871,2,['test'],['test']
Testability,"I do not have cstringt.h on my system, and it does not seem to be a requirement to build; FileMonitor_windows.cpp ; Any thoughts about this ?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/448:394,test,test,394,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/448,2,['test'],['test']
Testability,"I do not know whether some of these `cmake_minimum_required` were set to another version than SOFA for a specific reason :thinking: . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4886:673,test,test,673,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4886,2,['test'],['test']
