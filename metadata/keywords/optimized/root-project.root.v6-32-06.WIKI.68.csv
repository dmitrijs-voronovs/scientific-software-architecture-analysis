quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Modifiability,"->fElem;; 1638 TStreamerInfo *info = (TStreamerInfo*)config->fInfo;; 1639 Warning(""ReadBuffer"",""Skipping %s::%s because the cache is missing."",info->GetName(),aElement->GetName());; 1640 char *ptr = (char*)start;; 1641 UInt_t n = (((char*)end)-((char*)start))/((TVectorLoopConfig*)loopconf)->fIncrement;; 1642 info->ReadBufferSkip(b,&ptr,config->fCompInfo,config->fCompInfo->fType+TStreamerInfo::kSkip,aElement,n,0);; 1643 } else {; 1644 TVectorLoopConfig cached_config( nullptr, cached->fClass->Size(), /* read */ kTRUE );; 1645 void *cached_start = (*cached)[0];; 1646 void *cached_end = ((char*)cached_start) + cached->fSize * cached_config.fIncrement;; 1647 config->fAction(b,cached_start,cached_end,&cached_config);; 1648 }; 1649 // Idea: Factor out this 'if' to a UseCacheRepeat function; 1650 if (config->fNeedRepeat) {; 1651 b.SetBufferOffset(bufpos);; 1652 }; 1653 return 0;; 1654 }; 1655 ; 1656 INLINE_TEMPLATE_ARGS Int_t UseCacheGenericCollection(TBuffer &b, void *, const void *, const TLoopConfiguration *loopconfig, const TConfiguration *conf); 1657 {; 1658 TConfigurationUseCache *config = (TConfigurationUseCache*)conf;; 1659 ; 1660 Int_t bufpos = b.Length();; 1661 TVirtualArray *cached = b.PeekDataCache();; 1662 if (cached==0) {; 1663 TStreamerElement *aElement = config->fCompInfo->fElem;; 1664 TStreamerInfo *info = (TStreamerInfo*)config->fInfo;; 1665 ; 1666 TVirtualCollectionProxy *proxy = ((TGenericLoopConfig*)loopconfig)->fProxy;; 1667 Warning(""ReadBuffer"",""Skipping %s::%s because the cache is missing."",info->GetName(),aElement->GetName());; 1668 UInt_t n = proxy->Size();; 1669 info->ReadBufferSkip(b, *proxy,config->fCompInfo,config->fCompInfo->fType+TStreamerInfo::kSkip,aElement,n,0);; 1670 } else {; 1671 TVectorLoopConfig cached_config( nullptr, cached->fClass->Size(), /* read */ kTRUE );; 1672 void *cached_start = (*cached)[0];; 1673 void *cached_end = ((char*)cached_start) + cached->fSize * cached_config.fIncrement;; 1674 config->fAction(b,cached_start,cached_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:68841,config,config,68841,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['config'],['config']
Modifiability,"-Ferrand NN classifier. Double_t GetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); returns CFMlpANN output (normalised within [0,1]). Double_t EvalANN(vector<Double_t>& , Bool_t& isOK); evaluates NN value as function of input variables. void NN_ava(Double_t* ); auxiliary functions. Double_t NN_fonc(Int_t , Double_t ) const; activation function. void ReadWeightsFromStream(istream& istr); read back the weight from the training from file (stream). Int_t DataInterface(Double_t* , Double_t* , Int_t* , Int_t* , Int_t* , Int_t* , Double_t* , Int_t* , Int_t* ); data interface function. void AddWeightsXMLTo(void* parent) const; write weights to xml file. void ReadWeightsFromXML(void* wghtnode); read weights from xml file. void PrintWeights(ostream& o) const; write the weights of the neural net. TMVA::MethodCFMlpANN* This( void ); static pointer to this object (required for external functions. void MakeClassSpecific(ostream& , const TString& ) const; write specific classifier response. void MakeClassSpecificHeader(ostream& , const TString& = """") const; write specific classifier response for header. void GetHelpMessage() const; get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". MethodCFMlpANN(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = ""3000:N-1:N-2"", TDirectory* theTargetDir = 0). Double_t GetData(Int_t isel, Int_t ivar) const; data accessors for external functions. { return (*fData)(isel, ivar); }. Int_t GetClass(Int_t ivar) const; { return (*fClass)[ivar]; }. const Ranking* CreateRanking(); ranking of input variables. { return 0; }. » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-06-02 16:16; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMVA__MethodCFMlpANN.html:26065,variab,variables,26065,root/html604/TMVA__MethodCFMlpANN.html,https://root.cern,https://root.cern/root/html604/TMVA__MethodCFMlpANN.html,2,['variab'],['variables']
Modifiability,"-Ferrand NN classifier. Double_t GetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); returns CFMlpANN output (normalised within [0,1]). Double_t EvalANN(vector<Double_t>& , Bool_t& isOK); evaluates NN value as function of input variables. void NN_ava(Double_t* ); auxiliary functions. Double_t NN_fonc(Int_t , Double_t ) const; activation function. void ReadWeightsFromStream(istream& istr); read back the weight from the training from file (stream). Int_t DataInterface(Double_t* , Double_t* , Int_t* , Int_t* , Int_t* , Int_t* , Double_t* , Int_t* , Int_t* ); data interface function. void AddWeightsXMLTo(void* parent) const; write weights to xml file. void ReadWeightsFromXML(void* wghtnode); read weights from xml file. void PrintWeights(ostream& o) const; write the weights of the neural net. TMVA::MethodCFMlpANN* This( void ); static pointer to this object (required for external functions. void MakeClassSpecific(ostream& , const TString& ) const; write specific classifier response. void MakeClassSpecificHeader(ostream& , const TString& = """") const; write specific classifier response for header. void GetHelpMessage() const; get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". MethodCFMlpANN(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = ""3000:N-1:N-2"", TDirectory* theTargetDir = 0). Double_t GetData(Int_t isel, Int_t ivar) const; data accessors for external functions. { return (*fData)(isel, ivar); }. Int_t GetClass(Int_t ivar) const; { return (*fClass)[ivar]; }. const Ranking* CreateRanking(); ranking of input variables. { return 0; }. » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-06-30 15:16; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodCFMlpANN.html:26057,variab,variables,26057,root/html602/TMVA__MethodCFMlpANN.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodCFMlpANN.html,2,['variab'],['variables']
Modifiability,"-Request-Method"");; 14149 ; 14150 /* Todo: check if cors_origin is in cors_orig_cfg.; 14151 * Or, let the client check this. */; 14152 ; 14153 if ((cors_meth_cfg != NULL) && (*cors_meth_cfg != 0); 14154 && (cors_orig_cfg != NULL) && (*cors_orig_cfg != 0); 14155 && (cors_origin != NULL) && (cors_acrm != NULL)) {; 14156 /* This is a valid CORS preflight, and the server is configured; 14157 * to handle it automatically. */; 14158 const char *cors_acrh =; 14159 get_header(ri->http_headers,; 14160 ri->num_headers,; 14161 ""Access-Control-Request-Headers"");; 14162 ; 14163 gmt_time_string(date, sizeof(date), &curtime);; 14164 mg_printf(conn,; 14165 ""HTTP/1.1 200 OK\r\n""; 14166 ""Date: %s\r\n""; 14167 ""Access-Control-Allow-Origin: %s\r\n""; 14168 ""Access-Control-Allow-Methods: %s\r\n""; 14169 ""Content-Length: 0\r\n""; 14170 ""Connection: %s\r\n"",; 14171 date,; 14172 cors_orig_cfg,; 14173 ((cors_meth_cfg[0] == '*') ? cors_acrm : cors_meth_cfg),; 14174 suggest_connection_header(conn));; 14175 ; 14176 if (cors_acrh != NULL) {; 14177 /* CORS request is asking for additional headers */; 14178 const char *cors_hdr_cfg =; 14179 conn->dom_ctx->config[ACCESS_CONTROL_ALLOW_HEADERS];; 14180 ; 14181 if ((cors_hdr_cfg != NULL) && (*cors_hdr_cfg != 0)) {; 14182 /* Allow only if access_control_allow_headers is; 14183 * not NULL and not an empty string. If this; 14184 * configuration is set to *, allow everything.; 14185 * Otherwise this configuration must be a list; 14186 * of allowed HTTP header names. */; 14187 mg_printf(conn,; 14188 ""Access-Control-Allow-Headers: %s\r\n"",; 14189 ((cors_hdr_cfg[0] == '*') ? cors_acrh; 14190 : cors_hdr_cfg));; 14191 }; 14192 }; 14193 if (cors_cred_cfg && *cors_cred_cfg) {; 14194 mg_printf(conn,; 14195 ""Access-Control-Allow-Credentials: %s\r\n"",; 14196 cors_cred_cfg);; 14197 }; 14198 ; 14199 mg_printf(conn, ""Access-Control-Max-Age: 60\r\n"");; 14200 ; 14201 mg_printf(conn, ""\r\n"");; 14202 return;; 14203 }; 14204 }; 14205 ; 14206 /* 5. interpret the url to find out",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:416734,config,config,416734,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"-Request-Method"");; 14150 ; 14151 /* Todo: check if cors_origin is in cors_orig_cfg.; 14152 * Or, let the client check this. */; 14153 ; 14154 if ((cors_meth_cfg != NULL) && (*cors_meth_cfg != 0); 14155 && (cors_orig_cfg != NULL) && (*cors_orig_cfg != 0); 14156 && (cors_origin != NULL) && (cors_acrm != NULL)) {; 14157 /* This is a valid CORS preflight, and the server is configured; 14158 * to handle it automatically. */; 14159 const char *cors_acrh =; 14160 get_header(ri->http_headers,; 14161 ri->num_headers,; 14162 ""Access-Control-Request-Headers"");; 14163 ; 14164 gmt_time_string(date, sizeof(date), &curtime);; 14165 mg_printf(conn,; 14166 ""HTTP/1.1 200 OK\r\n""; 14167 ""Date: %s\r\n""; 14168 ""Access-Control-Allow-Origin: %s\r\n""; 14169 ""Access-Control-Allow-Methods: %s\r\n""; 14170 ""Content-Length: 0\r\n""; 14171 ""Connection: %s\r\n"",; 14172 date,; 14173 cors_orig_cfg,; 14174 ((cors_meth_cfg[0] == '*') ? cors_acrm : cors_meth_cfg),; 14175 suggest_connection_header(conn));; 14176 ; 14177 if (cors_acrh != NULL) {; 14178 /* CORS request is asking for additional headers */; 14179 const char *cors_hdr_cfg =; 14180 conn->dom_ctx->config[ACCESS_CONTROL_ALLOW_HEADERS];; 14181 ; 14182 if ((cors_hdr_cfg != NULL) && (*cors_hdr_cfg != 0)) {; 14183 /* Allow only if access_control_allow_headers is; 14184 * not NULL and not an empty string. If this; 14185 * configuration is set to *, allow everything.; 14186 * Otherwise this configuration must be a list; 14187 * of allowed HTTP header names. */; 14188 mg_printf(conn,; 14189 ""Access-Control-Allow-Headers: %s\r\n"",; 14190 ((cors_hdr_cfg[0] == '*') ? cors_acrh; 14191 : cors_hdr_cfg));; 14192 }; 14193 }; 14194 if (cors_cred_cfg && *cors_cred_cfg) {; 14195 mg_printf(conn,; 14196 ""Access-Control-Allow-Credentials: %s\r\n"",; 14197 cors_cred_cfg);; 14198 }; 14199 ; 14200 mg_printf(conn, ""Access-Control-Max-Age: 60\r\n"");; 14201 ; 14202 mg_printf(conn, ""\r\n"");; 14203 return;; 14204 }; 14205 }; 14206 ; 14207 /* 5. interpret the url to find out",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:416767,config,config,416767,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['config'],['config']
Modifiability,"-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Implementation file for class BinData; 12 ; 13#include <iostream>; 14#include <iterator>; 15#include <algorithm>; 16 ; 17#include <vector>; 18#include <list>; 19 ; 20#include <stdexcept>; 21 ; 22#include <cmath>; 23#include <limits>; 24 ; 25#include ""Fit/BinData.h""; 26#include ""Fit/SparseData.h""; 27 ; 28using std::cout, std::endl, std::vector, std::list, std::ostream, std::ostream_iterator;; 29 ; 30namespace ROOT {; 31 ; 32 namespace Fit {; 33 ; 34 //This class is a helper. It represents a bin in N; 35 //dimensions. The change in the name is to avoid name collision.; 36 class Box; 37 {; 38 public:; 39 // Creates a Box with limits specified by the vectors and; 40 // content=value and error=error; 41 Box(const vector<double>& min, const vector<double>& max,; 42 const double value = 0.0, const double error = 1.0):; 43 fMin(min), fMax(max), fVal(value), fError(error); 44 { }; 45 ; 46 // Compares to Boxes to see if they are equal in all its; 47 // variables. This is to be used by the std::find algorithm; 48 bool operator==(const Box& b); 49 { return (fMin == b.fMin) && (fMax == b.fMax); 50 && (fVal == b.fVal) && (fError == b.fError); }; 51 ; 52 // Get the list of minimum coordinates; 53 const vector<double>& GetMin() const { return fMin; }; 54 // Get the list of maximum coordinates; 55 const vector<double>& GetMax() const { return fMax; }; 56 // Get the value of the Box; 57 double GetVal() const { return fVal; }; 58 // Get the error of the Box; 59 double GetError() const { return fError; }; 60 ; 61 // Add an amount to the content of the Box; 62 void AddVal(const double value) { fVal += value; }; 63 ; 64 friend class BoxContainer;; 65 friend ostream& operator <<(ostream& os, const Box& b);; 66 ; 67 private:; 68 vector<double> fMin;; 69 vector<double> fMax;; 70 double fVal;; 71 double fError;; 72 };; 73 ; 74 // This class is just a helper to be used in std::for_each t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/SparseData_8cxx_source.html:1476,variab,variables,1476,doc/master/SparseData_8cxx_source.html,https://root.cern,https://root.cern/doc/master/SparseData_8cxx_source.html,1,['variab'],['variables']
Modifiability,"-WALSH, FOUR-HAAR transform. These need sizex*2*sizey length to supply real and imaginary coefficients.; dest: pointer to the matrix of destination data, its size should be sizex*sizey except for direct FOURIER, FOUR-WALSh, FOUR-HAAR. These need sizex*2*sizey length to store real and imaginary coefficients; sizex,sizey: basic dimensions of the source and dest spectra; type: type of transform. TRANSFORM2_HAAR; TRANSFORM2_WALSH; TRANSFORM2_COS; TRANSFORM2_SIN; TRANSFORM2_FOURIER; TRANSFORM2_HARTLEY; TRANSFORM2_FOURIER_WALSH; TRANSFORM2_FOURIER_HAAR; TRANSFORM2_WALSH_HAAR; TRANSFORM2_COS_WALSH; TRANSFORM2_COS_HAAR; TRANSFORM2_SIN_WALSH; TRANSFORM2_SIN_HAAR. direction: transform direction (forward, inverse); degree: applies only for mixed transforms. An example of the 2-dimensional Cosine transform of data from Figure 5.6 is given in Figure 6.7. One can notice that the data are concentrated again around the beginning of the coordinate system. This allows to apply filtration, enhancement and compression techniques in the transform domain. 2-dimensional Cosine transform of data from Figure 5.6. In some cases, when the spectrum is smooth, the cosine transforms are very efficient. In Figures 6.8, 6.9 we show original spectrum and transformed coefficients using Cosine transform, respectively. Original spectrum. Transformed coefficients using Cosine transform. Similarly to 1-dimensional case we have also implemented the functions for zonal filtration, Gauss filtration and enhancement. The zonal filtration function using classic transforms has the form of; char *Filter2Zonal(const float **source,; float **dest,; int sizex,; int sizey,; int type,; int degree,; int xmin,; int xmax,; int ymin,; int ymax,; float filter_coeff);; This function transforms the source spectrum. The calling program should fill in the input parameters. Then it sets transformed coefficients in the given region to the given filter_coeff and transforms it back. Filtered data are written into the dest spectru",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/spectrum/Spectrum.html:63491,enhance,enhancement,63491,root/htmldoc/guides/spectrum/Spectrum.html,https://root.cern,https://root.cern/root/htmldoc/guides/spectrum/Spectrum.html,2,['enhance'],['enhancement']
Modifiability,"-box, etc.; On the screen widgets look like rectangular areas with special behaviors. In terms of the object-oriented programming we can define a widget in ROOT as an object of a class deriving from TGObject.; This section presents all currently supported widgets in ROOT and their most useful methods. All of them can be considered as building blocks for an application, and most of them can be found in dialogs. Provided snippets of the code will give you practical guidelines where and how to use certain widgets. The macro $ROOTSYS/tutorials/gui/guitest.C contains the complete source code. Widgets created by ROOT GUI classes. Any custom widget can be created by sub classing existing widgets. To achieve a better understanding of the widgets’ properties they are separated by their type and their inheritance. As all of them inherit from TGObject and most from TGWidget, these base classes are described first.; 25.5.1 TGObject; TGObject is the base class for all ROOT GUI classes. It inherits from TObject. The two data members of this class contain important information about X11/Win32 window identifier and the connection to the host’s graphics system. Every GUI element, which derives from TGObject has access to the TGClient via the data member fClient of TGObject. TGClient creates the connection with the host’s graphics system and sets up the complete graphics system for all widgets.; 25.5.2 TGWidget; The widgets base class TGWidget is typically used as a mix-in class via multiple inheritances. Its properties are available for all deriving widgets: TGButton, TGComboBox, TGTab, TGColorPalette, TGColorPick, TGDoubleSlider, TGListTree, TGNumberEntry, TGScrollBar, TGShutterItem, TGTextEntry, TGSlider, TGListBox, TGView.; This class has four data members keeping information about the widget id - important for event processing, the window which handles the widget’s events, the widget status flags and the assigned command (if there is any). The general properties of TGWidget are ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:1147192,inherit,inherits,1147192,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['inherit'],['inherits']
Modifiability,"-classes. ;  ; virtual void AddExtraTab (TGedSubFrame *sf);  Adds tab container to list of extra tabs. ;  ;  ClassDefOverride (TGedFrame, 0);  ; virtual TGVerticalFrame * CreateEditorTabSubFrame (const char *name);  Create a vertical frame to be used by 'owner' in extra tab 'name'. ;  ; Option_t * GetDrawOption () const override;  Get draw options of the selected object. ;  ; TList * GetExtraTabs ();  ; TGedEditor * GetGedEditor ();  ; TClass * GetModelClass ();  ; Int_t GetPriority ();  ; virtual void Refresh (TObject *model);  Refresh the GUI info about the object attributes. ;  ; void SetDrawOption (Option_t *option="""") override;  Set drawing option for object. ;  ; virtual void SetGedEditor (TGedEditor *ed);  ; virtual void SetModel (TObject *obj)=0;  ; void SetModelClass (TClass *mcl);  ; virtual void Update ();  Update the current pad when an attribute is changed via GUI. ;  ;  Public Member Functions inherited from TGCompositeFrame;  TGCompositeFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a composite frame. ;  ;  TGCompositeFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGCompositeFrame () override;  Delete a composite frame. ;  ; virtual void AddFrame (TGFrame *f, TGLayoutHints *l=nullptr);  Add frame to the composite frame using the specified layout hints. ;  ; void ChangeOptions (UInt_t options) override;  Change composite frame options. Options is an OR of the EFrameTypes. ;  ; virtual void ChangeSubframesBackground (Pixel_t back);  Change background color for this frame and all subframes. ;  ; virtual void Cleanup ();  Cleanup and delete all objects contained in this composite frame. ;  ; virtual TGFrameElement * FindFrameElement (TGFrame *f) const;  Find frame-element holding frame f. ;  ; UInt_t GetDefaultHeight () const override;  ; TGDimension GetDefaultSize () const override;  std::cout << fWi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGedFrame.html:1817,inherit,inherited,1817,doc/master/classTGedFrame.html,https://root.cern,https://root.cern/doc/master/classTGedFrame.html,1,['inherit'],['inherited']
Modifiability,"-const reference Do not own the function in this case. ;  ;  ~MultiDimParamFunctionAdapter () override;  Destructor (no operations) ;  ; BaseFunc * Clone () const override;  clone ;  ; unsigned int NDim () const override;  Retrieve the dimension of the function. ;  ; unsigned int NPar () const override;  Return the number of Parameters. ;  ; MultiDimParamFunctionAdapter & operator= (const MultiDimParamFunctionAdapter &rhs);  Assignment operator. ;  ; const double * Parameters () const override;  Access the parameter values. ;  ; void SetParameters (const double *p) override;  Set the parameter values. ;  ;  Public Member Functions inherited from ROOT::Math::IParametricFunctionMultiDimTempl< double >; double operator() (const double *x) const;  ; double operator() (const double *x, const double *p) const;  Evaluate function at a point x and for given parameters p. ;  ;  Public Member Functions inherited from ROOT::Math::IBaseFunctionMultiDimTempl< T >; virtual ~IBaseFunctionMultiDimTempl ()=default;  ; virtual bool HasGradient () const;  ; T operator() (const T *x) const;  Evaluate the function at a point x[]. ;  ;  Public Member Functions inherited from ROOT::Math::IBaseParam; virtual ~IBaseParam ();  Virtual Destructor (no operations) ;  ; virtual std::string ParameterName (unsigned int i) const;  Return the name of the i-th parameter (starting from zero) Overwrite if want to avoid the default name (""Par_0, Par_1, ..."") ;  . Private Member Functions; double DoEvalPar (const double *x, const double *p) const override;  needed by the interface ;  . Private Attributes; IParamFunction * fFunc;  ; bool fOwn;  . #include <Math/MultiDimParamFunctionAdapter.h>. Inheritance diagram for ROOT::Math::MultiDimParamFunctionAdapter:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ BaseFunc. typedef IParamMultiFunction::BaseFunc ROOT::Math::MultiDimParamFunctionAdapter::BaseFunc. Definition at line 45 o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1MultiDimParamFunctionAdapter.html:2817,inherit,inherited,2817,doc/master/classROOT_1_1Math_1_1MultiDimParamFunctionAdapter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1MultiDimParamFunctionAdapter.html,1,['inherit'],['inherited']
Modifiability,"-degree of transform (see manual); type-type of mixed transform (see manual) . Definition at line 547 of file TSpectrumTransform.cxx. ◆ Haar(). void TSpectrumTransform::Haar ; (; Double_t * ; working_space, . Int_t ; num, . Int_t ; direction . ). protected . This function calculates Haar transform of a part of data Function parameters: . working_space-pointer to vector of transformed data; num-length of processed data; direction-forward or inverse transform . Definition at line 96 of file TSpectrumTransform.cxx. ◆ IsA(). TClass * TSpectrumTransform::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Definition at line 71 of file TSpectrumTransform.h. ◆ SetDirection(). void TSpectrumTransform::SetDirection ; (; Int_t ; direction). This function sets the direction of the transform: . direction (forward or inverse) . Definition at line 2278 of file TSpectrumTransform.cxx. ◆ SetEnhanceCoeff(). void TSpectrumTransform::SetEnhanceCoeff ; (; Double_t ; enhanceCoeff). This function sets the enhancement coefficient: . enhanceCoeff - after the transform the enhanced region (xmin, xmax) is multiplied by this coefficient. Applies only for enhancement operation. . Definition at line 2300 of file TSpectrumTransform.cxx. ◆ SetFilterCoeff(). void TSpectrumTransform::SetFilterCoeff ; (; Double_t ; filterCoeff). This function sets the filter coefficient: . filterCoeff - after the transform the filtered region (xmin, xmax) is replaced by this coefficient. Applies only for filtereng operation. . Definition at line 2291 of file TSpectrumTransform.cxx. ◆ SetRegion(). void TSpectrumTransform::SetRegion ; (; Int_t ; xmin, . Int_t ; xmax . ). This function sets the filtering or enhancement region: . xmin, xmax . Definition at line 2264 of file TSpectrumTransform.cxx. ◆ SetTransformType(). void TSpectrumTransform::SetTransformType ; (; Int_t ; transType, . Int_t ; degree . ). This function sets the following parameters for transfo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrumTransform.html:27591,enhance,enhanceCoeff,27591,doc/master/classTSpectrumTransform.html,https://root.cern,https://root.cern/doc/master/classTSpectrumTransform.html,1,['enhance'],['enhanceCoeff']
Modifiability,"-dimensional histogram, keeping only axes ""xDim"" and ""yDim"". ;  ; THnBase * ProjectionND (Int_t ndim, const Int_t *dim, Option_t *option="""") const;  ; void RebinnedAdd (const THnBase *h, Double_t c=1.);  Add contents of h scaled by c to this histogram: this = this + c * h Note that if h has Sumw2 set, Sumw2 is automatically called for this if not already set. ;  ; void Scale (Double_t c);  Scale contents and errors of this histogram by c: this = this * c It does not modify the histogram's number of entries. ;  ; void SetBinContent (const Int_t *idx, Double_t v);  ; void SetBinEdges (Int_t idim, const Double_t *bins);  Set the axis # of bins and bin limits on dimension idim. ;  ; void SetBinError (const Int_t *idx, Double_t e);  ; void SetBinError (Long64_t bin, Double_t e);  ; void SetEntries (Double_t entries);  ; void SetTitle (const char *title) override;  Change (i.e. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHnSparse.html:13253,inherit,inherited,13253,doc/master/classTHnSparse.html,https://root.cern,https://root.cern/doc/master/classTHnSparse.html,3,['inherit'],['inherited']
Modifiability,"-f)*poly(x); f = ROOT.RooRealVar(""f"", ""f"", 0.5, 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""model"", [gauss, poly], [f]); ; # Fit model to toy data; # -----------------------------------------; ; d = model.generate({x}, 1000); model.fitTo(d, PrintLevel=-1); ; # Write parameters to ASCII file; # -----------------------------------------------------------; ; # Obtain set of parameters; params = model.getParameters({x}); ; # Write parameters to file; params.writeToFile(""rf505_asciicfg_example.txt""); ; # Read parameters from ASCII file; # ----------------------------------------------------------------; ; # Read parameters from file; params.readFromFile(""rf505_asciicfg_example.txt""); params.Print(""v""); ; configFile = ROOT.gROOT.GetTutorialDir().Data() + ""/roofit/rf505_asciicfg.txt""; ; # Read parameters from section 'Section2' of file; params.readFromFile(configFile, """", ""Section2""); params.Print(""v""); ; # Read parameters from section 'Section3' of file. Mark all; # variables that were processed with the ""READ"" attribute; params.readFromFile(configFile, ""READ"", ""Section3""); ; # Print the list of parameters that were not read from Section3; print(""The following parameters of the were _not_ read from Section3: "", params.selectByAttrib(""READ"", False)); ; # Read parameters from section 'Section4' of file, contains; # 'include file' statement of rf505_asciicfg_example.txt; # so that we effective read the same; params.readFromFile(configFile, """", ""Section4""); params.Print(""v""); [#0] WARNING:InputArguments -- The parameter 's' with range [-10, 10] of the RooGaussian 'g' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- Ro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf505__asciicfg_8py.html:1738,variab,variables,1738,doc/master/rf505__asciicfg_8py.html,https://root.cern,https://root.cern/doc/master/rf505__asciicfg_8py.html,1,['variab'],['variables']
Modifiability,"-line collection printing to given amount. ;  . Private Member Functions; bool canComputeBatchWithCuda () const override;  ; void doEval (RooFit::EvalContext &) const override;  Compute multiple values of Chebychev. ;  ; double evalAnaInt (const double a, const double b) const;  ; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  . Private Attributes; RooListProxy _coefList;  ; TNamed * _refRangeName = nullptr;  ; RooRealProxy _x;  . Additional Inherited Members;  Public Types inherited from RooAbsPdf; enum  ExtendMode { CanNotBeExtended; , CanBeExtended; , MustBeExtended; };  ;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOpt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooChebychev.html:59593,inherit,inherited,59593,doc/master/classRooChebychev.html,https://root.cern,https://root.cern/doc/master/classRooChebychev.html,4,['inherit'],['inherited']
Modifiability,"-line vertical alignment instead of a centered one simply do:. leg->SetTextAlign(13);. leg->SetTextAlign(11);; TLegend attributes can be changed using; gStyle. The default settings are:. SetLegendBorderSize(1);; SetLegendFillColor(0);; SetLegendFont(42);; SetLegendTextSize(0.);. The global attributes change the default values for the next created legends. Text attributes can be also changed individually on each legend entry:. TLegendEntry *le = leg->AddEntry(h1,""Histogram filled with random numbers"",""f"");; le->SetTextColor(kBlue);;. Note that the TPad class has a method to build automatically a legend; for all objects in the pad. It is called TPad::BuildLegend(). Each item in the legend is added using the AddEntry method. This; method defines the object to be added (by reference or name), the label; associated to this object and an option which a combination of:. L: draw line associated with TAttLine if obj inherits from TAttLine; P: draw polymarker associated with TAttMarker if obj inherits from TAttMarker; F: draw a box with fill associated wit TAttFill if obj inherits TAttFill; E: draw vertical error bar. As shown in the following example, passing a NULL pointer as first parameter in; AddEntry is also valid. This allows to add text or blank lines in a; legend. Picture; Source. {; TCanvas *c2 = new TCanvas(""c2"",""c2"",500,300);. TLegend* leg = new TLegend(0.2, 0.2, .8, .8);; TH1* h = new TH1F("""", """", 1, 0, 1);. leg->AddEntry(h, ""Histogram \""h\"""", ""l"");; leg->AddEntry((TObject*)0, """", """");; leg->AddEntry((TObject*)0, ""Some text"", """");; leg->AddEntry((TObject*)0, """", """");; leg->AddEntry(h, ""Histogram \""h\"" again"", ""l"");. leg->Draw();; return c2;; }. It is possible to draw the legend entries over several columns using; the method SetNColumns() like in the following example. Picture; Source. {; TCanvas *c3 = new TCanvas(""c2"",""c2"",500,300);. TLegend* leg = new TLegend(0.2, 0.2, .8, .8);; TH1* h = new TH1F("""", """", 1, 0, 1);. leg-> SetNColumns(2);. leg->AddEntry(h, ""Column",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TLegend.html:3463,inherit,inherits,3463,root/html604/TLegend.html,https://root.cern,https://root.cern/root/html604/TLegend.html,6,['inherit'],['inherits']
Modifiability,"-macro""; 362#endif; 363#endif; 364 ; 365#ifndef CLOCK_MONOTONIC; 366#define CLOCK_MONOTONIC (1); 367#endif; 368#ifndef CLOCK_REALTIME; 369#define CLOCK_REALTIME (2); 370#endif; 371 ; 372#include <mach/clock.h>; 373#include <mach/mach.h>; 374#include <mach/mach_time.h>; 375#include <sys/errno.h>; 376#include <sys/time.h>; 377 ; 378/* clock_gettime is not implemented on OSX prior to 10.12 */; 379static int; 380_civet_clock_gettime(int clk_id, struct timespec *t); 381{; 382 memset(t, 0, sizeof(*t));; 383 if (clk_id == CLOCK_REALTIME) {; 384 struct timeval now;; 385 int rv = gettimeofday(&now, NULL);; 386 if (rv) {; 387 return rv;; 388 }; 389 t->tv_sec = now.tv_sec;; 390 t->tv_nsec = now.tv_usec * 1000;; 391 return 0;; 392 ; 393 } else if (clk_id == CLOCK_MONOTONIC) {; 394 static uint64_t clock_start_time = 0;; 395 static mach_timebase_info_data_t timebase_ifo = {0, 0};; 396 ; 397 uint64_t now = mach_absolute_time();; 398 ; 399 if (clock_start_time == 0) {; 400 kern_return_t mach_status = mach_timebase_info(&timebase_ifo);; 401 DEBUG_ASSERT(mach_status == KERN_SUCCESS);; 402 ; 403 /* appease ""unused variable"" warning for release builds */; 404 (void)mach_status;; 405 ; 406 clock_start_time = now;; 407 }; 408 ; 409 now = (uint64_t)((double)(now - clock_start_time); 410 * (double)timebase_ifo.numer; 411 / (double)timebase_ifo.denom);; 412 ; 413 t->tv_sec = now / 1000000000;; 414 t->tv_nsec = now % 1000000000;; 415 return 0;; 416 }; 417 return -1; /* EINVAL - Clock ID is unknown */; 418}; 419 ; 420/* if clock_gettime is declared, then __CLOCK_AVAILABILITY will be defined */; 421#if defined(__CLOCK_AVAILABILITY); 422/* If we compiled with Mac OSX 10.12 or later, then clock_gettime will be; 423 * declared but it may be NULL at runtime. So we need to check before using; 424 * it. */; 425static int; 426_civet_safe_clock_gettime(int clk_id, struct timespec *t); 427{; 428 if (clock_gettime) {; 429 return clock_gettime(clk_id, t);; 430 }; 431 return _civet_clock_gettime(clk_id, t)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:14418,variab,variable,14418,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,2,['variab'],['variable']
Modifiability,"-nightly-<version> and they are implemented as multi-configuration project. They are run once a day (around after midnight CET) but they can be started by hand at any time of the day (see later) and select for what configurations to run.; incremental builds: The jobs are named root-incremental-<version> and they are implemented as multi-configuration project. They are run as soon new commits appear in the ROOT git repository and the builds are incremental by default. A full re-build can be triggered by checking the option EMPTY_BINARY.; documentation generation. The jobs are named root-makedoc-<version>. They are started automatically once a day during the day.; testing installations. The job is named root-install and builds ROOT for a number of platforms, produces the installation tar-file or installation kit, installs it in a different place nd runs the tests against the installation (needed to delete the build and source area).; building releases. The job is named root-release-<version> and is multi-configuration job. It builds ROOT for a given 'tagged' version using the source distribution tar-file and produces binaries for a number of configurations, which are installed automatically in the download ROOT server.; other procedures. cling-periodic; cling-clone-repo; cling-repo-sync; root-test; root-staticAnalysis-master. Basic operations; Understanding information for a single build; The Status shows a summary for the build. In case of multi-configuration jobs it it also show the configuration matrix that can be used to select a contrete configuration. See the following figure: ; For each individual build (select one cell in the matrix) the following information is provided:. Status. Shows a summary of the build (changes, errors, warnings, git revision, test results, etc.); Changes. Shows the details about the changes since the last build.; Console Output/View as plain text. Shows the full log of the build including all the steps (checkout, configuration, build, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/how-use-root-jenkins.html:3791,config,configuration,3791,d/how-use-root-jenkins.html,https://root.cern,https://root.cern/d/how-use-root-jenkins.html,1,['config'],['configuration']
Modifiability,"-of-bounds error. Always returns false. ;  . Protected Attributes; TArrayD fBinEntries;  Number of entries per bin. ;  ; TArrayD fBinSumw2;  Array of sum of squares of weights per bin. ;  ; EErrorType fErrorMode;  Option to compute errors. ;  ; Bool_t fScaling;  ! True when TProfile3D::Scale is called ;  ; Double_t fTmax;  Upper limit in T (if set) ;  ; Double_t fTmin;  Lower limit in T (if set) ;  ; Double_t fTsumwt;  Total Sum of weight*T. ;  ; Double_t fTsumwt2;  Total Sum of weight*T*T. ;  ;  Protected Attributes inherited from TH3; Double_t fTsumwxy;  Total Sum of weight*X*Y. ;  ; Double_t fTsumwxz;  Total Sum of weight*X*Z. ;  ; Double_t fTsumwy;  Total Sum of weight*Y. ;  ; Double_t fTsumwy2;  Total Sum of weight*Y*Y. ;  ; Double_t fTsumwyz;  Total Sum of weight*Y*Z. ;  ; Double_t fTsumwz;  Total Sum of weight*Z. ;  ; Double_t fTsumwz2;  Total Sum of weight*Z*Z. ;  ;  Protected Attributes inherited from TH1; Short_t fBarOffset;  (1000*offset) for bar charts or legos ;  ; Short_t fBarWidth;  (1000*width) for bar charts or legos ;  ; EBinErrorOpt fBinStatErrOpt;  Option for bin statistical errors. ;  ; Double_t * fBuffer;  [fBufferSize] entry buffer ;  ; Int_t fBufferSize;  fBuffer size ;  ; TArrayD fContour;  Array to display contour levels. ;  ; Int_t fDimension;  ! Histogram dimension (1, 2 or 3 dim) ;  ; TDirectory * fDirectory;  ! Pointer to directory holding this histogram ;  ; Double_t fEntries;  Number of entries. ;  ; TList * fFunctions;  ->Pointer to list of functions (fits and user) ;  ; Double_t * fIntegral;  ! Integral of bins used by GetRandom ;  ; Double_t fMaximum;  Maximum value for plotting. ;  ; Double_t fMinimum;  Minimum value for plotting. ;  ; Int_t fNcells;  Number of bins(1D), cells (2D) +U/Overflows. ;  ; Double_t fNormFactor;  Normalization factor. ;  ; TString fOption;  Histogram options. ;  ; TVirtualHistPainter * fPainter;  ! Pointer to histogram painter ;  ; EStatOverflows fStatOverflows;  Per object flag to use under/overflows in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile3D.html:59920,inherit,inherited,59920,doc/master/classTProfile3D.html,https://root.cern,https://root.cern/doc/master/classTProfile3D.html,1,['inherit'],['inherited']
Modifiability,"-set.; This is false at startup. Bool_t IsUsingDefaultColorSetForNewViewers(); Returns the value of the static flag that determines if new; viewers should use the default color-set.; This is false at startup. Bool_t IsColorSetDark() const; Returns true if curremt color set is dark. void SetViewport(Int_t x, Int_t y, Int_t width, Int_t height); Set viewer viewport (window area) with bottom/left at (x,y), with; dimensions 'width'/'height'. void SetViewport(const TGLRect& vp); Set viewr viewport from TGLRect. TGLCamera& RefCamera(TGLViewer::ECameraType camera); Return camera reference by type. void SetCurrentCamera(TGLViewer::ECameraType camera); Set current active camera - 'cameraType' one of:; kCameraPerspX, kCameraPerspY, kCameraPerspZ,; kCameraOrthoXOY, kCameraOrthoXOZ, kCameraOrthoZOY,; kCameraOrthoXnOY, kCameraOrthoXnOZ, kCameraOrthoZnOY. void SetOrthoCamera(TGLViewer::ECameraType camera, Double_t zoom, Double_t dolly, Double_t* center, Double_t hRotate, Double_t vRotate); Set an orthographic camera to supplied configuration - note this; does not need to be the current camera - though you will not see; the effect if it is not. 'camera' defines the ortho camera - one of kCameraOrthoXOY / XOZ / ZOY; 'left' / 'right' / 'top' / 'bottom' define the WORLD coordinates which; corresepond with the left/right/top/bottom positions on the GL viewer viewport; E.g. for kCameraOrthoXOY camera left/right are X world coords,; top/bottom are Y world coords; As this is an orthographic camera the other axis (in eye direction) is; no relevant. The near/far clip planes are set automatically based in scene; contents. void SetPerspectiveCamera(TGLViewer::ECameraType camera, Double_t fov, Double_t dolly, Double_t* center, Double_t hRotate, Double_t vRotate); Set a perspective camera to supplied configuration - note this; does not need to be the current camera - though you will not see; the effect if it is not. 'camera' defines the persp camera - one of kCameraPerspXOZ, kCameraPerspYOZ, k",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLViewer.html:30352,config,configuration,30352,root/html528/TGLViewer.html,https://root.cern,https://root.cern/root/html528/TGLViewer.html,6,['config'],['configuration']
Modifiability,"-side variation; RooAbsArg::OperModeRooAbsArg::_operModeDirty state propagation mode; RooArgSet*RooAbsArg::_ownedComponents! Set of owned component; RooArgList_ownedListList of owned components; TIterator*_paramIter! Iterator over paramSet; RooListProxy_paramSetinterpolation parameters; Int_tRooAbsReal::_plotBinsNumber of plot bins; Double_tRooAbsReal::_plotMaxMaximum of plot range; Double_tRooAbsReal::_plotMinMinimum of plot range; Bool_tRooAbsArg::_prohibitServerRedirect! Prohibit server redirects -- Debugging tool; TListRooAbsArg::_proxyListlist of proxies; Double_tRooAbsPdf::_rawValue; Char_tRooAbsReal::_sbyteValue! Transient cache for signed byte values from tree branches ; Bool_tRooAbsPdf::_selectCompComponent selection flag for RooAbsPdf::plotCompOn; Bool_tRooAbsReal::_selectComp! Component selection flag for RooAbsPdf::plotCompOn; RooRefCountListRooAbsArg::_serverListlist of server objects; Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumGenConfig*RooAbsPdf::_specGeneratorConfig! MC generator configuration specific for this object; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<std::string,std::string>RooAbsArg::_stringAttribString attributes; Int_tRooAbsPdf::_traceCountNumber of traces remaining to print; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches ; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Int_tRooAbsPdf::_valueCacheIntOrderInterpolation order for numeric integral value cache; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; static Int_tRooAbsPdf::_verboseEval; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooJeffreysPrior.html:39612,config,configuration,39612,root/html530/RooJeffreysPrior.html,https://root.cern,https://root.cern/root/html530/RooJeffreysPrior.html,2,['config'],['configuration']
Modifiability,"-size boxes, boxes of different sizes, or arbitrary sexto-epipeds,...Definition TEveBoxSet.h:22; TEveQuadSetSupports various internal formats that result in rendering of a set of planar (lines,...Definition TEveQuadSet.h:20; lineTLine * lineDefinition entrylistblock_figure1.C:235; boxvoid box(Int_t pat, Double_t x1, Double_t y1, Double_t x2, Double_t y2)Definition fillpatterns.C:1. Definition at line 29 of file TEveDigitSet.h. Classes; struct  DigitBase_t;  . Public Types; typedef void(* Callback_foo) (TEveDigitSet *, Int_t, TObject *);  ; enum  ERenderMode_e { kRM_AsIs; , kRM_Line; , kRM_Fill; };  ; typedef TString(* TooltipCB_foo) (TEveDigitSet *, Int_t);  ;  Public Types inherited from TEveElement; enum  EChangeBits { kCBColorSelection = (1ULL << ( 0 )); , kCBTransBBox = (1ULL << ( 1 )); , kCBObjProps = (1ULL << ( 2 )); , kCBVisibility = (1ULL << ( 3 )); };  ; typedef void(TEveElement::* ImplySelect_foo) ();  ; typedef List_t::const_iterator List_ci;  ; typedef List_t::iterator List_i;  ; typedef std::list< TEveElement * > List_t;  ; typedef void(TEveElement::* Select_foo) (Bool_t);  ; typedef Set_t::const_iterator Set_ci;  ; typedef Set_t::iterator Set_i;  ; typedef std::set< TEveElement * > Set_t;  ; typedef sLTI_t::iterator sLTI_i;  ; typedef sLTI_t::reverse_iterator sLTI_ri;  ; typedef std::set< TEveListTreeInfo > sLTI_t;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveDigitSet.html:3974,inherit,inherited,3974,doc/master/classTEveDigitSet.html,https://root.cern,https://root.cern/doc/master/classTEveDigitSet.html,2,['inherit'],['inherited']
Modifiability,"-square fits),; ROOT::Fit::PoissonLikelihoodFCN for binned likelihood fits of histograms,; ROOT::Fit::LogLikelihoodFCN for generic un-binned likelihood fits. These classes are templated on the type of function interface they implement (see later). User convenient typedefs are also provided. They derive from the common generic interface multi-dimensional for function evaluation, ROOT::Math::IBaseFunctionMultiDim. In addition the fitter classes make uses of the generic interfaces for parametric function evaluations, ROOT::Math::IParametricFunctionMultiDim to define the fit model function and use the ROOT::Math::Minimizer interface to perform the minimization of the objective function. More information about the function interface and the multi-dimensional minimization in ROOT is given in the Mathematical Library chapter.; Here we present a detailed description of the ROOT::Fit classes and how to use them. Using these classes instead of the interface provided directly in the ROOT data objects, like TH1::Fit allow are more fine control to configure and customise the fits. For example, using these classes a combined fit of several histograms can be performed.; To understand how these class work, let’s go through a simple example, such as fitting an histogram.; When fitting an histogram, instead of using TH1::Fit we will show in the following hot wo use the ROOT::Fit classes. We will show how to perform the following different type of fits with the histogram data: * a least square fit using the observed errors (Neyman chi-squared); * a least square fit using the expected errors from the function (Pearson chi-squared); * a binned likelihood fit; * an extended unbinned likelihood fits, if the histogram has been set to store in the buffer the original data used to fill it.; Let’s go through all the steps required for performing these fits using the ROOT::Fit::Fitter class. These steps are: 1. Create the input fit data object. 2. Create the input model function. 3. Configure ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:190397,config,configure,190397,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['config'],['configure']
Modifiability,"-sum_i(a_i); RooFunctor Export RooAbsReal as functor; RooFunctor1DBinding RooAbsReal binding to a ROOT::Math::IBaseFunctionOneDim; RooFunctor1DPdfBinding RooAbsPdf binding to a ROOT::Math::IBaseFunctionOneDim; RooFunctorBinding RooAbsReal binding to a ROOT::Math::IBaseFunctionMultiDim; RooFunctorPdfBinding RooAbsPdf binding to a ROOT::Math::IBaseFunctionMultiDim; RooGExpModel Gauss (x) Expontial resolution model; RooGamma Gaussian PDF; RooGaussKronrodIntegrator1D 1-dimensional Gauss-Kronrod numerical integration engine; RooGaussModel Gaussian Resolution Model; RooGaussian Gaussian PDF; RooGenCategory Generic category-to-category function based on user supplied mapping function; RooGenContext Universal context for generating toy MC data from any p.d.f; RooGenFitStudy Generate-and-Fit study module; RooGenFunction Export RooAbsReal as functor; RooGenProdProj General form of projected integral of product of PDFs, utility class for RooProdPdf; RooGenericPdf Generic PDF defined by string expression and list of variables; RooGlobalFunc ; RooGrid Utility class for RooMCIntegrator holding a multi-dimensional grid; RooHashTable Hash table; RooHist 1-dimensional histogram with error bars; RooHistConstraint Your description goes here...; RooHistError Utility class for calculating histogram errors; RooHistFunc Histogram based function; RooHistPdf Histogram based PDF; RooImproperIntegrator1D 1-dimensional improper integration engine; RooInt Container class for Int_t; RooIntegralMorph Linear shape interpolation operator p.d.f; RooIntegrator1D 1-dimensional numerical integration engine; RooIntegrator2D 2-dimensional numerical integration engine; RooIntegratorBinding Function binding representing output of numeric integrator; RooInvTransform Function binding returning inverse of other function binding; RooJeffreysPrior Sum of RooAbsReal objects; RooKeysPdf One-dimensional non-parametric kernel estimation p.d.f.; RooLandau Landau Distribution PDF; RooLegendre Legendre polynomial; RooL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ClassIndex.html:37430,variab,variables,37430,root/html534/ClassIndex.html,https://root.cern,https://root.cern/root/html534/ClassIndex.html,2,['variab'],['variables']
Modifiability,"-symmetric; cases, and A*V = V*D. Function Members (Methods); public:. TMatrixDEigen(); TMatrixDEigen(const TMatrixD& a); TMatrixDEigen(const TMatrixDEigen& another); virtual~TMatrixDEigen(); static TClass*Class(); const TMatrixDGetEigenValues() const; const TVectorD&GetEigenValuesIm() const; const TVectorD&GetEigenValuesRe() const; const TMatrixD&GetEigenVectors() const; virtual TClass*IsA() const; TMatrixDEigen&operator=(const TMatrixDEigen& source); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). protected:. static voidMakeHessenBerg(TMatrixD& v, TVectorD& ortho, TMatrixD& H); static voidMakeSchurr(TMatrixD& v, TVectorD& d, TVectorD& e, TMatrixD& H); static voidSort(TMatrixD& v, TVectorD& d, TVectorD& e). Data Members; public:. enum { kWorkMax; };. protected:. TVectorDfEigenValuesImEigen-values; TVectorDfEigenValuesReEigen-values; TMatrixDfEigenVectorsEigen-vectors of matrix. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TMatrixDEigen(const TMatrixD& a); Constructor for eigen-problem of matrix A . TMatrixDEigen(const TMatrixDEigen& another); Copy constructor. void MakeHessenBerg(TMatrixD& v, TVectorD& ortho, TMatrixD& H); Nonsymmetric reduction to Hessenberg form.; This is derived from the Algol procedures orthes and ortran, by Martin and Wilkinson,; Handbook for Auto. Comp., Vol.ii-Linear Algebra, and the corresponding; Fortran subroutines in EISPACK. void MakeSchurr(TMatrixD& v, TVectorD& d, TVectorD& e, TMatrixD& H); Nonsymmetric reduction from Hessenberg to real Schur form.; This is derived from the Algol procedure hqr2, by Martin and Wilkinson,; Handbook for Auto. Comp., Vol.ii-Linear Algebra, and the corresponding; Fortran subroutine in EISPACK. void Sort(TMatrixD& v, TVectorD& d, TVectorD& e); Sort eigenvalues and corresponding vectors in descending order of Re^2+Im^2; of the complex eigenvalues . TMatrixDEigen & operator=(const TMatrixDEigen& s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMatrixDEigen.html:1762,Inherit,Inheritance,1762,root/html532/TMatrixDEigen.html,https://root.cern,https://root.cern/root/html532/TMatrixDEigen.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,"-width histogram.; 5///; 6/// This tutorial illustrates how to:; 7/// - create a variable bin-width histogram with a binning such; 8/// that the population per bin is about the same.; 9/// - rebin a variable bin-width histogram into another one.; 10///; 11/// \macro_image; 12/// \macro_code; 13///; 14/// \author Rene Brun; 15 ; 16#include ""TH1.h""; 17#include ""TCanvas.h""; 18void rebin() {; 19 //create a fix bin histogram; 20 TH1F *h = new TH1F(""h"",""test rebin"",100,-3,3);; 21 Int_t nentries = 1000;; 22 h->FillRandom(""gaus"",nentries);; 23 Double_t xbins[1001];; 24 Int_t k=0;; 25 TAxis *axis = h->GetXaxis();; 26 for (Int_t i=1;i<=100;i++) {; 27 Int_t y = (Int_t)h->GetBinContent(i);; 28 if (y <=0) continue;; 29 Double_t dx = axis->GetBinWidth(i)/y;; 30 Double_t xmin = axis->GetBinLowEdge(i);; 31 for (Int_t j=0;j<y;j++) {; 32 xbins[k] = xmin +j*dx;; 33 k++;; 34 }; 35 }; 36 xbins[k] = axis->GetXmax();; 37 //create a variable bin-width histogram out of fix bin histogram; 38 //new rebinned histogram should have about 10 entries per bin; 39 TH1F *hnew = new TH1F(""hnew"",""rebinned"",k,xbins);; 40 hnew->FillRandom(""gaus"",10*nentries);; 41 ; 42 //rebin hnew keeping only 50% of the bins; 43 Double_t xbins2[501];; 44 Int_t kk=0;; 45 for (Int_t j=0;j<k;j+=2) {; 46 xbins2[kk] = xbins[j];; 47 kk++;; 48 }; 49 xbins2[kk] = xbins[k];; 50 TH1F *hnew2 = (TH1F*)hnew->Rebin(kk,""hnew2"",xbins2);; 51 ; 52 //draw the 3 histograms; 53 TCanvas *c1 = new TCanvas(""c1"",""c1"",800,1000);; 54 c1->Divide(1,3);; 55 c1->cd(1);; 56 h->Draw();; 57 c1->cd(2);; 58 hnew->Draw();; 59 c1->cd(3);; 60 hnew2->Draw();; 61}; h#define h(i)Definition RSha256.hxx:106; Int_tint Int_tDefinition RtypesCore.h:45; Double_tdouble Double_tDefinition RtypesCore.h:59; TCanvas.h; TH1.h; xminfloat xminDefinition THbookFile.cxx:95; nentriesint nentriesDefinition THbookFile.cxx:91; TAxisClass to manage histogram axis.Definition TAxis.h:31; TAxis::GetXmaxDouble_t GetXmax() constDefinition TAxis.h:140; TAxis::GetBinLowEdgevirtual Double_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rebin_8C_source.html:1181,variab,variable,1181,doc/master/rebin_8C_source.html,https://root.cern,https://root.cern/doc/master/rebin_8C_source.html,1,['variab'],['variable']
Modifiability,". (i)SetInput() GetEmatrixInput()n.a.statistical uncertainty of the input (the measurement) . (i)+(d)+(e)see aboveGetEmatrix()n.a. Partial sun of uncertainties: all sources which are propagated to the covariance before unfolding . (i)+(a)+(b)+(c)+(d)+(e)see aboveGetEmatrixTotal() n.a.All known error sources summed up . Note: (a), (b), (c) are propagated to the result AFTER unfolding, whereas the background errors (d) and (e) are added to the data errors BEFORE unfolding. For this reason the errors of type (d) and (e) are INCLUDED in the standard error matrix and other methods provided by the base class TUnfold, whereas errors of type (a), (b), (c) are NOT INCLUDED in the methods provided by the base class TUnfold. ; Definition at line 59 of file TUnfoldSys.h. Public Types; enum  ESysErrMode { kSysErrModeMatrix =0; , kSysErrModeShift =1; , kSysErrModeRelative =2; };  type of matrix specified with AddSysError() More...;  ;  Public Types inherited from TUnfold; enum  EConstraint { kEConstraintNone =0; , kEConstraintArea =1; };  type of extra constraint More...;  ; enum  EHistMap { kHistMapOutputHoriz = 0; , kHistMapOutputVert = 1; };  arrangement of axes for the response matrix (TH2 histogram) More...;  ; enum  ERegMode { ;   kRegModeNone = 0; , kRegModeSize = 1; , kRegModeDerivative = 2; , kRegModeCurvature = 3; , ;   kRegModeMixed = 4. };  choice of regularisation scheme More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); ,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnfoldSys.html:4701,inherit,inherited,4701,doc/master/classTUnfoldSys.html,https://root.cern,https://root.cern/doc/master/classTUnfoldSys.html,1,['inherit'],['inherited']
Modifiability,". ). Get the position of the variable on the graph for the n'th entry. ; Definition at line 317 of file TParallelCoordVar.cxx. ◆ GetHistBinning(). Int_t TParallelCoordVar::GetHistBinning ; (; ); const. inline . Definition at line 71 of file TParallelCoordVar.h. ◆ GetHistHeight(). Double_t TParallelCoordVar::GetHistHeight ; (; ). inline . Definition at line 77 of file TParallelCoordVar.h. ◆ GetHistLineWidth(). Int_t TParallelCoordVar::GetHistLineWidth ; (; ). inline . Definition at line 78 of file TParallelCoordVar.h. ◆ GetHistogram(). TH1F * TParallelCoordVar::GetHistogram ; (; ). Create or recreate the histogram. ; Definition at line 355 of file TParallelCoordVar.cxx. ◆ GetId(). Int_t TParallelCoordVar::GetId ; (; ). inline . Definition at line 69 of file TParallelCoordVar.h. ◆ GetLogScale(). bool TParallelCoordVar::GetLogScale ; (; ); const. inline . Definition at line 70 of file TParallelCoordVar.h. ◆ GetMinMaxMean(). void TParallelCoordVar::GetMinMaxMean ; (; ). Get mean, min and max of those variable. ; Definition at line 372 of file TParallelCoordVar.cxx. ◆ GetNbins(). Int_t TParallelCoordVar::GetNbins ; (; ). inline . Definition at line 83 of file TParallelCoordVar.h. ◆ GetNentries(). Long64_t TParallelCoordVar::GetNentries ; (; ); const. inline . Definition at line 84 of file TParallelCoordVar.h. ◆ GetObjectInfo(). char * TParallelCoordVar::GetObjectInfo ; (; Int_t ; px, . Int_t ; py . ); const. overridevirtual . Returns info about this axis. ; Reimplemented from TObject.; Definition at line 394 of file TParallelCoordVar.cxx. ◆ GetParallel(). TParallelCoord * TParallelCoordVar::GetParallel ; (; ). inline . Definition at line 86 of file TParallelCoordVar.h. ◆ GetQuantiles(). void TParallelCoordVar::GetQuantiles ; (; ). Get the box plot values (quantiles). ; Definition at line 429 of file TParallelCoordVar.cxx. ◆ GetRanges(). TList * TParallelCoordVar::GetRanges ; (; ). inline . Definition at line 87 of file TParallelCoordVar.h. ◆ GetValuefromXY(). Double_t TPa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParallelCoordVar.html:24545,variab,variable,24545,doc/master/classTParallelCoordVar.html,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html,1,['variab'],['variable']
Modifiability,". ). inline . Definition at line 66 of file RooRealVar.h. ◆ setBinning(). void RooRealVar::setBinning ; (; const RooAbsBinning & ; binning, . const char * ; name = nullptr . ). Add given binning under name 'name' with this variable. ; If name is null, the binning is installed as the default binning. ; Definition at line 403 of file RooRealVar.cxx. ◆ setBins(). void RooRealVar::setBins ; (; Int_t ; nBins, . const char * ; name = nullptr . ). Create a uniform binning under name 'name' for this variable. ; Parameters. [in]nBinsNumber of bins. The limits are taken from the currently set limits. ; [in]nameOptional name. If name is null, install as default binning. . Definition at line 396 of file RooRealVar.cxx. ◆ setError(). void RooRealVar::setError ; (; double ; value). inline . Definition at line 60 of file RooRealVar.h. ◆ setExpensiveObjectCache(). void RooRealVar::setExpensiveObjectCache ; (; RooExpensiveObjectCache & ; ). inlineoverrideprotectedvirtual . variables don't need caches ; Reimplemented from RooAbsArg.; Definition at line 162 of file RooRealVar.h. ◆ setMax() [1/2]. void RooRealVar::setMax ; (; const char * ; name, . double ; value . ). Set maximum of name range to given value. ; If name is null maximum of default range is set ; Definition at line 479 of file RooRealVar.cxx. ◆ setMax() [2/2]. void RooRealVar::setMax ; (; double ; value). inline . Definition at line 78 of file RooRealVar.h. ◆ setMin() [1/2]. void RooRealVar::setMin ; (; const char * ; name, . double ; value . ). Set minimum of name range to given value. ; If name is null minimum of default range is set ; Definition at line 449 of file RooRealVar.cxx. ◆ setMin() [2/2]. void RooRealVar::setMin ; (; double ; value). inline . Definition at line 77 of file RooRealVar.h. ◆ setRange() [1/4]. void RooRealVar::setRange ; (; const char * ; name, . double ; min, . double ; max . ). Set a fit or plotting range. ; Ranges can be selected for e.g. fitting, plotting or integration. Note that multiple var",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealVar.html:87474,variab,variables,87474,doc/master/classRooRealVar.html,https://root.cern,https://root.cern/doc/master/classRooRealVar.html,1,['variab'],['variables']
Modifiability,". ). staticprivate . Definition at line 317 of file RooHistPdf.cxx. ◆ getAnalyticalIntegral() [2/2]. Int_t RooHistPdf::getAnalyticalIntegral ; (; RooArgSet & ; allVars, . RooArgSet & ; analVars, . const char * ; rangeName = nullptr . ); const. overridevirtual . Determine integration scenario. ; If no interpolation is used, RooHistPdf can perform all integrals over its dependents analytically via partial or complete summation of the input histogram. If interpolation is used on the integral over all histogram observables is supported ; Reimplemented from RooAbsReal.; Definition at line 423 of file RooHistPdf.cxx. ◆ getCdfBoundaries(). bool RooHistPdf::getCdfBoundaries ; (; ); const. inline . Definition at line 73 of file RooHistPdf.h. ◆ getInterpolationOrder(). Int_t RooHistPdf::getInterpolationOrder ; (; ); const. inline . Definition at line 59 of file RooHistPdf.h. ◆ getMaxVal(). Int_t RooHistPdf::getMaxVal ; (; const RooArgSet & ; vars); const. overridevirtual . Only handle case of maximum in all variables. ; Reimplemented from RooAbsReal.; Definition at line 559 of file RooHistPdf.cxx. ◆ haveUnitNorm(). bool RooHistPdf::haveUnitNorm ; (; ); const. inline . Definition at line 82 of file RooHistPdf.h. ◆ importWorkspaceHook(). bool RooHistPdf::importWorkspaceHook ; (; RooWorkspace & ; ws). overrideprotectedvirtual . Check if our datahist is already in the workspace. ; Reimplemented from RooAbsArg.; Definition at line 607 of file RooHistPdf.cxx. ◆ initializeOwnedDataHist(). void RooHistPdf::initializeOwnedDataHist ; (; std::unique_ptr< RooDataHist > && ; dataHist). inlineprivate . Definition at line 157 of file RooHistPdf.h. ◆ IsA(). TClass * RooHistPdf::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooAbsPdf.; Definition at line 162 of file RooHistPdf.h. ◆ isBinnedDistribution(). bool RooHistPdf::isBinnedDistribution ; (; const RooArgSet & ; ); const. inlineoverridevirtual . Tests if the distribution is binned",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooHistPdf.html:84396,variab,variables,84396,doc/master/classRooHistPdf.html,https://root.cern,https://root.cern/doc/master/classRooHistPdf.html,1,['variab'],['variables']
Modifiability,". . Definition at line 26 of file RooFirstMoment.h. Public Member Functions;  RooFirstMoment ()=default;  ;  RooFirstMoment (const char *name, const char *title, RooAbsReal &func, RooRealVar &x);  ;  RooFirstMoment (const char *name, const char *title, RooAbsReal &func, RooRealVar &x, const RooArgSet &nset, bool intNSet=false);  ;  RooFirstMoment (const RooFirstMoment &other, const char *name=nullptr);  ; TObject * clone (const char *newname) const override;  ; const RooAbsReal & iF ();  ; TClass * IsA () const override;  ; const RooAbsReal & ixF ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; const RooAbsReal & xF ();  ;  Public Member Functions inherited from RooAbsMoment;  RooAbsMoment ()=default;  ;  RooAbsMoment (const char *name, const char *title, RooAbsReal &func, RooRealVar &x, Int_t order=1, bool takeRoot=false);  ;  RooAbsMoment (const RooAbsMoment &other, const char *name=nullptr);  ; bool central () const;  ; RooAbsReal * mean ();  ; Int_t order () const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (const char *name, const char *title, double minVal, double maxVal, const char *unit="""");  Constructor with plot range and unit label. ;  ;  RooAbsReal (const RooAbsReal &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooAbsReal () override;  Destructor. ;  ; virtual double analyticalIntegral (Int_t code, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; virtual double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFirstMoment.html:1087,inherit,inherited,1087,doc/master/classRooFirstMoment.html,https://root.cern,https://root.cern/doc/master/classRooFirstMoment.html,2,['inherit'],['inherited']
Modifiability,". ; An empty name implies the default binning and a nullptr pointer should be passed to getBinning in this case. ; Implements RooAbsLValue.; Definition at line 364 of file RooRealVar.cxx. ◆ getError(). double RooRealVar::getError ; (; ); const. inline . Definition at line 58 of file RooRealVar.h. ◆ getErrorHi(). double RooRealVar::getErrorHi ; (; ); const. inline . Definition at line 68 of file RooRealVar.h. ◆ getErrorLo(). double RooRealVar::getErrorLo ; (; ); const. inline . Definition at line 67 of file RooRealVar.h. ◆ getValV(). double RooRealVar::getValV ; (; const RooArgSet * ; nset = nullptr); const. overridevirtual . Return value of variable. ; Reimplemented from RooAbsReal.; Definition at line 232 of file RooRealVar.cxx. ◆ hasAsymError(). bool RooRealVar::hasAsymError ; (; bool ; allowZero = true); const. inline . Definition at line 64 of file RooRealVar.h. ◆ hasBinning(). bool RooRealVar::hasBinning ; (; const char * ; name); const. overridevirtual . Returns true if variable has a binning named 'name'. ; Implements RooAbsRealLValue.; Definition at line 293 of file RooRealVar.cxx. ◆ hasError(). bool RooRealVar::hasError ; (; bool ; allowZero = true); const. inline . Definition at line 59 of file RooRealVar.h. ◆ installSharedProp(). void RooRealVar::installSharedProp ; (; std::shared_ptr< RooRealVarSharedProperties > && ; prop). protected . Install the shared property into the member _sharedProp. ; If a property with same name already exists, discard the incoming one, and share the existing. nullptr and properties equal to the RooRealVar::_nullProp will not be installed. ; Definition at line 1294 of file RooRealVar.cxx. ◆ IsA(). TClass * RooRealVar::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooAbsRealLValue.; Definition at line 173 of file RooRealVar.h. ◆ isDerived(). bool RooRealVar::isDerived ; (; ); const. inlineoverridevirtual . Does value or shape of this arg depend on any other arg? ; Reimple",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealVar.html:82394,variab,variable,82394,doc/master/classRooRealVar.html,https://root.cern,https://root.cern/doc/master/classRooRealVar.html,1,['variab'],['variable']
Modifiability,". ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Documentation » Courses » Introductory Tutorials Using a Macro to Read a TTree. Why using a macro?; As real analyses don't fit into simple TTree::Draw() invocations, and as it is quite cumbersome to type the same lines again and again in the Root prompt, simply create macros for commonly used code. A macro is a file that is interpreted by ROOT.; Creating and Editing the Macro; Create a macro (e.g. AnalyzeTree.C) using your favorite text editor, e.g. with vi, emacs, wordpad, Eclipse, Visual Studio,... The macro should start with the proper #include statements and should contain the function declaration with the same name than the macro itself. As we know we're going to use TFile and TTree (at least), we can already include their headers TFile.h and TTree.h. Then come the function implementation.; Function Implementation; Lets start with something simple: calculate the sum of all event sizes. For this we need a new variable of type int. Create (declare) it at the beginning of the function, and don't forget to initialize it to 0. At the end, the code in AnalyzeTree.C should look like this:; #include ""TFile.h""; #include ""TTree.h"". void AnalyzeTree(); {; // Variables used to store the data; Int_t totalSize = 0; // Sum of data size (in bytes) of all events. ... Opening the File and Getting the Tree; The first thing to do is to open the file containing the tree, by calling TFile::Open(), passing the file name, and then, if the file is open (i.e. if the pointer to it is not NULL), create a TTreeReader using the tree name and the file. At the end, the code in AnalyzeTree.C should look like this:; ... // open the file; TFile *f = TFile::Open(""http://root.cern/files/introtutorials/eventdata.root"");; if (f == 0) {; // if we cannot open the file, print an error message and return immediatly; printf(""Error: cannot open http://root.cern/files/introtutorials/eventdata.root!\n"");; return;; }. // Create tyhe tr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/using-macro-read-ttree.html:2793,variab,variable,2793,d/using-macro-read-ttree.html,https://root.cern,https://root.cern/d/using-macro-read-ttree.html,1,['variab'],['variable']
Modifiability,". ; Definition at line 32 of file TUnuran.cxx. ◆ ~TUnuran(). TUnuran::~TUnuran ; (; ). Destructor. ; Definition at line 53 of file TUnuran.cxx. ◆ TUnuran() [2/3]. TUnuran::TUnuran ; (; const TUnuran & ; ). delete . ◆ TUnuran() [3/3]. TUnuran::TUnuran ; (; TUnuran && ; ). delete . Member Function Documentation. ◆ GetDimension(). int TUnuran::GetDimension ; (; ); const. Return the dimension of unuran generator method. ; For 1D method returns 1 and for the multi-dimensional case must be equal to the distribution dimension. ; Definition at line 376 of file TUnuran.cxx. ◆ GetDistType(). int TUnuran::GetDistType ; (; ); const. Return the type of the distribution. ; See documentation of unuran_distr_get_type for the possible types of distributions. ; Definition at line 383 of file TUnuran.cxx. ◆ GetGenId(). std::string TUnuran::GetGenId ; (; ); const. Return an ID string about the unuran generator method. ; Definition at line 369 of file TUnuran.cxx. ◆ GetInfo(). std::string TUnuran::GetInfo ; (; bool ; extended = false). Return an information string about the used Unuran generator method. ; Parameters. extended: if true return some helper information about the existing options of the method. . Definition at line 362 of file TUnuran.cxx. ◆ GetRandom(). TRandom * TUnuran::GetRandom ; (; ). inline . Return instance of the random engine used. ; Definition at line 223 of file TUnuran.h. ◆ Init() [1/5]. bool TUnuran::Init ; (; const std::string & ; distr, . const std::string & ; method . ). Initialize with Unuran string API interface. ; See https://statmath.wu.ac.at/unuran/doc/unuran.html#StringAPI; Parameters. distr: UNU.RAN distribution string ; method: UNU.RAN method string. Here is an example using the string API: Tunuran unr;; unr.Init(""normal(3.,0.75); domain = (0,inf)"", ""method = tdr; c = 0"");. Definition at line 62 of file TUnuran.cxx. ◆ Init() [2/5]. bool TUnuran::Init ; (; const TUnuranContDist & ; distr, . const std::string & ; method = ""auto"" . ). Initialize method ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnuran.html:6408,extend,extended,6408,doc/master/classTUnuran.html,https://root.cern,https://root.cern/doc/master/classTUnuran.html,1,['extend'],['extended']
Modifiability,". ; Definition at line 53 of file RMinimizer.h. Member Function Documentation. ◆ CovMatrix(). double ROOT::Math::RMinimizer::CovMatrix ; (; unsigned int ; ivar, . unsigned int ; jvar . ); const. inlineoverridevirtual . return covariance matrices element for variables ivar,jvar if the variable is fixed the return value is zero The ordering of the variables is the same as in the parameter and errors vectors ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 68 of file RMinimizer.h. ◆ Errors(). const double * ROOT::Math::RMinimizer::Errors ; (; ); const. inlineoverridevirtual . return errors at the minimum ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 63 of file RMinimizer.h. ◆ GetCovMatrix(). bool ROOT::Math::RMinimizer::GetCovMatrix ; (; double * ; covMat); const. inlineoverridevirtual . Fill the passed array with the covariance matrix elements if the variable is fixed or const the value is zero. ; The array will be filled as cov[i *ndim + j] The ordering of the variables is the same as in errors and parameter value. This is different from the direct interface of Minuit2 or TMinuit where the values were obtained only to variable parameters ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 79 of file RMinimizer.h. ◆ HessMatrix(). double ROOT::Math::RMinimizer::HessMatrix ; (; unsigned int ; i, . unsigned int ; j . ); const. Returns the ith jth component of the Hessian matrix. . ◆ Minimize(). bool ROOT::Math::RMinimizer::Minimize ; (; ). overridevirtual . Function to find the minimum. ; function for finding the minimum ; Reimplemented from ROOT::Math::BasicMinimizer.; Definition at line 47 of file RMinimizer.cxx. ◆ NCalls(). unsigned int ROOT::Math::RMinimizer::NCalls ; (; ); const. overridevirtual . Returns the number of function calls. ; returns number of function calls ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 44 of file RMinimizer.cxx. ◆ ProvidesError(). bool ROOT::Math::RMinimizer::ProvidesError ; (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1RMinimizer.html:13437,variab,variables,13437,doc/master/classROOT_1_1Math_1_1RMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1RMinimizer.html,1,['variab'],['variables']
Modifiability,". ; Definition at line 542 of file RooMCStudy.cxx. ◆ fit() [2/2]. bool RooMCStudy::fit ; (; Int_t ; nSamples, . TList & ; dataSetList . ). Fit 'nSamples' datasets, as supplied in 'dataSetList'. ; Definition at line 557 of file RooMCStudy.cxx. ◆ fitParams(). const RooArgSet * RooMCStudy::fitParams ; (; Int_t ; sampleNum); const. Return an argset with the fit parameters for the given sample number. ; NB: The fit parameters are only stored for successful fits, thus the maximum sampleNum can be less that the number of generated samples and if so, the indices will be out of synch with genData() and fitResult() ; Definition at line 813 of file RooMCStudy.cxx. ◆ fitParDataSet(). const RooDataSet & RooMCStudy::fitParDataSet ; (; ). Return a RooDataSet containing the post-fit parameters of each toy cycle. ; This dataset also contains any additional output that was generated by study modules that were added to this RooMCStudy. By default, the two following variables are added (apart from fit parameters):; NLL: The value of the negative log-likelihood for each run.; ngen: Number of events generated for each run. . Definition at line 793 of file RooMCStudy.cxx. ◆ fitResult(). const RooFitResult * RooMCStudy::fitResult ; (; Int_t ; sampleNum); const. Return the RooFitResult of the fit with the given run number. ; NoteFit results are not saved by default. This requires passing FitOptions(Save(), ...) to the constructor. ; Definition at line 831 of file RooMCStudy.cxx. ◆ fitSample(). bool RooMCStudy::fitSample ; (; RooAbsData * ; genSample). protected . Internal method. ; Fit given dataset with fit model. If fit converges (TMinuit status code zero) The fit results are appended to the fit results dataset; If the fit option ""r"" is supplied, the RooFitResult objects will always be saved, regardless of the fit status. RooFitResults objects can be retrieved later via fitResult(). ; Definition at line 648 of file RooMCStudy.cxx. ◆ genData(). RooAbsData * RooMCStudy::genData ; (; Int_t ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMCStudy.html:25641,variab,variables,25641,doc/master/classRooMCStudy.html,https://root.cern,https://root.cern/doc/master/classRooMCStudy.html,1,['variab'],['variables']
Modifiability,". ; Implements RooAbsDataStore.; Definition at line 607 of file RooTreeDataStore.cxx. ◆ weight() [2/3]. virtual double RooAbsDataStore::weight ; (; ); const. virtual . Implements RooAbsDataStore. ◆ weight() [3/3]. double RooAbsDataStore::weight ; (; Int_t ; index); const. inline . Definition at line 66 of file RooAbsDataStore.h. ◆ weightError() [1/2]. void RooTreeDataStore::weightError ; (; double & ; lo, . double & ; hi, . RooAbsData::ErrorType ; etype = RooAbsData::Poisson . ); const. overridevirtual . Implements RooAbsDataStore.; Definition at line 646 of file RooTreeDataStore.cxx. ◆ weightError() [2/2]. double RooTreeDataStore::weightError ; (; RooAbsData::ErrorType ; etype = RooAbsData::Poisson); const. overridevirtual . Implements RooAbsDataStore.; Definition at line 615 of file RooTreeDataStore.cxx. ◆ weightVar(). RooRealVar * RooTreeDataStore::weightVar ; (; const RooArgSet & ; allVars, . const char * ; wgtName = nullptr . ). private . Utility function for constructors Return pointer to weight variable if it is defined. ; Definition at line 213 of file RooTreeDataStore.cxx. Friends And Related Symbol Documentation. ◆ RooVectorDataStore. friend class RooVectorDataStore. friend . Definition at line 143 of file RooTreeDataStore.h. Member Data Documentation. ◆ _attachedBuffers. RooArgSet RooTreeDataStore::_attachedBuffers. private . ! Currently attached buffers (if different from _varsww) ; Definition at line 179 of file RooTreeDataStore.h. ◆ _cacheOwner. const RooAbsArg* RooTreeDataStore::_cacheOwner = nullptr. private . TTree holding the cached function values. ; Definition at line 162 of file RooTreeDataStore.h. ◆ _cacheTree. TTree* RooTreeDataStore::_cacheTree = nullptr. private . Definition at line 161 of file RooTreeDataStore.h. ◆ _curWgt. double RooTreeDataStore::_curWgt = 1.0. mutableprivate . Buffer for weights in case a batch of values is requested. ; Weight of current event ; Definition at line 174 of file RooTreeDataStore.h. ◆ _curWgtErr. double RooT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooTreeDataStore.html:39691,variab,variable,39691,doc/master/classRooTreeDataStore.html,https://root.cern,https://root.cern/doc/master/classRooTreeDataStore.html,1,['variab'],['variable']
Modifiability,". ; Legacy Code TFolder is a legacy interface: there will be no bug fixes nor new developments. Therefore it is not recommended to use it in new long-term production code. But, depending on the context, using TFolder might still be a valid solution. ; A TFolder object is a collection of objects and folders. Folders have a name and a title and are identified in the folder hierarchy by a ""Unix-like"" naming mechanism. The root of all folders is //root. New folders can be dynamically added or removed to/from a folder. The folder hierarchy can be visualized via the TBrowser. The Root folders hierarchy can be seen as a whiteboard where objects are posted. Other classes/tasks can access these objects by specifying only a string pathname. This whiteboard facility greatly improves the modularity of an application, minimizing the class relationship problem that penalizes large applications.; Pointers are efficient to communicate between classes. However, one has interest to minimize direct coupling between classes in the form of direct pointers. One better uses the naming and search service provided by the Root folders hierarchy. This makes the classes loosely coupled and also greatly facilitates I/O operations. In a client/server environment, this mechanism facilitates the access to any kind of object in //root stores running on different processes.; A TFolder is created by invoking the TFolder constructor. It is placed inside an existing folder via the TFolder::AddFolder method. One can search for a folder or an object in a folder using the FindObject method. FindObject analyses the string passed as its argument and searches in the hierarchy until it finds an object or folder matching the name.; When a folder is deleted, its reference from the parent folder and possible other folders is deleted.; If a folder has been declared the owner of its objects/folders via TFolder::SetOwner, then the contained objects are deleted when the folder is deleted. By default, a folder does n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFolder.html:1327,coupling,coupling,1327,doc/master/classTFolder.html,https://root.cern,https://root.cern/doc/master/classTFolder.html,1,['coupling'],['coupling']
Modifiability,". ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Static Protected Member Functions |; Protected Attributes |; Static Protected Attributes |; List of all members ; TBufferIO Class ReferenceabstractInput/Output Library. ; Direct subclass of TBuffer, implements common methods for TBufferFile and TBufferText classes. ; Definition at line 30 of file TBufferIO.h. Public Types; enum  { kMapSize = 503; };  ; enum  EStatusBits { ;   kNotDecompressed = (1ULL << ( 15 )); , kTextBasedStreaming = (1ULL << ( 18 )); , kUser1 = (1ULL << ( 21 )); , kUser2 = (1ULL << ( 22 )); , ;   kUser3 = (1ULL << ( 23 )). };  ;  Public Types inherited from TBuffer; enum  { kInitialSize = 1024; , kMinimalSize = 128; };  ; enum  EMode { kRead = 0; , kWrite = 1; };  ; enum  EStatusBits { kIsOwner = (1ULL << ( 16 )); , kCannotHandleMemberWiseStreaming = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  ~TBufferIO () override;  destructor ;  ; Bool_t CheckObject (const TObject *obj) override;  Check if the specified object is already in the buffer. ;  ; Bool_t CheckObject (const void *obj, const TClass *ptrClass) override;  Check if the specified object of the specified class is already in the buff",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferIO.html:834,inherit,inherited,834,doc/master/classTBufferIO.html,https://root.cern,https://root.cern/doc/master/classTBufferIO.html,2,['inherit'],['inherited']
Modifiability,". ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. rebin.C File ReferenceTutorials » Histograms tutorials. Detailed Description; Rebin a variable bin-width histogram. ; This tutorial illustrates how to:; create a variable bin-width histogram with a binning such that the population per bin is about the same.; rebin a variable bin-width histogram into another one. ; #include ""TH1.h""; #include ""TCanvas.h""; void rebin() {; //create a fix bin histogram; TH1F *h = new TH1F(""h"",""test rebin"",100,-3,3);; Int_t nentries = 1000;; h->FillRandom(""gaus"",nentries);; Double_t xbins[1001];; Int_t k=0;; TAxis *axis = h->GetXaxis();; for (Int_t i=1;i<=100;i++) {; Int_t y = (Int_t)h->GetBinContent(i);; if (y <=0) continue;; Double_t dx = axis->GetBinWidth(i)/y;; Double_t xmin = axis->GetBinLowEdge(i);; for (Int_t j=0;j<y;j++) {; xbins[k] = xmin +j*dx;; k++;; }; }; xbins[k] = axis->GetXmax();; //create a variable bin-width histogram out of fix bin histogram; //new rebinned histogram should have about 10 entries per bin; TH1F *hnew = new TH1F(""hnew"",""rebinned"",k,xbins);; hnew->FillRandom(""gaus"",10*nentries);; ; //rebin hnew keeping only 50% of the bins; Double_t xbins2[501];; Int_t kk=0;; for (Int_t j=0;j<k;j+=2) {; xbins2[kk] = xbins[j];; kk++;; }; xbins2[kk] = xbins[k];; TH1F *hnew2 = (TH1F*)hnew->Rebin(kk,""hnew2"",xbins2);; ; //draw the 3 histograms; TCanvas *c1 = new TCanvas(""c1"",""c1"",800,1000);; c1->Divide(1,3);; c1->cd(1);; h->Draw();; c1->cd(2);; hnew->Draw();; c1->cd(3);; hnew2->Draw();; }; h#define h(i)Definition RSha256.hxx:106; Int_tint Int_tDefinition RtypesCore.h:45; Double_tdouble Double_tDefinition RtypesCore.h:59; TCanvas.h; TH1.h; xminfloat xminDefinition THbookFile.cxx:95; nentriesint nentriesDefinition THbookFile.cxx:91; TAxisClass to manage histogram axis.Definition TAxis.h:31; TAxis::GetXmaxDouble_t GetXmax() constDefinition TAxis.h:140; TAxis::GetBinLowEdgevirtual Double_t GetBinLowEdge(Int_t bin) constReturn low edge of bin.Definition",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rebin_8C.html:974,variab,variable,974,doc/master/rebin_8C.html,https://root.cern,https://root.cern/doc/master/rebin_8C.html,1,['variab'],['variable']
Modifiability,". ; Reimplemented from RooPrintable.; Reimplemented in RooDataHist, and RooDataSet.; Definition at line 806 of file RooAbsData.cxx. ◆ printName(). void RooAbsData::printName ; (; std::ostream & ; os); const. overridevirtual . Print name of dataset. ; Reimplemented from RooPrintable.; Definition at line 783 of file RooAbsData.cxx. ◆ printTitle(). void RooAbsData::printTitle ; (; std::ostream & ; os); const. overridevirtual . Print title of dataset. ; Reimplemented from RooPrintable.; Definition at line 791 of file RooAbsData.cxx. ◆ RecursiveRemove(). void RooAbsData::RecursiveRemove ; (; TObject * ; obj). overridevirtual . If one of the TObject we have a referenced to is deleted, remove the reference. ; Reimplemented from TObject.; Definition at line 2458 of file RooAbsData.cxx. ◆ reduce() [1/5]. RooFit::OwningPtr< RooAbsData > RooAbsData::reduce ; (; const char * ; cut); const. Create a subset of the data set by applying the given cut on the data points. ; The cut expression can refer to any variable in the data set. For cuts involving other variables, such as intermediate formula objects, use the equivalent reduce method specifying the as a RooFormulVar reference. ; Definition at line 472 of file RooAbsData.cxx. ◆ reduce() [2/5]. RooFit::OwningPtr< RooAbsData > RooAbsData::reduce ; (; const RooArgSet & ; varSubset, . const char * ; cut = nullptr . ); const. Create a subset of the data set by applying the given cut on the data points and reducing the dimensions to the specified set. ; The cut expression can refer to any variable in the data set. For cuts involving other variables, such as intermediate formula objects, use the equivalent reduce method specifying the as a RooFormulVar reference. ; Definition at line 500 of file RooAbsData.cxx. ◆ reduce() [3/5]. RooFit::OwningPtr< RooAbsData > RooAbsData::reduce ; (; const RooArgSet & ; varSubset, . const RooFormulaVar & ; cutVar . ); const. Create a subset of the data set by applying the given cut on the data points a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsData.html:62139,variab,variable,62139,doc/master/classRooAbsData.html,https://root.cern,https://root.cern/doc/master/classRooAbsData.html,1,['variab'],['variable']
Modifiability,". ; See TDataSetManager::ParseInitOpts for the available base options. The base options are already initialized by the base constructor ; Reimplemented from TDataSetManager.; Definition at line 317 of file TDataSetManagerFile.cxx. ◆ RegisterDataSet(). Int_t TDataSetManagerFile::RegisterDataSet ; (; const char * ; uri, . TFileCollection * ; newDataSet, . const char * ; opts . ). overridevirtual . Register a dataset, perfoming quota checkings and verification, if required. ; If a dataset with the same name already exists the action fails unless 'opts' contains 'O', in which case the old dataset is overwritten, or contains 'U', in which case 'newDataSet' is added to the existing dataset (duplications are ignored, if any). If 'opts' contains 'V' the dataset files are also verified (if the dataset manager is configured to allow so). By default the dataset is not verified. If 'opts' contains 'T' the in the dataset object (status bits, meta,...) is trusted, i.e. not reset (if the dataset manager is configured to allow so). Returns 0 on success, -1 on failure ; Reimplemented from TDataSetManager.; Definition at line 1598 of file TDataSetManagerFile.cxx. ◆ RemoveDataSet() [1/2]. Bool_t TDataSetManagerFile::RemoveDataSet ; (; const char * ; group, . const char * ; user, . const char * ; dsName . ). protected . Removes the indicated dataset. ; Definition at line 1544 of file TDataSetManagerFile.cxx. ◆ RemoveDataSet() [2/2]. Bool_t TDataSetManagerFile::RemoveDataSet ; (; const char * ; uri). overridevirtual . Removes the indicated dataset. ; Reimplemented from TDataSetManager.; Definition at line 1930 of file TDataSetManagerFile.cxx. ◆ ScanDataSet() [1/2]. Int_t TDataSetManagerFile::ScanDataSet ; (; const char * ; group, . const char * ; user, . const char * ; dsName, . UInt_t ; option = kReopen | kDebug . ). protected . See documentation of ScanDataSet(TFileCollection *dataset, UInt_t option) ; Definition at line 1783 of file TDataSetManagerFile.cxx. ◆ ScanDataSet() [2/2]. Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDataSetManagerFile.html:32027,config,configured,32027,doc/master/classTDataSetManagerFile.html,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html,1,['config'],['configured']
Modifiability,". ; This generator context generates events from such products by first generating events from a dedicated generator context of the input p.d.f. and applying an extra rejection step based on the efficiency function. ; Definition at line 23 of file RooEffGenContext.h. Public Member Functions;  RooEffGenContext (const RooAbsPdf &model, const RooAbsPdf &pdf, const RooAbsReal &eff, const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool verbose=false, const RooArgSet *forceDirect=nullptr);  Constructor of generator context for RooEffProd products. ;  ; TClass * IsA () const override;  ; void printMultiline (std::ostream &os, Int_t content, bool verbose=false, TString indent="""") const override;  Detailed printing interface. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsGenContext;  RooAbsGenContext (const RooAbsPdf &model, const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool _verbose=false);  Constructor. ;  ; virtual void attach (const RooArgSet &params);  Interface to attach given parameters to object in this context. ;  ; Int_t defaultPrintContents (Option_t *opt) const override;  Define default contents when printing. ;  ; StyleOption defaultPrintStyle (Option_t *opt) const override;  Define default print style. ;  ; virtual RooDataSet * generate (double nEvents=0, bool skipInit=false, bool extendedMode=false);  Generate the specified number of events with nEvents>0 and and return a dataset containing the generated events. ;  ; bool isValid () const;  ; bool isVerbose () const;  ; void Print (Option_t *options=nullptr) const override;  This method must be overridden when a class wants to print itself. ;  ; void printArgs (std::ostream &os) const override;  Print arguments of context, i.e. the observables being generated in this conte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooEffGenContext.html:1439,inherit,inherited,1439,doc/master/classRooEffGenContext.html,https://root.cern,https://root.cern/doc/master/classRooEffGenContext.html,1,['inherit'],['inherited']
Modifiability,". ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <RooCmdArg.h>. Inheritance diagram for RooCmdArg:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooCmdArg() [1/3]. RooCmdArg::RooCmdArg ; (; ). Default constructor. ; Definition at line 57 of file RooCmdArg.cxx. ◆ RooCmdArg() [2/3]. RooCmdArg::RooCmdArg ; (; const char * ; name, . Int_t ; i1, . Int_t ; i2 = 0, . double ; d1 = 0.0, . double ; d2 = 0.0, . const char * ; s1 = nullptr, . const char * ; s2 = nullptr, . const TObject * ; o1 = nullptr, . const TObject * ; o2 = nullptr, . const RooCmdArg * ; ca = nullptr, . const char * ; s3 = nullptr, . const RooArgSet * ; c1 = nullptr, . const RooArgSet * ; c2 = nullptr . ). Constructor from payload parameters. ; Constructor with full specification of payload: two integers, two doubles, three string poiners, two object pointers and one RooCmdArg pointer.; Note that the first payload par",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCmdArg.html:13725,inherit,inherited,13725,doc/master/classRooCmdArg.html,https://root.cern,https://root.cern/doc/master/classRooCmdArg.html,1,['inherit'],['inherited']
Modifiability,". ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <RooStats/ConfInterval.h>. Inheritance diagram for RooStats::ConfInterval:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ConfInterval(). RooStats::ConfInterval::ConfInterval ; (; const char * ; name = nullptr). inlineexplicit . constructor given name and title ; Definition at line 40 of file ConfInterval.h. Member Function Documentation. ◆ CheckParameters(). virtual bool RooStats::ConfInterval::CheckParameters ; (; const RooArgSet & ; ); const. pure virtual . check if parameters are correct (i.e. they are the POI of this interval) ; Implemented in RooStats::LikelihoodInterval, RooStats::PointSetInterval, RooStats::SimpleInterval, and RooStats::MCMCInterval. ◆ Class(). static TClass * RooStats::ConfInterval::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * RooStats::ConfInterval::Clas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1ConfInterval.html:12257,inherit,inherited,12257,doc/master/classRooStats_1_1ConfInterval.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1ConfInterval.html,1,['inherit'],['inherited']
Modifiability,". ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <RooStats/HLFactory.h>. Inheritance diagram for RooStats::HLFactory:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ HLFactory() [1/3]. HLFactory::HLFactory ; (; const char * ; name, . const char * ; fileName = nullptr, . bool ; isVerbose = false . ). Constructor. ; Constructor with the name of the config file to interpret and the verbosity flag.; The extension for the config files is assumed to be "".rs"". ; Definition at line 48 of file HLFactory.cxx. ◆ HLFactory() [2/3]. HLFactory::HLFactory ; (; const char * ; name, . RooWorkspace * ; externalWs, . bool ; isVerbose = false . ). Constructor with external RooWorkspace. ; Constructor without a card but with an external workspace. ; Definition at line 66 of file HLFactory.cxx. ◆ HLFactory() [3/3]. HLFactory::HLFactory ; (; ). Default Constructor. ; Definition at line 76 of file HLFact",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1HLFactory.html:13623,inherit,inherited,13623,doc/master/classRooStats_1_1HLFactory.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1HLFactory.html,1,['inherit'],['inherited']
Modifiability,". ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TCut.h>. Inheritance diagram for TCut:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TCut() [1/4]. TCut::TCut ; (; ). Constructor. ; Definition at line 47 of file TCut.cxx. ◆ TCut() [2/4]. TCut::TCut ; (; const char * ; title). Constructor. ; Definition at line 54 of file TCut.cxx. ◆ TCut() [3/4]. TCut::TCut ; (; const char * ; name, . const char * ; title . ). Constructor. ; Definition at line 61 of file TCut.cxx. ◆ TCut() [4/4]. TCut::TCut ; (; const TCut & ; cut). Copy Constructor. ; Definition at line 68 of file TCut.cxx. ◆ ~TCut(). TCut::~TCut ; (; ). override . Typical destructor. ; Definition at line 75 of file TCut.cxx. Member Function Documentation. ◆ Class(). static TClass * TCut::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TCut::Class_Name ; (; ). static . ReturnsNam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCut.html:13662,inherit,inherited,13662,doc/master/classTCut.html,https://root.cern,https://root.cern/doc/master/classTCut.html,1,['inherit'],['inherited']
Modifiability,". ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TExec.h>. Inheritance diagram for TExec:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TExec() [1/3]. TExec::TExec ; (; ). Exec default constructor. ; Definition at line 105 of file TExec.cxx. ◆ TExec() [2/3]. TExec::TExec ; (; const char * ; name, . const char * ; command . ). Exec normal constructor. ; Definition at line 113 of file TExec.cxx. ◆ TExec() [3/3]. TExec::TExec ; (; const TExec & ; text). Copy constructor. ; Definition at line 127 of file TExec.cxx. ◆ ~TExec(). TExec::~TExec ; (; ). virtual . Exec default destructor. ; Definition at line 120 of file TExec.cxx. Member Function Documentation. ◆ Class(). static TClass * TExec::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TExec::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTExec.html:15056,inherit,inherited,15056,doc/master/classTExec.html,https://root.cern,https://root.cern/doc/master/classTExec.html,1,['inherit'],['inherited']
Modifiability,". ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TFileStager.h>. Inheritance diagram for TFileStager:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFileStager(). TFileStager::TFileStager ; (; const char * ; stager). inline . Definition at line 39 of file TFileStager.h. ◆ ~TFileStager(). virtual TFileStager::~TFileStager ; (; ). inlinevirtual . Definition at line 40 of file TFileStager.h. Member Function Documentation. ◆ Class(). static TClass * TFileStager::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TFileStager::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TFileStager::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 58 of file TFileStager.h. ◆ DeclFileName(). static const char * TFileStager::DeclFileName ; (; ). inlinest",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFileStager.html:11899,inherit,inherited,11899,doc/master/classTFileStager.html,https://root.cern,https://root.cern/doc/master/classTFileStager.html,1,['inherit'],['inherited']
Modifiability,". ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TGuiFactory.h>. Inheritance diagram for TGuiFactory:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGuiFactory(). TGuiFactory::TGuiFactory ; (; const char * ; name = ""Batch"", . const char * ; title = ""Batch GUI Factory"" . ). TGuiFactory ctor only called by derived classes. ; Definition at line 42 of file TGuiFactory.cxx. ◆ ~TGuiFactory(). virtual TGuiFactory::~TGuiFactory ; (; ). inlinevirtual . Definition at line 46 of file TGuiFactory.h. Member Function Documentation. ◆ Class(). static TClass * TGuiFactory::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGuiFactory::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGuiFactory::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 63 of",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGuiFactory.html:12783,inherit,inherited,12783,doc/master/classTGuiFactory.html,https://root.cern,https://root.cern/doc/master/classTGuiFactory.html,1,['inherit'],['inherited']
Modifiability,". ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TKeyMapFile.h>. Inheritance diagram for TKeyMapFile:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TKeyMapFile() [1/3]. TKeyMapFile::TKeyMapFile ; (; const TKeyMapFile & ; ). privatedelete . ◆ TKeyMapFile() [2/3]. TKeyMapFile::TKeyMapFile ; (; ). Default constructor. ; Definition at line 34 of file TKeyMapFile.cxx. ◆ TKeyMapFile() [3/3]. TKeyMapFile::TKeyMapFile ; (; const char * ; name, . const char * ; classname, . TMapFile * ; mapfile . ). Constructor. ; Definition at line 41 of file TKeyMapFile.cxx. ◆ ~TKeyMapFile(). TKeyMapFile::~TKeyMapFile ; (; ). inlineoverride . Definition at line 31 of file TKeyMapFile.h. Member Function Documentation. ◆ Browse(). void TKeyMapFile::Browse ; (; TBrowser * ; b). overridevirtual . Browse the contained objects. ; Reimplemented from TObject.; Definition at line 50 of file TKeyMapFile.cxx. ◆ ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTKeyMapFile.html:11671,inherit,inherited,11671,doc/master/classTKeyMapFile.html,https://root.cern,https://root.cern/doc/master/classTKeyMapFile.html,1,['inherit'],['inherited']
Modifiability,". ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TPosixThreadFactory.h>. Inheritance diagram for TPosixThreadFactory:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPosixThreadFactory(). TPosixThreadFactory::TPosixThreadFactory ; (; const char * ; name = ""Posix"", . const char * ; title = ""Posix Thread Factory"" . ). Create Posix thread factory. Also sets global gThreadFactory to this. ; Definition at line 34 of file TPosixThreadFactory.cxx. ◆ ~TPosixThreadFactory(). virtual TPosixThreadFactory::~TPosixThreadFactory ; (; ). inlinevirtual . Definition at line 35 of file TPosixThreadFactory.h. Member Function Documentation. ◆ Class(). static TClass * TPosixThreadFactory::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TPosixThreadFactory::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Vers",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPosixThreadFactory.html:11915,inherit,inherited,11915,doc/master/classTPosixThreadFactory.html,https://root.cern,https://root.cern/doc/master/classTPosixThreadFactory.html,1,['inherit'],['inherited']
Modifiability,". ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TRootBrowser.h>. Inheritance diagram for TBrowserPlugin:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TBrowserPlugin(). TBrowserPlugin::TBrowserPlugin ; (; const char * ; name, . const char * ; cmd = """", . Int_t ; tab = 1, . Int_t ; sub = -1 . ). inline . Definition at line 42 of file TRootBrowser.h. ◆ ~TBrowserPlugin(). TBrowserPlugin::~TBrowserPlugin ; (; ). inlineoverride . Definition at line 45 of file TRootBrowser.h. Member Function Documentation. ◆ Class(). static TClass * TBrowserPlugin::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TBrowserPlugin::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TBrowserPlugin::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 51 of file TR",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBrowserPlugin.html:11404,inherit,inherited,11404,doc/master/classTBrowserPlugin.html,https://root.cern,https://root.cern/doc/master/classTBrowserPlugin.html,1,['inherit'],['inherited']
Modifiability,". ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TThreadFactory.h>. Inheritance diagram for TThreadFactory:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TThreadFactory(). TThreadFactory::TThreadFactory ; (; const char * ; name = ""Unknown"", . const char * ; title = ""Unknown Thread Factory"" . ). TThreadFactory ctor only called by derived classes. ; Definition at line 30 of file TThreadFactory.cxx. ◆ ~TThreadFactory(). virtual TThreadFactory::~TThreadFactory ; (; ). inlinevirtual . Definition at line 36 of file TThreadFactory.h. Member Function Documentation. ◆ Class(). static TClass * TThreadFactory::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TThreadFactory::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TThreadFactory::Class_Version ; (; ). inlinestaticconstexpr . Return",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTThreadFactory.html:11168,inherit,inherited,11168,doc/master/classTThreadFactory.html,https://root.cern,https://root.cern/doc/master/classTThreadFactory.html,1,['inherit'],['inherited']
Modifiability,". ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TVirtualGL.h>. Inheritance diagram for TGLManager:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGLManager() [1/2]. TGLManager::TGLManager ; (; ). Definition at line 36 of file TVirtualGL.cxx. ◆ TGLManager() [2/2]. TGLManager::TGLManager ; (; const TGLManager & ; ). delete . Member Function Documentation. ◆ AttachOffScreenDevice(). virtual Bool_t TGLManager::AttachOffScreenDevice ; (; Int_t ; ctxInd, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). pure virtual . Implemented in TGOSXGLManager, TGWin32GLManager, TGWin32GLManagerProxy, and TX11GLManager. ◆ Class(). static TClass * TGLManager::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGLManager::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGLManager::Class_Vers",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLManager.html:12342,inherit,inherited,12342,doc/master/classTGLManager.html,https://root.cern,https://root.cern/doc/master/classTGLManager.html,1,['inherit'],['inherited']
Modifiability,". ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TVirtualMagField.h>. Inheritance diagram for TVirtualMagField:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TVirtualMagField() [1/2]. TVirtualMagField::TVirtualMagField ; (; ). inline . Definition at line 18 of file TVirtualMagField.h. ◆ TVirtualMagField() [2/2]. TVirtualMagField::TVirtualMagField ; (; const char * ; name). inline . Definition at line 19 of file TVirtualMagField.h. ◆ ~TVirtualMagField(). TVirtualMagField::~TVirtualMagField ; (; ). override . Destructor. Unregisters the field. ; Definition at line 41 of file TVirtualMagField.cxx. Member Function Documentation. ◆ Class(). static TClass * TVirtualMagField::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TVirtualMagField::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Versi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualMagField.html:11770,inherit,inherited,11770,doc/master/classTVirtualMagField.html,https://root.cern,https://root.cern/doc/master/classTVirtualMagField.html,1,['inherit'],['inherited']
Modifiability,". ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TVirtualMonitoring.h>. Inheritance diagram for TVirtualMonitoringReader:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TVirtualMonitoringReader(). TVirtualMonitoringReader::TVirtualMonitoringReader ; (; const char * ; = """"). inline . Definition at line 92 of file TVirtualMonitoring.h. ◆ ~TVirtualMonitoringReader(). virtual TVirtualMonitoringReader::~TVirtualMonitoringReader ; (; ). inlinevirtual . Definition at line 93 of file TVirtualMonitoring.h. Member Function Documentation. ◆ Class(). static TClass * TVirtualMonitoringReader::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TVirtualMonitoringReader::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TVirtualMonitoringReader::Class_Version ; (; ). inlinestaticconstexpr . Returns",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualMonitoringReader.html:11348,inherit,inherited,11348,doc/master/classTVirtualMonitoringReader.html,https://root.cern,https://root.cern/doc/master/classTVirtualMonitoringReader.html,1,['inherit'],['inherited']
Modifiability,". ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <TWin32ThreadFactory.h>. Inheritance diagram for TWin32ThreadFactory:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TWin32ThreadFactory(). TWin32ThreadFactory::TWin32ThreadFactory ; (; const char * ; name = ""Win32"", . const char * ; title = ""Win32 Thread Factory"" . ). Create Win32 thread factory. Also sets global gThreadFactory to this. ; Definition at line 34 of file TWin32ThreadFactory.cxx. ◆ ~TWin32ThreadFactory(). virtual TWin32ThreadFactory::~TWin32ThreadFactory ; (; ). inlinevirtual . Definition at line 35 of file TWin32ThreadFactory.h. Member Function Documentation. ◆ Class(). static TClass * TWin32ThreadFactory::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TWin32ThreadFactory::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Vers",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWin32ThreadFactory.html:11803,inherit,inherited,11803,doc/master/classTWin32ThreadFactory.html,https://root.cern,https://root.cern/doc/master/classTWin32ThreadFactory.html,1,['inherit'],['inherited']
Modifiability,". ;  . Protected Attributes; TGraphPolargram * fPolargram;  The polar coordinates system. ;  ; Double_t * fXpol;  [fNpoints] points in polar coordinates ;  ; Double_t * fYpol;  [fNpoints] points in polar coordinates ;  ;  Protected Attributes inherited from TGraphErrors; Double_t * fEX {nullptr};  [fNpoints] array of X errors ;  ; Double_t * fEY {nullptr};  [fNpoints] array of Y errors ;  ;  Protected Attributes inherited from TGraph; TList * fFunctions;  Pointer to list of functions (fits and user) ;  ; TH1F * fHistogram;  Pointer to histogram used for drawing axis. ;  ; Double_t fMaximum;  Maximum value for plotting along y. ;  ; Int_t fMaxSize;  !Current dimension of arrays fX and fY ;  ; Double_t fMinimum;  Minimum value for plotting along y. ;  ; Int_t fNpoints;  Number of points <= fMaxSize. ;  ; TString fOption;  Options used for drawing the graph. ;  ; Double_t * fX;  [fNpoints] array of X points ;  ; Double_t * fY;  [fNpoints] array of Y points ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Private Attributes; Bool_t fOptionAxis;  Force drawing of new coord system. ;  . Additional Inherited Members;  Public Types inherited from TGraph; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kClipFrame = (1ULL << ( 10 )); , kResetHisto = (1ULL << ( 17 )); , kNotEditable = (1ULL << ( 18 )); , ;   kIsSortedX = (1ULL << ( 19 )); , kIsHighlight = (1ULL << ( 20 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphPolar.html:31989,inherit,inherited,31989,doc/master/classTGraphPolar.html,https://root.cern,https://root.cern/doc/master/classTGraphPolar.html,2,['inherit'],['inherited']
Modifiability,". ;  . Protected Member Functions; double evaluate () const override;  Calculate and return current value of self. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that creates the actual integral object. ;  ; void fillTreeBranch (TTree &t) override;  Fill the tree branch that associated with this object with its current value. ;  ; void findInnerMostIntegration (const RooArgSet &allObs, RooArgSet &innerObs, const char *rangeName) const;  Utility function for createIntObj() that aids in the construct of recursive integrals over functions with multiple observables with parameterized ranges. ;  ; TString integralNameSuffix (const RooArgSet &iset, const RooArgSet *nset=nullptr, const char *rangeName=nullptr, bool omitEmpty=false) const;  Construct string with unique suffix name to give to integral object that encodes integrated observables, normalization observables and the integration range name. ;  ; bool isValid () const override;  Check if current value is valid. ;  ; virtual bool isValidReal (double, bool printError=false) const;  Interface function to check if given value is a valid value for this object. Returns true unless overridden. ;  ; void makeProjectionSet (const RooAbsArg *plotVar, const RooArgSet *allVars, RooArgSet &projectedVars, bool silent) const;  Utility function for plotOn() that constructs the set of observables to project when plotting ourselves as function of 'plotVar'. ;  ; bool matchArgs (const RooArgSet &allDeps, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAddition.html:49119,parameteriz,parameterized,49119,doc/master/classRooAddition.html,https://root.cern,https://root.cern/doc/master/classRooAddition.html,1,['parameteriz'],['parameterized']
Modifiability,". ;  ; Bool_t Reset () override;  Reset the info gathered from StreamerInfos and value's TClass. ;  ; virtual void SetOnFileClass (TClass *cl);  ; UInt_t Size () const override;  Return the current size of the container. ;  ; UInt_t Sizeof () const override;  Return the sizeof the collection object. ;  ;  Public Member Functions inherited from TVirtualCollectionProxy;  TVirtualCollectionProxy ();  ;  TVirtualCollectionProxy (TClass *cl);  ; virtual ~TVirtualCollectionProxy ();  ; virtual Int_t GetProperties () const;  Return miscallenous properties of the proxy (see TVirtualCollectionProxy::EProperty) ;  ; char * operator[] (UInt_t idx) const;  Return the address of the value at index idx ;  . Protected Member Functions; void Expand (UInt_t nCurr, UInt_t left);  ; TGenCollectionProxy * InitializeEx (Bool_t silent) override;  Proxy initializer. ;  ; void ReadItems (int nElements, TBuffer &b);  ; void Shrink (UInt_t nCurr, UInt_t left, Bool_t force);  ; void WriteItems (int nElements, TBuffer &b);  ;  Protected Member Functions inherited from TGenCollectionProxy; void CheckFunctions () const;  Check existence of function pointers. ;  ; virtual void DeleteItem (Bool_t force, void *ptr) const;  Call to delete/destruct individual item. ;  ; TGenCollectionProxy * Initialize (Bool_t silent) const;  Proxy initializer. ;  . Private Member Functions; TEmulatedCollectionProxy & operator= (const TEmulatedCollectionProxy &);  . Friends; class TCollectionProxy;  . Additional Inherited Members;  Static Public Attributes inherited from TVirtualCollectionProxy; static const Int_t fgIteratorArenaSize = 16;  The size of a small buffer that can be allocated on the stack to store iterator-specific information. ;  ;  Protected Types inherited from TGenCollectionProxy; typedef void *(* ArrIterfunc_t) (void *from, size_t size);  ; typedef void *(* Collectfunc_t) (void *from, void *to);  ; typedef ROOT::Detail::TCollectionProxyInfo::Environ< char[64]> Env_t;  ; typedef ROOT::Detail::TCollect",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEmulatedCollectionProxy.html:9863,inherit,inherited,9863,doc/master/classTEmulatedCollectionProxy.html,https://root.cern,https://root.cern/doc/master/classTEmulatedCollectionProxy.html,1,['inherit'],['inherited']
Modifiability,". ;  ; Double_t GetXsize ();  Return size of the formula along X in pad coordinates when the text precision is smaller than 3. ;  ; Double_t GetYsize ();  Return size of the formula along Y in pad coordinates when the text precision is smaller than 3. ;  ; TClass * IsA () const override;  ; void Paint (Option_t *option="""") override;  Paint. ;  ; virtual void PaintLatex (Double_t x, Double_t y, Double_t angle, Double_t size, const char *text);  Main drawing function. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitive as a C++ statement(s) on output stream out. ;  ; virtual void SetIndiceSize (Double_t factorSize);  Set relative size of subscripts and superscripts. ;  ; virtual void SetLimitIndiceSize (Int_t limitFactorSize);  Set limit for text resizing of subscripts and superscripts. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TText;  TText ();  ;  TText (const TText &text);  Copy constructor. ;  ;  TText (Double_t x, Double_t y, const char *text);  Text normal constructor. ;  ;  TText (Double_t x, Double_t y, const wchar_t *text);  Text normal constructor. ;  ;  ~TText () override;  Text default destructor. ;  ; void Copy (TObject &text) const override;  Copy this text to text. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a string. ;  ; virtual TText * DrawText (Double_t x, Double_t y, const char *text);  Draw this text with new coordinates. ;  ; virtual TText * DrawText (Double_t x, Double_t y, const wchar_t *text);  Draw this text with new coordinates. ;  ; virtual TText * DrawTextNDC (Double_t x, Double_t y, const char *text);  Draw this text with new coordinates in NDC. ;  ; virtual TText * DrawTextNDC (Double_t x, Double_t y, const wchar_t *text);  Draw this text with new coordinates in NDC. ;  ; void ExecuteEvent (Int_t event",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAnnotation.html:7925,inherit,inherited,7925,doc/master/classTAnnotation.html,https://root.cern,https://root.cern/doc/master/classTAnnotation.html,2,['inherit'],['inherited']
Modifiability,". ;  ; Double_t fC = 0.;  Second order expansion coefficient : fC*2! is the second derivative at x. ;  ; Double_t fD = 0.;  Third order expansion coefficient : fD*3! is the third derivative at x. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TSplinePoly; Double_t fX = 0.;  Abscissa. ;  ; Double_t fY = 0.;  Constant term. ;  . #include <TSpline.h>. Inheritance diagram for TSplinePoly3:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSplinePoly3() [1/3]. TSplinePoly3::TSplinePoly3 ; (; ). inline . Definition at line 112 of file TSpline.h. ◆ TSplinePoly3() [2/3]. TSplinePoly3::TSplinePoly3 ; (; Double_t ; x, . Double_t ; y, . Double_t ; b, . Double_t ; c, . Double_t ; d . ). inline . Definition at line 113 of file TSpline.h. ◆ TSplinePoly3() [3/3]. TSplinePoly3::TSplinePoly3 ; (; TSplinePoly3 const & ; other). inline . Definition at line 114 of file TSpline.h. Member Function Documentation. ◆ B(). Double_t & TSplinePoly3::B ; (; ). inl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSplinePoly3.html:10962,inherit,inherited,10962,doc/master/classTSplinePoly3.html,https://root.cern,https://root.cern/doc/master/classTSplinePoly3.html,2,['inherit'],['inherited']
Modifiability,". ;  ; Double_t fE = 0.;  Fourth order expansion coefficient : fE*4! is the fourth derivative at x. ;  ; Double_t fF = 0.;  Fifth order expansion coefficient : fF*5! is the fifth derivative at x. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TSplinePoly; Double_t fX = 0.;  Abscissa. ;  ; Double_t fY = 0.;  Constant term. ;  . #include <TSpline.h>. Inheritance diagram for TSplinePoly5:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSplinePoly5() [1/3]. TSplinePoly5::TSplinePoly5 ; (; ). inline . Definition at line 149 of file TSpline.h. ◆ TSplinePoly5() [2/3]. TSplinePoly5::TSplinePoly5 ; (; Double_t ; x, . Double_t ; y, . Double_t ; b, . Double_t ; c, . Double_t ; d, . Double_t ; e, . Double_t ; f . ). inline . Definition at line 150 of file TSpline.h. ◆ TSplinePoly5() [3/3]. TSplinePoly5::TSplinePoly5 ; (; TSplinePoly5 const & ; other). inline . Definition at line 154 of file TSpline.h. Member Function Documentation. ◆ B(). Double",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSplinePoly5.html:11220,inherit,inherited,11220,doc/master/classTSplinePoly5.html,https://root.cern,https://root.cern/doc/master/classTSplinePoly5.html,2,['inherit'],['inherited']
Modifiability,". ;  ; Double_t fMinimum;  Minimum value if leaf range is specified. ;  ; Double_t ** fPointer;  ! Address of pointer to data buffer ;  ; Double_t * fValue;  ! Pointer to data buffer ;  ;  Protected Attributes inherited from TLeaf; TBranch * fBranch;  ! Pointer to supporting branch (we do not own the branch) ;  ; bool fIsRange;  (=true if leaf has a range, false otherwise). This is equivalent to being a 'leafcount'. For a TLeafElement the range information is actually store in the TBranchElement. ;  ; bool fIsUnsigned;  (=true if unsigned, false otherwise) ;  ; TLeaf * fLeafCount;  Pointer to Leaf count if variable length (we do not own the counter) ;  ; LeafCountValues * fLeafCountValues;  ! Cache of collection/array sizes ;  ; Int_t fLen;  Number of fixed length elements in the leaf's data. ;  ; Int_t fLenType;  Number of bytes for this data type. ;  ; Int_t fNdata;  ! Number of elements in fAddress data buffer. ;  ; Int_t fOffset;  Offset in ClonesArray object (if one) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TLeaf; enum class  DeserializeType { ;   kInvalid = 0; , kExternal; , kDestructive = kExternal; , kInPlace; , ;   kZeroCopy. };  ; enum  EStatusBits { kIndirectAddress = (1ULL << ( 11 )); , kNewValue = (1ULL << ( 12 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Pr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafD.html:14907,inherit,inherited,14907,doc/master/classTLeafD.html,https://root.cern,https://root.cern/doc/master/classTLeafD.html,1,['inherit'],['inherited']
Modifiability,". ;  ; Double_t fValEnd = 0.;  End value of first or second derivative. ;  ;  Protected Attributes inherited from TSpline; Double_t fDelta = -1.;  Distance between equidistant knots. ;  ; TGraph * fGraph = nullptr;  Graph for drawing the knots. ;  ; TH1F * fHistogram = nullptr;  Temporary histogram. ;  ; Bool_t fKstep = kFALSE;  True of equidistant knots. ;  ; Int_t fNp = 0;  Number of knots. ;  ; Int_t fNpx = 100;  Number of points used for graphical representation. ;  ; Double_t fXmax = 0.;  Maximum value of abscissa. ;  ; Double_t fXmin = 0.;  Minimum value of abscissa. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  ;  Protected Attributes inherited from TAttMarker; Color_t fMarkerColor;  Marker color. ;  ; Size_t fMarkerSize;  Marker size. ;  ; Style_t fMarkerStyle;  Marker style. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TSpline.h>. Inheritance diagram for TSpline3:. This browser is not able to show SVG: try Firefox, Chro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpline3.html:20059,inherit,inherited,20059,doc/master/classTSpline3.html,https://root.cern,https://root.cern/doc/master/classTSpline3.html,1,['inherit'],['inherited']
Modifiability,". ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPlot.html:14675,inherit,inherited,14675,doc/master/classRooPlot.html,https://root.cern,https://root.cern/doc/master/classRooPlot.html,1,['inherit'],['inherited']
Modifiability,". ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TObject. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gRO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCurve.html:19605,inherit,inherited,19605,doc/master/classRooCurve.html,https://root.cern,https://root.cern/doc/master/classRooCurve.html,38,['inherit'],['inherited']
Modifiability,". ;  ; Int_t Write (const char *name, Int_t opt, Int_t bufs) const override;  Write this object to the current directory. ;  ; Int_t Write (const char *name, Int_t opt, Int_t bufs) override;  Write this object to the current directory. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Attributes; static const char * fgDoubleFmt = ""%.14e"";  ! printf argument for doubles, either ""%f"" or ""%e"" or ""%10f"" and so on ;  ; static const char * fgFloatFmt = ""%e"";  ! printf argument for floats, either ""%f"" or ""%e"" or ""%10f"" and so on ;  ;  Static Protected Attributes inherited from TBufferIO; static Int_t fgMapSize = kMapSize;  Default map size for all TBuffer objects. ;  . Additional Inherited Members;  Public Types inherited from TBufferIO; enum  { kMapSize = 503; };  ; enum  EStatusBits { ;   kNotDecompressed = (1ULL << ( 15 )); , kTextBasedStreaming = (1ULL << ( 18 )); , kUser1 = (1ULL << ( 21 )); , kUser2 = (1ULL << ( 22 )); , ;   kUser3 = (1ULL << ( 23 )). };  ;  Public Types inherited from TBuffer; enum  { kInitialSize = 1024; , kMinimalSize = 128; };  ; enum  EMode { kRead = 0; , kWrite = 1; };  ; enum  EStatusBits { kIsOwner = (1ULL << ( 16 )); , kCannotHandleMemberWiseStreaming = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); ,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferText.html:30931,inherit,inherited,30931,doc/master/classTBufferText.html,https://root.cern,https://root.cern/doc/master/classTBufferText.html,1,['inherit'],['inherited']
Modifiability,". ;  ; Int_t getAnalyticalIntegralWN (RooArgSet &allVars, RooArgSet &analVars, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Advertise capability to perform (analytical) integrals internally. ;  ; double getCoefNorm (Int_t coefIdx, const RooArgSet &nset, const char *rangeName) const;  ; double getCoefNorm (Int_t coefIdx, const RooArgSet *nset=nullptr, const char *rangeName=nullptr) const;  ; bool isDirectGenSafe (const RooAbsArg &arg) const override;  Return true if it is safe to generate the convolution observable from the internal generator (this is the case if the chosen resolution model is the truth model) ;  ; void printMultiline (std::ostream &stream, Int_t contents, bool verbose=false, TString indent="""") const override;  Print info about this object to the specified stream. ;  ; void setCacheAndTrackHints (RooArgSet &) override;  Label OK'ed components with cache-and-track. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsPdf;  RooAbsPdf ();  Default constructor. ;  ;  RooAbsPdf (const char *name, const char *title, double minVal, double maxVal);  Constructor with name, title, and plot range. ;  ;  RooAbsPdf (const char *name, const char *title=nullptr);  Constructor with name and title only. ;  ;  ~RooAbsPdf () override;  Destructor. ;  ; double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Analytical integral with normalization (see RooAbsReal::analyticalIntegralWN() for further information). ;  ; virtual RooAbsGenContext * autoGenContext (const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool verbose=false, bool autoBinned=true, const char *binnedTag="""") const;  ; virtual RooAbsGenContext * binnedGenContext (const RooArgSet &vars, bool verbose=false) const;  Return a binned generator context. ;  ; bool canBeExtended () const;  If true, PDF can provide extend",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBMixDecay.html:6981,inherit,inherited,6981,doc/master/classRooBMixDecay.html,https://root.cern,https://root.cern/doc/master/classRooBMixDecay.html,5,['inherit'],['inherited']
Modifiability,". ;  ; Long64_t Finalize (const char *queryref, Bool_t force=kFALSE);  Finalize query with reference ref. ;  ; Long64_t Finalize (Int_t query=-1, Bool_t force=kFALSE);  Finalize the qry-th query in fQueries. ;  ; TList * FindDataSets (const char *searchString, const char *optStr="""");  Find datasets, returns in a TList all found datasets. ;  ; Long64_t GetBytesRead () const;  ; Int_t GetClientProtocol () const;  ; const char * GetConfDir () const;  ; const char * GetConfFile () const;  ; Float_t GetCpuTime () const;  ; const char * GetDataPoolUrl () const;  ; virtual TFileCollection * GetDataSet (const char *dataset, const char *optStr="""");  Get a list of TFileInfo objects describing the files of the specified dataset. ;  ; TMap * GetDataSetQuota (const char *optStr="""");  returns a map of the quotas of all groups ;  ; virtual TMap * GetDataSets (const char *uri="""", const char *optStr="""");  Lists all datasets that match given uri. ;  ; TString Getenv (const char *env, const char *ord=""0"");  Get value of environment variable 'env' on node 'ord'. ;  ; TList * GetFeedbackList () const;  Return feedback list. ;  ; const char * GetGroup () const;  ; const char * GetImage () const;  ; TList * GetInputList ();  Get input list. ;  ; TMacro * GetLastLog ();  Fill a TMacro with the log lines since the last reading (fLogFileR) Return (TMacro *)0 if no line was logged. ;  ; TList * GetListOfEnabledPackages ();  Get from the master the list of names of the packages enabled. ;  ; TList * GetListOfPackages ();  Get from the master the list of names of the packages available. ;  ; virtual TList * GetListOfQueries (Option_t *opt="""");  Ask the master for the list of queries. ;  ; TList * GetListOfSlaveInfos ();  Returns list of TSlaveInfo's. In case of error return 0. ;  ; TList * GetLoadedMacros () const;  ; void GetLog (Int_t start=-1, Int_t end=-1);  Ask for remote logs in the range [start, end]. ;  ; Int_t GetLogLevel () const;  ; TMacro * GetMacroLog ();  ; TProofMgr * GetManager ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProof.html:8637,variab,variable,8637,doc/master/classTProof.html,https://root.cern,https://root.cern/doc/master/classTProof.html,3,['variab'],['variable']
Modifiability,". ;  ; Long64_t fMinimum;  Minimum value if leaf range is specified. ;  ; Long64_t ** fPointer;  ! Address of pointer to data buffer ;  ; Long64_t * fValue;  ! Pointer to data buffer ;  ;  Protected Attributes inherited from TLeaf; TBranch * fBranch;  ! Pointer to supporting branch (we do not own the branch) ;  ; bool fIsRange;  (=true if leaf has a range, false otherwise). This is equivalent to being a 'leafcount'. For a TLeafElement the range information is actually store in the TBranchElement. ;  ; bool fIsUnsigned;  (=true if unsigned, false otherwise) ;  ; TLeaf * fLeafCount;  Pointer to Leaf count if variable length (we do not own the counter) ;  ; LeafCountValues * fLeafCountValues;  ! Cache of collection/array sizes ;  ; Int_t fLen;  Number of fixed length elements in the leaf's data. ;  ; Int_t fLenType;  Number of bytes for this data type. ;  ; Int_t fNdata;  ! Number of elements in fAddress data buffer. ;  ; Int_t fOffset;  Offset in ClonesArray object (if one) ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TLeaf; enum class  DeserializeType { ;   kInvalid = 0; , kExternal; , kDestructive = kExternal; , kInPlace; , ;   kZeroCopy. };  ; enum  EStatusBits { kIndirectAddress = (1ULL << ( 11 )); , kNewValue = (1ULL << ( 12 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Pr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafL.html:15232,inherit,inherited,15232,doc/master/classTLeafL.html,https://root.cern,https://root.cern/doc/master/classTLeafL.html,1,['inherit'],['inherited']
Modifiability,". ;  ; RInterface< RDFDetail::RLoopManager, DS_t > Vary (std::string_view colName, F &&expression, const ColumnNames_t &inputColumns, std::size_t nVariations, std::string_view variationName="""");  Register systematic variations for a single existing column using auto-generated variation tags. ;  ; RInterface< RDFDetail::RLoopManager, DS_t > Vary (std::string_view colName, std::string_view expression, const std::vector< std::string > &variationTags, std::string_view variationName="""");  Register systematic variations for a single existing column using custom variation tags. ;  ; RInterface< RDFDetail::RLoopManager, DS_t > Vary (std::string_view colName, std::string_view expression, std::size_t nVariations, std::string_view variationName="""");  Register systematic variations for a single existing column using auto-generated variation tags. ;  ;  Public Member Functions inherited from ROOT::RDF::RInterfaceBase;  RInterfaceBase (RDFDetail::RLoopManager &lm, const RDFInternal::RColumnRegister &colRegister);  ;  RInterfaceBase (std::shared_ptr< RDFDetail::RLoopManager > lm);  ; RDFDescription Describe ();  Return information about the dataframe. ;  ; ColumnNames_t GetColumnNames ();  Returns the names of the available columns. ;  ; std::string GetColumnType (std::string_view column);  Return the type of a given column as a string. ;  ; ColumnNames_t GetDefinedColumnNames ();  Returns the names of the defined columns. ;  ; unsigned int GetNFiles ();  ; unsigned int GetNRuns () const;  Gets the number of event loops run. ;  ; unsigned int GetNSlots () const;  Gets the number of data processing slots. ;  ; RVariationsDescription GetVariations () const;  Return a descriptor for the systematic variations registered in this branch of the computation graph. ;  ; bool HasColumn (std::string_view columnName);  Checks if a column is present in the dataset. ;  . Additional Inherited Members;  Protected Member Functions inherited from ROOT::RDF::RInterface< RDFDetail::RLoopManager >;  R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RDataFrame.html:102178,inherit,inherited,102178,doc/v632/classROOT_1_1RDataFrame.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RDataFrame.html,2,['inherit'],['inherited']
Modifiability,". ;  ; RooArgSet _vars;  Dimensions of this data set. ;  ; StorageType storageType;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  ;  Protected Attributes inherited from RooDirItem; TDirectory * _dir {nullptr};  ! Associated directory ;  . Private Member Functions; void loadValuesFromSlices (RooCategory &indexCat, std::map< std::string, RooAbsData * > const &slices, const char *rangeName, RooFormulaVar const *cutVar, const char *cutSpec);  . Private Attributes; bool _doWeightErrorCheck {true};  ! When adding events with weights, check that weights can actually be stored. ;  ; unsigned short _errorMsgCount {0};  ! Counter to silence error messages when filling dataset. ;  ; std::unique_ptr< std::vector< double > > _sumW2Buffer;  ! Buffer for sumW2 in case a batch of values is requested. ;  . Friends; class RooProdGenContext;  . Additional Inherited Members;  Public Types inherited from RooAbsData; using CategorySpans = std::map< RooFit::Detail::DataKey, std::span< const RooAbsCategory::value_type > >;  ; enum  ErrorType { ;   Poisson; , SumW2; , None; , Auto; , ;   Expected. };  ; using RealSpans = std::map< RooFit::Detail::DataKey, std::span< const double > >;  ; enum  StorageType { Tree; , Vector; , Composite; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDataSet.html:35107,inherit,inherited,35107,doc/master/classRooDataSet.html,https://root.cern,https://root.cern/doc/master/classRooDataSet.html,1,['inherit'],['inherited']
Modifiability,". ;  ; RooRealProxy _x;  Observable. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::size_t _dataToken = std::numeric_limits<std::size_t>::max();  In which workspace do I live, if any. ;  ; bool _deleteWatch = false;  ; RooExpensiveObjectCache * _eocache {nullptr};  Prohibit server redirects – Debugging tool. ;  ; bool _fast = false;  ; bool _isConstant = false;  De-duplicated name pointer. This will be equal for all objects with the same name. ;  ; bool _localNoInhibitDirty = false;  Cached isConstant status. ;  ; RooWorkspace * _myws = nullptr;  Prevent 'AlwaysDirty' mode for this node. ;  ; const TNamed * _namePtr = nullptr;  Pointer to global cache manager for any expensive components created by this object. ;  ; OperMode _operMode = Auto;  ; RooArgSet * _ownedComponents = nullptr;  ; bool _prohibitServerRedirect = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFirstMoment.html:56494,inherit,inherited,56494,doc/master/classRooFirstMoment.html,https://root.cern,https://root.cern/doc/master/classRooFirstMoment.html,4,['inherit'],['inherited']
Modifiability,". ;  ; Short_t fCycle;  Cycle number. ;  ; TDatime fDatime;  Date/Time of insertion in file. ;  ; Short_t fKeylen;  Number of bytes for the key itself. ;  ; Int_t fLeft;  Number of bytes left in current segment. ;  ; TDirectory * fMotherDir;  !pointer to mother directory ;  ; Int_t fNbytes;  Number of bytes for the object on file. ;  ; Int_t fObjlen;  Length of uncompressed object in bytes. ;  ; UShort_t fPidOffset;  !Offset to be added to the pid index in this key/buffer. This is actually saved in the high bits of fSeekPdir ;  ; Long64_t fSeekKey;  Location of object on file. ;  ; Long64_t fSeekPdir;  Location of parent directory on file. ;  ; Int_t fVersion;  Key version identifier. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TKeySQL (const TKeySQL &)=delete;  ; TKeySQL & operator= (const TKeySQL &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TKeySQL.h>. Inheritance diagram for TKeySQL:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TKeySQL() [1/5]. TKeySQL::TKeySQL ; (; const TKeySQL & ; ). privatedelete . ◆ TKeySQL() [2/5]. TKeySQL::TKeySQL ; (; ). inlineprotected . Definition at line ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTKeySQL.html:17097,inherit,inherited,17097,doc/master/classTKeySQL.html,https://root.cern,https://root.cern/doc/master/classTKeySQL.html,1,['inherit'],['inherited']
Modifiability,". ;  ; Short_t fCycle;  Cycle number. ;  ; TDatime fDatime;  Date/Time of insertion in file. ;  ; Short_t fKeylen;  Number of bytes for the key itself. ;  ; Int_t fLeft;  Number of bytes left in current segment. ;  ; TDirectory * fMotherDir;  !pointer to mother directory ;  ; Int_t fNbytes;  Number of bytes for the object on file. ;  ; Int_t fObjlen;  Length of uncompressed object in bytes. ;  ; UShort_t fPidOffset;  !Offset to be added to the pid index in this key/buffer. This is actually saved in the high bits of fSeekPdir ;  ; Long64_t fSeekKey;  Location of object on file. ;  ; Long64_t fSeekPdir;  Location of parent directory on file. ;  ; Int_t fVersion;  Key version identifier. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Member Functions;  TKeyXML (const TKeyXML &)=delete;  ; TKeyXML & operator= (const TKeyXML &)=delete;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TKeyXML.h>. Inheritance diagram for TKeyXML:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TKeyXML() [1/5]. TKeyXML::TKeyXML ; (; const TKeyXML & ; ). privatedelete . ◆ TKeyXML() [2/5]. TKeyXML::TKeyXML ; (; ). inlineprotected . Definition at line ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTKeyXML.html:16954,inherit,inherited,16954,doc/master/classTKeyXML.html,https://root.cern,https://root.cern/doc/master/classTKeyXML.html,1,['inherit'],['inherited']
Modifiability,". ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  ;  Protected Attributes inherited from TAttFill; Color_t fFillColor;  Fill area color. ;  ; Style_t fFillStyle;  Fill area style. ;  . Private Member Functions;  TGeoVolumeAssembly (const TGeoVolumeAssembly &)=delete;  Mutex for concurrent operations. ;  ; TGeoVolumeAssembly & operator= (const TGeoVolumeAssembly &)=delete;  . Additional Inherited Members;  Public Types inherited from TGeoVolume; enum  EGeoVolumeTypes { ;   kVolumeReplicated = (1ULL << ( 14 )); , kVolumeSelected = (1ULL << ( 15 )); , kVolumeDiv = (1ULL << ( 16 )); , kVolumeOverlap = (1ULL << ( 17 )); , ;   kVolumeImportNodes = (1ULL << ( 18 )); , kVolumeMulti = (1ULL << ( 19 )); , kVoxelsXYZ = (1ULL << ( 20 )); , kVoxelsCyl = (1ULL << ( 21 )); , ;   kVolumeClone = (1ULL << ( 22 )); , kVolumeAdded = (1ULL << ( 23 )); , kVolumeOC = (1ULL << ( 21 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TGeoAtt; enum  { kBitMask = 0x00ffffff; };  ; enum  EGeoActivityAtt { kActOverride = (1ULL << ( 8 )); , kActNone = (1ULL << ( 9 )); , kActThis = (1ULL << ( 10 )); , kActDaughters = (1ULL << ( 11 )); };  ; enum  EGeoOptimizationAtt { kUseBoundingBox = (1ULL << ( 16 )); , kUseVoxels = (1ULL << ( 17 )); , kUseGsord = (1ULL << ( 18 )); };  ; enum  EGeoSavePrimitiveAtt { kSavePrimitiveAtt = (1ULL << ( 19 )); , kSaveNodesAtt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoVolumeAssembly.html:28624,inherit,inherited,28624,doc/master/classTGeoVolumeAssembly.html,https://root.cern,https://root.cern/doc/master/classTGeoVolumeAssembly.html,1,['inherit'],['inherited']
Modifiability,". ;  ; TGPicture * fImage;  Image or icon. ;  ; TGString * fLabel;  Text as shown in the cell. ;  ; GContext_t fNormGC;  graphics context used to draw the cell ;  ; Bool_t fReadOnly;  Cell readonly state. ;  ; UInt_t fRow;  Row this cell belongs to. ;  ; TGTable * fTable;  TGTable that a cell belongs to. ;  ; UInt_t fTHeight;  Label height. ;  ; TGToolTip * fTip;  Possible Tooltip. ;  ; Int_t fTMode;  Text justify mode. ;  ; UInt_t fTWidth;  Label width. ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEd",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTableHeader.html:27802,inherit,inherited,27802,doc/master/classTGTableHeader.html,https://root.cern,https://root.cern/doc/master/classTGTableHeader.html,1,['inherit'],['inherited']
Modifiability,". ;  ; TGPicture * fImage;  Image or icon. ;  ; TGString * fLabel;  Text as shown in the cell. ;  ; GContext_t fNormGC;  graphics context used to draw the cell ;  ; Bool_t fReadOnly;  Cell readonly state. ;  ; UInt_t fRow;  Row this cell belongs to. ;  ; TGTable * fTable;  TGTable that a cell belongs to. ;  ; UInt_t fTHeight;  Label height. ;  ; TGToolTip * fTip;  Possible Tooltip. ;  ; Int_t fTMode;  Text justify mode. ;  ; UInt_t fTWidth;  Label width. ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Static Protected Attributes; static const TGFont * fgDefaultFont = 0;  Default font. ;  ; static const TGGC * fgDefaultGC = 0;  Default graphics context. ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTableCell.html:25822,inherit,inherited,25822,doc/master/classTGTableCell.html,https://root.cern,https://root.cern/doc/master/classTGTableCell.html,1,['inherit'],['inherited']
Modifiability,". ;  ; TString _idxCatName;  Name of index category. ;  ; RooArgSet _idxCatSet;  Owner of index category components. ;  ; Int_t _numPdf;  Number of generated PDFs. ;  ; const RooSimultaneous * _pdf;  Original PDF. ;  ;  Protected Attributes inherited from RooAbsGenContext; UInt_t _expectedEvents;  Number of expected events from extended p.d.f. ;  ; RooAbsPdf::ExtendMode _extendMode;  Extended mode capabilities of p.d.f. ;  ; RooDataSet * _genData = nullptr;  ! Data being generated ;  ; bool _isValid;  Is context in valid state? ;  ; Int_t _nextProtoIndex;  Next prototype event to load according to LUT. ;  ; TString _normRange;  Normalization range of pdf. ;  ; std::vector< Int_t > _protoOrder;  LUT with traversal order of prototype data. ;  ; const RooDataSet * _prototype;  Pointer to prototype dataset. ;  ; RooArgSet _protoVars;  Prototype observables. ;  ; RooArgSet _theEvent;  Pointer to observable event being generated. ;  ; bool _verbose;  Verbose messaging? ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSimSplitGenContext.html:16098,inherit,inherited,16098,doc/master/classRooSimSplitGenContext.html,https://root.cern,https://root.cern/doc/master/classRooSimSplitGenContext.html,1,['inherit'],['inherited']
Modifiability,". ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Friends; class RooWorkspace;  . Additional Inherited Members;  Public Types inherited from TDirectoryFile; enum  EStatusBits { kCloseDirectory = (1ULL << ( 7 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TDirectory; using SharedGDirectory_t = std::shared_ptr< std::atomic< TDirectory * > >;  Pointer to a list of TContext object pointing to this TDirectory. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from TDirectory; static Bool_t Cd1 (const char *path);  Change current directory to ""path"". ;  ; static SharedGDirectory_t & GetSharedLocalCurrentDirectory ();  Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  ;  Static Protected Attributes inherited from TDirectory; static Bool_t fgAddDirectory = kTRUE;  MSVC doesn't support = ATOMIC_FLAG_INIT;. ;  . #include <RooWorkspace.h>. Inheritance diagram for RooWorkspace::WSDir:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ WSDir(). RooWorkspace::WSDir::WSDir ; (; const char * ; name, . const char * ; title, . RooWorkspace * ; w",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooWorkspace_1_1WSDir.html:23003,inherit,inherited,23003,doc/master/classRooWorkspace_1_1WSDir.html,https://root.cern,https://root.cern/doc/master/classRooWorkspace_1_1WSDir.html,1,['inherit'],['inherited']
Modifiability,". ;  ; TVectorD fSigmas;  vector of sigmas ;  ; Bool_t fStoreData;  Should we store input data? ;  ; Double_t fTrace;  Trace of covarience matrix. ;  ; TVectorD fUserData;  Vector of original data points. ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TPrincipal.h>. Inheritance diagram for TPrincipal:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TPrincipal() [1/3]. TPrincipal::TPrincipal ; (; const TPrincipal & ; pr). protected . Copy constructor. ; Definition at line 316 of file TPrincipal.cxx. ◆ TPrincipal() [2/3]. TPrincipal::TPrincipal ; (; ). Empty constructor. Do not use. ; Definition at line 229 of file TPrincipal.cxx. ◆ ~TPrincipal(). TPrincipal::~TPrincipal ; (; ). override . Destructor. ; Definition at line 361 of file TPrincipal.cxx. ◆ TPrincipal() [3/3]. TPrincipal::TPrincipal ; (; Long64_t ; nVariables, . Option_t * ; opt = ""ND"" . ). Constructor. ; Argument is number of variables in the sample of data Options are:; N Normalize the covariance matrix (default); D Store input data (default). The created object is named ""principal"" by default. ; Definition at line 253 of fil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPrincipal.html:21490,inherit,inherited,21490,doc/master/classTPrincipal.html,https://root.cern,https://root.cern/doc/master/classTPrincipal.html,1,['inherit'],['inherited']
Modifiability,". ;  ; static Bool_t Connect (TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Protected Types; enum  { kDontCallClose = (1ULL << ( 14 )); };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; TString GetMdiHintsString () const;  Returns a MDI option string - used in SavePrimitive(). ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * Get",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMdiFrame.html:25443,inherit,inherited,25443,doc/master/classTGMdiFrame.html,https://root.cern,https://root.cern/doc/master/classTGMdiFrame.html,1,['inherit'],['inherited']
Modifiability,". ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions;  TGeoTorus (const TGeoTorus &)=delete;  ; TGeoTorus & operator= (const TGeoTorus &)=delete;  ;  Protected Member Functions inherited from TGeoBBox;  TGeoBBox (const TGeoBBox &)=delete;  ; void FillBuffer3D (TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) const override;  Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ;  ; TGeoBBox & operator= (const TGeoBBox &)=delete;  ;  Protected Member Functions inherited from TGeoShape; Int_t GetBasicColor () const;  Get the basic color (0-7). ;  ; void SetOnBoundary (Bool_t);  ; void TransformPoints (Double_t *points, UInt_t NbPoints) const;  Tranform a set of points (LocalToMaster) ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t fDphi;  ; Double_t fPhi1;  ; Double_t fR;  ; Double_t fRmax;  ; Double_t fRmin;  ;  Protected Attributes inherited from TGeoBBox; Double_t fDX;  ; Double_t fDY;  ; Double_t fDZ;  ; Double_t fOrigin [3];  ;  Protected Attributes inherited from TGeoShape; UInt_t fShapeBits;  ; Int_t fShapeId;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TGeoShape; enum  EShapeType { ;   kBitMask32 = 0xffffffff; , kGeoNoShape = 0; , kGeoBad = (1ULL << ( 0 )); , kGeoRSeg = (1ULL << ( 1 )); , ;   kGeoPhiSeg = (1ULL << ( 2 )); , kGeoThetaSeg = (1ULL << ( 3 )); , kGeoVisX = (1ULL << ( 4 )); , kGeoVisY = (1ULL << ( 5 )); , ;   kGeoVisZ = (1ULL << ( 6 )); , kGeoRunTimeShape = (1ULL << ( 7 )); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoTorus.html:19884,inherit,inherited,19884,doc/master/classTGeoTorus.html,https://root.cern,https://root.cern/doc/master/classTGeoTorus.html,1,['inherit'],['inherited']
Modifiability,". ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TMVA::Option< T >; virtual Bool_t IsPreDefinedValLocal (const T &) const;  ; Bool_t IsPreDefinedValLocal (const TString &val) const;  ; virtual void SetValueLocal (const TString &val, Int_t i=-1);  ; void SetValueLocal (const TString &val, Int_t);  ; void SetValueLocal (const TString &val, Int_t);  ; T & Value (Int_t=-1);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TMVA::OptionBase; static MsgLogger & Log ();  ;  Protected Attributes inherited from TMVA::Option< T >; std::vector< T > fPreDefs;  ; T * fRefPtr;  . #include <TMVA/Option.h>. Inheritance diagram for TMVA::Option< T * >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ Option(). template<typename T > . TMVA::Option< T * >::Option ; (; T *& ; ref, . Int_t ; size, . const TString & ; name, . const TString & ; desc . ). inline . Definition at line 135 of file Option.h. ◆ ~Option(). template<typename T > . virtual TMVA::Option< T * >::~Option ; (; ). inlinevirtual . Reimplemented from TMVA::Option< T >.; Definition at line 137 of file Option.h. Member Function Documentation. ◆ GetArraySize(). template<typename T > . virtual Int_t TMVA::Option< T * >::GetArraySize ; (; ); const. inlinevirtual . Reimplemented from TMVA::Option< T >.; Definition at line 146 of file Option.h. ◆ GetValue(). template<typename T > . TString TMVA::Option< T * ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Option_3_01T_01_5_01_4.html:11521,inherit,inherited,11521,doc/master/classTMVA_1_1Option_3_01T_01_5_01_4.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Option_3_01T_01_5_01_4.html,2,['inherit'],['inherited']
Modifiability,". ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Attributes; double _range [2];  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inhe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRangeBinning.html:15229,inherit,inherited,15229,doc/master/classRooRangeBinning.html,https://root.cern,https://root.cern/doc/master/classRooRangeBinning.html,1,['inherit'],['inherited']
Modifiability,". ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Member Functions; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ;  Protected Member Functions inherited from RooAbsReal; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Attach object to a branch of given TTree. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache. ;  ; RooFit::OwningPtr< RooAbsReal > createIntObj (const RooArgSet &iset, const RooArgSet *nset, const RooNumIntConfig *cfg, const char *rangeName) const;  Internal utility function for createIntegral() that creates the actual integral object. ;  ; void fillTreeBranch (TTree &t) override;  Fill the tree branch that associated with this object with its current value. ;  ; void findInnerMostIntegration (const RooArgSet &allObs, RooArgSet &innerObs, const char *rangeName) const;  Utility function for createIntObj() that aids in the construct of recursive integrals over functions with multiple observables with parameterized ranges. ;  ; TString integralNameSuffix (const RooArgSet &iset, const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCFunction1Binding.html:48259,inherit,inherited,48259,doc/master/classRooCFunction1Binding.html,https://root.cern,https://root.cern/doc/master/classRooCFunction1Binding.html,13,['inherit'],['inherited']
Modifiability,". ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TLine; Double_t fX1 {0};  X of 1st point. ;  ; Double_t fX2 {0};  X of 2nd point. ;  ; Double_t fY1 {0};  Y of 1st point. ;  ; Double_t fY2 {0};  Y of 2nd point. ;  ;  Protected Attributes inherited from TAttLine; Color_t fLineColor;  Line color. ;  ; Style_t fLineStyle;  Line style. ;  ; Width_t fLineWidth;  Line width. ;  . #include <TASPaletteEditor.h>. Inheritance diagram for TASPaletteEditor::LimitLine:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ LimitLine(). TASPaletteEditor::LimitLine::LimitLine ; (; Coord_t ; x, . Coord_t ; y1, . Coord_t ; y2, . TASPaletteEditor * ; gui . ). The blue limit line in the pixel value histogram. ; Definition at line 929 of file TASPaletteEditor.cxx. Member Function Documentation. ◆ ExecuteEvent(). void TASPaletteEditor::LimitLine::ExecuteEvent ; (; Int_t ; event, . Int_t ; px, . Int_t ; py . ). overrideprotectedvirtual . Execute action corresponding to an event at (px,py). ; This method must be overridden if an object can react to graphics events. ; Reimplemented from TObject.; Definition at line 951 of file TASPaletteEditor.cxx. ◆ Paint(). void TASPalette",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTASPaletteEditor_1_1LimitLine.html:15003,inherit,inherited,15003,doc/master/classTASPaletteEditor_1_1LimitLine.html,https://root.cern,https://root.cern/doc/master/classTASPaletteEditor_1_1LimitLine.html,1,['inherit'],['inherited']
Modifiability,". ;  ; static const char * DeclFileName ();  ; static Bool_t Disconnect (const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr);  Disconnects ""class signal"". ;  ; static Bool_t Disconnect (TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal in object sender from slot_method in object receiver. ;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHorizontal3DLine.html:21818,inherit,inherited,21818,doc/master/classTGHorizontal3DLine.html,https://root.cern,https://root.cern/doc/master/classTGHorizontal3DLine.html,4,['inherit'],['inherited']
Modifiability,". ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void SortValues () const;  internal function to sort values ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Attributes; std::vector< double > fSampleWeights;  vector of weights for the samples ;  ; std::vector< double > fSamplingDist;  vector of points for the sampling distribution ;  ; std::vector< double > fSumW;  ! Cached vector with sum of the weight used to compute integral ;  ; std::vector< double > fSumW2;  ! Cached vector with sum of the weight used to compute integral error ;  ; TString fVarName;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <RooStats/SamplingDistribution.h>. Inheritance diagram for RooStats::SamplingDistribution:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ SamplingDistribution() [1/5]. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1SamplingDistribution.html:13192,inherit,inherited,13192,doc/master/classRooStats_1_1SamplingDistribution.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1SamplingDistribution.html,1,['inherit'],['inherited']
Modifiability,". ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TEveProjectable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttBBox; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions; virtual Bool_t ShouldImport (TEveElement *el);  Returns true if element el should be imported. ;  ; virtual void UpdateDependentElsAndScenes (TEveElement *root);  Update dependent elements' bounding box and mark scenes containing element root or its children as requiring a repaint. ;  ;  Protected Member Functions inherited from TEveElement; virtual void AnnihilateRecursively ();  Protected member function called from TEveElement::Annihilate(). ;  ; virtual void PreDeleteElement ();  Externally assigned and controlled user data. ;  ; virtual void RemoveElementsInternal ();  Remove all elements. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TAttBBox;  TAttBBox (const TAttBBox &tab);  ; void AssertBBoxExtents (Float_t epsilon=0.005);  Assert extents of all sides of the bounding-box are at least epsilon. ;  ; void BBoxCheckPoint (const Float_t *p);  ; void BBoxCheckPoint (Float_t x, Float_t y, Float_t z);  ; void BBoxClear ();  Remove BBox information. ;  ; void BBoxInit (Float_t infinity=1e6);  Dynamic Float_t[6] X(min,max), Y(min,max), Z(min,max) ;  ; void BBoxZero (Float_t epsilon=0, Float_t x=0, Float_t y=0, Float_t z=0);  Create cub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveProjectionManager.html:31656,inherit,inherited,31656,doc/master/classTEveProjectionManager.html,https://root.cern,https://root.cern/doc/master/classTEveProjectionManager.html,1,['inherit'],['inherited']
Modifiability,". ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TGeoBoolNode; enum  EGeoBoolType { kGeoUnion; , kGeoIntersection; , kGeoSubtraction; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoBoolNode; void AssignPoints (Int_t npoints, Double_t *points);  Set fPoints array. ;  ; Bool_t MakeBranch (const char *expr, Bool_t left);  Mutex for thread data access. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoBoolNode; TGeoShape * fLeft {nullptr};  ; TGeoMatrix * fLeftMat {nullptr};  ; std::mutex fMutex;  Size for the navigation data array. ;  ; Int_t fNpoints {0};  ; Double_t * fPoints {nullptr};  number of points on the mesh ;  ; TGeoShape * fRight {nullptr};  ; TGeoMatrix * fRightMat {nullptr};  ; std::vector< ThreadData_t * > fThreadData;  array of mesh points ;  ; Int_t fThreadSize {0};  Navigation data per thread. ;  . #include <TGeoBoolNode.h>. Inheritance diagram for TGeoIntersection:. This browser is not able to show SVG: try Firefox",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoIntersection.html:12867,inherit,inherited,12867,doc/master/classTGeoIntersection.html,https://root.cern,https://root.cern/doc/master/classTGeoIntersection.html,2,['inherit'],['inherited']
Modifiability,". ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TGeoBoolNode; enum  EGeoBoolType { kGeoUnion; , kGeoIntersection; , kGeoSubtraction; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoBoolNode; void AssignPoints (Int_t npoints, Double_t *points);  Set fPoints array. ;  ; Bool_t MakeBranch (const char *expr, Bool_t left);  Mutex for thread data access. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoBoolNode; TGeoShape * fLeft {nullptr};  ; TGeoMatrix * fLeftMat {nullptr};  ; std::mutex fMutex;  Size for the navigation data array. ;  ; Int_t fNpoints {0};  ; Double_t * fPoints {nullptr};  number of points on the mesh ;  ; TGeoShape * fRight {nullptr};  ; TGeoMatrix * fRightMat {nullptr};  ; std::vector< ThreadData_t * > fThreadData;  array of mesh points ;  ; Int_t fThreadSize {0};  Navigation data per thread. ;  . #include <TGeoBoolNode.h>. Inheritance diagram for TGeoSubtraction:. This browser is not able to show SVG: try Firefox,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoSubtraction.html:12858,inherit,inherited,12858,doc/master/classTGeoSubtraction.html,https://root.cern,https://root.cern/doc/master/classTGeoSubtraction.html,2,['inherit'],['inherited']
Modifiability,". ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Additional Inherited Members;  Public Types inherited from TGeoBoolNode; enum  EGeoBoolType { kGeoUnion; , kGeoIntersection; , kGeoSubtraction; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGeoBoolNode; void AssignPoints (Int_t npoints, Double_t *points);  Set fPoints array. ;  ; Bool_t MakeBranch (const char *expr, Bool_t left);  Mutex for thread data access. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TGeoBoolNode; TGeoShape * fLeft {nullptr};  ; TGeoMatrix * fLeftMat {nullptr};  ; std::mutex fMutex;  Size for the navigation data array. ;  ; Int_t fNpoints {0};  ; Double_t * fPoints {nullptr};  number of points on the mesh ;  ; TGeoShape * fRight {nullptr};  ; TGeoMatrix * fRightMat {nullptr};  ; std::vector< ThreadData_t * > fThreadData;  array of mesh points ;  ; Int_t fThreadSize {0};  Navigation data per thread. ;  . #include <TGeoBoolNode.h>. Inheritance diagram for TGeoUnion:. This browser is not able to show SVG: try Firefox, Chrom",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoUnion.html:12809,inherit,inherited,12809,doc/master/classTGeoUnion.html,https://root.cern,https://root.cern/doc/master/classTGeoUnion.html,2,['inherit'],['inherited']
Modifiability,". ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Double_t * fCoords;  [fDim] Coordinates ;  ; Int_t fDim;  Dimension. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TFoamVect.h>. Inheritance diagram for TFoamVect:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFoamVect() [1/3]. TFoamVect::TFoamVect ; (; ). Default constructor for streamer. ; Definition at line 28 of file TFoamVect.cxx. ◆ TFoamVect() [2/3]. TFoamVect::TFoamVect ; (; Int_t ; n). User constructor creating n-dimensional vector and allocating dynamically array of components. ; Definition at line 38 of file TFoamVect.cxx. ◆ TFoamVect() [3/3]. TFoamVect::TFoamVect ; (; const TFoamVect & ; Vect). Copy constructor. ; Definition at line 57 of file TFoamVect.cxx. ◆ ~TFoamVect(). TFoamVect::~TFoamVect ; (; ). override . Destructor. ; Definition at line 76 of file TFoamVect.cxx. Member Function Documentation. ◆ Class(). static T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFoamVect.html:11074,inherit,inherited,11074,doc/master/classTFoamVect.html,https://root.cern,https://root.cern/doc/master/classTFoamVect.html,2,['inherit'],['inherited']
Modifiability,". ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Private Attributes; Double_t * fCoords;  [fDim] Coordinates ;  ; Int_t fDim;  Dimension. ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMVA/PDEFoamVect.h>. Inheritance diagram for TMVA::PDEFoamVect:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ PDEFoamVect() [1/3]. TMVA::PDEFoamVect::PDEFoamVect ; (; ). Constructor. ; Default constructor for streamer. ; Definition at line 50 of file PDEFoamVect.cxx. ◆ PDEFoamVect() [2/3]. TMVA::PDEFoamVect::PDEFoamVect ; (; Int_t ; n). USER Constructor. ; User constructor creating n-dimensional vector and allocating dynamically array of components. ; Definition at line 61 of file PDEFoamVect.cxx. ◆ PDEFoamVect() [3/3]. TMVA::PDEFoamVect::PDEFoamVect ; (; const PDEFoamVect & ; vect). Copy constructor. ; Definition at line 75 of file PDEFoamVect.cxx. ◆ ~PDEFoamVect(). TMVA::PDEFoamVect::~PDEFoamVect ; (; ). virtual . Dest",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDEFoamVect.html:10877,inherit,inherited,10877,doc/master/classTMVA_1_1PDEFoamVect.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDEFoamVect.html,2,['inherit'],['inherited']
Modifiability,". ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Types; enum  { kSizeMax = 25; };  ; enum  { kWorkMax = 100; };  ; enum  EMatrixStatusBits { kStatus = (1ULL << ( 14 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Static Protected Member Functions; static void DoubleLexSort (Int_t n, Int_t *first, Int_t *second, Element *data);  default kTRUE, when Use array kFALSE ;  ; static void IndexedLexSort (Int_t n, Int_t *first, Int_t swapFirst, Int_t *second, Int_t swapSecond, Int_t *index);  Lexical sort on array data using indices first and second. ;  . Protected Attributes; Int_t fColLwb;  ; Bool_t fIsOwner;  ; Int_t fNcols;  ; Int_t fNelems;  ; Int_t fNrowIndex;  ; Int_t fNrows;  ; Int_t fRowLwb;  ; Element fTol;  . Private Member Functions; Element * GetElements ();  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMatrixTBase.h>. Inheritance diagram for TMatrixTBase< Element >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. tem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMatrixTBase.html:14661,inherit,inherited,14661,doc/master/classTMatrixTBase.html,https://root.cern,https://root.cern/doc/master/classTMatrixTBase.html,1,['inherit'],['inherited']
Modifiability,". ;  ; virtual Bool_t SendSelector (const char *selector_file);  Send the selector file(s) to master or worker nodes. ;  ; void SetLastMergingMsg (TObject *obj);  Set the message to be notified in case of exception. ;  ; void SetSelectorDataMembersFromOutputList ();  Set the selector's data members: find the mapping of data members to otuput list entries in the output list and apply it. ;  ; void StopFeedback () override;  Stop reporting of feedback objects. ;  ;  Protected Member Functions inherited from TProofPlayer; Int_t AssertSelector (const char *selector_file);  Make sure that a valid selector object Return -1 in case of problems, 0 otherwise. ;  ; Bool_t CheckMemUsage (Long64_t &mfreq, Bool_t &w80r, Bool_t &w80v, TString &wmsg);  Check the memory usage, if requested. ;  ; virtual Int_t DrawCanvas (TObject *obj);  Draw the object if it is a canvas. ;  ; void * GetSender () override;  ; void MapOutputListToDataMembers () const;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Private Attributes; Bool_t fReturnFeedback;  ; TArrayI fSlaveActW;  ; TArrayL64 fSlaveBytesRead;  ; TArrayF fSlaveEffS;  ; TArrayF fSlaveEvtRti;  ; TArrayF fSlaveInitTime;  ; TArrayF fSlaveMBRti;  ; TArrayF fSlaveProcTime;  ; TArrayL64 fSlaveProgress;  ; TList fSlaves;  ; TArrayL64 fSlaveTotals;  ; TArrayI fSlaveTotS;  . Additional Inherited Members;  Public Types inherited from TProofPlayer; enum  EStatusBits { kDispatchOneEvent = (1ULL << ( 15 )); , kIsProcessing = (1ULL << ( 16 )); , kMaxProcTimeReached = (1ULL << ( 17 )); , kMaxProcTimeExtended = (1ULL << ( 18 )); };  ;  Public Types inherited from TVirtualProofPlayer; enum  EExitStatus { kFinished; , kStopped; , kAborted; };  ; enum  EStatusBits { kIsSubmerger = (1ULL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofPlayerSuperMaster.html:21552,inherit,inherited,21552,doc/master/classTProofPlayerSuperMaster.html,https://root.cern,https://root.cern/doc/master/classTProofPlayerSuperMaster.html,1,['inherit'],['inherited']
Modifiability,. ;  ; virtual Int_t NumberOfSignals () const;  Return number of signals for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGWidget;  TGWidget ();  ;  TGWidget (Int_t id);  ; virtual ~TGWidget ();  ; virtual void Associate (const TGWindow *w);  ; const char * GetCommand () const;  ; Bool_t HasFocus () const;  ; Bool_t IsEnabled () const;  ; virtual void SetCommand (const char *command);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t WantFocus () const;  ; Int_t WidgetId () const;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static FontStruct_t GetDefaultFontStruct ();  Return default font structure. ;  ;  Static Public Member Functions inherited from TGButton; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetDefaultGC ();  Return default graphics context. ;  ; static const TGGC & GetHibckgndGC ();  Return graphics context for highlighted frame background. ;  ;  Static Public Member Functions inherited from TGFrame; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static const TGGC & GetBckgndGC ();  Get background color graphics context. ;  ; static const TGGC & GetBlackGC ();  Get black graphics context. ;  ; static Pixel_t GetBlackPixel ();  Get black pixel value. ;  ; static Pixel_t GetDefaultFrameBackground ();  Get default frame background. ;  ; static Pixel_t GetDefaultSelectedBackground ();  Get default selected frame background. ;  ; static const TGGC & GetHilightGC ();  Get highlight color graphics context. ;  ; static const TGGC & GetShadowGC ();  Get shadow color graphics context,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextButton.html:23174,inherit,inherited,23174,doc/master/classTGTextButton.html,https://root.cern,https://root.cern/doc/master/classTGTextButton.html,1,['inherit'],['inherited']
Modifiability,". ;  ; virtual RooPlot * plotOn (RooPlot *frame, RooLinkedList &cmdList) const;  Internal back-end function of plotOn() with named arguments. ;  ; virtual void preferredObservableScanOrder (const RooArgSet &obs, RooArgSet &orderedObs) const;  Interface method for function objects to indicate their preferred order of observables for scanning their values into a (multi-dimensional) histogram or RooDataSet. ;  ; void printMultiline (std::ostream &os, Int_t contents, bool verbose=false, TString indent="""") const override;  Structure printing. ;  ; void printValue (std::ostream &os) const override;  Print object value. ;  ; bool readFromStream (std::istream &is, bool compact, bool verbose=false) override;  Read object contents from stream (dummy for now) ;  ; void selectComp (bool flag);  ; void setCachedValue (double value, bool notifyClients=true) final;  Overwrite the value stored in this object's cache. ;  ; virtual bool setData (RooAbsData &, bool=true);  ; void setIntegratorConfig ();  Remove the specialized numeric integration configuration associated with this object. ;  ; void setIntegratorConfig (const RooNumIntConfig &config);  Set the given integrator configuration as default numeric integration configuration for this object. ;  ; void setParameterizeIntegral (const RooArgSet &paramVars);  ; void setPlotLabel (const char *label);  Set the label associated with this variable. ;  ; void setUnit (const char *unit);  ; RooAbsMoment * sigma (RooRealVar &obs);  ; RooAbsMoment * sigma (RooRealVar &obs, const RooArgSet &nset);  ; RooNumIntConfig * specialIntegratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumIntConfig * specialIntegratorConfig (bool createOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void writeToStream (std::ostream &o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classParamHistFunc.html:17978,config,configuration,17978,doc/master/classParamHistFunc.html,https://root.cern,https://root.cern/doc/master/classParamHistFunc.html,2,['config'],['configuration']
Modifiability,". ;  ; virtual RooPlot * plotOn (RooPlot *frame, RooLinkedList &cmdList) const;  Internal back-end function of plotOn() with named arguments. ;  ; virtual void preferredObservableScanOrder (const RooArgSet &obs, RooArgSet &orderedObs) const;  Interface method for function objects to indicate their preferred order of observables for scanning their values into a (multi-dimensional) histogram or RooDataSet. ;  ; void printMultiline (std::ostream &os, Int_t contents, bool verbose=false, TString indent="""") const override;  Structure printing. ;  ; void printValue (std::ostream &os) const override;  Print object value. ;  ; bool readFromStream (std::istream &is, bool compact, bool verbose=false) override;  Read object contents from stream (dummy for now) ;  ; void selectComp (bool flag);  ; void setCachedValue (double value, bool notifyClients=true) final;  Overwrite the value stored in this object's cache. ;  ; virtual bool setData (RooAbsData &, bool=true);  ; void setIntegratorConfig ();  Remove the specialized numeric integration configuration associated with this object. ;  ; void setIntegratorConfig (const RooNumIntConfig &config);  Set the given integrator configuration as default numeric integration configuration for this object. ;  ; void setParameterizeIntegral (const RooArgSet &paramVars);  ; void setPlotLabel (const char *label);  Set the label associated with this variable. ;  ; void setUnit (const char *unit);  ; RooAbsMoment * sigma (RooRealVar &obs);  ; RooAbsMoment * sigma (RooRealVar &obs, const RooArgSet &nset);  ; RooNumIntConfig * specialIntegratorConfig () const;  Returns the specialized integrator configuration for this RooAbsReal. ;  ; RooNumIntConfig * specialIntegratorConfig (bool createOnTheFly);  Returns the specialized integrator configuration for this RooAbsReal. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void writeToStream (std::ostream &os, bool compact) const override;  Write object contents to stream (dummy for ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooHistFunc.html:18248,config,configuration,18248,doc/master/classRooHistFunc.html,https://root.cern,https://root.cern/doc/master/classRooHistFunc.html,10,['config'],['configuration']
Modifiability,". ;  ; virtual Style_t GetMarkerStyle () const;  Return the marker style. ;  ; virtual TClass * IsA () const;  ; virtual void Modify ();  Change current marker attributes if necessary. ;  ; virtual void ResetAttMarker (Option_t *toption="""");  Reset this marker attributes to the default values. ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attributes. ;  ; virtual void SetMarkerColor (Color_t mcolor=1);  Set the marker color. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; virtual void SetMarkerSize (Size_t msize=1);  Set the marker size. ;  ; virtual void SetMarkerStyle (Style_t mstyle=1);  Set the marker style. ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttLine;  TAttLine ();  AttLine default constructor. ;  ;  TAttLine (Color_t lcolor, Style_t lstyle, Width_t lwidth);  AttLine normal constructor. ;  ; virtual ~TAttLine ();  AttLine destructor. ;  ; void Copy (TAttLine &attline) const;  Copy this line attributes to a new TAttLine. ;  ; Int_t DistancetoLine (Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2);  Compute distance from point px,py to a line. ;  ; virtual Color_t GetLineColor () const;  Return the line color. ;  ; virtual Style_t GetLineStyle () const;  Return the line style. ;  ; virtual Width_t GetLineWidth () const;  Return the line width. ;  ; virtual TClass * IsA () const;  ; virtual void Modify ();  Change current line attributes if necessary. ;  ; virtual void ResetAttLine (Option_t *option="""");  Reset this line attributes to default values. ;  ; virtual void SaveLineAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNLLVar_1_1xRooHypoSpace.html:13656,inherit,inherited,13656,doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNLLVar_1_1xRooHypoSpace.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNLLVar_1_1xRooHypoSpace.html,1,['inherit'],['inherited']
Modifiability,". ;  ; virtual TLeaf * GetLeafImpl (const char *branchname, const char *leafname);  Return pointer to the 1st Leaf named name in any Branch of this Tree or any branch in the list of friend trees. ;  ; char GetNewlineValue (std::istream &inputStream);  Determine which newline this file is using. ;  ; void ImportClusterRanges (TTree *fromtree);  Appends the cluster range information stored in 'fromtree' to this tree, including the value of fAutoFlush. ;  ; virtual void KeepCircular ();  Keep a maximum of fMaxEntries in memory. ;  ; void MoveReadCache (TFile *src, TDirectory *dir);  Move a cache from a file to the current file in dir. ;  ; Int_t SetBranchAddressImp (TBranch *branch, void *addr, TBranch **ptr);  Change branch address, dealing with clone trees properly. ;  ; Int_t SetCacheSizeAux (bool autocache=true, Long64_t cacheSize=0);  Set the size of the file cache and create it if possible. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t * fArgs;  ! [fNvar] Array of variables ;  ; Int_t fNvar;  Number of columns. ;  ;  Protected Attributes inherited from TTree; TList * fAliases;  List of aliases for expressions based on the tree branches. ;  ; std::atomic< UInt_t > fAllocationCount {0};  indicates basket should be resized to exact memory usage, but causes significant ;  ; Long64_t fAutoFlush;  Auto-flush tree when fAutoFlush entries written or -fAutoFlush (compressed) bytes produced. ;  ; Long64_t fAutoSave;  Autosave tree when fAutoSave entries written or -fAutoSave (compressed) bytes produced. ;  ; TObjArray fBranches;  List of Branches. ;  ; TBranchRef * fBranchRef;  Branch supporting the TRefTable (if any) ;  ; bool fCacheDoAutoInit;  ! true if cache auto creation or resize check is needed ;  ; bool fCacheDoClusterPrefetch;  ! true if cache is prefetching whole cl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNtupleD.html:41499,inherit,inherited,41499,doc/master/classTNtupleD.html,https://root.cern,https://root.cern/doc/master/classTNtupleD.html,1,['inherit'],['inherited']
Modifiability,". ;  ; virtual TLeaf * GetLeafImpl (const char *branchname, const char *leafname);  Return pointer to the 1st Leaf named name in any Branch of this Tree or any branch in the list of friend trees. ;  ; char GetNewlineValue (std::istream &inputStream);  Determine which newline this file is using. ;  ; void ImportClusterRanges (TTree *fromtree);  Appends the cluster range information stored in 'fromtree' to this tree, including the value of fAutoFlush. ;  ; virtual void KeepCircular ();  Keep a maximum of fMaxEntries in memory. ;  ; void MoveReadCache (TFile *src, TDirectory *dir);  Move a cache from a file to the current file in dir. ;  ; Int_t SetBranchAddressImp (TBranch *branch, void *addr, TBranch **ptr);  Change branch address, dealing with clone trees properly. ;  ; Int_t SetCacheSizeAux (bool autocache=true, Long64_t cacheSize=0);  Set the size of the file cache and create it if possible. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Float_t * fArgs;  ! [fNvar] Array of variables ;  ; Int_t fNvar;  Number of columns. ;  ;  Protected Attributes inherited from TTree; TList * fAliases;  List of aliases for expressions based on the tree branches. ;  ; std::atomic< UInt_t > fAllocationCount {0};  indicates basket should be resized to exact memory usage, but causes significant ;  ; Long64_t fAutoFlush;  Auto-flush tree when fAutoFlush entries written or -fAutoFlush (compressed) bytes produced. ;  ; Long64_t fAutoSave;  Autosave tree when fAutoSave entries written or -fAutoSave (compressed) bytes produced. ;  ; TObjArray fBranches;  List of Branches. ;  ; TBranchRef * fBranchRef;  Branch supporting the TRefTable (if any) ;  ; bool fCacheDoAutoInit;  ! true if cache auto creation or resize check is needed ;  ; bool fCacheDoClusterPrefetch;  ! true if cache is prefetching whole clu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNtuple.html:41538,inherit,inherited,41538,doc/master/classTNtuple.html,https://root.cern,https://root.cern/doc/master/classTNtuple.html,1,['inherit'],['inherited']
Modifiability,". ;  ; virtual TLeaf * GetLeafImpl (const char *branchname, const char *leafname);  Return pointer to the 1st Leaf named name in any Branch of this Tree or any branch in the list of friend trees. ;  ; char GetNewlineValue (std::istream &inputStream);  Determine which newline this file is using. ;  ; void ImportClusterRanges (TTree *fromtree);  Appends the cluster range information stored in 'fromtree' to this tree, including the value of fAutoFlush. ;  ; virtual void KeepCircular ();  Keep a maximum of fMaxEntries in memory. ;  ; void MoveReadCache (TFile *src, TDirectory *dir);  Move a cache from a file to the current file in dir. ;  ; Int_t SetBranchAddressImp (TBranch *branch, void *addr, TBranch **ptr);  Change branch address, dealing with clone trees properly. ;  ; Int_t SetCacheSizeAux (bool autocache=true, Long64_t cacheSize=0);  Set the size of the file cache and create it if possible. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TList * fAliases;  List of aliases for expressions based on the tree branches. ;  ; std::atomic< UInt_t > fAllocationCount {0};  indicates basket should be resized to exact memory usage, but causes significant ;  ; Long64_t fAutoFlush;  Auto-flush tree when fAutoFlush entries written or -fAutoFlush (compressed) bytes produced. ;  ; Long64_t fAutoSave;  Autosave tree when fAutoSave entries written or -fAutoSave (compressed) bytes produced. ;  ; TObjArray fBranches;  List of Branches. ;  ; TBranchRef * fBranchRef;  Branch supporting the TRefTable (if any) ;  ; bool fCacheDoAutoInit;  ! true if cache auto creation or resize check is needed ;  ; bool fCacheDoClusterPrefetch;  ! true if cache is prefetching whole clusters ;  ; Long64_t fCacheSize;  ! Maximum size of file buffers ;  ; bool fCacheUserSet;  ! true if the cache setting was explicitly g",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTTree.html:59298,inherit,inherited,59298,doc/v632/classTTree.html,https://root.cern,https://root.cern/doc/v632/classTTree.html,2,['inherit'],['inherited']
Modifiability,". ;  ; virtual TLeaf * GetLeafImpl (const char *branchname, const char *leafname);  Return pointer to the 1st Leaf named name in any Branch of this Tree or any branch in the list of friend trees. ;  ; char GetNewlineValue (std::istream &inputStream);  Determine which newline this file is using. ;  ; void ImportClusterRanges (TTree *fromtree);  Appends the cluster range information stored in 'fromtree' to this tree, including the value of fAutoFlush. ;  ; virtual void KeepCircular ();  Keep a maximum of fMaxEntries in memory. ;  ; void MoveReadCache (TFile *src, TDirectory *dir);  Move a cache from a file to the current file in dir. ;  ; Int_t SetBranchAddressImp (TBranch *branch, void *addr, TBranch **ptr);  Change branch address, dealing with clone trees properly. ;  ; Int_t SetCacheSizeAux (bool autocache=true, Long64_t cacheSize=0);  Set the size of the file cache and create it if possible. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; bool fBranchChecked;  ; Int_t fCurrentEntry;  ; TString fDB;  ; TString fInsertQuery;  ; TString fQuery;  ; TSQLResult * fResult;  ; TSQLRow * fRow;  ; TSQLServer * fServer;  ; TString fTable;  ; TSQLTableInfo * fTableInfo;  ;  Protected Attributes inherited from TTree; TList * fAliases;  List of aliases for expressions based on the tree branches. ;  ; std::atomic< UInt_t > fAllocationCount {0};  indicates basket should be resized to exact memory usage, but causes significant ;  ; Long64_t fAutoFlush;  Auto-flush tree when fAutoFlush entries written or -fAutoFlush (compressed) bytes produced. ;  ; Long64_t fAutoSave;  Autosave tree when fAutoSave entries written or -fAutoSave (compressed) bytes produced. ;  ; TObjArray fBranches;  List of Branches. ;  ; TBranchRef * fBranchRef;  Branch supporting the TRefTable (if any) ;  ; bool fCacheDoAutoIn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeSQL.html:41481,inherit,inherited,41481,doc/master/classTTreeSQL.html,https://root.cern,https://root.cern/doc/master/classTTreeSQL.html,1,['inherit'],['inherited']
Modifiability,". ;  ; virtual TLeaf * GetLeafImpl (const char *branchname, const char *leafname);  Return pointer to the 1st Leaf named name in any Branch of this Tree or any branch in the list of friend trees. ;  ; char GetNewlineValue (std::istream &inputStream);  Determine which newline this file is using. ;  ; void ImportClusterRanges (TTree *fromtree);  Appends the cluster range information stored in 'fromtree' to this tree, including the value of fAutoFlush. ;  ; virtual void KeepCircular ();  Keep a maximum of fMaxEntries in memory. ;  ; void MoveReadCache (TFile *src, TDirectory *dir);  Move a cache from a file to the current file in dir. ;  ; Int_t SetBranchAddressImp (TBranch *branch, void *addr, TBranch **ptr);  Change branch address, dealing with clone trees properly. ;  ; Int_t SetCacheSizeAux (bool autocache=true, Long64_t cacheSize=0);  Set the size of the file cache and create it if possible. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; bool fCanDeleteRefs;  ! If true, TProcessIDs are deleted when closing a file ;  ; TFile * fFile;  ! Pointer to current file (We own the file). ;  ; TObjArray * fFiles;  -> List of file names containing the trees (TChainElement, owned) ;  ; bool fGlobalRegistration;  ! if true, bypass use of global lists ;  ; Int_t fNtrees;  Number of trees. ;  ; TChain * fProofChain;  ! chain proxy when going to be processed by PROOF ;  ; TList * fStatus;  -> List of active/inactive branches (TChainElement, owned) ;  ; TTree * fTree;  ! Pointer to current tree (Note: We do not own this tree.) ;  ; Int_t fTreeNumber;  ! Current Tree number in fTreeOffset table ;  ; Long64_t * fTreeOffset;  [fTreeOffsetLen] Array of variables ;  ; Int_t fTreeOffsetLen;  Current size of fTreeOffset array. ;  ;  Protected Attributes inherited from TTree; TList * fAliases;  List of",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTChain.html:45387,inherit,inherited,45387,doc/v632/classTChain.html,https://root.cern,https://root.cern/doc/v632/classTChain.html,2,['inherit'],['inherited']
Modifiability,". ;  ; virtual TLeaf * GetLeafImpl (const char *branchname, const char *leafname);  Return pointer to the 1st Leaf named name in any Branch of this Tree or any branch in the list of friend trees. ;  ; char GetNewlineValue (std::istream &inputStream);  Determine which newline this file is using. ;  ; void ImportClusterRanges (TTree *fromtree);  Appends the cluster range information stored in 'fromtree' to this tree, including the value of fAutoFlush. ;  ; virtual void KeepCircular ();  Keep a maximum of fMaxEntries in memory. ;  ; void MoveReadCache (TFile *src, TDirectory *dir);  Move a cache from a file to the current file in dir. ;  ; Int_t SetBranchAddressImp (TBranch *branch, void *addr, TBranch **ptr);  Change branch address, dealing with clone trees properly. ;  ; Int_t SetCacheSizeAux (bool autocache=true, Long64_t cacheSize=0);  Set the size of the file cache and create it if possible. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Attributes inherited from TTree; static Int_t fgBranchStyle = 1;  Old/New branch style. ;  ; static Long64_t fgMaxTreeSize = 100000000000LL;  Maximum size of a file containing a Tree. ;  . #include <THbookTree.h>. Inheritance diagram for THbookTree:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ THbookTree() [1/2]. THbookTree::THbookTree ; (; ). default constructor ; Definition at line 61 of file THbookTree.cxx. ◆ THbookTree() [2/2]. THbookTree::THbookTree ; (; const char * ; name, . Int_t ; id . ). constructor ; Definition at line 73 of file THbookTree.cxx. ◆ ~THbookTree(). THbookTree::~THbookTree ; (; ). override . destructor ; Definition at line 87 of file THbookTree.cxx. Member Function Documentation. ◆ Class(). static TClass * THbookTree::Class ; (; ).",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHbookTree.html:48932,inherit,inherited,48932,doc/master/classTHbookTree.html,https://root.cern,https://root.cern/doc/master/classTHbookTree.html,1,['inherit'],['inherited']
Modifiability,". ;  ; virtual TLeaf * GetLeafImpl (const char *branchname, const char *leafname);  Return pointer to the 1st Leaf named name in any Branch of this Tree or any branch in the list of friend trees. ;  ; char GetNewlineValue (std::istream &inputStream);  Determine which newline this file is using. ;  ; void ImportClusterRanges (TTree *fromtree);  Appends the cluster range information stored in 'fromtree' to this tree, including the value of fAutoFlush. ;  ; virtual void KeepCircular ();  Keep a maximum of fMaxEntries in memory. ;  ; void MoveReadCache (TFile *src, TDirectory *dir);  Move a cache from a file to the current file in dir. ;  ; Int_t SetBranchAddressImp (TBranch *branch, void *addr, TBranch **ptr);  Change branch address, dealing with clone trees properly. ;  ; Int_t SetCacheSizeAux (bool autocache=true, Long64_t cacheSize=0);  Set the size of the file cache and create it if possible. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Attributes inherited from TTree; static Int_t fgBranchStyle = 1;  Old/New branch style. ;  ; static Long64_t fgMaxTreeSize = 100000000000LL;  Maximum size of a file containing a Tree. ;  . #include <TProofChain.h>. Inheritance diagram for TProofChain:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkOwnsChain . Definition at line 35 of file TProofChain.h. Constructor & Destructor Documentation. ◆ TProofChain() [1/3]. TProofChain::TProofChain ; (; ). Crates a new PROOF chain proxy. ; Definition at line 35 of file TProofChain.cxx. ◆ TProofChain() [2/3]. TProofChain::TProofChain ; (; TChain * ; chain, . Bool_t ; gettreeheader . ). Crates a new PROOF chain proxy containing the files from the chain. ; Definition at line 47 of f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofChain.html:53580,inherit,inherited,53580,doc/master/classTProofChain.html,https://root.cern,https://root.cern/doc/master/classTProofChain.html,1,['inherit'],['inherited']
Modifiability,". ;  ; virtual void SaveMarkerAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1);  Save line attributes as C++ statement(s) on output stream out. ;  ; virtual void SetMarkerAttributes ();  Invoke the DialogCanvas Marker attributes. ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Protected Attributes; REvePointSet ** fBins {nullptr};  ; Double_t fBinWidth;  ; Double_t fCurMax;  ; Double_t fCurMin;  ; Int_t fDefPointSetCapacity;  ; Int_t fLastBin;  ; Double_t fMax;  ; Double_t fMin;  Index of the last filled REvePointSet. ;  ; Int_t fNBins;  ; std::string fQuantName;  ;  Protected Attributes inherited from ROOT::Experimental::REveElement; AuntList_t fAunts;  ; Bool_t fCanEditMainColor {kFALSE};  ; Bool_t fCanEditMainTrans {kFALSE};  ; Bool_t fCanEditMainTransparency {kFALSE};  ; UChar_t fChangeBits {0};  ; TClass * fChildClass {nullptr};  ; List_t fChildren;  ; REveCompound * fCompound {nullptr};  ; UChar_t fCSCBits {0};  ; Color_t fDefaultColor {kPink};  ; Int_t fDenyDestroy {0};  ; Bool_t fDestroyOnZeroRefCnt {kTRUE};  Deny-destroy count. ;  ; Char_t fDestructing {kNone};  ; Short_t fImpliedSelected {0};  ; Color_t * fMainColorPtr {nullptr};  ; std::unique_ptr< REveTrans > fMainTrans;  ; Char_t fMainTransparency {0};  ; REveElement * fMother {nullptr};  ; std::string fName;  ; Bool_t fPickable {false};  ; std::unique_ptr< REveRenderData > fRenderData;  Externally assigned and controlled user data. ;  ; Bool_t fRnrChildren {kTRUE};  ; Bool_t fRnrSelf {kTRUE};  ; REveScene * fScene {nullptr};  ; REveElement * fSelectionMaster {nullptr};  ; std::string fTitle;  ; void * fUserData {nullptr};  ; REveElement * fVizModel {nullptr};  ; TString fVizTag;  Element used as model from VizDB. ;  ;  Protected Attributes inherited from ROOT::Experimental::REveProjectable; Pro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REvePointSetArray.html:16507,inherit,inherited,16507,doc/master/classROOT_1_1Experimental_1_1REvePointSetArray.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REvePointSetArray.html,1,['inherit'],['inherited']
Modifiability,". ;  ; virtual void SetLineColor (Color_t lcolor);  Set the line color. ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; virtual void SetLineStyle (Style_t lstyle);  Set the line style. ;  ; virtual void SetLineWidth (Width_t lwidth);  Set the line width. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static void AdjustPad (TVirtualPad *pad=nullptr);  Force the current pad to be updated. ;  ;  Static Public Member Functions inherited from TView; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static TView * CreateView (Int_t system=1, const Double_t *rmin=nullptr, const Double_t *rmax=nullptr);  Create a concrete default 3-d view via the plug-in manager. ;  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Member Functions;  TView3D (const TView3D &);  Set to TRUE after ExecuteRotateView. ;  ; TView3D & operator= (const TView3D &);  Assignment operator. ;  ; void ResetView (Double_t longitude, Double_t latitude, Double_t psi, Int_t &irep);  Set view direction (in spherical coordinates). ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTView3D.html:21017,inherit,inherited,21017,doc/master/classTView3D.html,https://root.cern,https://root.cern/doc/master/classTView3D.html,1,['inherit'],['inherited']
Modifiability,". ;  ; virtual void SetMarkerColorAlpha (Color_t mcolor, Float_t malpha);  Set a transparent marker color. ;  ; virtual void SetMarkerSize (Size_t msize=1);  Set the marker size. ;  ; virtual void SetMarkerStyle (Style_t mstyle=1);  Set the marker style. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox2D; virtual ~TAttBBox2D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void DisplayMarkerLineWidths ();  Display the table of markers with different line widths and their numbers. ;  ; static void DisplayMarkerTypes ();  Display the table of markers with their numbers. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttMarker; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Width_t GetMarkerLineWidth (Style_t style);  Internal helper function that returns the line width of the given marker style (0 = filled marker) ;  ; static Style_t GetMarkerStyleBase (Style_t style);  Internal helper function that returns the corresponding marker style with line width 1 for the given style. ;  ;  Static Public Member Functions inherited from TAttBBox2D; static TClass * Class ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMarker.html:13120,inherit,inherited,13120,doc/master/classTMarker.html,https://root.cern,https://root.cern/doc/master/classTMarker.html,1,['inherit'],['inherited']
Modifiability,". ;  ; void ImportClusterRanges (TTree *fromtree);  Appends the cluster range information stored in 'fromtree' to this tree, including the value of fAutoFlush. ;  ; virtual void KeepCircular ();  Keep a maximum of fMaxEntries in memory. ;  ; void MoveReadCache (TFile *src, TDirectory *dir);  Move a cache from a file to the current file in dir. ;  ; Int_t SetBranchAddressImp (TBranch *branch, void *addr, TBranch **ptr);  Change branch address, dealing with clone trees properly. ;  ; Int_t SetCacheSizeAux (bool autocache=true, Long64_t cacheSize=0);  Set the size of the file cache and create it if possible. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t * fArgs;  ! [fNvar] Array of variables ;  ; Int_t fNvar;  Number of columns. ;  ;  Protected Attributes inherited from TTree; TList * fAliases;  List of aliases for expressions based on the tree branches. ;  ; std::atomic< UInt_t > fAllocationCount {0};  indicates basket should be resized to exact memory usage, but causes significant ;  ; Long64_t fAutoFlush;  Auto-flush tree when fAutoFlush entries written or -fAutoFlush (compressed) bytes produced. ;  ; Long64_t fAutoSave;  Autosave tree when fAutoSave entries written or -fAutoSave (compressed) bytes produced. ;  ; TObjArray fBranches;  List of Branches. ;  ; TBranchRef * fBranchRef;  Branch supporting the TRefTable (if any) ;  ; bool fCacheDoAutoInit;  ! true if cache auto creation or resize check is needed ;  ; bool fCacheDoClusterPrefetch;  ! true if cache is prefetching whole clusters ;  ; Long64_t fCacheSize;  ! Maximum size of file buffers ;  ; bool fCacheUserSet;  ! true if the cache setting was explicitly given by user ;  ; Long64_t fChainOffset;  ! Offset of 1st entry of this Tree in a TChain ;  ; TList * fClones;  ! List of cloned trees which share our addresse",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNtupleD.html:41817,inherit,inherited,41817,doc/master/classTNtupleD.html,https://root.cern,https://root.cern/doc/master/classTNtupleD.html,1,['inherit'],['inherited']
Modifiability,". ;  ; void Init (const char *name, const char *leaflist, Int_t compress);  ; void ReadLeaves0Impl (TBuffer &b);  Read zero leaves without the overhead of a loop. ;  ; void ReadLeaves1Impl (TBuffer &b);  Read one leaf without the overhead of a loop. ;  ; void ReadLeaves2Impl (TBuffer &b);  Read two leaves without the overhead of a loop. ;  ; void ReadLeavesImpl (TBuffer &b);  Loop on all leaves of this branch to read Basket buffer. ;  ; virtual void SetAddressImpl (void *addr, bool);  ; void SetSkipZip (bool skip=true);  ; Int_t WriteBasket (TBasket *basket, Int_t where);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TBranch; char * fAddress;  ! Address of 1st leaf (variable or object) ;  ; Int_t * fBasketBytes;  [fMaxBaskets] Length of baskets on file ;  ; Long64_t * fBasketEntry;  [fMaxBaskets] Table of first entry in each basket ;  ; TObjArray fBaskets;  -> List of baskets of this branch ;  ; Long64_t * fBasketSeek;  [fMaxBaskets] Addresses of baskets on file ;  ; Int_t fBasketSize;  Initial Size of Basket Buffer. ;  ; TObjArray fBranches;  -> List of Branches of this branch ;  ; TList * fBrowsables;  ! List of TVirtualBranchBrowsables used for Browse() ;  ; BulkObj fBulk;  ! Helper for performing bulk IO ;  ; CacheInfo_t fCacheInfo;  ! Hold info about which basket are in the cache and if they have been retrieved from the cache. ;  ; Int_t fCompress;  Compression level and algorithm. ;  ; TBasket * fCurrentBasket;  ! Pointer to the current basket. ;  ; TDirectory * fDirectory;  ! Pointer to directory where this branch buffers are stored ;  ; Long64_t fEntries;  Number of entries. ;  ; TBuffer * fEntryBuffer;  ! Buffer used to directly pass the content without streaming ;  ; Long64_t fEntryNumber;  Current entry number (last one filled in this branch) ;  ; Int_t f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBranchSTL.html:24657,inherit,inherited,24657,doc/master/classTBranchSTL.html,https://root.cern,https://root.cern/doc/master/classTBranchSTL.html,2,"['inherit', 'variab']","['inherited', 'variable']"
Modifiability,". ;  ; void MakeZombie ();  . Protected Attributes; bool fApplyStyle = true;  ; Style_t fFillStyle = 3004;  ; TH1F * fHist = nullptr;  ; TList fItems;  holds TH1Fs only ;  ; TLegend * fLegend = nullptr;  ; bool fLogXaxis = false;  ; bool fLogYaxis = false;  ; TList fOtherItems;  other objects to be drawn like TLine etc. ;  ; RooPlot * fRooPlot = nullptr;  ; double fXMax = std::numeric_limits<float>::quiet_NaN();  ; double fXMin = std::numeric_limits<float>::quiet_NaN();  ; double fYMax = std::numeric_limits<float>::quiet_NaN();  ; double fYMin = std::numeric_limits<float>::quiet_NaN();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Private Attributes; Int_t fBins;  ; Int_t fColor = 1;  ; bool fIsWeighted = false;  ; Int_t fMarkerType = 20;  ; std::vector< double > fSampleWeights;  ; std::vector< double > fSamplingDistr;  ; TString fVarName;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Attributes inh",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1SamplingDistPlot.html:16647,inherit,inherited,16647,doc/master/classRooStats_1_1SamplingDistPlot.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1SamplingDistPlot.html,1,['inherit'],['inherited']
Modifiability,". ;  ; void ProduceStreamerSource (std::ostream &fs, TClass *cl, TList *cllist);  Produce source code of streamer function for specified class. ;  ; void ReadSTLarg (std::ostream &fs, TString &argname, int argtyp, Bool_t isargptr, TClass *argcl, TString &tname, TString &ifcond);  Produce code to read argument of stl container from xml file. ;  ; void WriteSTLarg (std::ostream &fs, const char *accname, int argtyp, Bool_t isargptr, TClass *argcl);  Produce code to write argument of stl container to xml file. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TString fGetterName;  ; TString fSetterName;  buffer for name of getter method ;  ; TXMLSetup fXmlSetup;  buffer for name of setter method ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TXMLPlayer.h>. Inheritance diagram for TXMLPlayer:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TXMLPlayer(). TXMLPlayer::TXMLPlayer ; (; ). default constructor ; Definition at line 136 of file TXMLPlayer.cxx. ◆ ~TXMLPlayer(). TXMLPlayer::~TXMLPla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLPlayer.html:10967,inherit,inherited,10967,doc/master/classTXMLPlayer.html,https://root.cern,https://root.cern/doc/master/classTXMLPlayer.html,1,['inherit'],['inherited']
Modifiability,". ;  ; void RemoveDependent (TEveElement *el);  Remove el as dependent element. ;  ; void SetCenter (Float_t x, Float_t y, Float_t z);  Set projection center and rebuild projected scene. ;  ; void SetCurrentDepth (Float_t d);  ; void SetImportEmpty (Bool_t ie);  ; void SetProjection (TEveProjection::EPType_e type);  Set projection type and distortion. ;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Int_t SubImportChildren (TEveElement *el, TEveElement *proj_parent);  Recursively import children elements of el and apply projection to the newly imported objects. ;  ; virtual TEveElement * SubImportElements (TEveElement *el, TEveElement *proj_parent);  Recursively import elements and apply projection to the newly imported objects. ;  ; virtual void UpdateName ();  Updates name to have consistent information with projection. ;  ;  Public Member Functions inherited from TEveElementList;  TEveElementList (const char *n=""TEveElementList"", const char *t="""", Bool_t doColor=kFALSE, Bool_t doTransparency=kFALSE);  Constructor. ;  ;  TEveElementList (const TEveElementList &e);  Copy constructor. ;  ;  ~TEveElementList () override;  ; Bool_t AcceptElement (TEveElement *el) override;  Check if TEveElement el is inherited from fChildClass. ;  ; TEveElementList * CloneElement () const override;  Clone the element via copy constructor. ;  ; TClass * GetChildClass () const;  ; const char * GetElementName () const override;  Virtual function for retrieving name of the element. ;  ; const char * GetElementTitle () const override;  Virtual function for retrieving title of the render-element. ;  ; TObject * GetObject (const TEveException &=""TEveElementList::GetObject "") const override;  Get a TObject associated with this render-element. ;  ; TClass * ProjectedClass (const TEveProjection *p) const override;  Virtual from TEveProjectable, returns TEveCompoundProjected class. ;  ; void SetChildClass (TClass *c);  ; void Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveProjectionManager.html:2903,inherit,inherited,2903,doc/master/classTEveProjectionManager.html,https://root.cern,https://root.cern/doc/master/classTEveProjectionManager.html,1,['inherit'],['inherited']
Modifiability,". ;  ; void Store (TBuffer &b) const;  Store class description on I/O buffer. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void Streamer (void *obj, TBuffer &b, const TClass *onfile_class=nullptr) const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t WriteBuffer (TBuffer &b, void *pointer, const char *info="""");  Function called by the Streamer functions to serialize object at p to buffer b. ;  ;  Public Member Functions inherited from TDictionary;  TDictionary ();  ;  TDictionary (const char *name);  ;  TDictionary (const TDictionary &dict);  ; virtual ~TDictionary ();  ; void CreateAttributeMap ();  ; TDictAttributeMap * GetAttributeMap () const;  ; TClass * IsA () const override;  ; TDictionary & operator= (const TDictionary &other);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTClass.html:25656,inherit,inherited,25656,doc/v632/classTClass.html,https://root.cern,https://root.cern/doc/v632/classTClass.html,2,['inherit'],['inherited']
Modifiability,". ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Protected Attributes; TMatrixD fA;  ; TMatrixD fC;  ; TMatrixDSym fQ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQpDataDens.html:10930,inherit,inherited,10930,doc/master/classTQpDataDens.html,https://root.cern,https://root.cern/doc/master/classTQpDataDens.html,1,['inherit'],['inherited']
Modifiability,". ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Public Attributes; TDSet * fDSet;  ; Int_t fFiles;  ; Int_t fMissing;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofMonSender_1_1TDSetPlet.html:9046,inherit,inherited,9046,doc/master/classTProofMonSender_1_1TDSetPlet.html,https://root.cern,https://root.cern/doc/master/classTProofMonSender_1_1TDSetPlet.html,1,['inherit'],['inherited']
Modifiability,. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttBBox2D; virtual ~TAttBBox2D ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void DrawColorTable ();  Static function to Display Color Table in a pad. ;  ; static Int_t GetMaxPickDistance ();  Static function (see also TPad::SetMaxPickDistance) ;  ; static void SetMaxPickDistance (Int_t maxPick=5);  static function to set the maximum Pick Distance fgMaxPickDistance This parameter is used in TPad::Pick to select an object if its DistancetoPrimitive returns a value < fgMaxPickDistance The default value is 5 pixels. ;  ;  Static Public Member Functions inherited from TVirtualPad; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TVirtualPad *& Pad ();  Return the current pad for the current thread. ;  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from TAttLine; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TAttFill; static TClass * Class ();  ; static const char * Class_Nam,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPad.html:39222,inherit,inherited,39222,doc/master/classTPad.html,https://root.cern,https://root.cern/doc/master/classTPad.html,1,['inherit'],['inherited']
Modifiability,". ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttFill;  TAttFill ();  AttFill default constructor. ;  ;  TAttFill (Color_t fcolor, Style_t fstyle);  AttFill normal constructor. ;  ; virtual ~TAttFill ();  AttFill destructor. ;  ; void Copy (TAttFill &attfill) const;  Copy this fill attributes to a new TAttFill. ;  ; virtual void Modify ();  Change current fill area attributes if necessary. ;  ; virtual void ResetAttFill (Option_t *option="""");  Reset this fill attributes to default values. ;  ; virtual void SaveFillAttributes (std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001);  Save fill attributes as C++ statement(s) on output stream out. ;  ; virtual void SetFillAttributes ();  Invoke the DialogCanvas Fill attributes. ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TAttText;  TAttText ();  AttText default constructor. ;  ;  TAttText (Int_t align, Float_t angle, Color_t color, Style_t font, Float_t tsize);  AttText normal constructor. ;  ; virtual ~TAttText ();  AttText destructor. ;  ; void Copy (TAttText &atttext) const;  Copy this text attributes to a new TAttText. ;  ; virtual Float_t GetTextSizePercent (Float_t size);  Return the text in percent of the pad size. ;  ; virtual void Modify ();  Change current text attributes if necessary. ;  ; virtual void ResetAttText (Option_t *toption="""");  Reset this text attributes to default values. ;  ; virtual void SaveTextAttributes (std::ostream &out, const char *name, Int_t alidef=12, Float_t angdef=0, Int_t coldef=1, Int_t fondef=61, Float_t sizdef=1);  Save text attributes as C++ statement(s) on output stream out. ;  ; virtual void SetTextAttributes ();  Invoke the DialogCanvas Text attributes. ;  ; virtual void SetTextColorAlpha (Color_t tcolor, Float_t talpha);  Set a ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebPadPainter.html:6486,inherit,inherited,6486,doc/master/classTWebPadPainter.html,https://root.cern,https://root.cern/doc/master/classTWebPadPainter.html,1,['inherit'],['inherited']
Modifiability,". ;  ; void operator+= (const TMatrixTBase< Element > &m);  Add to every element of the submatrix the corresponding element of matrix mt. ;  ; void operator+= (const TMatrixTSub_const< Element > &s);  Add to every element of the submatrix the corresponding element of submatrix ms. ;  ; void operator+= (Element val);  Add val to every element of the sub matrix. ;  ; void operator= (const TMatrixTBase< Element > &m);  Assignment operator. ;  ; TMatrixTSub< Element > & operator= (const TMatrixTSub< Element > &s);  ; void operator= (const TMatrixTSub_const< Element > &s);  Assignment operator. ;  ; void operator= (Element val);  Assign val to every element of the sub matrix. ;  ; void Rank1Update (const TVectorT< Element > &vec, Element alpha=1.0);  Perform a rank 1 operation on the matrix: A += alpha * v * v^T. ;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMatrixTSub_const< Element >;  TMatrixTSub_const ();  ;  TMatrixTSub_const (const TMatrixT< Element > &matrix, Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb);  make a reference to submatrix [row_lwbs..row_upbs][col_lwbs..col_upbs]; The indexing range of the reference is [0..row_upbs-row_lwbs+1][0..col_upb-col_lwbs+1] (default) ;  ;  TMatrixTSub_const (const TMatrixTSym< Element > &matrix, Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb);  make a reference to submatrix [row_lwbs..row_upbs][col_lwbs..col_upbs]; The indexing range of the reference is [0..row_upbs-row_lwbs+1][0..col_upb-col_lwbs+1] (default) ;  ; virtual ~TMatrixTSub_const ();  ; Int_t GetColOff () const;  ; const TMatrixTBase< Element > * GetMatrix () const;  ; Int_t GetNcols () const;  ; Int_t GetNrows () const;  ; Int_t GetRowOff () const;  ; const Element & operator() (Int_t rown, Int_t coln) const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMatrixTSub.html:2234,inherit,inherited,2234,doc/master/classTMatrixTSub.html,https://root.cern,https://root.cern/doc/master/classTMatrixTSub.html,1,['inherit'],['inherited']
Modifiability,". ;  ; void registerProxy (RooSetProxy &proxy);  Register an RooSetProxy in the proxy list. ;  ; void setProxyNormSet (const RooArgSet *nset);  Forward a change in the cached normalization argset to all the registered proxies. ;  ; void setShapeDirty (const RooAbsArg *source);  Notify that a shape-like property (e.g. binning) has changed. ;  ; void setValueDirty (const RooAbsArg *source);  Force element to re-evaluate itself when a value is requested. ;  ; void unRegisterProxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TString _rangeName;  ; RooRealProxy _x;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountLis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRangeBoolean.html:54588,inherit,inherited,54588,doc/master/classRooRangeBoolean.html,https://root.cern,https://root.cern/doc/master/classRooRangeBoolean.html,1,['inherit'],['inherited']
Modifiability,". ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TBrowserImp;  TBrowserImp (const TBrowserImp &)=delete;  ; TBrowserImp & operator= (const TBrowserImp &br)=delete;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints = nullptr;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootBrowser.html:42295,inherit,inherited,42295,doc/master/classTRootBrowser.html,https://root.cern,https://root.cern/doc/master/classTRootBrowser.html,2,['inherit'],['inherited']
Modifiability,". ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooRealProxy _x;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot bins. ;  ; double _plotMax = 0.0;  Maximum of plot range. ;  ; double _plotMin = 0.0;  Minimum of plot range. ;  ; bool _selectComp = true;  A buffer for reading values from trees. ;  ; std::unique_ptr< RooNumIntConfig > _specIntegratorConfig;  ; TreeReadBuffer * _treeReadBuffer = nullptr;  ; TString _unit;  Unit for objects value. ;  ; double _value = 0.0;  Cache for current value of object. ;  ;  Protected Attributes inherited from RooAbsArg; std::set< std::string > _boolAttrib;  ; std::set< std::string > _boolAttribTransient;  ; std::vector< RooAbsCache * > _cacheList;  ; RefCountList_t _clientList;  ; RefCountList_t _clientListShape;  ; RefCountList_t _clientListValue;  ; std::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooKeysPdf.html:70832,inherit,inherited,70832,doc/master/classRooKeysPdf.html,https://root.cern,https://root.cern/doc/master/classRooKeysPdf.html,1,['inherit'],['inherited']
Modifiability,". ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static Bool_t Cd1 (const char *path);  Change current directory to ""path"". ;  ; static SharedGDirectory_t & GetSharedLocalCurrentDirectory ();  Return the (address of) a shared pointer to the struct holding the actual thread local gDirectory pointer and the atomic_flag for its lock. ;  . Protected Attributes; TContext * fContext {nullptr};  Buffer for GetPath() function. ;  ; std::atomic< size_t > fContextPeg {0};  thread local gDirectory pointing to this object. ;  ; std::vector< SharedGDirectory_t > fGDirectories;  ; TList * fList {nullptr};  ; TObject * fMother {nullptr};  ; TString fPathBuffer;  ; std::atomic_flag fSpinLock;  Counter delaying the TDirectory destructor from finishing. ;  ; TUUID fUUID;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static Bool_t fgAddDirectory = kTRUE;  MSVC doesn't support = ATOMIC_FLAG_INIT;. ;  . Friends; struct ROOT::Internal::TDirectoryAtomicAdapter;  ; class TContext;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . #include <TDirectory.h>. Inheritance diagram for TDirectory:. This browser is not able",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTDirectory.html:19745,inherit,inherited,19745,doc/v632/classTDirectory.html,https://root.cern,https://root.cern/doc/v632/classTDirectory.html,2,['inherit'],['inherited']
Modifiability,". Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TImagePlugin; TString fExtension;  file extension ;  . #include <TASImagePlugin.h>. Inheritance diagram for TASImagePlugin:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TASImagePlugin(). TASImagePlugin::TASImagePlugin ; (; const char * ; ext). inline . Definition at line 29 of file TASImagePlugin.h. ◆ ~TASImagePlugin(). TASImagePlugin::~TASImagePlugin ; (; ). inlineoverride . Definition at line 30 of file TASImagePlugin.h. Member Function Documentation. ◆ ASImage2File(). virtual Bool_t TASImagePlugin::ASImage2File ; (; ASImage * ; ). inlinevirtual . Definition at line 37 of file TASImagePlugin.h. ◆ Class(). static TClass * TASImagePlugin::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TASImagePlugin::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TASImagePlugin::Class_Version ; (; ). ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTASImagePlugin.html:10661,inherit,inherited,10661,doc/master/classTASImagePlugin.html,https://root.cern,https://root.cern/doc/master/classTASImagePlugin.html,1,['inherit'],['inherited']
Modifiability,". Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TImagePlugin; TString fExtension;  file extension ;  . #include <TASPluginGS.h>. Inheritance diagram for TASPluginGS:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TASPluginGS(). TASPluginGS::TASPluginGS ; (; const char * ; ext). ctor ; Definition at line 48 of file TASPluginGS.cxx. ◆ ~TASPluginGS(). TASPluginGS::~TASPluginGS ; (; ). override . dtor ; Definition at line 65 of file TASPluginGS.cxx. Member Function Documentation. ◆ Class(). static TClass * TASPluginGS::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TASPluginGS::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TASPluginGS::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 38 of file TASPluginGS.h. ◆ DeclFileName(). static const char * TASPluginGS::DeclFileName ; (; ). inlinestat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTASPluginGS.html:11331,inherit,inherited,11331,doc/master/classTASPluginGS.html,https://root.cern,https://root.cern/doc/master/classTASPluginGS.html,1,['inherit'],['inherited']
Modifiability,". Also see RooTFnBinding. ; Definition at line 93 of file RooTFnBinding.cxx. ◆ bindFunction() [20/24]. RooAbsReal * RooFit::bindFunction ; (; TF1 * ; func, . RooAbsReal & ; x, . const RooArgList & ; params . ). Bind a TFx function to RooFit variables. Also see RooTFnBinding. ; Definition at line 105 of file RooTFnBinding.cxx. ◆ bindFunction() [21/24]. RooAbsReal * RooFit::bindFunction ; (; TF2 * ; func, . RooAbsReal & ; x, . RooAbsReal & ; y . ). Bind a TFx function to RooFit variables. Also see RooTFnBinding. ; Definition at line 97 of file RooTFnBinding.cxx. ◆ bindFunction() [22/24]. RooAbsReal * RooFit::bindFunction ; (; TF2 * ; func, . RooAbsReal & ; x, . RooAbsReal & ; y, . const RooArgList & ; params . ). Bind a TFx function to RooFit variables. Also see RooTFnBinding. ; Definition at line 109 of file RooTFnBinding.cxx. ◆ bindFunction() [23/24]. RooAbsReal * RooFit::bindFunction ; (; TF3 * ; func, . RooAbsReal & ; x, . RooAbsReal & ; y, . RooAbsReal & ; z . ). Bind a TFx function to RooFit variables. Also see RooTFnBinding. ; Definition at line 101 of file RooTFnBinding.cxx. ◆ bindFunction() [24/24]. RooAbsReal * RooFit::bindFunction ; (; TF3 * ; func, . RooAbsReal & ; x, . RooAbsReal & ; y, . RooAbsReal & ; z, . const RooArgList & ; params . ). Bind a TFx function to RooFit variables. Also see RooTFnBinding. ; Definition at line 113 of file RooTFnBinding.cxx. ◆ bindPdf() [1/21]. RooAbsPdf * RooFit::bindPdf ; (; const char * ; name, . CFUNCD1D ; func, . RooAbsReal & ; x . ). Definition at line 65 of file RooCFunction1Binding.cxx. ◆ bindPdf() [2/21]. RooAbsPdf * RooFit::bindPdf ; (; const char * ; name, . CFUNCD1I ; func, . RooAbsReal & ; x . ). Definition at line 69 of file RooCFunction1Binding.cxx. ◆ bindPdf() [3/21]. RooAbsPdf * RooFit::bindPdf ; (; const char * ; name, . CFUNCD2DD ; func, . RooAbsReal & ; x, . RooAbsReal & ; y . ). Definition at line 57 of file RooCFunction2Binding.cxx. ◆ bindPdf() [4/21]. RooAbsPdf * RooFit::bindPdf ; (; const char * ; name",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceRooFit.html:29181,variab,variables,29181,doc/master/namespaceRooFit.html,https://root.cern,https://root.cern/doc/master/namespaceRooFit.html,1,['variab'],['variables']
Modifiability,". Base function for computing multiple values of a RooAbsReal. ; Parameters. ctxAn evaluation context object . Reimplemented from RooAbsReal.; Definition at line 250 of file RooRealSumPdf.cxx. ◆ evaluate() [1/2]. double RooRealSumPdf::evaluate ; (; ); const. overridevirtual . Calculate the current value. ; Implements RooAbsReal.; Definition at line 244 of file RooRealSumPdf.cxx. ◆ evaluate() [2/2]. double RooRealSumPdf::evaluate ; (; RooAbsReal const & ; caller, . RooArgList const & ; funcList, . RooArgList const & ; coefList, . bool ; doFloor, . bool & ; hasWarnedBefore . ). staticprivate . Definition at line 203 of file RooRealSumPdf.cxx. ◆ expectedEvents(). double RooRealSumPdf::expectedEvents ; (; const RooArgSet * ; nset); const. overridevirtual . Return expected number of events for extended likelihood calculation, which is the sum of all coefficients. ; Reimplemented from RooAbsPdf.; Definition at line 547 of file RooRealSumPdf.cxx. ◆ extendMode(). RooAbsPdf::ExtendMode RooRealSumPdf::extendMode ; (; ); const. overridevirtual . Returns ability of PDF to provide extended likelihood terms. ; Possible answers are in the enumerator RooAbsPdf::ExtendMode. This default implementation always returns CanNotBeExtended. ; Reimplemented from RooAbsPdf.; Definition at line 197 of file RooRealSumPdf.cxx. ◆ forceAnalyticalInt(). bool RooRealSumPdf::forceAnalyticalInt ; (; const RooAbsArg & ; arg); const. inlineoverridevirtual . Reimplemented from RooAbsReal.; Definition at line 40 of file RooRealSumPdf.h. ◆ funcList(). const RooArgList & RooRealSumPdf::funcList ; (; ); const. inline . Definition at line 44 of file RooRealSumPdf.h. ◆ getAnalyticalIntegralWN() [1/2]. Int_t RooRealSumPdf::getAnalyticalIntegralWN ; (; RooAbsReal const & ; caller, . RooObjCacheManager & ; normIntMgr, . RooArgList const & ; funcList, . RooArgList const & ; coefList, . RooArgSet & ; allVars, . RooArgSet & ; numVars, . const RooArgSet * ; normSet, . const char * ; rangeName . ). staticprivate . Def",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealSumPdf.html:85297,extend,extendMode,85297,doc/master/classRooRealSumPdf.html,https://root.cern,https://root.cern/doc/master/classRooRealSumPdf.html,1,['extend'],['extendMode']
Modifiability,". Base function for computing multiple values of a RooAbsReal. ; Parameters. ctxAn evaluation context object . Reimplemented from RooAbsReal.; Definition at line 252 of file RooRealSumPdf.cxx. ◆ evaluate() [1/2]. double RooRealSumPdf::evaluate ; (; ); const. overridevirtual . Calculate the current value. ; Implements RooAbsReal.; Definition at line 246 of file RooRealSumPdf.cxx. ◆ evaluate() [2/2]. double RooRealSumPdf::evaluate ; (; RooAbsReal const & ; caller, . RooArgList const & ; funcList, . RooArgList const & ; coefList, . bool ; doFloor, . bool & ; hasWarnedBefore . ). staticprivate . Definition at line 205 of file RooRealSumPdf.cxx. ◆ expectedEvents(). double RooRealSumPdf::expectedEvents ; (; const RooArgSet * ; nset); const. overridevirtual . Return expected number of events for extended likelihood calculation, which is the sum of all coefficients. ; Reimplemented from RooAbsPdf.; Definition at line 549 of file RooRealSumPdf.cxx. ◆ extendMode(). RooAbsPdf::ExtendMode RooRealSumPdf::extendMode ; (; ); const. overridevirtual . Returns ability of PDF to provide extended likelihood terms. ; Possible answers are in the enumerator RooAbsPdf::ExtendMode. This default implementation always returns CanNotBeExtended. ; Reimplemented from RooAbsPdf.; Definition at line 199 of file RooRealSumPdf.cxx. ◆ forceAnalyticalInt(). bool RooRealSumPdf::forceAnalyticalInt ; (; const RooAbsArg & ; arg); const. inlineoverridevirtual . Reimplemented from RooAbsReal.; Definition at line 40 of file RooRealSumPdf.h. ◆ funcList(). const RooArgList & RooRealSumPdf::funcList ; (; ); const. inline . Definition at line 44 of file RooRealSumPdf.h. ◆ getAnalyticalIntegralWN() [1/2]. Int_t RooRealSumPdf::getAnalyticalIntegralWN ; (; RooAbsReal const & ; caller, . RooObjCacheManager & ; normIntMgr, . RooArgList const & ; funcList, . RooArgList const & ; coefList, . RooArgSet & ; allVars, . RooArgSet & ; numVars, . const RooArgSet * ; normSet, . const char * ; rangeName . ). staticprivate . Def",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooRealSumPdf.html:86418,extend,extendMode,86418,doc/v632/classRooRealSumPdf.html,https://root.cern,https://root.cern/doc/v632/classRooRealSumPdf.html,1,['extend'],['extendMode']
Modifiability,". Bool_t ClosestPointBetweenLines(const TEveVectorD& , const TEveVectorD& , const TEveVectorD& , const TEveVectorD& , TEveVectorD& out); Get closest point on line defined with vector p0 and u.; Return false if the point is forced on the line segment. void FillPointSet(TEvePointSet* ps) const; Reset ps and populate it with points in propagation cache. void RebuildTracks(); Rebuild all tracks using this render-style. void SetMagField(Double_t bX, Double_t bY, Double_t bZ); Set constant magnetic field and rebuild tracks. void SetMagFieldObj(TEveMagField* field, Bool_t own_field = kTRUE); Set constant magnetic field and rebuild tracks. void PrintMagField(Double_t x, Double_t y, Double_t z) const. void SetMaxR(Double_t x); Set maximum radius and rebuild tracks. void SetMaxZ(Double_t x); Set maximum z and rebuild tracks. void SetMaxOrbs(Double_t x); Set maximum number of orbits and rebuild tracks. void SetMinAng(Double_t x); Set maximum step angle and rebuild tracks.; WARNING -- this method / variable was mis-named. Double_t GetMinAng() const; Get maximum step angle.; WARNING -- this method / variable was mis-named. void SetMaxAng(Double_t x); Set maximum step angle and rebuild tracks. void SetMaxStep(Double_t x); Set maximum step-size and rebuild tracks. void SetDelta(Double_t x); Set maximum error and rebuild tracks. void SetFitDaughters(Bool_t x); Set daughter creation point fitting and rebuild tracks. void SetFitReferences(Bool_t x); Set track-reference fitting and rebuild tracks. void SetFitDecay(Bool_t x); Set decay fitting and rebuild tracks. void SetFitLineSegments(Bool_t x); Set line segment fitting and rebuild tracks. void SetFitCluster2Ds(Bool_t x); Set 2D-cluster fitting and rebuild tracks. void SetRnrDecay(Bool_t x); Set decay rendering and rebuild tracks. void SetRnrCluster2Ds(Bool_t x); Set rendering of 2D-clusters and rebuild tracks. void SetRnrDaughters(Bool_t x); Set daughter rendering and rebuild tracks. void SetRnrReferences(Bool_t x); Set track-refere",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveTrackPropagator.html:31360,variab,variable,31360,root/html534/TEveTrackPropagator.html,https://root.cern,https://root.cern/root/html534/TEveTrackPropagator.html,6,['variab'],['variable']
Modifiability,". Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); LD can handle classification with 2 classes and regression with one regression-target. void Train( void ); compute fSumMatx. Double_t GetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); Returns the MVA classification output. const std::vector< Float_t >& GetRegressionValues(); Calculates the regression output. void InitMatrices( void ); Initializaton method; creates global matrices and vectors. void GetSum( void ); Calculates the matrix transposed(X)*W*X with W being the diagonal weight matrix; and X the coordinates values. void GetSumVal( void ); Calculates the vector transposed(X)*W*Y with Y being the target vector. void GetLDCoeff( void ); Calculates the coeffiecients used for classification/regression. void ReadWeightsFromStream(istream& i); read LD coefficients from weight file. void AddWeightsXMLTo(void* parent) const; create XML description for LD classification and regression; (for arbitrary number of output classes/targets). void ReadWeightsFromXML(void* wghtnode); read coefficients from xml weight file. void MakeClassSpecific(ostream& , const TString& ) const; write LD-specific classifier response. const TMVA::Ranking* CreateRanking(); computes ranking of input variables. void DeclareOptions(); MethodLD options. void ProcessOptions(); this is the preparation for training. void PrintCoefficients( void ); Display the classification/regression coefficients for each variable. void GetHelpMessage() const; get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". » Author: Krzysztof Danielowski, Kamil Kraszewski, Maciej Kruk, Jan Therhaag » Copyright (c) 2008-2011: *; » Last changed: Mon Jul 4 15:34:18 2011 » Last generated: 2011-07-04 15:34; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMVA__MethodLD.html:17999,variab,variables,17999,root/html530/TMVA__MethodLD.html,https://root.cern,https://root.cern/root/html530/TMVA__MethodLD.html,2,['variab'],"['variable', 'variables']"
Modifiability,". Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); LD can handle classification with 2 classes and regression with one regression-target. void Train( void ); compute fSumMatx. Double_t GetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); Returns the MVA classification output. const std::vector< Float_t >& GetRegressionValues(); Calculates the regression output. void InitMatrices( void ); Initializaton method; creates global matrices and vectors. void GetSum( void ); Calculates the matrix transposed(X)*W*X with W being the diagonal weight matrix; and X the coordinates values. void GetSumVal( void ); Calculates the vector transposed(X)*W*Y with Y being the target vector. void GetLDCoeff( void ); Calculates the coeffiecients used for classification/regression. void ReadWeightsFromStream(istream& i); read LD coefficients from weight file. void AddWeightsXMLTo(void* parent) const; create XML description for LD classification and regression; (for arbitrary number of output classes/targets). void ReadWeightsFromXML(void* wghtnode); read coefficients from xml weight file. void MakeClassSpecific(ostream& , const TString& ) const; write LD-specific classifier response. const TMVA::Ranking* CreateRanking(); computes ranking of input variables. void DeclareOptions(); MethodLD options. void ProcessOptions(); this is the preparation for training. void PrintCoefficients( void ); Display the classification/regression coefficients for each variable. void GetHelpMessage() const; get help message text. typical length of text line:; ""|--------------------------------------------------------------|"". » Author: Krzysztof Danielowski, Kamil Kraszewski, Maciej Kruk, Jan Therhaag » Copyright (c) 2008-2011: *; » Last changed: Thu Nov 3 20:19:43 2011 » Last generated: 2011-11-03 20:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MethodLD.html:17999,variab,variables,17999,root/html532/TMVA__MethodLD.html,https://root.cern,https://root.cern/root/html532/TMVA__MethodLD.html,4,['variab'],"['variable', 'variables']"
Modifiability,". Cancels a dataset staging request. ; Returns kTRUE on success, kFALSE on failure. Dataset not found equals to a failure. ; Reimplemented in TProofLite.; Definition at line 11046 of file TProof.cxx. ◆ cd(). void TProof::cd ; (; Int_t ; id = -1). Set session with 'id' the default one. ; If 'id' is not found in the list, the current session is set as default ; Definition at line 10496 of file TProof.cxx. ◆ CheckFile(). Bool_t TProof::CheckFile ; (; const char * ; file, . TSlave * ; slave, . Long_t ; modtime, . Int_t ; cpopt = (kCp | kCpBin) . ). private . Check if a file needs to be send to the slave. ; Use the following algorithm:; check if file appears in file map; if yes, get file's modtime and check against time in map, if modtime not same get md5 and compare against md5 in map, if not same return kTRUE.; if no, get file's md5 and modtime and store in file map, ask slave if file exists with specific md5, if yes return kFALSE, if no return kTRUE. The options 'cpopt' define if to copy things from cache to sandbox and what. To retrieve from the cache the binaries associated with the file TProof::kCpBin must be set in cpopt; the default is copy everything. Returns kTRUE in case file needs to be send, returns kFALSE in case file is already on remote node. . Definition at line 6799 of file TProof.cxx. ◆ Class(). static TClass * TProof::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TProof::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TProof::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 1073 of file TProof.h. ◆ CleanGDirectory(). void TProof::CleanGDirectory ; (; TList * ; ol). private . Remove links to objects in list 'ol' from gDirectory. ; Definition at line 3046 of file TProof.cxx. ◆ CleanupSession(). Int_t TProof::CleanupSession ; (; const char * ; sessiontag). Send cleanup request for the session specified by ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProof.html:73270,sandbox,sandbox,73270,doc/master/classTProof.html,https://root.cern,https://root.cern/doc/master/classTProof.html,1,['sandbox'],['sandbox']
Modifiability,. Class Hierarchy. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. ROOT. Class Hierarchy. Memstat::TMemStatMng. ParamHistFunc. PiecewiseInterpolation. PyROOT::TPyException. PyROOT::TPyROOTApplication. ROOT::Fit::BinData. ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>. ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>. ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>. ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>. ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>. ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>. ROOT::Fit::SparseData. ROOT::Fit::UnBinData. ROOT::Math::AdaptiveIntegratorMultiDim. ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>←. ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>. ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>. ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>. ROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>←. ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>. ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>. ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>. ROOT::Math::BasicMinimizer←. ROOT::Math::GSLMinimizer. ROOT::Math::GSLNLSMinimizer. ROOT::Math::GSLSimAnMinimizer. ROOT::Math::BrentMinimizer1D. ROOT::Math::BrentRootFinder. ROOT::Math::Functor. ROOT::Math::Functor1D. ROOT::Math::GSLIntegrator. ROOT::Math::GSLMCIntegrator. ROOT::Math::GSLMinimizer. ROOT::Math::GSLMinimizer1D. ROOT::Math::GSLNLSMinimizer. ROOT::Math::GSLQRngNiederreiter2. ROOT::Math::GSLQRngSobol. ROOT::Math::GSLRngGFSR4. ROOT::Math::GSLRngMT. ROOT::Math::GSLRngRanLux. ROOT::Math::GSLRngRanLuxD1. ROOT::Math::GSLRngRanLuxD2. ROOT::Math::GSLRngRanLuxS1. ROOT::Math::GSLRngRanLuxS2. ROOT::Math::GSLRngTaus. ROOT::Math::GSLRootFinder←. ROOT::Math::Roots::Bisection. ROOT::Math::Roots::Brent. ROOT::Math::Roots::FalsePos. ROOT::Math::GSLRo,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ClassHierarchy.html:683,Adapt,AdaptiveIntegratorMultiDim,683,root/html602/ClassHierarchy.html,https://root.cern,https://root.cern/root/html602/ClassHierarchy.html,1,['Adapt'],['AdaptiveIntegratorMultiDim']
Modifiability,. Class Hierarchy. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. ROOT. Class Hierarchy. ParamHistFunc. PiecewiseInterpolation. PyROOT::TPyException. PyROOT::TPyROOTApplication. ROOT::Fit::BinData. ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>. ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>. ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>. ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>. ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>. ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>. ROOT::Fit::SparseData. ROOT::Fit::UnBinData. ROOT::Math::AdaptiveIntegratorMultiDim. ROOT::Math::BasicFitMethodFunction<ROOT::Math::IBaseFunctionMultiDim>←. ROOT::Fit::Chi2FCN<ROOT::Math::IBaseFunctionMultiDim>. ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>. ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>. ROOT::Math::BasicFitMethodFunction<ROOT::Math::IGradientFunctionMultiDim>←. ROOT::Fit::Chi2FCN<ROOT::Math::IGradientFunctionMultiDim>. ROOT::Fit::LogLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>. ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IGradientFunctionMultiDim>. ROOT::Math::BasicMinimizer←. ROOT::Math::GSLMinimizer. ROOT::Math::GSLNLSMinimizer. ROOT::Math::GSLSimAnMinimizer. ROOT::Math::BrentMinimizer1D. ROOT::Math::BrentRootFinder. ROOT::Math::Functor. ROOT::Math::Functor1D. ROOT::Math::GSLIntegrator. ROOT::Math::GSLMCIntegrator. ROOT::Math::GSLMinimizer. ROOT::Math::GSLMinimizer1D. ROOT::Math::GSLNLSMinimizer. ROOT::Math::GSLQRngNiederreiter2. ROOT::Math::GSLQRngSobol. ROOT::Math::GSLRngGFSR4. ROOT::Math::GSLRngMT. ROOT::Math::GSLRngRanLux. ROOT::Math::GSLRngRanLuxD1. ROOT::Math::GSLRngRanLuxD2. ROOT::Math::GSLRngRanLuxS1. ROOT::Math::GSLRngRanLuxS2. ROOT::Math::GSLRngTaus. ROOT::Math::GSLRootFinder←. ROOT::Math::Roots::Bisection. ROOT::Math::Roots::Brent. ROOT::Math::Roots::FalsePos. ROOT::Math::GSLRootFinderDeriv←. ROOT::,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ClassHierarchy.html:661,Adapt,AdaptiveIntegratorMultiDim,661,root/html534/ClassHierarchy.html,https://root.cern,https://root.cern/root/html534/ClassHierarchy.html,1,['Adapt'],['AdaptiveIntegratorMultiDim']
Modifiability,. ColorStruct_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » ColorStruct_t. class ColorStruct_t. GuiTypes. Types used by the GUI classes. Function Members (Methods); public:. ColorStruct_t(); ColorStruct_t(const ColorStruct_t&); ~ColorStruct_t(); ColorStruct_t&operator=(const ColorStruct_t&). Data Members; public:. UShort_tfBlueblue component (0..65535); UShort_tfGreengreen component (0..65535); UShort_tfMaskmask telling which color components are valid; ULong_tfPixelcolor pixel value (index in color table); UShort_tfRedred component (0..65535). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: Tue Sep 8 16:58:26 2015 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ColorStruct_t.html:729,Inherit,Inheritance,729,root/html534/ColorStruct_t.html,https://root.cern,https://root.cern/root/html534/ColorStruct_t.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,. ColorStruct_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » ColorStruct_t. class ColorStruct_t. GuiTypes. Types used by the GUI classes. Function Members (Methods); public:. ~ColorStruct_t(); ColorStruct_t(); ColorStruct_t(const ColorStruct_t&); ColorStruct_t(ColorStruct_t&&); ColorStruct_t&operator=(const ColorStruct_t&); ColorStruct_t&operator=(ColorStruct_t&&). Data Members; public:. UShort_tfBlueblue component (0..65535); UShort_tfGreengreen component (0..65535); UShort_tfMaskmask telling which color components are valid; ULong_tfPixelcolor pixel value (index in color table); UShort_tfRedred component (0..65535). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: Tue Jun 30 14:21:06 2015 » Last generated: 2015-06-30 14:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ColorStruct_t.html:803,Inherit,Inheritance,803,root/html602/ColorStruct_t.html,https://root.cern,https://root.cern/root/html602/ColorStruct_t.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,. ColorStruct_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » ColorStruct_t. class ColorStruct_t. GuiTypes. Types used by the GUI classes. Function Members (Methods); public:. ~ColorStruct_t(); ColorStruct_t(); ColorStruct_t(const ColorStruct_t&); ColorStruct_t(ColorStruct_t&&); ColorStruct_t&operator=(const ColorStruct_t&); ColorStruct_t&operator=(ColorStruct_t&&). Data Members; public:. UShort_tfBlueblue component (0..65535); UShort_tfGreengreen component (0..65535); UShort_tfMaskmask telling which color components are valid; ULong_tfPixelcolor pixel value (index in color table); UShort_tfRedred component (0..65535). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: Tue Sep 8 17:32:40 2015 » Last generated: 2015-09-08 17:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ColorStruct_t.html:803,Inherit,Inheritance,803,root/html604/ColorStruct_t.html,https://root.cern,https://root.cern/root/html604/ColorStruct_t.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". CpuInfo_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » CpuInfo_t. class CpuInfo_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System. Function Members (Methods); public:. CpuInfo_t(); CpuInfo_t(const CpuInfo_t&); virtual~CpuInfo_t(); static TClass*Class(); virtual TClass*IsA() const; CpuInfo_t&operator=(const CpuInfo_t&); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; public:. Float_tfIdlecpu idle percentage; Float_tfLoad15mcpu load average over 15 m; Float_tfLoad1mcpu load average over 1 m; Float_tfLoad5mcpu load average over 5 m; Float_tfSyscpu sys load in percentage; Float_tfTotalcpu user+sys load in percentage; Float_tfUsercpu user load in percentage. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; CpuInfo_t(); { }. virtual ~CpuInfo_t(); { }. TSystem& operator=(const CpuInfo_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/CpuInfo_t.html:990,Inherit,Inheritance,990,root/html534/CpuInfo_t.html,https://root.cern,https://root.cern/root/html534/CpuInfo_t.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". CpuInfo_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » CpuInfo_t. class CpuInfo_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System.; This is not an ABC in the strict sense of the (C++) word. For; every member function there is an implementation (often not more; than a call to AbstractMethod() which prints a warning saying; that the method should be overridden in a derived class), which; allows a simple partial implementation for new OS'es. Function Members (Methods); public:. virtual~CpuInfo_t(); static TClass*Class(); CpuInfo_t(); CpuInfo_t(const CpuInfo_t&); virtual TClass*IsA() const; CpuInfo_t&operator=(const CpuInfo_t&); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; public:. Float_tfIdlecpu idle percentage; Float_tfLoad15mcpu load average over 15 m; Float_tfLoad1mcpu load average over 1 m; Float_tfLoad5mcpu load average over 5 m; Float_tfSyscpu sys load in percentage; Float_tfTotalcpu user+sys load in percentage; Float_tfUsercpu user load in percentage. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; CpuInfo_t(); { }. virtual ~CpuInfo_t(); { }. TSystem& operator=(const CpuInfo_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-06-30 14:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/CpuInfo_t.html:1337,Inherit,Inheritance,1337,root/html602/CpuInfo_t.html,https://root.cern,https://root.cern/root/html602/CpuInfo_t.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". CpuInfo_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » CpuInfo_t. class CpuInfo_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System.; This is not an ABC in the strict sense of the (C++) word. For; every member function there is an implementation (often not more; than a call to AbstractMethod() which prints a warning saying; that the method should be overridden in a derived class), which; allows a simple partial implementation for new OS'es. Function Members (Methods); public:. virtual~CpuInfo_t(); static TClass*Class(); CpuInfo_t(); CpuInfo_t(const CpuInfo_t&); virtual TClass*IsA() const; CpuInfo_t&operator=(const CpuInfo_t&); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; public:. Float_tfIdlecpu idle percentage; Float_tfLoad15mcpu load average over 15 m; Float_tfLoad1mcpu load average over 1 m; Float_tfLoad5mcpu load average over 5 m; Float_tfSyscpu sys load in percentage; Float_tfTotalcpu user+sys load in percentage; Float_tfUsercpu user load in percentage. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; CpuInfo_t(); { }. virtual ~CpuInfo_t(); { }. TSystem& operator=(const CpuInfo_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 17:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/CpuInfo_t.html:1337,Inherit,Inheritance,1337,root/html604/CpuInfo_t.html,https://root.cern,https://root.cern/root/html604/CpuInfo_t.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". Data Members; protected:. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). TImpProxy & operator=(const ROOT::TArrayProxy<ROOT::TArrayType<int,0> >& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-06-30 14:27; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__TArrayProxy_-p0TArrayType_int_0___.html:4778,Inherit,Inheritance,4778,root/html602/ROOT__TArrayProxy_-p0TArrayType_int_0___.html,https://root.cern,https://root.cern/root/html602/ROOT__TArrayProxy_-p0TArrayType_int_0___.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". Data Members; protected:. TBranch*ROOT::TBranchProxy::fBranchbranch to read; TBranch*ROOT::TBranchProxy::fBranchCounteventual auxiliary branch (for example holding the size); const TStringROOT::TBranchProxy::fBranchNamename of the branch to read; TClass*ROOT::TBranchProxy::fClassclass name of the object pointed to by the branch; TStringROOT::TBranchProxy::fClassNameclass name of the object pointed to by the branch; TVirtualCollectionProxy*ROOT::TBranchProxy::fCollectionHandle to the collection containing the data chunk.; Int_tROOT::TBranchProxy::fCurrentTreeNumber; const TStringROOT::TBranchProxy::fDataMembername of the (eventual) data member being proxied; ROOT::TBranchProxyDirector*ROOT::TBranchProxy::fDirectorcontain pointer to TTree and entry to be read; TStreamerElement*ROOT::TBranchProxy::fElement; Bool_tROOT::TBranchProxy::fInitialized; Bool_tROOT::TBranchProxy::fIsClonetrue if we proxy the inside of a TClonesArray; const Bool_tROOT::TBranchProxy::fIsMembertrue if we proxy an unsplit data member; Bool_tROOT::TBranchProxy::fIsaPointertrue if we proxy a data member of pointer type; TTree*ROOT::TBranchProxy::fLastTreeTTree containing the last entry read; Int_tROOT::TBranchProxy::fMemberOffset; Int_tROOT::TBranchProxy::fOffsetOffset inside the object; ROOT::TBranchProxy*ROOT::TBranchProxy::fParentProxy to a parent object; Long64_tROOT::TBranchProxy::fReadLast entry read; void*ROOT::TBranchProxy::fWherememory location of the data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void Print(). unsigned char At(UInt_t i). TImpProxy & operator=(const ROOT::TArrayProxy<ROOT::TArrayType<int,0> >& ). » Author: Philippe Canal 01/06/2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; » Last changed: root/treeplayer:$Id$ » Last generated: 2015-09-08 17:39; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__TArrayProxy_-p0TArrayType_int_0___.html:4778,Inherit,Inheritance,4778,root/html604/ROOT__TArrayProxy_-p0TArrayType_int_0___.html,https://root.cern,https://root.cern/root/html604/ROOT__TArrayProxy_-p0TArrayType_int_0___.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Double_t*TPCON::fCoTab! Table of cos(fPhi1) .... cos(fPhil+fDphi1); Float_tTPCON::fDphi1range in phi; Float_t*TPCON::fDz[fNz] pointer to array of half lengths in z; Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TMaterial*TShape::fMaterialPointer to material; TStringTNamed::fNameobject identifier; Int_tTPCON::fNdivnumber of divisions; Int_tTShape::fNumberShape number; Int_tTPCON::fNznumber of z segments; Float_tTPCON::fPhi1lower phi limit; Float_t*TPCON::fRmax[fNz] pointer to array of outside radiuses; Float_t*TPCON::fRmin[fNz] pointer to array of inside radiuses; Double_t*TPCON::fSiTab! Table of sin(fPhi1) .... sin(fPhil+fDphi1); TStringTNamed::fTitleobject title; Int_tTShape::fVisibilityVisibility flag. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPGON(); PGON shape default constructor. TPGON(const char* name, const char* title, const char* material, Float_t phi1, Float_t dphi1, Int_t npdv, Int_t nz); PGON shape normal constructor. Parameters of the nz positions must be entered via TPCON::DefineSection. ~TPGON(); PGON shape default destructor. void FillTableOfCoSin(Double_t phi, Double_t angstep, Int_t n) const; Fill the table of cos and sin to prepare drawing. TPGON(). » Author: Nenad Buncic 29/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/g3d:$Id$ » Last generated: 2015-03-14 16:46; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TPGON.html:9515,Inherit,Inheritance,9515,root/html534/TPGON.html,https://root.cern,https://root.cern/root/html534/TPGON.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMVA::Event*TMVA::VariableTransformBase::fBackTransformedEventholds the current back-transformed event; TMVA::DataSetInfo&TMVA::VariableTransformBase::fDsi; TMVA::DataSetInfo*TMVA::VariableTransformBase::fDsiOutput; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fGetget variables/targets/spectators; TMVA::MsgLogger*TMVA::VariableTransformBase::fLogger! message logger; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fPutput variables/targets/spectators; TMVA::TMVAVersion_tTMVA::VariableTransformBase::fTMVAVersion; TMVA::Event*TMVA::VariableTransformBase::fTransformedEventholds the current transformed event. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableIdentityTransform( DataSetInfo& dsi ); constructor. void Initialize(); nothing to initialize. Bool_t PrepareTransformation(const vector<TMVA::Event*,allocator<TMVA::Event*> >& ); the identity does not need to be prepared, only calculate the normalization. void AttachXMLTo(void* parent); identity transformation to write to XML; Log() << kFATAL << ""Please implement writing of transformation as XML"" << Endl;. void ReadFromXML(void* trfnode); reding the identity transformation from XML. const TMVA::Event* Transform(const TMVA::Event *const , Int_t cls) const; identity transform returns same event. void MakeFunction(ostream& fout, const TString& fncName, Int_t part, UInt_t trCounter, Int_t cls); creates C++ code fragment of the indentity transform for inclusion in standalone C++ class. VariableIdentityTransform( DataSetInfo& dsi ). virtual ~VariableIdentityTransform( void ); {}. void WriteTransformationToStream(ostream& ) const; {}.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__VariableIdentityTransform.html:9154,Inherit,Inheritance,9154,root/html532/TMVA__VariableIdentityTransform.html,https://root.cern,https://root.cern/root/html532/TMVA__VariableIdentityTransform.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TMVA::Event*TMVA::VariableTransformBase::fBackTransformedEventholds the current back-transformed event; TMVA::DataSetInfo&TMVA::VariableTransformBase::fDsi; TMVA::DataSetInfo*TMVA::VariableTransformBase::fDsiOutput; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fGetget variables/targets/spectators; TMVA::MsgLogger*TMVA::VariableTransformBase::fLogger! message logger; TMVA::VariableTransformBase::VectorOfCharAndIntTMVA::VariableTransformBase::fPutput variables/targets/spectators; TMVA::TMVAVersion_tTMVA::VariableTransformBase::fTMVAVersion; TMVA::Event*TMVA::VariableTransformBase::fTransformedEventholds the current transformed event. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableRearrangeTransform( DataSetInfo& dsi ); constructor. ~VariableRearrangeTransform(). void Initialize(); initialization of the rearrangement transformation; (nothing to do). Bool_t PrepareTransformation(const vector<TMVA::Event*,allocator<TMVA::Event*> >& ); prepare transformation --> (nothing to do). const TMVA::Event* Transform(const TMVA::Event *const , Int_t cls) const. const TMVA::Event* InverseTransform(const TMVA::Event *const , Int_t cls) const. std::vector<TString>* GetTransformationStrings(Int_t cls) const; creates string with variable transformations applied. void AttachXMLTo(void* parent); // create XML description of Rearrange transformation. void ReadFromXML(void* trfnode); // Read the transformation matrices from the xml node. void PrintTransformation(ostream& o); prints the transformation ranges. void MakeFunction(ostream& fout, const TString& fncName, Int_t part, UInt_t trCounter, Int_t cls); creates a normalizin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__VariableRearrangeTransform.html:9104,Inherit,Inheritance,9104,root/html532/TMVA__VariableRearrangeTransform.html,https://root.cern,https://root.cern/root/html532/TMVA__VariableRearrangeTransform.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. static Int_tRooPrintable::_nameLength; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~RooAbsBinning(); Destructor. void printName(ostream& os) const; Print binning name. void printTitle(ostream& os) const; Print binning title. void printClassName(ostream& os) const; Print binning class name. void printArgs(ostream& os) const; Print binning arguments (the RooAbsReal objects represening; the variable bin boundaries for parameterized binning implementations. void printValue(ostream& os) const; Print binning value, i.e the bin boundary positions. void Streamer(TBuffer& ); Custom streamer implementing schema evolution between V1 and V2 persistent binnings. TObject* Clone(const char* newname = 0) const; { return clone(newname) ; }. RooAbsBinning* clone(const char* name = 0) const. Int_t numBins() const; Return number of bins. return numBoundaries(). Int_t binNumber(Double_t x) const. Int_t rawBinNumber(Double_t x) const; { return binNumber(x) ; }. Double_t binCenter(Int_t bin) const. Double_t binWidth(Int_t bin) const. Double_t binLow(Int_t bin) const. Double_t binHigh(Int_t bin) const. Bool_t isUniform() const; { return kFALSE ; }. void setRange(Double_t xlo, Double_t xhi). void setMin(Double_t xlo); Change lower bound to xlo. void setMax(Double_t xhi); Change upper bound to xhi. Double_t lowBound() const. Double_t highBound() const. Double_t averageBinWidth(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsBinning.html:8203,variab,variable,8203,root/html534/RooAbsBinning.html,https://root.cern,https://root.cern/root/html534/RooAbsBinning.html,4,"['parameteriz', 'variab']","['parameterized', 'variable']"
Modifiability,". Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. static Int_tRooPrintable::_nameLength; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~RooAbsBinning(); Destructor. void printName(ostream& os) const; Print binning name. void printTitle(ostream& os) const; Print binning title. void printClassName(ostream& os) const; Print binning class name. void printArgs(ostream& os) const; Print binning arguments (the RooAbsReal objects represening; the variable bin boundaries for parameterized binning implementations. void printValue(ostream& os) const; Print binning value, i.e the bin boundary positions. void Streamer(TBuffer& b); Custom streamer implementing schema evolution between V1 and V2 persistent binnings. TObject* Clone(const char* newname = 0) const; { return clone(newname) ; }. RooAbsBinning* clone(const char* name = 0) const. Int_t numBins() const; Return number of bins. return numBoundaries() const. Int_t binNumber(Double_t x) const. Int_t rawBinNumber(Double_t x) const; { return binNumber(x) ; }. Double_t binCenter(Int_t bin) const. Double_t binWidth(Int_t bin) const. Double_t binLow(Int_t bin) const. Double_t binHigh(Int_t bin) const. Bool_t isUniform() const; { return kFALSE ; }. void setRange(Double_t xlo, Double_t xhi). void setMin(Double_t xlo); Change lower bound to xlo. void setMax(Double_t xhi); Change upper bound to xhi. Double_t lowBound() const. Double_t highBound() const. Double_t averageBi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsBinning.html:8129,variab,variable,8129,root/html526/RooAbsBinning.html,https://root.cern,https://root.cern/root/html526/RooAbsBinning.html,2,"['parameteriz', 'variab']","['parameterized', 'variable']"
Modifiability,". Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. static Int_tRooPrintable::_nameLength; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~RooAbsBinning(); Destructor. void printName(ostream& os) const; Print binning name. void printTitle(ostream& os) const; Print binning title. void printClassName(ostream& os) const; Print binning class name. void printArgs(ostream& os) const; Print binning arguments (the RooAbsReal objects represening; the variable bin boundaries for parameterized binning implementations. void printValue(ostream& os) const; Print binning value, i.e the bin boundary positions. void Streamer(TBuffer& b); Custom streamer implementing schema evolution between V1 and V2 persistent binnings. TObject* Clone(const char* newname = 0) const; { return clone(newname) ; }. RooAbsBinning* clone(const char* name = 0) const. Int_t numBins() const; Return number of bins. return numBoundaries(). Int_t binNumber(Double_t x) const. Int_t rawBinNumber(Double_t x) const; { return binNumber(x) ; }. Double_t binCenter(Int_t bin) const. Double_t binWidth(Int_t bin) const. Double_t binLow(Int_t bin) const. Double_t binHigh(Int_t bin) const. Bool_t isUniform() const; { return kFALSE ; }. void setRange(Double_t xlo, Double_t xhi). void setMin(Double_t xlo); Change lower bound to xlo. void setMax(Double_t xhi); Change upper bound to xhi. Double_t lowBound() const. Double_t highBound() const. Double_t averageBinWidth",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAbsBinning.html:8115,variab,variable,8115,root/html528/RooAbsBinning.html,https://root.cern,https://root.cern/root/html528/RooAbsBinning.html,6,"['parameteriz', 'variab']","['parameterized', 'variable']"
Modifiability,". Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Bool_tfChangedtrue if file has changed; TGClient*fClientclient to which mime types belong (display server); TStringfFilenamefile name of mime type file; TOrdCollection*fListlist of mime types. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGMimeTypes(TGClient* client, const char* file); Create a mime type cache. Read the mime types file ""filename"" and; built a list of mime types. ~TGMimeTypes(); Delete mime type pool. TGMimeTypes(const TGMimeTypes& gmt); Copy constructor. TGMimeTypes& operator=(const TGMimeTypes& gmt); Assignment operator. TGMime * Find(const char* filename); Given a filename find the matching mime type object. const TGPicture * GetIcon(const char* filename, Bool_t small_icon); Return icon belonging to mime type of filename. Bool_t GetAction(const char* filename, char* action); Return in action the mime action string belonging to filename. Bool_t GetType(const char* filename, char* type); Return in type the mime type belonging to filename. void Print(Option_t* option = """") const; Print list of mime types. void SaveMimes(); Save mime types in user's mime type file. void AddType(const char* type, const char* pat, const char* icon, const char* sicon, const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGMimeTypes.html:6302,Inherit,Inheritance,6302,root/html602/TGMimeTypes.html,https://root.cern,https://root.cern/root/html602/TGMimeTypes.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". Definition at line 33 of file TRInterface.cxx. ◆ ~TRInterface(). TRInterface::~TRInterface ; (; ). Definition at line 71 of file TRInterface.cxx. Member Function Documentation. ◆ Assign() [1/3]. template<typename T > . void ROOT::R::TRInterface::Assign ; (; const T & ; var, . const TString & ; name . ). inline . Template method to assign C++ variables into R environment. ; Parameters. varany R wrappable datatype ; namename of the variable in R's environment . Definition at line 258 of file TRInterface.h. ◆ Assign() [2/3]. void TRInterface::Assign ; (; const TRDataFrame & ; df, . const TString & ; name . ). Method to assign TRDataFrame in R's environment. ; Parameters. dfTRDataFrame ; namename of the variable in R's environment . Definition at line 154 of file TRInterface.cxx. ◆ Assign() [3/3]. void TRInterface::Assign ; (; const TRFunctionExport & ; fun, . const TString & ; name . ). Method to assign TRFunctionExport in R's environment. ; Parameters. funTRFunctionExport ; namename of the variable in R's environment . Definition at line 148 of file TRInterface.cxx. ◆ Class(). static TClass * ROOT::R::TRInterface::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * ROOT::R::TRInterface::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t ROOT::R::TRInterface::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 320 of file TRInterface.h. ◆ DeclFileName(). static const char * ROOT::R::TRInterface::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 320 of file TRInterface.h. ◆ Eval() [1/2]. TRObject TRInterface::Eval ; (; const TString & ; code). Method to eval R code and you get the result in a TRObject. ; Parameters. codeR code . Returnsa TRObject with result ; Definition at line 113 of file TRInterface.cxx. ◆ Eval() [2/2]. Int_t TRInterface::Eval ; (; const TString & ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1R_1_1TRInterface.html:19872,variab,variable,19872,doc/master/classROOT_1_1R_1_1TRInterface.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1R_1_1TRInterface.html,1,['variab'],['variable']
Modifiability,". Definition at line 69 of file DataSet.h. ◆ GetNTrainingEvents(). Long64_t TMVA::DataSet::GetNTrainingEvents ; (; ); const. inline . Definition at line 68 of file DataSet.h. ◆ GetNVariables(). UInt_t TMVA::DataSet::GetNVariables ; (; ); const. access the number of variables through the datasetinfo ; Definition at line 216 of file DataSet.cxx. ◆ GetResults(). TMVA::Results * TMVA::DataSet::GetResults ; (; const TString & ; resultsName, . Types::ETreeType ; type, . Types::EAnalysisType ; analysistype . ). Definition at line 265 of file DataSet.cxx. ◆ GetTestEvent(). const Event * TMVA::DataSet::GetTestEvent ; (; Long64_t ; ievt); const. inline . Definition at line 75 of file DataSet.h. ◆ GetTrainingEvent(). const Event * TMVA::DataSet::GetTrainingEvent ; (; Long64_t ; ievt); const. inline . Definition at line 74 of file DataSet.h. ◆ GetTree(). TTree * TMVA::DataSet::GetTree ; (; Types::ETreeType ; type). create the test/trainings tree with all the variables, the weights, the classes, the targets, the spectators, the MVA outputs ; Definition at line 609 of file DataSet.cxx. ◆ HasNegativeEventWeights(). Bool_t TMVA::DataSet::HasNegativeEventWeights ; (; ); const. inline . Definition at line 101 of file DataSet.h. ◆ IncrementNClassEvents(). void TMVA::DataSet::IncrementNClassEvents ; (; Int_t ; type, . UInt_t ; classNumber . ). Definition at line 151 of file DataSet.cxx. ◆ InitSampling(). void TMVA::DataSet::InitSampling ; (; Float_t ; fraction, . Float_t ; weight, . UInt_t ; seed = 0 . ). initialize random or importance sampling ; Definition at line 459 of file DataSet.cxx. ◆ IsA(). virtual TClass * TMVA::DataSet::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 175 of file DataSet.h. ◆ Log(). MsgLogger & TMVA::DataSet::Log ; (; ); const. inlineprivate . Definition at line 164 of file DataSet.h. ◆ MoveTrainingBlock(). void TMVA::DataSet::MoveTrainingBlock ; (; Int_t ; blockInd, . Types::ETreeTy",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DataSet.html:22738,variab,variables,22738,doc/master/classTMVA_1_1DataSet.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DataSet.html,1,['variab'],['variables']
Modifiability,". Definition at line 95 of file Reader.h. ◆ GetMVAErrorUpper(). Double_t TMVA::Reader::GetMVAErrorUpper ; (; ); const. inline . Definition at line 96 of file Reader.h. ◆ GetName(). virtual const char * TMVA::Reader::GetName ; (; ); const. inlinevirtual . Returns name of object. ; This default method returns the class name. Classes that give objects a name should override this method. ; Reimplemented from TObject.; Definition at line 113 of file Reader.h. ◆ GetProba(). Double_t TMVA::Reader::GetProba ; (; const TString & ; methodTag, . Double_t ; ap_sig = 0.5, . Double_t ; mvaVal = -9999999 . ). evaluates probability of MVA for given set of input variables ; Definition at line 706 of file Reader.cxx. ◆ GetRarity(). Double_t TMVA::Reader::GetRarity ; (; const TString & ; methodTag, . Double_t ; mvaVal = -9999999 . ). evaluates the MVA's rarity ; Definition at line 737 of file Reader.cxx. ◆ Init(). void TMVA::Reader::Init ; (; void ; ). private . default initialisation (no member variables) ; Definition at line 292 of file Reader.cxx. ◆ IsA(). virtual TClass * TMVA::Reader::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Reimplemented from TMVA::Configurable.; Definition at line 164 of file Reader.h. ◆ Log(). MsgLogger & TMVA::Reader::Log ; (; ); const. inlineprivate . Definition at line 162 of file Reader.h. ◆ SetVerbose(). void TMVA::Reader::SetVerbose ; (; Bool_t ; v). inline . Definition at line 115 of file Reader.h. ◆ Streamer(). virtual void TMVA::Reader::Streamer ; (; TBuffer & ; R__b). virtual . Stream an object of class TObject. ; Reimplemented from TMVA::Configurable. ◆ StreamerNVirtual(). void TMVA::Reader::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 164 of file Reader.h. ◆ Verbose(). Bool_t TMVA::Reader::Verbose ; (; void ; ); const. inline . Definition at line 114 of file Reader.h. Member Data Documentation. ◆ fCalculateError. Bool_t TMVA::Reader::fCalculateError. private . error ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Reader.html:29267,variab,variables,29267,doc/master/classTMVA_1_1Reader.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Reader.html,1,['variab'],['variables']
Modifiability,". Double_t GetValueFromMethod(Int_t i, TLeaf* leaf) const; Return result of a leafobject method. void* GetValuePointerFromMethod(Int_t i, TLeaf* leaf) const; Return result of a leafobject method. Bool_t IsInteger(Bool_t fast = kTRUE) const; return TRUE if the formula corresponds to one single Tree leaf; and this leaf is short, int or unsigned short, int; When a leaf is of type integer or string, the generated histogram is forced; to have an integer bin width. Bool_t IsLeafInteger(Int_t code) const; return TRUE if the leaf corresponding to code is short, int or unsigned; short, int When a leaf is of type integer, the generated histogram is; forced to have an integer bin width. Bool_t IsString() const; return TRUE if the formula is a string. Bool_t IsString(Int_t oper) const; (fOper[i]>=105000 && fOper[i]<110000) || fOper[i] == kStrings). Bool_t IsLeafString(Int_t code) const; return TRUE if the leaf or data member corresponding to code is a string. char * PrintValue(Int_t mode = 0) const; Return value of variable as a string. mode = -2 : Print line with ***; mode = -1 : Print column names; mode = 0 : Print column values. char * PrintValue(Int_t mode, Int_t instance, const char* decform = ""9.9"") const; Return value of variable as a string. mode = -2 : Print line with ***; mode = -1 : Print column names; mode = 0 : Print column values; decform contains the requested format (with the same convention as printf). void ResetLoading(); Tell the formula that we are going to request a new entry. void SetAxis(TAxis* axis = 0); Set the axis (in particular get the type). void Streamer(TBuffer& ); Stream an object of class TTreeFormula. Bool_t StringToNumber(Int_t code); Try to 'demote' a string into an array bytes. If this is not possible,; return false. void UpdateFormulaLeaves(); this function is called TTreePlayer::UpdateFormulaLeaves, itself; called by TChain::LoadTree when a new Tree is loaded.; Because Trees in a TChain may have a different list of leaves, one; must update ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TTreeFormula.html:25350,variab,variable,25350,root/html534/TTreeFormula.html,https://root.cern,https://root.cern/root/html534/TTreeFormula.html,6,['variab'],['variable']
Modifiability,". Double_t GetValueFromMethod(Int_t i, TLeaf* leaf) const; Return result of a leafobject method. void* GetValuePointerFromMethod(Int_t i, TLeaf* leaf) const; Return result of a leafobject method. Bool_t IsInteger(Bool_t fast = kTRUE) const; return TRUE if the formula corresponds to one single Tree leaf; and this leaf is short, int or unsigned short, int; When a leaf is of type integer or string, the generated histogram is forced; to have an integer bin width. Bool_t IsLeafInteger(Int_t code) const; return TRUE if the leaf corresponding to code is short, int or unsigned; short, int When a leaf is of type integer, the generated histogram is; forced to have an integer bin width. Bool_t IsString() const; return TRUE if the formula is a string. Bool_t IsString(Int_t oper) const; (fOper[i]>=105000 && fOper[i]<110000) || fOper[i] == kStrings). Bool_t IsLeafString(Int_t code) const; return TRUE if the leaf or data member corresponding to code is a string. char * PrintValue(Int_t mode = 0) const; Return value of variable as a string. mode = -2 : Print line with ***; mode = -1 : Print column names; mode = 0 : Print column values. char * PrintValue(Int_t mode, Int_t instance, const char* decform = ""9.9"") const; Return value of variable as a string. mode = -2 : Print line with ***; mode = -1 : Print column names; mode = 0 : Print column values; decform contains the requested format (with the same convention as printf). void ResetLoading(); Tell the formula that we are going to request a new entry. void SetAxis(TAxis* axis = 0); Set the axis (in particular get the type). void Streamer(TBuffer& b); Stream an object of class TTreeFormula. Bool_t StringToNumber(Int_t code); Try to 'demote' a string into an array bytes. If this is not possible,; return false. void UpdateFormulaLeaves(); this function is called TTreePlayer::UpdateFormulaLeaves, itself; called by TChain::LoadTree when a new Tree is loaded.; Because Trees in a TChain may have a different list of leaves, one; must update",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTreeFormula.html:25039,variab,variable,25039,root/html528/TTreeFormula.html,https://root.cern,https://root.cern/root/html528/TTreeFormula.html,4,['variab'],['variable']
Modifiability,". Double_t NormVariable(Double_t x, Double_t xmin, Double_t xmax); normalise to output range: [-1, 1]. Double_t GetSeparation(TH1* S, TH1* B) const; compute ""separation"" defined as; <s2> = (1/2) Int_-oo..+oo { (S^2(x) - B^2(x))/(S(x) + B(x)) dx }. Double_t GetSeparation(const TMVA::PDF& pdfS, const TMVA::PDF& pdfB) const; compute ""separation"" defined as; <s2> = (1/2) Int_-oo..+oo { (S(x)2 - B(x)2)/(S(x) + B(x)) dx }. void ComputeStat(const vector<TMVA::Event*>& , vector<Float_t>* , Double_t& , Double_t& , Double_t& , Double_t& , Double_t& , Double_t& , Int_t signalClass, Bool_t norm = kFALSE); sanity check. TMatrixD* GetSQRootMatrix(TMatrixDSym* symMat); square-root of symmetric matrix; of course the resulting sqrtMat is also symmetric, but it's easier to; treat it as a general matrix. const TMatrixD* GetCorrelationMatrix(const TMatrixD* covMat); turns covariance into correlation matrix. TH1* projNormTH1F(TTree* theTree, const TString& theVarName, const TString& name, Int_t nbins, Double_t xmin, Double_t xmax, const TString& cut); projects variable from tree into normalised histogram. Double_t NormHist(TH1* theHist, Double_t norm = 1.0); normalises histogram. TList* ParseFormatLine(TString theString, const char* sep = "":""); Parse the string and cut into labels separated by "":"". vector<Int_t>* ParseANNOptionString(TString theOptions, Int_t nvar, vector<Int_t>* nodes); parse option string for ANN methods; default settings (should be defined in theOption string). Bool_t CheckSplines(const TH1* , const TSpline* ); check quality of splining by comparing splines and histograms in each bin. std::vector<Double_t> MVADiff(vector<Double_t>& , vector<Double_t>& ); computes difference between two vectors. void Scale(vector<Double_t>& , Double_t ); scales double vector. void Scale(vector<Float_t>& , Float_t ); scales float vector. void UsefulSortAscending(vector<std::vector<Double_t> >& , vector<TString>* vs = 0); sort 2D vector (AND in parallel a TString vector) in such a way; t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__Tools.html:6199,variab,variable,6199,root/html528/TMVA__Tools.html,https://root.cern,https://root.cern/root/html528/TMVA__Tools.html,4,['variab'],['variable']
Modifiability,". EnumeratorkBypassStreamer ; kForgetBits . Definition at line 36 of file TClonesArray.h. Constructor & Destructor Documentation. ◆ TClonesArray() [1/4]. TClonesArray::TClonesArray ; (; ). Default Constructor. ; Definition at line 188 of file TClonesArray.cxx. ◆ TClonesArray() [2/4]. TClonesArray::TClonesArray ; (; const char * ; classname, . Int_t ; s = 1000, . Bool_t ; call_dtor = kFALSE . ). Create an array of clone objects of classname. ; The class must inherit from TObject. The second argument s indicates an approximate number of objects that will be entered in the array. If more than s objects are entered, the array will be automatically expanded.; The third argument is not used anymore and only there for backward compatibility reasons. ; Definition at line 204 of file TClonesArray.cxx. ◆ TClonesArray() [3/4]. TClonesArray::TClonesArray ; (; const TClass * ; cl, . Int_t ; s = 1000, . Bool_t ; call_dtor = kFALSE . ). Create an array of clone objects of class cl. ; The class must inherit from TObject. The second argument, s, indicates an approximate number of objects that will be entered in the array. If more than s objects are entered, the array will be automatically expanded.; The third argument is not used anymore and only there for backward compatibility reasons. ; Definition at line 220 of file TClonesArray.cxx. ◆ TClonesArray() [4/4]. TClonesArray::TClonesArray ; (; const TClonesArray & ; tc). Copy ctor. ; Definition at line 229 of file TClonesArray.cxx. ◆ ~TClonesArray(). TClonesArray::~TClonesArray ; (; ). virtual . Delete a clones array. ; Definition at line 281 of file TClonesArray.cxx. Member Function Documentation. ◆ AbsorbObjects() [1/2]. void TClonesArray::AbsorbObjects ; (; TClonesArray * ; tc). Directly move the object pointers from tc without cloning (copying). ; This TClonesArray takes over ownership of all of tc's object pointers. The tc array is left empty upon return. ; Definition at line 992 of file TClonesArray.cxx. ◆ AbsorbObjects() [2/2].",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClonesArray.html:28045,inherit,inherit,28045,doc/master/classTClonesArray.html,https://root.cern,https://root.cern/doc/master/classTClonesArray.html,1,['inherit'],['inherit']
Modifiability,". Event_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » Event_t. class Event_t. GuiTypes. Types used by the GUI classes. Function Members (Methods); public:. Event_t(); Event_t(const Event_t&); ~Event_t(); Event_t&operator=(const Event_t&). Data Members; public:. UInt_tfCodekey or button code; Int_tfCountif non-zero, at least this many more exposes; Int_tfFormatNext fields only used by kClientMessageEvent; Handle_tfHandlegeneral resource handle (used for atoms or windows); UInt_tfHeightwidth and height of exposed area; Bool_tfSendEventtrue if event came from SendEvent; UInt_tfStatekey or button mask; Time_tfTimetime event event occured in ms; EGEventTypefTypeof event (see EGEventType); Long_tfUser[5]5 longs can be used by client message events; UInt_tfWidth; Window_tfWindowwindow reported event is relative to; Int_tfX; Int_tfXRoot; Int_tfYpointer x, y coordinates in event window; Int_tfYRootcoordinates relative to root. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: Tue Sep 8 16:58:27 2015 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/Event_t.html:1110,Inherit,Inheritance,1110,root/html534/Event_t.html,https://root.cern,https://root.cern/root/html534/Event_t.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". Event_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » Event_t. class Event_t. GuiTypes. Types used by the GUI classes. Function Members (Methods); public:. ~Event_t(); Event_t(); Event_t(const Event_t&); Event_t(Event_t&&); Event_t&operator=(const Event_t&); Event_t&operator=(Event_t&&). Data Members; public:. UInt_tfCodekey or button code; Int_tfCountif non-zero, at least this many more exposes; Int_tfFormatNext fields only used by kClientMessageEvent; Handle_tfHandlegeneral resource handle (used for atoms or windows); UInt_tfHeightwidth and height of exposed area; Bool_tfSendEventtrue if event came from SendEvent; UInt_tfStatekey or button mask; Time_tfTimetime event event occured in ms; EGEventTypefTypeof event (see EGEventType); Long_tfUser[5]5 longs can be used by client message events; UInt_tfWidthwidth and height of exposed area; Window_tfWindowwindow reported event is relative to; Int_tfXpointer x, y coordinates in event window; Int_tfXRootcoordinates relative to root; Int_tfYpointer x, y coordinates in event window; Int_tfYRootcoordinates relative to root. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: Tue Jun 30 14:21:10 2015 » Last generated: 2015-06-30 14:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/Event_t.html:1260,Inherit,Inheritance,1260,root/html602/Event_t.html,https://root.cern,https://root.cern/root/html602/Event_t.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". Event_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » Event_t. class Event_t. GuiTypes. Types used by the GUI classes. Function Members (Methods); public:. ~Event_t(); Event_t(); Event_t(const Event_t&); Event_t(Event_t&&); Event_t&operator=(const Event_t&); Event_t&operator=(Event_t&&). Data Members; public:. UInt_tfCodekey or button code; Int_tfCountif non-zero, at least this many more exposes; Int_tfFormatNext fields only used by kClientMessageEvent; Handle_tfHandlegeneral resource handle (used for atoms or windows); UInt_tfHeightwidth and height of exposed area; Bool_tfSendEventtrue if event came from SendEvent; UInt_tfStatekey or button mask; Time_tfTimetime event event occured in ms; EGEventTypefTypeof event (see EGEventType); Long_tfUser[5]5 longs can be used by client message events; UInt_tfWidthwidth and height of exposed area; Window_tfWindowwindow reported event is relative to; Int_tfXpointer x, y coordinates in event window; Int_tfXRootcoordinates relative to root; Int_tfYpointer x, y coordinates in event window; Int_tfYRootcoordinates relative to root. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: Tue Sep 8 17:32:43 2015 » Last generated: 2015-09-08 17:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/Event_t.html:1260,Inherit,Inheritance,1260,root/html604/Event_t.html,https://root.cern,https://root.cern/root/html604/Event_t.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". FileStat_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » FileStat_t. class FileStat_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System. Function Members (Methods); public:. FileStat_t(); FileStat_t(const FileStat_t&); ~FileStat_t(); FileStat_t&operator=(const FileStat_t&). Data Members; public:. Long_tfDevdevice id; Int_tfGidgroup id of owner; Long_tfInoinode; Bool_tfIsLinksymbolic link; Int_tfModeprotection (combination of EFileModeMask bits); Long_tfMtimemodification date; Long64_tfSizetotal size in bytes; Int_tfUiduser id of owner; TStringfUrlend point url of file. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FileStat_t(); { }. TSystem& operator=(const FileStat_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/FileStat_t.html:799,Inherit,Inheritance,799,root/html534/FileStat_t.html,https://root.cern,https://root.cern/root/html534/FileStat_t.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". FileStat_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » FileStat_t. class FileStat_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System.; This is not an ABC in the strict sense of the (C++) word. For; every member function there is an implementation (often not more; than a call to AbstractMethod() which prints a warning saying; that the method should be overridden in a derived class), which; allows a simple partial implementation for new OS'es. Function Members (Methods); public:. ~FileStat_t(); FileStat_t(); FileStat_t(FileStat_t&&); FileStat_t(const FileStat_t&); FileStat_t&operator=(FileStat_t&&); FileStat_t&operator=(const FileStat_t&). Data Members; public:. Long_tfDevdevice id; Int_tfGidgroup id of owner; Long_tfInoinode; Bool_tfIsLinksymbolic link; Int_tfModeprotection (combination of EFileModeMask bits); Long_tfMtimemodification date; Long64_tfSizetotal size in bytes; Int_tfUiduser id of owner; TStringfUrlend point url of file. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FileStat_t(); { }. TSystem& operator=(const TSystem&). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-06-30 14:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/FileStat_t.html:1197,Inherit,Inheritance,1197,root/html602/FileStat_t.html,https://root.cern,https://root.cern/root/html602/FileStat_t.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". FileStat_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » FileStat_t. class FileStat_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System.; This is not an ABC in the strict sense of the (C++) word. For; every member function there is an implementation (often not more; than a call to AbstractMethod() which prints a warning saying; that the method should be overridden in a derived class), which; allows a simple partial implementation for new OS'es. Function Members (Methods); public:. ~FileStat_t(); FileStat_t(); FileStat_t(FileStat_t&&); FileStat_t(const FileStat_t&); FileStat_t&operator=(FileStat_t&&); FileStat_t&operator=(const FileStat_t&). Data Members; public:. Long_tfDevdevice id; Int_tfGidgroup id of owner; Long_tfInoinode; Bool_tfIsLinksymbolic link; Int_tfModeprotection (combination of EFileModeMask bits); Long_tfMtimemodification date; Long64_tfSizetotal size in bytes; Int_tfUiduser id of owner; TStringfUrlend point url of file. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FileStat_t(); { }. TSystem& operator=(const TSystem&). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 17:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/FileStat_t.html:1197,Inherit,Inheritance,1197,root/html604/FileStat_t.html,https://root.cern,https://root.cern/root/html604/FileStat_t.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". Float_t*fATreeEventevent variables; Int_tfATreeTypetype of event (=classIndex); Float_tfATreeWeightweight of the event; TMVA::Types::EAnalysisTypefAnalysisType! the training type; TMVA::Factory::DataAssignTypefDataAssignType! flags for data assigning; TMVA::DataInputHandler*fDataInputHandler; TMVA::DataSetManager*fDataSetManagerDSMTEST; vector<TMVA::VariableTransformBase*>fDefaultTrfs! list of transformations on default DataSet; TStringfJobName! jobname, used as extension in weight file names; TMVA::Factory::MVectorfMethods! all MVA methods; TStringfOptions! option string given by construction (presently only ""V""); vector<TTree*>fTestAssignTree! for each class: tmp tree if user wants to assign the events directly; vector<TTree*>fTrainAssignTree! for each class: tmp tree if user wants to assign the events directly; TStringfTransformations! List of transformations to test; Bool_tfVerbose! verbose mode; static TFile*fgTargetFile! ROOT output file. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; Factory(TString theJobName, TFile* theTargetFile, TString theOption = """"); standard constructor; jobname : this name will appear in all weight file names produced by the MVAs; theTargetFile : output ROOT file; the test tree and all evaluation plots; will be stored here; theOption : option string; currently: ""V"" for verbose. void Greetings(); print welcome message; options are: kLogoWelcomeMsg, kIsometricWelcomeMsg, kLeanWelcomeMsg. ~Factory( void ); destructor; delete fATreeEvent;. void DeleteAllMethods( void ); delete methods. void SetVerbose(Bool_t v = kTRUE). TMVA::DataSetInfo& AddDataSet( DataSetInfo &dsi ). TMVA::DataSetInfo& AddDataSet(const TString& ). TTree* CreateEventAssignTrees(const TString& name); create the data assignment tree (for event-wise data assignment by user). void AddSignalTrainingEvent(const vector<Double_t>& event, Double_t weight = 1.0); add signal training event. void AddSignalTestEvent(const vector<Double_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__Factory.html:12626,Inherit,Inheritance,12626,root/html532/TMVA__Factory.html,https://root.cern,https://root.cern/root/html532/TMVA__Factory.html,4,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". Float_tTTUBE::fAspectRatiodefines (the ellipse semi-axis in Y)/(the ellipse semi-axis in X); Double_t*TTUBE::fCoTab! Table of cos(fPhi1) .... cos(fPhil+fDphi1); Float_tTTUBE::fDzhalf length in z; Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TMaterial*TShape::fMaterialPointer to material; TStringTNamed::fNameobject identifier; Int_tTTUBE::fNdivnumber of segments (precision); Int_tTShape::fNumberShape number; Float_tTTUBS::fPhi1first phi limit; Float_tTTUBS::fPhi2second phi limit; Float_tTTUBE::fRmaxellipse semi-axis in X outside; Float_tfRmax2outside radius at the high z limit; Float_tTTUBE::fRminellipse semi-axis in X inside; Float_tfRmin2inside radius at the high z limit; Double_t*TTUBE::fSiTab! Table of sin(fPhi1) .... sin(fPhil+fDphi1); TStringTNamed::fTitleobject title; Int_tTShape::fVisibilityVisibility flag. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TCONS(); CONS shape default constructor. TCONS(const char* name, const char* title, const char* material, Float_t dz, Float_t rmin1, Float_t rmax1, Float_t rmin2, Float_t rmax2, Float_t phi1, Float_t phi2); CONS shape normal constructor. TCONS(const char* name, const char* title, const char* material, Float_t rmax1, Float_t dz, Float_t phi1, Float_t phi2, Float_t rmax2 = 0); CONS shape normal constructor. ~TCONS(); CONS shape default destructor. void SetPoints(Double_t* points) const; Create CONS points. TCONS(). Float_t GetRmin2() const; {return fRmin2;}. Float_t GetRmax2() const; {return fRmax2;}. » Author: Nenad Buncic 18/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/g3d:$Id$ » Last generated: 2015-03-12 16:37; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TCONS.html:9550,Inherit,Inheritance,9550,root/html534/TCONS.html,https://root.cern,https://root.cern/root/html534/TCONS.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". Float_tTTUBE::fAspectRatiodefines (the ellipse semi-axis in Y)/(the ellipse semi-axis in X); Double_t*TTUBE::fCoTab! Table of cos(fPhi1) .... cos(fPhil+fDphi1); Float_tTTUBE::fDzhalf length in z; Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TMaterial*TShape::fMaterialPointer to material; TStringTNamed::fNameobject identifier; Int_tTTUBE::fNdivnumber of segments (precision); Int_tTShape::fNumberShape number; Float_tTTUBS::fPhi1first phi limit; Float_tTTUBS::fPhi2second phi limit; Float_tTTUBE::fRmaxellipse semi-axis in X outside; Float_tfRmax2outside radius at the high z limit; Float_tTTUBE::fRminellipse semi-axis in X inside; Float_tfRmin2inside radius at the high z limit; Double_t*TTUBE::fSiTab! Table of sin(fPhi1) .... sin(fPhil+fDphi1); TStringTNamed::fTitleobject title; Int_tTShape::fVisibilityVisibility flag. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TCONS(); CONS shape default constructor. TCONS(const char* name, const char* title, const char* material, Float_t dz, Float_t rmin1, Float_t rmax1, Float_t rmin2, Float_t rmax2, Float_t phi1, Float_t phi2); CONS shape normal constructor. TCONS(const char* name, const char* title, const char* material, Float_t rmax1, Float_t dz, Float_t phi1, Float_t phi2, Float_t rmax2 = 0); CONS shape normal constructor. ~TCONS(); CONS shape default destructor. void SetPoints(Double_t* points) const; Create CONS points. TCONS(). Float_t GetRmin2() const; {return fRmin2;}. Float_t GetRmax2() const; {return fRmax2;}. » Author: Nenad Buncic 18/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/g3d:$Id$ » Last generated: 2015-06-02 15:39; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TCONS.html:10004,Inherit,Inheritance,10004,root/html604/TCONS.html,https://root.cern,https://root.cern/root/html604/TCONS.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". Float_tTTUBE::fAspectRatiodefines (the ellipse semi-axis in Y)/(the ellipse semi-axis in X); Double_t*TTUBE::fCoTab! Table of cos(fPhi1) .... cos(fPhil+fDphi1); Float_tTTUBE::fDzhalf length in z; Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; TMaterial*TShape::fMaterialPointer to material; TStringTNamed::fNameobject identifier; Int_tTTUBE::fNdivnumber of segments (precision); Int_tTShape::fNumberShape number; Float_tTTUBS::fPhi1first phi limit; Float_tTTUBS::fPhi2second phi limit; Float_tTTUBE::fRmaxellipse semi-axis in X outside; Float_tfRmax2outside radius at the high z limit; Float_tTTUBE::fRminellipse semi-axis in X inside; Float_tfRmin2inside radius at the high z limit; Double_t*TTUBE::fSiTab! Table of sin(fPhi1) .... sin(fPhil+fDphi1); TStringTNamed::fTitleobject title; Int_tTShape::fVisibilityVisibility flag. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TCONS(); CONS shape default constructor. TCONS(const char* name, const char* title, const char* material, Float_t dz, Float_t rmin1, Float_t rmax1, Float_t rmin2, Float_t rmax2, Float_t phi1, Float_t phi2); CONS shape normal constructor. TCONS(const char* name, const char* title, const char* material, Float_t rmax1, Float_t dz, Float_t phi1, Float_t phi2, Float_t rmax2 = 0); CONS shape normal constructor. ~TCONS(); CONS shape default destructor. void SetPoints(Double_t* points) const; Create CONS points. TCONS(). Float_t GetRmin2() const; {return fRmin2;}. Float_t GetRmax2() const; {return fRmax2;}. » Author: Nenad Buncic 18/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/g3d:$Id$ » Last generated: 2015-06-30 14:40; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TCONS.html:10004,Inherit,Inheritance,10004,root/html602/TCONS.html,https://root.cern,https://root.cern/root/html602/TCONS.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". Float_t ; x13 = 0, . Float_t ; x14 = 0 . ). virtual . Fill a Ntuple: Each Ntuple item is an argument. ; Definition at line 191 of file TNtuple.cxx. ◆ Fill() [5/5]. Int_t TNtuple::Fill ; (; Int_t ; x0). inline . Definition at line 48 of file TNtuple.h. ◆ GetArgs(). Float_t * TNtuple::GetArgs ; (; ); const. inline . Definition at line 56 of file TNtuple.h. ◆ GetNvar(). virtual Int_t TNtuple::GetNvar ; (; ); const. inlinevirtual . Definition at line 55 of file TNtuple.h. ◆ IsA(). TClass * TNtuple::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Definition at line 61 of file TNtuple.h. ◆ operator=(). TNtuple & TNtuple::operator= ; (; const TNtuple & ; ). privatedelete . ◆ ReadStream(). Long64_t TNtuple::ReadStream ; (; std::istream & ; inputStream, . const char * ; branchDescriptor = """", . char ; delimiter = ' ' . ). overridevirtual . Read from filename as many columns as variables in the ntuple the function returns the number of rows found in the file The second argument ""branchDescriptor"" is currently not used. ; Lines in the input file starting with ""#"" are ignored. ; Reimplemented from TTree.; Definition at line 220 of file TNtuple.cxx. ◆ ResetBranchAddress(). void TNtuple::ResetBranchAddress ; (; TBranch * ; branch). overridevirtual . Reset the branch addresses to the internal fArgs array. ; Use this method when the addresses were changed via calls to SetBranchAddress(). ; Reimplemented from TTree.; Definition at line 133 of file TNtuple.cxx. ◆ ResetBranchAddresses(). void TNtuple::ResetBranchAddresses ; (; ). overridevirtual . Reset the branch addresses to the internal fArgs array. ; Use this method when the addresses were changed via calls to SetBranchAddress(). ; Reimplemented from TTree.; Definition at line 147 of file TNtuple.cxx. ◆ Streamer(). void TNtuple::Streamer ; (; TBuffer & ; b). overridevirtual . Stream a class object. ; Reimplemented from TNamed.; Definition at line 249 of file TNtupl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNtuple.html:53556,variab,variables,53556,doc/master/classTNtuple.html,https://root.cern,https://root.cern/doc/master/classTNtuple.html,1,['variab'],['variables']
Modifiability,". FontAttributes_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » GUI; » GUI; » FontAttributes_t. class FontAttributes_t. TGFont and TGFontPool. Encapsulate fonts used in the GUI system.; TGFontPool provides a pool of fonts. Function Members (Methods); public:. FontAttributes_t(); FontAttributes_t(const FontAttributes_t& f); ~FontAttributes_t(); FontAttributes_t&operator=(const FontAttributes_t& f). Data Members; public:. const char*fFamilyFont family. The most important field.; Int_tfOverstrikeNon-zero for overstrike font.; Int_tfPointsizePointsize of font, 0 for default size, or negative number meaning pixel size.; Int_tfSlantSlant flag; see below for def'n.; Int_tfUnderlineNon-zero for underline font.; Int_tfWeightWeight flag; see below for def'n. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FontAttributes_t(); { }. FontAttributes_t(const FontAttributes_t& f); { }. FontAttributes_t& operator=(const FontAttributes_t& f). » Author: Fons Rademakers 20/5/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/FontAttributes_t.html:920,Inherit,Inheritance,920,root/html534/FontAttributes_t.html,https://root.cern,https://root.cern/root/html534/FontAttributes_t.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". FontAttributes_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » GUI; » GUI; » FontAttributes_t. class FontAttributes_t. TGFont and TGFontPool. Encapsulate fonts used in the GUI system.; TGFontPool provides a pool of fonts.; TGTextLayout is used to keep track of string measurement; information when using the text layout facilities.; It can be displayed with respect to any origin. Function Members (Methods); public:. ~FontAttributes_t(); FontAttributes_t(); FontAttributes_t(const FontAttributes_t& f); FontAttributes_t&operator=(const FontAttributes_t& f). Data Members; public:. const char*fFamilyFont family. The most important field.; Int_tfOverstrikeNon-zero for overstrike font.; Int_tfPointsizePointsize of font, 0 for default size, or negative number meaning pixel size.; Int_tfSlantSlant flag; see below for def'n.; Int_tfUnderlineNon-zero for underline font.; Int_tfWeightWeight flag; see below for def'n. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FontAttributes_t(); { }. FontAttributes_t(const FontAttributes_t& f); { }. FontAttributes_t& operator=(const FontAttributes_t& f). » Author: Fons Rademakers 20/5/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-30 14:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/FontAttributes_t.html:1103,Inherit,Inheritance,1103,root/html602/FontAttributes_t.html,https://root.cern,https://root.cern/root/html602/FontAttributes_t.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". FontAttributes_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » GUI; » GUI; » FontAttributes_t. class FontAttributes_t. TGFont and TGFontPool. Encapsulate fonts used in the GUI system.; TGFontPool provides a pool of fonts.; TGTextLayout is used to keep track of string measurement; information when using the text layout facilities.; It can be displayed with respect to any origin. Function Members (Methods); public:. ~FontAttributes_t(); FontAttributes_t(); FontAttributes_t(const FontAttributes_t& f); FontAttributes_t&operator=(const FontAttributes_t& f). Data Members; public:. const char*fFamilyFont family. The most important field.; Int_tfOverstrikeNon-zero for overstrike font.; Int_tfPointsizePointsize of font, 0 for default size, or negative number meaning pixel size.; Int_tfSlantSlant flag; see below for def'n.; Int_tfUnderlineNon-zero for underline font.; Int_tfWeightWeight flag; see below for def'n. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FontAttributes_t(); { }. FontAttributes_t(const FontAttributes_t& f); { }. FontAttributes_t& operator=(const FontAttributes_t& f). » Author: Fons Rademakers 20/5/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-09-08 17:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/FontAttributes_t.html:1103,Inherit,Inheritance,1103,root/html604/FontAttributes_t.html,https://root.cern,https://root.cern/root/html604/FontAttributes_t.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". FontMetrics_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » GUI; » GUI; » FontMetrics_t. class FontMetrics_t. TGFont and TGFontPool. Encapsulate fonts used in the GUI system.; TGFontPool provides a pool of fonts. Function Members (Methods); public:. FontMetrics_t(); FontMetrics_t(const FontMetrics_t&); ~FontMetrics_t(); FontMetrics_t&operator=(const FontMetrics_t&). Data Members; public:. Int_tfAscentfrom baseline to top of font; Int_tfDescentfrom baseline to bottom of font; Bool_tfFixedtrue if monospace, false otherwise; Int_tfLinespacethe sum of the ascent and descent; Int_tfMaxWidthwidth of widest character in font. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FontAttributes_t& operator=(const FontMetrics_t& ). » Author: Fons Rademakers 20/5/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/FontMetrics_t.html:789,Inherit,Inheritance,789,root/html534/FontMetrics_t.html,https://root.cern,https://root.cern/root/html534/FontMetrics_t.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". FontMetrics_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » GUI; » GUI; » FontMetrics_t. class FontMetrics_t. TGFont and TGFontPool. Encapsulate fonts used in the GUI system.; TGFontPool provides a pool of fonts.; TGTextLayout is used to keep track of string measurement; information when using the text layout facilities.; It can be displayed with respect to any origin. Function Members (Methods); public:. ~FontMetrics_t(); FontMetrics_t(); FontMetrics_t(const FontMetrics_t&); FontMetrics_t(FontMetrics_t&&); FontMetrics_t&operator=(const FontMetrics_t&); FontMetrics_t&operator=(FontMetrics_t&&). Data Members; public:. Int_tfAscentfrom baseline to top of font; Int_tfDescentfrom baseline to bottom of font; Bool_tfFixedtrue if monospace, false otherwise; Int_tfLinespacethe sum of the ascent and descent; Int_tfMaxWidthwidth of widest character in font. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FontAttributes_t& operator=(const FontAttributes_t& f). void operator=(const TGTextLayout &tlayout). » Author: Fons Rademakers 20/5/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-30 14:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/FontMetrics_t.html:1046,Inherit,Inheritance,1046,root/html602/FontMetrics_t.html,https://root.cern,https://root.cern/root/html602/FontMetrics_t.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". FontMetrics_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » GUI; » GUI; » FontMetrics_t. class FontMetrics_t. TGFont and TGFontPool. Encapsulate fonts used in the GUI system.; TGFontPool provides a pool of fonts.; TGTextLayout is used to keep track of string measurement; information when using the text layout facilities.; It can be displayed with respect to any origin. Function Members (Methods); public:. ~FontMetrics_t(); FontMetrics_t(); FontMetrics_t(const FontMetrics_t&); FontMetrics_t(FontMetrics_t&&); FontMetrics_t&operator=(const FontMetrics_t&); FontMetrics_t&operator=(FontMetrics_t&&). Data Members; public:. Int_tfAscentfrom baseline to top of font; Int_tfDescentfrom baseline to bottom of font; Bool_tfFixedtrue if monospace, false otherwise; Int_tfLinespacethe sum of the ascent and descent; Int_tfMaxWidthwidth of widest character in font. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; FontAttributes_t& operator=(const FontAttributes_t& f). void operator=(const TGTextLayout &tlayout). » Author: Fons Rademakers 20/5/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-09-08 17:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/FontMetrics_t.html:1046,Inherit,Inheritance,1046,root/html604/FontMetrics_t.html,https://root.cern,https://root.cern/root/html604/FontMetrics_t.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". Function Members (Methods); public:. TEveSecondarySelectable(); virtual~TEveSecondarySelectable(); static TClass*Class(); Bool_tGetAlwaysSecSelect() const; virtual TClass*IsA() const; voidProcessGLSelection(TGLSelectRecord& rec); const TEveSecondarySelectable::SelectionSet_t&RefHighlightedSet() const; const TEveSecondarySelectable::SelectionSet_t&RefSelectedSet() const; voidSetAlwaysSecSelect(Bool_t f); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). protected:. voidProcessGLSelectionInternal(TGLSelectRecord& rec, TEveSecondarySelectable::SelectionSet_t& sset). private:. TEveSecondarySelectable(const TEveSecondarySelectable&); TEveSecondarySelectable&operator=(const TEveSecondarySelectable&). Data Members; protected:. Bool_tfAlwaysSecSelectAlways do secondary-selection in GL.; set<int>fHighlightedSetHighlighted indices.; set<int>fSelectedSetSelected indices. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveSecondarySelectable(); Constructor. void ProcessGLSelection(TGLSelectRecord& rec); Process secondary GL selection and populate selected set accordingly. void ProcessGLSelectionInternal(TGLSelectRecord& rec, TEveSecondarySelectable::SelectionSet_t& sset); Process secondary GL selection and populate given set accordingly. TEveSecondarySelectable(const TEveSecondarySelectable& ). TEveSecondarySelectable& operator=(const TEveSecondarySelectable& ). virtual ~TEveSecondarySelectable(); {}. Bool_t GetAlwaysSecSelect() const; { return fAlwaysSecSelect; }. void SetAlwaysSecSelect(Bool_t f); { fAlwaysSecSelect = f; }. const SelectionSet_t& RefSelectedSet() const; { return fSelectedSet; }. const SelectionSet_t& RefHighlightedSet() const; { return fHighlightedSet; }. » Author: Matevz Tadel 2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:22; This page has been autom",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveSecondarySelectable.html:1809,Inherit,Inheritance,1809,root/html534/TEveSecondarySelectable.html,https://root.cern,https://root.cern/root/html534/TEveSecondarySelectable.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". Function documentation; MethodTMlpANN(const TString& jobName, const TString& methodTitle, TMVA::DataSetInfo& theData, const TString& theOption = ""3000:N-1:N-2"", TDirectory* theTargetDir = 0); standard constructor. MethodTMlpANN(TMVA::DataSetInfo& theData, const TString& theWeightFile, TDirectory* theTargetDir = NULL); constructor from weight file. Bool_t HasAnalysisType(TMVA::Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets); TMlpANN can handle classification with 2 classes. void Init( void ); default initialisations. ~MethodTMlpANN( void ); destructor. void CreateMLPOptions(TString ); translates options from option string into TMlpANN language. void DeclareOptions(); define the options (their key words) that can be set in the option string; know options:; NCycles <integer> Number of training cycles (too many cycles could overtrain the network); HiddenLayers <string> Layout of the hidden layers (nodes per layer); * specifiactions for each hidden layer are separated by commata; * for each layer the number of nodes can be either absolut (simply a number); or relative to the number of input nodes to the neural net (N); * there is always a single node in the output layer; example: a net with 6 input nodes and ""Hiddenlayers=N-1,N-2"" has 6,5,4,1 nodes in the; layers 1,2,3,4, repectively. void ProcessOptions(); builds the neural network as specified by the user. Double_t GetMvaValue(Double_t* err = 0, Double_t* errUpper = 0); calculate the value of the neural net for the current event. void Train( void ); performs TMlpANN training; available learning methods:. TMultiLayerPerceptron::kStochastic; TMultiLayerPerceptron::kBatch; TMultiLayerPerceptron::kSteepestDescent; TMultiLayerPerceptron::kRibierePolak; TMultiLayerPerceptron::kFletcherReeves; TMultiLayerPerceptron::kBFGS. TMultiLayerPerceptron wants test and training tree at once; so merge the training and testing trees from the MVA factory first:. void AddWeightsXMLTo(void* parent) const; write weigh",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodTMlpANN.html:17158,layers,layers,17158,root/html528/TMVA__MethodTMlpANN.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodTMlpANN.html,12,['layers'],['layers']
Modifiability,". Function parameters:; fSource-pointer to the matrix of source spectrum, its size should; be fSizeX*fSizeY; fDest-pointer to the matrix of destination data, its size should be; fSizeX*fSizeY. . Example of enhancement;  ; Function:; void TSpectrumTransform2::Enhance(const; double; **fSource, double; **fDest);  ; This function transforms the; source spectrum (for details see Transform function). �Before the Enhance; function is called the class must be created by constructor and the type of the; transform as well as some other parameters must be set using a set of setter; functions. The Enhance function multiplies transformed coefficients in the given; region (fXmin, fXmax, fYmin, fYmax) by the given fEnhancCoeff and transforms it; back. Enhanced data are written into dest spectrum.; Example � script Enhance2.c:. Fig. 1 Original two-dimensional noisy spectrum. Fig. 2 Enhanced spectrum of; the data from Fig. 1 using Cosine transform (channels in region (0-63)x(0-63); were multiplied by 5) ;  ; Script:; // Example to illustrate; enhancement (class TSpectrumTransform2).; // To execute this example,; do; // root > .x Enhance2.C; �; void Enhance2() {; �� Int_t i, j;; �� Int_t nbinsx =; 256;; �� Int_t nbinsy =; 256;�� ; �� Int_t xmin� = 0;; �� Int_t xmax� =; nbinsx;; �� Int_t ymin� = 0;; �� Int_t ymax� =; nbinsy;; �� Double_t ** source = new Double_t *[nbinsx];�� ; �� Double_t ** dest = new; Double_t *[nbinsx];����� ; �� for (i=0;i<nbinsx;i++); ����������������������������������������������� source[i]=new; Double_t[nbinsy];; �� for (i=0;i<nbinsx;i++); ����������������������������������������������� dest[i]=new; Double_t[nbinsy];�� ; �� TH2F *trans = new; TH2F(""trans"",""Background; estimation"",nbinsx,xmin,xmax,nbinsy,ymin,ymax);; �� TFile *f = new; TFile(""TSpectrum2.root"");; �� trans=(TH2F*); f->Get(""back3;1"");; �� TCanvas *Tr = new; TCanvas(""Transform"",""Illustation of transform; function"",10,10,1000,700);; �� for (i = 0; i < nbinsx;; i++){; ���� for (j = 0; j <; nbinsy; j++)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSpectrum2Transform.html:23886,enhance,enhancement,23886,root/html602/TSpectrum2Transform.html,https://root.cern,https://root.cern/root/html602/TSpectrum2Transform.html,4,['enhance'],['enhancement']
Modifiability,". GCValues_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » GCValues_t. class GCValues_t. GuiTypes. Types used by the GUI classes. Function Members (Methods); public:. GCValues_t(); GCValues_t(const GCValues_t&); ~GCValues_t(); GCValues_t&operator=(const GCValues_t&). Data Members; public:. Int_tfArcModekArcChord, kArcPieSlice; ULong_tfBackgroundbackground pixel; Int_tfCapStylekCapNotLast, kCapButt,; Pixmap_tfClipMaskbitmap clipping; other calls for rects; Int_tfClipXOriginorigin for clipping; Int_tfClipYOrigin; Int_tfDashLennumber of dashes in fDashes; Int_tfDashOffsetpatterned/dashed line information; Char_tfDashes[8]dash pattern list (dash length per byte); Int_tfFillRulekEvenOddRule, kWindingRule; Int_tfFillStylekFillSolid, kFillTiled,; FontH_tfFontdefault text font for text operations; ULong_tfForegroundforeground pixel; EGraphicsFunctionfFunctionlogical operation; Bool_tfGraphicsExposuresboolean, should exposures be generated; Int_tfJoinStylekJoinMiter, kJoinRound, kJoinBevel; Int_tfLineStylekLineSolid, kLineOnOffDash, kLineDoubleDash; Int_tfLineWidthline width; Mask_tfMaskbit mask specifying which fields are valid; ULong_tfPlaneMaskplane mask; Pixmap_tfStipplestipple 1 plane pixmap for stipping; Int_tfSubwindowModekClipByChildren, kIncludeInferiors; Pixmap_tfTiletile pixmap for tiling operations; Int_tfTsXOriginoffset for tile or stipple operations; Int_tfTsYOrigin. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GCValues_t(). » Last changed: Tue Sep 8 16:58:29 2015 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/GCValues_t.html:1571,Inherit,Inheritance,1571,root/html534/GCValues_t.html,https://root.cern,https://root.cern/root/html534/GCValues_t.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". GCValues_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » GCValues_t. class GCValues_t. GuiTypes. Types used by the GUI classes. Function Members (Methods); public:. ~GCValues_t(); GCValues_t(); GCValues_t(const GCValues_t&); GCValues_t(GCValues_t&&); GCValues_t&operator=(const GCValues_t&); GCValues_t&operator=(GCValues_t&&). Data Members; public:. Int_tfArcModekArcChord, kArcPieSlice; ULong_tfBackgroundbackground pixel; Int_tfCapStylekCapNotLast, kCapButt,; Pixmap_tfClipMaskbitmap clipping; other calls for rects; Int_tfClipXOriginorigin for clipping; Int_tfClipYOrigin; Int_tfDashLennumber of dashes in fDashes; Int_tfDashOffsetpatterned/dashed line information; Char_tfDashes[8]dash pattern list (dash length per byte); Int_tfFillRulekEvenOddRule, kWindingRule; Int_tfFillStylekFillSolid, kFillTiled,; FontH_tfFontdefault text font for text operations; ULong_tfForegroundforeground pixel; EGraphicsFunctionfFunctionlogical operation; Bool_tfGraphicsExposuresboolean, should exposures be generated; Int_tfJoinStylekJoinMiter, kJoinRound, kJoinBevel; Int_tfLineStylekLineSolid, kLineOnOffDash, kLineDoubleDash; Int_tfLineWidthline width; Mask_tfMaskbit mask specifying which fields are valid; ULong_tfPlaneMaskplane mask; Pixmap_tfStipplestipple 1 plane pixmap for stipping; Int_tfSubwindowModekClipByChildren, kIncludeInferiors; Pixmap_tfTiletile pixmap for tiling operations; Int_tfTsXOriginoffset for tile or stipple operations; Int_tfTsYOrigin. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GCValues_t(). » Last changed: Tue Jun 30 14:21:16 2015 » Last generated: 2015-06-30 14:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/GCValues_t.html:1633,Inherit,Inheritance,1633,root/html602/GCValues_t.html,https://root.cern,https://root.cern/root/html602/GCValues_t.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". GCValues_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » GCValues_t. class GCValues_t. GuiTypes. Types used by the GUI classes. Function Members (Methods); public:. ~GCValues_t(); GCValues_t(); GCValues_t(const GCValues_t&); GCValues_t(GCValues_t&&); GCValues_t&operator=(const GCValues_t&); GCValues_t&operator=(GCValues_t&&). Data Members; public:. Int_tfArcModekArcChord, kArcPieSlice; ULong_tfBackgroundbackground pixel; Int_tfCapStylekCapNotLast, kCapButt,; Pixmap_tfClipMaskbitmap clipping; other calls for rects; Int_tfClipXOriginorigin for clipping; Int_tfClipYOrigin; Int_tfDashLennumber of dashes in fDashes; Int_tfDashOffsetpatterned/dashed line information; Char_tfDashes[8]dash pattern list (dash length per byte); Int_tfFillRulekEvenOddRule, kWindingRule; Int_tfFillStylekFillSolid, kFillTiled,; FontH_tfFontdefault text font for text operations; ULong_tfForegroundforeground pixel; EGraphicsFunctionfFunctionlogical operation; Bool_tfGraphicsExposuresboolean, should exposures be generated; Int_tfJoinStylekJoinMiter, kJoinRound, kJoinBevel; Int_tfLineStylekLineSolid, kLineOnOffDash, kLineDoubleDash; Int_tfLineWidthline width; Mask_tfMaskbit mask specifying which fields are valid; ULong_tfPlaneMaskplane mask; Pixmap_tfStipplestipple 1 plane pixmap for stipping; Int_tfSubwindowModekClipByChildren, kIncludeInferiors; Pixmap_tfTiletile pixmap for tiling operations; Int_tfTsXOriginoffset for tile or stipple operations; Int_tfTsYOrigin. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GCValues_t(). » Last changed: Tue Sep 8 17:32:51 2015 » Last generated: 2015-09-08 17:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/GCValues_t.html:1633,Inherit,Inheritance,1633,root/html604/GCValues_t.html,https://root.cern,https://root.cern/root/html604/GCValues_t.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". GO BACK TO MINIMIZATION STEP."");; 5443 Printf("" ================================================="");; 5444 Printf("" V"");; 5445 Printf("" V"");; 5446 Printf("" V"");; 5447 Printf("" VVVVVVV"");; 5448 Printf("" VVVVV"");; 5449 Printf("" VVV"");; 5450 Printf("" V\n"");; 5451 return;; 5452L700:; 5453 Printf("" THERE ARE NO MINOS ERRORS TO CALCULATE."");; 5454}; 5455 ; 5456////////////////////////////////////////////////////////////////////////////////; 5457/// Performs a MINOS error analysis on one parameter; 5458///; 5459/// The parameter ILAX is varied, and the minimum of the; 5460/// function with respect to the other parameters is followed; 5461/// until it crosses the value FMIN+UP.; 5462 ; 5463void TMinuit::mnmnot(Int_t ilax, Int_t ilax2, Double_t &val2pl, Double_t &val2mi); 5464{; 5465 /* System generated locals */; 5466 Int_t i__1;; 5467 ; 5468 /* Local variables */; 5469 Double_t delu, aopt, eros;; 5470 Double_t abest, xunit, dc, ut, sigsav, du1;; 5471 Double_t fac, sig, sav;; 5472 Int_t marc, isig, mpar, ndex, imax, indx, ierr, i, j;; 5473 Int_t iercr, it, istrav, nfmxin, nlimit, isw2, isw4;; 5474 TString csig;; 5475 ; 5476// save and prepare start vals; 5477 isw2 = fISW[1];; 5478 isw4 = fISW[3];; 5479 sigsav = fEDM;; 5480 istrav = fIstrat;; 5481 dc = fDcovar;; 5482 fLnewmn = kFALSE;; 5483 fApsi = fEpsi*.5;; 5484 abest = fAmin;; 5485 mpar = fNpar;; 5486 nfmxin = fNfcnmx;; 5487 for (i = 1; i <= mpar; ++i) { fXt[i-1] = fX[i-1]; }; 5488 i__1 = mpar*(mpar + 1) / 2;; 5489 for (j = 1; j <= i__1; ++j) { fVthmat[j-1] = fVhmat[j-1]; }; 5490 for (i = 1; i <= mpar; ++i) {; 5491 fMNOTgcc[i-1] = fGlobcc[i-1];; 5492 fMNOTw[i-1] = fWerr[i-1];; 5493 }; 5494 it = fNiofex[ilax-1];; 5495 fErp[it-1] = 0;; 5496 fErn[it-1] = 0;; 5497 mninex(fXt);; 5498 ut = fU[ilax-1];; 5499 if (fNvarl[ilax-1] == 1) {; 5500 fAlim[ilax-1] = ut - fMNOTw[it-1]*100;; 5501 fBlim[ilax-1] = ut + fMNOTw[it-1]*100;; 5502 }; 5503 ndex = it*(it + 1) / 2;; 5504 xunit = TMath::Sqrt(fUp / fVthmat[ndex-1]);; 5505 marc = 0;; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:178807,variab,variables,178807,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['variab'],['variables']
Modifiability,". HTTP Server. HTTP Server; Sergey Linev. HTTP Server; 1 HTTP server in ROOT; 1.1 Starting the HTTP server; 1.2 Registering objects; 1.3 Accessing file system; 1.4 Command interface; 1.5 Customize user interface; 1.6 Configuring user access; 1.7 Using FastCGI interface; 1.8 Integration with existing applications; 1.9 Data access from command shell; 1.10 Using unix sockets; 1.11 Websockets supports. HTTP Server; *** Sergey Linev GSI, Darmstadt ***; 1 HTTP server in ROOT; The idea of THttpServer is to provide remote http access to running ROOT application and enable HTML/JavaScript user interface. Any registered object can be requested and displayed in the web browser. There are many benefits of such approach:. standard http interface to ROOT application; no any temporary ROOT files to access data; user interface running in all browsers. 1.1 Starting the HTTP server; To start the http server, at any time, create an instance of the THttpServer class like:; auto serv = new THttpServer(""http:8080"");; This will start a civetweb-based http server on the port 8080. Then one should be able to open the address http://localhost:8080 in any modern browser (Firefox, Chrome, Opera, Safari, IE11) and browse objects created in application. By default, the server can access files, canvases, and histograms via the gROOT pointer. All those objects can be displayed with JSROOT graphics.; There is a server snapshot of running macro tutorials/http/httpserver.C from ROOT tutorials.; One could specify several options when creating http server. They could be add as additional URL parameters to the constructor arguments like:; auto serv = new THttpServer(""http:8080?loopback&thrds=2"");; Following URL parameters are supported:. Name; Description. thrds=N; number of threads used by the civetweb (default is 10). top=name; configure top name, visible in the web browser. auth_file=filename; authentication file name, created with htdigets utility. auth_domain=domain; authentication domain. loopback;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/HttpServer/HttpServer.html:217,Config,Configuring,217,root/htmldoc/guides/HttpServer/HttpServer.html,https://root.cern,https://root.cern/root/htmldoc/guides/HttpServer/HttpServer.html,1,['Config'],['Configuring']
Modifiability,". HTTP Server; 1 HTTP server in ROOT; 1.1 Starting the HTTP server; 1.2 Registering objects; 1.3 Command interface; 1.4 Configuring user access; 1.5 Using FastCGI interface; 1.5.1 Configure fastcgi with Apcahe2; 1.5.2 Configure fastcgi with lighttpd. 1.6 Integration with existing applications; 1.6.1 Asynchronous timer; 1.6.2 Regular calls of THttpServer::ProcessRequests() method. 1.7 Data access from command shell; 1.7.1 Objects data access in JSON format; 1.7.2 Generating images out of objects; 1.7.3 Methods execution; 1.7.4 Commands execution; 1.7.5 Performing multiple requests at once. HTTP Server; *** Sergey Linev GSI, Darmstadt ***; 1 HTTP server in ROOT; The idea of THttpServer is to provide remote http access to running ROOT application and enable HTML/JavaScript user interface. Any registered object can be requested and displayed in the web browser. There are many benefits of such approach:. standard http interface to ROOT application; no any temporary ROOT files to access data; user interface running in all browsers. 1.1 Starting the HTTP server; To start the http server, at any time, create an instance of the THttpServer class like:; serv = new THttpServer(""http:8080"");; This will start a civetweb-based http server on the port 8080. Then one should be able to open the address “http://localhost:8080” in any modern browser (IE9, Firefox, Chrome, Opera) and browse objects created in application. By default, the server can access files, canvases, and histograms via the gROOT pointer. All those objects can be displayed with JSROOT graphics.; There is a snapshot (frozen copy) of such server, running in tutorials/http/httpserver.C macro from ROOT tutorial.; <iframe width=“800” height=“500” src=“https://root.cern.ch/js/3.6/httpserver.C/?layout=simple&item=Canvases/c1”> ; One could specify several options when creating http server. They could be add as additional URL parameters to the constructor arguments like:; serv = new THttpServer(""http:8080?loopback&thrds=2"");",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/guides/HttpServer/HttpServer.html:120,Config,Configuring,120,root/html534/guides/HttpServer/HttpServer.html,https://root.cern,https://root.cern/root/html534/guides/HttpServer/HttpServer.html,3,['Config'],"['Configure', 'Configuring']"
Modifiability,". If many identical generation requests; are needed, e.g. in toy MC studies, it is more efficient to use the prepareMultiGen()/generate(); combination than calling the standard generate() multiple times as; initialization overhead is only incurred once. RooDataSet * generate(const RooArgSet& whatVars, Double_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t autoBinned = kTRUE, const char* binnedTag = """", Bool_t expectedData = kFALSE, Bool_t extended = kFALSE) const; Generate a new dataset containing the specified variables with; events sampled from our distribution. Generate the specified; number of events or else try to use expectedEvents() if nEvents <= 0.; Any variables of this PDF that are not in whatVars will use their; current values and be treated as fixed parameters. Returns zero; in case of an error. The caller takes ownership of the returned; dataset. RooDataSet * generate(RooAbsGenContext& context, const RooArgSet& whatVars, const RooDataSet* prototype, Double_t nEvents, Bool_t verbose, Bool_t randProtoOrder, Bool_t resampleProto, Bool_t skipInit = kFALSE, Bool_t extended = kFALSE) const; Internal method. RooDataSet * generate(const RooArgSet& whatVars, const RooDataSet& prototype, Int_t nEvents = 0, Bool_t verbose = kFALSE, Bool_t randProtoOrder = kFALSE, Bool_t resampleProto = kFALSE) const; Generate a new dataset with values of the whatVars variables; sampled from our distribution. Use the specified existing dataset; as a prototype: the new dataset will contain the same number of; events as the prototype (by default), and any prototype variables not in; whatVars will be copied into the new dataset for each generated; event and also used to set our PDF parameters. The user can specify a; number of events to generate that will override the default. The result is a; copy of the prototype dataset with only variables in whatVars; randomized. Variables in whatVars that are not in the prototype; will be added as new columns to the generated dataset. Returns; zer",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsPdf.html:68741,extend,extended,68741,root/html534/RooAbsPdf.html,https://root.cern,https://root.cern/root/html534/RooAbsPdf.html,6,['extend'],['extended']
Modifiability,". If the; contents of proxies a,b,c,d occur in set 'allDeps' then the arguments; held in a,b,c,d are copied from allDeps to analDeps. Bool_t matchArgs(const RooArgSet& allDeps, RooArgSet& numDeps, const RooArgSet& set) const; Utility function for use in getAnalyticalIntegral(). If the; contents of 'refset' occur in set 'allDeps' then the arguments; held in 'refset' are copied from allDeps to analDeps. Bool_t matchArgsByName(const RooArgSet& allArgs, RooArgSet& matchedArgs, const TList& nameList) const; Check if allArgs contains matching elements for each name in nameList. If it does,; add the corresponding args from allArgs to matchedArgs and return kTRUE. Otherwise; return kFALSE and do not change matchedArgs. RooNumIntConfig* defaultIntegratorConfig(); Returns the default numeric integration configuration for all RooAbsReals. RooNumIntConfig* specialIntegratorConfig() const; Returns the specialized integrator configuration for _this_ RooAbsReal.; If this object has no specialized configuration, a null pointer is returned. RooNumIntConfig* specialIntegratorConfig(Bool_t createOnTheFly); Returns the specialized integrator configuration for _this_ RooAbsReal.; If this object has no specialized configuration, a null pointer is returned,; unless createOnTheFly is kTRUE in which case a clone of the default integrator; configuration is created, installed as specialized configuration, and returned. const RooNumIntConfig* getIntegratorConfig() const; Return the numeric integration configuration used for this object. If; a specialized configuration was associated with this object, that configuration; is returned, otherwise the default configuration for all RooAbsReals is returned. RooNumIntConfig* getIntegratorConfig(); Return the numeric integration configuration used for this object. If; a specialized configuration was associated with this object, that configuration; is returned, otherwise the default configuration for all RooAbsReals is returned. void setIntegratorConfig",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAbsReal.html:59597,config,configuration,59597,root/html528/RooAbsReal.html,https://root.cern,https://root.cern/root/html528/RooAbsReal.html,9,['config'],['configuration']
Modifiability,". Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableNormalizeTransform( DataSetInfo& dsi ); constructor. ~VariableNormalizeTransform(). void Initialize(); initialization of the normalization transformation. Bool_t PrepareTransformation(const vector<TMVA::Event*,allocator<TMVA::Event*> >& ); prepare transformation. const TMVA::Event* Transform(const TMVA::Event *const , Int_t cls) const. const TMVA::Event* InverseTransform(const TMVA::Event *const , Int_t cls) const; apply the inverse transformation. void CalcNormalizationParams(const vector<TMVA::Event*,allocator<TMVA::Event*> >& events); compute offset and scale from min and max. std::vector<TString>* GetTransformationStrings(Int_t cls) const; creates string with variable transformations applied. void WriteTransformationToStream(ostream& ) const; write the transformation to the stream. void AttachXMLTo(void* parent); create XML description of Normalize transformation. void ReadFromXML(void* trfnode); Read the transformation matrices from the xml node. void BuildTransformationFromVarInfo(const vector<TMVA::VariableInfo>& var); this method is only used when building a normalization transformation; from old text files; in this case regression didn't exist and there were no targets. void ReadTransformationFromStream(istream& , const TString& ); Read the variable ranges from an input stream. void PrintTransformation(ostream& o); prints the transformation ranges. void MakeFunction(ostream& fout, const TString& fncName, Int_t part, UInt_t trCounter, Int_t cls); creates a normalizing function; TODO include target-transformation into makefunction. VariableNormalizeTransform( DataSetInfo& dsi ). » Author: Andreas Hoecker, Joerg Stelzer, Helge Voss » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-03-14 16:44; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMVA__VariableNormalizeTransform.html:10837,variab,variable,10837,root/html534/TMVA__VariableNormalizeTransform.html,https://root.cern,https://root.cern/root/html534/TMVA__VariableNormalizeTransform.html,4,"['Variab', 'variab']","['VariableInfo', 'VariableNormalizeTransform', 'variable']"
Modifiability,". Int_t * TLeaf::GenerateOffsetArrayBase ; (; Int_t ; base, . Int_t ; events . ); const. protected . If the class supports it, generate an offset array base. ; This class only returns nullptr on error. ; Definition at line 188 of file TLeaf.cxx. ◆ GetBranch(). TBranch * TLeaf::GetBranch ; (; ); const. inline . Definition at line 116 of file TLeaf.h. ◆ GetDeserializeType(). virtual DeserializeType TLeaf::GetDeserializeType ; (; ); const. inlinevirtual . Reimplemented in TLeafB, TLeafD, TLeafD32, TLeafElement, TLeafF, TLeafF16, TLeafG, TLeafI, TLeafL, TLeafO, and TLeafS.; Definition at line 117 of file TLeaf.h. ◆ GetFullName(). TString TLeaf::GetFullName ; (; ); const. virtual . Return the full name (including the parent's branch names) of the leaf. ; Reimplemented in TLeafElement.; Definition at line 224 of file TLeaf.cxx. ◆ GetLeafCount(). virtual TLeaf * TLeaf::GetLeafCount ; (; ); const. inlinevirtual . If this leaf stores a variable-sized array or a multi-dimensional array whose last dimension has variable size, return a pointer to the TLeaf that stores such size. ; Return a nullptr otherwise. ; Definition at line 121 of file TLeaf.h. ◆ GetLeafCounter(). TLeaf * TLeaf::GetLeafCounter ; (; Int_t & ; countval); const. virtual . Return a pointer to the counter of this leaf (if any) or store the number of elements that the leaf contains in countval. . If leaf name has the form var[nelem], where nelem is alphanumeric, then if nelem is a leaf name, return countval = 1 and the pointer to the leaf named nelem, otherwise return 0.; If leaf name has the form var[nelem], where nelem is a non-negative integer, then return countval = nelem and a null pointer.; If leaf name has the form of a multi-dimensional array (e.g. var[nelem][nelem2] where nelem and nelem2 are non-negative integers) then return countval = product of all dimension sizes and a null pointer.; If leaf name has the form var[... (and does not match the previous 2 cases) return countval = -1 and null pointer;; O",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeaf.html:20400,variab,variable-sized,20400,doc/master/classTLeaf.html,https://root.cern,https://root.cern/doc/master/classTLeaf.html,2,['variab'],"['variable', 'variable-sized']"
Modifiability,". It is possible to make non-trivial parameter splits with RooSimPdfBuilder.; Trivial splits are considered simple splits in one (fundamental) category; in the dataset or a split in a RooSuperCategory 'product' of multiple; fundamental categories in the dataset. Non-trivial splits can be performed; using an intermediate 'category function' (RooMappedCategory,; RooGenericCategory,RooThresholdCategory etc), i.e. any RooAbsCategory; derived objects that calculates its output as function of one or more; input RooRealVars and/or RooCategories.; . Such 'function categories' objects must be constructed by the user prior; to building the PDF. In the RooSimPdfBuilder::buildPdf() function these; objects can be passed in an optional RooArgSet called 'auxiliary categories':; . const RooSimultaneous* buildPdf(const RooArgSet& buildConfig, const RooAbsData* dataSet, ; const RooArgSet& auxSplitCats, Bool_t verbose=kFALSE) {; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; . Objects passed in this argset can subsequently be used in the build configuration, e.g.; . RooMappedCategory tagMap(""tagMap"",""Mapped tagging category"",tagCat,""CutBased"") ;; tagMap.map(""Lep"",""CutBased"") ;; tagMap.map(""Kao"",""CutBased"") ;; tagMap.map(""NT*"",""NeuralNet"") ; ; ...; builder.buildPdf(config,D,tagMap) ;; ^^^^^^. physModels = pdf; splitCats = tagCat runBlock; pdf = tagCat : signalRes ; tagMap : fudgeFactor ; ^^^^^^; . In the above example signalRes will be split in signalRes_Kao,signalRes_Lep,; signalRes_NT1,signalRes_NT2, while fudgeFactor will be split in fudgeFactor_CutBased; and fudgeFactor_NeuralNet.; . Category functions passed in the auxSplitCats RooArgSet can be used regularly; in the splitting configuration. They should not be listed in splitCats,; but must be able to be expressed completely in terms of the splitCats that ; are listed.; ; Multiple connected builds. Sometimes you want to build multiple PDFs for independent consecutive fits ; that share some of their parameters. For example, we have two prototype ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooSimPdfBuilder.html:11455,config,configuration,11455,root/html526/RooSimPdfBuilder.html,https://root.cern,https://root.cern/root/html526/RooSimPdfBuilder.html,11,['config'],['configuration']
Modifiability,". List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::Math::CDFWrapper Struct Reference. . Definition at line 40 of file GoFTest.cxx. Public Member Functions;  CDFWrapper (const IGenFunction &cdf, Double_t xmin=0, Double_t xmax=-1);  ;  ~CDFWrapper () override;  ; IGenFunction * Clone () const override;  Clone a function. ;  ; Double_t DoEval (Double_t x) const override;  implementation of the evaluation function. Must be implemented by derived classes ;  ;  Public Member Functions inherited from ROOT::Math::IBaseFunctionOneDim; virtual ~IBaseFunctionOneDim ()=default;  ; virtual bool HasGradient () const;  ; double operator() (const double *x) const;  Evaluate the function at a point x[]. ;  ; double operator() (double x) const;  Evaluate the function at a point x. ;  . Public Attributes; const IGenFunction * fCDF;  ; Double_t fNorm;  ; Double_t fXmax;  ; Double_t fXmin;  . Additional Inherited Members;  Public Types inherited from ROOT::Math::IBaseFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  . Inheritance diagram for ROOT::Math::CDFWrapper:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~CDFWrapper(). ROOT::Math::CDFWrapper::~CDFWrapper ; (; ). inlineoverride . Definition at line 48 of file GoFTest.cxx. ◆ CDFWrapper(). ROOT::Math::CDFWrapper::CDFWrapper ; (; const IGenFunction & ; cdf, . Double_t ; xmin = 0, . Double_t ; xmax = -1 . ). inline . Definition at line 50 of file GoFTest.cxx. Member Function Documentation. ◆ Clone(). IGenFunction * ROOT::Math::CDFWrapper::Clone ; (; ); const. inlineoverridevirtual . Clone a function. ; Each derived class will implement their version of the private DoClone method. ; Implements ROOT::Math::IBaseFunctionOneDim.; Definition at line 71 of file GoFTest.cxx. ◆ DoEval(). Double_t ROOT::Math::CDFWrapper::DoEval ; (; Double_t ; x); const. inlineoverridevirtual . implementation of the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1CDFWrapper.html:1107,inherit,inherited,1107,doc/master/structROOT_1_1Math_1_1CDFWrapper.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1CDFWrapper.html,1,['inherit'],['inherited']
Modifiability,". List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TSelectorScalar Class ReferenceTree Library. ; Named scalar type, based on Long64_t, streamable, storable and mergeable. ; Ideally to be used in tree selectors in the PROOF environment due to its merge functionality which allows a single merged value to be returned to the user. ; Definition at line 35 of file TSelectorScalar.h. Public Member Functions;  TSelectorScalar (const char *name="""", Long64_t val=0);  ;  ~TSelectorScalar () override;  ; void Inc (Long_t n=1);  Increment scalar value by n. ;  ; TClass * IsA () const override;  ; Int_t Merge (TCollection *list) override;  Merge scalars with scalars in the list. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TParameter< Long64_t >;  TParameter ();  ;  TParameter (const char *name, const Long64_t &val);  ;  TParameter (const char *name, const Long64_t &val, char mergemode);  ; virtual ~TParameter ();  ; Int_t Compare (const TObject *obj) const override;  Compare abstract method. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const Long64_t & GetVal () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsConst () const;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *) const override;  The ls function lists the contents of a class on stdout. ;  ; Int_t Merge (TCollection *in);  ; void Print (Option_t *) const override;  This method must be overridden when a class wants to print itself. ;  ; void SetMergeMode (char mergemode='+');  ; void SetVal (const Long64_t &val);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSelectorScalar.html:1024,inherit,inherited,1024,doc/master/classTSelectorScalar.html,https://root.cern,https://root.cern/doc/master/classTSelectorScalar.html,1,['inherit'],['inherited']
Modifiability,". List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Friends |; List of all members ; TGMdiWinResizer Class Reference. . Definition at line 45 of file TGMdiDecorFrame.h. Public Member Functions;  TGMdiWinResizer (const TGWindow *p, const TGWindow *mdiwin, Int_t pos, const TGGC *boxGC, Int_t linew, Int_t mdioptions=kMdiDefaultResizeMode, Int_t w=1, Int_t h=1, UInt_t options=kOwnBackground);  TGMdiWinResizer constructor. ;  ; void DrawBorder () override;  Draw frame border. ;  ; Bool_t HandleButton (Event_t *event) override;  Handle button events in resizer (grab button and resize). ;  ; TClass * IsA () const override;  ; void SetMinSize (Int_t w=50, Int_t h=20);  ; void SetResizeMode (Int_t mode);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; virtual void ChangeOptions (UInt_t options);  Change frame options. Options is an OR of the EFrameTypes. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const overrid",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMdiWinResizer.html:1083,inherit,inherited,1083,doc/master/classTGMdiWinResizer.html,https://root.cern,https://root.cern/doc/master/classTGMdiWinResizer.html,1,['inherit'],['inherited']
Modifiability,". List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TGShapedFrame Class ReferenceGUI » Low level GUI widgets. ; A Shaped window. ; Definition at line 21 of file TGShapedFrame.h. Public Member Functions;  TGShapedFrame (const char *fname=nullptr, const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0);  Shaped window default constructor. ;  ;  ~TGShapedFrame () override;  Destructor. ;  ; TImage GetImage () const;  ; const TGPicture GetPicture () const;  ; TClass * IsA () const override;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a shaped frame as a C++ statement(s) on output stream out. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGCompositeFrame;  TGCompositeFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a composite frame. ;  ;  TGCompositeFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGCompositeFrame () override;  Delete a composite frame. ;  ; virtual void AddFrame (TGFrame *f, TGLayoutHints *l=nullptr);  Add frame to the composite frame using the specified layout hints. ;  ; void ChangeOptions (UInt_t options) override;  Change composite frame options. Options is an OR of the EFrameTypes. ;  ; virtual void ChangeSubframesBackground (Pixel_t back);  Change background color for this frame and all subframes. ;  ; virtual void Cleanup ();  Cleanup and delete all objects contained in this composite frame. ;  ; virtual TGFrameElement * FindFrameElement (TGFrame *f) const;  Find frame-element holding frame f. ;  ; UInt_t GetDefaultHeight () const override;  ; TGDimension GetDefaultSize () ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGShapedFrame.html:1071,inherit,inherited,1071,doc/master/classTGShapedFrame.html,https://root.cern,https://root.cern/doc/master/classTGShapedFrame.html,1,['inherit'],['inherited']
Modifiability,". MemInfo_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » MemInfo_t. class MemInfo_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System. Function Members (Methods); public:. MemInfo_t(); MemInfo_t(const MemInfo_t&); virtual~MemInfo_t(); static TClass*Class(); virtual TClass*IsA() const; MemInfo_t&operator=(const MemInfo_t&); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; public:. Int_tfMemFreefree RAM in MB; Int_tfMemTotaltotal RAM in MB; Int_tfMemUsedused RAM in MB; Int_tfSwapFreefree swap in MB; Int_tfSwapTotaltotal swap in MB; Int_tfSwapUsedused swap in MB. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MemInfo_t(); { }. virtual ~MemInfo_t(); { }. TSystem& operator=(const MemInfo_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/MemInfo_t.html:890,Inherit,Inheritance,890,root/html534/MemInfo_t.html,https://root.cern,https://root.cern/root/html534/MemInfo_t.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". MemInfo_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » MemInfo_t. class MemInfo_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System.; This is not an ABC in the strict sense of the (C++) word. For; every member function there is an implementation (often not more; than a call to AbstractMethod() which prints a warning saying; that the method should be overridden in a derived class), which; allows a simple partial implementation for new OS'es. Function Members (Methods); public:. virtual~MemInfo_t(); static TClass*Class(); virtual TClass*IsA() const; MemInfo_t(); MemInfo_t(const MemInfo_t&); MemInfo_t&operator=(const MemInfo_t&); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; public:. Int_tfMemFreefree RAM in MB; Int_tfMemTotaltotal RAM in MB; Int_tfMemUsedused RAM in MB; Int_tfSwapFreefree swap in MB; Int_tfSwapTotaltotal swap in MB; Int_tfSwapUsedused swap in MB. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MemInfo_t(); { }. virtual ~MemInfo_t(); { }. TSystem& operator=(const MemInfo_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-06-30 14:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/MemInfo_t.html:1237,Inherit,Inheritance,1237,root/html602/MemInfo_t.html,https://root.cern,https://root.cern/root/html602/MemInfo_t.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". MemInfo_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » MemInfo_t. class MemInfo_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System.; This is not an ABC in the strict sense of the (C++) word. For; every member function there is an implementation (often not more; than a call to AbstractMethod() which prints a warning saying; that the method should be overridden in a derived class), which; allows a simple partial implementation for new OS'es. Function Members (Methods); public:. virtual~MemInfo_t(); static TClass*Class(); virtual TClass*IsA() const; MemInfo_t(); MemInfo_t(const MemInfo_t&); MemInfo_t&operator=(const MemInfo_t&); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; public:. Int_tfMemFreefree RAM in MB; Int_tfMemTotaltotal RAM in MB; Int_tfMemUsedused RAM in MB; Int_tfSwapFreefree swap in MB; Int_tfSwapTotaltotal swap in MB; Int_tfSwapUsedused swap in MB. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MemInfo_t(); { }. virtual ~MemInfo_t(); { }. TSystem& operator=(const MemInfo_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 17:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/MemInfo_t.html:1237,Inherit,Inheritance,1237,root/html604/MemInfo_t.html,https://root.cern,https://root.cern/root/html604/MemInfo_t.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". Member Function Documentation. ◆ actualObservables(). RooFit::OwningPtr< RooArgSet > RooFFTConvPdf::actualObservables ; (; const RooArgSet & ; nset); const. overrideprotectedvirtual . Return the observables to be cached given the normalization set nset. ; If the cache observable is in nset then this is; the convolution observable plus; any member of nset that is either a RooCategory,; or was previously specified through setCacheObservables(). In case the cache observable is not in nset, then it is; the convolution observable plus; all member of nset that are observables of this p.d.f. . Implements RooAbsCachedPdf.; Definition at line 778 of file RooFFTConvPdf.cxx. ◆ actualParameters(). RooFit::OwningPtr< RooArgSet > RooFFTConvPdf::actualParameters ; (; const RooArgSet & ; nset); const. overrideprotectedvirtual . Return the parameters on which the cache depends given normalization set nset. ; For this p.d.f these are the parameters of the input p.d.f. but never the convolution variable, in case it is not part of nset. ; Implements RooAbsCachedPdf.; Definition at line 833 of file RooFFTConvPdf.cxx. ◆ bufferFraction(). double RooFFTConvPdf::bufferFraction ; (; ); const. inline . Return value of buffer fraction applied in FFT calculation array beyond either end of the observable domain to reduce cyclical effects. ; Definition at line 43 of file RooFFTConvPdf.h. ◆ bufferStrategy(). BufStrat RooFFTConvPdf::bufferStrategy ; (; ); const. inline . Return the strategy currently used to fill the buffer: 'Extend' means is that the input p.d.f convolution observable range is widened to include the buffer range 'Flat' means that the buffer is filled with the p.d.f. ; value at the boundary of the observable range 'Mirror' means that the buffer is filled with a mirror image of the p.d.f. around the convolution observable boundary ; Definition at line 52 of file RooFFTConvPdf.h. ◆ cacheObservables(). const RooArgSet & RooFFTConvPdf::cacheObservables ; (; ); const. inline . Definit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFFTConvPdf.html:87820,variab,variable,87820,doc/master/classRooFFTConvPdf.html,https://root.cern,https://root.cern/doc/master/classRooFFTConvPdf.html,1,['variab'],['variable']
Modifiability,". Minuit 2. Minuit 2; Fred JAMES and Matthias WINKLER. Minuit 2; 1 Foreword; 1.1 What M is intended to do; 1.2 What M is not intended to do; 1.3 Further remarks. 2 Introduction: M basic concepts; 2.1 The organization of M; 2.2 Design aspects of M in; 2.3 Internal and external parameters; 2.4 M strategy; 2.5 Parameter errors. 3 M installation; 3.1 M releases; 3.2 Install M using autoconf/make; 3.3 CVS code repository; 3.4 Create a tar.gz from CVS; 3.5 M versions; 3.6 Interference with other packages; 3.7 Floating-point precision. 4 How to use M; 4.1 The \(\mbox{FCN}\) Function; 4.2 M parameters; 4.3 Input to M; 4.4 Running a M minimization; 4.5 The output from minimization. 5 M application programming interface (API); 5.1 FunctionMinimum; 5.2 MnContours; 5.3 MnEigen; 5.4 MnHesse; 5.5 MnMachinePrecision; 5.6 MnMigrad and VariableMetricMinimizer; 5.7 MnMinimize and CombinedMinimizer; 5.8 MnMinos; 5.9 MnPlot; 5.10 MnScan and ScanMinimizer; 5.11 MnSimplex and SimplexMinimizer; 5.12 MnStrategy; 5.13 MnUserCovariance; 5.14 MnUserParameters; 5.15 MnUserParameterState; 5.16 MnPrint.h. 6 How to get the right answer from M; 6.1 Which minimizer to use; 6.2 Floating point precision; 6.3 Parameter limits; 6.4 Fixing and releasing parameters; 6.5 Interpretation of parameter errors; 6.6 Convergence in \(\mbox{MIGRAD}\), and positive–definiteness; 6.7 Additional trouble–shooting. 7 A complete example; 7.1 The user’s \(\mbox{FCN}\); 7.2 The user’s main program. Minuit 2; *** Fred JAMES and Matthias WINKLER CERN, Geneva ***; 1 Foreword; 1.1 What M is intended to do; M is conceived as a tool to find the minimum value of a multi-parameter function (the “\(\mbox{FCN}\)”) and analyze the shape of the function around the minimum. The principal application is foreseen for statistical analysis, working on chisquare or log-likelihood functions, to compute the best-fit parameter values and uncertainties, including correlations between the parameters. It is especially suited to handle difficult ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/minuit2/Minuit2.html:831,Variab,VariableMetricMinimizer,831,root/htmldoc/guides/minuit2/Minuit2.html,https://root.cern,https://root.cern/root/htmldoc/guides/minuit2/Minuit2.html,1,['Variab'],['VariableMetricMinimizer']
Modifiability,". More...;  ; class  TNtuple;  A simple TTree restricted to a list of float variables only. More...;  ; class  TNtupleD;  A simple TTree restricted to a list of double variables only. More...;  ; class  TQueryResult;  A container class for query results. More...;  ; class  TreeUtils;  Different standalone functions to work with trees and tuples, not reqiuired to be a member of any class. More...;  ; class  TSelector;  A TSelector object is used by the TTree::Draw, TTree::Scan, TTree::Process to navigate in a TTree and make selections. More...;  ; class  TSelectorList;  A TList derived class that makes sure that objects added to it are not linked to the currently open file (like histograms, eventlists and trees). More...;  ; class  TSelectorScalar;  Named scalar type, based on Long64_t, streamable, storable and mergeable. More...;  ; class  TTree;  A TTree represents a columnar dataset. More...;  ; class  TTreeCache;  A cache to speed-up the reading of ROOT datasets. More...;  ; class  TTreeCacheUnzip;  A TTreeCache which exploits parallelized decompression of its own content. More...;  ; class  TTreeCloner;  Class implementing or helping the various TTree cloning method. More...;  ; class  TTreeResult;  Class defining interface to a TTree query result with the same interface as for SQL databases. More...;  ; class  TTreeRow;  Class defining interface to a row of a TTree query result. More...;  ; class  TTreeSQL;  A TTree object is a list of TBranch. More...;  ; class  TVirtualBranchBrowsable;  TVirtualBranchBrowsable is a base class (not really abstract, but useless by itself) for helper objects that extend TBranch's browsing support. More...;  ; class  TVirtualIndex;  Abstract interface for Tree Index. More...;  ; class  TVirtualTreePlayer;  Abstract base class defining the interface for the plugins that implement Draw, Scan, Process, MakeProxy, etc. More...;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:34 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tree.html:6483,extend,extend,6483,doc/master/group__tree.html,https://root.cern,https://root.cern/doc/master/group__tree.html,2,"['extend', 'plugin']","['extend', 'plugins']"
Modifiability,". Observables; on which a PDF depends via more than route are not safe; for use with internal generators because they introduce; correlations not known to the internal generator. RooDataHist * generateBinned(const RooArgSet& whatVars, Double_t nEvents, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none()); Generate a new dataset containing the specified variables with events sampled from our distribution.; Generate the specified number of events or expectedEvents() if not specified. Any variables of this PDF that are not in whatVars will use their; current values and be treated as fixed parameters. Returns zero; in case of an error. The caller takes ownership of the returned; dataset. The following named arguments are supported. Name(const char* name) -- Name of the output dataset; Verbose(Bool_t flag) -- Print informational messages during event generation; Extended() -- The actual number of events generated will be sampled from a Poisson distribution; with mu=nevt. For use with extended maximum likelihood fits; ExpectedData() -- Return a binned dataset _without_ statistical fluctuations (also aliased as Asimov()). RooDataHist * generateBinned(const RooArgSet& whatVars, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none()); Generate a new dataset containing the specified variables with events sampled from our distribution.; Generate the specified number of events or expectedEvents() if not specified. Any variables of this PDF that are not in whatVars will use their; current values and be treated as fixed parameters. Returns zero; in case of an error. The caller takes ownership of the returned; dataset. The following named argum",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsPdf.html:72190,Extend,Extended,72190,root/html534/RooAbsPdf.html,https://root.cern,https://root.cern/root/html534/RooAbsPdf.html,3,['Extend'],['Extended']
Modifiability,". On non-Win32 platforms there is no difference; between ProcessLine() and ProcessLineSync().; The possible error codes are defined by TInterpreter::EErrorCode. In; particular, error will equal to TInterpreter::kProcessing until the; CINT interpreted thread has finished executing the line.; Returns the result of the command, cast to a Long_t. Long_t ProcessLineSync(const char* line, Int_t* error = 0); Process interpreter command via TApplication::ProcessLine().; On Win32 the line will be processed synchronously (i.e. it will; only return when the CINT interpreter thread has finished executing; the line). On non-Win32 platforms there is no difference between; ProcessLine() and ProcessLineSync().; The possible error codes are defined by TInterpreter::EErrorCode.; Returns the result of the command, cast to a Long_t. Long_t ProcessLineFast(const char* line, Int_t* error = 0); Process interpreter command directly via CINT interpreter.; Only executable statements are allowed (no variable declarations),; In all other cases use TROOT::ProcessLine().; The possible error codes are defined by TInterpreter::EErrorCode. void ReadGitInfo(); Read Git commit information and branch name from the; etc/gitinfo.txt file. Bool_t ReadingObject() const; Deprecated (will be removed in next release). void SetReadingObject(Bool_t flag = kTRUE). const char * GetGitDate(); Return date/time make was run. void RefreshBrowsers(); Refresh all browsers. Call this method when some command line; command or script has changed the browser contents. Not needed; for objects that have the kMustCleanup bit set. Most useful to; update browsers that show the file system or other objects external; to the running ROOT session. void RegisterModule(const char* modulename, const char** headers, const char** includePaths, const char* payLoadCode, const char* fwdDeclCode, void(*)() triggerFunc, const TROOT::FwdDeclArgsToKeepCollection_t& fwdDeclsArgToSkip, const char** classesHeaders); Called by static dictionary i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TROOT.html:34076,variab,variable,34076,root/html602/TROOT.html,https://root.cern,https://root.cern/root/html602/TROOT.html,4,['variab'],['variable']
Modifiability,". On non-Win32 platforms there is no difference; between ProcessLine() and ProcessLineSync().; The possible error codes are defined by TInterpreter::EErrorCode. In; particular, error will equal to TInterpreter::kProcessing until the; CINT interpreted thread has finished executing the line.; Returns the result of the command, cast to a Long_t. Long_t ProcessLineSync(const char* line, Int_t* error = 0); Process interpreter command via TApplication::ProcessLine().; On Win32 the line will be processed synchronously (i.e. it will; only return when the CINT interpreter thread has finished executing; the line). On non-Win32 platforms there is no difference between; ProcessLine() and ProcessLineSync().; The possible error codes are defined by TInterpreter::EErrorCode.; Returns the result of the command, cast to a Long_t. Long_t ProcessLineFast(const char* line, Int_t* error = 0); Process interpreter command directly via CINT interpreter.; Only executable statements are allowed (no variable declarations),; In all other cases use TROOT::ProcessLine().; The possible error codes are defined by TInterpreter::EErrorCode. void ReadGitInfo(); Read Git commit information and branch name from the; etc/gitinfo.txt file. Bool_t ReadingObject() const; Deprecated (will be removed in next release). void SetReadingObject(Bool_t flag = kTRUE). const char * GetGitDate(); Return date/time make was run. void RefreshBrowsers(); Refresh all browsers. Call this method when some command line; command or script has changed the browser contents. Not needed; for objects that have the kMustCleanup bit set. Most useful to; update browsers that show the file system or other objects external; to the running ROOT session. void RemoveClass(TClass* ); Remove a class from the list and map of classes.; This routine is deprecated, use TClass::RemoveClass directly. void Reset(Option_t* option = """"); Delete all global interpreter objects created since the last call to Reset. If option=""a"" is set reset to startup",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TROOT.html:31074,variab,variable,31074,root/html534/TROOT.html,https://root.cern,https://root.cern/root/html534/TROOT.html,2,['variab'],['variable']
Modifiability,". On non-Win32 platforms there is no difference; between ProcessLine() and ProcessLineSync().; The possible error codes are defined by TInterpreter::EErrorCode. In; particular, error will equal to TInterpreter::kProcessing until the; CINT interpreted thread has finished executing the line.; Returns the result of the command, cast to a Long_t. Long_t ProcessLineSync(const char* line, Int_t* error = 0); Process interpreter command via TApplication::ProcessLine().; On Win32 the line will be processed synchronously (i.e. it will; only return when the CINT interpreter thread has finished executing; the line). On non-Win32 platforms there is no difference between; ProcessLine() and ProcessLineSync().; The possible error codes are defined by TInterpreter::EErrorCode.; Returns the result of the command, cast to a Long_t. Long_t ProcessLineFast(const char* line, Int_t* error = 0); Process interpreter command directly via CINT interpreter.; Only executable statements are allowed (no variable declarations),; In all other cases use TROOT::ProcessLine().; The possible error codes are defined by TInterpreter::EErrorCode. void ReadSvnInfo(); Read Subversion revision information and branch name from the; etc/svnrev.txt file. const char * GetSvnDate(); Return date/time make was run. void RefreshBrowsers(); Refresh all browsers. Call this method when some command line; command or script has changed the browser contents. Not needed; for objects that have the kMustCleanup bit set. Most useful to; update browsers that show the file system or other objects external; to the running ROOT session. void RemoveClass(TClass* ); Remove a class from the list and map of classes. void Reset(Option_t* option = """"); Delete all global interpreter objects created since the last call to Reset. If option=""a"" is set reset to startup context (i.e. unload also; all loaded files, classes, structs, typedefs, etc.). This function is typically used at the beginning (or end) of an unnamed macro; to clean the en",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TROOT.html:29902,variab,variable,29902,root/html528/TROOT.html,https://root.cern,https://root.cern/root/html528/TROOT.html,2,['variab'],['variable']
Modifiability,". On non-Win32 platforms there is no difference; between ProcessLine() and ProcessLineSync().; The possible error codes are defined by TInterpreter::EErrorCode. In; particular, error will equal to TInterpreter::kProcessing until the; CINT interpreted thread has finished executing the line.; Returns the result of the command, cast to a Long_t. Long_t ProcessLineSync(const char* line, Int_t* error = 0); Process interpreter command via TApplication::ProcessLine().; On Win32 the line will be processed synchronously (i.e. it will; only return when the CINT interpreter thread has finished executing; the line). On non-Win32 platforms there is no difference between; ProcessLine() and ProcessLineSync().; The possible error codes are defined by TInterpreter::EErrorCode.; Returns the result of the command, cast to a Long_t. Long_t ProcessLineFast(const char* line, Int_t* error = 0); Process interpreter command directly via CINT interpreter.; Only executable statements are allowed (no variable declarations),; In all other cases use TROOT::ProcessLine().; The possible error codes are defined by TInterpreter::EErrorCode. void ReadSvnInfo(); Read Subversion revision information and branch name from the; etc/svnrev.txt file. const char * GetSvnDate(); Return date/time make was run. void RefreshBrowsers(); Refresh all browsers. Call this method when some command line; command or script has changed the browser contents. Not needed; for objects that have the kMustCleanup bit set. Most useful to; update browsers that show the file system or other objects external; to the running ROOT session. void RemoveClass(TClass* ); Remove a class from the list and map of classes.; This routine is deprecated, use TClass::RemoveClass directly. void Reset(Option_t* option = """"); Delete all global interpreter objects created since the last call to Reset. If option=""a"" is set reset to startup context (i.e. unload also; all loaded files, classes, structs, typedefs, etc.). This function is typically used",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TROOT.html:30579,variab,variable,30579,root/html532/TROOT.html,https://root.cern,https://root.cern/root/html532/TROOT.html,2,['variab'],['variable']
Modifiability,. PictureAttributes_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » PictureAttributes_t. class PictureAttributes_t. GuiTypes. Types used by the GUI classes. Function Members (Methods); public:. PictureAttributes_t(); PictureAttributes_t(const PictureAttributes_t&); ~PictureAttributes_t(); PictureAttributes_t&operator=(const PictureAttributes_t&). Data Members; public:. UInt_tfClosenessallowable RGB deviation; Colormap_tfColormapcolormap to use; Int_tfDepthdepth of window; UInt_tfHeightheight of picture; Mask_tfMaskmask specifying which attributes are defined; UInt_tfNpixelsnumber of used color pixels; ULong_t*fPixelslist of used color pixels (if set use delete[]); UInt_tfWidthwidth of picture; UInt_tfXHotspotpicture x hotspot coordinate; UInt_tfYHotspotpicture y hotspot coordinate. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: Tue Sep 8 16:58:29 2015 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/PictureAttributes_t.html:969,Inherit,Inheritance,969,root/html534/PictureAttributes_t.html,https://root.cern,https://root.cern/root/html534/PictureAttributes_t.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,. PictureAttributes_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » PictureAttributes_t. class PictureAttributes_t. GuiTypes. Types used by the GUI classes. Function Members (Methods); public:. ~PictureAttributes_t(); PictureAttributes_t&operator=(const PictureAttributes_t&); PictureAttributes_t&operator=(PictureAttributes_t&&); PictureAttributes_t(); PictureAttributes_t(const PictureAttributes_t&); PictureAttributes_t(PictureAttributes_t&&). Data Members; public:. UInt_tfClosenessallowable RGB deviation; Colormap_tfColormapcolormap to use; Int_tfDepthdepth of window; UInt_tfHeightheight of picture; Mask_tfMaskmask specifying which attributes are defined; UInt_tfNpixelsnumber of used color pixels; ULong_t*fPixelslist of used color pixels (if set use delete[]); UInt_tfWidthwidth of picture; UInt_tfXHotspotpicture x hotspot coordinate; UInt_tfYHotspotpicture y hotspot coordinate. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: Tue Jun 30 14:21:22 2015 » Last generated: 2015-06-30 14:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/PictureAttributes_t.html:1067,Inherit,Inheritance,1067,root/html602/PictureAttributes_t.html,https://root.cern,https://root.cern/root/html602/PictureAttributes_t.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,. PictureAttributes_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » PictureAttributes_t. class PictureAttributes_t. GuiTypes. Types used by the GUI classes. Function Members (Methods); public:. ~PictureAttributes_t(); PictureAttributes_t&operator=(const PictureAttributes_t&); PictureAttributes_t&operator=(PictureAttributes_t&&); PictureAttributes_t(); PictureAttributes_t(const PictureAttributes_t&); PictureAttributes_t(PictureAttributes_t&&). Data Members; public:. UInt_tfClosenessallowable RGB deviation; Colormap_tfColormapcolormap to use; Int_tfDepthdepth of window; UInt_tfHeightheight of picture; Mask_tfMaskmask specifying which attributes are defined; UInt_tfNpixelsnumber of used color pixels; ULong_t*fPixelslist of used color pixels (if set use delete[]); UInt_tfWidthwidth of picture; UInt_tfXHotspotpicture x hotspot coordinate; UInt_tfYHotspotpicture y hotspot coordinate. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: Tue Sep 8 17:32:54 2015 » Last generated: 2015-09-08 17:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/PictureAttributes_t.html:1067,Inherit,Inheritance,1067,root/html604/PictureAttributes_t.html,https://root.cern,https://root.cern/root/html604/PictureAttributes_t.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,. Point_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » Point_t. class Point_t. GuiTypes. Types used by the GUI classes. Function Members (Methods); public:. Point_t(); Point_t(const Point_t&); ~Point_t(); Point_t&operator=(const Point_t&). Data Members; public:. Short_tfX; Short_tfY. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: Tue Sep 8 16:58:31 2015 » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/Point_t.html:462,Inherit,Inheritance,462,root/html534/Point_t.html,https://root.cern,https://root.cern/root/html534/Point_t.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,. Point_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » Point_t. class Point_t. GuiTypes. Types used by the GUI classes. Function Members (Methods); public:. ~Point_t(); Point_t&operator=(const Point_t&); Point_t&operator=(Point_t&&); Point_t(); Point_t(const Point_t&); Point_t(Point_t&&). Data Members; public:. Short_tfX; Short_tfY. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: Tue Jun 30 14:21:25 2015 » Last generated: 2015-06-30 14:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/Point_t.html:512,Inherit,Inheritance,512,root/html602/Point_t.html,https://root.cern,https://root.cern/root/html602/Point_t.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,. Point_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » Point_t. class Point_t. GuiTypes. Types used by the GUI classes. Function Members (Methods); public:. ~Point_t(); Point_t&operator=(const Point_t&); Point_t&operator=(Point_t&&); Point_t(); Point_t(const Point_t&); Point_t(Point_t&&). Data Members; public:. Short_tfX; Short_tfY. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation. » Last changed: Tue Sep 8 17:32:55 2015 » Last generated: 2015-09-08 17:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/Point_t.html:512,Inherit,Inheritance,512,root/html604/Point_t.html,https://root.cern,https://root.cern/root/html604/Point_t.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". Private Attributes; std::size_t _bufferIdx = 0;  ; std::vector< std::vector< double > > _buffers;  ; std::vector< RooBatchCompute::Config > _cfgs;  ; std::vector< std::span< const double > > _ctx;  ; std::span< double > _currentOutput;  ; bool _enableVectorBuffers = false;  ; OffsetMode _offsetMode = OffsetMode::WithoutOffset;  . Friends; class Evaluator;  . #include <RooFit/EvalContext.h>; Member Enumeration Documentation. ◆ OffsetMode. enum class RooFit::EvalContext::OffsetMode. strong . EnumeratorWithoutOffset ; WithOffset ; OnlyOffset . Definition at line 86 of file EvalContext.h. Member Function Documentation. ◆ at() [1/2]. std::span< const double > RooFit::EvalContext::at ; (; RooAbsArg const * ; arg, . RooAbsArg const * ; caller = nullptr . ). Definition at line 35 of file EvalContext.cxx. ◆ at() [2/2]. template<class T > . std::span< const double > RooFit::EvalContext::at ; (; RooTemplateProxy< T > const & ; proxy). inline . Definition at line 104 of file EvalContext.h. ◆ config(). RooBatchCompute::Config RooFit::EvalContext::config ; (; RooAbsArg const * ; arg); const. Definition at line 73 of file EvalContext.cxx. ◆ enableVectorBuffers(). void RooFit::EvalContext::enableVectorBuffers ; (; bool ; enable). inline . Definition at line 110 of file EvalContext.h. ◆ output(). std::span< double > RooFit::EvalContext::output ; (; ). inline . Definition at line 112 of file EvalContext.h. ◆ resetVectorBuffers(). void RooFit::EvalContext::resetVectorBuffers ; (; ). inline . Definition at line 111 of file EvalContext.h. ◆ resize(). void RooFit::EvalContext::resize ; (; std::size_t ; n). Definition at line 82 of file EvalContext.cxx. ◆ set(). void RooFit::EvalContext::set ; (; RooAbsArg const * ; arg, . std::span< const double > const & ; span . ). inline . Definition at line 91 of file EvalContext.h. ◆ setConfig(). void RooFit::EvalContext::setConfig ; (; RooAbsArg const * ; arg, . RooBatchCompute::Config const & ; config . ). Definition at line 65 of file EvalConte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFit_1_1EvalContext.html:2177,config,config,2177,doc/master/classRooFit_1_1EvalContext.html,https://root.cern,https://root.cern/doc/master/classRooFit_1_1EvalContext.html,1,['config'],['config']
Modifiability,". Private Member Functions;  TSlave (const char *host, const char *ord, Int_t perf, const char *image, TProof *proof, Int_t stype, const char *workdir, const char *msd, Int_t=1);  Create a PROOF slave object. Called via the TProof ctor. ;  ;  TSlave (const TSlave &s);  ; void Init (const char *host, Int_t port, Int_t stype);  Init a PROOF slave object. ;  ; Int_t OldAuthSetup (Bool_t master, TString wconf);  Setup authentication related stuff for old versions. ;  ; void operator= (const TSlave &);  . Static Private Member Functions; static TSlave * Create (const char *url, const char *ord, Int_t perf, const char *image, TProof *proof, Int_t stype, const char *workdir, const char *msd, Int_t nwk=1);  Static method returning the appropriate TSlave object for the remote server. ;  . Static Private Attributes; static TSlave_t fgTXSlaveHook = 0;  . Friends; class TProof;  ; class TProofLite;  ; class TSlaveLite;  ; class TXSlave;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TSlave.h>. Inheritance diagram for TSlave:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ ESlaveStatus. enum TSlave::ESlaveStatus. EnumeratorkInvalid ; kActive ; kInactive . Definition at line 56 of file TSlave.h. ◆ ESlaveType. enum TSlave::ESlaveType. EnumeratorkMaster ; kSlave . Definition at line 55 of file TSlave.h. ◆ EStatusBits. enum TSlave::EStatusBits. EnumeratorkOutputRequested . Definition at line 57 of file TSlave.h. Constructor & Destructor Documentation. ◆ TSlave() [1/3]. TSlave::TSlave ; (; const TSlave & ; s). inlineprivate . Definition at line 65 of file TSlave.h. ◆ TSlave() [2/3]. TSlave::TSlave ; (; const char * ; host, . const char * ; ord, . Int_t ; perf, . const char * ; image, . TProof * ; proof, . Int_t ; stype, . const char * ; workdir, . const char * ; msd, . Int_t ; = 1 . ). private . Create a PROOF slave o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSlave.html:13872,inherit,inherited,13872,doc/master/classTSlave.html,https://root.cern,https://root.cern/doc/master/classTSlave.html,1,['inherit'],['inherited']
Modifiability,". ProcInfo_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » ProcInfo_t. class ProcInfo_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System. Function Members (Methods); public:. ProcInfo_t(); ProcInfo_t(const ProcInfo_t&); virtual~ProcInfo_t(); static TClass*Class(); virtual TClass*IsA() const; ProcInfo_t&operator=(const ProcInfo_t&); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; public:. Float_tfCpuSyssystem time used by this process in seconds; Float_tfCpuUseruser time used by this process in seconds; Long_tfMemResidentresident memory used by this process in KB; Long_tfMemVirtualvirtual memory used by this process in KB. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ProcInfo_t(); { }. virtual ~ProcInfo_t(); { }. TSystem& operator=(const ProcInfo_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 16:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ProcInfo_t.html:954,Inherit,Inheritance,954,root/html534/ProcInfo_t.html,https://root.cern,https://root.cern/root/html534/ProcInfo_t.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". ProcInfo_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » ProcInfo_t. class ProcInfo_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System.; This is not an ABC in the strict sense of the (C++) word. For; every member function there is an implementation (often not more; than a call to AbstractMethod() which prints a warning saying; that the method should be overridden in a derived class), which; allows a simple partial implementation for new OS'es. Function Members (Methods); public:. virtual~ProcInfo_t(); static TClass*Class(); virtual TClass*IsA() const; ProcInfo_t&operator=(const ProcInfo_t&); ProcInfo_t(); ProcInfo_t(const ProcInfo_t&); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; public:. Float_tfCpuSyssystem time used by this process in seconds; Float_tfCpuUseruser time used by this process in seconds; Long_tfMemResidentresident memory used by this process in KB; Long_tfMemVirtualvirtual memory used by this process in KB. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ProcInfo_t(); { }. virtual ~ProcInfo_t(); { }. TSystem& operator=(const ProcInfo_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-06-30 14:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ProcInfo_t.html:1301,Inherit,Inheritance,1301,root/html602/ProcInfo_t.html,https://root.cern,https://root.cern/root/html602/ProcInfo_t.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". ProcInfo_t. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » CORE; » BASE; » ProcInfo_t. class ProcInfo_t. TSystem. Abstract base class defining a generic interface to the underlying; Operating System.; This is not an ABC in the strict sense of the (C++) word. For; every member function there is an implementation (often not more; than a call to AbstractMethod() which prints a warning saying; that the method should be overridden in a derived class), which; allows a simple partial implementation for new OS'es. Function Members (Methods); public:. virtual~ProcInfo_t(); static TClass*Class(); virtual TClass*IsA() const; ProcInfo_t&operator=(const ProcInfo_t&); ProcInfo_t(); ProcInfo_t(const ProcInfo_t&); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; public:. Float_tfCpuSyssystem time used by this process in seconds; Float_tfCpuUseruser time used by this process in seconds; Long_tfMemResidentresident memory used by this process in KB; Long_tfMemVirtualvirtual memory used by this process in KB. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ProcInfo_t(); { }. virtual ~ProcInfo_t(); { }. TSystem& operator=(const ProcInfo_t& ). » Author: Fons Rademakers 15/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-09-08 17:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ProcInfo_t.html:1301,Inherit,Inheritance,1301,root/html604/ProcInfo_t.html,https://root.cern,https://root.cern/root/html604/ProcInfo_t.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,. Protected Attributes; std::vector< Float_t > classValues;  ; TString fFilenameClassifier;  ; TString fInit;  ; Double_t fLearningRate;  ; TString fLoss;  ; Int_t fMaxDepth;  ; TString fMaxFeatures;  ; TString fMaxLeafNodes;  ; Int_t fMinSamplesLeaf;  ; Int_t fMinSamplesSplit;  ; Double_t fMinWeightFractionLeaf;  ; Int_t fNestimators;  ; UInt_t fNoutputs;  ; UInt_t fNvars;  ; TString fRandomState;  ; Double_t fSubsample;  ; Int_t fVerbose;  ; Bool_t fWarmStart;  ; std::vector< Double_t > mvaValues;  ; PyObject * pInit;  ; PyObject * pLearningRate;  ; PyObject * pLoss;  ; PyObject * pMaxDepth;  ; PyObject * pMaxFeatures;  ; PyObject * pMaxLeafNodes;  ; PyObject * pMinSamplesLeaf;  ; PyObject * pMinSamplesSplit;  ; PyObject * pMinWeightFractionLeaf;  ; PyObject * pNestimators;  ; PyObject * pRandomState;  ; PyObject * pSubsample;  ; PyObject * pVerbose;  ; PyObject * pWarmStart;  ;  Protected Attributes inherited from TMVA::PyMethodBase; PyObject * fClassifier;  ; PyObject * fLocalNS;  ; PyObject * fModule;  ; PyObject * fPyReturn;  ;  Protected Attributes inherited from TMVA::MethodBase; Types::EAnalysisType fAnalysisType;  ; UInt_t fBackgroundClass;  ; bool fExitFromTraining = false;  ; std::vector< TString > * fInputVars;  ; IPythonInteractive * fInteractive = nullptr;  temporary dataset used when evaluating on a different data (used by MethodCategory::GetMvaValues) ;  ; UInt_t fIPyCurrentIter = 0;  ; UInt_t fIPyMaxIter = 0;  ; std::vector< Float_t > * fMulticlassReturnVal;  ; Int_t fNbins;  ; Int_t fNbinsH;  ; Int_t fNbinsMVAoutput;  ; Ranking * fRanking;  ; std::vector< Float_t > * fRegressionReturnVal;  ; Results * fResults;  ; UInt_t fSignalClass;  ; DataSet * fTmpData = nullptr;  temporary event when testing on a different DataSet than the own one ;  ; const Event * fTmpEvent;  ;  Protected Attributes inherited from TMVA::Configurable; MsgLogger * fLogger;  ! message logger ;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodPyGTB.html:25072,inherit,inherited,25072,doc/master/classTMVA_1_1MethodPyGTB.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodPyGTB.html,4,['inherit'],['inherited']
Modifiability,". Protected Member Functions; virtual void ConnectSignals2Slots ();  Connect signals to slots. ;  ; void CreateBinTab ();  Create the Binning tab. ;  ;  Protected Member Functions inherited from TGedFrame; virtual void MakeTitle (const char *title);  Create attribute frame title. ;  ;  Protected Member Functions inherited from TGFrame; void DoRedraw () override;  Redraw the frame. ;  ; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & operator= (const TGObject &tgo);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  . Static Protected Member Functions; static TGComboBox * BuildHistContComboBox (TGFrame *parent, Int_t id);  Create contour combo box. ;  ; static TGComboBox * BuildHistCoordsComboBox (TGFrame *parent, Int_t id);  Create coordinate system combo box. ;  ; static TGComboBox * BuildHistTypeComboBox (TGFrame *parent, Int_t id);  Create histogram type combo box. ;  ;  Static Protected Member Functions inherited from TGFrame; static Time_t GetLastClick ();  Get time of last mouse click. ;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2Editor.html:31131,inherit,inherited,31131,doc/master/classTH2Editor.html,https://root.cern,https://root.cern/doc/master/classTH2Editor.html,3,['inherit'],['inherited']
Modifiability,". Public Member Functions;  TFileCacheWrite ();  Default Constructor. ;  ;  TFileCacheWrite (TFile *file, Int_t buffersize);  Creates a TFileCacheWrite data structure. ;  ;  ~TFileCacheWrite () override;  Destructor. ;  ; virtual Bool_t Flush ();  Flush the current write buffer to the file. ;  ; virtual Int_t GetBytesInCache () const;  ; TClass * IsA () const override;  ; void Print (Option_t *option="""") const override;  Print class internal structure. ;  ; virtual Int_t ReadBuffer (char *buf, Long64_t pos, Int_t len);  Called by the read cache to check if the requested data is not in the write cache buffer. ;  ; virtual void SetFile (TFile *file);  Set the file using this cache. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Int_t WriteBuffer (const char *buf, Long64_t pos, Int_t len);  Write buffer at position pos in the write buffer. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFileCacheWrite.html:1890,inherit,inherited,1890,doc/master/classTFileCacheWrite.html,https://root.cern,https://root.cern/doc/master/classTFileCacheWrite.html,1,['inherit'],['inherited']
Modifiability,". PyROOT::TPyException. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » BINDINGS; » PYROOT; » PyROOT::TPyException. class PyROOT::TPyException: public exception. C++ exception for throwing python exceptions. Purpose: A C++ exception class for throwing python exceptions; through C++ code.; Created: Apr, 2004, sss, from the version in D0's python_util. Note: Don't be tempted to declare the virtual functions defined here; as inline.; If you do, you may not be able to properly throw these; exceptions across shared libraries. Function Members (Methods); public:. virtual~TPyException(); static TClass*Class(); virtual TClass*IsA() const; PyROOT::TPyException&operator=(const PyROOT::TPyException&); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); PyROOT::TPyExceptionTPyException(); PyROOT::TPyExceptionTPyException(const PyROOT::TPyException&); virtual const char*what() const. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPyException(); default constructor. ~TPyException(); destructor. const char* what() const; Return reason for throwing this exception: a python exception was raised. TPyException(); default constructor. » Last changed: root/pyroot:$Name: $:$Id$ » Last generated: 2015-06-02 12:57; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/PyROOT__TPyException.html:1160,Inherit,Inheritance,1160,root/html602/PyROOT__TPyException.html,https://root.cern,https://root.cern/root/html602/PyROOT__TPyException.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". PyROOT::TPyException. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » BINDINGS; » PYROOT; » PyROOT::TPyException. class PyROOT::TPyException: public exception. C++ exception for throwing python exceptions. Purpose: A C++ exception class for throwing python exceptions; through C++ code.; Created: Apr, 2004, sss, from the version in D0's python_util. Note: Don't be tempted to declare the virtual functions defined here; as inline.; If you do, you may not be able to properly throw these; exceptions across shared libraries. Function Members (Methods); public:. virtual~TPyException(); static TClass*Class(); virtual TClass*IsA() const; PyROOT::TPyException&operator=(const PyROOT::TPyException&); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); PyROOT::TPyExceptionTPyException(); PyROOT::TPyExceptionTPyException(const PyROOT::TPyException&); virtual const char*what() const. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPyException(); default constructor. ~TPyException(); destructor. const char* what() const; Return reason for throwing this exception: a python exception was raised. TPyException(); default constructor. » Last changed: root/pyroot:$Name: $:$Id$ » Last generated: 2015-06-02 15:18; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/PyROOT__TPyException.html:1160,Inherit,Inheritance,1160,root/html604/PyROOT__TPyException.html,https://root.cern,https://root.cern/root/html604/PyROOT__TPyException.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". PyROOT::TPyException. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » BINDINGS; » PYROOT; » PyROOT::TPyException. class PyROOT::TPyException: public exception. C++ exception for throwing python exceptions. Purpose: A C++ exception class for throwing python exceptions; through C++ code.; Created: Apr, 2004, sss, from the version in D0's python_util. Note: Don't be tempted to declare the virtual functions defined here; as inline.; If you do, you may not be able to properly throw these; exceptions across shared libraries. Function Members (Methods); public:. virtual~TPyException(); static TClass*Class(); virtual TClass*IsA() const; PyROOT::TPyException&operator=(const PyROOT::TPyException&); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); PyROOT::TPyExceptionTPyException(); PyROOT::TPyExceptionTPyException(const PyROOT::TPyException&); virtual const char*what() const. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPyException(); default constructor. ~TPyException(); destructor. const char* what() const; Return reason for throwing this exception: a python exception was raised. TPyException(); default constructor. » Last changed: root/pyroot:$Name: $:$Id$ » Last generated: 2015-03-10 17:09; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/PyROOT__TPyException.html:1149,Inherit,Inheritance,1149,root/html534/PyROOT__TPyException.html,https://root.cern,https://root.cern/root/html534/PyROOT__TPyException.html,2,['Inherit'],"['Inheritance', 'Inherited']"
Modifiability,". ROOT Version 6.32 Release Notes. ROOT Version 6.32 Release Notes; 2024-05-26. Introduction; Deprecation and Removal; Core Libraries; I/O Libraries; hadd respects compression settings. TTree Libraries; Add files from subdirectories with TChain::Add globbing; Improved efficiency of TTree friends with indices. RNTuple; Histogram Libraries; Parallelism; RooFit Libraries; New CPU likelihood evaluation backend by default; Asymptotically correct uncertainties for extended unbinned likelihood fits; Compile your code with memory safe interfaces; Removal of some memory-unsafe interfaces; Deprecation of legacy iterators; Deprecation of legacy test statistics classes in public interface; Change of RooParamHistFunc; Renaming of some RooFit classes. RDataFrame; Graphics backends; 2D Graphics Libraries; 3D Graphics Libraries; REve. PROOF Libraries; PyROOT; Different representation of std::string; No more implicit conversion of static size char buffer to Python strings; Deprecate the attribute pythonization of TDirectory in favor of item-getting syntax; Removal of Python 2 support; More usage of the public cppyy API. Class Reference Guide; Build, Configuration and Testing Infrastructure; Bugs and Issues fixed in this release; Release 6.32.02; Items addressed in this release. Release 6.32.04; Items addressed in this release. Release 6.32.06; Items addressed in this release. HEAD of the v6-32-00-patches branch. Introduction; ROOT version 6.32.00 was released on 28 May 2024. This release is a long term support one, ideal for inclusion in production or data taking software stacks of experiments.; For more information, see:; http://root.cern; The following people have contributed to this new version:; Anton Alkin, Sungkyunkwan University; Guilherme Amadio, CERN/IT,; Abhigyan Acherjee, University of Cincinnati,; Bertrand Bellenot, CERN/EP-SFT,; Jakob Blomer, CERN/EP-SFT,; Rene Brun,; Carsten Burgard, DESY; Will Buttinger, RAL,; Philippe Canal, FNAL,; Jolly Chen, CERN/EP-SFT,; Olivier Co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/release-notes.html:463,extend,extended,463,doc/v632/release-notes.html,https://root.cern,https://root.cern/doc/v632/release-notes.html,1,['extend'],['extended']
Modifiability,". ROOT: Axis2 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; List of all members ; Axis2 Class Reference. . Definition at line 843 of file xRooNode.cxx. Public Member Functions; const RooAbsBinning * binning () const;  ; Int_t FindFixBin (const char *label) const override;  Find bin number with label. ;  ; Int_t FindFixBin (double x) const override;  Find bin number corresponding to abscissa x. ;  ; double GetBinLowEdge (Int_t bin) const override;  Return low edge of bin. ;  ; double GetBinUpEdge (Int_t bin) const override;  Return up edge of bin. ;  ; double GetBinWidth (Int_t bin) const override;  Return bin width. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; void Set (Int_t nbins, const double *xbins) override;  Initialize axis with variable bins. ;  ; void Set (Int_t nbins, const float *xbins) override;  Initialize axis with variable bins. ;  ; void Set (Int_t nbins, double xmin, double xmax) override;  Initialize axis with fix bins. ;  ; void SetTitle (const char *title) override;  Set the title of the TNamed. ;  ;  TAxis ();  Default constructor. ;  ;  TAxis (const TAxis &axis);  Copy constructor. ;  ;  TAxis (Int_t nbins, const Double_t *xbins);  Axis constructor for variable bin size. ;  ;  TAxis (Int_t nbins, Double_t xmin, Double_t xmax);  Axis constructor for axis with fix bin size. ;  ;  Public Member Functions inherited from TAxis;  TAxis ();  Default constructor. ;  ;  TAxis (const TAxis &axis);  Copy constructor. ;  ;  TAxis (Int_t nbins, const Double_t *xbins);  Axis constructor for variable bin size. ;  ;  TAxis (Int_t nbins, Double_t xmin, Double_t xmax);  Axis constructor for axis with fix bin size. ;  ;  ~TAxis () override;  Destructor. ;  ; Bool_t CanBeAlphanumeric ();  ; Bool_t CanExtend () const;  ; void CenterLabels (Bool_t center=kTRUE);  Center axis labels. ;  ; void CenterTitle (Boo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classAxis2.html:907,variab,variable,907,doc/master/classAxis2.html,https://root.cern,https://root.cern/doc/master/classAxis2.html,2,['variab'],['variable']
Modifiability,". ROOT: Base ROOT classes. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files |; Classes ; Base ROOT classesCore ROOT classes. ; The Base classes of ROOT. ; The base classes of the ROOT system provide the core of the system. They are available to all other classes. They range from a set of abstract interfaces (TVirtualXXXXX classes), to a wide range of basic utility classes providing basic services like strings, regular expression, timers, date/time, md5 checksumming, signal/slots event handling, plugin handler, run-config resource processor, etc. etc. . Files; file  RConversionRuleParser.cxx;  ; file  RDirectory.cxx;  ; file  RDirectory.hxx;  ; file  RDirectoryEntry.hxx;  ; file  RError.cxx;  ; file  RError.hxx;  ; file  RFile.cxx;  ; file  RFile.hxx;  ; file  RIndexIter.hxx;  ; file  RLogger.cxx;  ; file  RLogger.hxx;  ; file  RNotFn.hxx;  ; file  RRangeCast.hxx;  ; file  RSpan.hxx;  ; file  span.hxx;  ; file  StringUtils.hxx;  ; file  TClassEdit.cxx;  . Classes; class  ROOT::Experimental::RError;  Captures diagnostics related to a ROOT runtime error. More...;  ; class  ROOT::Experimental::RException;  Base class for all ROOT issued exceptions. More...;  ; class  ROOT::Experimental::RResult< T >;  The class is used as a return type for operations that can fail; wraps a value of type T or an RError. More...;  ; class  ROOT::Experimental::RResultBase;  Common handling of the error case for RResult<T> (T != void) and RResult<void> More...;  ; class  TApplication;  This class creates the ROOT Application Environment that interfaces to the windowing system eventloop and eventhandlers. More...;  ; class  TApplicationImp;  ABC describing GUI independent application implementation protocol. More...;  ; class  TAtt3D;  Use this attribute class when an object should have 3D capabilities. More...;  ; class  TAttAxis;  Manages histogram axis attributes. More...;  ; class  TAttBBox;  Helper for management of bounding-box information. More...;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Base.html:538,plugin,plugin,538,doc/master/group__Base.html,https://root.cern,https://root.cern/doc/master/group__Base.html,2,"['config', 'plugin']","['config', 'plugin']"
Modifiability,". ROOT: Classification Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classification Class ReferenceTMVA. ; Class to perform two class classification. ; The first step before any analysis is to prepare the data, to do that you need to create an object of TMVA::DataLoader, in this object you need to configure the variables and the number of events to train/test. The class TMVA::Experimental::Classification needs a TMVA::DataLoader object, optional a TFile object to save the results and some extra options in a string like ""V:Color:Transformations=I;D;P;U;G:Silent:DrawProgressBar:ModelPersistence:Jobs=2"" where: V = verbose output Color = coloured screen output Silent = batch mode: boolean silent flag inhibiting any output from TMVA Transformations = list of transformations to test. DrawProgressBar = draw progress bar to display training and testing. ModelPersistence = to save the trained model in xml or serialized files. Jobs = number of ml methods to test/train in parallel using MultiProc, requires to call Evaluate method. Basic example. void classification(UInt_t jobs = 2); {; TMVA::Tools::Instance();; ; TFile *input(0);; TString fname = ""./tmva_class_example.root"";; if (!gSystem->AccessPathName(fname)) {; input = TFile::Open(fname); // check if file in local directory exists; } else {; TFile::SetCacheFileDir(""."");; input = TFile::Open(""http://root.cern/files/tmva_class_example.root"", ""CACHEREAD"");; }; if (!input) {; std::cout << ""ERROR: could not open data file"" << std::endl;; exit(1);; }; ; // Register the training and test trees; ; TTree *signalTree = (TTree *)input->Get(""TreeS"");; TTree *background = (TTree *)input->Get(""TreeB"");; ; TMVA::DataLoader *dataloader = new TMVA::DataLoader(""dataset"");; ; dataloader->AddVariable(""myvar1 := var1+var2"", 'F');; dataloader->AddVariable(""myvar2 := var1-var2"", ""Expression 2"", """", 'F');; dataloader->AddVariable(""var3"", ""Variable 3"", ""units"", 'F');; dataloader->AddVariable(""var4",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Classification.html:351,config,configure,351,doc/master/classTMVA_1_1Classification.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Classification.html,2,"['config', 'variab']","['configure', 'variables']"
Modifiability,. ROOT: Configuration Struct Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Attributes |; List of all members ; Configuration Struct Reference. . Definition at line 3 of file RooAbsTestStatistic.h. Public Attributes; std::string addCoefRangeName;  ; bool binnedL = false;  ; bool cloneInputData = true;  ; double integrateOverBinsPrecision = -1.;  ; RooFit::MPSplit interleave = RooFit::BulkPartition;  ; int nCPU = 1;  ; std::string rangeName;  Stores the configuration parameters for RooAbsTestStatistic. ;  ; bool splitCutRange = false;  ; bool takeGlobalObservablesFromData = false;  ; bool verbose = true;  . #include <RooAbsTestStatistic.h>; Member Data Documentation. ◆ addCoefRangeName. std::string Configuration::addCoefRangeName. Definition at line 6 of file RooAbsTestStatistic.h. ◆ binnedL. bool Configuration::binnedL = false. Definition at line 13 of file RooAbsTestStatistic.h. ◆ cloneInputData. bool Configuration::cloneInputData = true. Definition at line 11 of file RooAbsTestStatistic.h. ◆ integrateOverBinsPrecision. double Configuration::integrateOverBinsPrecision = -1. Definition at line 12 of file RooAbsTestStatistic.h. ◆ interleave. RooFit::MPSplit Configuration::interleave = RooFit::BulkPartition. Definition at line 8 of file RooAbsTestStatistic.h. ◆ nCPU. int Configuration::nCPU = 1. Definition at line 7 of file RooAbsTestStatistic.h. ◆ rangeName. std::string Configuration::rangeName. Stores the configuration parameters for RooAbsTestStatistic. ; Definition at line 5 of file RooAbsTestStatistic.h. ◆ splitCutRange. bool Configuration::splitCutRange = false. Definition at line 10 of file RooAbsTestStatistic.h. ◆ takeGlobalObservablesFromData. bool Configuration::takeGlobalObservablesFromData = false. Definition at line 14 of file RooAbsTestStatistic.h. ◆ verbose. bool Configuration::verbose = true. Definition at line 9 of file RooAbsTestStatistic.h. Collaboration diagram for Configurati,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/structConfiguration.html:531,config,configuration,531,doc/v632/structConfiguration.html,https://root.cern,https://root.cern/doc/v632/structConfiguration.html,1,['config'],['configuration']
Modifiability,". ROOT: Containers. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; ContainersCore ROOT classes. ; The containers and generators the ROOT framework offers. ; Collections are a key feature of the ROOT system. Many, if not most, of the applications you write will use collections. If you have used polymorphic C++ collections before, some of this material will be review. However, much of this tutorial covers aspects of collections specific to the ROOT system. In this tutorial the following features will be demonstrated:. Using collections; How to create instances of collections; The difference between lists, ordered collections, hash-tables, maps, etc.; How to add and remove elements of a collection; How to search a collection for a specific element; How to access and modify collection elements; How to iterate over a collection; How to manage memory for collections and collection elements; How collection elements are tested for equality (IsEqual()); How collection elements are compared (Compare()) in case of sorted collections; How collection elements are hashed (Hash()) in hash tables . Classes; class  TArray;  Abstract array base class. More...;  ; class  TArrayC;  Array of chars or bytes (8 bits per element). More...;  ; class  TArrayD;  Array of doubles (64 bits per element). More...;  ; class  TArrayF;  Array of floats (32 bits per element). More...;  ; class  TArrayI;  Array of integers (32 bits per element). More...;  ; class  TArrayL;  Array of longs (32 or 64 bits per element). More...;  ; class  TArrayL64;  Array of long64s (64 bits per element). More...;  ; class  TArrayS;  Array of shorts (16 bits per element). More...;  ; class  TBits;  Container of bits. More...;  ; class  TBtree;  B-tree class. More...;  ; class  TClassTable;  This class registers for all classes their name, id and dictionary function in a hash table. More...;  ; class  TClonesArray;  An array of clone (identical) objects. More...;  ; class  TColl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Containers.html:339,polymorphi,polymorphic,339,doc/master/group__Containers.html,https://root.cern,https://root.cern/doc/master/group__Containers.html,1,['polymorphi'],['polymorphic']
Modifiability,". ROOT: DummyObject Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; DummyObject Class Reference. . Definition at line 56 of file rootqt5.cpp. Public Member Functions;  ~DummyObject () override;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classDummyObject.html:344,inherit,inherited,344,doc/master/classDummyObject.html,https://root.cern,https://root.cern/doc/master/classDummyObject.html,1,['inherit'],['inherited']
Modifiability,. ROOT: FITS files interface tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; FITS files interface tutorialsTutorials. ; Examples showing the FITS file interface. . Files; file  FITS_tutorial1.C;   Open a FITS file and retrieve the first plane of the image array as a TImage object ;  ; file  FITS_tutorial2.C;   Open a FITS file whose primary array represents a spectrum (flux vs wavelength). ;  ; file  FITS_tutorial3.C;   Open a FITS file and retrieve the first plane of the image array as a TImage object. ;  ; file  FITS_tutorial4.C;   Open a FITS file whose primary array represents a spectrum (flux vs wavelength). ;  ; file  FITS_tutorial5.C;   Open a FITS file whose primary array represents a spectrum (flux vs wavelength) ;  ; file  FITS_tutorial6.C;   Open a FITS file whose primary array represents a spectrum table (flux vs wavelength) and dump its columns ;  ; file  FITS_tutorial7.C;   Open a FITS file that contains a catalog of astronomical objects and dump some of its columns ;  ; file  FITS_tutorial8.C;   Open a FITS file with columns containing variable-length arrays. ;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:34 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__FITS.html:1119,variab,variable-length,1119,doc/master/group__tutorial__FITS.html,https://root.cern,https://root.cern/doc/master/group__tutorial__FITS.html,1,['variab'],['variable-length']
Modifiability,. ROOT: File List. ROOT;  6.06/09. Reference Guide. ROOT Home Page; Main Page; Related Pages; User's Classes; Namespaces; All Classes; Files; Release Notes. File List; File Members. File List . Here is a list of all files with brief descriptions:; [detail level 1234567];  ► bindings;  ► pyroot;  ► inc;  LinkDef.h;  TPyArg.h;  TPyDispatcher.h;  TPyException.h;  TPyFitFunction.h;  TPyReturn.h;  TPyROOTApplication.h;  TPySelector.h;  TPython.h;  ► ROOTaaS;  ► config;  ► nbconvert;  sample_config.py;  ► notebook;  sample_config.py;  ► html;  ► export;  __init__.py;  cpphighlighter.py;  ► static;  ► js;  custom.js;  __init__.py;  ► iPyROOT;  __init__.py;  cppcompleter.py;  cppmagic.py;  cpptransformer.py;  utils.py;  __init__.py;  ► src;  Converters.cxx;  Converters.h;  Cppyy.cxx;  Cppyy.h;  Executors.cxx;  Executors.h;  MethodProxy.cxx;  MethodProxy.h;  ObjectProxy.cxx;  ObjectProxy.h;  PropertyProxy.cxx;  PropertyProxy.h;  PyCallable.h;  PyROOT.h;  PyRootType.cxx;  PyRootType.h;  PyStrings.cxx;  PyStrings.h;  python64.c;  Pythonize.cxx;  Pythonize.h;  RootModule.cxx;  RootWrapper.cxx;  RootWrapper.h;  TCallContext.cxx;  TCallContext.h;  TClassMethodHolder.cxx;  TClassMethodHolder.h;  TConstructorHolder.cxx;  TConstructorHolder.h;  TCustomPyTypes.cxx;  TCustomPyTypes.h;  TemplateProxy.cxx;  TemplateProxy.h;  TFunctionHolder.cxx;  TFunctionHolder.h;  TMemoryRegulator.cxx;  TMemoryRegulator.h;  TMethodHolder.cxx;  TMethodHolder.h;  TPyArg.cxx;  TPyBufferFactory.cxx;  TPyBufferFactory.h;  TPyClassGenerator.cxx;  TPyClassGenerator.h;  TPyDispatcher.cxx;  TPyException.cxx;  TPyFitFunction.cxx;  TPyReturn.cxx;  TPyROOTApplication.cxx;  TPySelector.cxx;  TPython.cxx;  TSetItemHolder.cxx;  TSetItemHolder.h;  TTupleOfInstances.cxx;  TTupleOfInstances.h;  Utility.cxx;  Utility.h;  _pythonization.py;  cppyy.py;  ROOT.py;  ► r;  ► inc;  LinkDef.h;  RExports.h;  TRDataFrame.h;  TRDataFrame__ctors.h;  TRFunctionExport.h;  TRFunctionImport.h;  TRFunctionImport__oprtr.h;  TRInterface.h;,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html606/files.html:461,config,config,461,root/html606/files.html,https://root.cern,https://root.cern/root/html606/files.html,2,['config'],['config']
Modifiability,". ROOT: Fit Tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; Fit TutorialsTutorials. ; These tutorials illustrate the main fitting features. Their names are related to the aspect which is treated in the code. . Files; file  combinedFit.C;   Combined (simultaneous) fit of two histogram with separate functions and some common parameters ;  ; file  combinedFit.py;   Combined (simultaneous) fit of two histogram with separate functions and some common parameters ;  ; file  ConfidenceIntervals.C;   Illustrates TVirtualFitter::GetConfidenceIntervals This method computes confidence intervals for the fitted function ;  ; file  ErrorIntegral.C;   Estimate the error in the integral of a fitted function taking into account the errors in the parameters resulting from the fit. ;  ; file  exampleFit3D.C;   example of fitting a 3D function Typical multidimensional parametric regression where the predictor depends on 3 variables ;  ; file  fit1.C;   Simple fitting example (1-d histogram with an interpreted function) ;  ; file  fit2.C;   Fitting a 2-D histogram This tutorial illustrates : ;  ; file  fit2a.C;   Fitting a 2-D histogram (a variant) This tutorial illustrates : ;  ; file  fit2d.C;   Example illustrating how to fit a 2-d histogram of type y=f(x) ;  ; file  fit2dHist.C;   Example to fit two histograms at the same time via the Fitter class. ;  ; file  fitCircle.C;   Generate points distributed with some errors around a circle Fit a circle through the points and draw To run the script, do, eg ;  ; file  fitcont.C;   Example illustrating how to draw the n-sigma contour of a Minuit fit. ;  ; file  fitConvolution.C;   Tutorial for convolution of two functions ;  ; file  fitConvolution.py;   Tutorial for convolution of two functions ;  ; file  fitExclude.C;   Illustrates how to fit excluding points in a given range. ;  ; file  fithist.C;   Example of fit where the model is histogram + function ;  ; file  fitLinear.C;   Example of ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__fit.html:967,variab,variables,967,doc/master/group__tutorial__fit.html,https://root.cern,https://root.cern/doc/master/group__tutorial__fit.html,1,['variab'],['variables']
Modifiability,". ROOT: Function Classes and Interfaces. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Modules |; Classes ; Function Classes and InterfacesMath » MathCore. ; Interfaces (abstract classes) and Base classes used in MathCore and MathMore numerical methods for describing function classes. ; They define function and gradient evaluation and as well the functionality for dealing with parameters in the case of parametric functions which are used for fitting and data modeling. Included are also adapter classes, such as functors, to wrap generic callable C++ objects in the desired interface. . Modules;  Generic Function Evaluation Interfaces;  Interface classes for evaluation of function object classes in one or multi-dimensions. ;  ;  Parametric Function Evaluation Interfaces.;  Interfaces classes for evaluation of parametric functions. ;  . Classes; class  ROOT::Math::WrappedMultiTF1Templ< T >;  Class to Wrap a ROOT Function class (like TF1) in a IParamMultiFunction interface of multi-dimensions to be used in the ROOT::Math numerical algorithm. More...;  ; class  ROOT::Math::WrappedTF1;  Class to Wrap a ROOT Function class (like TF1) in a IParamFunction interface of one dimensions to be used in the ROOT::Math numerical algorithms The wrapper does not own bby default the TF1 pointer, so it assumes it exists during the wrapper lifetime. More...;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:33 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__CppFunctions.html:526,adapt,adapter,526,doc/master/group__CppFunctions.html,https://root.cern,https://root.cern/doc/master/group__CppFunctions.html,1,['adapt'],['adapter']
Modifiability,". ROOT: GDML tools. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; GDML toolsThe Geometry Package. ; GDML tools for geometry classes. ; The $ROOTSYS/gdml directory contains a set of Python modules designed for writing out Geometry Description Markup Language (GDML) files. There is also a C++ implementation for the import of GDML into ROOT. They act as a converter between the GDML geometry files and the TGeo geometry structures (and vice versa). GDML->ROOT; As this binding is integrated into the ROOT installation, you need to enable the use of the binding at the configure point of the ROOT installation. This can be done like so:; ./configure --enable-gdml; On doing this the libraries will be built by issuing the standard ROOT make command. The GDML to TGeo converter uses the TXMLEngine to parse the GDML files. This XML parser is a DOM parser and returns the DOM tree to the class TGDMLParse. This class then interprets the GDML file and adds the bindings in their TGeo equivalent.; The GDML schema is fully supported with a few exceptions:. Replica Volumes are not supported; Loops are not supported; Matrices are not supported. These will hopefully be added in the near future.; Once you have enabled GDML in the configure process for ROOT, to import a GDML file, this can be done using TGeoManager::Import. This automatically calls the right method to parse the GDML by detecting the .gdml file extension. Here is how to do it:; TGeoManager::Import(""test.gdml"");; TGeoManager::Importstatic TGeoManager * Import(const char *filename, const char *name="""", Option_t *option="""")static function Import a geometry from a gdml or ROOT fileDefinition TGeoManager.cxx:4096; Replace test.gdml with the gdml filename you want to import. Once the GDML file has been successfully imported, you can view the geometry by calling:; gGeoManager->GetTopVolume()->Draw(""ogl"");; gGeoManagerR__EXTERN TGeoManager * gGeoManagerDefinition TGeoManager.h:608; TGeoManag",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Geometry__gdml.html:612,config,configure,612,doc/master/group__Geometry__gdml.html,https://root.cern,https://root.cern/doc/master/group__Geometry__gdml.html,2,['config'],['configure']
Modifiability,". ROOT: Graph Legend. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Graph Legend. This page explains how to interpret the graphs that are generated by doxygen.; Consider the following example: /*! Invisible class because of truncation */; class Invisible { };; ; /*! Truncated class, inheritance relation is hidden */; class Truncated : public Invisible { };; ; /* Class not documented with doxygen comments */; class Undocumented { };; ; /*! Class that is inherited using public inheritance */; class PublicBase : public Truncated { };; ; /*! A template class */; template<class T> class Templ { };; ; /*! Class that is inherited using protected inheritance */; class ProtectedBase { };; ; /*! Class that is inherited using private inheritance */; class PrivateBase { };; ; /*! Class that is used by the Inherited class */; class Used { };; ; /*! Super class that inherits a number of other classes */; class Inherited : public PublicBase,; protected ProtectedBase,; private PrivateBase,; public Undocumented,; public Templ<int>; {; private:; Used *m_usedClass;; };; This will result in the following graph:; This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.The boxes in the above graph have the following meaning: . A filled gray box represents the struct or class for which the graph is generated. . A box with a black border denotes a documented struct or class. . A box with a gray border denotes an undocumented struct or class. . A box with a red border denotes a documented struct or class forwhich not all inheritance/containment relations are shown. A graph is truncated if it does not fit within the specified boundaries. . The arrows have the following meaning: . A blue arrow is used to visualize a public inheritance relation between two classes. . A dark green arrow is used for protected inheritance. . A dark red arrow is used for private inheritance. . A purple dashed arrow is used if a class is contained or use",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/graph_legend.html:319,inherit,inheritance,319,doc/master/graph_legend.html,https://root.cern,https://root.cern/doc/master/graph_legend.html,8,['inherit'],"['inheritance', 'inherited', 'inherits']"
Modifiability,". ROOT: Graph classes. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; Graph classes.Histogram Library. . Classes; class  TGraph;  A TGraph is an object made of two arrays X and Y with npoints each. More...;  ; class  TGraph2D;  Graphics object made of three arrays X, Y and Z with the same number of points each. More...;  ; class  TGraph2DAsymmErrors;  Graph 2D class with errors. More...;  ; class  TGraph2DErrors;  Graph 2D class with errors. More...;  ; class  TGraphAsymmErrors;  TGraph with asymmetric error bars. More...;  ; class  TGraphBentErrors;  A TGraphBentErrors is a TGraph with bent, asymmetric error bars. More...;  ; class  TGraphDelaunay;  TGraphDelaunay generates a Delaunay triangulation of a TGraph2D. More...;  ; class  TGraphDelaunay2D;  TGraphDelaunay2D generates a Delaunay triangulation of a TGraph2D. More...;  ; class  TGraphErrors;  A TGraphErrors is a TGraph with error bars. More...;  ; class  TGraphMultiErrors;  TGraph with asymmetric error bars and multiple y error dimensions. More...;  ; class  TGraphSmooth;  A helper class to smooth TGraph. More...;  ; class  TGraphTime;  TGraphTime is used to draw a set of objects evolving with nsteps in time between tmin and tmax. More...;  ; class  TMultiGraph;  A TMultiGraph is a collection of TGraph (or derived) objects. More...;  ; class  TPolyMarker;  A PolyMarker is defined by an array on N points in a 2-D space. More...;  ; class  TScatter;  A TScatter is able to draw four variables scatter plot on a single plot. More...;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:32 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Graphs.html:1506,variab,variables,1506,doc/master/group__Graphs.html,https://root.cern,https://root.cern/doc/master/group__Graphs.html,1,['variab'],['variables']
Modifiability,". ROOT: Graphics attributes. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; Graphics attributesGraphics. ; The graphics attributes related classes. ; Graphics attributes, are parameters that affect the way graphics primitives are displayed.; A ROOT object get graphics attributes by inheritance from the TAttXXX classes.; For example, lines can be dotted or dashed, fat or thin, blue or orange. If an object inherits form the class TAttLine it will get these attributes. Areas might be filled with one color or with a multicolor pattern. If an object inherits form the class TAttFill it will get these attribute. Text can appear with an angle, displayed in different fonts, colors, and sizes. If an object inherits form the class TAttText it will get these attribute. . Classes; class  TAtt3D;  Use this attribute class when an object should have 3D capabilities. More...;  ; class  TAttAxis;  Manages histogram axis attributes. More...;  ; class  TAttBBox;  Helper for management of bounding-box information. More...;  ; class  TAttBBox2D;  Abstract base class for elements drawn in the editor. More...;  ; class  TAttCanvas;  Manages canvas attributes. More...;  ; class  TAttFill;  Fill Area Attributes class. More...;  ; class  TAttImage;  TImage attributes. More...;  ; class  TAttLine;  Line Attributes class. More...;  ; class  TAttMarker;  Marker Attributes class. More...;  ; class  TAttPad;  Manages default Pad attributes. More...;  ; class  TAttText;  Text Attributes class. More...;  ; class  TColor;  The color creation and management class. More...;  ; class  TColorGradient;  TColorGradient extends basic TColor. More...;  ; class  TStyle;  TStyle objects may be created to define special styles. More...;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:32 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__GraphicsAtt.html:327,inherit,inheritance,327,doc/master/group__GraphicsAtt.html,https://root.cern,https://root.cern/doc/master/group__GraphicsAtt.html,5,"['extend', 'inherit']","['extends', 'inheritance', 'inherits']"
Modifiability,". ROOT: Graphics pad. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; Graphics padGraphics » 2D Graphics. ; The TPad related classes. ; TPad and TPad's related classes' usages are illustrated by the following examples:. The Graphics Pad.; How to Draw objects.; How to Pick objects.; Dividing a canvas with no margins between pads.; Using transparent pads. . Classes; class  TAnnotation;  An annotation is a TLatex which can be drawn in a 2D or 3D space. More...;  ; class  TAttCanvas;  Manages canvas attributes. More...;  ; class  TButton;  A TButton object is a user interface object. More...;  ; class  TCanvas;  The Canvas class. More...;  ; class  TClassTree;  Draw inheritance tree and their relations for a list of classes. More...;  ; class  TColorWheel;  Draw the ROOT Color Wheel. More...;  ; class  TControlBar;  A Control Bar is a fully user configurable tool which provides fast access to frequently used operations. More...;  ; class  TControlBarButton;  This class defines the control bar buttons. More...;  ; class  TCreatePrimitives;  Creates new primitives. More...;  ; class  TDialogCanvas;  A canvas specialized to set attributes. More...;  ; class  TGroupButton;  A specialized TButton used in a group of Buttons. More...;  ; class  TInspectCanvas;  A TInspectCanvas is a canvas specialized to inspect Root objects. More...;  ; class  TInspectorObject;  This class is designed to wrap a Foreign object in order to inject it into the Browse sub-system. More...;  ; class  TPad;  The most important graphics class in the ROOT system. More...;  ; class  TPadPainter;  Implement TVirtualPadPainter which abstracts painting operations. More...;  ; class  TPaveClass;  A TPaveLabel specialized to process classes inside a TClassTree. More...;  ; class  TRatioPlot;  Class for displaying ratios, differences and fit residuals. More...;  ; class  TSlider;  A specialized TPad including a TSliderBox object. More...;  ; class  TSliderBox;  The mo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__gpad.html:714,inherit,inheritance,714,doc/master/group__gpad.html,https://root.cern,https://root.cern/doc/master/group__gpad.html,2,"['config', 'inherit']","['configurable', 'inheritance']"
Modifiability,. ROOT: HTTP tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Files ; HTTP tutorialsTutorials. ; Examples showing the HTTP interface. . Files; file  custom.C;  This program creates and fills one and two dimensional histogram Macro used to demonstrate usage of custom HTML page in custom.htm One can use plain JavaScript to assign different actions with HTML buttons. ;  ; file  histfitserver.C;  This program demonstrates simultaneous update of histogram and fitted function. ;  ; file  httpaccess.C;  This program demonstrates access control to the THttpServer with digest methods. ;  ; file  httpcontrol.C;  This program demonstrates simple application control via THttpServer Two histogram are filled within endless loop. ;  ; file  httpgeom.C;  This program creates trivial geometry with several tracks and configure online monitoring of geometry via THttpServer Geometry regularly changed by the program and correspondent changes immediately seen in the browser. ;  ; file  httpserver.C;  This program creates : ;  ; file  httptextlog.C;  This macro demonstrates custom access and custom drawing for TMsgList class Main motivation for this example - demonstrate how traffic between server and client can be minimized and how one could build custom UI in the browser. ;  ; file  ws.C;  This program demonstrate WebSocket usage with THttpServer Custom ws.htm page is loaded and regularly sends messages to server. ;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:34 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__http.html:854,config,configure,854,doc/master/group__tutorial__http.html,https://root.cern,https://root.cern/doc/master/group__tutorial__http.html,1,['config'],['configure']
Modifiability,". ROOT: Hit Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; Hit Class Reference. . Definition at line 16 of file JetEvent.h. Public Member Functions;  Hit ();  ;  ~Hit () override;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classHit.html:352,inherit,inherited,352,doc/master/classHit.html,https://root.cern,https://root.cern/doc/master/classHit.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Input/Output Library. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; Input/Output Library. ; The library collecting the ROOT classes dedicated to data input and output.; For an overview of I/O in ROOT, see the following pages in the ROOT manual:. ROOT files; Trees: ROOT's columnar storage; I/O concepts: a collection of more advanced I/O-related topics; I/O of custom classes: how to read and write user-defined C++ objects. For ROOT I/O developers, a detailed internal description of the ROOT files layout is also available. . Classes; class  ROOT::Internal::RRawFile;  The RRawFile provides read-only access to local and remote files. More...;  ; class  ROOT::Internal::RRawFileTFile;  The RRawFileTFile wraps an open TFile, but does not take ownership. More...;  ; class  ROOT::Internal::RRawFileUnix;  The RRawFileUnix class uses POSIX calls to read from a mounted file system. More...;  ; class  ROOT::Internal::RRawFileWin;  The RRawFileWin class uses portable C I/O calls to read from a drive. More...;  ; class  TArchiveFile;  Class describing an archive file containing multiple sub-files, like a ZIP or TAR archive. More...;  ; class  TBufferFile;  The concrete implementation of TBuffer for writing/reading to/from a ROOT file or socket. More...;  ; class  TBufferIO;  Direct subclass of TBuffer, implements common methods for TBufferFile and TBufferText classes. More...;  ; class  TBufferJSON;  Class for serializing object to and from JavaScript Object Notation (JSON) format. More...;  ; class  ROOT::TBufferMerger;  TBufferMerger is a class to facilitate writing data in parallel from multiple threads, while writing to a single output file. More...;  ; class  ROOT::TBufferMergerFile;  A TBufferMergerFile is similar to a TMemFile, but when data is written to it, it is appended to the TBufferMerger queue. More...;  ; class  TBufferSQL2;  Converts data to SQL statements or read data from SQL tables. More...;  ; class  TBufferTex",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__IO.html:1011,portab,portable,1011,doc/master/group__IO.html,https://root.cern,https://root.cern/doc/master/group__IO.html,1,['portab'],['portable']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Detail::TSchemaRuleSet Member List. This is the complete list of members for ROOT::Detail::TSchemaRuleSet, including all inherited members. AbstractMethod(const char *method) constTObject; AddRule(TSchemaRule *rule, EConsistencyCheck checkConsistency=kCheckAll, TString *errmsg=nullptr)ROOT::Detail::TSchemaRuleSet; AddRules(TSchemaRuleSet *rules, EConsistencyCheck checkConsistency=kCheckAll, TString *errmsg=nullptr)ROOT::Detail::TSchemaRuleSet; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; AsString(TString &out) constROOT::Detail::TSchemaRuleSet; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()ROOT::Detail::TSchemaRuleSetstatic; Class_Name()ROOT::Detail::TSchemaRuleSetstatic; Class_Version()ROOT::Detail::TSchemaRuleSetinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &object) constTObjectvirtual; DeclFileName()ROOT::Detail::TSchemaRuleSetinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EConsistencyCheck enum nameROOT::Detail::TSchemaRuleSet; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; fAllRulesROOT::Detail::TSchem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Detail_1_1TSchemaRuleSet-members.html:229,inherit,inherited,229,doc/master/classROOT_1_1Detail_1_1TSchemaRuleSet-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Detail_1_1TSchemaRuleSet-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Experimental::RCanvas Member List. This is the complete list of members for ROOT::Experimental::RCanvas, including all inherited members. Add(ARGS... args)ROOT::Experimental::RPadBaseinline; AddFrame()ROOT::Experimental::RPadBase; AddPad(const RPadPos &, const RPadExtent &)ROOT::Experimental::RPadBase; AddPanel(std::shared_ptr< PANEL > &panel)ROOT::Experimental::RCanvasinline; ClearOnClose(const std::shared_ptr< void > &handle)ROOT::Experimental::RCanvas; ClearShown()ROOT::Experimental::RCanvasinline; ClearStyle()ROOT::Experimental::RDrawableinline; ClearUpdated()ROOT::Experimental::RCanvasinline; CollectShared(Internal::RIOSharedVector_t &) overrideROOT::Experimental::RPadBaseprotectedvirtual; Create(const std::string &title)ROOT::Experimental::RCanvasstatic; CreateJSON()ROOT::Experimental::RCanvas; Display(const RDisplayContext &)ROOT::Experimental::RDrawableprotectedvirtual; DisplayPrimitives(RPadBaseDisplayItem &paditem, RDisplayContext &ctxt)ROOT::Experimental::RPadBaseprotected; Divide(int nHoriz, int nVert, const RPadExtent &padding={})ROOT::Experimental::RPadBase; Draw(const std::shared_ptr< T > &what, ARGS... args)ROOT::Experimental::RPadBaseinline; Draw(ARGS... args)ROOT::Experimental::RPadBaseinline; Draw(std::shared_ptr< RDrawable > &&drawable)ROOT::Experimental::RPadBaseinline; Execute(const std::string &)ROOT::Experimental::RDrawableprotectedvirtual; fAttrROOT::Experimental::RDrawableprivate; fCssClassROOT::Experimental::RDrawableprivate; fCssTypeROOT::Experimental::RDrawableprivate; fHeightROOT::Experimental::RCanvasprivate; fIdROOT::Experimental::RDrawableprivate; FindPadForPrimitiveWithDisplayId(const std::string &display_id) constROOT::Experimental::RPadBase; FindPrimitive(const std::string &id) constROOT::Experimental::RPadBase; FindPrimitiveByDisplayId(const std::string &display_id) constROOT::Experimental::RPadBase; fModifiedROOT::Experimen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RCanvas-members.html:227,inherit,inherited,227,doc/master/classROOT_1_1Experimental_1_1RCanvas-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RCanvas-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Experimental::RNTupleImporter Member List. This is the complete list of members for ROOT::Experimental::RNTupleImporter, including all inherited members. Create(std::string_view sourceFileName, std::string_view treeName, std::string_view destFileName)ROOT::Experimental::RNTupleImporterstatic; Create(TTree *sourceTree, std::string_view destFileName)ROOT::Experimental::RNTupleImporterstatic; fConvertDotsInBranchNamesROOT::Experimental::RNTupleImporterprivate; fDestFileROOT::Experimental::RNTupleImporterprivate; fDestFileNameROOT::Experimental::RNTupleImporterprivate; fEntryROOT::Experimental::RNTupleImporterprivate; fFieldModifierROOT::Experimental::RNTupleImporterprivate; FieldModifier_t typedefROOT::Experimental::RNTupleImporter; fImportBranchesROOT::Experimental::RNTupleImporterprivate; fImportFieldsROOT::Experimental::RNTupleImporterprivate; fImportTransformationsROOT::Experimental::RNTupleImporterprivate; fIsQuietROOT::Experimental::RNTupleImporterprivate; fLeafCountCollectionsROOT::Experimental::RNTupleImporterprivate; fMaxEntriesROOT::Experimental::RNTupleImporterprivate; fModelROOT::Experimental::RNTupleImporterprivate; fNTupleNameROOT::Experimental::RNTupleImporterprivate; fProgressCallbackROOT::Experimental::RNTupleImporterprivate; fSourceFileROOT::Experimental::RNTupleImporterprivate; fSourceTreeROOT::Experimental::RNTupleImporterprivate; fWriteOptionsROOT::Experimental::RNTupleImporterprivate; GetWriteOptions() constROOT::Experimental::RNTupleImporterinline; Import()ROOT::Experimental::RNTupleImporter; InitDestination(std::string_view destFileName)ROOT::Experimental::RNTupleImporterprivate; operator=(const RNTupleImporter &other)=deleteROOT::Experimental::RNTupleImporter; operator=(RNTupleImporter &&other)=deleteROOT::Experimental::RNTupleImporter; PrepareSchema()ROOT::Experimental::RNTupleImporterprivate; ReportSchema()ROOT::Experimental::RNTupleImpo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleImporter-members.html:243,inherit,inherited,243,doc/master/classROOT_1_1Experimental_1_1RNTupleImporter-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleImporter-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Experimental::RNTupleReader Member List. This is the complete list of members for ROOT::Experimental::RNTupleReader, including all inherited members. begin()ROOT::Experimental::RNTupleReaderinline; Clone()ROOT::Experimental::RNTupleReaderinline; ConnectModel(RNTupleModel &model)ROOT::Experimental::RNTupleReaderprivate; EnableMetrics()ROOT::Experimental::RNTupleReaderinline; end()ROOT::Experimental::RNTupleReaderinline; fCachedDescriptorROOT::Experimental::RNTupleReaderprivate; fDisplayReaderROOT::Experimental::RNTupleReaderprivate; fMetricsROOT::Experimental::RNTupleReaderprivate; fModelROOT::Experimental::RNTupleReaderprivate; fSourceROOT::Experimental::RNTupleReaderprivate; fUnzipTasksROOT::Experimental::RNTupleReaderprivate; GetCollectionView(std::string_view fieldName)ROOT::Experimental::RNTupleReaderinline; GetCollectionView(DescriptorId_t fieldId)ROOT::Experimental::RNTupleReaderinline; GetDescriptor()ROOT::Experimental::RNTupleReader; GetDirectAccessView(std::string_view fieldName)ROOT::Experimental::RNTupleReaderinline; GetDirectAccessView(DescriptorId_t fieldId)ROOT::Experimental::RNTupleReaderinline; GetDisplayReader()ROOT::Experimental::RNTupleReaderprivate; GetEntryRange()ROOT::Experimental::RNTupleReaderinline; GetMetrics() constROOT::Experimental::RNTupleReaderinline; GetModel()ROOT::Experimental::RNTupleReader; GetNEntries() constROOT::Experimental::RNTupleReaderinline; GetView(std::string_view fieldName)ROOT::Experimental::RNTupleReaderinline; GetView(std::string_view fieldName, std::shared_ptr< T > objPtr)ROOT::Experimental::RNTupleReaderinline; GetView(std::string_view fieldName, T *rawPtr)ROOT::Experimental::RNTupleReaderinline; GetView(DescriptorId_t fieldId)ROOT::Experimental::RNTupleReaderinline; GetView(DescriptorId_t fieldId, std::shared_ptr< T > objPtr)ROOT::Experimental::RNTupleReaderinline; GetView(DescriptorId_t fieldId, T *rawPtr)RO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleReader-members.html:239,inherit,inherited,239,doc/master/classROOT_1_1Experimental_1_1RNTupleReader-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleReader-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Experimental::RNTupleWriter Member List. This is the complete list of members for ROOT::Experimental::RNTupleWriter, including all inherited members. Append(std::unique_ptr< RNTupleModel > model, std::string_view ntupleName, TFile &file, const RNTupleWriteOptions &options=RNTupleWriteOptions())ROOT::Experimental::RNTupleWriterstatic; CommitCluster(bool commitClusterGroup=false)ROOT::Experimental::RNTupleWriterinline; CommitClusterGroup()ROOT::Experimental::RNTupleWriterprivate; Create(std::unique_ptr< RNTupleModel > model, std::unique_ptr< Internal::RPageSink > sink, const RNTupleWriteOptions &options)ROOT::Experimental::RNTupleWriterprivatestatic; CreateEntry()ROOT::Experimental::RNTupleWriterinline; CreateModelUpdater()ROOT::Experimental::RNTupleWriterinline; EnableMetrics()ROOT::Experimental::RNTupleWriterinline; fFillContextROOT::Experimental::RNTupleWriterprivate; Fill()ROOT::Experimental::RNTupleWriterinline; Fill(REntry &entry)ROOT::Experimental::RNTupleWriterinline; FillNoFlush(REntry &entry, RNTupleFillStatus &status)ROOT::Experimental::RNTupleWriterinline; fLastCommittedClusterGroupROOT::Experimental::RNTupleWriterprivate; FlushCluster()ROOT::Experimental::RNTupleWriterinline; FlushColumns()ROOT::Experimental::RNTupleWriterinline; fMetricsROOT::Experimental::RNTupleWriterprivate; fZipTasksROOT::Experimental::RNTupleWriterprivate; GetLastCommitted() constROOT::Experimental::RNTupleWriterinline; GetLastCommittedClusterGroup() constROOT::Experimental::RNTupleWriterinline; GetLastFlushed() constROOT::Experimental::RNTupleWriterinline; GetMetrics() constROOT::Experimental::RNTupleWriterinline; GetModel() constROOT::Experimental::RNTupleWriterinline; GetNEntries() constROOT::Experimental::RNTupleWriterinline; GetSink()ROOT::Experimental::RNTupleWriterinlineprivate; GetUpdatableModel()ROOT::Experimental::RNTupleWriterinlineprivate; Internal::CreateRNTupleWri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleWriter-members.html:239,inherit,inherited,239,doc/master/classROOT_1_1Experimental_1_1RNTupleWriter-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleWriter-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Fit::BinData Member List. This is the complete list of members for ROOT::Fit::BinData, including all inherited members. Add(double x, double y)ROOT::Fit::BinData; Add(double x, double y, double ey)ROOT::Fit::BinData; Add(double x, double y, double ex, double ey)ROOT::Fit::BinData; Add(double x, double y, double ex, double eyl, double eyh)ROOT::Fit::BinData; Add(const double *x, double val)ROOT::Fit::BinData; Add(const double *x, double val, double eval)ROOT::Fit::BinData; Add(const double *x, double val, const double *ex, double eval)ROOT::Fit::BinData; Add(const double *x, double val, const double *ex, double elval, double ehval)ROOT::Fit::BinData; ROOT::Fit::FitData::Add(double x)ROOT::Fit::FitDatainline; ROOT::Fit::FitData::Add(const double *x)ROOT::Fit::FitDatainline; AddBinUpEdge(const double *xup)ROOT::Fit::BinData; Append(unsigned int newPoints, unsigned int dim=1, ErrorType err=kValueError)ROOT::Fit::BinData; ROOT::Fit::FitData::Append(unsigned int newPoints, unsigned int dim=1)ROOT::Fit::FitData; BinData(unsigned int maxpoints=0, unsigned int dim=1, ErrorType err=kValueError)ROOT::Fit::BinDataexplicit; BinData(const DataOptions &opt, unsigned int maxpoints=0, unsigned int dim=1, ErrorType err=kValueError)ROOT::Fit::BinDataexplicit; BinData(const DataOptions &opt, const DataRange &range, unsigned int maxpoints=0, unsigned int dim=1, ErrorType err=kValueError)ROOT::Fit::BinData; BinData(unsigned int n, const double *dataX, const double *val, const double *ex, const double *eval)ROOT::Fit::BinData; BinData(unsigned int n, const double *dataX, const double *dataY, const double *val, const double *ex, const double *ey, const double *eval)ROOT::Fit::BinData; BinData(unsigned int n, const double *dataX, const double *dataY, const double *dataZ, const double *val, const double *ex, const double *ey, const double *ez, const double *eval)ROOT::Fit::BinData; BinD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1BinData-members.html:209,inherit,inherited,209,doc/master/classROOT_1_1Fit_1_1BinData-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1BinData-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Fit::Chi2FCN< DerivFunType, ModelFunType > Member List. This is the complete list of members for ROOT::Fit::Chi2FCN< DerivFunType, ModelFunType >, including all inherited members. BaseFCN typedefROOT::Fit::Chi2FCN< DerivFunType, ModelFunType >; BaseFunction typedefROOT::Fit::Chi2FCN< DerivFunType, ModelFunType >; BaseObjFunction typedefROOT::Fit::Chi2FCN< DerivFunType, ModelFunType >; BasicFCN(const std::shared_ptr< DataType > &data, const std::shared_ptr< IModelFunction > &func)ROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >inlineprotected; BasicFitMethodFunction(int dim, int npoint)ROOT::Math::BasicFitMethodFunction< DerivFunType >inline; Chi2FCN(const std::shared_ptr< BinData > &data, const std::shared_ptr< IModelFunction > &func, const ::ROOT::EExecutionPolicy &executionPolicy=::ROOT::EExecutionPolicy::kSequential)ROOT::Fit::Chi2FCN< DerivFunType, ModelFunType >inline; Chi2FCN(const BinData &data, const IModelFunction &func, const ::ROOT::EExecutionPolicy &executionPolicy=::ROOT::EExecutionPolicy::kSequential)ROOT::Fit::Chi2FCN< DerivFunType, ModelFunType >inline; Chi2FCN(const Chi2FCN &f)ROOT::Fit::Chi2FCN< DerivFunType, ModelFunType >inline; Clone() constROOT::Fit::Chi2FCN< DerivFunType, ModelFunType >inlinevirtual; Data() constROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >inlinevirtual; DataElement(const double *x, unsigned int i, double *g, double *h=nullptr, bool fullHessian=false) constROOT::Fit::Chi2FCN< DerivFunType, ModelFunType >inlinevirtual; DataPtr() constROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >inline; DoDerivative(const double *x, unsigned int icoord) constROOT::Fit::Chi2FCN< DerivFunType, ModelFunType >inlineprivatevirtual; DoEval(const double *x) constROOT::Fit::Chi2FCN< DerivFunType, ModelFunType >inlineprivatevirtual; fDataROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >protected; fExe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1Chi2FCN-members.html:269,inherit,inherited,269,doc/master/classROOT_1_1Fit_1_1Chi2FCN-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1Chi2FCN-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Fit::DataOptions Member List. This is the complete list of members for ROOT::Fit::DataOptions, including all inherited members. DataOptions()ROOT::Fit::DataOptionsinline; fAsymErrorsROOT::Fit::DataOptions; fBinVolumeROOT::Fit::DataOptions; fCoordErrorsROOT::Fit::DataOptions; fErrors1ROOT::Fit::DataOptions; fExpErrorsROOT::Fit::DataOptions; fIntegralROOT::Fit::DataOptions; fNormBinVolumeROOT::Fit::DataOptions; fUseEmptyROOT::Fit::DataOptions; fUseRangeROOT::Fit::DataOptions. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:15 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Fit_1_1DataOptions-members.html:217,inherit,inherited,217,doc/master/structROOT_1_1Fit_1_1DataOptions-members.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Fit_1_1DataOptions-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Fit::DataRange Member List. This is the complete list of members for ROOT::Fit::DataRange, including all inherited members. AddRange(unsigned int icoord, double xmin, double xmax)ROOT::Fit::DataRange; AddRange(double xmin, double xmax)ROOT::Fit::DataRangeinline; AddRange(double xmin, double xmax, double ymin, double ymax)ROOT::Fit::DataRangeinline; AddRange(double xmin, double xmax, double ymin, double ymax, double zmin, double zmax)ROOT::Fit::DataRangeinline; CleanRangeSet(unsigned int icoord, double xmin, double xmax)ROOT::Fit::DataRangeprotected; Clear(unsigned int icoord=0)ROOT::Fit::DataRange; DataRange(unsigned int dim=1)ROOT::Fit::DataRangeinlineexplicit; DataRange(double xmin, double xmax)ROOT::Fit::DataRange; DataRange(double xmin, double xmax, double ymin, double ymax)ROOT::Fit::DataRange; DataRange(double xmin, double xmax, double ymin, double ymax, double zmin, double zmax)ROOT::Fit::DataRange; fRangesROOT::Fit::DataRangeprivate; GetInfRange(double &x1, double &x2)ROOT::Fit::DataRangeprotectedstatic; GetRange(unsigned int irange, unsigned int icoord, double &xmin, double &xmax) constROOT::Fit::DataRangeinline; GetRange(unsigned int icoord, double &xmin, double &xmax) constROOT::Fit::DataRangeinline; GetRange(double &xmin, double &xmax, unsigned int irange=0) constROOT::Fit::DataRangeinline; GetRange(double &xmin, double &xmax, double &ymin, double &ymax, unsigned int irange=0) constROOT::Fit::DataRangeinline; GetRange(double &xmin, double &xmax, double &ymin, double &ymax, double &zmin, double &zmax, unsigned int irange=0) constROOT::Fit::DataRangeinline; GetRange(double *xmin, double *xmax, unsigned int irange=0) constROOT::Fit::DataRangeinline; IsInside(double x, unsigned int icoord=0) constROOT::Fit::DataRange; IsInside(const double *x) constROOT::Fit::DataRangeinline; IsSet() constROOT::Fit::DataRangeinline; NDim() constROOT::Fit::DataRangeinlin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1DataRange-members.html:213,inherit,inherited,213,doc/master/classROOT_1_1Fit_1_1DataRange-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1DataRange-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Fit::FitConfig Member List. This is the complete list of members for ROOT::Fit::FitConfig, including all inherited members. CreateMinimizer()ROOT::Fit::FitConfig; CreateParamsSettings(const ROOT::Math::IParamMultiFunctionTempl< T > &func)ROOT::Fit::FitConfiginline; FitConfig(unsigned int npar=0)ROOT::Fit::FitConfig; FitConfig(const FitConfig &rhs)ROOT::Fit::FitConfig; fMinimizerOptsROOT::Fit::FitConfigprivate; fMinosErrorsROOT::Fit::FitConfigprivate; fMinosParamsROOT::Fit::FitConfigprivate; fNormErrorsROOT::Fit::FitConfigprivate; fParabErrorsROOT::Fit::FitConfigprivate; fSettingsROOT::Fit::FitConfigprivate; fUpdateAfterFitROOT::Fit::FitConfigprivate; fWeightCorrROOT::Fit::FitConfigprivate; MinimizerAlgoType() constROOT::Fit::FitConfiginline; MinimizerName() constROOT::Fit::FitConfig; MinimizerOptions()ROOT::Fit::FitConfiginline; MinimizerType() constROOT::Fit::FitConfiginline; MinosErrors() constROOT::Fit::FitConfiginline; MinosParams() constROOT::Fit::FitConfiginline; NormalizeErrors() constROOT::Fit::FitConfiginline; NPar() constROOT::Fit::FitConfiginline; operator=(const FitConfig &rhs)ROOT::Fit::FitConfig; ParabErrors() constROOT::Fit::FitConfiginline; ParamsSettings() constROOT::Fit::FitConfiginline; ParamsSettings()ROOT::Fit::FitConfiginline; ParamsValues() constROOT::Fit::FitConfig; ParSettings(unsigned int i) constROOT::Fit::FitConfiginline; ParSettings(unsigned int i)ROOT::Fit::FitConfiginline; SetDefaultMinimizer(const char *type, const char *algo=nullptr)ROOT::Fit::FitConfigstatic; SetFromFitResult(const FitResult &rhs)ROOT::Fit::FitConfig; SetMinimizer(const char *type, const char *algo=nullptr)ROOT::Fit::FitConfiginline; SetMinimizerOptions(const ROOT::Math::MinimizerOptions &minopt)ROOT::Fit::FitConfig; SetMinosErrors(bool on=true)ROOT::Fit::FitConfiginline; SetMinosErrors(const std::vector< unsigned int > &paramInd)ROOT::Fit::FitConfiginline; Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1FitConfig-members.html:213,inherit,inherited,213,doc/master/classROOT_1_1Fit_1_1FitConfig-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1FitConfig-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Fit::FitResult Member List. This is the complete list of members for ROOT::Fit::FitResult, including all inherited members. Chi2() constROOT::Fit::FitResultinline; Contour(unsigned int ipar, unsigned int jpar, unsigned int &npoints, double *pntsx, double *pntsy, double confLevel=0.683)ROOT::Fit::FitResult; Correlation(unsigned int i, unsigned int j) constROOT::Fit::FitResultinline; CovMatrix(unsigned int i, unsigned int j) constROOT::Fit::FitResultinline; CovMatrixStatus() constROOT::Fit::FitResultinline; Edm() constROOT::Fit::FitResultinline; Error(unsigned int i) constROOT::Fit::FitResultinline; Errors() constROOT::Fit::FitResultinline; fBoundParamsROOT::Fit::FitResultprotected; fChi2ROOT::Fit::FitResultprotected; fCovMatrixROOT::Fit::FitResultprotected; fCovStatusROOT::Fit::FitResultprotected; fEdmROOT::Fit::FitResultprotected; fErrorsROOT::Fit::FitResultprotected; fFitDataROOT::Fit::FitResultprotected; fFitFuncROOT::Fit::FitResultprotected; fFixedParamsROOT::Fit::FitResultprotected; fGlobalCCROOT::Fit::FitResultprotected; FillResult(const std::shared_ptr< ROOT::Math::Minimizer > &min, const FitConfig &fconfig, const std::shared_ptr< IModelFunction > &f, bool isValid, unsigned int sizeOfData=0, int fitType=1, const ROOT::Math::IMultiGenFunction *chi2func=nullptr, unsigned int ncalls=0)ROOT::Fit::FitResult; FitResult()ROOT::Fit::FitResult; FitResult(const FitConfig &fconfig)ROOT::Fit::FitResult; FittedBinData() constROOT::Fit::FitResult; FittedFunction() constROOT::Fit::FitResultinline; FitterROOT::Fit::FitResultfriend; fMinimizerROOT::Fit::FitResultprotected; fMinimTypeROOT::Fit::FitResultprotected; fMinosErrorsROOT::Fit::FitResultprotected; fNCallsROOT::Fit::FitResultprotected; fNdfROOT::Fit::FitResultprotected; fNFreeROOT::Fit::FitResultprotected; fNormalizedROOT::Fit::FitResultprotected; fObjFuncROOT::Fit::FitResultprotected; fParamBoundsROOT::Fit::FitRes",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1FitResult-members.html:213,inherit,inherited,213,doc/master/classROOT_1_1Fit_1_1FitResult-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1FitResult-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Fit::Fitter Member List. This is the complete list of members for ROOT::Fit::Fitter, including all inherited members. ApplyWeightCorrection(const ROOT::Math::IMultiGenFunction &loglw2, bool minimizeW2L=false)ROOT::Fit::Fitter; BaseFunc typedefROOT::Fit::Fitter; BaseGradFunc typedefROOT::Fit::Fitter; CalculateHessErrors()ROOT::Fit::Fitter; CalculateMinosErrors()ROOT::Fit::Fitter; Config() constROOT::Fit::Fitterinline; Config()ROOT::Fit::Fitterinline; DoBinnedLikelihoodFit(bool extended=true, const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)ROOT::Fit::Fitterprotected; DoInitMinimizer()ROOT::Fit::Fitterprotected; DoLeastSquareFit(const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)ROOT::Fit::Fitterprotected; DoLinearFit()ROOT::Fit::Fitterprotected; DoMinimization(std::unique_ptr< ObjFunc_t > f, const ROOT::Math::IMultiGenFunction *chifunc=nullptr)ROOT::Fit::Fitterprotected; DoMinimization(const ROOT::Math::IMultiGenFunction *chifunc=nullptr)ROOT::Fit::Fitterprotected; DoSetFCN(bool useExtFCN, const ROOT::Math::IMultiGenFunction &fcn, const double *params, unsigned int dataSize, int fitType)ROOT::Fit::Fitterprotected; DoUnbinnedLikelihoodFit(bool extended=false, const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)ROOT::Fit::Fitterprotected; DoUpdateFitConfig()ROOT::Fit::Fitterprotected; DoUpdateMinimizerOptions(bool canDifferentMinim=true)ROOT::Fit::Fitterprotected; DoWeightMinimization(std::unique_ptr< ObjFunc_t > f, const ROOT::Math::IMultiGenFunction *chifunc=nullptr)ROOT::Fit::Fitterprotected; EvalFCN()ROOT::Fit::Fitter; ExamineFCN()ROOT::Fit::Fitterprotected; fBinFitROOT::Fit::Fitterprivate; fConfigROOT::Fit::Fitterprivate; fDataROOT::Fit::Fitterprivate; fDataSizeROOT::Fit::Fitterprivate; fExtObjFunctionROOT::Fit::Fitterprivate; fFitTypeROOT::Fit::Fitterprivate; fFuncR",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1Fitter-members.html:207,inherit,inherited,207,doc/master/classROOT_1_1Fit_1_1Fitter-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1Fitter-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType > Member List. This is the complete list of members for ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >, including all inherited members. BaseFCN typedefROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >; BaseFunction typedefROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >; BaseObjFunction typedefROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >; BasicFCN(const std::shared_ptr< DataType > &data, const std::shared_ptr< IModelFunction > &func)ROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >inlineprotected; BasicFitMethodFunction(int dim, int npoint)ROOT::Math::BasicFitMethodFunction< DerivFunType >inline; Clone() constROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >inlinevirtual; Data() constROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >inlinevirtual; DataElement(const double *x, unsigned int i, double *g, double *h=nullptr, bool fullHessian=false) constROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >inlinevirtual; DataPtr() constROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >inline; DoDerivative(const double *x, unsigned int icoord) constROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >inlineprivatevirtual; DoEval(const double *x) constROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >inlineprivatevirtual; fDataROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >protected; fExecutionPolicyROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >private; fFuncROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >protected; fGradROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >mutableprivate; fIsExtendedROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >private; fNCallsROOT::Math::BasicFitMethodFunction< DerivFunType >mutableprivate; fNDimROOT::Math::BasicFitMethodFunction< DerivFunType >",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1LogLikelihoodFCN-members.html:287,inherit,inherited,287,doc/master/classROOT_1_1Fit_1_1LogLikelihoodFCN-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1LogLikelihoodFCN-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Fit::ParameterSettings Member List. This is the complete list of members for ROOT::Fit::ParameterSettings, including all inherited members. fFixROOT::Fit::ParameterSettingsprivate; fHasLowerLimitROOT::Fit::ParameterSettingsprivate; fHasUpperLimitROOT::Fit::ParameterSettingsprivate; Fix()ROOT::Fit::ParameterSettingsinline; fLowerLimitROOT::Fit::ParameterSettingsprivate; fNameROOT::Fit::ParameterSettingsprivate; fStepSizeROOT::Fit::ParameterSettingsprivate; fUpperLimitROOT::Fit::ParameterSettingsprivate; fValueROOT::Fit::ParameterSettingsprivate; HasLowerLimit() constROOT::Fit::ParameterSettingsinline; HasUpperLimit() constROOT::Fit::ParameterSettingsinline; IsBound() constROOT::Fit::ParameterSettingsinline; IsDoubleBound() constROOT::Fit::ParameterSettingsinline; IsFixed() constROOT::Fit::ParameterSettingsinline; LowerLimit() constROOT::Fit::ParameterSettingsinline; Name() constROOT::Fit::ParameterSettingsinline; ParameterSettings()ROOT::Fit::ParameterSettingsinline; ParameterSettings(const std::string &name, double val, double err)ROOT::Fit::ParameterSettingsinline; ParameterSettings(const std::string &name, double val, double err, double min, double max)ROOT::Fit::ParameterSettingsinline; ParameterSettings(const std::string &name, double val)ROOT::Fit::ParameterSettingsinline; Release()ROOT::Fit::ParameterSettingsinline; RemoveLimits()ROOT::Fit::ParameterSettingsinline; Set(const std::string &name, double value, double step)ROOT::Fit::ParameterSettingsinline; Set(const std::string &name, double value, double step, double lower, double upper)ROOT::Fit::ParameterSettingsinline; Set(const std::string &name, double value)ROOT::Fit::ParameterSettingsinline; SetLimits(double low, double up)ROOT::Fit::ParameterSettings; SetLowerLimit(double low)ROOT::Fit::ParameterSettingsinline; SetName(const std::string &name)ROOT::Fit::ParameterSettingsinline; SetStepSize(double e",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1ParameterSettings-members.html:229,inherit,inherited,229,doc/master/classROOT_1_1Fit_1_1ParameterSettings-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1ParameterSettings-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType > Member List. This is the complete list of members for ROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >, including all inherited members. BaseFCN typedefROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >; BaseFunction typedefROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >; BaseObjFunction typedefROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >; BasicFCN(const std::shared_ptr< DataType > &data, const std::shared_ptr< IModelFunction > &func)ROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >inlineprotected; BasicFitMethodFunction(int dim, int npoint)ROOT::Math::BasicFitMethodFunction< DerivFunType >inline; Clone() constROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >inlinevirtual; Data() constROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >inlinevirtual; DataElement(const double *x, unsigned int i, double *g, double *h, bool fullHessian) constROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >inlinevirtual; DataPtr() constROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >inline; DoDerivative(const double *x, unsigned int icoord) constROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >inlineprivatevirtual; DoEval(const double *x) constROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >inlineprivatevirtual; fDataROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >protected; fExecutionPolicyROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >private; fFuncROOT::Fit::BasicFCN< DerivFunType, ModelFunType, DataType >protected; fGradROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >mutableprivate; fIsExtendedROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >private; fNCallsROOT::Math::BasicFitMethodFunction< DerivFunType >mutableprivate; fNDimROOT::Math::Basi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1PoissonLikelihoodFCN-members.html:295,inherit,inherited,295,doc/master/classROOT_1_1Fit_1_1PoissonLikelihoodFCN-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1PoissonLikelihoodFCN-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Fit::UnBinData Member List. This is the complete list of members for ROOT::Fit::UnBinData, including all inherited members. Add(double x)ROOT::Fit::UnBinDatainline; Add(double x, double y)ROOT::Fit::UnBinDatainline; Add(double x, double y, double z)ROOT::Fit::UnBinDatainline; Add(const double *x)ROOT::Fit::UnBinDatainline; Add(const double *x, double w)ROOT::Fit::UnBinDatainline; Append(unsigned int newPoints, unsigned int dim=1, bool isWeighted=false)ROOT::Fit::UnBinDatainline; ROOT::Fit::FitData::Append(unsigned int newPoints, unsigned int dim=1)ROOT::Fit::FitData; Coords(unsigned int ipoint) constROOT::Fit::FitDatainline; fCoordsROOT::Fit::FitDataprivate; fCoordsPtrROOT::Fit::FitDataprivate; fDimROOT::Fit::FitDataprotected; FitData(unsigned int maxpoints=0, unsigned int dim=1)ROOT::Fit::FitDataexplicit; FitData(const DataOptions &opt, unsigned int maxpoints=0, unsigned int dim=1)ROOT::Fit::FitDataexplicit; FitData(const DataRange &range, unsigned int maxpoints=0, unsigned int dim=1)ROOT::Fit::FitDataexplicit; FitData(const DataOptions &opt, const DataRange &range, unsigned int maxpoints=0, unsigned int dim=1)ROOT::Fit::FitData; FitData(unsigned int n, const double *dataX)ROOT::Fit::FitData; FitData(unsigned int n, const double *dataX, const double *dataY)ROOT::Fit::FitData; FitData(unsigned int n, const double *dataX, const double *dataY, const double *dataZ)ROOT::Fit::FitData; FitData(const DataRange &range, unsigned int maxpoints, const double *dataX)ROOT::Fit::FitData; FitData(const DataRange &range, unsigned int maxpoints, const double *dataX, const double *dataY)ROOT::Fit::FitData; FitData(const DataRange &range, unsigned int maxpoints, const double *dataX, const double *dataY, const double *dataZ)ROOT::Fit::FitData; FitData(unsigned int n, unsigned int dim, Iterator dataItr)ROOT::Fit::FitDatainline; FitData(const DataRange &range, unsigned int maxpoint",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1UnBinData-members.html:213,inherit,inherited,213,doc/master/classROOT_1_1Fit_1_1UnBinData-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1UnBinData-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::Math::Minimizer Member List. This is the complete list of members for ROOT::Math::Minimizer, including all inherited members. Clear()ROOT::Math::Minimizerinlinevirtual; Contour(unsigned int ivar, unsigned int jvar, unsigned int &npoints, double *xi, double *xj)ROOT::Math::Minimizervirtual; Correlation(unsigned int i, unsigned int j) constROOT::Math::Minimizerinlinevirtual; CovMatrix(unsigned int ivar, unsigned int jvar) constROOT::Math::Minimizervirtual; CovMatrixStatus() constROOT::Math::Minimizerinlinevirtual; Edm() constROOT::Math::Minimizerinlinevirtual; ErrorDef() constROOT::Math::Minimizerinline; Errors() constROOT::Math::Minimizerinlinevirtual; FixVariable(unsigned int ivar)ROOT::Math::Minimizervirtual; fOptionsROOT::Math::Minimizerprotected; fStatusROOT::Math::Minimizerprotected; fValidErrorROOT::Math::Minimizerprotected; GetCovMatrix(double *covMat) constROOT::Math::Minimizervirtual; GetHessianMatrix(double *hMat) constROOT::Math::Minimizervirtual; GetMinosError(unsigned int ivar, double &errLow, double &errUp, int option=0)ROOT::Math::Minimizervirtual; GetVariableSettings(unsigned int ivar, ROOT::Fit::ParameterSettings &pars) constROOT::Math::Minimizervirtual; GlobalCC(unsigned int ivar) constROOT::Math::Minimizervirtual; Hesse()ROOT::Math::Minimizervirtual; IsFixedVariable(unsigned int ivar) constROOT::Math::Minimizervirtual; IsValidError() constROOT::Math::Minimizerinline; MaxFunctionCalls() constROOT::Math::Minimizerinline; MaxIterations() constROOT::Math::Minimizerinline; MinGradient() constROOT::Math::Minimizerinlinevirtual; Minimize()=0ROOT::Math::Minimizerpure virtual; Minimizer()ROOT::Math::Minimizerinline; Minimizer(Minimizer const &)=deleteROOT::Math::Minimizer; Minimizer(Minimizer &&)=deleteROOT::Math::Minimizer; MinosStatus() constROOT::Math::Minimizerinlinevirtual; MinValue() const =0ROOT::Math::Minimizerpure virtual; NCalls() constROOT::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer-members.html:215,inherit,inherited,215,doc/master/classROOT_1_1Math_1_1Minimizer-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::RCompressionSetting::EAlgorithm Member List. This is the complete list of members for ROOT::RCompressionSetting::EAlgorithm, including all inherited members. EValues enum nameROOT::RCompressionSetting::EAlgorithm; kInherit enum valueROOT::RCompressionSetting::EAlgorithm; kLZ4 enum valueROOT::RCompressionSetting::EAlgorithm; kLZMA enum valueROOT::RCompressionSetting::EAlgorithm; kOldCompressionAlgo enum valueROOT::RCompressionSetting::EAlgorithm; kUndefined enum valueROOT::RCompressionSetting::EAlgorithm; kUseGlobal enum valueROOT::RCompressionSetting::EAlgorithm; kZLIB enum valueROOT::RCompressionSetting::EAlgorithm; kZSTD enum valueROOT::RCompressionSetting::EAlgorithm. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:58 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm-members.html:247,inherit,inherited,247,doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm-members.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::RDF::RInterface< Proxied, DataSource > Member List. This is the complete list of members for ROOT::RDF::RInterface< Proxied, DataSource >, including all inherited members. AddDefaultColumns()ROOT::RDF::RInterfaceBaseprotected; Aggregate(AccFun aggregator, MergeFun merger, std::string_view columnName, const U &aggIdentity)ROOT::RDF::RInterface< Proxied, DataSource >inline; Aggregate(AccFun aggregator, MergeFun merger, std::string_view columnName="""")ROOT::RDF::RInterface< Proxied, DataSource >inline; Alias(std::string_view alias, std::string_view columnName)ROOT::RDF::RInterface< Proxied, DataSource >inline; Book(Helper &&helper, const ColumnNames_t &columns={})ROOT::RDF::RInterface< Proxied, DataSource >inline; Cache(const ColumnNames_t &columnList)ROOT::RDF::RInterface< Proxied, DataSource >inline; Cache(const ColumnNames_t &columnList)ROOT::RDF::RInterface< Proxied, DataSource >inline; Cache(std::string_view columnNameRegexp="""")ROOT::RDF::RInterface< Proxied, DataSource >inline; Cache(std::initializer_list< std::string > columnList)ROOT::RDF::RInterface< Proxied, DataSource >inline; CacheImpl(const ColumnNames_t &columnList, std::index_sequence< S... >)ROOT::RDF::RInterface< Proxied, DataSource >inlineprivate; CallCreateActionWithoutColsIfPossible(const std::shared_ptr< ActionResultType > &resPtr, const std::shared_ptr< Helper > &hPtr, TTraits::TypeList< RDFDetail::RInferredType >) -> decltype(hPtr->Exec(0u), RResultPtr< ActionResultType >{})ROOT::RDF::RInterface< Proxied, DataSource >inlineprivate; CallCreateActionWithoutColsIfPossible(const std::shared_ptr< ActionResultType > &, const std::shared_ptr< Helper > &, Others...)ROOT::RDF::RInterface< Proxied, DataSource >inlineprivate; CheckAndFillDSColumns(ColumnNames_t validCols, TTraits::TypeList< ColumnTypes... > typeList)ROOT::RDF::RInterfaceBaseinlineprotected; CheckIMTDisabled(std::string_view callerName)R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface-members.html:261,inherit,inherited,261,doc/master/classROOT_1_1RDF_1_1RInterface-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::RDataFrame Member List. This is the complete list of members for ROOT::RDataFrame, including all inherited members. AddDefaultColumns()ROOT::RDF::RInterfaceBaseprotected; Aggregate(AccFun aggregator, MergeFun merger, std::string_view columnName, const U &aggIdentity)ROOT::RDF::RInterface< RDFDetail::RLoopManager >inline; Aggregate(AccFun aggregator, MergeFun merger, std::string_view columnName="""")ROOT::RDF::RInterface< RDFDetail::RLoopManager >inline; Alias(std::string_view alias, std::string_view columnName)ROOT::RDF::RInterface< RDFDetail::RLoopManager >inline; Book(Helper &&helper, const ColumnNames_t &columns={})ROOT::RDF::RInterface< RDFDetail::RLoopManager >inline; Cache(const ColumnNames_t &columnList)ROOT::RDF::RInterface< RDFDetail::RLoopManager >inline; Cache(const ColumnNames_t &columnList)ROOT::RDF::RInterface< RDFDetail::RLoopManager >inline; Cache(std::string_view columnNameRegexp="""")ROOT::RDF::RInterface< RDFDetail::RLoopManager >inline; Cache(std::initializer_list< std::string > columnList)ROOT::RDF::RInterface< RDFDetail::RLoopManager >inline; CacheImpl(const ColumnNames_t &columnList, std::index_sequence< S... >)ROOT::RDF::RInterface< RDFDetail::RLoopManager >inlineprivate; CallCreateActionWithoutColsIfPossible(const std::shared_ptr< ActionResultType > &resPtr, const std::shared_ptr< Helper > &hPtr, TTraits::TypeList< RDFDetail::RInferredType >) -> decltype(hPtr->Exec(0u), RResultPtr< ActionResultType >{})ROOT::RDF::RInterface< RDFDetail::RLoopManager >inlineprivate; CallCreateActionWithoutColsIfPossible(const std::shared_ptr< ActionResultType > &, const std::shared_ptr< Helper > &, Others...)ROOT::RDF::RInterface< RDFDetail::RLoopManager >inlineprivate; CheckAndFillDSColumns(ColumnNames_t validCols, TTraits::TypeList< ColumnTypes... > typeList)ROOT::RDF::RInterfaceBaseinlineprotected; CheckIMTDisabled(std::string_view callerName)ROOT::RDF::RI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDataFrame-members.html:205,inherit,inherited,205,doc/master/classROOT_1_1RDataFrame-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDataFrame-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::TSchemaRule Member List. This is the complete list of members for ROOT::TSchemaRule, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; AsString(TString &out, const char *options="""") constROOT::TSchemaRule; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()ROOT::TSchemaRulestatic; Class_Name()ROOT::TSchemaRulestatic; Class_Version()ROOT::TSchemaRuleinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""") overrideROOT::TSchemaRulevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Conflicts(const TSchemaRule *rule) constROOT::TSchemaRule; Copy(TObject &object) constTObjectvirtual; DeclFileName()ROOT::TSchemaRuleinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fAttributesROOT::TSchemaRuleprivate; fBitsTObjectprivate; fChecksumROOT::TSchemaRuleprivate; fChecksumVectROOT::TSchemaRulemutableprivate; fCodeROOT::TSchemaRuleprivate; fEmbedROOT::TSchemaRuleprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectpr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1TSchemaRule-members.html:207,inherit,inherited,207,doc/master/classROOT_1_1TSchemaRule-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1TSchemaRule-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT::VecOps::RVec< T > Member List. This is the complete list of members for ROOT::VecOps::RVec< T >, including all inherited members. append(in_iter in_start, in_iter in_end)ROOT::Detail::VecOps::RVecImpl< T >inline; append(size_type NumInputs, const T &Elt)ROOT::Detail::VecOps::RVecImpl< T >inline; append(std::initializer_list< T > IL)ROOT::Detail::VecOps::RVecImpl< T >inline; assign(size_type NumElts, const T &Elt)ROOT::Detail::VecOps::RVecImpl< T >inline; assign(in_iter in_start, in_iter in_end)ROOT::Detail::VecOps::RVecImpl< T >inline; assign(std::initializer_list< T > IL)ROOT::Detail::VecOps::RVecImpl< T >inline; at(size_type pos)ROOT::VecOps::RVecN< T, Internal::VecOps::RVecInlineStorageSize< T >::value >inline; at(size_type pos) constROOT::VecOps::RVecN< T, Internal::VecOps::RVecInlineStorageSize< T >::value >inline; at(size_type pos, value_type fallback)ROOT::VecOps::RVecN< T, Internal::VecOps::RVecInlineStorageSize< T >::value >inline; at(size_type pos, value_type fallback) constROOT::VecOps::RVecN< T, Internal::VecOps::RVecInlineStorageSize< T >::value >inline; back()ROOT::Internal::VecOps::SmallVectorTemplateCommon< T >inline; back() constROOT::Internal::VecOps::SmallVectorTemplateCommon< T >inline; Base typedefROOT::Internal::VecOps::SmallVectorTemplateCommon< T >private; begin() noexceptROOT::Internal::VecOps::SmallVectorTemplateCommon< T >inline; begin() const noexceptROOT::Internal::VecOps::SmallVectorTemplateCommon< T >inline; capacity() const noexceptROOT::Internal::VecOps::SmallVectorTemplateCommon< T >inline; capacity_in_bytes() constROOT::Internal::VecOps::SmallVectorTemplateCommon< T >inline; cbegin() const noexceptROOT::Internal::VecOps::SmallVectorTemplateCommon< T >inline; cend() const noexceptROOT::Internal::VecOps::SmallVectorTemplateCommon< T >inline; clear()ROOT::Detail::VecOps::RVecImpl< T >inline; const_iterator typedefROOT::Detail::Ve",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1VecOps_1_1RVec-members.html:219,inherit,inherited,219,doc/master/classROOT_1_1VecOps_1_1RVec-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1VecOps_1_1RVec-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. RooAbsPdf Member List. This is the complete list of members for RooAbsPdf, including all inherited members. _boolAttribRooAbsArgprotected; _boolAttribTransientRooAbsArgprotected; _cacheListRooAbsArgprotected; _clientListRooAbsArgprotected; _clientListShapeRooAbsArgprotected; _clientListValueRooAbsArgprotected; _dataTokenRooAbsArgprotected; _DEBUG_getVal(const RooArgSet *normalisationSet) constRooAbsRealprivate; _deleteWatchRooAbsArgprotected; _eocacheRooAbsArgmutableprotected; _errorCountRooAbsPdfmutableprotected; _fastRooAbsArgmutableprotected; _forceNumIntRooAbsRealprotected; _globalSelectCompRooAbsRealprotectedstatic; _hideOffsetRooAbsRealprotectedstatic; _inhibitDirtyRooAbsArgprotectedstatic; _isConstantRooAbsArgprotected; _labelRooAbsRealprotected; _lastNormSetIdRooAbsRealmutableprotected; _localNoInhibitDirtyRooAbsArgmutableprotected; _mywsRooAbsArgmutableprotected; _nameLengthRooPrintableprotectedstatic; _namePtrRooAbsArgmutableprotected; _negCountRooAbsPdfmutableprotected; _normRooAbsPdfmutableprotected; _normMgrRooAbsPdfmutableprotected; _normRangeRooAbsPdfprotected; _normRangeOverrideRooAbsPdfprotectedstatic; _normSetRooAbsPdfmutableprotected; _normSetIdRooAbsPdfmutableprivate; _operModeRooAbsArgmutableprotected; _ownedComponentsRooAbsArgprotected; _plotBinsRooAbsRealprotected; _plotMaxRooAbsRealprotected; _plotMinRooAbsRealprotected; _prohibitServerRedirectRooAbsArgmutableprotected; _proxyListRooAbsArgprotected; _proxyListCacheRooAbsArgprotected; _rawValueRooAbsPdfmutableprotected; _selectCompRooAbsPdfprotected; _serverListRooAbsArgprotected; _shapeDirtyRooAbsArgmutableprotected; _specGeneratorConfigRooAbsPdfprotected; _specIntegratorConfigRooAbsRealprotected; _stringAttribRooAbsArgprotected; _traceCountRooAbsPdfmutableprotected; _treeReadBufferRooAbsRealprotected; _unitRooAbsRealprotected; _valueRooAbsRealmutableprotected; _valueDirtyRooAbsArgmutableprote",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsPdf-members.html:191,inherit,inherited,191,doc/master/classRooAbsPdf-members.html,https://root.cern,https://root.cern/doc/master/classRooAbsPdf-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TApplication Member List. This is the complete list of members for TApplication, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; ApplicationName() constTApplicationinlinevirtual; AreAllSignalsBlocked()TQObjectstatic; AreSignalsBlocked() constTQObjectinline; Argc() constTApplicationinline; Argv() constTApplicationinline; Argv(Int_t index) constTApplication; BlockAllSignals(Bool_t b)TQObjectstatic; BlockSignals(Bool_t b)TQObjectinline; Browse(TBrowser *b)TObjectvirtual; ChangedBy(const char *method)TQObjectinlinevirtual; CheckConnectArgs(TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot)TQObjectprotectedstatic; CheckedHash()TObjectinline; Class()TApplicationstatic; Class_Name()TApplicationstatic; Class_Version()TApplicationinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; ClearInputFiles()TApplication; Clone(const char *newname="""") constTObjectvirtual; Close(TApplication *app)TApplicationprotectedstatic; CollectClassSignalLists(TList &list, TClass *cls)TQObject; Compare(const TObject *obj) constTObjectvirtual; CompressName(const char *method_name)TQObjectprotectedstatic; Connect(const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObject; Connect(TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObjectstatic; Connect(const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObjectstatic; Connected(const char *)TQObjectinlinevirtual; ConnectToClass(TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot)TQObjectprotectedstatic; ConnectToClass(const char *sender_class, const char *signal",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTApplication-members.html:197,inherit,inherited,197,doc/master/classTApplication-members.html,https://root.cern,https://root.cern/doc/master/classTApplication-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TArrow Member List. This is the complete list of members for TArrow, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TArrowstatic; Class_Name()TArrowstatic; Class_Version()TArrowinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &arrow) const overrideTArrowvirtual; TLine::TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; DeclFileName()TArrowinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTLinevirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTArrowvirtual; DrawArrow(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Float_t arrowsize=0, Option_t *option="""")TArrowvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawLine(Double_t x1, Double_t y1, Double_t x2, Double_t y2)TLinevirtual; DrawLineNDC(Double_t x1, Double_t y1, Double_t x2, Double_t y2)TLinevirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTLinevirtual; fAngleTArrowprotected; fArrowSiz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTArrow-members.html:185,inherit,inherited,185,doc/master/classTArrow-members.html,https://root.cern,https://root.cern/doc/master/classTArrow-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TAttAxis Member List. This is the complete list of members for TAttAxis, including all inherited members. Class()TAttAxisstatic; Class_Name()TAttAxisstatic; Class_Version()TAttAxisinlinestatic; Copy(TAttAxis &attaxis) constTAttAxis; DeclFileName()TAttAxisinlinestatic; fAxisColorTAttAxisprotected; fLabelColorTAttAxisprotected; fLabelFontTAttAxisprotected; fLabelOffsetTAttAxisprotected; fLabelSizeTAttAxisprotected; fNdivisionsTAttAxisprotected; fTickLengthTAttAxisprotected; fTitleColorTAttAxisprotected; fTitleFontTAttAxisprotected; fTitleOffsetTAttAxisprotected; fTitleSizeTAttAxisprotected; GetAxisColor() constTAttAxisinlinevirtual; GetLabelColor() constTAttAxisinlinevirtual; GetLabelFont() constTAttAxisinlinevirtual; GetLabelOffset() constTAttAxisinlinevirtual; GetLabelSize() constTAttAxisinlinevirtual; GetMaxDigits() constTAttAxisinlinevirtual; GetNdivisions() constTAttAxisinlinevirtual; GetTickLength() constTAttAxisinlinevirtual; GetTitleColor() constTAttAxisinlinevirtual; GetTitleFont() constTAttAxisinlinevirtual; GetTitleOffset() constTAttAxisinlinevirtual; GetTitleSize() constTAttAxisinlinevirtual; IsA() constTAttAxisinlinevirtual; ResetAttAxis(Option_t *option="""")TAttAxisvirtual; SaveAttributes(std::ostream &out, const char *name, const char *subname)TAttAxisvirtual; SetAxisColor(Color_t color=1, Float_t alpha=1.)TAttAxisvirtual; SetLabelColor(Color_t color=1, Float_t alpha=1.)TAttAxisvirtual; SetLabelFont(Style_t font=62)TAttAxisvirtual; SetLabelOffset(Float_t offset=0.005)TAttAxisvirtual; SetLabelSize(Float_t size=0.04)TAttAxisvirtual; SetMaxDigits(Int_t maxDigits=5)TAttAxisvirtual; SetNdivisions(Int_t n=510, Bool_t optim=kTRUE)TAttAxisvirtual; SetNdivisions(Int_t n1, Int_t n2, Int_t n3, Bool_t optim=kTRUE)TAttAxisvirtual; SetTickLength(Float_t length=0.03)TAttAxisvirtual; SetTickSize(Float_t size=0.03)TAttAxisinlinevirtual; SetTitleColor(Color_t color=1)TAttA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAttAxis-members.html:189,inherit,inherited,189,doc/master/classTAttAxis-members.html,https://root.cern,https://root.cern/doc/master/classTAttAxis-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TAttFill Member List. This is the complete list of members for TAttFill, including all inherited members. Class()TAttFillstatic; Class_Name()TAttFillstatic; Class_Version()TAttFillinlinestatic; Copy(TAttFill &attfill) constTAttFill; DeclFileName()TAttFillinlinestatic; fFillColorTAttFillprotected; fFillStyleTAttFillprotected; GetFillColor() constTAttFillinlinevirtual; GetFillStyle() constTAttFillinlinevirtual; IsA() constTAttFillinlinevirtual; IsTransparent() constTAttFillinlinevirtual; Modify()TAttFillvirtual; ResetAttFill(Option_t *option="""")TAttFillvirtual; SaveFillAttributes(std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1001)TAttFillvirtual; SetFillAttributes()TAttFillvirtual; SetFillColor(Color_t fcolor)TAttFillinlinevirtual; SetFillColorAlpha(Color_t fcolor, Float_t falpha)TAttFillvirtual; SetFillStyle(Style_t fstyle)TAttFillinlinevirtual; Streamer(TBuffer &)TAttFillvirtual; StreamerNVirtual(TBuffer &ClassDef_StreamerNVirtual_b)TAttFillinline; TAttFill()TAttFill; TAttFill(Color_t fcolor, Style_t fstyle)TAttFill; ~TAttFill()TAttFillvirtual. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:16 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAttFill-members.html:189,inherit,inherited,189,doc/master/classTAttFill-members.html,https://root.cern,https://root.cern/doc/master/classTAttFill-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TAttLine Member List. This is the complete list of members for TAttLine, including all inherited members. Class()TAttLinestatic; Class_Name()TAttLinestatic; Class_Version()TAttLineinlinestatic; Copy(TAttLine &attline) constTAttLine; DeclFileName()TAttLineinlinestatic; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; fLineColorTAttLineprotected; fLineStyleTAttLineprotected; fLineWidthTAttLineprotected; GetLineColor() constTAttLineinlinevirtual; GetLineStyle() constTAttLineinlinevirtual; GetLineWidth() constTAttLineinlinevirtual; IsA() constTAttLineinlinevirtual; Modify()TAttLinevirtual; ResetAttLine(Option_t *option="""")TAttLinevirtual; SaveLineAttributes(std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t widdef=1)TAttLinevirtual; SetLineAttributes()TAttLinevirtual; SetLineColor(Color_t lcolor)TAttLineinlinevirtual; SetLineColorAlpha(Color_t lcolor, Float_t lalpha)TAttLinevirtual; SetLineStyle(Style_t lstyle)TAttLineinlinevirtual; SetLineWidth(Width_t lwidth)TAttLineinlinevirtual; Streamer(TBuffer &)TAttLinevirtual; StreamerNVirtual(TBuffer &ClassDef_StreamerNVirtual_b)TAttLineinline; TAttLine()TAttLine; TAttLine(Color_t lcolor, Style_t lstyle, Width_t lwidth)TAttLine; ~TAttLine()TAttLinevirtual. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:16 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAttLine-members.html:189,inherit,inherited,189,doc/master/classTAttLine-members.html,https://root.cern,https://root.cern/doc/master/classTAttLine-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TAttMarker Member List. This is the complete list of members for TAttMarker, including all inherited members. Class()TAttMarkerstatic; Class_Name()TAttMarkerstatic; Class_Version()TAttMarkerinlinestatic; Copy(TAttMarker &attmarker) constTAttMarker; DeclFileName()TAttMarkerinlinestatic; fMarkerColorTAttMarkerprotected; fMarkerSizeTAttMarkerprotected; fMarkerStyleTAttMarkerprotected; GetMarkerColor() constTAttMarkerinlinevirtual; GetMarkerLineWidth(Style_t style)TAttMarkerstatic; GetMarkerSize() constTAttMarkerinlinevirtual; GetMarkerStyle() constTAttMarkerinlinevirtual; GetMarkerStyleBase(Style_t style)TAttMarkerstatic; IsA() constTAttMarkerinlinevirtual; Modify()TAttMarkervirtual; ResetAttMarker(Option_t *toption="""")TAttMarkervirtual; SaveMarkerAttributes(std::ostream &out, const char *name, Int_t coldef=1, Int_t stydef=1, Int_t sizdef=1)TAttMarkervirtual; SetMarkerAttributes()TAttMarkervirtual; SetMarkerColor(Color_t mcolor=1)TAttMarkerinlinevirtual; SetMarkerColorAlpha(Color_t mcolor, Float_t malpha)TAttMarkervirtual; SetMarkerSize(Size_t msize=1)TAttMarkerinlinevirtual; SetMarkerStyle(Style_t mstyle=1)TAttMarkerinlinevirtual; Streamer(TBuffer &)TAttMarkervirtual; StreamerNVirtual(TBuffer &ClassDef_StreamerNVirtual_b)TAttMarkerinline; TAttMarker()TAttMarker; TAttMarker(Color_t color, Style_t style, Size_t msize)TAttMarker; ~TAttMarker()TAttMarkervirtual. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:16 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAttMarker-members.html:193,inherit,inherited,193,doc/master/classTAttMarker-members.html,https://root.cern,https://root.cern/doc/master/classTAttMarker-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TAttText Member List. This is the complete list of members for TAttText, including all inherited members. Class()TAttTextstatic; Class_Name()TAttTextstatic; Class_Version()TAttTextinlinestatic; Copy(TAttText &atttext) constTAttText; DeclFileName()TAttTextinlinestatic; fTextAlignTAttTextprotected; fTextAngleTAttTextprotected; fTextColorTAttTextprotected; fTextFontTAttTextprotected; fTextSizeTAttTextprotected; GetTextAlign() constTAttTextinlinevirtual; GetTextAngle() constTAttTextinlinevirtual; GetTextColor() constTAttTextinlinevirtual; GetTextFont() constTAttTextinlinevirtual; GetTextSize() constTAttTextinlinevirtual; GetTextSizePercent(Float_t size)TAttTextvirtual; IsA() constTAttTextinlinevirtual; Modify()TAttTextvirtual; ResetAttText(Option_t *toption="""")TAttTextvirtual; SaveTextAttributes(std::ostream &out, const char *name, Int_t alidef=12, Float_t angdef=0, Int_t coldef=1, Int_t fondef=61, Float_t sizdef=1)TAttTextvirtual; SetTextAlign(Short_t align=11)TAttTextinlinevirtual; SetTextAngle(Float_t tangle=0)TAttTextinlinevirtual; SetTextAttributes()TAttTextvirtual; SetTextColor(Color_t tcolor=1)TAttTextinlinevirtual; SetTextColorAlpha(Color_t tcolor, Float_t talpha)TAttTextvirtual; SetTextFont(Font_t tfont=62)TAttTextinlinevirtual; SetTextSize(Float_t tsize=1)TAttTextinlinevirtual; SetTextSizePixels(Int_t npixels)TAttTextvirtual; Streamer(TBuffer &)TAttTextvirtual; StreamerNVirtual(TBuffer &ClassDef_StreamerNVirtual_b)TAttTextinline; TAttText()TAttText; TAttText(Int_t align, Float_t angle, Color_t color, Style_t font, Float_t tsize)TAttText; ~TAttText()TAttTextvirtual. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:16 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAttText-members.html:189,inherit,inherited,189,doc/master/classTAttText-members.html,https://root.cern,https://root.cern/doc/master/classTAttText-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TAxis Member List. This is the complete list of members for TAxis, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CanBeAlphanumeric()TAxisinline; CanExtend() constTAxisinline; CenterLabels(Bool_t center=kTRUE)TAxisinline; CenterTitle(Bool_t center=kTRUE)TAxisinline; ChangeLabel(Int_t labNum=0, Double_t labAngle=-1., Double_t labSize=-1., Int_t labAlign=-1, Int_t labColor=-1, Int_t labFont=-1, const TString &labText="""")TAxis; ChangeLabelByValue(Double_t labValue, Double_t labAngle=-1., Double_t labSize=-1., Int_t labAlign=-1, Int_t labColor=-1, Int_t labFont=-1, const TString &labText="""")TAxis; CheckedHash()TObjectinline; ChooseTimeFormat(Double_t axislength=0)TAxis; Class()TAxisstatic; Class_Name()TAxisstatic; Class_Version()TAxisinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &axis) const overrideTAxisvirtual; TAttAxis::Copy(TAttAxis &attaxis) constTAttAxis; DeclFileName()TAxisinlinestatic; Delete(Option_t *="""") overrideTAxisinlinevirtual; DistancetoPrimitive(Int_t px, Int_t py) overrideTAxisvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *="""") const overrideTAxisinlinevirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTAxis; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *er",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAxis-members.html:183,inherit,inherited,183,doc/master/classTAxis-members.html,https://root.cern,https://root.cern/doc/master/classTAxis-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TBox Member List. This is the complete list of members for TBox, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TBoxstatic; Class_Name()TBoxstatic; Class_Version()TBoxinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &box) const overrideTBoxvirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; DeclFileName()TBoxinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTBoxvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTBoxvirtual; DrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2)TBoxvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTBoxvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fFillColorTAttFillprotected; fFillStyleTAttFillprotected; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FindObject(const char *name) constTObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBox-members.html:181,inherit,inherited,181,doc/master/classTBox-members.html,https://root.cern,https://root.cern/doc/master/classTBox-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TBranch Member List. This is the complete list of members for TBranch, including all inherited members. AbstractMethod(const char *method) constTObject; AddBasket(TBasket &b, bool ondisk, Long64_t startEntry)TBranchvirtual; AddLastBasket(Long64_t startEntry)TBranchvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; BackFill()TBranch; Browse(TBrowser *b) overrideTBranchvirtual; BulkObj typedefTBranchprotected; CacheInfo_t typedefTBranchprotected; CheckedHash()TObjectinline; Class()TBranchstatic; Class_Name()TBranchstatic; Class_Version()TBranchinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttFill::Copy(TAttFill &attfill) constTAttFill; DeclFileName()TBranchinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DeleteBaskets(Option_t *option="""")TBranchvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DropBaskets(Option_t *option="""")TBranchvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTBranchprotected; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; ExpandBasketArrays()TBranch; fAddressTBranchprotected; Fatal(const char *method, const char *msgfmt,...) constTObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBranch-members.html:187,inherit,inherited,187,doc/master/classTBranch-members.html,https://root.cern,https://root.cern/doc/master/classTBranch-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TBranchElement Member List. This is the complete list of members for TBranchElement, including all inherited members. AbstractMethod(const char *method) constTObject; AddBasket(TBasket &b, bool ondisk, Long64_t startEntry)TBranchvirtual; AddLastBasket(Long64_t startEntry)TBranchvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; BackFill()TBranch; Browse(TBrowser *b) overrideTBranchElementvirtual; BuildTitle(const char *name)TBranchElementprotected; BulkObj typedefTBranchprotected; CacheInfo_t typedefTBranchprotected; CheckedHash()TObjectinline; Class()TBranchElementstatic; Class_Name()TBranchElementstatic; Class_Version()TBranchElementinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttFill::Copy(TAttFill &attfill) constTAttFill; DeclFileName()TBranchElementinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DeleteBaskets(Option_t *option="""")TBranchvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DropBaskets(Option_t *option="""")TBranchvirtual; Dump() constTObjectvirtual; EBranchElementType enum nameTBranchElement; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTBranchElementprotected; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t even",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBranchElement-members.html:201,inherit,inherited,201,doc/master/classTBranchElement-members.html,https://root.cern,https://root.cern/doc/master/classTBranchElement-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TBrowser Member List. This is the complete list of members for TBrowser, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TObject *obj, const char *name=nullptr, Int_t check=-1)TBrowser; Add(void *obj, TClass *cl, const char *name=nullptr, Int_t check=-1)TBrowser; AddCheckBox(TObject *obj, Bool_t check=kFALSE)TBrowser; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; BrowseObject(TObject *obj)TBrowserinline; CheckedHash()TObjectinline; CheckObjectItem(TObject *obj, Bool_t check=kFALSE)TBrowser; Class()TBrowserstatic; Class_Name()TBrowserstatic; Class_Version()TBrowserinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &named) const overrideTNamedvirtual; Create(TObject *obj=nullptr)TBrowservirtual; DeclFileName()TBrowserinlinestatic; Delete(Option_t *option="""")TObjectvirtual; Destructor()TBrowservirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTBrowser; ExecPlugin(const char *name=nullptr, const char *fname=nullptr, const char *cmd=nullptr, Int_t pos=1, Int_t subpos=-1)TBrowserinline; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteDefaultAction(TObject *obj)TBrow",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBrowser-members.html:189,inherit,inherited,189,doc/master/classTBrowser-members.html,https://root.cern,https://root.cern/doc/master/classTBrowser-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TBuffer Member List. This is the complete list of members for TBuffer, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; ApplySequence(const TStreamerInfoActions::TActionSequence &sequence, void *object)=0TBufferpure virtual; ApplySequence(const TStreamerInfoActions::TActionSequence &sequence, void *start_collection, void *end_collection)=0TBufferpure virtual; ApplySequenceVecPtr(const TStreamerInfoActions::TActionSequence &sequence, void *start_collection, void *end_collection)=0TBufferpure virtual; AutoExpand(Int_t size_needed)TBuffer; Browse(TBrowser *b)TObjectvirtual; Buffer() constTBufferinline; BufferSize() constTBufferinline; ByteSwapBuffer(Long64_t n, EDataType type)TBuffer; CacheList_t typedefTBufferprotected; CheckByteCount(UInt_t startpos, UInt_t bcnt, const TClass *clss)=0TBufferpure virtual; CheckByteCount(UInt_t startpos, UInt_t bcnt, const char *classname)=0TBufferpure virtual; CheckedHash()TObjectinline; CheckObject(const TObject *obj)=0TBufferpure virtual; CheckObject(const void *obj, const TClass *ptrClass)=0TBufferpure virtual; Class()TBufferstatic; Class_Name()TBufferstatic; Class_Version()TBufferinlinestatic; ClassBegin(const TClass *, Version_t=-1)=0TBufferpure virtual; ClassEnd(const TClass *)=0TBufferpure virtual; ClassMember(const char *, const char *=nullptr, Int_t=-1, Int_t=-1)=0TBufferpure virtual; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &object) constTObjectvirtual; DeclFileName()TBufferinlinestatic; DecrementLevel(TVirtualStreamerInfo *)=0TBufferpure virtual; Delete(Option_t *option="""")TObjectvirtual; DetachBuffer()TBufferinline; DistancetoPrimitive(Int_t px, Int_t p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBuffer-members.html:187,inherit,inherited,187,doc/master/classTBuffer-members.html,https://root.cern,https://root.cern/doc/master/classTBuffer-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TCanvas Member List. This is the complete list of members for TCanvas, including all inherited members. AbsCoordinates(Bool_t set) overrideTPadinlinevirtual; AbsPixeltoX(Int_t px) overrideTPadinlinevirtual; AbsPixeltoXY(Int_t xpixel, Int_t ypixel, Double_t &x, Double_t &y)TPadvirtual; AbsPixeltoY(Int_t py) overrideTPadinlinevirtual; AbstractMethod(const char *method) constTObject; Add(TObject *obj, Option_t *opt="""", Bool_t modified=kTRUE) overrideTPadvirtual; AddExec(const char *name, const char *command) overrideTPadvirtual; AddFirst(TObject *obj, Option_t *opt="""", Bool_t modified=kTRUE) overrideTPadvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; AreAllSignalsBlocked()TQObjectstatic; AreSignalsBlocked() constTQObjectinline; AutoExec()TPadvirtual; BlockAllSignals(Bool_t b)TQObjectstatic; BlockSignals(Bool_t b)TQObjectinline; Browse(TBrowser *b) overrideTCanvasvirtual; Build()TCanvasprivate; BuildLegend(Double_t x1=0.3, Double_t y1=0.21, Double_t x2=0.3, Double_t y2=0.21, const char *title="""", Option_t *option="""") overrideTPadvirtual; cd(Int_t subpadnumber=0) overrideTCanvasvirtual; ChangedBy(const char *method)TQObjectinlinevirtual; CheckConnectArgs(TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot)TQObjectprotectedstatic; CheckedHash()TObjectinline; Class()TCanvasstatic; Class_Name()TCanvasstatic; Class_Version()TCanvasinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTCanvasvirtual; Cleared(TVirtualPad *pad)TCanvasvirtual; ClearPadSave()TCanvasinline; Clip(Float_t *x, Float_t *y, Float_t xclipl, Float_t yclipb, Float_t xclipr, Float_t yclipt)TPadvirtual; Clip(Double_t *x, Double_t *y, Double_t xclipl, Double_t yclipb, Double_t xclipr, Double_t yclipt) overrideTPadvirtual; ClippingCode(Double_t x, Double_t y, Double_t xcl1, Doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCanvas-members.html:187,inherit,inherited,187,doc/master/classTCanvas-members.html,https://root.cern,https://root.cern/doc/master/classTCanvas-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TChain Member List. This is the complete list of members for TChain, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TChain *chain)TChainvirtual; Add(const char *name, Long64_t nentries=TTree::kMaxEntries)TChainvirtual; AddAllocationCount(UInt_t count)TTreeinline; AddBranchToCache(const char *bname, bool subbranches=false)TTreevirtual; AddBranchToCache(TBranch *branch, bool subbranches=false)TTreevirtual; AddClone(TTree *)TTree; AddFile(const char *name, Long64_t nentries=TTree::kMaxEntries, const char *tname="""")TChainvirtual; AddFileInfoList(TCollection *list, Long64_t nfiles=TTree::kMaxEntries)TChainvirtual; AddFriend(const char *chainname, const char *dummy="""") overrideTChainvirtual; AddFriend(const char *chainname, TFile *dummy) overrideTChainvirtual; AddFriend(TTree *chain, const char *alias="""", bool warn=false) overrideTChainvirtual; AddTotBytes(Int_t tot)TTreeinlinevirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AddZipBytes(Int_t zip)TTreeinlinevirtual; AppendPad(Option_t *option="""")TObjectvirtual; AutoSave(Option_t *option="""")TTreevirtual; Branch(const char *name, T *obj, Int_t bufsize=32000, Int_t splitlevel=99)TTreeinline; Branch(const char *name, T **addobj, Int_t bufsize=32000, Int_t splitlevel=99)TTreeinline; Branch(TCollection *list, Int_t bufsize=32000, Int_t splitlevel=99, const char *name="""")TTreevirtual; Branch(TList *list, Int_t bufsize=32000, Int_t splitlevel=99)TTreevirtual; Branch(const char *folder, Int_t bufsize=32000, Int_t splitlevel=99)TTreevirtual; Branch(const char *name, void *address, const char *leaflist, Int_t bufsize=32000)TTreevirtual; Branch(const char *name, char *address, const char *leaflist, Int_t bufsize=32000)TTreeinline; Branch(const char *name, Longptr_t address, const char *leaflist, Int_t bufsize=32000)TTreeinline; Branch(const char *name, int address, const char *leaflist,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTChain-members.html:185,inherit,inherited,185,doc/master/classTChain-members.html,https://root.cern,https://root.cern/doc/master/classTChain-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TClass Member List. This is the complete list of members for TClass, including all inherited members. AbstractMethod(const char *method) constTObject; AddClass(TClass *cl)TClassstatic; AddClassToDeclIdMap(TDictionary::DeclId_t id, TClass *cl)TClassstatic; AddImplFile(const char *filename, int line)TClass; AddInstance(Bool_t heap=kFALSE)TClassinline; AddRule(const char *rule)TClassstatic; AddToTObjectTable(TObject *)TObjectprivatestatic; AdoptMemberStreamer(const char *name, TMemberStreamer *strm)TClass; AdoptReferenceProxy(TVirtualRefProxy *proxy)TClass; AdoptSchemaRules(ROOT::Detail::TSchemaRuleSet *rules)TClass; AdoptStreamer(TClassStreamer *strm)TClass; AppendPad(Option_t *option="""")TObjectvirtual; AutoBrowse(TObject *obj, TBrowser *browser)TClassstatic; Browse(TBrowser *b) overrideTClassvirtual; Browse(void *obj, TBrowser *b) constTClass; BuildEmulatedRealData(const char *name, Longptr_t offset, TClass *cl, Bool_t isTransient=kFALSE)TClass; BuildRealData(void *pointer=nullptr, Bool_t isTransient=kFALSE)TClass; CalculateStreamerOffset() constTClass; CallShowMembers(const void *obj, TMemberInspector &insp, Bool_t isTransient=kFALSE) constTClass; CanIgnoreTObjectStreamer()TClassinline; CanSplit() constTClass; CanSplitBaseAllow()TClassprivate; CheckedHash()TObjectinline; Class()TClassstatic; Class_Name()TClassstatic; Class_Version()TClassinlinestatic; ClassName() constTObjectvirtual; ClassProperty() constTClass; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTClassvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; ConvSIMap_t typedefTClassprivate; ConvStreamerInstrumented(const TClass *pThis, void *object, TBuffer &b, const TClass *onfile_class)TClassprivatestatic; Copy(TObject &named) const overrideTNamedvirtual; CopyCollectionProxy(const TVirtualCollectionProxy &)TClass; CreateAttributeMap()TDictionary; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClass-members.html:185,inherit,inherited,185,doc/master/classTClass-members.html,https://root.cern,https://root.cern/doc/master/classTClass-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TCling Member List. This is the complete list of members for TCling, including all inherited members. AbstractMethod(const char *method) constTObject; AddAvailableIndentifiers(TSeqCollection &Idents) finalTClingvirtual; AddFriendToClass(clang::FunctionDecl *, clang::CXXRecordDecl *) constTClingprivate; AddIncludePath(const char *path) finalTClingvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; ApplyToInterpreterMutex(void *delta)TCling; AutoLoad(const char *classname, Bool_t knowDictNotLoaded=kFALSE) finalTClingvirtual; AutoLoad(const std::type_info &typeinfo, Bool_t knowDictNotLoaded=kFALSE) finalTClingvirtual; AutoLoadCallBack_t typedefTInterpreter; AutoParse(const char *cls) finalTClingvirtual; AutoParseImplRecurse(const char *cls, bool topLevel)TClingprivate; BaseClassInfo_ClassInfo(BaseClassInfo_t *) const finalTClingvirtual; BaseClassInfo_Delete(BaseClassInfo_t *bcinfo) const finalTClingvirtual; BaseClassInfo_Factory(ClassInfo_t *info) const finalTClingvirtual; BaseClassInfo_Factory(ClassInfo_t *derived, ClassInfo_t *base) const finalTClingvirtual; BaseClassInfo_FullName(BaseClassInfo_t *bcinfo) const finalTClingvirtual; BaseClassInfo_Name(BaseClassInfo_t *bcinfo) const finalTClingvirtual; BaseClassInfo_Next(BaseClassInfo_t *bcinfo) const finalTClingvirtual; BaseClassInfo_Next(BaseClassInfo_t *bcinfo, int onlyDirect) const finalTClingvirtual; BaseClassInfo_Offset(BaseClassInfo_t *toBaseClassInfo, void *address, bool isDerivedObject) const finalTClingvirtual; BaseClassInfo_Property(BaseClassInfo_t *bcinfo) const finalTClingvirtual; BaseClassInfo_Tagnum(BaseClassInfo_t *bcinfo) const finalTClingvirtual; BaseClassInfo_TmpltName(BaseClassInfo_t *bcinfo) const finalTClingvirtual; Browse(TBrowser *b)TObjectvirtual; Calc(const char *line, EErrorCode *error=nullptr) finalTClingvirtual; CallFunc_Delete(CallFunc_t *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCling-members.html:185,inherit,inherited,185,doc/master/classTCling-members.html,https://root.cern,https://root.cern/doc/master/classTCling-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TCollection Member List. This is the complete list of members for TCollection, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TObject *obj)=0TCollectionpure virtual; AddAll(const TCollection *col)TCollectionvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AddVector(TObject *obj1,...)TCollection; AppendPad(Option_t *option="""")TObjectvirtual; AssertClass(TClass *cl) constTCollection; begin() constTCollectioninline; Browse(TBrowser *b) overrideTCollectionvirtual; Capacity() constTCollectioninline; CheckedHash()TObjectinline; Class()TCollectionstatic; Class_Name()TCollectionstatic; Class_Version()TCollectioninlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") override=0TCollectionpure virtual; Clone(const char *newname="""") const overrideTCollectionvirtual; Compare(const TObject *obj) const overrideTCollectionvirtual; Contains(const char *name) constTCollectioninline; Contains(const TObject *obj) constTCollectioninline; Copy(TObject &object) constTObjectvirtual; DeclFileName()TCollectioninlinestatic; Delete(Option_t *option="""") override=0TCollectionpure virtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTCollectionvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() const overrideTCollectionvirtual; EDeprecatedStatusBits enum nameTObject; EmptyGarbageCollection()TCollectionstatic; end() constTCollectioninline; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTCollectionprotected; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCollection-members.html:195,inherit,inherited,195,doc/master/classTCollection-members.html,https://root.cern,https://root.cern/doc/master/classTCollection-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TColor Member List. This is the complete list of members for TColor, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; Allocate()TColorprivate; AppendPad(Option_t *option="""")TObjectvirtual; AsHexString() constTColor; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TColorstatic; Class_Name()TColorstatic; Class_Version()TColorinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &color) const overrideTColorvirtual; CreateColorsCircle(Int_t offset, const char *name, UChar_t *rgb)TColorstatic; CreateColorsGray()TColorstatic; CreateColorsRectangle(Int_t offset, const char *name, UChar_t *rgb)TColorstatic; CreateColorTableFromFile(TString fileName, Float_t alpha=1.)TColorstatic; CreateColorWheel()TColorstatic; CreateGradientColorTable(UInt_t Number, Double_t *Stops, Double_t *Red, Double_t *Green, Double_t *Blue, UInt_t NColors, Float_t alpha=1., Bool_t setPalette=kTRUE)TColorstatic; DeclFileName()TColorinlinestatic; DefinedColors(Int_t set_always_on=0)TColorstatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTColor-members.html:185,inherit,inherited,185,doc/master/classTColor-members.html,https://root.cern,https://root.cern/doc/master/classTColor-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TCurlyArc Member List. This is the complete list of members for TCurlyArc, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; Build() overrideTCurlyArcvirtual; CheckedHash()TObjectinline; Class()TCurlyArcstatic; Class_Name()TCurlyArcstatic; Class_Version()TCurlyArcinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &polyline) const overrideTPolyLinevirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; DeclFileName()TCurlyArcinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTCurlyArcvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTPolyLinevirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawPolyLine(Int_t n, Double_t *x, Double_t *y, Option_t *option="""")TPolyLinevirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTCurlyArcvirtual; fAmplitudeTCurlyLineprotected; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fFillColorTAttFillprotected; f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCurlyArc-members.html:191,inherit,inherited,191,doc/master/classTCurlyArc-members.html,https://root.cern,https://root.cern/doc/master/classTCurlyArc-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TCurlyLine Member List. This is the complete list of members for TCurlyLine, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; Build()TCurlyLinevirtual; CheckedHash()TObjectinline; Class()TCurlyLinestatic; Class_Name()TCurlyLinestatic; Class_Version()TCurlyLineinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &polyline) const overrideTPolyLinevirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; DeclFileName()TCurlyLineinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTCurlyLinevirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTPolyLinevirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawPolyLine(Int_t n, Double_t *x, Double_t *y, Option_t *option="""")TPolyLinevirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTCurlyLinevirtual; fAmplitudeTCurlyLineprotected; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fFillColorTAttFillprotected; f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCurlyLine-members.html:193,inherit,inherited,193,doc/master/classTCurlyLine-members.html,https://root.cern,https://root.cern/doc/master/classTCurlyLine-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TDirectory Member List. This is the complete list of members for TDirectory, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TObject *obj, Bool_t replace=kFALSE)TDirectoryinlinevirtual; AddDirectory(Bool_t add=kTRUE)TDirectorystatic; AddDirectoryStatus()TDirectorystatic; AddToTObjectTable(TObject *)TObjectprivatestatic; Append(TObject *obj, Bool_t replace=kFALSE)TDirectoryvirtual; AppendKey(TKey *)TDirectoryinlinevirtual; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b) overrideTDirectoryvirtual; Build(TFile *motherFile=nullptr, TDirectory *motherDir=nullptr)TDirectoryinlinevirtual; BuildDirectory(TFile *motherFile, TDirectory *motherDir)TDirectoryprotected; cd()TDirectoryvirtual; cd(const char *path)TDirectoryvirtual; Cd(const char *path)TDirectorystatic; Cd1(const char *path)TDirectoryprotectedstatic; cd1(const char *path)TDirectoryprotected; CheckedHash()TObjectinline; Class()TDirectorystatic; Class_Name()TDirectorystatic; Class_Version()TDirectoryinlinestatic; ClassName() constTObjectvirtual; CleanTargets()TDirectoryprotected; Clear(Option_t *option="""") overrideTDirectoryvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; CloneObject(const TObject *obj, Bool_t autoadd=kTRUE)TDirectoryvirtual; Close(Option_t *option="""")TDirectoryvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &) const overrideTDirectoryinlinevirtual; CurrentDirectory()TDirectorystatic; DeclFileName()TDirectoryinlinestatic; DecodeNameCycle(const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0)TDirectorystatic; Delete(const char *namecycle="""") overrideTDirectoryvirtual; DeleteAll(Option_t *option="""")TDirectoryvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Opt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDirectory-members.html:193,inherit,inherited,193,doc/master/classTDirectory-members.html,https://root.cern,https://root.cern/doc/master/classTDirectory-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TDirectoryFile Member List. This is the complete list of members for TDirectoryFile, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TObject *obj, Bool_t replace=kFALSE) overrideTDirectoryFileinlinevirtual; AddDirectory(Bool_t add=kTRUE)TDirectorystatic; AddDirectoryStatus()TDirectorystatic; AddToTObjectTable(TObject *)TObjectprivatestatic; Append(TObject *obj, Bool_t replace=kFALSE) overrideTDirectoryFilevirtual; AppendKey(TKey *key) overrideTDirectoryFilevirtual; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b) overrideTDirectoryFilevirtual; Build(TFile *motherFile=nullptr, TDirectory *motherDir=nullptr) overrideTDirectoryFileinlinevirtual; BuildDirectory(TFile *motherFile, TDirectory *motherDir)TDirectoryprotected; BuildDirectoryFile(TFile *motherFile, TDirectory *motherDir)TDirectoryFileprotected; Cd(const char *path)TDirectorystatic; cd() overrideTDirectoryFilevirtual; cd(const char *path) overrideTDirectoryFilevirtual; cd1(const char *path)TDirectoryprotected; Cd1(const char *path)TDirectoryprotectedstatic; CheckedHash()TObjectinline; Class()TDirectoryFilestatic; Class_Name()TDirectoryFilestatic; Class_Version()TDirectoryFileinlinestatic; ClassName() constTObjectvirtual; CleanTargets()TDirectoryFileprotected; Clear(Option_t *option="""") overrideTDirectoryvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; CloneObject(const TObject *obj, Bool_t autoadd=kTRUE) overrideTDirectoryFilevirtual; Close(Option_t *option="""") overrideTDirectoryFilevirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &) const overrideTDirectoryFileinlinevirtual; CurrentDirectory()TDirectorystatic; DeclFileName()TDirectoryFileinlinestatic; DecodeNameCycle(const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0)TDirectorystatic; Delete(const char *namecycle="""") overrideTDirector",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDirectoryFile-members.html:201,inherit,inherited,201,doc/master/classTDirectoryFile-members.html,https://root.cern,https://root.cern/doc/master/classTDirectoryFile-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TEfficiency Member List. This is the complete list of members for TEfficiency, including all inherited members. AbstractMethod(const char *method) constTObject; Add(const TEfficiency &rEff)TEfficiencyinline; AddToTObjectTable(TObject *)TObjectprivatestatic; AgrestiCoull(Double_t total, Double_t passed, Double_t level, Bool_t bUpper)TEfficiencystatic; AppendPad(Option_t *option="""")TObjectvirtual; Bayesian(Double_t total, Double_t passed, Double_t level, Double_t alpha, Double_t beta, Bool_t bUpper, Bool_t bShortest=false)TEfficiencystatic; BetaCentralInterval(Double_t level, Double_t alpha, Double_t beta, Bool_t bUpper)TEfficiencystatic; BetaMean(Double_t alpha, Double_t beta)TEfficiencystatic; BetaMode(Double_t alpha, Double_t beta)TEfficiencystatic; BetaShortestInterval(Double_t level, Double_t alpha, Double_t beta, Double_t &lower, Double_t &upper)TEfficiencystatic; Browse(TBrowser *) overrideTEfficiencyinlinevirtual; Build(const char *name, const char *title)TEfficiencyprotected; CheckBinning(const TH1 &pass, const TH1 &total)TEfficiencystatic; CheckConsistency(const TH1 &pass, const TH1 &total, Option_t *opt="""")TEfficiencystatic; CheckedHash()TObjectinline; CheckEntries(const TH1 &pass, const TH1 &total, Option_t *opt="""")TEfficiencystatic; CheckWeights(const TH1 &pass, const TH1 &total)TEfficiencystatic; Class()TEfficiencystatic; Class_Name()TEfficiencystatic; Class_Version()TEfficiencyinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; ClopperPearson(Double_t total, Double_t passed, Double_t level, Bool_t bUpper)TEfficiencystatic; Combine(Double_t &up, Double_t &low, Int_t n, const Int_t *pass, const Int_t *total, Double_t alpha, Double_t beta, Double_t level=0.683, const Double_t *w=nullptr, Option_t *opt="""")TEfficiencystatic; Combine(TCollection *pList, Opti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEfficiency-members.html:195,inherit,inherited,195,doc/master/classTEfficiency-members.html,https://root.cern,https://root.cern/doc/master/classTEfficiency-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TEllipse Member List. This is the complete list of members for TEllipse, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TEllipsestatic; Class_Name()TEllipsestatic; Class_Version()TEllipseinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &ellipse) const overrideTEllipsevirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; DeclFileName()TEllipseinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTEllipsevirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTEllipsevirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawEllipse(Double_t x1, Double_t y1, Double_t r1, Double_t r2, Double_t phimin, Double_t phimax, Double_t theta, Option_t *option="""")TEllipsevirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTEllipsevirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fFillColorTAttFillprotected; fFillStyleTA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEllipse-members.html:189,inherit,inherited,189,doc/master/classTEllipse-members.html,https://root.cern,https://root.cern/doc/master/classTEllipse-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TEntryList Member List. This is the complete list of members for TEntryList, including all inherited members. AbstractMethod(const char *method) constTObject; Add(const TEntryList *elist)TEntryListvirtual; AddSubList(TEntryList *elist)TEntryList; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TEntryListstatic; Class_Name()TEntryListstatic; Class_Version()TEntryListinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Contains(Long64_t entry, TTree *tree=nullptr)TEntryListvirtual; Copy(TObject &named) const overrideTNamedvirtual; DeclFileName()TEntryListinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DirectoryAutoAdd(TDirectory *)TEntryListvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Enter(Long64_t entry, TTree *tree=nullptr)TEntryListvirtual; Enter(Long64_t localentry, const char *treename, const char *filename)TEntryListvirtual; EnterRange(Long64_t start, Long64_t end, TTree *tree=nullptr, UInt_t step=1U)TEntryList; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *ms",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEntryList-members.html:193,inherit,inherited,193,doc/master/classTEntryList-members.html,https://root.cern,https://root.cern/doc/master/classTEntryList-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TEnv Member List. This is the complete list of members for TEnv, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TEnvstatic; Class_Name()TEnvstatic; Class_Version()TEnvinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &object) constTObjectvirtual; DeclFileName()TEnvinlinestatic; Defined(const char *name) constTEnvinline; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; fIgnoreDupTEnvprivate; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fRcNameTEnvprivate; fTableTEnvprivate; fUniqueIDTObjectprivate; GetDrawOption() constTObjectvirtual; GetDtorOnly()TObjectstatic; GetIconName() constTObjectvirtual; GetName() constTObjectvirtual; GetObjectInfo(Int_t px, In",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEnv-members.html:181,inherit,inherited,181,doc/master/classTEnv-members.html,https://root.cern,https://root.cern/doc/master/classTEnv-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TEventList Member List. This is the complete list of members for TEventList, including all inherited members. AbstractMethod(const char *method) constTObject; Add(const TEventList *list)TEventListvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TEventListstatic; Class_Name()TEventListstatic; Class_Version()TEventListinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTEventListinlinevirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Contains(Long64_t entry)TEventListvirtual; ContainsRange(Long64_t entrymin, Long64_t entrymax)TEventListvirtual; Copy(TObject &named) const overrideTNamedvirtual; DeclFileName()TEventListinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DirectoryAutoAdd(TDirectory *)TEventListvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Enter(Long64_t entry)TEventListvirtual; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fDeltaTEventListprotected; fDirectoryTEventListprotected; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FillBu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEventList-members.html:193,inherit,inherited,193,doc/master/classTEventList-members.html,https://root.cern,https://root.cern/doc/master/classTEventList-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TF1 Member List. This is the complete list of members for TF1, including all inherited members. AbstractMethod(const char *method) constTObject; AbsValue(Bool_t reject=kTRUE)TF1static; AddParameter(const TString &name, Double_t value)TF1inlinevirtual; AddToGlobalList(Bool_t on=kTRUE)TF1virtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b) overrideTF1virtual; CalcGaussLegendreSamplingPoints(Int_t num, Double_t *x, Double_t *w, Double_t eps=3.0e-11)TF1static; CentralMoment(Double_t n, Double_t a, Double_t b, const Double_t *params=nullptr, Double_t epsilon=0.000001)TF1virtual; CheckedHash()TObjectinline; Class()TF1static; Class_Name()TF1static; Class_Version()TF1inlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname=nullptr) const overrideTF1virtual; Compare(const TObject *obj) const overrideTNamedvirtual; ComputeCdfTable(Option_t *opt)TF1protected; Copy(TObject &f1) const overrideTF1virtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; CreateHistogram()TF1inlinevirtual; DeclFileName()TF1inlinestatic; DefaultAddToGlobalList(Bool_t on=kTRUE)TF1static; DefineNSUMTerm(TObjArray *newFuncs, TObjArray *coeffNames, TString &fullFormula, TString &formula, int termStart, int termEnd, Double_t xmin, Double_t xmax)TF1private; Delete(Option_t *option="""")TObjectvirtual; Derivative(Double_t x, Double_t *params=nullptr, Double_t epsilon=0.001) constTF1virtual; Derivative2(Double_t x, Double_t *params=nullptr, Double_t epsilon=0.001) constTF1virtual; Derivative3(Double_t x, Double_t *params=nullptr, Double_t epsilon=0.001) constTF1virtual; DerivativeError()TF1static; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF1-members.html:179,inherit,inherited,179,doc/master/classTF1-members.html,https://root.cern,https://root.cern/doc/master/classTF1-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TF2 Member List. This is the complete list of members for TF2, including all inherited members. AbstractMethod(const char *method) constTObject; AbsValue(Bool_t reject=kTRUE)TF1static; AddParameter(const TString &name, Double_t value)TF1inlinevirtual; AddToGlobalList(Bool_t on=kTRUE)TF1virtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b) overrideTF1virtual; CalcGaussLegendreSamplingPoints(Int_t num, Double_t *x, Double_t *w, Double_t eps=3.0e-11)TF1static; CentralMoment(Double_t n, Double_t a, Double_t b, const Double_t *params=nullptr, Double_t epsilon=0.000001)TF1virtual; CentralMoment2(Double_t nx, Double_t ax, Double_t bx, Double_t ny, Double_t ay, Double_t by, Double_t epsilon=0.000001)TF2virtual; CheckedHash()TObjectinline; Class()TF2static; Class_Name()TF2static; Class_Version()TF2inlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname=nullptr) const overrideTF1virtual; Compare(const TObject *obj) const overrideTNamedvirtual; ComputeCdfTable(Option_t *opt)TF1protected; Copy(TObject &f2) const overrideTF2virtual; TF1::TAttLine::Copy(TAttLine &attline) constTAttLine; TF1::TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; Covariance2XY(Double_t ax, Double_t bx, Double_t ay, Double_t by, Double_t epsilon=0.000001)TF2inlinevirtual; CreateHistogram() overrideTF2virtual; DeclFileName()TF2inlinestatic; DefaultAddToGlobalList(Bool_t on=kTRUE)TF1static; DefineNSUMTerm(TObjArray *newFuncs, TObjArray *coeffNames, TString &fullFormula, TString &formula, int termStart, int termEnd, Double_t xmin, Double_t xmax)TF1private; Delete(Option_t *option="""")TObjectvirtual; Derivative(Double_t x, Double_t *params=nullptr, Double_t epsilon=0.001) constTF1virtual; Derivative2(Double_t x, Double",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF2-members.html:179,inherit,inherited,179,doc/master/classTF2-members.html,https://root.cern,https://root.cern/doc/master/classTF2-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFile Member List. This is the complete list of members for TFile, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TObject *obj, Bool_t replace=kFALSE) overrideTDirectoryFileinlinevirtual; AddDirectory(Bool_t add=kTRUE)TDirectorystatic; AddDirectoryStatus()TDirectorystatic; AddToTObjectTable(TObject *)TObjectprivatestatic; Append(TObject *obj, Bool_t replace=kFALSE) overrideTDirectoryFilevirtual; AppendKey(TKey *key) overrideTDirectoryFilevirtual; AppendPad(Option_t *option="""")TObjectvirtual; AsyncOpen(const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0)TFilestatic; Browse(TBrowser *b) overrideTDirectoryFilevirtual; Build(TFile *motherFile=nullptr, TDirectory *motherDir=nullptr) overrideTDirectoryFileinlinevirtual; BuildDirectory(TFile *motherFile, TDirectory *motherDir)TDirectoryprotected; BuildDirectoryFile(TFile *motherFile, TDirectory *motherDir)TDirectoryFileprotected; Cd(const char *path)TDirectorystatic; cd() overrideTDirectoryFilevirtual; cd(const char *path) overrideTDirectoryFilevirtual; Cd1(const char *path)TDirectoryprotectedstatic; cd1(const char *path)TDirectoryprotected; CheckedHash()TObjectinline; Class()TFilestatic; Class_Name()TFilestatic; Class_Version()TFileinlinestatic; ClassName() constTObjectvirtual; CleanTargets()TDirectoryFileprotected; Clear(Option_t *option="""") overrideTDirectoryvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; CloneObject(const TObject *obj, Bool_t autoadd=kTRUE) overrideTDirectoryFilevirtual; Close(Option_t *option="""") overrideTFilevirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &) const overrideTFileinlinevirtual; Cp(const char *dst, Bool_t progressbar=kTRUE, UInt_t buffersize=1000000)TFilevirtual; Cp(const char *src, const char *dst, Boo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFile-members.html:183,inherit,inherited,183,doc/master/classTFile-members.html,https://root.cern,https://root.cern/doc/master/classTFile-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFitResult Member List. This is the complete list of members for TFitResult, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Chi2() constROOT::Fit::FitResultinline; Class()TFitResultstatic; Class_Name()TFitResultstatic; Class_Version()TFitResultinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Contour(unsigned int ipar, unsigned int jpar, TGraph *gr, double confLevel=0.683)TFitResult; ROOT::Fit::FitResult::Contour(unsigned int ipar, unsigned int jpar, unsigned int &npoints, double *pntsx, double *pntsy, double confLevel=0.683)ROOT::Fit::FitResult; Copy(TObject &named) const overrideTNamedvirtual; Correlation(unsigned int i, unsigned int j) constROOT::Fit::FitResultinline; CovMatrix(unsigned int i, unsigned int j) constROOT::Fit::FitResultinline; CovMatrixStatus() constROOT::Fit::FitResultinline; DeclFileName()TFitResultinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Edm() constROOT::Fit::FitResultinline; Error(unsigned int i) constTFitResultinline; Error(const char *method, const char *msgfmt,...) constTFitResultvirtual; Errors() constROOT::Fit::FitResultinline; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFitResult-members.html:193,inherit,inherited,193,doc/master/classTFitResult-members.html,https://root.cern,https://root.cern/doc/master/classTFitResult-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFitResultPtr Member List. This is the complete list of members for TFitResultPtr, including all inherited members. Class()TFitResultPtrstatic; Class_Name()TFitResultPtrstatic; Class_Version()TFitResultPtrinlinestatic; DeclFileName()TFitResultPtrinlinestatic; fPointerTFitResultPtrprivate; fStatusTFitResultPtrprivate; Get() constTFitResultPtr; IsA() constTFitResultPtrinlinevirtual; operator int() constTFitResultPtrinline; operator*() constTFitResultPtr; operator->() constTFitResultPtr; operator=(const TFitResultPtr &rhs)TFitResultPtr; Streamer(TBuffer &)TFitResultPtrvirtual; StreamerNVirtual(TBuffer &ClassDef_StreamerNVirtual_b)TFitResultPtrinline; TFitResultPtr(int status=-1)TFitResultPtrinline; TFitResultPtr(const std::shared_ptr< TFitResult > &p)TFitResultPtr; TFitResultPtr(TFitResult *p)TFitResultPtr; TFitResultPtr(const TFitResultPtr &rhs)TFitResultPtr; ~TFitResultPtr()TFitResultPtrvirtual. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:51 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFitResultPtr-members.html:199,inherit,inherited,199,doc/master/classTFitResultPtr-members.html,https://root.cern,https://root.cern/doc/master/classTFitResultPtr-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFormula Member List. This is the complete list of members for TFormula, including all inherited members. AbstractMethod(const char *method) constTObject; AddParameter(const TString &name, Double_t value=0)TFormulainline; AddToTObjectTable(TObject *)TObjectprivatestatic; AddVariable(const TString &name, Double_t value=0)TFormula; AddVariables(const TString *vars, const Int_t size)TFormula; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CallFuncSignature typedefTFormulaprivate; CheckedHash()TObjectinline; CladStorage typedefTFormula; Class()TFormulastatic; Class_Name()TFormulastatic; Class_Version()TFormulainlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTFormulavirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Compile(const char *expression="""")TFormula; Copy(TObject &f1) const overrideTFormulavirtual; DeclFileName()TFormulainlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoAddParameter(const TString &name, Double_t value, bool processFormula)TFormulaprotected; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; DoEval(const Double_t *x, const Double_t *p=nullptr) constTFormulaprotected; DoSetParameters(const Double_t *p, Int_t size)TFormulaprotected; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTFormula; Eval(Args... args) constTFormula; EvalPar(const Double_t *x, const Double_t *params=nullptr) constTFormula; EvalPar(const T *x, const Double_t *params=nullptr) constTFormulainline; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFormula-members.html:189,inherit,inherited,189,doc/master/classTFormula-members.html,https://root.cern,https://root.cern/doc/master/classTFormula-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFrame Member List. This is the complete list of members for TFrame, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TFramestatic; Class_Name()TFramestatic; Class_Version()TFrameinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &frame) const overrideTFramevirtual; TWbox::TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; DeclFileName()TFrameinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTBoxvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTFramevirtual; DrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2)TBoxvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawWbox(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Color_t color=33, Short_t bordersize=5, Short_t bordermode=-1)TWboxvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTFramevirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFrame-members.html:185,inherit,inherited,185,doc/master/classTFrame-members.html,https://root.cern,https://root.cern/doc/master/classTFrame-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFree Member List. This is the complete list of members for TFree, including all inherited members. AbstractMethod(const char *method) constTObject; AddFree(TList *lfree, Long64_t first, Long64_t last)TFree; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TFreestatic; Class_Name()TFreestatic; Class_Version()TFreeinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &object) constTObjectvirtual; DeclFileName()TFreeinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fFirstTFreeprotected; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FillBuffer(char *&buffer)TFreevirtual; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fLastTFreeprotected; fUniqueIDTObjectprivate; GetBestFree(TList *lfree, Int_t nbytes)TFree; GetDrawOption() constTObjectvirtual; GetDtorOnly()TObjectstatic; GetF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFree-members.html:183,inherit,inherited,183,doc/master/classTFree-members.html,https://root.cern,https://root.cern/doc/master/classTFree-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TFumili Member List. This is the complete list of members for TFumili, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; BuildArrays()TFumili; CheckedHash()TObjectinline; Chisquare(Int_t npar, Double_t *params) const overrideTFumilivirtual; Class()TFumilistatic; Class_Name()TFumilistatic; Class_Version()TFumiliinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *opt="""") overrideTFumilivirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &named) const overrideTNamedvirtual; DeclFileName()TFumiliinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DeleteArrays()TFumili; Derivatives(Double_t *, Double_t *)TFumili; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Eval(Int_t &npar, Double_t *grad, Double_t &fval, Double_t *par, Int_t flag)TFumili; EvalTFN(Double_t *, Double_t *)TFumili; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteCommand(const char *command, Double_t *args, Int_t nargs) overrideTFumilivirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; ExecuteSetCommand(Int_t)TFumili; fATFumiliprivate; fAKAPPATFumiliprivate; fAMNTFumiliprivate; fAMXTFumiliprivate; fANamesTFumil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFumili-members.html:187,inherit,inherited,187,doc/master/classTFumili-members.html,https://root.cern,https://root.cern/doc/master/classTFumili-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGaxis Member List. This is the complete list of members for TGaxis, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AdjustBinSize(Double_t A1, Double_t A2, Int_t nold, Double_t &BinLow, Double_t &BinHigh, Int_t &nbins, Double_t &BinWidth)TGaxisvirtual; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CenterLabels(Bool_t center=kTRUE)TGaxisvirtual; CenterTitle(Bool_t center=kTRUE)TGaxisvirtual; ChangeLabel(Int_t labNum=0, Double_t labAngle=-1., Double_t labSize=-1., Int_t labAlign=-1, Int_t labColor=-1, Int_t labFont=-1, const TString &labText="""")TGaxis; ChangeLabelAttributes(Int_t i, Int_t nlabels, TLatex *t, char *c, Double_t value=0., Double_t eps=-1.)TGaxis; ChangeLabelByValue(Double_t labValue, Double_t labAngle=-1., Double_t labSize=-1., Int_t labAlign=-1, Int_t labColor=-1, Int_t labFont=-1, const TString &labText="""")TGaxis; CheckedHash()TObjectinline; Class()TGaxisstatic; Class_Name()TGaxisstatic; Class_Version()TGaxisinlinestatic; ClassName() constTObjectvirtual; CleanupModLabs()TGaxisprotected; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; TLine::Copy(TObject &line) const overrideTLinevirtual; TLine::TAttLine::Copy(TAttLine &attline) constTAttLine; TAttText::Copy(TAttText &atttext) constTAttText; DeclFileName()TGaxisinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTLinevirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawAxis(Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax, Double_t wmi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGaxis-members.html:185,inherit,inherited,185,doc/master/classTGaxis-members.html,https://root.cern,https://root.cern/doc/master/classTGaxis-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGenMapProxy Member List. This is the complete list of members for TGenMapProxy, including all inherited members. Allocate(UInt_t n, Bool_t forceDelete) overrideTGenCollectionProxyvirtual; ArrIterfunc_t typedefTGenCollectionProxyprotected; At(UInt_t idx) overrideTGenSetProxyinlinevirtual; CheckFunctions() constTGenCollectionProxyprotected; Clear(const char *opt="""") overrideTGenCollectionProxyvirtual; Collectfunc_t typedefTGenCollectionProxyprotected; Commit(void *env) overrideTGenCollectionProxyvirtual; CopyIterator_t typedefTVirtualCollectionProxy; CreateIterators_t typedefTVirtualCollectionProxy; DeleteArray(void *p, Bool_t dtorOnly=kFALSE) constTVirtualCollectionProxyinlinevirtual; DeleteItem(Bool_t force, void *ptr) const overrideTGenMapProxyinlinevirtual; DeleteIterator_t typedefTVirtualCollectionProxy; DeleteTwoIterators_t typedefTVirtualCollectionProxy; Destructor(void *p, Bool_t dtorOnly=kFALSE) constTVirtualCollectionProxyinlinevirtual; Env_t typedefTGenCollectionProxyprotected; EnvironBase_t typedefTGenCollectionProxyprotected; EProperty enum nameTVirtualCollectionProxy; fClassTVirtualCollectionProxyprotected; fClearTGenCollectionProxyprotected; fCollectTGenCollectionProxyprotected; fConstructTGenCollectionProxyprotected; fConversionReadMemberWiseTGenCollectionProxymutableprotected; fCreateEnvTGenCollectionProxyprotected; fDestructTGenCollectionProxyprotected; Feedfunc_t typedefTGenCollectionProxyprotected; fEnvTGenCollectionProxyprotected; fFeedTGenCollectionProxyprotected; fFirstTGenCollectionProxyprotected; fFunctionCopyIteratorTGenCollectionProxyprotected; fFunctionCreateIteratorsTGenCollectionProxyprotected; fFunctionDeleteIteratorTGenCollectionProxyprotected; fFunctionDeleteTwoIteratorsTGenCollectionProxyprotected; fFunctionNextIteratorTGenCollectionProxyprotected; fgIteratorArenaSizeTVirtualCollectionProxystatic; fKeyTGenCollectionProxyprotected; fNa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenMapProxy-members.html:197,inherit,inherited,197,doc/master/classTGenMapProxy-members.html,https://root.cern,https://root.cern/doc/master/classTGenMapProxy-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoManager Member List. This is the complete list of members for TGeoManager, including all inherited members. AbstractMethod(const char *method) constTObject; AddBorderSurface(TGeoBorderSurface *surf)TGeoManager; AddGDMLMatrix(TGDMLMatrix *mat)TGeoManager; AddMaterial(const TGeoMaterial *material)TGeoManager; AddNavigator()TGeoManager; AddOpticalSurface(TGeoOpticalSurface *optsurf)TGeoManager; AddOverlap(const TNamed *ovlp)TGeoManager; AddProperty(const char *property, Double_t value)TGeoManager; AddRegion(TGeoRegion *region)TGeoManager; AddShape(const TGeoShape *shape)TGeoManager; AddSkinSurface(TGeoSkinSurface *surf)TGeoManager; AddToTObjectTable(TObject *)TObjectprivatestatic; AddTrack(Int_t id, Int_t pdgcode, TObject *particle=nullptr)TGeoManager; AddTrack(TVirtualGeoTrack *track)TGeoManager; AddTransformation(const TGeoMatrix *matrix)TGeoManager; AddVolume(TGeoVolume *volume)TGeoManager; AnimateTracks(Double_t tmin=0, Double_t tmax=5E-8, Int_t nframes=200, Option_t *option=""/*"")TGeoManager; AppendPad(Option_t *option="""")TObjectvirtual; BombTranslation(const Double_t *tr, Double_t *bombtr)TGeoManager; Browse(TBrowser *b) overrideTGeoManagervirtual; BuildDefaultMaterials()TGeoManager; cd(const char *path="""")TGeoManagervirtual; CdDown(Int_t index)TGeoManager; CdNext()TGeoManager; CdNode(Int_t nodeid)TGeoManager; CdTop()TGeoManager; CdUp()TGeoManager; CheckBoundaryErrors(Int_t ntracks=1000000, Double_t radius=-1.)TGeoManager; CheckBoundaryReference(Int_t icheck=-1)TGeoManager; CheckedHash()TObjectinline; CheckGeometry(Option_t *option="""")TGeoManager; CheckGeometryFull(Int_t ntracks=1000000, Double_t vx=0., Double_t vy=0., Double_t vz=0., Option_t *option=""ob"")TGeoManager; CheckOverlaps(Double_t ovlp=0.1, Option_t *option="""")TGeoManager; CheckPath(const char *path) constTGeoManager; CheckPoint(Double_t x=0, Double_t y=0, Double_t z=0, Option_t *option="""", Double_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoManager-members.html:195,inherit,inherited,195,doc/master/classTGeoManager-members.html,https://root.cern,https://root.cern/doc/master/classTGeoManager-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoMaterial Member List. This is the complete list of members for TGeoMaterial, including all inherited members. AbstractMethod(const char *method) constTObject; AddConstProperty(const char *property, const char *ref)TGeoMaterial; AddProperty(const char *property, const char *ref)TGeoMaterial; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TGeoMaterialstatic; Class_Name()TGeoMaterialstatic; Class_Version()TGeoMaterialinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttFill::Copy(TAttFill &attfill) constTAttFill; Coulomb(Double_t z)TGeoMaterialstatic; DecayMaterial(Double_t time, Double_t precision=0.001)TGeoMaterialvirtual; DeclFileName()TGeoMaterialinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; EGeoMaterial enum nameTGeoMaterial; EGeoMaterialState enum nameTGeoMaterial; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; fATGeoMaterialprotected; Fatal(const char *method, const char *msgfmt,...) constTObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoMaterial-members.html:197,inherit,inherited,197,doc/master/classTGeoMaterial-members.html,https://root.cern,https://root.cern/doc/master/classTGeoMaterial-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoMedium Member List. This is the complete list of members for TGeoMedium, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TGeoMediumstatic; Class_Name()TGeoMediumstatic; Class_Version()TGeoMediuminlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &named) const overrideTNamedvirtual; DeclFileName()TGeoMediuminlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; EGeoMedium enum nameTGeoMedium; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; fIdTGeoMediumprotected; FillBuffer(char *&buffer)TNamedvirtual; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fMaterialTGeoMediumprotected; fNameTNamedprotected; fParamsTGeoMediumprotected; fTitleTNamedprotected; fUniqueIDTObjectpriva",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoMedium-members.html:193,inherit,inherited,193,doc/master/classTGeoMedium-members.html,https://root.cern,https://root.cern/doc/master/classTGeoMedium-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoPainter Member List. This is the complete list of members for TGeoPainter, including all inherited members. AbstractMethod(const char *method) constTObject; AddSize3D(Int_t numpoints, Int_t numsegs, Int_t numpolys) overrideTGeoPaintervirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AddTrack(Int_t id, Int_t pdgcode, TObject *part) overrideTGeoPaintervirtual; AddTrackPoint(Double_t *point, Double_t *box, Bool_t reset=kFALSE) overrideTGeoPaintervirtual; AppendPad(Option_t *option="""")TObjectvirtual; BombTranslation(const Double_t *tr, Double_t *bombtr) overrideTGeoPaintervirtual; Browse(TBrowser *b)TObjectvirtual; CheckBoundaryErrors(Int_t ntracks=1000000, Double_t radius=-1.) overrideTGeoPaintervirtual; CheckBoundaryReference(Int_t icheck=-1) overrideTGeoPaintervirtual; CheckedHash()TObjectinline; CheckEdit()TGeoPainter; CheckGeometry(Int_t nrays, Double_t startx, Double_t starty, Double_t startz) const overrideTGeoPaintervirtual; CheckGeometryFull(Bool_t checkoverlaps=kTRUE, Bool_t checkcrossings=kTRUE, Int_t nrays=10000, const Double_t *vertex=nullptr) overrideTGeoPaintervirtual; CheckOverlaps(const TGeoVolume *vol, Double_t ovlp=0.1, Option_t *option="""") const overrideTGeoPaintervirtual; CheckPoint(Double_t x=0, Double_t y=0, Double_t z=0, Option_t *option="""", Double_t safety=0.) overrideTGeoPaintervirtual; CheckShape(TGeoShape *shape, Int_t testNo, Int_t nsamples, Option_t *option) overrideTGeoPaintervirtual; Class()TVirtualGeoPainterstatic; Class_Name()TVirtualGeoPainterstatic; Class_Version()TVirtualGeoPainterinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; ClearVisibleVolumes()TGeoPainterprotected; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &object) constTObjectvirtual; CountNodes(TGeoVolume *vol, Int_t level) constTGeoPainter; CountVisibleN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPainter-members.html:195,inherit,inherited,195,doc/master/classTGeoPainter-members.html,https://root.cern,https://root.cern/doc/master/classTGeoPainter-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGeoVolume Member List. This is the complete list of members for TGeoVolume, including all inherited members. AbstractMethod(const char *method) constTObject; AddNode(TGeoVolume *vol, Int_t copy_no, TGeoMatrix *mat=nullptr, Option_t *option="""")TGeoVolumevirtual; AddNodeOffset(TGeoVolume *vol, Int_t copy_no, Double_t offset=0, Option_t *option="""")TGeoVolume; AddNodeOverlap(TGeoVolume *vol, Int_t copy_no, TGeoMatrix *mat=nullptr, Option_t *option="""")TGeoVolumevirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b) overrideTGeoVolumevirtual; Capacity() constTGeoVolume; cd(Int_t inode) constTGeoVolumevirtual; CheckedHash()TObjectinline; CheckGeometry(Int_t nrays=1, Double_t startx=0, Double_t starty=0, Double_t startz=0) constTGeoVolume; CheckOverlaps(Double_t ovlp=0.1, Option_t *option="""") constTGeoVolume; CheckShape(Int_t testNo, Int_t nsamples=10000, Option_t *option="""")TGeoVolume; CheckShapes()TGeoVolume; Class()TGeoVolumestatic; Class_Name()TGeoVolumestatic; Class_Version()TGeoVolumeinlinestatic; ClassName() constTObjectvirtual; CleanAll()TGeoVolume; Clear(Option_t *option="""") overrideTNamedvirtual; ClearNodes()TGeoVolumeinline; ClearShape()TGeoVolume; ClearThreadData() constTGeoVolumevirtual; Clone(const char *newname="""") const overrideTNamedvirtual; CloneNodesAndConnect(TGeoVolume *newmother) constTGeoVolume; CloneVolume() constTGeoVolumevirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Contains(const Double_t *point) constTGeoVolumeinline; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; CountNodes(Int_t nlevels=1000, Int_t option=0)TGeoVolume; CreateDummyMedium()TGeoVolumestatic; CreateThreadData(Int_t nthreads)TGeoVolumevirtual; DeclFileName()TGeoVolumeinlinestatic; Delete",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoVolume-members.html:193,inherit,inherited,193,doc/master/classTGeoVolume-members.html,https://root.cern,https://root.cern/doc/master/classTGeoVolume-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraph Member List. This is the complete list of members for TGraph, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF1 *f, Double_t c1=1)TGraphvirtual; AddPoint(Double_t x, Double_t y)TGraphinlinevirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; Allocate(Int_t newsize)TGraphprotectedvirtual; AllocateArrays(Int_t Narrays, Int_t arraySize)TGraphprotected; AppendPad(Option_t *option="""")TObjectvirtual; Apply(TF1 *f)TGraphvirtual; Browse(TBrowser *b) overrideTGraphvirtual; CheckedHash()TObjectinline; Chisquare(TF1 *f1, Option_t *option="""") constTGraphvirtual; Class()TGraphstatic; Class_Name()TGraphstatic; Class_Version()TGraphinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; CompareArg(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareRadius(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareX(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareY(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; ComputeRange(Double_t &xmin, Double_t &ymin, Double_t &xmax, Double_t &ymax) constTGraphvirtual; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; CopyAndRelease(Double_t **newarrays, Int_t ibegin, Int_t iend, Int_t obegin)TGraphprotectedvirtual; CopyPoints(Double_t **newarrays, Int_t ibegin, Int_t iend, Int_t obegin)TGraphprotectedvirtual; CtorAllocate()TGraphprotected; DeclFileName()TGraphinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraph-members.html:185,inherit,inherited,185,doc/master/classTGraph-members.html,https://root.cern,https://root.cern/doc/master/classTGraph-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraph2D Member List. This is the complete list of members for TGraph2D, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF2 *f, Double_t c1=1)TGraph2Dvirtual; AddPoint(Double_t x, Double_t y, Double_t z)TGraph2Dinlinevirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Apply(TF2 *f)TGraph2Dvirtual; Browse(TBrowser *) overrideTGraph2Dvirtual; Build(Int_t n)TGraph2Dprotected; CheckedHash()TObjectinline; Class()TGraph2Dstatic; Class_Name()TGraph2Dstatic; Class_Version()TGraph2Dinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTGraph2Dvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; CreateInterpolator(Bool_t oldInterp)TGraph2Dprivate; DeclFileName()TGraph2Dinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DirectoryAutoAdd(TDirectory *)TGraph2Dvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTGraph2Dvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option=""P0"") overrideTGraph2Dvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTGraph2Dprivate; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraph2D-members.html:189,inherit,inherited,189,doc/master/classTGraph2D-members.html,https://root.cern,https://root.cern/doc/master/classTGraph2D-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraph2DErrors Member List. This is the complete list of members for TGraph2DErrors, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF2 *f, Double_t c1=1)TGraph2Dvirtual; AddPoint(Double_t x, Double_t y, Double_t z)TGraph2Dinlinevirtual; AddPointError(Double_t x, Double_t y, Double_t z, Double_t ex=0., Double_t ey=0., Double_t ez=0.)TGraph2DErrorsvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Apply(TF2 *f)TGraph2Dvirtual; Browse(TBrowser *) overrideTGraph2Dvirtual; Build(Int_t n)TGraph2Dprotected; CheckedHash()TObjectinline; Class()TGraph2DErrorsstatic; Class_Name()TGraph2DErrorsstatic; Class_Version()TGraph2DErrorsinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTGraph2Dvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; CreateInterpolator(Bool_t oldInterp)TGraph2Dprivate; DeclFileName()TGraph2DErrorsinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DirectoryAutoAdd(TDirectory *)TGraph2Dvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTGraph2Dvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option=""P0"") overrideTGraph2Dvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTGr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraph2DErrors-members.html:201,inherit,inherited,201,doc/master/classTGraph2DErrors-members.html,https://root.cern,https://root.cern/doc/master/classTGraph2DErrors-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphAsymmErrors Member List. This is the complete list of members for TGraphAsymmErrors, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF1 *f, Double_t c1=1)TGraphvirtual; AddPoint(Double_t x, Double_t y)TGraphinlinevirtual; AddPointError(Double_t x, Double_t y, Double_t exl=0., Double_t exh=0., Double_t eyl=0., Double_t eyh=0.)TGraphAsymmErrorsvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; Allocate(Int_t size) overrideTGraphAsymmErrorsprotectedvirtual; AllocateArrays(Int_t Narrays, Int_t arraySize)TGraphprotected; AppendPad(Option_t *option="""")TObjectvirtual; Apply(TF1 *f) overrideTGraphAsymmErrorsvirtual; BayesDivide(const TH1 *pass, const TH1 *total, Option_t *opt="""")TGraphAsymmErrorsvirtual; Browse(TBrowser *b) overrideTGraphvirtual; CheckedHash()TObjectinline; Chisquare(TF1 *f1, Option_t *option="""") constTGraphvirtual; Class()TGraphAsymmErrorsstatic; Class_Name()TGraphAsymmErrorsstatic; Class_Version()TGraphAsymmErrorsinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; CompareArg(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareRadius(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareX(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareY(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; ComputeRange(Double_t &xmin, Double_t &ymin, Double_t &xmax, Double_t &ymax) const overrideTGraphAsymmErrorsvirtual; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; CopyAndRelease(Double_t **newarrays, Int_t ibegin, Int_t iend, Int_t obegin) overrideTGraphAsymmEr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphAsymmErrors-members.html:207,inherit,inherited,207,doc/master/classTGraphAsymmErrors-members.html,https://root.cern,https://root.cern/doc/master/classTGraphAsymmErrors-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphBentErrors Member List. This is the complete list of members for TGraphBentErrors, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF1 *f, Double_t c1=1)TGraphvirtual; AddPoint(Double_t x, Double_t y)TGraphinlinevirtual; AddPointError(Double_t x, Double_t y, Double_t exl, Double_t exh, Double_t eyl, Double_t eyh, Double_t exld=0, Double_t exhd=0, Double_t eyld=0, Double_t eyhd=0)TGraphBentErrorsvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; Allocate(Int_t size) overrideTGraphBentErrorsinlineprotectedvirtual; AllocateArrays(Int_t Narrays, Int_t arraySize)TGraphprotected; AppendPad(Option_t *option="""")TObjectvirtual; Apply(TF1 *f) overrideTGraphBentErrorsvirtual; Browse(TBrowser *b) overrideTGraphvirtual; CheckedHash()TObjectinline; Chisquare(TF1 *f1, Option_t *option="""") constTGraphvirtual; Class()TGraphBentErrorsstatic; Class_Name()TGraphBentErrorsstatic; Class_Version()TGraphBentErrorsinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; CompareArg(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareRadius(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareX(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareY(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; ComputeRange(Double_t &xmin, Double_t &ymin, Double_t &xmax, Double_t &ymax) const overrideTGraphBentErrorsvirtual; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; CopyAndRelease(Double_t **newarrays, Int_t ibegin, Int_t iend, Int_t obegin) overrideTGraphBentErrorsprotectedvirtual; CopyPoints(Doubl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphBentErrors-members.html:205,inherit,inherited,205,doc/master/classTGraphBentErrors-members.html,https://root.cern,https://root.cern/doc/master/classTGraphBentErrors-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphDelaunay Member List. This is the complete list of members for TGraphDelaunay, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TGraphDelaunaystatic; Class_Name()TGraphDelaunaystatic; Class_Version()TGraphDelaunayinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; ComputeZ(Double_t x, Double_t y)TGraphDelaunay; Copy(TObject &named) const overrideTNamedvirtual; CreateTrianglesDataStructure()TGraphDelaunayprotected; DeclFileName()TGraphDelaunayinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Enclose(Int_t T1, Int_t T2, Int_t T3, Int_t Ex) constTGraphDelaunayprotected; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; fAllTriTGraphDelaunayprotected; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fDistTGraphDelaunayprotected; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; fGraph2DTGraphDelaunayprotected; fHullPointsTGraphDelau",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphDelaunay-members.html:201,inherit,inherited,201,doc/master/classTGraphDelaunay-members.html,https://root.cern,https://root.cern/doc/master/classTGraphDelaunay-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphErrors Member List. This is the complete list of members for TGraphErrors, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF1 *f, Double_t c1=1)TGraphvirtual; AddPoint(Double_t x, Double_t y)TGraphinlinevirtual; AddPointError(Double_t x, Double_t y, Double_t ex=0., Double_t ey=0.)TGraphErrorsvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; Allocate(Int_t size) overrideTGraphErrorsinlineprotectedvirtual; AllocateArrays(Int_t Narrays, Int_t arraySize)TGraphprotected; AppendPad(Option_t *option="""")TObjectvirtual; Apply(TF1 *f) overrideTGraphErrorsvirtual; ApplyX(TF1 *f)TGraphErrorsvirtual; Browse(TBrowser *b) overrideTGraphvirtual; CalculateScanfFields(const char *fmt)TGraphErrorsstatic; CheckedHash()TObjectinline; Chisquare(TF1 *f1, Option_t *option="""") constTGraphvirtual; Class()TGraphErrorsstatic; Class_Name()TGraphErrorsstatic; Class_Version()TGraphErrorsinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; CompareArg(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareRadius(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareX(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareY(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; ComputeRange(Double_t &xmin, Double_t &ymin, Double_t &xmax, Double_t &ymax) const overrideTGraphErrorsvirtual; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; CopyAndRelease(Double_t **newarrays, Int_t ibegin, Int_t iend, Int_t obegin) overrideTGraphErrorsprotectedvirtual; CopyPoints(Double_t **arrays, Int_t ibegin, Int_t iend, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphErrors-members.html:197,inherit,inherited,197,doc/master/classTGraphErrors-members.html,https://root.cern,https://root.cern/doc/master/classTGraphErrors-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphMultiErrors Member List. This is the complete list of members for TGraphMultiErrors, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF1 *f, Double_t c1=1)TGraphvirtual; AddPoint(Double_t x, Double_t y)TGraphinlinevirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AddYError(Int_t np, const Double_t *eyL=nullptr, const Double_t *eyH=nullptr)TGraphMultiErrorsvirtual; Allocate(Int_t size) overrideTGraphMultiErrorsprotectedvirtual; AllocateArrays(Int_t Narrays, Int_t arraySize)TGraphprotected; AppendPad(Option_t *option="""")TObjectvirtual; Apply(TF1 *f) overrideTGraphMultiErrorsvirtual; BayesDivide(const TH1 *pass, const TH1 *total, Option_t *opt="""")TGraphMultiErrorsvirtual; Browse(TBrowser *b) overrideTGraphvirtual; CalcYErrorsSum() constTGraphMultiErrorsprotected; CheckedHash()TObjectinline; Chisquare(TF1 *f1, Option_t *option="""") constTGraphvirtual; Class()TGraphMultiErrorsstatic; Class_Name()TGraphMultiErrorsstatic; Class_Version()TGraphMultiErrorsinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; CompareArg(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareRadius(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareX(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareY(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; ComputeRange(Double_t &xmin, Double_t &ymin, Double_t &xmax, Double_t &ymax) const overrideTGraphMultiErrorsvirtual; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; CopyAndRelease(Double_t **newarrays, Int_t ibegin, Int_t iend, Int_t obegin)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphMultiErrors-members.html:207,inherit,inherited,207,doc/master/classTGraphMultiErrors-members.html,https://root.cern,https://root.cern/doc/master/classTGraphMultiErrors-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphPainter Member List. This is the complete list of members for TGraphPainter, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TGraphPainterstatic; Class_Name()TGraphPainterstatic; Class_Version()TGraphPainterinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; ComputeLogs(Int_t npoints, Int_t opt)TGraphPainter; Copy(TObject &object) constTObjectvirtual; DeclFileName()TGraphPainterinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DistancetoPrimitiveHelper(TGraph *theGraph, Int_t px, Int_t py) overrideTGraphPaintervirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawPanelHelper(TGraph *theGraph) overrideTGraphPaintervirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; ExecuteEventHelper(TGraph *theGraph, Int_t event, Int_t px, Int_t py) overrideTGraphPaintervirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgMaxPointsPerLineTGraphPainterprotectedstatic; fgObjectSta",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphPainter-members.html:199,inherit,inherited,199,doc/master/classTGraphPainter-members.html,https://root.cern,https://root.cern/doc/master/classTGraphPainter-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphPolar Member List. This is the complete list of members for TGraphPolar, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF1 *f, Double_t c1=1)TGraphvirtual; AddPoint(Double_t x, Double_t y)TGraphinlinevirtual; AddPointError(Double_t x, Double_t y, Double_t ex=0., Double_t ey=0.)TGraphErrorsvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; Allocate(Int_t size) overrideTGraphErrorsinlineprotectedvirtual; AllocateArrays(Int_t Narrays, Int_t arraySize)TGraphprotected; AppendPad(Option_t *option="""")TObjectvirtual; Apply(TF1 *f) overrideTGraphErrorsvirtual; ApplyX(TF1 *f)TGraphErrorsvirtual; Browse(TBrowser *b) overrideTGraphvirtual; CalculateScanfFields(const char *fmt)TGraphErrorsstatic; CheckedHash()TObjectinline; Chisquare(TF1 *f1, Option_t *option="""") constTGraphvirtual; Class()TGraphPolarstatic; Class_Name()TGraphPolarstatic; Class_Version()TGraphPolarinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; CompareArg(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareRadius(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareX(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareY(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; ComputeRange(Double_t &xmin, Double_t &ymin, Double_t &xmax, Double_t &ymax) const overrideTGraphErrorsvirtual; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; CopyAndRelease(Double_t **newarrays, Int_t ibegin, Int_t iend, Int_t obegin) overrideTGraphErrorsprotectedvirtual; CopyPoints(Double_t **arrays, Int_t ibegin, Int_t iend, Int_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphPolar-members.html:195,inherit,inherited,195,doc/master/classTGraphPolar-members.html,https://root.cern,https://root.cern/doc/master/classTGraphPolar-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraphQQ Member List. This is the complete list of members for TGraphQQ, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF1 *f, Double_t c1=1)TGraphvirtual; AddPoint(Double_t x, Double_t y)TGraphinlinevirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; Allocate(Int_t newsize)TGraphprotectedvirtual; AllocateArrays(Int_t Narrays, Int_t arraySize)TGraphprotected; AppendPad(Option_t *option="""")TObjectvirtual; Apply(TF1 *f)TGraphvirtual; Browse(TBrowser *b) overrideTGraphvirtual; CheckedHash()TObjectinline; Chisquare(TF1 *f1, Option_t *option="""") constTGraphvirtual; Class()TGraphQQstatic; Class_Name()TGraphQQstatic; Class_Version()TGraphQQinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; CompareArg(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareRadius(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareX(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareY(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; ComputeRange(Double_t &xmin, Double_t &ymin, Double_t &xmax, Double_t &ymax) constTGraphvirtual; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; CopyAndRelease(Double_t **newarrays, Int_t ibegin, Int_t iend, Int_t obegin)TGraphprotectedvirtual; CopyPoints(Double_t **newarrays, Int_t ibegin, Int_t iend, Int_t obegin)TGraphprotectedvirtual; CtorAllocate()TGraphprotected; DeclFileName()TGraphQQinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphQQ-members.html:189,inherit,inherited,189,doc/master/classTGraphQQ-members.html,https://root.cern,https://root.cern/doc/master/classTGraphQQ-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TH1 Member List. This is the complete list of members for TH1, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF1 *h1, Double_t c1=1, Option_t *option="""")TH1virtual; Add(const TH1 *h1, Double_t c1=1)TH1virtual; Add(const TH1 *h, const TH1 *h2, Double_t c1=1, Double_t c2=1)TH1virtual; AddBinContent(Int_t bin)TH1virtual; AddBinContent(Int_t bin, Double_t w)TH1virtual; AddDirectory(Bool_t add=kTRUE)TH1static; AddDirectoryStatus()TH1static; AddToTObjectTable(TObject *)TObjectprivatestatic; AndersonDarlingTest(const TH1 *h2, Option_t *option="""") constTH1virtual; AndersonDarlingTest(const TH1 *h2, Double_t &advalue) constTH1virtual; AppendPad(Option_t *option="""")TObjectvirtual; AutoP2FindLimits(Double_t min, Double_t max)TH1protectedvirtual; AutoP2GetBins(Int_t n)TH1inlineprotectedstatic; AutoP2GetPower2(Double_t x, Bool_t next=kTRUE)TH1inlineprotectedstatic; AxisChoice(Option_t *axis) constTH1protected; Browse(TBrowser *b) overrideTH1virtual; BufferEmpty(Int_t action=0)TH1virtual; BufferFill(Double_t x, Double_t w)TH1protectedvirtual; Build()TH1private; CanExtendAllAxes() constTH1virtual; CheckAxisLimits(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckBinLabels(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckBinLimits(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckConsistency(const TH1 *h1, const TH1 *h2)TH1protectedstatic; CheckConsistentSubAxes(const TAxis *a1, Int_t firstBin1, Int_t lastBin1, const TAxis *a2, Int_t firstBin2=0, Int_t lastBin2=0)TH1protectedstatic; CheckedHash()TObjectinline; CheckEqualAxes(const TAxis *a1, const TAxis *a2)TH1protectedstatic; Chi2Test(const TH1 *h2, Option_t *option=""UU"", Double_t *res=nullptr) constTH1virtual; Chi2TestX(const TH1 *h2, Double_t &chi2, Int_t &ndf, Int_t &igood, Option_t *option=""UU"", Double_t *res=nullptr) constTH1virtual; Chisquare(TF1 *f1, Option_t *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1-members.html:179,inherit,inherited,179,doc/master/classTH1-members.html,https://root.cern,https://root.cern/doc/master/classTH1-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TH1F Member List. This is the complete list of members for TH1F, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF1 *h1, Double_t c1=1, Option_t *option="""")TH1virtual; Add(const TH1 *h1, Double_t c1=1)TH1virtual; Add(const TH1 *h, const TH1 *h2, Double_t c1=1, Double_t c2=1)TH1virtual; AddAt(Float_t c, Int_t i)TArrayF; AddBinContent(Int_t bin) overrideTH1Finlinevirtual; AddBinContent(Int_t bin, Double_t w) overrideTH1Finlinevirtual; AddDirectory(Bool_t add=kTRUE)TH1static; AddDirectoryStatus()TH1static; AddToTObjectTable(TObject *)TObjectprivatestatic; Adopt(Int_t n, Float_t *array)TArrayF; AndersonDarlingTest(const TH1 *h2, Option_t *option="""") constTH1virtual; AndersonDarlingTest(const TH1 *h2, Double_t &advalue) constTH1virtual; AppendPad(Option_t *option="""")TObjectvirtual; At(Int_t i) constTArrayFinline; AutoP2FindLimits(Double_t min, Double_t max)TH1protectedvirtual; AutoP2GetBins(Int_t n)TH1inlineprotectedstatic; AutoP2GetPower2(Double_t x, Bool_t next=kTRUE)TH1inlineprotectedstatic; AxisChoice(Option_t *axis) constTH1protected; BoundsOk(const char *where, Int_t at) constTArrayinlineprotected; Browse(TBrowser *b) overrideTH1virtual; BufferEmpty(Int_t action=0)TH1virtual; BufferFill(Double_t x, Double_t w)TH1protectedvirtual; Build()TH1private; CanExtendAllAxes() constTH1virtual; CheckAxisLimits(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckBinLabels(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckBinLimits(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckConsistency(const TH1 *h1, const TH1 *h2)TH1protectedstatic; CheckConsistentSubAxes(const TAxis *a1, Int_t firstBin1, Int_t lastBin1, const TAxis *a2, Int_t firstBin2=0, Int_t lastBin2=0)TH1protectedstatic; CheckedHash()TObjectinline; CheckEqualAxes(const TAxis *a1, const TAxis *a2)TH1protectedstatic; Chi2Test(const TH1 *h2, Option_t *option=",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1F-members.html:181,inherit,inherited,181,doc/master/classTH1F-members.html,https://root.cern,https://root.cern/doc/master/classTH1F-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TH1I Member List. This is the complete list of members for TH1I, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF1 *h1, Double_t c1=1, Option_t *option="""")TH1virtual; Add(const TH1 *h1, Double_t c1=1)TH1virtual; Add(const TH1 *h, const TH1 *h2, Double_t c1=1, Double_t c2=1)TH1virtual; AddAt(Int_t c, Int_t i)TArrayI; AddBinContent(Int_t bin) overrideTH1Ivirtual; AddBinContent(Int_t bin, Double_t w) overrideTH1Ivirtual; AddDirectory(Bool_t add=kTRUE)TH1static; AddDirectoryStatus()TH1static; AddToTObjectTable(TObject *)TObjectprivatestatic; Adopt(Int_t n, Int_t *array)TArrayI; AndersonDarlingTest(const TH1 *h2, Option_t *option="""") constTH1virtual; AndersonDarlingTest(const TH1 *h2, Double_t &advalue) constTH1virtual; AppendPad(Option_t *option="""")TObjectvirtual; At(Int_t i) constTArrayIinline; AutoP2FindLimits(Double_t min, Double_t max)TH1protectedvirtual; AutoP2GetBins(Int_t n)TH1inlineprotectedstatic; AutoP2GetPower2(Double_t x, Bool_t next=kTRUE)TH1inlineprotectedstatic; AxisChoice(Option_t *axis) constTH1protected; BoundsOk(const char *where, Int_t at) constTArrayinlineprotected; Browse(TBrowser *b) overrideTH1virtual; BufferEmpty(Int_t action=0)TH1virtual; BufferFill(Double_t x, Double_t w)TH1protectedvirtual; Build()TH1private; CanExtendAllAxes() constTH1virtual; CheckAxisLimits(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckBinLabels(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckBinLimits(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckConsistency(const TH1 *h1, const TH1 *h2)TH1protectedstatic; CheckConsistentSubAxes(const TAxis *a1, Int_t firstBin1, Int_t lastBin1, const TAxis *a2, Int_t firstBin2=0, Int_t lastBin2=0)TH1protectedstatic; CheckedHash()TObjectinline; CheckEqualAxes(const TAxis *a1, const TAxis *a2)TH1protectedstatic; Chi2Test(const TH1 *h2, Option_t *option=""UU"", Double_t *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1I-members.html:181,inherit,inherited,181,doc/master/classTH1I-members.html,https://root.cern,https://root.cern/doc/master/classTH1I-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TH2 Member List. This is the complete list of members for TH2, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF1 *h1, Double_t c1=1, Option_t *option="""")TH1virtual; Add(const TH1 *h1, Double_t c1=1)TH1virtual; Add(const TH1 *h, const TH1 *h2, Double_t c1=1, Double_t c2=1)TH1virtual; AddBinContent(Int_t bin) overrideTH2virtual; AddBinContent(Int_t bin, Double_t w) overrideTH2virtual; AddBinContent(Int_t binx, Int_t biny)TH2virtual; AddBinContent(Int_t binx, Int_t biny, Double_t w)TH2virtual; AddDirectory(Bool_t add=kTRUE)TH1static; AddDirectoryStatus()TH1static; AddToTObjectTable(TObject *)TObjectprivatestatic; AndersonDarlingTest(const TH1 *h2, Option_t *option="""") constTH1virtual; AndersonDarlingTest(const TH1 *h2, Double_t &advalue) constTH1virtual; AppendPad(Option_t *option="""")TObjectvirtual; AutoP2FindLimits(Double_t min, Double_t max)TH1protectedvirtual; AutoP2GetBins(Int_t n)TH1inlineprotectedstatic; AutoP2GetPower2(Double_t x, Bool_t next=kTRUE)TH1inlineprotectedstatic; AxisChoice(Option_t *axis) constTH1protected; Browse(TBrowser *b) overrideTH1virtual; BufferEmpty(Int_t action=0) overrideTH2virtual; BufferFill(Double_t x, Double_t y, Double_t w)TH2protectedvirtual; BufferFill(Double_t, Double_t) overrideTH2inlineprotectedvirtual; Build()TH1private; CanExtendAllAxes() constTH1virtual; CheckAxisLimits(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckBinLabels(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckBinLimits(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckConsistency(const TH1 *h1, const TH1 *h2)TH1protectedstatic; CheckConsistentSubAxes(const TAxis *a1, Int_t firstBin1, Int_t lastBin1, const TAxis *a2, Int_t firstBin2=0, Int_t lastBin2=0)TH1protectedstatic; CheckedHash()TObjectinline; CheckEqualAxes(const TAxis *a1, const TAxis *a2)TH1protectedstatic; Chi2Test(const TH1 *h2, Option_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2-members.html:179,inherit,inherited,179,doc/master/classTH2-members.html,https://root.cern,https://root.cern/doc/master/classTH2-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TH2F Member List. This is the complete list of members for TH2F, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF1 *h1, Double_t c1=1, Option_t *option="""")TH1virtual; Add(const TH1 *h1, Double_t c1=1)TH1virtual; Add(const TH1 *h, const TH1 *h2, Double_t c1=1, Double_t c2=1)TH1virtual; AddAt(Float_t c, Int_t i)TArrayF; AddBinContent(Int_t bin) overrideTH2Finlinevirtual; AddBinContent(Int_t bin, Double_t w) overrideTH2Finlinevirtual; AddBinContent(Int_t binx, Int_t biny) overrideTH2Finlinevirtual; AddBinContent(Int_t binx, Int_t biny, Double_t w) overrideTH2Finlinevirtual; AddDirectory(Bool_t add=kTRUE)TH1static; AddDirectoryStatus()TH1static; AddToTObjectTable(TObject *)TObjectprivatestatic; Adopt(Int_t n, Float_t *array)TArrayF; AndersonDarlingTest(const TH1 *h2, Option_t *option="""") constTH1virtual; AndersonDarlingTest(const TH1 *h2, Double_t &advalue) constTH1virtual; AppendPad(Option_t *option="""")TObjectvirtual; At(Int_t i) constTArrayFinline; AutoP2FindLimits(Double_t min, Double_t max)TH1protectedvirtual; AutoP2GetBins(Int_t n)TH1inlineprotectedstatic; AutoP2GetPower2(Double_t x, Bool_t next=kTRUE)TH1inlineprotectedstatic; AxisChoice(Option_t *axis) constTH1protected; BoundsOk(const char *where, Int_t at) constTArrayinlineprotected; Browse(TBrowser *b) overrideTH1virtual; BufferEmpty(Int_t action=0) overrideTH2virtual; BufferFill(Double_t x, Double_t y, Double_t w)TH2protectedvirtual; BufferFill(Double_t, Double_t) overrideTH2inlineprotectedvirtual; Build()TH1private; CanExtendAllAxes() constTH1virtual; CheckAxisLimits(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckBinLabels(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckBinLimits(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckConsistency(const TH1 *h1, const TH1 *h2)TH1protectedstatic; CheckConsistentSubAxes(const TAxis *a1, Int_t firstBin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2F-members.html:181,inherit,inherited,181,doc/master/classTH2F-members.html,https://root.cern,https://root.cern/doc/master/classTH2F-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TH3 Member List. This is the complete list of members for TH3, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF1 *h1, Double_t c1=1, Option_t *option="""")TH1virtual; Add(const TH1 *h1, Double_t c1=1)TH1virtual; Add(const TH1 *h, const TH1 *h2, Double_t c1=1, Double_t c2=1)TH1virtual; AddBinContent(Int_t bin) overrideTH3virtual; AddBinContent(Int_t bin, Double_t w) overrideTH3virtual; AddBinContent(Int_t binx, Int_t biny, Int_t binz)TH3virtual; AddBinContent(Int_t binx, Int_t biny, Int_t binz, Double_t w)TH3virtual; AddDirectory(Bool_t add=kTRUE)TH1static; AddDirectoryStatus()TH1static; AddToTObjectTable(TObject *)TObjectprivatestatic; AndersonDarlingTest(const TH1 *h2, Option_t *option="""") constTH1virtual; AndersonDarlingTest(const TH1 *h2, Double_t &advalue) constTH1virtual; AppendPad(Option_t *option="""")TObjectvirtual; AutoP2FindLimits(Double_t min, Double_t max)TH1protectedvirtual; AutoP2GetBins(Int_t n)TH1inlineprotectedstatic; AutoP2GetPower2(Double_t x, Bool_t next=kTRUE)TH1inlineprotectedstatic; AxisChoice(Option_t *axis) constTH1protected; Browse(TBrowser *b) overrideTH1virtual; BufferEmpty(Int_t action=0) overrideTH3virtual; BufferFill(Double_t x, Double_t y, Double_t z, Double_t w)TH3protectedvirtual; BufferFill(Double_t, Double_t) overrideTH3inlineprotectedvirtual; BufferFill(Double_t, Double_t, Double_t)TH3inlineprotectedvirtual; Build()TH1private; CanExtendAllAxes() constTH1virtual; CheckAxisLimits(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckBinLabels(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckBinLimits(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckConsistency(const TH1 *h1, const TH1 *h2)TH1protectedstatic; CheckConsistentSubAxes(const TAxis *a1, Int_t firstBin1, Int_t lastBin1, const TAxis *a2, Int_t firstBin2=0, Int_t lastBin2=0)TH1protectedstatic; CheckedHash()TObjectinli",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3-members.html:179,inherit,inherited,179,doc/master/classTH3-members.html,https://root.cern,https://root.cern/doc/master/classTH3-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TH3D Member List. This is the complete list of members for TH3D, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF1 *h1, Double_t c1=1, Option_t *option="""")TH1virtual; Add(const TH1 *h1, Double_t c1=1)TH1virtual; Add(const TH1 *h, const TH1 *h2, Double_t c1=1, Double_t c2=1)TH1virtual; AddAt(Double_t c, Int_t i)TArrayD; AddBinContent(Int_t bin) overrideTH3Dinlinevirtual; AddBinContent(Int_t bin, Double_t w) overrideTH3Dinlinevirtual; AddBinContent(Int_t binx, Int_t biny, Int_t binz) overrideTH3Dinlinevirtual; AddBinContent(Int_t binx, Int_t biny, Int_t binz, Double_t w) overrideTH3Dinlinevirtual; AddDirectory(Bool_t add=kTRUE)TH1static; AddDirectoryStatus()TH1static; AddToTObjectTable(TObject *)TObjectprivatestatic; Adopt(Int_t n, Double_t *array)TArrayD; AndersonDarlingTest(const TH1 *h2, Option_t *option="""") constTH1virtual; AndersonDarlingTest(const TH1 *h2, Double_t &advalue) constTH1virtual; AppendPad(Option_t *option="""")TObjectvirtual; At(Int_t i) constTArrayDinline; AutoP2FindLimits(Double_t min, Double_t max)TH1protectedvirtual; AutoP2GetBins(Int_t n)TH1inlineprotectedstatic; AutoP2GetPower2(Double_t x, Bool_t next=kTRUE)TH1inlineprotectedstatic; AxisChoice(Option_t *axis) constTH1protected; BoundsOk(const char *where, Int_t at) constTArrayinlineprotected; Browse(TBrowser *b) overrideTH1virtual; BufferEmpty(Int_t action=0) overrideTH3virtual; BufferFill(Double_t x, Double_t y, Double_t z, Double_t w)TH3protectedvirtual; BufferFill(Double_t, Double_t) overrideTH3inlineprotectedvirtual; BufferFill(Double_t, Double_t, Double_t)TH3inlineprotectedvirtual; Build()TH1private; CanExtendAllAxes() constTH1virtual; CheckAxisLimits(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckBinLabels(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckBinLimits(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckConsistenc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3D-members.html:181,inherit,inherited,181,doc/master/classTH3D-members.html,https://root.cern,https://root.cern/doc/master/classTH3D-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. THStack Member List. This is the complete list of members for THStack, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TH1 *h, Option_t *option="""")THStackvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; begin() constTHStack; Browse(TBrowser *b) overrideTHStackvirtual; BuildAndPaint(Option_t *chopt, Bool_t paint, Bool_t rebuild_stack=kFALSE)THStackprotected; BuildPrimitives(Option_t *chopt="""", Bool_t rebuild_stack=kFALSE)THStackinline; BuildStack()THStackprotected; CheckedHash()TObjectinline; Class()THStackstatic; Class_Name()THStackstatic; Class_Version()THStackinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &named) const overrideTNamedvirtual; DeclFileName()THStackinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py) overrideTHStackvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *chopt="""") overrideTHStackvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; end() constTHStackinline; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; fHistogramTHStackp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHStack-members.html:187,inherit,inherited,187,doc/master/classTHStack-members.html,https://root.cern,https://root.cern/doc/master/classTHStack-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. THistPainter Member List. This is the complete list of members for THistPainter, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()THistPainterstatic; Class_Name()THistPainterstatic; Class_Version()THistPainterinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; ComputeRenderingRegions(TAxis *pAxis, Int_t nPixels, bool isLog)THistPaintervirtual; Copy(TObject &object) constTObjectvirtual; DeclFileName()THistPainterinlinestatic; DefineColorLevels(Int_t ndivz)THistPaintervirtual; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py) overrideTHistPaintervirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawPanel() overrideTHistPaintervirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTHistPaintervirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fCurrentF3THistPainterprotected; fCutsTHistPainterprotected; fCutsOptTHistPainterprotected; fFunctionsTHistPainterprotected; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; fgPainterTV",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHistPainter-members.html:197,inherit,inherited,197,doc/master/classTHistPainter-members.html,https://root.cern,https://root.cern/doc/master/classTHistPainter-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. THn Member List. This is the complete list of members for THn, including all inherited members. AbstractMethod(const char *method) constTObject; Add(const THnBase *h, Double_t c=1.)THnBase; Add(const TH1 *hist, Double_t c=1.)THnBase; AddBinContent(const Int_t *idx, Double_t v=1.)THninline; AddBinContent(Long64_t bin, Double_t v=1.) overrideTHninlinevirtual; AddBinError2(Long64_t bin, Double_t e2) overrideTHninlinevirtual; AddInternal(const THnBase *h, Double_t c, Bool_t rebinned)THnBaseprotected; AddToTObjectTable(TObject *)TObjectprivatestatic; AllocCoordBuf() constTHnprotected; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b) overrideTHnBasevirtual; CalculateErrors(Bool_t calc=kTRUE)THnBaseinline; CheckConsistency(const THnBase *h, const char *tag) constTHnBaseprotected; CheckedHash()TObjectinline; Class()THnstatic; Class_Name()THnstatic; Class_Version()THninlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; CloneEmpty(const char *name, const char *title, const TObjArray *axes, Bool_t keepTargetAxis) constTHnBaseprotected; Compare(const TObject *obj) const overrideTNamedvirtual; ComputeIntegral()THnBase; Copy(TObject &named) const overrideTNamedvirtual; CreateHist(const char *name, const char *title, const TObjArray *axes, Bool_t keepTargetAxis) constTHnBaseprotected; CreateHn(const char *name, const char *title, const TH1 *h1)THninlinestatic; CreateHn(const char *name, const char *title, const THnBase *hn)THninlinestatic; CreateHnAny(const char *name, const char *title, const TH1 *h1, Bool_t sparse, Int_t chunkSize=1024 *16)THnBaseprotectedstatic; CreateHnAny(const char *name, const char *title, const THnBase *hn, Bool_t sparse, Int_t chunkSize=1024 *16)THnBaseprotectedstatic; CreateIter(Bool_t respectAxisRange) const overrideTHnvirtual; DeclFile",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHn-members.html:179,inherit,inherited,179,doc/master/classTHn-members.html,https://root.cern,https://root.cern/doc/master/classTHn-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. THnSparse Member List. This is the complete list of members for THnSparse, including all inherited members. AbstractMethod(const char *method) constTObject; Add(const THnBase *h, Double_t c=1.)THnBase; Add(const TH1 *hist, Double_t c=1.)THnBase; AddBinContent(const Int_t *idx, Double_t v=1.)THnSparseinline; AddBinContent(Long64_t bin, Double_t v=1.) overrideTHnSparsevirtual; AddBinError2(Long64_t bin, Double_t e2) overrideTHnSparsevirtual; AddChunk()THnSparseprotected; AddInternal(const THnBase *h, Double_t c, Bool_t rebinned)THnBaseprotected; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b) overrideTHnBasevirtual; CalculateErrors(Bool_t calc=kTRUE)THnBaseinline; CheckConsistency(const THnBase *h, const char *tag) constTHnBaseprotected; CheckedHash()TObjectinline; Class()THnSparsestatic; Class_Name()THnSparsestatic; Class_Version()THnSparseinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; CloneEmpty(const char *name, const char *title, const TObjArray *axes, Bool_t keepTargetAxis) constTHnBaseprotected; Compare(const TObject *obj) const overrideTNamedvirtual; ComputeIntegral()THnBase; Copy(TObject &named) const overrideTNamedvirtual; CreateHist(const char *name, const char *title, const TObjArray *axes, Bool_t keepTargetAxis) constTHnBaseprotected; CreateHnAny(const char *name, const char *title, const TH1 *h1, Bool_t sparse, Int_t chunkSize=1024 *16)THnBaseprotectedstatic; CreateHnAny(const char *name, const char *title, const THnBase *hn, Bool_t sparse, Int_t chunkSize=1024 *16)THnBaseprotectedstatic; CreateIter(Bool_t respectAxisRange) const overrideTHnSparsevirtual; CreateSparse(const char *name, const char *title, const TH1 *h1, Int_t chunkSize=1024 *16)THnSparseinlinestatic; CreateSparse(con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHnSparse-members.html:191,inherit,inherited,191,doc/master/classTHnSparse-members.html,https://root.cern,https://root.cern/doc/master/classTHnSparse-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. THttpServer Member List. This is the complete list of members for THttpServer, including all inherited members. AbstractMethod(const char *method) constTObject; AddLocation(const char *prefix, const char *path)THttpServer; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; BuildWSEntryPage()THttpServerprotected; CheckedHash()TObjectinline; Class()THttpServerstatic; Class_Name()THttpServerstatic; Class_Version()THttpServerinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &named) const overrideTNamedvirtual; CreateEngine(const char *engine)THttpServer; CreateItem(const char *fullname, const char *title)THttpServer; CreateServerThread()THttpServer; DeclFileName()THttpServerinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; ExecuteHttp(std::shared_ptr< THttpCallArg > arg)THttpServer; ExecuteWS(std::shared_ptr< THttpCallArg > &arg, Bool_t external_thrd=kFALSE, Bool_t wait_process=kFALSE)THttpServer; fArgsTHttpServerprotected; Fatal(const char *method,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHttpServer-members.html:195,inherit,inherited,195,doc/master/classTHttpServer-members.html,https://root.cern,https://root.cern/doc/master/classTHttpServer-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TInterpreter Member List. This is the complete list of members for TInterpreter, including all inherited members. AbstractMethod(const char *method) constTObject; AddAvailableIndentifiers(TSeqCollection &)=0TInterpreterpure virtual; AddIncludePath(const char *path)=0TInterpreterpure virtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; AutoLoad(const char *classname, Bool_t knowDictNotLoaded=kFALSE)=0TInterpreterpure virtual; AutoLoad(const std::type_info &typeinfo, Bool_t knowDictNotLoaded=kFALSE)=0TInterpreterpure virtual; AutoLoadCallBack_t typedefTInterpreter; AutoParse(const char *cls)=0TInterpreterpure virtual; BaseClassInfo_ClassInfo(BaseClassInfo_t *) const =0TInterpreterpure virtual; BaseClassInfo_Delete(BaseClassInfo_t *) constTInterpreterinlinevirtual; BaseClassInfo_Factory(ClassInfo_t *) constTInterpreterinlinevirtual; BaseClassInfo_Factory(ClassInfo_t *, ClassInfo_t *) constTInterpreterinlinevirtual; BaseClassInfo_FullName(BaseClassInfo_t *) constTInterpreterinlinevirtual; BaseClassInfo_Name(BaseClassInfo_t *) constTInterpreterinlinevirtual; BaseClassInfo_Next(BaseClassInfo_t *) constTInterpreterinlinevirtual; BaseClassInfo_Next(BaseClassInfo_t *, int) constTInterpreterinlinevirtual; BaseClassInfo_Offset(BaseClassInfo_t *, void *=nullptr, bool=true) constTInterpreterinlinevirtual; BaseClassInfo_Property(BaseClassInfo_t *) constTInterpreterinlinevirtual; BaseClassInfo_Tagnum(BaseClassInfo_t *) constTInterpreterinlinevirtual; BaseClassInfo_TmpltName(BaseClassInfo_t *) constTInterpreterinlinevirtual; Browse(TBrowser *b)TObjectvirtual; Calc(const char *line, EErrorCode *error=nullptr)=0TInterpreterpure virtual; CallFunc_Delete(CallFunc_t *) constTInterpreterinlinevirtual; CallFunc_Exec(CallFunc_t *, void *) constTInterpreterinlinevirtual; CallFunc_Exec(CallFunc_t *, void *, TInterpreterValue &) constTInterpr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTInterpreter-members.html:197,inherit,inherited,197,doc/master/classTInterpreter-members.html,https://root.cern,https://root.cern/doc/master/classTInterpreter-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TKey Member List. This is the complete list of members for TKey, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b) overrideTKeyvirtual; Build(TDirectory *motherDir, const char *classname, Long64_t filepos)TKeyprotected; CheckedHash()TObjectinline; Class()TKeystatic; Class_Name()TKeystatic; Class_Version()TKeyinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &named) const overrideTNamedvirtual; Create(Int_t nbytes, TFile *f=nullptr)TKeyprotectedvirtual; DeclFileName()TKeyinlinestatic; Delete(Option_t *option="""") overrideTKeyvirtual; DeleteBuffer()TKeyvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTKeyprivate; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fBufferTKeyprotected; fBufferRefTKeyprotected; fClassNameTKeyprotected; fCycleTKeyprotected; fDatimeTKeyprotected; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FillBuffer(char *&buffer) overrideTKeyvirtual; FindObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTKey-members.html:181,inherit,inherited,181,doc/master/classTKey-members.html,https://root.cern,https://root.cern/doc/master/classTKey-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TLatex Member List. This is the complete list of members for TLatex, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; Anal1(const TextSpec_t &spec, const Char_t *t, Int_t length)TLatexprotected; Analyse(Double_t x, Double_t y, const TextSpec_t &spec, const Char_t *t, Int_t length)TLatexprotected; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; CheckLatexSyntax(TString &text)TLatexprotected; Class()TLatexstatic; Class_Name()TLatexstatic; Class_Version()TLatexinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &text) const overrideTLatexvirtual; TText::TAttText::Copy(TAttText &atttext) constTAttText; TAttLine::Copy(TAttLine &attline) constTAttLine; DeclFileName()TLatexinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTTextvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawCircle(Double_t x1, Double_t y1, Double_t r, const TextSpec_t &spec)TLatexprotected; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawLatex(Double_t x, Double_t y, const char *text)TLatex; DrawLatexNDC(Double_t x, Double_t y, const char *text)TLatex; DrawLine(Double_t x1, Double_t y1, Double_t x2, Double_t y2, const TextSpec_t &spec)TLatexprotected; DrawParenthesis(Double_t x1, Double_t y1, Double_t r1, Double_t r2, Double_t phimin, Double_t phimax, const TextSpec_t &spec)TLatexprotected; DrawPoly",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLatex-members.html:185,inherit,inherited,185,doc/master/classTLatex-members.html,https://root.cern,https://root.cern/doc/master/classTLatex-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TLeaf Member List. This is the complete list of members for TLeaf, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b) overrideTLeafvirtual; CanGenerateOffsetArray()TLeafinlinevirtual; CheckedHash()TObjectinline; Class()TLeafstatic; Class_Name()TLeafstatic; Class_Version()TLeafinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &named) const overrideTNamedvirtual; Counts_t typedefTLeafprotected; DeclFileName()TLeafinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DeserializeType enum nameTLeaf; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTLeaf; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Export(TClonesArray *, Int_t)TLeafinlinevirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fBranchTLeafprotected; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FillBasket(TBuffer &b)TLeafvirtual; FillBuffer(char *&buffer)TNamedvirtual; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeaf-members.html:183,inherit,inherited,183,doc/master/classTLeaf-members.html,https://root.cern,https://root.cern/doc/master/classTLeaf-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TLegend Member List. This is the complete list of members for TLegend, including all inherited members. AbstractMethod(const char *method) constTObject; AddEntry(const TObject *obj, const char *label="""", Option_t *option=""lpf"")TLegend; AddEntry(const char *name, const char *label="""", Option_t *option=""lpf"")TLegend; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TLegendstatic; Class_Name()TLegendstatic; Class_Version()TLegendinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTLegendvirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; ConvertNDCtoPad()TPavevirtual; Copy(TObject &obj) const overrideTLegendvirtual; TPave::TAttLine::Copy(TAttLine &attline) constTAttLine; TPave::TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttText::Copy(TAttText &atttext) constTAttText; DeclFileName()TLegendinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DeleteEntry()TLegendvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTPavevirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTLegendvirtual; DrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2)TBoxvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawPave(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize=4, Option_t *option=""br"")TPavevirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; EditEntryAttFill()TLegendvirtual; EditEntryAttLine()TLegendvirtual; EditEntryAttMarker()TLegendvirtual; EditEntryAttText()TLegendvirtual; Error(const ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLegend-members.html:187,inherit,inherited,187,doc/master/classTLegend-members.html,https://root.cern,https://root.cern/doc/master/classTLegend-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TLegendEntry Member List. This is the complete list of members for TLegendEntry, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TLegendEntrystatic; Class_Name()TLegendEntrystatic; Class_Version()TLegendEntryinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &obj) const overrideTLegendEntryvirtual; TAttText::Copy(TAttText &atttext) constTAttText; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; DeclFileName()TLegendEntryinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fFillColorTAttFillprotected; fFillStyleTAttFillprotected; fgDtorOnlyTObjectprivatestatic; fg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLegendEntry-members.html:197,inherit,inherited,197,doc/master/classTLegendEntry-members.html,https://root.cern,https://root.cern/doc/master/classTLegendEntry-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TLine Member List. This is the complete list of members for TLine, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TLinestatic; Class_Name()TLinestatic; Class_Version()TLineinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &line) const overrideTLinevirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; DeclFileName()TLineinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTLinevirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawLine(Double_t x1, Double_t y1, Double_t x2, Double_t y2)TLinevirtual; DrawLineNDC(Double_t x1, Double_t y1, Double_t x2, Double_t y2)TLinevirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTLinevirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FindObject(const char *name) constTObjectvirtual; FindObject(con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLine-members.html:183,inherit,inherited,183,doc/master/classTLine-members.html,https://root.cern,https://root.cern/doc/master/classTLine-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TList Member List. This is the complete list of members for TList, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TObject *obj) overrideTListinlinevirtual; Add(TObject *obj, Option_t *opt)TListinlinevirtual; AddAfter(const TObject *after, TObject *obj) overrideTListvirtual; AddAfter(TObjLink *after, TObject *obj)TListvirtual; AddAll(const TCollection *col)TCollectionvirtual; AddAt(TObject *obj, Int_t idx) overrideTListvirtual; AddBefore(const TObject *before, TObject *obj) overrideTListvirtual; AddBefore(TObjLink *before, TObject *obj)TListvirtual; AddFirst(TObject *obj) overrideTListvirtual; AddFirst(TObject *obj, Option_t *opt)TListvirtual; AddLast(TObject *obj) overrideTListvirtual; AddLast(TObject *obj, Option_t *opt)TListvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AddVector(TObject *obj1,...)TCollection; After(const TObject *obj) const overrideTListvirtual; AppendPad(Option_t *option="""")TObjectvirtual; AssertClass(TClass *cl) constTCollection; At(Int_t idx) const overrideTListvirtual; Before(const TObject *obj) const overrideTListvirtual; begin() constTCollectioninline; Browse(TBrowser *b) overrideTCollectionvirtual; Capacity() constTCollectioninline; Changed()TSeqCollectioninlineprotectedvirtual; CheckedHash()TObjectinline; Class()TListstatic; Class_Name()TListstatic; Class_Version()TListinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTListvirtual; Clone(const char *newname="""") const overrideTCollectionvirtual; Compare(const TObject *obj) const overrideTCollectionvirtual; Contains(const char *name) constTCollectioninline; Contains(const TObject *obj) constTCollectioninline; Copy(TObject &object) constTObjectvirtual; DeclFileName()TListinlinestatic; Delete(Option_t *option="""") overrideTListvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTList-members.html:183,inherit,inherited,183,doc/master/classTList-members.html,https://root.cern,https://root.cern/doc/master/classTList-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMVA::DataLoader Member List. This is the complete list of members for TMVA::DataLoader, including all inherited members. AbstractMethod(const char *method) constTObject; AddBackgroundTestEvent(const std::vector< Double_t > &event, Double_t weight=1.0)TMVA::DataLoader; AddBackgroundTrainingEvent(const std::vector< Double_t > &event, Double_t weight=1.0)TMVA::DataLoader; AddBackgroundTree(TTree *background, Double_t weight=1.0, Types::ETreeType treetype=Types::kMaxTreeType)TMVA::DataLoader; AddBackgroundTree(TString datFileB, Double_t weight=1.0, Types::ETreeType treetype=Types::kMaxTreeType)TMVA::DataLoader; AddBackgroundTree(TTree *background, Double_t weight, const TString &treetype)TMVA::DataLoader; AddCut(const TString &cut, const TString &className="""")TMVA::DataLoader; AddCut(const TCut &cut, const TString &className="""")TMVA::DataLoader; AddDataSet(DataSetInfo &)TMVA::DataLoader; AddDataSet(const TString &)TMVA::DataLoader; AddEvent(const TString &className, Types::ETreeType tt, const std::vector< Double_t > &event, Double_t weight)TMVA::DataLoader; AddOptionsXMLTo(void *parent) constTMVA::Configurable; AddPreDefVal(const T &)TMVA::Configurable; AddPreDefVal(const TString &optname, const T &)TMVA::Configurable; AddRegressionTarget(const TString &expression, const TString &title="""", const TString &unit="""", Double_t min=0, Double_t max=0)TMVA::DataLoaderinline; AddRegressionTree(TTree *tree, Double_t weight=1.0, Types::ETreeType treetype=Types::kMaxTreeType)TMVA::DataLoaderinline; AddSignalTestEvent(const std::vector< Double_t > &event, Double_t weight=1.0)TMVA::DataLoader; AddSignalTrainingEvent(const std::vector< Double_t > &event, Double_t weight=1.0)TMVA::DataLoader; AddSignalTree(TTree *signal, Double_t weight=1.0, Types::ETreeType treetype=Types::kMaxTreeType)TMVA::DataLoader; AddSignalTree(TString datFileS, Double_t weight=1.0, Types::ETreeType treetype=Typ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DataLoader-members.html:205,inherit,inherited,205,doc/master/classTMVA_1_1DataLoader-members.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DataLoader-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMVA::Factory Member List. This is the complete list of members for TMVA::Factory, including all inherited members. AbstractMethod(const char *method) constTObject; AddOptionsXMLTo(void *parent) constTMVA::Configurable; AddPreDefVal(const T &)TMVA::Configurable; AddPreDefVal(const TString &optname, const T &)TMVA::Configurable; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; AssignOpt(const TString &name, T &valAssign) constTMVA::Configurableprivate; BookMethod(DataLoader *loader, TString theMethodName, TString methodTitle, TString theOption="""")TMVA::Factory; BookMethod(DataLoader *loader, Types::EMVA theMethod, TString methodTitle, TString theOption="""")TMVA::Factory; BookMethod(DataLoader *, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString)TMVA::Factoryinline; BookMethodWeightfile(DataLoader *dataloader, TMVA::Types::EMVA methodType, const TString &weightfile)TMVA::Factoryprivate; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; CheckForUnusedOptions() constTMVA::Configurable; Class()TMVA::Factorystatic; Class_Name()TMVA::Factorystatic; Class_Version()TMVA::Factoryinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Configurable(const TString &theOption="""")TMVA::Configurable; Copy(TObject &named) const overrideTNamedvirtual; CrossValidationTMVA::Factoryfriend; DeclareOptionRef(T &ref, const TString &name, const TString &desc="""")TMVA::Configurable; DeclareOptionRef(T *&ref, Int_t size, const TString &name, const TString &desc="""")TMVA::Configurable; DeclareOptionRef(T &ref, const TString &name, const TString &desc)TMVA::Configurable; DeclareOptionRef(T *&ref, Int_t size, const TString &name, const TString &desc)TMVA::Configurable; Decl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Factory-members.html:199,inherit,inherited,199,doc/master/classTMVA_1_1Factory-members.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Factory-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMarker Member List. This is the complete list of members for TMarker, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TMarkerstatic; Class_Name()TMarkerstatic; Class_Version()TMarkerinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &marker) const overrideTMarkervirtual; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; DeclFileName()TMarkerinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DisplayMarkerLineWidths()TMarkerstatic; DisplayMarkerTypes()TMarkerstatic; DistancetoPrimitive(Int_t px, Int_t py) overrideTMarkervirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTMarkervirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawMarker(Double_t x, Double_t y)TMarkervirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTMarkervirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fMarkerColorTAttMarkerprotected; fMarkerSizeTAttMar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMarker-members.html:187,inherit,inherited,187,doc/master/classTMarker-members.html,https://root.cern,https://root.cern/doc/master/classTMarker-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMathText Member List. This is the complete list of members for TMathText, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TMathTextstatic; Class_Name()TMathTextstatic; Class_Version()TMathTextinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &text) const overrideTMathTextvirtual; TText::TAttText::Copy(TAttText &atttext) constTAttText; TAttFill::Copy(TAttFill &attfill) constTAttFill; DeclFileName()TMathTextinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py) overrideTTextvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawMathText(Double_t x, Double_t y, const char *text)TMathText; DrawText(Double_t x, Double_t y, const char *text)TTextvirtual; DrawText(Double_t x, Double_t y, const wchar_t *text)TTextvirtual; DrawTextNDC(Double_t x, Double_t y, const char *text)TTextvirtual; DrawTextNDC(Double_t x, Double_t y, const wchar_t *text)TTextvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTTextvirtual; Fatal(const char *method, const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMathText-members.html:191,inherit,inherited,191,doc/master/classTMathText-members.html,https://root.cern,https://root.cern/doc/master/classTMathText-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMinuit Member List. This is the complete list of members for TMinuit, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; BuildArrays(Int_t maxpar=15)TMinuitvirtual; CheckedHash()TObjectinline; Class()TMinuitstatic; Class_Name()TMinuitstatic; Class_Version()TMinuitinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTMinuitvirtual; Command(const char *command)TMinuitvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Contour(Int_t npoints=10, Int_t pa1=0, Int_t pa2=1)TMinuitvirtual; Copy(TObject &named) const overrideTNamedvirtual; DeclFileName()TMinuitinlinestatic; DefineParameter(Int_t parNo, const char *name, Double_t initVal, Double_t initErr, Double_t lowerLimit, Double_t upperLimit)TMinuitvirtual; Delete(Option_t *option="""")TObjectvirtual; DeleteArrays()TMinuitvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Eval(Int_t npar, Double_t *grad, Double_t &fval, Double_t *par, Int_t flag)TMinuitvirtual; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; fAlimTMinuit; fAminTMinuit; fApsiTMinuit; Fatal(const char *method, const char *m",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMinuit-members.html:187,inherit,inherited,187,doc/master/classTMinuit-members.html,https://root.cern,https://root.cern/doc/master/classTMinuit-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TMultiGraph Member List. This is the complete list of members for TMultiGraph, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TGraph *graph, Option_t *chopt="""")TMultiGraphvirtual; Add(TMultiGraph *multigraph, Option_t *chopt="""")TMultiGraphvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; begin() constTMultiGraph; Browse(TBrowser *b) overrideTMultiGraphvirtual; CheckedHash()TObjectinline; Class()TMultiGraphstatic; Class_Name()TMultiGraphstatic; Class_Version()TMultiGraphinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &named) const overrideTNamedvirtual; DeclFileName()TMultiGraphinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py) overrideTMultiGraphvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *chopt="""") overrideTMultiGraphvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; end() constTMultiGraphinline; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fFunctionsTMultiGraphprotected; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; fGraphsTMultiGraphprotected; fHistogramTMultiGraphprotected; Fil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMultiGraph-members.html:195,inherit,inherited,195,doc/master/classTMultiGraph-members.html,https://root.cern,https://root.cern/doc/master/classTMultiGraph-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TNamed Member List. This is the complete list of members for TNamed, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TNamedstatic; Class_Name()TNamedstatic; Class_Version()TNamedinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &named) const overrideTNamedvirtual; DeclFileName()TNamedinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FillBuffer(char *&buffer)TNamedvirtual; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fNameTNamedprotected; fTitleTNamedprotected; fUniqueIDTObjectprivate; GetDrawOption() constTObjectvirtual; GetDtorOnly()TObjectstatic; GetIconName() constTObjectvirtual; GetName() const overrideTNamedinli",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNamed-members.html:185,inherit,inherited,185,doc/master/classTNamed-members.html,https://root.cern,https://root.cern/doc/master/classTNamed-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TNtuple Member List. This is the complete list of members for TNtuple, including all inherited members. AbstractMethod(const char *method) constTObject; AddAllocationCount(UInt_t count)TTreeinline; AddBranchToCache(const char *bname, bool subbranches=false)TTreevirtual; AddBranchToCache(TBranch *branch, bool subbranches=false)TTreevirtual; AddClone(TTree *)TTree; AddFriend(const char *treename, const char *filename="""")TTreevirtual; AddFriend(const char *treename, TFile *file)TTreevirtual; AddFriend(TTree *tree, const char *alias="""", bool warn=false)TTreevirtual; AddTotBytes(Int_t tot)TTreeinlinevirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AddZipBytes(Int_t zip)TTreeinlinevirtual; AppendPad(Option_t *option="""")TObjectvirtual; AutoSave(Option_t *option="""")TTreevirtual; Branch(const char *name, T *obj, Int_t bufsize=32000, Int_t splitlevel=99)TTreeinline; Branch(const char *name, T **addobj, Int_t bufsize=32000, Int_t splitlevel=99)TTreeinline; Branch(TCollection *list, Int_t bufsize=32000, Int_t splitlevel=99, const char *name="""")TTreevirtual; Branch(TList *list, Int_t bufsize=32000, Int_t splitlevel=99)TTreevirtual; Branch(const char *folder, Int_t bufsize=32000, Int_t splitlevel=99)TTreevirtual; Branch(const char *name, void *address, const char *leaflist, Int_t bufsize=32000)TTreevirtual; Branch(const char *name, char *address, const char *leaflist, Int_t bufsize=32000)TTreeinline; Branch(const char *name, Longptr_t address, const char *leaflist, Int_t bufsize=32000)TTreeinline; Branch(const char *name, int address, const char *leaflist, Int_t bufsize=32000)TTreeinline; Branch(const char *name, const char *classname, void *addobj, Int_t bufsize=32000, Int_t splitlevel=99)TTreevirtual; Branch(const char *name, const char *classname, T *obj, Int_t bufsize=32000, Int_t splitlevel=99)TTreeinline; Branch(const char *name, const char *classname, T **addobj, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNtuple-members.html:187,inherit,inherited,187,doc/master/classTNtuple-members.html,https://root.cern,https://root.cern/doc/master/classTNtuple-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TObjArray Member List. This is the complete list of members for TObjArray, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TObject *obj) overrideTObjArrayinlinevirtual; AddAfter(const TObject *after, TObject *obj) overrideTObjArrayvirtual; AddAll(const TCollection *col)TCollectionvirtual; AddAt(TObject *obj, Int_t idx) overrideTObjArrayvirtual; AddAtAndExpand(TObject *obj, Int_t idx)TObjArrayvirtual; AddAtFree(TObject *obj)TObjArrayvirtual; AddBefore(const TObject *before, TObject *obj) overrideTObjArrayvirtual; AddFirst(TObject *obj) overrideTObjArrayvirtual; AddLast(TObject *obj) overrideTObjArrayvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AddVector(TObject *obj1,...)TCollection; After(const TObject *obj) const overrideTObjArrayvirtual; AppendPad(Option_t *option="""")TObjectvirtual; AssertClass(TClass *cl) constTCollection; At(Int_t idx) const overrideTObjArrayinlinevirtual; Before(const TObject *obj) const overrideTObjArrayvirtual; begin() constTCollectioninline; BinarySearch(TObject *obj, Int_t upto=kMaxInt)TObjArrayvirtual; BoundsOk(const char *where, Int_t at) constTObjArrayinlineprotected; Browse(TBrowser *b) overrideTCollectionvirtual; Capacity() constTCollectioninline; Changed()TSeqCollectioninlineprotectedvirtual; CheckedHash()TObjectinline; Class()TObjArraystatic; Class_Name()TObjArraystatic; Class_Version()TObjArrayinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTObjArrayvirtual; Clone(const char *newname="""") const overrideTCollectionvirtual; Compare(const TObject *obj) const overrideTCollectionvirtual; Compress()TObjArrayvirtual; Contains(const char *name) constTCollectioninline; Contains(const TObject *obj) constTCollectioninline; Copy(TObject &object) constTObjectvirtual; DeclFileName()TObjArrayinlinestatic; Delete(Option_t *option="""") overrideTObjArrayvirtual; Distan",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTObjArray-members.html:191,inherit,inherited,191,doc/master/classTObjArray-members.html,https://root.cern,https://root.cern/doc/master/classTObjArray-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TObject Member List. This is the complete list of members for TObject, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TObjectstatic; Class_Name()TObjectstatic; Class_Version()TObjectinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &object) constTObjectvirtual; DeclFileName()TObjectinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fUniqueIDTObjectprivate; GetDrawOption() constTObjectvirtual; GetDtorOnly()TObjectstatic; GetIconName() constTObjectvirtual; GetName() constTObjectvirtual; GetObjectInfo(Int_t px, Int_t py) constTObjectvirtual; GetObjectStat()TObjectstatic; GetOption() constTObjectinli",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTObject-members.html:187,inherit,inherited,187,doc/master/classTObject-members.html,https://root.cern,https://root.cern/doc/master/classTObject-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPad Member List. This is the complete list of members for TPad, including all inherited members. AbsCoordinates(Bool_t set) overrideTPadinlinevirtual; AbsPixeltoX(Int_t px) overrideTPadinlinevirtual; AbsPixeltoXY(Int_t xpixel, Int_t ypixel, Double_t &x, Double_t &y)TPadvirtual; AbsPixeltoY(Int_t py) overrideTPadinlinevirtual; AbstractMethod(const char *method) constTObject; Add(TObject *obj, Option_t *opt="""", Bool_t modified=kTRUE) overrideTPadvirtual; AddExec(const char *name, const char *command) overrideTPadvirtual; AddFirst(TObject *obj, Option_t *opt="""", Bool_t modified=kTRUE) overrideTPadvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; AreAllSignalsBlocked()TQObjectstatic; AreSignalsBlocked() constTQObjectinline; AutoExec()TPadvirtual; BlockAllSignals(Bool_t b)TQObjectstatic; BlockSignals(Bool_t b)TQObjectinline; Browse(TBrowser *b) overrideTPadvirtual; BuildLegend(Double_t x1=0.3, Double_t y1=0.21, Double_t x2=0.3, Double_t y2=0.21, const char *title="""", Option_t *option="""") overrideTPadvirtual; cd(Int_t subpadnumber=0) overrideTPadvirtual; ChangedBy(const char *method)TQObjectinlinevirtual; CheckConnectArgs(TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot)TQObjectprotectedstatic; CheckedHash()TObjectinline; Class()TPadstatic; Class_Name()TPadstatic; Class_Version()TPadinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTPadvirtual; Clip(Float_t *x, Float_t *y, Float_t xclipl, Float_t yclipb, Float_t xclipr, Float_t yclipt)TPadvirtual; Clip(Double_t *x, Double_t *y, Double_t xclipl, Double_t yclipb, Double_t xclipr, Double_t yclipt) overrideTPadvirtual; ClippingCode(Double_t x, Double_t y, Double_t xcl1, Double_t ycl1, Double_t xcl2, Double_t ycl2)TPadvirtual; ClipPolygon(Int_t n, Double_t *x, Double_t *y, Int_t nn, Double_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPad-members.html:181,inherit,inherited,181,doc/master/classTPad-members.html,https://root.cern,https://root.cern/doc/master/classTPad-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPaveLabel Member List. This is the complete list of members for TPaveLabel, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TPaveLabelstatic; Class_Name()TPaveLabelstatic; Class_Version()TPaveLabelinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; ConvertNDCtoPad()TPavevirtual; Copy(TObject &pavelabel) const overrideTPaveLabelvirtual; TPave::TAttLine::Copy(TAttLine &attline) constTAttLine; TPave::TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttText::Copy(TAttText &atttext) constTAttText; DeclFileName()TPaveLabelinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTPavevirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTPaveLabelvirtual; DrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2)TBoxvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawPave(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize=4, Option_t *option=""br"")TPavevirtual; DrawPaveLabel(Double_t x1, Double_t y1, Double_t x2, Double_t y2, const char *label, Option_t *option="""")TPaveLabelvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMetho",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPaveLabel-members.html:193,inherit,inherited,193,doc/master/classTPaveLabel-members.html,https://root.cern,https://root.cern/doc/master/classTPaveLabel-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPaveText Member List. This is the complete list of members for TPaveText, including all inherited members. AbstractMethod(const char *method) constTObject; AddBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2)TPaveTextvirtual; AddLine(Double_t x1=0, Double_t y1=0, Double_t x2=0, Double_t y2=0)TPaveTextvirtual; AddText(Double_t x1, Double_t y1, const char *label)TPaveTextvirtual; AddText(const char *label)TPaveTextvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TPaveTextstatic; Class_Name()TPaveTextstatic; Class_Version()TPaveTextinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTPaveTextvirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; ConvertNDCtoPad()TPavevirtual; TPave::Copy(TObject &pave) const overrideTPavevirtual; TPave::TBox::TAttLine::Copy(TAttLine &attline) constTAttLine; TPave::TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttText::Copy(TAttText &atttext) constTAttText; DeclFileName()TPaveTextinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DeleteText()TPaveTextvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTPavevirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTPaveTextvirtual; DrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2)TBoxvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawFile(const char *filename, Option_t *option="""")TPaveTextvirtual; DrawPave(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize=4, Option_t *option=""br"")TPavevirtual; Dump() cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPaveText-members.html:191,inherit,inherited,191,doc/master/classTPaveText-members.html,https://root.cern,https://root.cern/doc/master/classTPaveText-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPavesText Member List. This is the complete list of members for TPavesText, including all inherited members. AbstractMethod(const char *method) constTObject; AddBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2)TPaveTextvirtual; AddLine(Double_t x1=0, Double_t y1=0, Double_t x2=0, Double_t y2=0)TPaveTextvirtual; AddText(Double_t x1, Double_t y1, const char *label)TPaveTextvirtual; AddText(const char *label)TPaveTextvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TPavesTextstatic; Class_Name()TPavesTextstatic; Class_Version()TPavesTextinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTPaveTextvirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; ConvertNDCtoPad()TPavevirtual; TPave::Copy(TObject &pave) const overrideTPavevirtual; TPave::TBox::TAttLine::Copy(TAttLine &attline) constTAttLine; TPave::TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttText::Copy(TAttText &atttext) constTAttText; DeclFileName()TPavesTextinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DeleteText()TPaveTextvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTPavevirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTPavesTextvirtual; DrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2)TBoxvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawFile(const char *filename, Option_t *option="""")TPaveTextvirtual; DrawPave(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize=4, Option_t *option=""br"")TPavevirtual; Dump",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPavesText-members.html:193,inherit,inherited,193,doc/master/classTPavesText-members.html,https://root.cern,https://root.cern/doc/master/classTPavesText-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPolyLine Member List. This is the complete list of members for TPolyLine, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TPolyLinestatic; Class_Name()TPolyLinestatic; Class_Version()TPolyLineinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &polyline) const overrideTPolyLinevirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; DeclFileName()TPolyLineinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTPolyLinevirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTPolyLinevirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawPolyLine(Int_t n, Double_t *x, Double_t *y, Option_t *option="""")TPolyLinevirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTPolyLinevirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fFillColorTAttFillprotected; fFillStyleTAttFillprotected; fgDtorOnlyTObjectprivatestatic; fgObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPolyLine-members.html:191,inherit,inherited,191,doc/master/classTPolyLine-members.html,https://root.cern,https://root.cern/doc/master/classTPolyLine-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TProfile Member List. This is the complete list of members for TProfile, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF1 *h1, Double_t c1=1, Option_t *option="""") overrideTProfilevirtual; Add(const TH1 *h1, Double_t c1=1) overrideTProfilevirtual; Add(const TH1 *h1, const TH1 *h2, Double_t c1=1, Double_t c2=1) overrideTProfilevirtual; AddAt(Double_t c, Int_t i)TArrayD; AddBinContent(Int_t bin) overrideTH1Dinlinevirtual; AddBinContent(Int_t bin, Double_t w) overrideTH1Dinlinevirtual; AddDirectory(Bool_t add=kTRUE)TH1static; AddDirectoryStatus()TH1static; AddToTObjectTable(TObject *)TObjectprivatestatic; Adopt(Int_t n, Double_t *array)TArrayD; AndersonDarlingTest(const TH1 *h2, Option_t *option="""") constTH1virtual; AndersonDarlingTest(const TH1 *h2, Double_t &advalue) constTH1virtual; AppendPad(Option_t *option="""")TObjectvirtual; Approximate(Bool_t approx=kTRUE)TProfilestatic; At(Int_t i) constTArrayDinline; AutoP2FindLimits(Double_t min, Double_t max)TH1protectedvirtual; AutoP2GetBins(Int_t n)TH1inlineprotectedstatic; AutoP2GetPower2(Double_t x, Bool_t next=kTRUE)TH1inlineprotectedstatic; AxisChoice(Option_t *axis) constTH1protected; BoundsOk(const char *where, Int_t at) constTArrayinlineprotected; Browse(TBrowser *b) overrideTH1virtual; BufferEmpty(Int_t action=0) overrideTProfilevirtual; BufferFill(Double_t, Double_t) overrideTProfileinlineprotectedvirtual; BufferFill(Double_t x, Double_t y, Double_t w)TProfileprotectedvirtual; Build()TH1private; BuildOptions(Double_t ymin, Double_t ymax, Option_t *option)TProfile; CanExtendAllAxes() constTH1virtual; CheckAxisLimits(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckBinLabels(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckBinLimits(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckConsistency(const TH1 *h1, const TH1 *h2)TH1protectedstatic; CheckConsi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile-members.html:189,inherit,inherited,189,doc/master/classTProfile-members.html,https://root.cern,https://root.cern/doc/master/classTProfile-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TProfile2D Member List. This is the complete list of members for TProfile2D, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF1 *h1, Double_t c1=1, Option_t *option="""") overrideTProfile2Dvirtual; Add(const TH1 *h1, Double_t c1=1) overrideTProfile2Dvirtual; Add(const TH1 *h1, const TH1 *h2, Double_t c1=1, Double_t c2=1) overrideTProfile2Dvirtual; AddAt(Double_t c, Int_t i)TArrayD; AddBinContent(Int_t bin) overrideTH2Dinlinevirtual; AddBinContent(Int_t bin, Double_t w) overrideTH2Dinlinevirtual; AddBinContent(Int_t binx, Int_t biny) overrideTH2Dinlinevirtual; AddBinContent(Int_t binx, Int_t biny, Double_t w) overrideTH2Dinlinevirtual; AddDirectory(Bool_t add=kTRUE)TH1static; AddDirectoryStatus()TH1static; AddToTObjectTable(TObject *)TObjectprivatestatic; Adopt(Int_t n, Double_t *array)TArrayD; AndersonDarlingTest(const TH1 *h2, Option_t *option="""") constTH1virtual; AndersonDarlingTest(const TH1 *h2, Double_t &advalue) constTH1virtual; AppendPad(Option_t *option="""")TObjectvirtual; Approximate(Bool_t approx=kTRUE)TProfile2Dstatic; At(Int_t i) constTArrayDinline; AutoP2FindLimits(Double_t min, Double_t max)TH1protectedvirtual; AutoP2GetBins(Int_t n)TH1inlineprotectedstatic; AutoP2GetPower2(Double_t x, Bool_t next=kTRUE)TH1inlineprotectedstatic; AxisChoice(Option_t *axis) constTH1protected; BoundsOk(const char *where, Int_t at) constTArrayinlineprotected; Browse(TBrowser *b) overrideTH1virtual; BufferEmpty(Int_t action=0) overrideTProfile2Dvirtual; BufferFill(Double_t, Double_t) overrideTProfile2Dinlineprotectedvirtual; BufferFill(Double_t, Double_t, Double_t) overrideTProfile2Dinlineprotectedvirtual; BufferFill(Double_t x, Double_t y, Double_t z, Double_t w)TProfile2Dprotectedvirtual; Build()TH1private; BuildOptions(Double_t zmin, Double_t zmax, Option_t *option)TProfile2D; CanExtendAllAxes() constTH1virtual; CheckAxisLimits(const TA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile2D-members.html:193,inherit,inherited,193,doc/master/classTProfile2D-members.html,https://root.cern,https://root.cern/doc/master/classTProfile2D-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TProfile3D Member List. This is the complete list of members for TProfile3D, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF1 *h1, Double_t c1=1, Option_t *option="""") overrideTProfile3Dvirtual; Add(const TH1 *h1, Double_t c1=1) overrideTProfile3Dvirtual; Add(const TH1 *h1, const TH1 *h2, Double_t c1=1, Double_t c2=1) overrideTProfile3Dvirtual; AddAt(Double_t c, Int_t i)TArrayD; AddBinContent(Int_t bin) overrideTH3Dinlinevirtual; AddBinContent(Int_t bin, Double_t w) overrideTH3Dinlinevirtual; AddBinContent(Int_t binx, Int_t biny, Int_t binz) overrideTH3Dinlinevirtual; AddBinContent(Int_t binx, Int_t biny, Int_t binz, Double_t w) overrideTH3Dinlinevirtual; AddDirectory(Bool_t add=kTRUE)TH1static; AddDirectoryStatus()TH1static; AddToTObjectTable(TObject *)TObjectprivatestatic; Adopt(Int_t n, Double_t *array)TArrayD; AndersonDarlingTest(const TH1 *h2, Option_t *option="""") constTH1virtual; AndersonDarlingTest(const TH1 *h2, Double_t &advalue) constTH1virtual; AppendPad(Option_t *option="""")TObjectvirtual; Approximate(Bool_t approx=kTRUE)TProfile3Dstatic; At(Int_t i) constTArrayDinline; AutoP2FindLimits(Double_t min, Double_t max)TH1protectedvirtual; AutoP2GetBins(Int_t n)TH1inlineprotectedstatic; AutoP2GetPower2(Double_t x, Bool_t next=kTRUE)TH1inlineprotectedstatic; AxisChoice(Option_t *axis) constTH1protected; BoundsOk(const char *where, Int_t at) constTArrayinlineprotected; Browse(TBrowser *b) overrideTH1virtual; BufferEmpty(Int_t action=0) overrideTProfile3Dvirtual; BufferFill(Double_t, Double_t) overrideTProfile3Dinlineprotectedvirtual; BufferFill(Double_t, Double_t, Double_t) overrideTProfile3Dinlineprotectedvirtual; BufferFill(Double_t, Double_t, Double_t, Double_t) overrideTProfile3Dinlineprotectedvirtual; BufferFill(Double_t x, Double_t y, Double_t z, Double_t t, Double_t w)TProfile3Dprotectedvirtual; Build()TH1private; Bui",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile3D-members.html:193,inherit,inherited,193,doc/master/classTProfile3D-members.html,https://root.cern,https://root.cern/doc/master/classTProfile3D-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TPython Member List. This is the complete list of members for TPython, including all inherited members. Eval(const char *expr) R__DEPRECATED(6TPythonstatic; Exec(const char *cmd, std::any *result=nullptr, std::string const &resultName=""_anyresult"")TPythonstatic; ExecScript(const char *name, int argc=0, const char **argv=nullptr)TPythonstatic; Import(const char *name)TPythonstatic; Initialize()TPythonprivatestatic; LoadMacro(const char *name)TPythonstatic. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:18 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPython-members.html:187,inherit,inherited,187,doc/master/classTPython-members.html,https://root.cern,https://root.cern/doc/master/classTPython-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TQObject Member List. This is the complete list of members for TQObject, including all inherited members. AreAllSignalsBlocked()TQObjectstatic; AreSignalsBlocked() constTQObjectinline; BlockAllSignals(Bool_t b)TQObjectstatic; BlockSignals(Bool_t b)TQObjectinline; ChangedBy(const char *method)TQObjectinlinevirtual; CheckConnectArgs(TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot)TQObjectprotectedstatic; Class()TQObjectstatic; Class_Name()TQObjectstatic; Class_Version()TQObjectinlinestatic; CollectClassSignalLists(TList &list, TClass *cls)TQObject; CompressName(const char *method_name)TQObjectprotectedstatic; Connect(const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObject; Connect(TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObjectstatic; Connect(const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObjectstatic; Connected(const char *)TQObjectinlinevirtual; ConnectToClass(TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot)TQObjectprotectedstatic; ConnectToClass(const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot)TQObjectprotectedstatic; DeclFileName()TQObjectinlinestatic; Destroyed()TQObjectinlinevirtual; Disconnect(const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr)TQObject; Disconnect(TQObject *sender, const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr)TQObjectstatic; Disconnect(const char *class_name, const char *signal, void *receiver=nullptr, const char *slot=nullptr)TQObjectstatic; Disconnected(const char *)TQObjectinlinevirtual; Emit(const char *signal, const T &arg)TQObjectinline; Emit(const char *signal)TQObjectinline; E",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQObject-members.html:189,inherit,inherited,189,doc/master/classTQObject-members.html,https://root.cern,https://root.cern/doc/master/classTQObject-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TROOT Member List. This is the complete list of members for TROOT, including all inherited members. ::ROOT::Internal::TROOTAllocatorTROOTfriend; AbstractMethod(const char *method) constTObject; Add(TObject *obj, Bool_t replace=kFALSE)TDirectoryinlinevirtual; AddClass(TClass *cl)TROOT; AddClassGenerator(TClassGenerator *gen)TROOT; AddDirectory(Bool_t add=kTRUE)TDirectorystatic; AddDirectoryStatus()TDirectorystatic; AddExtraInterpreterArgs(const std::vector< std::string > &args)TROOTstatic; AddToTObjectTable(TObject *)TObjectprivatestatic; AListOfEnums_t typedefTROOTprotected; Append(TObject *obj, Bool_t replace=kFALSE) overrideTROOTvirtual; AppendKey(TKey *)TDirectoryinlinevirtual; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b) overrideTROOTvirtual; Build(TFile *motherFile=nullptr, TDirectory *motherDir=nullptr)TDirectoryinlinevirtual; BuildDirectory(TFile *motherFile, TDirectory *motherDir)TDirectoryprotected; cd()TDirectoryvirtual; cd(const char *path)TDirectoryvirtual; Cd(const char *path)TDirectorystatic; cd1(const char *path)TDirectoryprotected; Cd1(const char *path)TDirectoryprotectedstatic; CheckedHash()TObjectinline; Class()TROOTstatic; Class_Name()TROOTstatic; Class_Version()TROOTinlinestatic; ClassName() constTObjectvirtual; ClassSaved(TClass *cl)TROOT; CleanTargets()TDirectoryprotected; Clear(Option_t *option="""") overrideTDirectoryvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; CloneObject(const TObject *obj, Bool_t autoadd=kTRUE)TDirectoryvirtual; Close(Option_t *option="""")TDirectoryvirtual; CloseFiles()TROOT; Compare(const TObject *obj) const overrideTNamedvirtual; ConvertVersionCode2Int(Int_t code)TROOTstatic; ConvertVersionInt2Code(Int_t v)TROOTstatic; Copy(TObject &) const overrideTDirectoryinlinevirtual; CurrentDirectory()TDirectorystatic; DeclFileName()TROOTinlinestatic; DecodeNameCycle(const char *namecycle, ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTROOT-members.html:183,inherit,inherited,183,doc/master/classTROOT-members.html,https://root.cern,https://root.cern/doc/master/classTROOT-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TRandom Member List. This is the complete list of members for TRandom, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Binomial(Int_t ntot, Double_t prob)TRandomvirtual; BreitWigner(Double_t mean=0, Double_t gamma=1)TRandomvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Circle(Double_t &x, Double_t &y, Double_t r)TRandomvirtual; Class()TRandomstatic; Class_Name()TRandomstatic; Class_Version()TRandominlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &named) const overrideTNamedvirtual; DeclFileName()TRandominlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Exp(Double_t tau)TRandomvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FillBuffer(char *&buffer)TNamedvirtual; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectv",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRandom-members.html:187,inherit,inherited,187,doc/master/classTRandom-members.html,https://root.cern,https://root.cern/doc/master/classTRandom-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TRandom3 Member List. This is the complete list of members for TRandom3, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Binomial(Int_t ntot, Double_t prob)TRandomvirtual; BreitWigner(Double_t mean=0, Double_t gamma=1)TRandomvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Circle(Double_t &x, Double_t &y, Double_t r)TRandomvirtual; Class()TRandom3static; Class_Name()TRandom3static; Class_Version()TRandom3inlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &named) const overrideTNamedvirtual; DeclFileName()TRandom3inlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Exp(Double_t tau)TRandomvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fCount624TRandom3private; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FillBuffer(char *&buffer)TNamedvirtual; FindObject(const char *name) constTObjectvirtual; FindObject(c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRandom3-members.html:189,inherit,inherited,189,doc/master/classTRandom3-members.html,https://root.cern,https://root.cern/doc/master/classTRandom3-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TRint Member List. This is the complete list of members for TRint, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; ApplicationName() constTApplicationinlinevirtual; AreAllSignalsBlocked()TQObjectstatic; AreSignalsBlocked() constTQObjectinline; Argc() constTApplicationinline; Argv() constTApplicationinline; Argv(Int_t index) constTApplication; BlockAllSignals(Bool_t b)TQObjectstatic; BlockSignals(Bool_t b)TQObjectinline; Browse(TBrowser *b)TObjectvirtual; ChangedBy(const char *method)TQObjectinlinevirtual; CheckConnectArgs(TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot)TQObjectprotectedstatic; CheckedHash()TObjectinline; Class()TRintstatic; Class_Name()TRintstatic; Class_Version()TRintinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; ClearInputFiles()TApplication; Clone(const char *newname="""") constTObjectvirtual; Close(TApplication *app)TApplicationprotectedstatic; CollectClassSignalLists(TList &list, TClass *cls)TQObject; Compare(const TObject *obj) constTObjectvirtual; CompressName(const char *method_name)TQObjectprotectedstatic; Connect(const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObject; Connect(TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObjectstatic; Connect(const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObjectstatic; Connected(const char *)TQObjectinlinevirtual; ConnectToClass(TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot)TQObjectprotectedstatic; ConnectToClass(const char *sender_class, const char *signal, TClass *receiver_class, void *rec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRint-members.html:183,inherit,inherited,183,doc/master/classTRint-members.html,https://root.cern,https://root.cern/doc/master/classTRint-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TScatter Member List. This is the complete list of members for TScatter, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TScatterstatic; Class_Name()TScatterstatic; Class_Version()TScatterinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; DeclFileName()TScatterinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTScattervirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTScattervirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fColorTScatterprotected; fFillColorTAttFillprotected; fFillStyleTAttFillprotected; fgDtorOnlyTObjectprivatestatic; fg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTScatter-members.html:189,inherit,inherited,189,doc/master/classTScatter-members.html,https://root.cern,https://root.cern/doc/master/classTScatter-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TSeqCollection Member List. This is the complete list of members for TSeqCollection, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TObject *obj) overrideTSeqCollectioninlinevirtual; AddAfter(const TObject *after, TObject *obj)=0TSeqCollectionpure virtual; AddAll(const TCollection *col)TCollectionvirtual; AddAt(TObject *obj, Int_t idx)=0TSeqCollectionpure virtual; AddBefore(const TObject *before, TObject *obj)=0TSeqCollectionpure virtual; AddFirst(TObject *obj)=0TSeqCollectionpure virtual; AddLast(TObject *obj)=0TSeqCollectionpure virtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AddVector(TObject *obj1,...)TCollection; After(const TObject *obj) const =0TSeqCollectionpure virtual; AppendPad(Option_t *option="""")TObjectvirtual; AssertClass(TClass *cl) constTCollection; At(Int_t idx) const =0TSeqCollectionpure virtual; Before(const TObject *obj) const =0TSeqCollectionpure virtual; begin() constTCollectioninline; Browse(TBrowser *b) overrideTCollectionvirtual; Capacity() constTCollectioninline; Changed()TSeqCollectioninlineprotectedvirtual; CheckedHash()TObjectinline; Class()TSeqCollectionstatic; Class_Name()TSeqCollectionstatic; Class_Version()TSeqCollectioninlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") override=0TCollectionpure virtual; Clone(const char *newname="""") const overrideTCollectionvirtual; Compare(const TObject *obj) const overrideTCollectionvirtual; Contains(const char *name) constTCollectioninline; Contains(const TObject *obj) constTCollectioninline; Copy(TObject &object) constTObjectvirtual; DeclFileName()TSeqCollectioninlinestatic; Delete(Option_t *option="""") override=0TCollectionpure virtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSeqCollection-members.html:201,inherit,inherited,201,doc/master/classTSeqCollection-members.html,https://root.cern,https://root.cern/doc/master/classTSeqCollection-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TStreamerInfo Member List. This is the complete list of members for TStreamerInfo, including all inherited members. AbstractMethod(const char *method) constTObject; AddReadAction(TStreamerInfoActions::TActionSequence *readSequence, Int_t index, TCompInfo *compinfo)TStreamerInfoprivate; AddReadMemberWiseVecPtrAction(TStreamerInfoActions::TActionSequence *readSequence, Int_t index, TCompInfo *compinfo)TStreamerInfoprivate; AddReadTextAction(TStreamerInfoActions::TActionSequence *readSequence, Int_t index, TCompInfo *compinfo)TStreamerInfoprivate; AddToTObjectTable(TObject *)TObjectprivatestatic; AddWriteAction(TStreamerInfoActions::TActionSequence *writeSequence, Int_t index, TCompInfo *compinfo)TStreamerInfoprivate; AddWriteMemberWiseVecPtrAction(TStreamerInfoActions::TActionSequence *writeSequence, Int_t index, TCompInfo *compinfo)TStreamerInfoprivate; AddWriteTextAction(TStreamerInfoActions::TActionSequence *writeSequence, Int_t index, TCompInfo *compinfo)TStreamerInfoprivate; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; Build(Bool_t isTransient=kFALSE) overrideTStreamerInfovirtual; BuildCheck(TFile *file=nullptr, Bool_t load=kTRUE) overrideTStreamerInfovirtual; BuildEmulated(TFile *file) overrideTStreamerInfovirtual; BuildFor(const TClass *cl) overrideTStreamerInfovirtual; BuildOld() overrideTStreamerInfovirtual; CallShowMembers(const void *obj, TMemberInspector &insp, Bool_t isTransient) const overrideTStreamerInfovirtual; CanDelete()TVirtualStreamerInfostatic; CanOptimize()TVirtualStreamerInfostatic; CheckedHash()TObjectinline; Class()TStreamerInfostatic; Class_Name()TStreamerInfostatic; Class_Version()TStreamerInfoinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""") overrideTStreamerInfovirtual; Clone(const char *newname="""") const overrideTStreamerInfovirtual; Compare(const TObject *obj) const overrideTNamedvirt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerInfo-members.html:199,inherit,inherited,199,doc/master/classTStreamerInfo-members.html,https://root.cern,https://root.cern/doc/master/classTStreamerInfo-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TStyle Member List. This is the complete list of members for TStyle, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; AxisChoice(Option_t *axis) constTStyle; Browse(TBrowser *b) overrideTStylevirtual; BuildStyles()TStylestatic; cd()TStylevirtual; CheckedHash()TObjectinline; Class()TStylestatic; Class_Name()TStylestatic; Class_Version()TStyleinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &style) const overrideTStylevirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; TAttText::Copy(TAttText &atttext) constTAttText; DeclFileName()TStyleinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTStylevirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; EPaperSize enum nameTStyle; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStyle-members.html:185,inherit,inherited,185,doc/master/classTStyle-members.html,https://root.cern,https://root.cern/doc/master/classTStyle-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TSystem Member List. This is the complete list of members for TSystem, including all inherited members. Abort(int code=0)TSystemvirtual; AbstractMethod(const char *method) constTObject; AcceptConnection(int sock)TSystemvirtual; AccessPathName(const char *path, EAccessMode mode=kFileExists)TSystemvirtual; AddDynamicPath(const char *pathname)TSystemvirtual; AddFileHandler(TFileHandler *fh)TSystemvirtual; AddIncludePath(const char *includePath)TSystemvirtual; AddLinkedLibs(const char *linkedLib)TSystemvirtual; AddSignalHandler(TSignalHandler *sh)TSystemvirtual; AddStdExceptionHandler(TStdExceptionHandler *eh)TSystemvirtual; AddTimer(TTimer *t)TSystemvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AnnounceTcpService(int port, Bool_t reuse, int backlog, int tcpwindowsize=-1)TSystemvirtual; AnnounceUdpService(int port, int backlog)TSystemvirtual; AnnounceUnixService(int port, int backlog)TSystemvirtual; AnnounceUnixService(const char *sockpath, int backlog)TSystemvirtual; AppendPad(Option_t *option="""")TObjectvirtual; BaseName(const char *pathname)TSystemvirtual; Beep(Int_t freq=-1, Int_t duration=-1, Bool_t setDefault=kFALSE)TSystem; Browse(TBrowser *b)TObjectvirtual; cd(const char *path)TSysteminline; ChangeDirectory(const char *path)TSystemvirtual; CheckedHash()TObjectinline; Chmod(const char *file, UInt_t mode)TSystemvirtual; Class()TSystemstatic; Class_Name()TSystemstatic; Class_Version()TSysteminlinestatic; ClassName() constTObjectvirtual; CleanCompiledMacros()TSystemvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; CloseConnection(int sock, Bool_t force=kFALSE)TSystemvirtual; Closelog()TSystemvirtual; ClosePipe(FILE *pipe)TSystemvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; CompileMacro(const char *filename, Option_t *opt="""", const char *library_name="""", const char *bui",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSystem-members.html:187,inherit,inherited,187,doc/master/classTSystem-members.html,https://root.cern,https://root.cern/doc/master/classTSystem-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TText Member List. This is the complete list of members for TText, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TTextstatic; Class_Name()TTextstatic; Class_Version()TTextinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &text) const overrideTTextvirtual; TAttText::Copy(TAttText &atttext) constTAttText; DeclFileName()TTextinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py) overrideTTextvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawText(Double_t x, Double_t y, const char *text)TTextvirtual; DrawText(Double_t x, Double_t y, const wchar_t *text)TTextvirtual; DrawTextNDC(Double_t x, Double_t y, const char *text)TTextvirtual; DrawTextNDC(Double_t x, Double_t y, const wchar_t *text)TTextvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTTextvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FillBuffer(char *&buffe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTText-members.html:183,inherit,inherited,183,doc/master/classTText-members.html,https://root.cern,https://root.cern/doc/master/classTText-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TTimer Member List. This is the complete list of members for TTimer, including all inherited members. AbstractMethod(const char *method) constTObject; Activate()TSysEvtHandler; Activated()TSysEvtHandlerinlinevirtual; Add() overrideTTimerinlinevirtual; Added()TSysEvtHandlerinlinevirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; AreAllSignalsBlocked()TQObjectstatic; AreSignalsBlocked() constTQObjectinline; BlockAllSignals(Bool_t b)TQObjectstatic; BlockSignals(Bool_t b)TQObjectinline; Browse(TBrowser *b)TObjectvirtual; ChangedBy(const char *method)TQObjectinlinevirtual; CheckConnectArgs(TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot)TQObjectprotectedstatic; CheckedHash()TObjectinline; CheckTimer(const TTime &now)TTimer; Class()TTimerstatic; Class_Name()TTimerstatic; Class_Version()TTimerinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; CollectClassSignalLists(TList &list, TClass *cls)TQObject; Compare(const TObject *obj) constTObjectvirtual; CompressName(const char *method_name)TQObjectprotectedstatic; Connect(const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObject; Connect(TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObjectstatic; Connect(const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObjectstatic; Connected(const char *)TQObjectinlinevirtual; ConnectToClass(TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot)TQObjectprotectedstatic; ConnectToClass(const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot)TQObjectprotectedstatic; Copy(TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTimer-members.html:185,inherit,inherited,185,doc/master/classTTimer-members.html,https://root.cern,https://root.cern/doc/master/classTTimer-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TTree Member List. This is the complete list of members for TTree, including all inherited members. AbstractMethod(const char *method) constTObject; AddAllocationCount(UInt_t count)TTreeinline; AddBranchToCache(const char *bname, bool subbranches=false)TTreevirtual; AddBranchToCache(TBranch *branch, bool subbranches=false)TTreevirtual; AddClone(TTree *)TTree; AddFriend(const char *treename, const char *filename="""")TTreevirtual; AddFriend(const char *treename, TFile *file)TTreevirtual; AddFriend(TTree *tree, const char *alias="""", bool warn=false)TTreevirtual; AddTotBytes(Int_t tot)TTreeinlinevirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AddZipBytes(Int_t zip)TTreeinlinevirtual; AppendPad(Option_t *option="""")TObjectvirtual; AutoSave(Option_t *option="""")TTreevirtual; Branch(const char *name, T *obj, Int_t bufsize=32000, Int_t splitlevel=99)TTreeinline; Branch(const char *name, T **addobj, Int_t bufsize=32000, Int_t splitlevel=99)TTreeinline; Branch(TCollection *list, Int_t bufsize=32000, Int_t splitlevel=99, const char *name="""")TTreevirtual; Branch(TList *list, Int_t bufsize=32000, Int_t splitlevel=99)TTreevirtual; Branch(const char *folder, Int_t bufsize=32000, Int_t splitlevel=99)TTreevirtual; Branch(const char *name, void *address, const char *leaflist, Int_t bufsize=32000)TTreevirtual; Branch(const char *name, char *address, const char *leaflist, Int_t bufsize=32000)TTreeinline; Branch(const char *name, Longptr_t address, const char *leaflist, Int_t bufsize=32000)TTreeinline; Branch(const char *name, int address, const char *leaflist, Int_t bufsize=32000)TTreeinline; Branch(const char *name, const char *classname, void *addobj, Int_t bufsize=32000, Int_t splitlevel=99)TTreevirtual; Branch(const char *name, const char *classname, T *obj, Int_t bufsize=32000, Int_t splitlevel=99)TTreeinline; Branch(const char *name, const char *classname, T **addobj, Int_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTree-members.html:183,inherit,inherited,183,doc/master/classTTree-members.html,https://root.cern,https://root.cern/doc/master/classTTree-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TTreePerfStats Member List. This is the complete list of members for TTreePerfStats, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; BasketList_t typedefTTreePerfStats; Browse(TBrowser *b) overrideTTreePerfStatsvirtual; CheckedHash()TObjectinline; Class()TTreePerfStatsstatic; Class_Name()TTreePerfStatsstatic; Class_Version()TTreePerfStatsinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &object) constTObjectvirtual; CurrentPerfStats()TVirtualPerfStatsstatic; DeclFileName()TTreePerfStatsinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py) overrideTTreePerfStatsvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTTreePerfStatsvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; EEventType enum nameTVirtualPerfStats; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; EventType(EEventType type)TVirtualPerfStatsstatic; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTTreePerfStatsvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBasketsInfoTTreePerfStatsprotected; fBitsTObjectprivate; fBranchIndexCacheTTreePerfStatsprotected; fBytesReadTTreePerfStatsprotected; fBytesReadExtraTTreePerfStatsprotected; fCompres",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreePerfStats-members.html:201,inherit,inherited,201,doc/master/classTTreePerfStats-members.html,https://root.cern,https://root.cern/doc/master/classTTreePerfStats-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TTreeViewer Member List. This is the complete list of members for TTreeViewer, including all inherited members. AbstractMethod(const char *method) constTObject; Activate(Bool_t)TGFrameinlinevirtual; ActivateButtons(bool first, bool previous, bool next, bool last)TTreeViewer; AddFrame(TGFrame *f, TGLayoutHints *l=nullptr)TGCompositeFramevirtual; AddInput(UInt_t emask)TGFrame; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; AppendTree(TTree *tree)TTreeViewer; AreAllSignalsBlocked()TQObjectstatic; AreSignalsBlocked() constTQObjectinline; BindKey(const TGWindow *w, Int_t keycode, Int_t modifier) constTGMainFramevirtual; BlockAllSignals(Bool_t b)TQObjectstatic; BlockSignals(Bool_t b)TQObjectinline; Browse(TBrowser *b)TObjectvirtual; BuildInterface()TTreeViewerprivate; ChangeBackground(Pixel_t back)TGFramevirtual; ChangedBy(const char *method)TQObjectinlinevirtual; ChangeOptions(UInt_t options) overrideTGCompositeFramevirtual; ChangeSubframesBackground(Pixel_t back)TGCompositeFramevirtual; CheckConnectArgs(TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot)TQObjectprotectedstatic; CheckedHash()TObjectinline; Class()TTreeViewerstatic; Class_Name()TTreeViewerstatic; Class_Version()TTreeViewerinlinestatic; ClassName() constTObjectvirtual; Cleanup()TGCompositeFramevirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; CloseWindow() overrideTTreeViewervirtual; CollectClassSignalLists(TList &list, TClass *cls)TQObject; Compare(const TObject *obj) constTObjectvirtual; CompressName(const char *method_name)TQObjectprotectedstatic; Connect(const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObject; Connect(TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeViewer-members.html:195,inherit,inherited,195,doc/master/classTTreeViewer-members.html,https://root.cern,https://root.cern/doc/master/classTTreeViewer-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TUnixSystem Member List. This is the complete list of members for TUnixSystem, including all inherited members. Abort(int code=0) overrideTUnixSystemvirtual; AbstractMethod(const char *method) constTObject; AcceptConnection(int sock) overrideTUnixSystemvirtual; AccessPathName(const char *path, EAccessMode mode=kFileExists) overrideTUnixSystemvirtual; AddDynamicPath(const char *lib) overrideTUnixSystemvirtual; AddFileHandler(TFileHandler *fh) overrideTUnixSystemvirtual; AddIncludePath(const char *includePath)TSystemvirtual; AddLinkedLibs(const char *linkedLib)TSystemvirtual; AddSignalHandler(TSignalHandler *sh) overrideTUnixSystemvirtual; AddStdExceptionHandler(TStdExceptionHandler *eh)TSystemvirtual; AddTimer(TTimer *ti) overrideTUnixSystemvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AnnounceTcpService(int port, Bool_t reuse, int backlog, int tcpwindowsize=-1) overrideTUnixSystemvirtual; AnnounceUdpService(int port, int backlog) overrideTUnixSystemvirtual; AnnounceUnixService(int port, int backlog) overrideTUnixSystemvirtual; AnnounceUnixService(const char *sockpath, int backlog) overrideTUnixSystemvirtual; AppendPad(Option_t *option="""")TObjectvirtual; BaseName(const char *pathname)TSystemvirtual; Beep(Int_t freq=-1, Int_t duration=-1, Bool_t setDefault=kFALSE)TSystem; Browse(TBrowser *b)TObjectvirtual; cd(const char *path)TSysteminline; ChangeDirectory(const char *path) overrideTUnixSystemvirtual; CheckChilds()TUnixSystem; CheckDescriptors()TUnixSystem; CheckedHash()TObjectinline; CheckSignals(Bool_t sync)TUnixSystem; Chmod(const char *file, UInt_t mode) overrideTUnixSystemvirtual; Class()TUnixSystemstatic; Class_Name()TUnixSystemstatic; Class_Version()TUnixSysteminlinestatic; ClassName() constTObjectvirtual; CleanCompiledMacros()TSystemvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnixSystem-members.html:195,inherit,inherited,195,doc/master/classTUnixSystem-members.html,https://root.cern,https://root.cern/doc/master/classTUnixSystem-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TVirtualCollectionProxy Member List. This is the complete list of members for TVirtualCollectionProxy, including all inherited members. Allocate(UInt_t n, Bool_t forceDelete)=0TVirtualCollectionProxypure virtual; At(UInt_t idx)=0TVirtualCollectionProxypure virtual; Clear(const char *opt="""")=0TVirtualCollectionProxypure virtual; Commit(void *)=0TVirtualCollectionProxypure virtual; CopyIterator_t typedefTVirtualCollectionProxy; CreateIterators_t typedefTVirtualCollectionProxy; DeleteArray(void *p, Bool_t dtorOnly=kFALSE) constTVirtualCollectionProxyinlinevirtual; DeleteIterator_t typedefTVirtualCollectionProxy; DeleteTwoIterators_t typedefTVirtualCollectionProxy; Destructor(void *p, Bool_t dtorOnly=kFALSE) constTVirtualCollectionProxyinlinevirtual; EProperty enum nameTVirtualCollectionProxy; fClassTVirtualCollectionProxyprotected; fgIteratorArenaSizeTVirtualCollectionProxystatic; fPropertiesTVirtualCollectionProxyprotected; Generate() const =0TVirtualCollectionProxypure virtual; GetCollectionClass() constTVirtualCollectionProxyinlinevirtual; GetCollectionType() const =0TVirtualCollectionProxypure virtual; GetConversionReadMemberWiseActions(TClass *oldClass, Int_t version)=0TVirtualCollectionProxypure virtual; GetFunctionCopyIterator(Bool_t read=kTRUE)=0TVirtualCollectionProxypure virtual; GetFunctionCreateIterators(Bool_t read=kTRUE)=0TVirtualCollectionProxypure virtual; GetFunctionDeleteIterator(Bool_t read=kTRUE)=0TVirtualCollectionProxypure virtual; GetFunctionDeleteTwoIterators(Bool_t read=kTRUE)=0TVirtualCollectionProxypure virtual; GetFunctionNext(Bool_t read=kTRUE)=0TVirtualCollectionProxypure virtual; GetIncrement() const =0TVirtualCollectionProxypure virtual; GetProperties() constTVirtualCollectionProxyinlinevirtual; GetReadMemberWiseActions(Int_t version)=0TVirtualCollectionProxypure virtual; GetType() const =0TVirtualCollectionProxypure virtual; GetValueClas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualCollectionProxy-members.html:219,inherit,inherited,219,doc/master/classTVirtualCollectionProxy-members.html,https://root.cern,https://root.cern/doc/master/classTVirtualCollectionProxy-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TVirtualFFT Member List. This is the complete list of members for TVirtualFFT, including all inherited members. AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b)TObjectvirtual; CheckedHash()TObjectinline; Class()TVirtualFFTstatic; Class_Name()TVirtualFFTstatic; Class_Version()TVirtualFFTinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; Compare(const TObject *obj) constTObjectvirtual; Copy(TObject &object) constTObjectvirtual; DeclFileName()TVirtualFFTinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; FFT(Int_t ndim, Int_t *n, Option_t *option)TVirtualFFTstatic; fgDefaultTVirtualFFTprotectedstatic; fgDtorOnlyTObjectprivatestatic; fgFFTTVirtualFFTprotectedstatic; fgObjectStatTObjectprivatestatic; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fUniqueIDTObjectprivate; GetCurrentTransform()TVirtualFFTstatic; GetDefaultFFT()TVirtualFFTstatic; GetDrawOption(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualFFT-members.html:195,inherit,inherited,195,doc/master/classTVirtualFFT-members.html,https://root.cern,https://root.cern/doc/master/classTVirtualFFT-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TVirtualObject Member List. This is the complete list of members for TVirtualObject, including all inherited members. fClassTVirtualObject; fObjectTVirtualObject; GetClass() constTVirtualObjectinline; GetObject() constTVirtualObjectinline; operator=(const TVirtualObject &)=deleteTVirtualObjectprivate; TVirtualObject(const TVirtualObject &)=deleteTVirtualObjectprivate; TVirtualObject(TClass *cl)TVirtualObjectinline; ~TVirtualObject()TVirtualObjectinline. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:45 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualObject-members.html:201,inherit,inherited,201,doc/master/classTVirtualObject-members.html,https://root.cern,https://root.cern/doc/master/classTVirtualObject-members.html,1,['inherit'],['inherited']
Modifiability,". ROOT: Minuit2 Minimization Library. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes ; Minuit2 Minimization LibraryMath. ; New Object-oriented implementation of the MINUIT minimization package. ; More information is available at the home page of the Minuit2 minimization package"". . Classes; class  ROOT::Minuit2::FCNAdapter< Function >;  template wrapped class for adapting to FCNBase signature More...;  ; class  ROOT::Minuit2::FCNBase;  Interface (abstract class) defining the function to be minimized, which has to be implemented by the user. More...;  ; class  ROOT::Minuit2::FCNGradAdapter< Function >;  template wrapped class for adapting to FCNBase signature a IGradFunction More...;  ; class  ROOT::Minuit2::FumiliBuilder;  Builds the FunctionMinimum using the Fumili method. More...;  ; class  ROOT::Minuit2::FumiliChi2FCN;  Extension of the FCNBase for the Fumili method. More...;  ; class  ROOT::Minuit2::FumiliErrorUpdator;  In the case of the Fumili algorithm the Error matrix (or the Hessian matrix containing the (approximate) second derivatives) is calculated using a linearization of the model function negleting second derivatives. More...;  ; class  ROOT::Minuit2::FumiliFCNAdapter< Function >;  template wrapped class for adapting to FumiliFCNBase signature More...;  ; class  ROOT::Minuit2::FumiliFCNBase;  Extension of the FCNBase for the Fumili method. More...;  ; class  ROOT::Minuit2::FumiliMaximumLikelihoodFCN;  Extension of the FCNBase for the Fumili method. More...;  ; class  ROOT::Minuit2::FumiliMinimizer;  Instantiates the seed generator and Minimum builder for the Fumili minimization method. More...;  ; class  ROOT::Minuit2::FumiliStandardChi2FCN;  Class implementing the standard chi square function, which is the sum of the squares of the figures-of-merit calculated for each measurement point, the individual figures-of-merit being: (the Value predicted by the model-measured Value)/standard deviation. More...;  ; clas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Minuit.html:408,adapt,adapting,408,doc/master/group__Minuit.html,https://root.cern,https://root.cern/doc/master/group__Minuit.html,2,['adapt'],['adapting']
Modifiability,". ROOT: Multi-dimensional Minimization. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Enumerations ; Multi-dimensional MinimizationMath » MathCore | Math » MathMore » Numerical Algorithms. ; Classes implementing algorithms for multi-dimensional minimization. . Classes; class  ROOT::Math::BasicMinimizer;  Base Minimizer class, which defines the basic functionality of various minimizer implementations (apart from Minuit and Minuit2) It provides support for storing parameter values, step size, parameter transformation etc. More...;  ; class  ROOT::Math::GeneticMinimizer;  GeneticMinimizer. More...;  ; class  ROOT::Math::GSLMinimizer;  GSLMinimizer class. More...;  ; class  ROOT::Math::GSLMultiFit;  GSLMultiFit, internal class for implementing GSL non linear least square GSL fitting. More...;  ; class  ROOT::Math::GSLMultiFitFunctionAdapter< FuncVector >;  Class for adapting a C++ functor class to C function pointers used by GSL MultiFit Algorithm The templated C++ function class must implement: More...;  ; class  ROOT::Math::GSLMultiFitFunctionWrapper;  wrapper to a multi-dim function withtout derivatives for multi-dimensional minimization algorithm More...;  ; class  ROOT::Math::GSLMultiMinDerivFunctionWrapper;  Wrapper for a multi-dimensional function with derivatives used in GSL multidim minimization algorithm. More...;  ; struct  ROOT::Math::GSLMultiMinFunctionAdapter< UserFunc >;  Class for adapting any multi-dimension C++ functor class to C function pointers used by GSL MultiMin algorithms. More...;  ; class  ROOT::Math::GSLMultiMinFunctionWrapper;  wrapper to a multi-dim function withtout derivatives for multi-dimensional minimization algorithm More...;  ; class  ROOT::Math::GSLMultiMinimizer;  GSLMultiMinimizer class , for minimizing multi-dimensional function using derivatives. More...;  ; class  ROOT::Math::GSLNLSMinimizer;  GSLNLSMinimizer class for Non Linear Least Square fitting It Uses the Levemberg-Marquardt a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__MultiMin.html:921,adapt,adapting,921,doc/master/group__MultiMin.html,https://root.cern,https://root.cern/doc/master/group__MultiMin.html,1,['adapt'],['adapting']
Modifiability,. ROOT: Numerical Algorithms. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Modules |; Classes ; Numerical AlgorithmsMath » MathCore | Math » MathMore. ; Numerical Algorithm classes from the MathCore and MathMore libraries. . Modules;  One-dimensional Minimization;  Classes for one-dimensional minimization. ;  ;  Numerical Integration;  Classes for numerical integration of functions. ;  ;  Multi-dimensional Minimization;  Classes implementing algorithms for multi-dimensional minimization. ;  ;  Numerical Differentiation;  Classes for numerical differentiation. ;  ;  One-dimensional Root-Finding;  Classes implementing algorithms for finding the roots of a one-dimensional function. ;  ;  Function Approximation (ChebyshevApprox);  Numerical algorithm from the MathMore library and implemented using the GSL library. ;  ;  Multidimensional ROOT finding;  Classes for finding the roots of a multi-dimensional system. ;  ;  Interpolation Classes;  Classes for interpolation of points. ;  . Classes; class  ROOT::Math::DistSamplerOptions;  DistSampler options class. More...;  ; class  ROOT::Math::GenAlgoOptions;  class implementing generic options for a numerical algorithm Just store the options in a map of string-value pairs More...;  ; class  ROOT::Math::IOptions;  Generic interface for defining configuration options of a numerical algorithm. More...;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:33 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__NumAlgo.html:1341,config,configuration,1341,doc/master/group__NumAlgo.html,https://root.cern,https://root.cern/doc/master/group__NumAlgo.html,1,['config'],['configuration']
Modifiability,". ROOT: Numerical Integration. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Modules |; Classes |; Enumerations ; Numerical IntegrationMath » MathCore | Math » MathMore » Numerical Algorithms. ; Classes for numerical integration of functions. ; These classes provide algorithms for integration of one-dimensional functions, with several adaptive and non-adaptive methods and for integration of multi-dimensional function using an adaptive method or MonteCarlo Integration (GSLMCIntegrator). The basic classes ROOT::Math::IntegratorOneDim provides a common interface for the one-dimensional methods while the class ROOT::Math::IntegratorMultiDim provides the interface for the multi-dimensional ones. The methods can be configured (e.g setting the default method with its default parameters) using the ROOT::Math::IntegratorOneDimOptions and ROOT::Math::IntegratorMultiDimOptions classes. . Modules;  Numerical Monte Carlo Integration Classes;  Classes implementing method for Monte Carlo Integration. ;  . Classes; class  ROOT::Math::AdaptiveIntegratorMultiDim;  Class for adaptive quadrature integration in multi-dimensions using rectangular regions. More...;  ; class  ROOT::Math::BaseIntegratorOptions;  Base class for Numerical integration options common in 1D and multi-dimension This is an internal class and is not supposed to be instantiated by the user. More...;  ; class  ROOT::Math::GaussIntegrator;  User class for performing function integration. More...;  ; class  ROOT::Math::GaussLegendreIntegrator;  User class for performing function integration. More...;  ; class  ROOT::Math::GSLIntegrator;  Class for performing numerical integration of a function in one dimension. More...;  ; class  ROOT::Math::IntegratorMultiDim;  User class for performing multidimensional integration. More...;  ; class  ROOT::Math::IntegratorMultiDimOptions;  Numerical multi dimensional integration options. More...;  ; class  ROOT::Math::IntegratorOneDim;  User Class fo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Integration.html:372,adapt,adaptive,372,doc/master/group__Integration.html,https://root.cern,https://root.cern/doc/master/group__Integration.html,4,"['adapt', 'config']","['adaptive', 'configured']"
Modifiability,". ROOT: Numerical Monte Carlo Integration Classes. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Classes |; Typedefs |; Enumerations ; Numerical Monte Carlo Integration ClassesMath » MathCore | Math » MathMore » Numerical Algorithms » Numerical Integration. ; Classes implementing method for Monte Carlo Integration. ; Class for performing numerical integration of a multidimensional function. It uses the numerical integration algorithms of GSL, which reimplements the algorithms used in the QUADPACK, a numerical integration package written in Fortran.; Plain MC, MISER and VEGAS integration algorithms are supported for integration over finite (hypercubic) ranges.; GSL Manual.; It implements also the interface ROOT::Math::VirtualIntegratorMultiDim so it can be instantiate using the plugin manager (plugin name is ""GSLMCIntegrator"") . Classes; class  ROOT::Math::GSLMonteFunctionWrapper;  wrapper to a multi-dim function withtout derivatives for Monte Carlo multi-dimensional integration algorithm More...;  ; struct  ROOT::Math::MiserParameters;  Structure collecting parameters for MISER multidimensional integration. More...;  ; struct  ROOT::Math::VegasParameters;  Structures collecting parameters for VEGAS multidimensional integration For implementation of default parameters see file mathmore/src/GSLMCIntegrationWorkspace.h. More...;  . Typedefs; typedef double(* ROOT::Math::GSLMonteFuncPointer) (double *, size_t, void *);  Class for adapting any multi-dimension C++ functor class to C function pointers used by GSL MonteCarlo integration algorithms. ;  . Enumerations; enum  ROOT::Math::IntegrationMultiDim::Type { ;   ROOT::Math::IntegrationMultiDim::kDEFAULT = -1; , ROOT::Math::IntegrationMultiDim::kADAPTIVE; , ROOT::Math::IntegrationMultiDim::kVEGAS; , ROOT::Math::IntegrationMultiDim::kMISER; , ;   ROOT::Math::IntegrationMultiDim::kPLAIN. };  enumeration specifying the integration types. More...;  . Typedef Documentation. ◆ GSLMonteFuncPoin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__MCIntegration.html:823,plugin,plugin,823,doc/master/group__MCIntegration.html,https://root.cern,https://root.cern/doc/master/group__MCIntegration.html,2,['plugin'],['plugin']
Modifiability,". ROOT: PyROOT::RegulatorCleanup Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; PyROOT::RegulatorCleanup Class Referencefinal. ; A TObject-derived class to inject the memory regulation logic in the ROOT list of cleanups. ; The purpose of this class is to keep the responsibilities separate between the TMemoryRegulator logic and the rest of ROOT. ; Definition at line 85 of file TMemoryRegulator.h. Public Member Functions; void CallClearProxiedObjects ();  ; TClass * IsA () const;  ; void RecursiveRemove (TObject *object) final;  Recursively remove this object from a list. ;  ; void Streamer (TBuffer &R__b);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classPyROOT_1_1RegulatorCleanup.html:923,inherit,inherited,923,doc/master/classPyROOT_1_1RegulatorCleanup.html,https://root.cern,https://root.cern/doc/master/classPyROOT_1_1RegulatorCleanup.html,1,['inherit'],['inherited']
Modifiability,". ROOT: RCaloTower Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; RCaloTower Class Reference. . Definition at line 100 of file collection_proxies.C. Public Member Functions;  RCaloTower (float eta, float phi, float et);  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inh",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRCaloTower.html:601,inherit,inherited,601,doc/master/classRCaloTower.html,https://root.cern,https://root.cern/doc/master/classRCaloTower.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables ; ROOT Namespace ReferenceMath » MathCore | Math » MathMore » Statistical functions. tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ; More... Namespaces; namespace  Browsable;  ; namespace  CocoaTutorials;  ; namespace  Detail;  Special implementation of ROOT::RRangeCast for TCollection, including a check that the cast target type inherits from TObject and a new constructor that takes the TCollection by pointer. ;  ; namespace  Details;  ; namespace  ExecutorUtils;  This namespace contains pre-defined functions to be used in conjuction with TExecutor::Map and TExecutor::MapReduce. ;  ; namespace  Experimental;  ; namespace  Fit;  Namespace for the fitting classes. ;  ; namespace  FoundationUtils;  ; namespace  Geom;  ; namespace  Internal;  ; namespace  MacOSX;  ; namespace  Math;  ; namespace  MathMore;  ; namespace  Meta;  ; namespace  Minuit;  ; namespace  Minuit2;  ; namespace  option;  The namespace of The Lean Mean C++ Option Parser. ;  ; namespace  Quartz;  ; namespace  R;  namespace associated R package for ROOT. ;  ; namespace  RDF;  ; namespace  TestSupport;  ; namespace  TF1Helper;  ; namespace  TMetaUtils;  ; namespace  TreeUtils;  ; namespace  TThreadedObjectUtils;  ; namespace  TypeTraits;  ROOT type_traits extensions. ;  ; namespace  v5;  ; namespace  VecOps;  . Classes; class  RBrowser;  Web-based ROOT files and objects browser. More...;  ; class  RBrowserCatchedWidget;  ; class  RBrowserData;  Way to browse (hopefully) everything in ROOT. More...;  ; class  RBrowserDataCleanup;  ; class  RBrowserEditorWidget;  ; class  RBrowserInfoWidget;  ; class  RBrowserReply;  Reply on browser request. More...;  ; class  RBrowserRequest;  Request send from client to g",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT.html:634,inherit,inherits,634,doc/master/namespaceROOT.html,https://root.cern,https://root.cern/doc/master/namespaceROOT.html,1,['inherit'],['inherits']
Modifiability,". ROOT: ROOT Namespace Reference. ; ROOT  ; . v6-26. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables ; ROOT Namespace ReferenceMath » MathCore | Math » MathMore » Statistical functions. tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ; More... Namespaces; namespace  CocoaTutorials;  ; namespace  Detail;  Special implementation of ROOT::RRangeCast for TCollection, including a check that the cast target type inherits from TObject and a new constructor that takes the TCollection by pointer. ;  ; namespace  ExecutorUtils;  This namespace contains pre-defined functions to be used in conjuction with TExecutor::Map and TExecutor::MapReduce. ;  ; namespace  Experimental;  ; namespace  Fit;  Namespace for the fitting classes. ;  ; namespace  FoundationUtils;  ; namespace  Geom;  ; namespace  GLTutorials;  ; namespace  Internal;  ; namespace  MacOSX;  ; namespace  Math;  ; namespace  MathMore;  ; namespace  Meta;  ; namespace  Minuit;  ; namespace  Minuit2;  ; namespace  option;  The namespace of The Lean Mean C++ Option Parser. ;  ; namespace  Quartz;  ; namespace  R;  namespace associated R package for ROOT. ;  ; namespace  RDF;  ; namespace  TF1Helper;  ; namespace  TMetaUtils;  ; namespace  TreeUtils;  ; namespace  TThreadedObjectUtils;  ; namespace  TypeTraits;  ROOT type_traits extensions. ;  ; namespace  v5;  ; namespace  VecOps;  . Classes; struct  RCompressionSetting;  The global settings depend on a global variable named R__ZipMode which can be modified by a global function named R__SetZipMode. More...;  ; class  RDataFrame;  ROOT's RDataFrame offers a high level interface for analyses of data stored in TTree, CSV's and other data formats. More...;  ; class  ROpaqueTaskArena;  ; class  RRangeCast;  Wraps any collection that can be used in range-based loops and applies stat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v626/namespaceROOT.html:608,inherit,inherits,608,doc/v626/namespaceROOT.html,https://root.cern,https://root.cern/doc/v626/namespaceROOT.html,1,['inherit'],['inherits']
Modifiability,". ROOT: ROOT Namespace Reference. ; ROOT  ; . v6-28. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables ; ROOT Namespace ReferenceMath » MathCore | Math » MathMore » Statistical functions. This file contains a specialised ROOT message handler to test for diagnostic in unit tests. ; More... Namespaces; namespace  CocoaTutorials;  ; namespace  Detail;  Special implementation of ROOT::RRangeCast for TCollection, including a check that the cast target type inherits from TObject and a new constructor that takes the TCollection by pointer. ;  ; namespace  ExecutorUtils;  This namespace contains pre-defined functions to be used in conjuction with TExecutor::Map and TExecutor::MapReduce. ;  ; namespace  Experimental;  ; namespace  Fit;  Namespace for the fitting classes. ;  ; namespace  FoundationUtils;  ; namespace  Geom;  ; namespace  GLTutorials;  ; namespace  Internal;  ; namespace  MacOSX;  ; namespace  Math;  ; namespace  MathMore;  ; namespace  Meta;  ; namespace  Minuit;  ; namespace  Minuit2;  ; namespace  option;  The namespace of The Lean Mean C++ Option Parser. ;  ; namespace  Quartz;  ; namespace  R;  namespace associated R package for ROOT. ;  ; namespace  RDF;  ; namespace  TestSupport;  ; namespace  TF1Helper;  ; namespace  TMetaUtils;  ; namespace  TreeUtils;  ; namespace  TThreadedObjectUtils;  ; namespace  TypeTraits;  ROOT type_traits extensions. ;  ; namespace  v5;  ; namespace  VecOps;  . Classes; struct  RCompressionSetting;  The global settings depend on a global variable named R__ZipMode which can be modified by a global function named R__SetZipMode. More...;  ; class  RDataFrame;  ROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree , CSV and other data formats, in C++ or Python. More...;  ; class  ROpaqueTaskArena;  ; class  RRangeCast;  Wraps any collection that can be used in range-based loops and applies static_cast<T> or",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v628/namespaceROOT.html:543,inherit,inherits,543,doc/v628/namespaceROOT.html,https://root.cern,https://root.cern/doc/v628/namespaceROOT.html,1,['inherit'],['inherits']
Modifiability,". ROOT: ROOT Namespace Reference. ; ROOT  ; . v6-30. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables ; ROOT Namespace ReferenceMath » MathCore | Math » MathMore » Statistical functions. This file contains a specialised ROOT message handler to test for diagnostic in unit tests. ; More... Namespaces; namespace  Browsable;  ; namespace  CocoaTutorials;  ; namespace  Detail;  Special implementation of ROOT::RRangeCast for TCollection, including a check that the cast target type inherits from TObject and a new constructor that takes the TCollection by pointer. ;  ; namespace  Details;  ; namespace  ExecutorUtils;  This namespace contains pre-defined functions to be used in conjuction with TExecutor::Map and TExecutor::MapReduce. ;  ; namespace  Experimental;  ; namespace  Fit;  Namespace for the fitting classes. ;  ; namespace  FoundationUtils;  ; namespace  Geom;  ; namespace  GLTutorials;  ; namespace  Internal;  ; namespace  MacOSX;  ; namespace  Math;  ; namespace  MathMore;  ; namespace  Meta;  ; namespace  Minuit;  ; namespace  Minuit2;  ; namespace  option;  The namespace of The Lean Mean C++ Option Parser. ;  ; namespace  Quartz;  ; namespace  R;  namespace associated R package for ROOT. ;  ; namespace  RDF;  ; namespace  TestSupport;  ; namespace  TF1Helper;  ; namespace  TMetaUtils;  ; namespace  TreeUtils;  ; namespace  TThreadedObjectUtils;  ; namespace  TypeTraits;  ROOT type_traits extensions. ;  ; namespace  v5;  ; namespace  VecOps;  . Classes; class  RBrowser;  Web-based ROOT files and objects browser. More...;  ; class  RBrowserCatchedWidget;  ; class  RBrowserData;  Way to browse (hopefully) everything in ROOT. More...;  ; class  RBrowserDataCleanup;  ; class  RBrowserEditorWidget;  ; class  RBrowserInfoWidget;  ; class  RBrowserReply;  Reply on browser request. More...;  ; class  RBrowserRequest;  Request send from client to get content of path element. More...;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v630/namespaceROOT.html:568,inherit,inherits,568,doc/v630/namespaceROOT.html,https://root.cern,https://root.cern/doc/v630/namespaceROOT.html,1,['inherit'],['inherits']
Modifiability,". ROOT: ROOT Namespace Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables ; ROOT Namespace ReferenceMath » MathCore | Math » MathMore » Statistical functions. tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ; More... Namespaces; namespace  Browsable;  ; namespace  CocoaTutorials;  ; namespace  Detail;  Special implementation of ROOT::RRangeCast for TCollection, including a check that the cast target type inherits from TObject and a new constructor that takes the TCollection by pointer. ;  ; namespace  Details;  ; namespace  ExecutorUtils;  This namespace contains pre-defined functions to be used in conjuction with TExecutor::Map and TExecutor::MapReduce. ;  ; namespace  Experimental;  ; namespace  Fit;  Namespace for the fitting classes. ;  ; namespace  FoundationUtils;  ; namespace  Geom;  ; namespace  Internal;  ; namespace  MacOSX;  ; namespace  Math;  ; namespace  MathMore;  ; namespace  Meta;  ; namespace  Minuit;  ; namespace  Minuit2;  ; namespace  option;  The namespace of The Lean Mean C++ Option Parser. ;  ; namespace  Quartz;  ; namespace  R;  namespace associated R package for ROOT. ;  ; namespace  RDF;  ; namespace  TestSupport;  ; namespace  TF1Helper;  ; namespace  TMetaUtils;  ; namespace  TreeUtils;  ; namespace  TThreadedObjectUtils;  ; namespace  TypeTraits;  ROOT type_traits extensions. ;  ; namespace  v5;  ; namespace  VecOps;  . Classes; class  RBrowser;  Web-based ROOT files and objects browser. More...;  ; class  RBrowserCatchedWidget;  ; class  RBrowserData;  Way to browse (hopefully) everything in ROOT. More...;  ; class  RBrowserDataCleanup;  ; class  RBrowserEditorWidget;  ; class  RBrowserInfoWidget;  ; class  RBrowserReply;  Reply on browser request. More...;  ; class  RBrowserRequest;  Request send from client to ge",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/namespaceROOT.html:633,inherit,inherits,633,doc/v632/namespaceROOT.html,https://root.cern,https://root.cern/doc/v632/namespaceROOT.html,1,['inherit'],['inherits']
Modifiability,". ROOT: ROOT files layout. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. ROOT files layout. Table of Contents; ROOTIO files; Data record types""core"" record types; ""streamer"" layer record types; ""pointer to persistent object"" object types; ""application"" layer record types. Data compression; StreamerInfo; Pointers to persistent objects; Some useful container classesTObjArray and TClonesArray; TTree. Related pages. ROOTIO files; A ROOTIO file consists of one ""file header"", one or more ""data; records,"" and zero or more ""free segments"". The file header is always at the beginning of the file, while the data records and free segments may in principle appear in any order.; The file header is fixed length (64 bytes in the current release.) It's detailed format is given in File header format.; A free segment is of variable length. One free segment is a set of contiguous bytes that are unused, and are available for ROOTIO to use for new or resized data records. The first four bytes of a a free segment contain the negative of the number of bytes in the segment. The contents of the remainder of the free segment are irrelevant.; A data record represents either user data or data used internally by ROOTIO. All data records have two portions, a ""key"" portion and a ""data"" portion. The key portion precedes the data portion. The format of the key portion is the same for all data. (The key portion corresponds to a class TKey object). The object name and they key cycle are together sufficient to uniquely determine the record within the file. The Format of a class object in DATA page describes the format of the data portion of a record for an object that uses the default streamer. Data record types. ""core"" record types; There are several types of data records used internally by ROOTIO to support the storage of byte sequences. These record types are TFile, TDirectory, ""KeysList"", and ""FreeSegments"". These types can be considered to be in the ""core"" layer o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rootio.html:851,variab,variable,851,doc/master/rootio.html,https://root.cern,https://root.cern/doc/master/rootio.html,1,['variab'],['variable']
Modifiability,". ROOT: ROOT::Detail Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Classes |; Typedefs |; Functions ; ROOT::Detail Namespace Reference. Special implementation of ROOT::RRangeCast for TCollection, including a check that the cast target type inherits from TObject and a new constructor that takes the TCollection by pointer. ; More... Namespaces; namespace  Internal;  ; namespace  RDF;  ; namespace  VecOps;  . Classes; struct  CallableTraitsImpl;  Extract types from the signature of a callable object. See CallableTraits. More...;  ; struct  CallableTraitsImpl< R(*)(Args...), false >;  ; struct  CallableTraitsImpl< R(Args...), false >;  ; struct  CallableTraitsImpl< R(T::*)(Args...) const, false >;  ; struct  CallableTraitsImpl< R(T::*)(Args...), false >;  ; struct  CallableTraitsImpl< T, true >;  ; struct  indices;  ; struct  is_array_class;  ; struct  is_array_class< std::array< T, N > >;  ; struct  is_array_class< std::initializer_list< T > >;  ; struct  is_array_class< std::vector< T > >;  ; struct  make_indices_;  ; struct  make_indices_impl;  ; struct  make_indices_impl< First, Step, N, typename std::enable_if<(N > 1 &&N % 2==0)>::type >;  ; struct  make_indices_impl< First, Step, N, typename std::enable_if<(N > 1 &&N % 2==1)>::type >;  ; struct  make_indices_impl< First, Step, N, typename std::enable_if<(N==0)>::type >;  ; struct  make_indices_impl< First, Step, N, typename std::enable_if<(N==1)>::type >;  ; struct  make_indices_next;  ; struct  make_indices_next2;  ; struct  make_indices_next2< indices< Indices... >, Next, Tail >;  ; struct  make_indices_next< indices< Indices... >, Next >;  ; class  TBranchProxy;  Base class for all the proxy object. More...;  ; class  TCollectionProxyInfo;  ; class  TRangeCast;  ; class  TSchemaRuleSet;  ; class  TStatusBitsChecker;  . Typedefs; template<size_t Start, size_t Last, size_t Step = 1> ; using make_indices = typename make_indices_< Start, Last, Ste",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Detail.html:310,inherit,inherits,310,doc/master/namespaceROOT_1_1Detail.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Detail.html,1,['inherit'],['inherits']
Modifiability,". ROOT: ROOT::Detail Namespace Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Classes |; Typedefs |; Functions ; ROOT::Detail Namespace Reference. Special implementation of ROOT::RRangeCast for TCollection, including a check that the cast target type inherits from TObject and a new constructor that takes the TCollection by pointer. ; More... Namespaces; namespace  Internal;  ; namespace  RDF;  ; namespace  VecOps;  . Classes; struct  CallableTraitsImpl;  Extract types from the signature of a callable object. See CallableTraits. More...;  ; struct  CallableTraitsImpl< R(*)(Args...), false >;  ; struct  CallableTraitsImpl< R(Args...), false >;  ; struct  CallableTraitsImpl< R(T::*)(Args...) const, false >;  ; struct  CallableTraitsImpl< R(T::*)(Args...), false >;  ; struct  CallableTraitsImpl< T, true >;  ; struct  indices;  ; struct  is_array_class;  ; struct  is_array_class< std::array< T, N > >;  ; struct  is_array_class< std::initializer_list< T > >;  ; struct  is_array_class< std::vector< T > >;  ; struct  make_indices_;  ; struct  make_indices_impl;  ; struct  make_indices_impl< First, Step, N, typename std::enable_if<(N > 1 &&N % 2==0)>::type >;  ; struct  make_indices_impl< First, Step, N, typename std::enable_if<(N > 1 &&N % 2==1)>::type >;  ; struct  make_indices_impl< First, Step, N, typename std::enable_if<(N==0)>::type >;  ; struct  make_indices_impl< First, Step, N, typename std::enable_if<(N==1)>::type >;  ; struct  make_indices_next;  ; struct  make_indices_next2;  ; struct  make_indices_next2< indices< Indices... >, Next, Tail >;  ; struct  make_indices_next< indices< Indices... >, Next >;  ; class  TBranchProxy;  Base class for all the proxy object. More...;  ; class  TCollectionProxyInfo;  ; class  TRangeCast;  ; class  TSchemaRuleSet;  ; class  TStatusBitsChecker;  . Typedefs; template<size_t Start, size_t Last, size_t Step = 1> ; using make_indices = typename make_indices_< Start, Last, Step",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/namespaceROOT_1_1Detail.html:309,inherit,inherits,309,doc/v632/namespaceROOT_1_1Detail.html,https://root.cern,https://root.cern/doc/v632/namespaceROOT_1_1Detail.html,1,['inherit'],['inherits']
Modifiability,". ROOT: ROOT::Detail::RDF::RRangeBase Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; List of all members ; ROOT::Detail::RDF::RRangeBase Class Reference. . Definition at line 33 of file RRangeBase.hxx. Public Member Functions;  RRangeBase (RLoopManager *implPtr, unsigned int start, unsigned int stop, unsigned int stride, const unsigned int nSlots, const std::vector< std::string > &prevVariations);  ;  ~RRangeBase () override;  ; void InitNode ();  ; RRangeBase & operator= (const RRangeBase &)=delete;  ;  Public Member Functions inherited from ROOT::Detail::RDF::RNodeBase;  RNodeBase (const std::vector< std::string > &variations={}, RLoopManager *lm=nullptr);  ; virtual ~RNodeBase ();  ; virtual void AddFilterName (std::vector< std::string > &filters)=0;  ; virtual bool CheckFilters (unsigned int, Long64_t)=0;  ; virtual std::shared_ptr< ROOT::Internal::RDF::GraphDrawing::GraphNode > GetGraph (std::unordered_map< void *, std::shared_ptr< ROOT::Internal::RDF::GraphDrawing::GraphNode > > &visitedMap)=0;  ; virtual RLoopManager * GetLoopManagerUnchecked ();  ; const std::vector< std::string > & GetVariations () const;  ; virtual std::shared_ptr< RNodeBase > GetVariedFilter (const std::string &);  Return a clone of this node that acts as a Filter working with values in the variationName ""universe"". ;  ; virtual void IncrChildrenCount ()=0;  ; virtual void PartialReport (ROOT::RDF::RCutFlowReport &) const =0;  ; virtual void Report (ROOT::RDF::RCutFlowReport &) const =0;  ; virtual void ResetChildrenCount ();  ; virtual void StopProcessing ()=0;  . Protected Attributes; bool fHasStopped {false};  True if the end of the range has been reached. ;  ; Long64_t fLastCheckedEntry {-1};  ; bool fLastResult {true};  ; ULong64_t fNProcessedEntries {0};  ; const unsigned int fNSlots;  Number of thread slots used by this node, inherited from parent node. ;  ; u",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Detail_1_1RDF_1_1RRangeBase.html:659,inherit,inherited,659,doc/master/classROOT_1_1Detail_1_1RDF_1_1RRangeBase.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Detail_1_1RDF_1_1RRangeBase.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Detail::TCollectionProxyInfo::Environ< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; ROOT::Detail::TCollectionProxyInfo::Environ< T > Class Template Reference. ; template<typename T>; class ROOT::Detail::TCollectionProxyInfo::Environ< T >Small helper to save proxy environment in the event of recursive calls. ; AuthorM.Frank ; Version1.0 ; Date10/10/2004 ; Definition at line 244 of file TCollectionProxyInfo.h. Public Types; typedef T Iter_t;  . Public Member Functions;  Environ ();  ; T & iter ();  ;  Public Member Functions inherited from ROOT::Detail::TCollectionProxyInfo::EnvironBase;  EnvironBase ();  ; virtual ~EnvironBase ();  . Static Public Member Functions; static void * Create ();  . Public Attributes; Iter_t fIterator;  ;  Public Attributes inherited from ROOT::Detail::TCollectionProxyInfo::EnvironBase; union { ;  ;    Bool_t   fLastValueVecBool ;  ;    Bool_t   fUseTemp ;  ; };  ;  ; size_t fIdx;  ; void * fObject;  ; int fRefCount;  ; size_t fSize;  ; size_t fSpace;  ; void * fStart;  ; void * fTemp;  . #include <TCollectionProxyInfo.h>. Inheritance diagram for ROOT::Detail::TCollectionProxyInfo::Environ< T >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ Iter_t. template<typename T > . typedef T ROOT::Detail::TCollectionProxyInfo::Environ< T >::Iter_t. Definition at line 246 of file TCollectionProxyInfo.h. Constructor & Destructor Documentation. ◆ Environ(). template<typename T > . ROOT::Detail::TCollectionProxyInfo::Environ< T >::Environ ; (; ). inline . Definition at line 245 of file TCollectionProxyInfo.h. Member Function Documentation. ◆ Create(). template<typename T > . static void * ROOT::Detail::TCollectionProxyInfo::Environ< T >::Create ; (; ). in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Detail_1_1TCollectionProxyInfo_1_1Environ.html:752,inherit,inherited,752,doc/master/structROOT_1_1Detail_1_1TCollectionProxyInfo_1_1Environ.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Detail_1_1TCollectionProxyInfo_1_1Environ.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Detail::TRangeCast< T, isDynamic > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Detail::TRangeCast< T, isDynamic > Class Template Reference. ; template<typename T, bool isDynamic>; class ROOT::Detail::TRangeCast< T, isDynamic >; Definition at line 311 of file TCollection.h. Public Member Functions;  TRangeCast (TCollection const &col);  ;  TRangeCast (TCollection const *col);  ;  Public Member Functions inherited from ROOT::RRangeCast< T, isDynamic, Range_t >;  RRangeCast (Range_t &&inputRange);  ; iterator begin ();  ; const_iterator begin () const;  ; iterator end ();  ; const_iterator end () const;  . Additional Inherited Members;  Public Types inherited from ROOT::RRangeCast< T, isDynamic, Range_t >; using const_iterator = Internal::TypedIter< T, decltype(std::cbegin(std::declval< Range_t >())), isDynamic >;  ; using iterator = Internal::TypedIter< T, decltype(std::begin(std::declval< Range_t >())), isDynamic >;  . #include <TCollection.h>. Inheritance diagram for ROOT::Detail::TRangeCast< T, isDynamic >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TRangeCast() [1/2]. template<typename T , bool isDynamic> . ROOT::Detail::TRangeCast< T, isDynamic >::TRangeCast ; (; TCollection const & ; col). inline . Definition at line 313 of file TCollection.h. ◆ TRangeCast() [2/2]. template<typename T , bool isDynamic> . ROOT::Detail::TRangeCast< T, isDynamic >::TRangeCast ; (; TCollection const * ; col). inline . Definition at line 316 of file TCollection.h. core/cont/inc/TCollection.h. ROOTDetailTRangeCast. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:02 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Detail_1_1TRangeCast.html:561,inherit,inherited,561,doc/master/classROOT_1_1Detail_1_1TRangeCast.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Detail_1_1TRangeCast.html,2,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Detail::TSchemaRuleSet Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; ROOT::Detail::TSchemaRuleSet Class Reference. . Definition at line 24 of file TSchemaRuleSet.h. Classes; class  TMatches;  . Public Types; enum  EConsistencyCheck { kNoCheck = 0; , kCheckAll = 1; , kCheckConflict = 2; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TSchemaRuleSet ();  Default constructor. ;  ; virtual ~TSchemaRuleSet ();  Destructor. ;  ; Bool_t AddRule (TSchemaRule *rule, EConsistencyCheck checkConsistency=kCheckAll, TString *errmsg=nullptr);  The consistency check always fails if the TClass object was not set! if checkConsistency is: kNoCheck: no check is done, register the rule as is kCheckConflict: check only for conflicting rules kCheckAll: check for conflict and check for rule about members that are not in the current class layout. ;  ; Bool_t AddRules (TSchemaRuleSet *rules, EConsistencyCheck checkConsistency=kCheckAll, TString *errmsg=nullptr);  ; void AsString (TString &out) const;  Fill the string 'out' with the string representation of the rule. ;  ; const TMatches FindRules (const TString &source) const;  Return all the rules that are about the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Detail_1_1TSchemaRuleSet.html:528,inherit,inherited,528,doc/master/classROOT_1_1Detail_1_1TSchemaRuleSet.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Detail_1_1TSchemaRuleSet.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Experimental::Internal::RKeyBlob Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; ROOT::Experimental::Internal::RKeyBlob Class Reference. ; The RKeyBlob writes an invisible key into a TFile. ; That is, a key that is not indexed in the list of keys, like a TBasket. NOTE: out of anonymous namespace because otherwise ClassDefInline fails to compile on some platforms. ; Definition at line 613 of file RMiniFile.cxx. Public Member Functions;  RKeyBlob ()=default;  ;  RKeyBlob (TFile *file);  ; TClass * IsA () const override;  ; void Reserve (size_t nbytes, std::uint64_t *seekKey);  Register a new key for a data record of size nbytes. ;  ; void Streamer (TBuffer &R__b) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TKey;  TKey ();  TKey default constructor. ;  ;  TKey (const char *name, const char *title, const TClass *cl, Int_t nbytes, TDirectory *motherDir);  Create a TKey object with the specified name, title for the given class. ;  ;  TKey (const TObject *obj, const char *name, Int_t bufsize, TDirectory *motherDir);  Create a TKey object for a TObject* and fill output buffer. ;  ;  TKey (const TString &name, const TString &title, const TClass *cl, Int_t nbytes, TDirectory *motherDir);  Create a TKey object with the specified name, title for the given class. ;  ;  TKey (const void *obj, const TClass *cl, const char *name, Int_t bufsize, TDirectory *motherDir);  Create a TKey object for any object obj of class cl d and fill output buffer. ;  ;  TKey (Long64_t pointer, Int_t nbytes, TDirectory *motherDir=nullptr);  Create a TKey object to read keys. ;  ;  TKey (TDirectory *motherDir);  TKey default constructor. ;  ;  TKey (TDirectory *motherDir, const TKey &orig, UShort_t pidOffset);  Copy a TKey fro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1Internal_1_1RKeyBlob.html:981,inherit,inherited,981,doc/master/classROOT_1_1Experimental_1_1Internal_1_1RKeyBlob.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1Internal_1_1RKeyBlob.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Experimental::Internal::RPageSink Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Attributes |; List of all members ; ROOT::Experimental::Internal::RPageSink Class ReferenceabstractNTuple-related classes. ; Abstract interface to write data into an ntuple. ; The page sink takes the list of columns and afterwards a series of page commits and cluster commits. The user is responsible to commit clusters at a consistent point, i.e. when all pages corresponding to data up to the given entry number are committed.; An object of this class may either be a wrapper (for example a RPageSinkBuf) or a ""persistent"" sink, inheriting from RPagePersistentSink. ; Definition at line 256 of file RPageStorage.hxx. Classes; struct  RSealPageConfig;  Parameters for the SealPage() method. More...;  ; class  RSinkGuard;  An RAII wrapper used to synchronize a page sink. See GetSinkGuard(). More...;  ; struct  RStagedCluster;  Cluster that was staged, but not yet logically appended to the RNTuple. More...;  . Public Types; using Callback_t = std::function< void(RPageSink &)>;  ;  Public Types inherited from ROOT::Experimental::Internal::RPageStorage; using ColumnHandle_t = RColumnHandle;  The column handle identifies a column with the current open page storage. ;  ; using SealedPageSequence_t = std::deque< RSealedPage >;  . Public Member Functions;  RPageSink (const RPageSink &)=delete;  ;  RPageSink (RPageSink &&)=default;  ;  RPageSink (std::string_view ntupleName, const RNTupleWriteOptions &options);  ;  ~RPageSink () override;  ; virtual std::uint64_t CommitCluster (NTupleSize_t nNewEntries);  Finalize the current cluster and create a new one for the following data. ;  ; virtual void CommitClusterGroup ()=0;  Write out the page locations (page list envelope) ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1Internal_1_1RPageSink.html:850,inherit,inheriting,850,doc/master/classROOT_1_1Experimental_1_1Internal_1_1RPageSink.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1Internal_1_1RPageSink.html,1,['inherit'],['inheriting']
Modifiability,". ROOT: ROOT::Experimental::RChangeAttrRequest Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Experimental::RChangeAttrRequest Class Reference. . Definition at line 24 of file RCanvas.hxx. Public Member Functions;  RChangeAttrRequest ()=default;  ;  ~RChangeAttrRequest () override=default;  ; bool NeedCanvasUpdate () const override;  ; std::unique_ptr< RDrawableReply > Process () override;  Apply attributes changes to the drawable Return mask with actions which were really applied. ;  ;  Public Member Functions inherited from ROOT::Experimental::RDrawableRequest; virtual ~RDrawableRequest ();  destructor, pin vtable ;  ; RDrawable::RDisplayContext & GetContext ();  ; const RDrawable::RDisplayContext & GetContext () const;  ; const std::string & GetId () const;  ; uint64_t GetRequestId () const;  ; bool ShouldBeReplyed () const;  . Private Member Functions;  RChangeAttrRequest (const RChangeAttrRequest &)=delete;  ; RChangeAttrRequest & operator= (const RChangeAttrRequest &)=delete;  . Private Attributes; bool fNeedUpdate {false};  ! is canvas update required ;  ; std::vector< std::string > ids;  array of ids ;  ; std::vector< std::string > names;  array of attribute names ;  ; bool update {true};  update canvas at the end ;  ; std::vector< std::unique_ptr< RAttrMap::Value_t > > values;  array of values ;  . #include <ROOT/RCanvas.hxx>. Inheritance diagram for ROOT::Experimental::RChangeAttrRequest:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RChangeAttrRequest() [1/2]. ROOT::Experimental::RChangeAttrRequest::RChangeAttrRequest ; (; const RChangeAttrRequest & ; ). privatedelete . ◆ RChangeAttrRequest() [2/2]. ROOT::Experimental::RChangeAttrRequest::RChangeAttrRequest ; (; ). default . ◆ ~RChangeAttr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RChangeAttrRequest.html:696,inherit,inherited,696,doc/master/classROOT_1_1Experimental_1_1RChangeAttrRequest.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RChangeAttrRequest.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Experimental::REveSelectorToEventList Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; ROOT::Experimental::REveSelectorToEventList Class Reference. ; REveSelectorToEventList TSelector that stores entry numbers of matching TTree entries into an event-list. ; Definition at line 26 of file REveTreeTools.hxx. Public Member Functions;  REveSelectorToEventList (TEventList *evl, const char *sel);  Constructor. ;  ;  ~REveSelectorToEventList () override;  ; TClass * IsA () const override;  ; Bool_t Process (Long64_t entry) override;  Process entry. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t Version () const override;  ;  Public Member Functions inherited from TSelectorDraw;  TSelectorDraw ();  Default selector constructor. ;  ;  ~TSelectorDraw () override;  Selector destructor. ;  ; void Begin (TTree *tree) override;  Called every time a loop on the tree(s) starts. ;  ; virtual Int_t GetAction () const;  ; virtual bool GetCleanElist () const;  ; virtual Int_t GetDimension () const;  ; virtual Long64_t GetDrawFlag () const;  ; Int_t GetMultiplicity () const;  ; virtual Int_t GetNfill () const;  ; TObject * GetObject () const;  ; TH1 * GetOldHistogram () const;  ; TTreeFormula * GetSelect () const;  ; virtual Long64_t GetSelectedRows () const;  ; TTree * GetTree () const;  ; virtual Double_t * GetV1 () const;  See TSelectorDraw::GetVal. ;  ; virtual Double_t * GetV2 () const;  See TSelectorDraw::GetVal. ;  ; virtual Double_t * GetV3 () const;  See TSelectorDraw::GetVal. ;  ; virtual Double_t * GetV4 () const;  See TSelectorDraw::GetVal. ;  ; virtual Double_t * GetVal (Int_t i) const;  Return the last values corresponding to the i-th component of the fo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveSelectorToEventList.html:976,inherit,inherited,976,doc/master/classROOT_1_1Experimental_1_1REveSelectorToEventList.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1REveSelectorToEventList.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Experimental::RField< T, typename > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; ROOT::Experimental::RField< T, typename > Class Template Referencefinal. ; template<typename T, typename = void>; class ROOT::Experimental::RField< T, typename >Classes with dictionaries that can be inspected by TClass. ; Definition at line 241 of file RField.hxx. Public Member Functions;  RField (RField &&other)=default;  ;  RField (std::string_view name);  ;  ~RField () final=default;  ; RField & operator= (RField &&other)=default;  ;  Public Member Functions inherited from ROOT::Experimental::RClassField;  RClassField (RClassField &&other)=default;  ;  RClassField (std::string_view fieldName, std::string_view className);  ;  ~RClassField () override=default;  ; void AcceptVisitor (Detail::RFieldVisitor &visitor) const final;  ; size_t GetAlignment () const final;  As a rule of thumb, the alignment is equal to the size of the type. ;  ; std::uint32_t GetTypeChecksum () const final;  Return the current TClass reported checksum of this class. Only valid if kTraitTypeChecksum is set. ;  ; std::uint32_t GetTypeVersion () const final;  Indicates an evolution of the C++ type itself. ;  ; size_t GetValueSize () const final;  The number of bytes taken by a value of the appropriate type. ;  ; RClassField & operator= (RClassField &&other)=default;  ; std::vector< RValue > SplitValue (const RValue &value) const final;  Creates the list of direct child values given a value for this field. ;  ;  Public Member Functions inherited from ROOT::Experimental::RFieldBase;  RFieldBase (const RFieldBase &)=delete;  ;  RFieldBase (RFieldBase &&)=default;  ;  RFieldBase (std::string_view name, std::string_view type, ENTupleStructure structure, bool isSimple, std::size_t nRepetitions=0);  The constructor creates the underlying colu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RField.html:729,inherit,inherited,729,doc/master/classROOT_1_1Experimental_1_1RField.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RField.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Experimental::RFrame Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Public Attributes |; Protected Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::Experimental::RFrame Class ReferenceGraphics » ROOT7 Graphics » ROOT7 Pad related classes. ; Holds an area where drawing on user coordinate-system can be performed. ; AuthorsAxel Naumann axel@.nosp@m.cern.nosp@m..ch Sergey Linev s.lin.nosp@m.ev@g.nosp@m.si.de ; Date2017-09-26 ; WarningThis is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome! ; Definition at line 38 of file RFrame.hxx. Classes; class  RUserRanges;  ; class  RZoomRequest;  . Public Member Functions;  RFrame (TRootIOCtor *);  ; void GetClientRanges (unsigned connid, RUserRanges &ranges);  Return ranges configured for the client. ;  ;  Public Member Functions inherited from ROOT::Experimental::RDrawable;  RDrawable (const char *csstype);  ; virtual ~RDrawable ();  ; void ClearStyle ();  ; const std::string & GetCssClass () const;  ; const char * GetCssType () const;  ; const std::string & GetId () const;  ; void SetCssClass (const std::string &cl);  ; void SetId (const std::string &id);  ; virtual void UseStyle (const std::shared_ptr< RStyle > &style);  . Public Attributes; RAttrBorder border {this, ""border""};  ! frame border attributes ;  ; RAttrValue< bool > drawAxes {this, ""drawAxes"", false};  ! draw axes by frame ;  ; RAttrFill fill {this, ""fill""};  ! frame fill attributes ;  ; RAttrValue< bool > gridX {this, ""gridX"", false};  ! show grid for X axis ;  ; RAttrValue< bool > gridY {this, ""gridY"", false};  ! show grid for Y axis ;  ; RAttrMargins margins {this, ""margins""};  ! frame margins relative to pad ;  ; RAttrValue< bool > swapX {this, ""swapX"", false};  ! swap position of X axis ;  ; RAttrValue< bool > swapY ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RFrame.html:969,config,configured,969,doc/master/classROOT_1_1Experimental_1_1RFrame.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RFrame.html,1,['config'],['configured']
Modifiability,". ROOT: ROOT::Experimental::RLogChannel Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Experimental::RLogChannel Class Reference. ; A log configuration for a channel, e.g. ; ""RHist"". Each ROOT module has its own log, with potentially distinct verbosity. ; Definition at line 101 of file RLogger.hxx. Public Member Functions;  RLogChannel ()=default;  Construct an anonymous channel. ;  ;  RLogChannel (const std::string &name);  Construct a log channel given its name, which is part of the diagnostics. ;  ;  RLogChannel (ELogLevel verbosity);  Construct an anonymous channel with a default verbosity. ;  ; ELogLevel GetEffectiveVerbosity (const RLogManager &mgr) const;  ; const std::string & GetName () const;  ; ELogLevel GetVerbosity () const;  ; ELogLevel SetVerbosity (ELogLevel verbosity);  ;  Public Member Functions inherited from ROOT::Experimental::RLogDiagCount; long long GetNumErrors () const;  Returns the current number of errors. ;  ; long long GetNumFatalErrors () const;  Returns the current number of fatal errors. ;  ; long long GetNumWarnings () const;  Number of fatal errors. ;  ; void Increment (ELogLevel severity);  Increase warning or error count. ;  . Private Attributes; std::string fName;  Name as shown in diagnostics. ;  ; ELogLevel fVerbosity = ELogLevel::kUnset;  Verbosity of this channel. By default, use the global verbosity. ;  . Additional Inherited Members;  Protected Attributes inherited from ROOT::Experimental::RLogDiagCount; std::atomic< long long > fNumErrors {0ll};  Number of warnings. ;  ; std::atomic< long long > fNumFatalErrors {0ll};  Number of errors. ;  ; std::atomic< long long > fNumWarnings {0ll};  . #include <ROOT/RLogger.hxx>. Inheritance diagram for ROOT::Experimental::RLogChannel:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constru",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RLogChannel.html:289,config,configuration,289,doc/master/classROOT_1_1Experimental_1_1RLogChannel.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RLogChannel.html,2,"['config', 'inherit']","['configuration', 'inherited']"
Modifiability,". ROOT: ROOT::Experimental::RLogChannel Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Experimental::RLogChannel Class Reference. ; A log configuration for a channel, e.g. ; ""RHist"". Each ROOT module has its own log, with potentially distinct verbosity. ; Definition at line 101 of file RLogger.hxx. Public Member Functions;  RLogChannel ()=default;  Construct an anonymous channel. ;  ;  RLogChannel (const std::string &name);  Construct a log channel given its name, which is part of the diagnostics. ;  ;  RLogChannel (ELogLevel verbosity);  Construct an anonymous channel with a default verbosity. ;  ; ELogLevel GetEffectiveVerbosity (const RLogManager &mgr) const;  ; const std::string & GetName () const;  ; ELogLevel GetVerbosity () const;  ; ELogLevel SetVerbosity (ELogLevel verbosity);  ;  Public Member Functions inherited from ROOT::Experimental::RLogDiagCount; long long GetNumErrors () const;  Returns the current number of errors. ;  ; long long GetNumFatalErrors () const;  Returns the current number of fatal errors. ;  ; long long GetNumWarnings () const;  Number of fatal errors. ;  ; void Increment (ELogLevel severity);  Increase warning or error count. ;  . Private Attributes; std::string fName;  Name as shown in diagnostics. ;  ; ELogLevel fVerbosity = ELogLevel::kUnset;  Verbosity of this channel. By default, use the global verbosity. ;  . Additional Inherited Members;  Protected Attributes inherited from ROOT::Experimental::RLogDiagCount; std::atomic< long long > fNumErrors {0ll};  Number of warnings. ;  ; std::atomic< long long > fNumFatalErrors {0ll};  Number of errors. ;  ; std::atomic< long long > fNumWarnings {0ll};  . #include <ROOT/RLogger.hxx>. Inheritance diagram for ROOT::Experimental::RLogChannel:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Construc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1Experimental_1_1RLogChannel.html:288,config,configuration,288,doc/v632/classROOT_1_1Experimental_1_1RLogChannel.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1Experimental_1_1RLogChannel.html,2,"['config', 'inherit']","['configuration', 'inherited']"
Modifiability,". ROOT: ROOT::Experimental::RNTupleImporter::RCStringTransformation Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Experimental::RNTupleImporter::RCStringTransformation Struct Reference. ; Transform a NULL terminated C string branch into an std::string field. ; Definition at line 196 of file RNTupleImporter.hxx. Public Member Functions;  RCStringTransformation (std::size_t b, std::size_t f);  ;  ~RCStringTransformation () override=default;  ; RResult< void > Transform (const RImportBranch &branch, RImportField &field) final;  ;  Public Member Functions inherited from ROOT::Experimental::RNTupleImporter::RImportTransformation;  RImportTransformation (std::size_t branchIdx, std::size_t fieldIdx);  ; virtual ~RImportTransformation ()=default;  . Additional Inherited Members;  Public Attributes inherited from ROOT::Experimental::RNTupleImporter::RImportTransformation; std::size_t fImportBranchIdx = 0;  ; std::size_t fImportFieldIdx = 0;  . Inheritance diagram for ROOT::Experimental::RNTupleImporter::RCStringTransformation:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RCStringTransformation(). ROOT::Experimental::RNTupleImporter::RCStringTransformation::RCStringTransformation ; (; std::size_t ; b, . std::size_t ; f . ). inline . Definition at line 197 of file RNTupleImporter.hxx. ◆ ~RCStringTransformation(). ROOT::Experimental::RNTupleImporter::RCStringTransformation::~RCStringTransformation ; (; ). overridedefault . Member Function Documentation. ◆ Transform(). ROOT::Experimental::RResult< void > ROOT::Experimental::RNTupleImporter::RCStringTransformation::Transform ; (; const RImportBranch & ; branch, . RImportField & ; field . ). finalvirtual . Implements ROOT::Experimental::RNTupleImporter::RImportTransformation.; Definition at line 73 of file RNTu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Experimental_1_1RNTupleImporter_1_1RCStringTransformation.html:689,inherit,inherited,689,doc/master/structROOT_1_1Experimental_1_1RNTupleImporter_1_1RCStringTransformation.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Experimental_1_1RNTupleImporter_1_1RCStringTransformation.html,2,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Experimental::RPadBase Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Protected Member Functions |; Private Types |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Experimental::RPadBase Class ReferenceabstractGraphics » ROOT7 Graphics » ROOT7 Pad related classes. ; Base class for graphic containers for RDrawable-s. ; AuthorsAxel Naumann axel@.nosp@m.cern.nosp@m..ch Sergey Linev s.lin.nosp@m.ev@g.nosp@m.si.de ; Date2019-10-02 ; WarningThis is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome! ; Definition at line 37 of file RPadBase.hxx. Public Types; using Primitives_t = std::vector< std::shared_ptr< RDrawable > >;  ;  Public Types inherited from ROOT::Experimental::RDrawable; using Version_t = uint64_t;  . Public Member Functions;  ~RPadBase () override;  ; template<class T , class... ARGS> ; std::shared_ptr< T > Add (ARGS... args);  Add drawable of specified class T. ;  ; std::shared_ptr< RFrame > AddFrame ();  Add a frame object for the pad. ;  ; std::shared_ptr< RPad > AddPad (const RPadPos &, const RPadExtent &);  Add subpad. ;  ; std::vector< std::vector< std::shared_ptr< RPad > > > Divide (int nHoriz, int nVert, const RPadExtent &padding={});  Divide this pad into a grid of subpads with padding in between. ;  ; template<class T , class... ARGS> ; std::shared_ptr< T > Draw (ARGS... args);  Create drawable of specified class T. ;  ; template<class T , class... ARGS> ; auto Draw (const std::shared_ptr< T > &what, ARGS... args);  Add object to be painted. ;  ; std::shared_ptr< RDrawable > Draw (std::shared_ptr< RDrawable > &&drawable);  Add existing drawable instance to canvas. ;  ; const RPadBase * FindPadForPrimitiveWithDisplayId (const std::string &display_id) const;  Find subpad which contains primitive with given display id. ;  ; std::shar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RPadBase.html:864,inherit,inherited,864,doc/master/classROOT_1_1Experimental_1_1RPadBase.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RPadBase.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Experimental::TTreeReaderFast Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::Experimental::TTreeReaderFast Class Reference. . Definition at line 38 of file TTreeReaderFast.hxx. Classes; class  Iterator_t;  . Public Types; typedef Iterator_t iterator;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TTreeReaderFast ();  ;  TTreeReaderFast (const char *keyname, TDirectory *dir=nullptr);  ;  TTreeReaderFast (TTree *tree);  ;  ~TTreeReaderFast () override;  Tell all value readers that the tree reader does not exist anymore. ;  ; Iterator_t begin ();  Return an iterator to the 0th TTree entry. ;  ; Iterator_t end () const;  ; TTreeReader::EEntryStatus GetEntryStatus () const;  ; TTree * GetTree () const;  ; TClass * IsA () const override;  ; TTreeReader::EEntryStatus SetEntriesRange (Long64_t first, Long64_t last);  ; TTreeReader::EEntryStatus SetEntry (Long64_t);  Set an entry to be read. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1TTreeReaderFast.html:563,inherit,inherited,563,doc/master/classROOT_1_1Experimental_1_1TTreeReaderFast.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1TTreeReaderFast.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Experimental::XRooFit::xRooFit::StoredFitResult Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; ROOT::Experimental::XRooFit::xRooFit::StoredFitResult Class Reference. . Definition at line 113 of file xRooFit.h. Public Member Functions;  StoredFitResult (const std::shared_ptr< RooFitResult > &_fr);  ;  StoredFitResult (RooFitResult *_fr);  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the nam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooFit_1_1StoredFitResult.html:734,inherit,inherited,734,doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooFit_1_1StoredFitResult.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooFit_1_1StoredFitResult.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Experimental::XRooFit::xRooHypoSpace Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; ROOT::Experimental::XRooFit::xRooHypoSpace Class Reference. . Definition at line 27 of file xRooHypoSpace.h. Public Member Functions; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from ROOT::Experimental::XRooFit::xRooNLLVar::xRooHypoSpace;  xRooHypoSpace (const char *name="""", const char *title="""");  ;  xRooHypoSpace (const RooStats::HypoTestInverterResult *result);  ; bool AddModel (const xRooNode &pdf, const char *validity="""");  ; xRooHypoPoint & AddPoint (const char *coords="""");  ; xRooHypoPoint & AddPoint (double value);  ; int AddPoints (const char *parName, size_t nPoints, double low, double high);  ; RooArgList axes () const;  ; void Draw (Option_t *opt="""") override;  Default Draw method for all objects. ;  ; xValueWithError findlimit (const char *opt, double relUncert=std::numeric_limits< double >::infinity(), unsigned int maxTries=20);  ; std::shared_ptr< TGraphErrors > graph (const char *opt) const;  ; std::shared_ptr< TMultiGraph > graphs (const char *opt);  ; xValueWithError limit (const char *type=""cls"", double nSigma=std::numeric_limits< double >::quiet_NaN()) const;  ; std::map< std::string, xValueWithError > limits (const char *opt=""cls"", const std::vector< double > &nSigmas={0, 1, 2, -1, -2, std::numeric_limits< double >::quiet_NaN()}, double relUncert=std::numeric_limits< double >::infinity());  ; void LoadFits (const char *apath);  ; std::shared_ptr< RooArgSet > pars () const;  ; std::shared_ptr< xRooNode > pdf (const char *parValues="""") const;  ; std::shared_ptr< xRooNode > pdf (const RooAbsCollection &parValues) const;  ; RooArgList po",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooHypoSpace.html:589,inherit,inherited,589,doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooHypoSpace.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooHypoSpace.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Experimental::XRooFit::xRooNode::InteractiveObject Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; ROOT::Experimental::XRooFit::xRooNode::InteractiveObject Class Reference. . Definition at line 465 of file xRooNode.h. Public Member Functions; void Interactive_PLLPlot (TVirtualPad *pad, TObject *obj, Int_t x, Int_t y);  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  Stream an object of class TQObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single parameter. ;  ; template<typename... T> ; void EmitVA (const char *signal_name, Int_t, const T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of this class. ;  ; TList * GetListOfConnections () const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode_1_1InteractiveObject.html:694,inherit,inherited,694,doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode_1_1InteractiveObject.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode_1_1InteractiveObject.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Fit::FcnAdapter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Fit::FcnAdapter Class Reference. . Definition at line 27 of file FcnAdapter.h. Public Member Functions;  FcnAdapter (void(*fcn)(int &, double *, double &, double *, int), int dim=0);  ;  ~FcnAdapter () override;  ; ROOT::Math::IMultiGenFunction * Clone () const override;  Clone a function. ;  ; unsigned int NDim () const override;  Retrieve the dimension of the function. ;  ; void SetDimension (int dim);  ;  Public Member Functions inherited from ROOT::Math::IBaseFunctionMultiDimTempl< T >; virtual ~IBaseFunctionMultiDimTempl ()=default;  ; virtual bool HasGradient () const;  ; T operator() (const T *x) const;  Evaluate the function at a point x[]. ;  . Private Member Functions; double DoEval (const double *x) const override;  . Private Attributes; unsigned int fDim;  ; void(* fFCN )(int &, double *, double &, double *, int);  . Additional Inherited Members;  Public Types inherited from ROOT::Math::IBaseFunctionMultiDimTempl< T >; typedef T BackendType;  ; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  . #include <Fit/FcnAdapter.h>. Inheritance diagram for ROOT::Fit::FcnAdapter:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ FcnAdapter(). ROOT::Fit::FcnAdapter::FcnAdapter ; (; void(*)(int &, double *, double &, double *, int) ; fcn, . int ; dim = 0 . ). inline . Definition at line 31 of file FcnAdapter.h. ◆ ~FcnAdapter(). ROOT::Fit::FcnAdapter::~FcnAdapter ; (; ). inlineoverride . Definition at line 36 of file FcnAdapter.h. Member Function Documentation. ◆ Clone(). ROOT::Math::IMultiGenFunction * ROOT::Fit::FcnAdapter::Clone ; (; ); const. inlineoverridevirtual . Clone a function. ; Each derived class must implement their",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1FcnAdapter.html:692,inherit,inherited,692,doc/master/classROOT_1_1Fit_1_1FcnAdapter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1FcnAdapter.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Fit::FitConfig Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; ROOT::Fit::FitConfig Class ReferenceMath » MathCore » Fitting and Parameter Estimation » User Fitting classes. ; Class describing the configuration of the fit, options and parameter settings using the ROOT::Fit::ParameterSettings class. ; Definition at line 47 of file FitConfig.h. Public Member Functions;  FitConfig (const FitConfig &rhs);  ;  FitConfig (unsigned int npar=0);  Default constructor. ;  ;  ~FitConfig ();  Destructor. ;  ; ROOT::Math::Minimizer * CreateMinimizer ();  create a new minimizer according to chosen configuration ;  ; template<class T > ; void CreateParamsSettings (const ROOT::Math::IParamMultiFunctionTempl< T > &func);  set the parameter settings from a model function. ;  ; const std::string & MinimizerAlgoType () const;  return type of minimizer algorithms ;  ; std::string MinimizerName () const;  return Minimizer full name (type / algorithm) ;  ; ROOT::Math::MinimizerOptions & MinimizerOptions ();  access to the minimizer control parameter (non const method) ;  ; const std::string & MinimizerType () const;  return type of minimizer package ;  ; bool MinosErrors () const;  do minos errors analysis on the parameters ;  ; const std::vector< unsigned int > & MinosParams () const;  return vector of parameter indices for which the Minos Error will be computed ;  ; bool NormalizeErrors () const;  flag to check if resulting errors are be normalized according to chi2/ndf ;  ; unsigned int NPar () const;  number of parameters settings ;  ; FitConfig & operator= (const FitConfig &rhs);  ; bool ParabErrors () const;  do analysis for parabolic errors ;  ; std::vector< ROOT::Fit::ParameterSettings > & ParamsSettings ();  get the vector of parameter settings (non-const method) ;  ; const std::vector< ROOT:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1FitConfig.html:389,config,configuration,389,doc/master/classROOT_1_1Fit_1_1FitConfig.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1FitConfig.html,2,['config'],['configuration']
Modifiability,". ROOT: ROOT::Fit::FitResult Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Protected Member Functions |; Protected Attributes |; Friends |; List of all members ; ROOT::Fit::FitResult Class ReferenceMath » MathCore » Fitting and Parameter Estimation » User Fitting classes. ; class containing the result of the fit and all the related information (fitted parameter values, error, covariance matrix and minimizer result information) Contains a pointer also to the fitted (model) function, modified with the fit parameter values. ; When the fit is valid, it is constructed from a Minimizer and a model function pointer ; Definition at line 47 of file FitResult.h. Public Types; typedef ROOT::Math::IParamMultiFunction IModelFunction;  . Public Member Functions;  FitResult ();  Default constructor for an empty (non valid) fit result. ;  ;  FitResult (const FitConfig &fconfig);  Constructor from a fit-config for a dummy fit (e.g. ;  ; virtual ~FitResult ();  Destructor. ;  ; double Chi2 () const;  Return the Chi2 value after fitting In case of unbinned fits (or not defined one, see the documentation of Fitter::FitFCN) return -1 In case of binned likelihood fits (Poisson Likelihood) return the 2 * negative log-likelihood ratio using the definition of Baker-Cousins. ;  ; bool Contour (unsigned int ipar, unsigned int jpar, unsigned int &npoints, double *pntsx, double *pntsy, double confLevel=0.683);  create contour of two parameters around the minimum pass as option confidence level: default is a value of 0.683 ;  ; double Correlation (unsigned int i, unsigned int j) const;  retrieve correlation elements ;  ; double CovMatrix (unsigned int i, unsigned int j) const;  retrieve covariance matrix element ;  ; int CovMatrixStatus () const;  covariance matrix status code using Minuit convention : =0 not calculated, =1 approximated, =2 made pos def , =3 accurate ;  ; double E",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1FitResult.html:1018,config,config,1018,doc/master/classROOT_1_1Fit_1_1FitResult.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1FitResult.html,1,['config'],['config']
Modifiability,". ROOT: ROOT::Fit::Fitter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; ROOT::Fit::Fitter Class ReferenceMath » MathCore » Fitting and Parameter Estimation » User Fitting classes. ; Fitter class, entry point for performing all type of fits. ; Fits are performed using the generic ROOT::Fit::Fitter::Fit method. The inputs are the data points and a model function (using a ROOT::Math::IParamFunction) The result of the fit is returned and kept internally in the ROOT::Fit::FitResult class. The configuration of the fit (parameters, options, etc...) are specified in the ROOT::Math::FitConfig class. After fitting the config of the fit will be modified to have the new values the resulting parameter of the fit with step sizes equal to the errors. FitConfig can be preserved with initial parameters by calling FitConfig.SetUpdateAfterFit(false); ; Definition at line 77 of file Fitter.h. Public Types; typedef ROOT::Math::IMultiGenFunction BaseFunc;  ; typedef ROOT::Math::IMultiGradFunction BaseGradFunc;  ; typedef ROOT::Math::IParamGradFunction IGradModel1DFunction;  ; typedef ROOT::Math::IParamMultiGradFunction IGradModelFunction;  ; typedef ROOT::Math::IParamMultiGradFunction IGradModelFunction_v;  ; typedef ROOT::Math::IParamFunction IModel1DFunction;  ; typedef ROOT::Math::IParamMultiFunction IModelFunction;  ; typedef ROOT::Math::IParamMultiFunction IModelFunction_v;  ; template<class T > ; using IModelFunctionTempl = ROOT::Math::IParamMultiFunctionTempl< T >;  ; typedef void(* MinuitFCN_t) (int &npar, double *gin, double &f, double *u, int flag);  fit using user provided FCN with Minuit-like interface If npar = 0 it is assumed that the parameters are specified in the parameter settings created before For the options same consideration as in the previous method ;  . Public Member Function",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1Fitter.html:685,config,configuration,685,doc/master/classROOT_1_1Fit_1_1Fitter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1Fitter.html,2,['config'],"['config', 'configuration']"
Modifiability,". ROOT: ROOT::Internal::TBranchDescriptor Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::Internal::TBranchDescriptor Class Reference. . Definition at line 55 of file TTreeReaderGenerator.h. Public Member Functions;  TBranchDescriptor (const char *type, TVirtualStreamerInfo *info, const char *branchname, const char *subBranchPrefix, ELocation isclones, const TString &containerName, TBranchDescriptor *parent=nullptr);  ; bool IsClones () const;  ; bool IsSTL () const;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Internal_1_1TBranchDescriptor.html:649,inherit,inherited,649,doc/master/classROOT_1_1Internal_1_1TBranchDescriptor.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Internal_1_1TBranchDescriptor.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Internal::TBranchProxyClassDescriptor Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Internal::TBranchProxyClassDescriptor Class Reference. . Definition at line 26 of file TBranchProxyClassDescriptor.h. Public Types; enum  ELocation { ;   kOut =0; , kClones; , kSTL; , kInsideClones; , ;   kInsideSTL. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TBranchProxyClassDescriptor (const char *branchname);  Constructor for a branch constructed from a leaf list. ;  ;  TBranchProxyClassDescriptor (const char *type, TVirtualStreamerInfo *info, const char *branchname, const char *branchPrefix, ELocation isclones, UInt_t splitlevel, const TString &containerName);  Constructor. ;  ;  TBranchProxyClassDescriptor (const char *type, TVirtualStreamerInfo *info, const char *branchname, ELocation isclones, UInt_t splitlevel, const TString &containerName);  Constructor. ;  ; void AddDescriptor (TBranchProxyDescriptor *desc, bool isBase);  Add a descriptor to this proxy. ;  ; const char * GetBranchName () const;  Get the branch name. ;  ; TString GetContainerName () const;  Return the name of the container holding this class, if any. ;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Internal_1_1TBranchProxyClassDescriptor.html:565,inherit,inherited,565,doc/master/classROOT_1_1Internal_1_1TBranchProxyClassDescriptor.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Internal_1_1TBranchProxyClassDescriptor.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Internal::TCheckHashRecursiveRemoveConsistency Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; ROOT::Internal::TCheckHashRecursiveRemoveConsistency Class Reference. . Definition at line 38 of file TCheckHashRecursiveRemoveConsistency.h. Classes; struct  Value;  . Public Types; enum  EResult { kInconsistent; , kInconclusive; , kConsistent; };  ; using Value_t = Value;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TCheckHashRecursiveRemoveConsistency ();  ;  ~TCheckHashRecursiveRemoveConsistency ();  ; void Add (TObject *obj);  ; EResult CheckRecursiveRemove (TClass &classRef);  ; TClass * FindMissingRecursiveRemove (TClass &classRef);  ; EResult HasConsistentHashMember (TClass &classRef);  ; TClass * IsA () const override;  ; void RecursiveRemove (TObject *obj) override;  Recursively remove this object from a list. ;  ; void SlowRemove (TObject *obj);  ; void Streamer (TBuffer &R__b) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; bool VerifyRecursiveRemove (const char *classname);  ; bool VerifyRecursiveRemove (TClass &classRef);  ;  Public Member Functions inherited from TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Internal_1_1TCheckHashRecursiveRemoveConsistency.html:605,inherit,inherited,605,doc/master/classROOT_1_1Internal_1_1TCheckHashRecursiveRemoveConsistency.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Internal_1_1TCheckHashRecursiveRemoveConsistency.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Internal::TTreeReaderDescriptor Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::Internal::TTreeReaderDescriptor Class Reference. . Definition at line 40 of file TTreeReaderGenerator.h. Public Types; enum  ReaderType { kValue; , kArray; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TTreeReaderDescriptor (ReaderType type, TString dataType, TString name, TString branchName);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Internal_1_1TTreeReaderDescriptor.html:435,inherit,inherited,435,doc/master/classROOT_1_1Internal_1_1TTreeReaderDescriptor.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Internal_1_1TTreeReaderDescriptor.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Internal::TreeUtils::RNoCleanupNotifier Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; ROOT::Internal::TreeUtils::RNoCleanupNotifier Class Reference. . Definition at line 64 of file InternalTreeUtils.hxx. Public Member Functions;  RNoCleanupNotifier ();  ; TClass * IsA () const override;  ; void RegisterChain (TChain &c);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNotifyLink< RNoCleanupNotifierHelper >;  TNotifyLink (RNoCleanupNotifierHelper *subscriber);  ; TClass * IsA () const override;  ; Bool_t Notify () override;  Call Notify on our subscriber and propagate the call to the next link. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNotifyLinkBase; void Clear (Option_t *="""") override;  ; TObject * GetNext () const;  ; TClass * IsA () const override;  ; Bool_t IsLinked ();  ; template<class Chain > ; void PrependLink (Chain &chain);  Set this link as the head of the chain's list of notify subscribers. ;  ; template<class Chain > ; void RemoveLink (Chain &chain);  Remove this link from a chain's list of notify subscribers. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstrac",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Internal_1_1TreeUtils_1_1RNoCleanupNotifier.html:687,inherit,inherited,687,doc/master/classROOT_1_1Internal_1_1TreeUtils_1_1RNoCleanupNotifier.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Internal_1_1TreeUtils_1_1RNoCleanupNotifier.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Internal::VecOps::SmallVectorTemplateCommon< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Protected Member Functions |; Private Types |; Private Member Functions |; List of all members ; ROOT::Internal::VecOps::SmallVectorTemplateCommon< T > Class Template Reference. ; template<typename T>; class ROOT::Internal::VecOps::SmallVectorTemplateCommon< T >This is the part of SmallVectorTemplateBase which does not depend on whether the type T is a POD. ; Definition at line 206 of file RVec.hxx. Public Types; using const_iterator = const T *;  ; using const_pointer = const T *;  ; using const_reference = const T &;  ; using const_reverse_iterator = std::reverse_iterator< const_iterator >;  ; using difference_type = ptrdiff_t;  ; using iterator = T *;  ; using pointer = T *;  ; using reference = T &;  ; using reverse_iterator = std::reverse_iterator< iterator >;  ; using size_type = size_t;  ; using value_type = T;  ;  Public Types inherited from ROOT::Internal::VecOps::SmallVectorBase; using Size_T = int32_t;  . Public Member Functions; reference back ();  ; const_reference back () const;  ; const_iterator begin () const noexcept;  ; iterator begin () noexcept;  ; size_t capacity () const noexcept;  ; size_t capacity_in_bytes () const;  ; const_iterator cbegin () const noexcept;  ; const_iterator cend () const noexcept;  ; const_reverse_iterator crbegin () const noexcept;  ; const_reverse_iterator crend () const noexcept;  ; const_pointer data () const noexcept;  Return a pointer to the vector's buffer, even if empty(). ;  ; pointer data () noexcept;  Return a pointer to the vector's buffer, even if empty(). ;  ; bool empty () const;  ; const_iterator end () const noexcept;  ; iterator end () noexcept;  ; reference front ();  ; const_reference front () const;  ; size_type max_size () const noexcept;  ; const_reverse_iterator rbegin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Internal_1_1VecOps_1_1SmallVectorTemplateCommon.html:1083,inherit,inherited,1083,doc/master/classROOT_1_1Internal_1_1VecOps_1_1SmallVectorTemplateCommon.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Internal_1_1VecOps_1_1SmallVectorTemplateCommon.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Math::AdaptiveIntegratorMultiDim Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; ROOT::Math::AdaptiveIntegratorMultiDim Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Numerical Integration. ; Class for adaptive quadrature integration in multi-dimensions using rectangular regions. ; Algorithm from A.C. Genz, A.A. Malik, An adaptive algorithm for numerical integration over an N-dimensional rectangular region, J. Comput. Appl. Math. 6 (1980) 295-302.; Converted/adapted by R.Brun to C++ from Fortran CERNLIB routine RADMUL (D120) The new code features many changes compared to the Fortran version.; Control parameters are:. \( minpts \): Minimum number of function evaluations requested. Must not exceed maxpts. if minpts < 1 minpts is set to \( 2^n +2n(n+1) +1 \) where n is the function dimension; \( maxpts \): Maximum number of function evaluations to be allowed. \( maxpts >= 2^n +2n(n+1) +1 \) if \( maxpts<minpts \), \( maxpts \) is set to \( 10minpts \); \( epstol \), \( epsrel \) : Specified relative and absolute accuracy. The integral will stop if the relative error is less than relative tolerance OR the absolute error is less than the absolute tolerance; The class computes in addition to the integral of the function in the desired interval:. an estimation of the relative accuracy of the result.; number of function evaluations performed.; status code: 0. Normal exit. . At least minpts and at most maxpts calls to the function were performed.; maxpts is too small for the specified accuracy eps. The result and relerr contain the values obtainable for the specified value of maxpts.; size is too small for the specified number MAXPTS of function evaluations.; n<2 or n>15. Method:; An integration rule of degree seven is used together with a certain strategy of subdi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1AdaptiveIntegratorMultiDim.html:417,adapt,adaptive,417,doc/master/classROOT_1_1Math_1_1AdaptiveIntegratorMultiDim.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1AdaptiveIntegratorMultiDim.html,3,['adapt'],"['adapted', 'adaptive']"
Modifiability,". ROOT: ROOT::Math::Boost Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; ROOT::Math::Boost Class ReferenceMath » Physics Vectors. ; Lorentz boost class with the (4D) transformation represented internally by a 4x4 orthosymplectic matrix. ; A variable names bgamma appears in several places in this file.; See also BoostX, BoostY and BoostZ for classes representing specialized Lorentz boosts. Also, the 3-D rotation classes can be considered to be special Lorentz transformations which do not mix space and time components.; See alsoOverview of the physics vector library; A few words of elaboration are needed to make its meaning clear. On page 69 of Misner, Thorne and Wheeler, (Exercise 2.7) the elements of the matrix for a general Lorentz boost are given as. \[ \Lambda^{j'}_k = \Lambda^{k'}_j; = (\gamma - 1) n^j n^k + \delta^{jk} \]. where the n^i are unit vectors in the direction of the three spatial axes. Using the definitions, \( n^i = \beta_i/\beta \) , then, for example,. \[ \Lambda_{xy} = (\gamma - 1) n_x n_y; = (\gamma - 1) \beta_x \beta_y/\beta^2 \]. By definition, ; \[ \gamma^2 = 1/(1 - \beta^2) \]. so that ; \[ \gamma^2 \beta^2 = \gamma^2 - 1 \]. or ; \[ \beta^2 = (\gamma^2 - 1)/\gamma^2 \]. If we insert this into the expression for \( \Lambda_{xy} \), we get. \[ \Lambda_{xy} = (\gamma - 1) \gamma^2/(\gamma^2 - 1) \beta_x \beta_y \]. or, finally. \[ \Lambda_{xy} = \gamma^2/(\gamma+1) \beta_x \beta_y \]. The expression \( \gamma^2/(\gamma+1) \) is what we call bgamma in the code below. ; Definition at line 47 of file Boost.h. Public Types; enum  EBoostMatrixIndex { ;   kXX = 0; , kXY = 1; , kXZ = 2; , kXT = 3; , ;   kYY = 4; , kYZ = 5; , kYT = 6; , kZZ = 7; , ;   kZT = 8; , kTT = 9. };  ; enum  ELorentzRotationMatrixIndex { ;   kLXX = 0; , kLXY = 1; , kLXZ = 2; , kLXT = 3; , ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Boost.html:432,variab,variable,432,doc/master/classROOT_1_1Math_1_1Boost.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Boost.html,1,['variab'],['variable']
Modifiability,". ROOT: ROOT::Math::CDFWrapper Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::Math::CDFWrapper Struct Reference. . Definition at line 40 of file GoFTest.cxx. Public Member Functions;  CDFWrapper (const IGenFunction &cdf, Double_t xmin=0, Double_t xmax=-1);  ;  ~CDFWrapper () override;  ; IGenFunction * Clone () const override;  Clone a function. ;  ; Double_t DoEval (Double_t x) const override;  implementation of the evaluation function. Must be implemented by derived classes ;  ;  Public Member Functions inherited from ROOT::Math::IBaseFunctionOneDim; virtual ~IBaseFunctionOneDim ()=default;  ; virtual bool HasGradient () const;  ; double operator() (const double *x) const;  Evaluate the function at a point x[]. ;  ; double operator() (double x) const;  Evaluate the function at a point x. ;  . Public Attributes; const IGenFunction * fCDF;  ; Double_t fNorm;  ; Double_t fXmax;  ; Double_t fXmin;  . Additional Inherited Members;  Public Types inherited from ROOT::Math::IBaseFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  . Inheritance diagram for ROOT::Math::CDFWrapper:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~CDFWrapper(). ROOT::Math::CDFWrapper::~CDFWrapper ; (; ). inlineoverride . Definition at line 48 of file GoFTest.cxx. ◆ CDFWrapper(). ROOT::Math::CDFWrapper::CDFWrapper ; (; const IGenFunction & ; cdf, . Double_t ; xmin = 0, . Double_t ; xmax = -1 . ). inline . Definition at line 50 of file GoFTest.cxx. Member Function Documentation. ◆ Clone(). IGenFunction * ROOT::Math::CDFWrapper::Clone ; (; ); const. inlineoverridevirtual . Clone a function. ; Each derived class will implement their version of the private DoClone method. ; Implements ROOT::Math::IBaseFunctionOneDim.; Definition at line 71 of file GoFTest.cx",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1CDFWrapper.html:662,inherit,inherited,662,doc/master/structROOT_1_1Math_1_1CDFWrapper.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1CDFWrapper.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Math::DistSampler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; ROOT::Math::DistSampler Class ReferenceabstractMath » MathCore » Interface classes for Random number generation. ; Interface class for generic sampling of a distribution, i.e. ; generating random numbers according to arbitrary distributions ; Definition at line 57 of file DistSampler.h. Public Member Functions;  DistSampler ();  default constructor ;  ; virtual ~DistSampler ();  virtual destructor ;  ; virtual bool Generate (unsigned int nevt, const int *nbins, ROOT::Fit::BinData &data, bool extend=true, bool expErr=true);  Generate a binned data set. ;  ; virtual bool Generate (unsigned int nevt, double *data, bool eventRow=false);  Generate a vector of events by filling the passed data vector. ;  ; bool Generate (unsigned int nevt, int nbins, double xmin, double xmax, ROOT::Fit::BinData &data, bool extend=true, bool expErr=true);  Same as before but passing the range in case of 1 dim data. ;  ; virtual bool Generate (unsigned int nevt, ROOT::Fit::UnBinData &data);  Generate a un-binned data set by filling the given data set object. ;  ; virtual TRandom * GetRandom ();  Get the random engine used by the sampler. ;  ; bool HasParentPdf () const;  Check if there is a parent distribution defined. ;  ; virtual bool Init (const char *="""");  Initialize the sampling generator with the given algorithm. ;  ; virtual bool Init (const DistSamplerOptions &opt);  Initialize the generators with the given DistSamplerOption object. ;  ; unsigned int NDim () const;  return the dimension of the parent distribution (and the data) ;  ; const ROOT::Math::IMultiGenFunction & ParentPdf () const;  Get the parent distribution function (must be called after setting the function). ;  ; const double * Sample ();  Sample one event and return an ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1DistSampler.html:751,extend,extend,751,doc/master/classROOT_1_1Math_1_1DistSampler.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1DistSampler.html,1,['extend'],['extend']
Modifiability,". ROOT: ROOT::Math::GSLDerivator Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Math::GSLDerivator Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Numerical Differentiation. ; Class for computing numerical derivative of a function based on the GSL numerical algorithm This class is implemented using the numerical derivatives algorithms provided by GSL (see GSL Online Manual ). ; Definition at line 62 of file GSLDerivator.h. Public Member Functions;  GSLDerivator ();  Default Constructor of a GSLDerivator class based on GSL numerical differentiation algorithms. ;  ; virtual ~GSLDerivator ();  destructor (no operations) ;  ; double EvalBackward (double x, double h);  Computes the numerical derivative at a point x using an adaptive backward difference algorithm with a step size h. ;  ; double EvalCentral (double x, double h);  Computes the numerical derivative at a point x using an adaptive central difference algorithm with a step size h. ;  ; double EvalForward (double x, double h);  Computes the numerical derivative at a point x using an adaptive forward difference algorithm with a step size h. ;  ; void SetFunction (const IGenFunction &f);  Set the function for calculating the derivatives. ;  ; void SetFunction (GSLFuncPointer f, void *p=nullptr);  Set the function f for evaluating the derivative using a GSL function pointer type. ;  . — Static methods —; int fStatus;  ; double fResult;  ; double fError;  ; GSLFunctionWrapper fFunction;  ; int Status () const;  return the error status of the last integral calculation ;  ; double Result () const;  return the result of the last derivative calculation ;  ; double Error () const;  return the estimate of the absolute error of the last derivative calculation ;  ; static double EvalCentral (const IGenFunction &f, double x, double h);  Computes the numerical derivative of a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLDerivator.html:884,adapt,adaptive,884,doc/master/classROOT_1_1Math_1_1GSLDerivator.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLDerivator.html,1,['adapt'],['adaptive']
Modifiability,". ROOT: ROOT::Math::GSLFunctionAdapter< UserFunc > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; ROOT::Math::GSLFunctionAdapter< UserFunc > Class Template Reference. ; template<class UserFunc>; class ROOT::Math::GSLFunctionAdapter< UserFunc >Class for adapting any C++ functor class to C function pointers used by GSL. ; The templated C++ function class must implement:; double operator( double x) and if the derivatives are required: double Gradient( double x); This class defines static methods with will be used to fill the gsl_function and gsl_function_fdf structs used by GSL. See for examples the GSL online manual ; Definition at line 63 of file GSLFunctionAdapter.h. Public Member Functions;  GSLFunctionAdapter ();  ; virtual ~GSLFunctionAdapter ();  . Static Public Member Functions; static double Df (double x, void *p);  ; static double F (double x, void *p);  ; static void Fdf (double x, void *p, double *f, double *df);  . #include <Math/GSLFunctionAdapter.h>; Constructor & Destructor Documentation. ◆ GSLFunctionAdapter(). template<class UserFunc > . ROOT::Math::GSLFunctionAdapter< UserFunc >::GSLFunctionAdapter ; (; ). inline . Definition at line 67 of file GSLFunctionAdapter.h. ◆ ~GSLFunctionAdapter(). template<class UserFunc > . virtual ROOT::Math::GSLFunctionAdapter< UserFunc >::~GSLFunctionAdapter ; (; ). inlinevirtual . Definition at line 68 of file GSLFunctionAdapter.h. Member Function Documentation. ◆ Df(). template<class UserFunc > . static double ROOT::Math::GSLFunctionAdapter< UserFunc >::Df ; (; double ; x, . void * ; p . ). inlinestatic . Definition at line 77 of file GSLFunctionAdapter.h. ◆ F(). template<class UserFunc > . static double ROOT::Math::GSLFunctionAdapter< UserFunc >::F ; (; double ; x, . void * ; p . ). inlinestatic . Definition at line 70 of file GSLFunctionAdapter.h. ◆ Fdf(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLFunctionAdapter.html:419,adapt,adapting,419,doc/master/classROOT_1_1Math_1_1GSLFunctionAdapter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLFunctionAdapter.html,1,['adapt'],['adapting']
Modifiability,. ROOT: ROOT::Math::GSLFunctionWrapper Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLFunctionWrapper Class Reference. ; Wrapper class to the gsl_function C structure. ; This class to fill the GSL C structure gsl_function with the C++ function objcet. Use the class ROOT::Math::GSLFunctionAdapter to adapt the C++ function object to the right signature (function pointer type) requested by GSL ; Definition at line 57 of file GSLFunctionWrapper.h. Public Member Functions;  GSLFunctionWrapper ();  ; GSLFuncPointer FunctionPtr ();  ; gsl_function * GetFunc ();  ; bool IsValid ();  check if function is valid (has been set) ;  ; double operator() (double x);  ; void SetFuncPointer (GSLFuncPointer f);  set in the GSL C struct the pointer to the function evaluation ;  ; template<class FuncType > ; void SetFunction (const FuncType &f);  fill the GSL C struct from a generic C++ callable object implementing operator() ;  ; void SetParams (void *p);  set in the GSL C struct the extra-object pointer ;  . Private Attributes; gsl_function fFunc;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathmore/src/GSLFunctionWrapper.h>; Constructor & Destructor Documentation. ◆ GSLFunctionWrapper(). ROOT::Math::GSLFunctionWrapper::GSLFunctionWrapper ; (; ). inline . Definition at line 61 of file GSLFunctionWrapper.h. Member Function Documentation. ◆ FunctionPtr(). GSLFuncPointer ROOT::Math::GSLFunctionWrapper::FunctionPtr ; (; ). inline . Definition at line 85 of file GSLFunctionWrapper.h. ◆ GetFunc(). gsl_function * ROOT::Math::GSLFunctionWrapper::GetFunc ; (; ). inline . Definition at line 83 of file GSLFunctionWrapper.h. ◆ IsValid(). bool ROOT::Math::GSLFunctionWrapper::IsValid ; (; ). inline . check if function is valid (has been set) ; Definition at line 91 of file GSLFunctionWrapper.h.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLFunctionWrapper.html:460,adapt,adapt,460,doc/master/classROOT_1_1Math_1_1GSLFunctionWrapper.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLFunctionWrapper.html,1,['adapt'],['adapt']
Modifiability,". ROOT: ROOT::Math::GSLIntegrator Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLIntegrator Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Numerical Integration. ; Class for performing numerical integration of a function in one dimension. ; It uses the numerical integration algorithms of GSL, which reimplements the algorithms used in the QUADPACK, a numerical integration package written in Fortran.; Various types of adaptive and non-adaptive integration are supported. These include integration over infinite and semi-infinite ranges and singular integrals.; The integration type is selected using the Integration::type enumeration in the class constructor. The default type is adaptive integration with singularity (ADAPTIVESINGULAR or QAGS in the QUADPACK convention) applying a Gauss-Kronrod 21-point integration rule. In the case of ADAPTIVE type, the integration rule can also be specified via the Integration::GKRule. The default rule is 31 points.; In the case of integration over infinite and semi-infinite ranges, the type used is always ADAPTIVESINGULAR applying a transformation from the original interval into (0,1).; The ADAPTIVESINGULAR type is the most sophicticated type. When performances are important, it is then recommended to use the NONADAPTIVE type in case of smooth functions or ADAPTIVE with a lower Gauss-Kronrod rule.; For detailed description on GSL integration algorithms see the GSL Manual. ; Definition at line 90 of file GSLIntegrator.h. Public Member Functions;  GSLIntegrator (const char *type, int rule, double absTol, double relTol, size_t size);  constructor of GSL Integrator. ;  ;  GSLIntegrator (const Integration::Type type, const Integration::GKRule rule, double absTol=1.E-9, double relTol=1E-6, size_t size=1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLIntegrator.html:665,adapt,adaptive,665,doc/master/classROOT_1_1Math_1_1GSLIntegrator.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLIntegrator.html,3,['adapt'],['adaptive']
Modifiability,". ROOT: ROOT::Math::GSLMinimizer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLMinimizer Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multi-dimensional Minimization. ; GSLMinimizer class. ; Implementation of the ROOT::Math::Minimizer interface using the GSL multi-dimensional minimization algorithms.; See GSL doc from more info on the GSL minimization algorithms.; The class implements the ROOT::Math::Minimizer interface and can be instantiated using the ROOT plugin manager (plugin name is ""GSLMultiMin""). The various minimization algorithms (conjugatefr, conjugatepr, bfgs, etc..) can be passed as enumerations and also as a string. The default algorithm is conjugatefr (Fletcher-Reeves conjugate gradient algorithm). ; Definition at line 79 of file GSLMinimizer.h. Public Member Functions;  GSLMinimizer (const char *type);  Constructor with a string giving name of algorithm. ;  ;  GSLMinimizer (ROOT::Math::EGSLMinimizerType type=ROOT::Math::kConjugateFR);  Default constructor. ;  ;  ~GSLMinimizer () override;  Destructor. ;  ; double CovMatrix (unsigned int, unsigned int) const override;  return covariance matrices elements if the variable is fixed the matrix is zero The ordering of the variables is the same as in errors ;  ; double Edm () const override;  return expected distance reached from the minimum ;  ; const double * Errors () const override;  return errors at the minimum ;  ; const double * MinGradient () const override;  return pointer to gradient values at the minimum ;  ; bool Minimize () override;  method to perform the minimization ;  ; unsigned int NCalls () const override;  number of function calls to reach the minimum ;  ; bool ProvidesError () const override;  minimizer provides error and error matrix ;  ; void SetFunction (const ROOT::Math::IMultiGenFunction &func) ov",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMinimizer.html:652,plugin,plugin,652,doc/master/classROOT_1_1Math_1_1GSLMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMinimizer.html,2,['plugin'],['plugin']
Modifiability,". ROOT: ROOT::Math::GSLMiserIntegrationWorkspace Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLMiserIntegrationWorkspace Class Reference. ; Workspace for MISER. ; Definition at line 162 of file GSLMCIntegrationWorkspace.h. Public Member Functions;  GSLMiserIntegrationWorkspace (size_t dim=0);  ; void Clear () override;  free the workspace deleting the GSL pointer ;  ; gsl_monte_miser_state * GetWS ();  ; bool Init (size_t dim) override;  initialize the workspace creating the GSL pointer if it is not there ;  ; size_t NDim () const override;  ; std::unique_ptr< ROOT::Math::IOptions > Options () const override;  retrieve option pointer corresponding to parameters create a new object to be managed by the user ;  ; MiserParameters & Parameters ();  ; const MiserParameters & Parameters () const;  ; bool ReInit () override;  re-initialize an existing the workspace ;  ; virtual void SetOptions (const ROOT::Math::IOptions &opt) override;  set options ;  ; void SetParameters (const MiserParameters &p);  ; MCIntegration::Type Type () const override;  ;  Public Member Functions inherited from ROOT::Math::GSLMCIntegrationWorkspace;  GSLMCIntegrationWorkspace ();  ; virtual ~GSLMCIntegrationWorkspace ();  . Private Member Functions; void SetMiserParameters ();  . Private Attributes; bool fHaveNewParams;  ; MiserParameters fParams;  ; gsl_monte_miser_state * fWs;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathmore/src/GSLMCIntegrationWorkspace.h>. Inheritance diagram for ROOT::Math::GSLMiserIntegrationWorkspace:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ GSLMiserIntegrationWorkspace(). ROOT::Math::GSLMiserIntegrationWorkspace::GSLMiserIntegrationWorksp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMiserIntegrationWorkspace.html:1273,inherit,inherited,1273,doc/master/classROOT_1_1Math_1_1GSLMiserIntegrationWorkspace.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMiserIntegrationWorkspace.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Math::GSLMultiFitFunctionAdapter< FuncVector > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::GSLMultiFitFunctionAdapter< FuncVector > Class Template ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multi-dimensional Minimization. ; template<class FuncVector>; class ROOT::Math::GSLMultiFitFunctionAdapter< FuncVector >Class for adapting a C++ functor class to C function pointers used by GSL MultiFit Algorithm The templated C++ function class must implement: ; double operator( const double * x) and if the derivatives are required: void Gradient( const double * x, double * g) and void FdF( const double * x, double &f, double * g); This class defines static methods with will be used to fill the gsl_multimin_function and gsl_multimin_function_fdf structs used by GSL. See for examples the GSL online manual ; Definition at line 69 of file GSLMultiFitFunctionAdapter.h. Static Public Member Functions; static int Df (const gsl_vector *x, void *p, gsl_matrix *h);  ; static int F (const gsl_vector *x, void *p, gsl_vector *f);  ; static int FDf (const gsl_vector *x, void *p, gsl_vector *f, gsl_matrix *h);  evaluate derivative and function at the same time ;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathmore/src/GSLMultiFitFunctionAdapter.h>; Member Function Documentation. ◆ Df(). template<class FuncVector > . static int ROOT::Math::GSLMultiFitFunctionAdapter< FuncVector >::Df ; (; const gsl_vector * ; x, . void * ; p, . gsl_matrix * ; h . ). inlinestatic . Definition at line 86 of file GSLMultiFitFunctionAdapter.h. ◆ F(). template<class FuncVector > . static int ROOT::Math::GSLMultiFitFunctionAdapter< FuncVector >::F ; (; const gsl_vector * ; x, . void * ; p, . gsl_vector * ; f . ). inlinestatic . Definition at line 73 of file GSLMultiFitFunctionAda",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiFitFunctionAdapter.html:513,adapt,adapting,513,doc/master/classROOT_1_1Math_1_1GSLMultiFitFunctionAdapter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiFitFunctionAdapter.html,1,['adapt'],['adapting']
Modifiability,". ROOT: ROOT::Math::GSLMultiMinFunctionAdapter< UserFunc > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::GSLMultiMinFunctionAdapter< UserFunc > Struct Template ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multi-dimensional Minimization. ; template<class UserFunc>; struct ROOT::Math::GSLMultiMinFunctionAdapter< UserFunc >Class for adapting any multi-dimension C++ functor class to C function pointers used by GSL MultiMin algorithms. ; The templated C++ function class must implement:; double operator( const double * x) and if the derivatives are required: void Gradient( const double * x, double * g); This class defines static methods with will be used to fill the gsl_multimin_function and gsl_multimin_function_fdf structs used by GSL. See for examples the GSL online manual ; Definition at line 66 of file GSLMultiMinFunctionAdapter.h. Static Public Member Functions; static void Df (const gsl_vector *x, void *p, gsl_vector *g);  ; static double F (const gsl_vector *x, void *p);  ; static void Fdf (const gsl_vector *x, void *p, double *f, gsl_vector *g);  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathmore/src/GSLMultiMinFunctionAdapter.h>; Member Function Documentation. ◆ Df(). template<class UserFunc > . static void ROOT::Math::GSLMultiMinFunctionAdapter< UserFunc >::Df ; (; const gsl_vector * ; x, . void * ; p, . gsl_vector * ; g . ). inlinestatic . Definition at line 76 of file GSLMultiMinFunctionAdapter.h. ◆ F(). template<class UserFunc > . static double ROOT::Math::GSLMultiMinFunctionAdapter< UserFunc >::F ; (; const gsl_vector * ; x, . void * ; p . ). inlinestatic . Definition at line 68 of file GSLMultiMinFunctionAdapter.h. ◆ Fdf(). template<class UserFunc > . static void ROOT::Math::GSLMultiMinFunctionAdapter< UserFunc >::Fdf ; (; const gsl_ve",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Math_1_1GSLMultiMinFunctionAdapter.html:508,adapt,adapting,508,doc/master/structROOT_1_1Math_1_1GSLMultiMinFunctionAdapter.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Math_1_1GSLMultiMinFunctionAdapter.html,1,['adapt'],['adapting']
Modifiability,". ROOT: ROOT::Math::GSLMultiRootFunctionAdapter< FuncVector > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Static Public Member Functions |; List of all members ; ROOT::Math::GSLMultiRootFunctionAdapter< FuncVector > Class Template ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multidimensional ROOT finding. ; template<class FuncVector>; class ROOT::Math::GSLMultiRootFunctionAdapter< FuncVector >Class for adapting a C++ functor class to C function pointers used by GSL MultiRoot Algorithm The templated C++ function class must implement: ; double operator( const double * x) and if the derivatives are required: void Gradient( const double * x, double * g) and void FdF( const double * x, double &f, double * g) ; Definition at line 68 of file GSLMultiRootFunctionAdapter.h. Static Public Member Functions; static int Df (const gsl_vector *x, void *p, gsl_matrix *h);  ; static int F (const gsl_vector *x, void *p, gsl_vector *f);  ; static int FDf (const gsl_vector *x, void *p, gsl_vector *f, gsl_matrix *h);  evaluate derivative and function at the same time ;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathmore/src/GSLMultiRootFunctionAdapter.h>; Member Function Documentation. ◆ Df(). template<class FuncVector > . static int ROOT::Math::GSLMultiRootFunctionAdapter< FuncVector >::Df ; (; const gsl_vector * ; x, . void * ; p, . gsl_matrix * ; h . ). inlinestatic . Definition at line 87 of file GSLMultiRootFunctionAdapter.h. ◆ F(). template<class FuncVector > . static int ROOT::Math::GSLMultiRootFunctionAdapter< FuncVector >::F ; (; const gsl_vector * ; x, . void * ; p, . gsl_vector * ; f . ). inlinestatic . Definition at line 74 of file GSLMultiRootFunctionAdapter.h. ◆ FDf(). template<class FuncVector > . static int ROOT::Math::GSLMultiRootFunctionAdapter< FuncVector >::FDf ; (; const gsl_vector * ; x, . void * ; p, . gsl_ve",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiRootFunctionAdapter.html:515,adapt,adapting,515,doc/master/classROOT_1_1Math_1_1GSLMultiRootFunctionAdapter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiRootFunctionAdapter.html,1,['adapt'],['adapting']
Modifiability,". ROOT: ROOT::Math::GSLPlainIntegrationWorkspace Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLPlainIntegrationWorkspace Class Reference. . Definition at line 239 of file GSLMCIntegrationWorkspace.h. Public Member Functions;  GSLPlainIntegrationWorkspace ();  ; void Clear () override;  free the workspace deleting the GSL pointer ;  ; gsl_monte_plain_state * GetWS ();  ; bool Init (size_t dim) override;  initialize the workspace creating the GSL pointer if it is not there ;  ; size_t NDim () const override;  ; std::unique_ptr< ROOT::Math::IOptions > Options () const override;  retrieve option pointer corresponding to parameters create a new object to be managed by the user ;  ; bool ReInit () override;  re-initialize an existing the workspace ;  ; virtual void SetOptions (const ROOT::Math::IOptions &) override;  set options ;  ; MCIntegration::Type Type () const override;  ;  Public Member Functions inherited from ROOT::Math::GSLMCIntegrationWorkspace;  GSLMCIntegrationWorkspace ();  ; virtual ~GSLMCIntegrationWorkspace ();  . Private Attributes; gsl_monte_plain_state * fWs;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathmore/src/GSLMCIntegrationWorkspace.h>. Inheritance diagram for ROOT::Math::GSLPlainIntegrationWorkspace:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ GSLPlainIntegrationWorkspace(). ROOT::Math::GSLPlainIntegrationWorkspace::GSLPlainIntegrationWorkspace ; (; ). inline . Definition at line 243 of file GSLMCIntegrationWorkspace.h. Member Function Documentation. ◆ Clear(). void ROOT::Math::GSLPlainIntegrationWorkspace::Clear ; (; ). inlineoverridevirtual . free the workspace deleting the GSL pointer ; Reimplemented from ROOT::Math::GSLMCIntegrationWorkspac",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLPlainIntegrationWorkspace.html:1073,inherit,inherited,1073,doc/master/classROOT_1_1Math_1_1GSLPlainIntegrationWorkspace.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLPlainIntegrationWorkspace.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Math::GSLQRngNiederreiter2 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Math::GSLQRngNiederreiter2 Class ReferenceMath » MathCore » Interface classes for Random number generation. ; Niederreiter generator gsl_qrng_niederreiter_2 from here ; Definition at line 169 of file GSLQuasiRandom.h. Public Member Functions;  GSLQRngNiederreiter2 ();  ;  Public Member Functions inherited from ROOT::Math::GSLQuasiRandomEngine;  GSLQuasiRandomEngine ();  default constructor. ;  ;  GSLQuasiRandomEngine (const GSLQuasiRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLQuasiRandomEngine (GSLQRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLQuasiRandomEngine ();  call Terminate() ;  ; bool GenerateArray (double *begin, double *end) const;  Generate an array of quasi random numbers The iterators points to the random numbers. ;  ; void Initialize (unsigned int dimension);  initialize the generator giving the dimension of the sequence If no rng is present the default one based on Mersenne and Twister is created ;  ; std::string Name () const;  return name of generator ;  ; unsigned int NDim () const;  return the dimension of generator ;  ; double operator() () const;  Generate a random number between ]0,1[. ;  ; bool operator() (double *x) const;  Fill array x with random numbers between ]0,1[. ;  ; GSLQuasiRandomEngine & operator= (const GSLQuasiRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; unsigned int Size () const;  return the state size of generator ;  ; bool Skip (unsigned int n) const;  Skip the next n random numbers. ;  ; void Terminate ();  delete pointer to contained rng ;  . Additional Inherited Members;  Protected Member Functions inherited from ROOT::Math::GSLQuasiRandomEngine; void SetType (GSLQRngWrapper *r);  internal method used b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLQRngNiederreiter2.html:514,inherit,inherited,514,doc/master/classROOT_1_1Math_1_1GSLQRngNiederreiter2.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLQRngNiederreiter2.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Math::GSLQRngSobol Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Math::GSLQRngSobol Class ReferenceMath » MathCore » Interface classes for Random number generation. ; Sobol generator gsl_qrng_sobol from here ; Definition at line 156 of file GSLQuasiRandom.h. Public Member Functions;  GSLQRngSobol ();  ;  Public Member Functions inherited from ROOT::Math::GSLQuasiRandomEngine;  GSLQuasiRandomEngine ();  default constructor. ;  ;  GSLQuasiRandomEngine (const GSLQuasiRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLQuasiRandomEngine (GSLQRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLQuasiRandomEngine ();  call Terminate() ;  ; bool GenerateArray (double *begin, double *end) const;  Generate an array of quasi random numbers The iterators points to the random numbers. ;  ; void Initialize (unsigned int dimension);  initialize the generator giving the dimension of the sequence If no rng is present the default one based on Mersenne and Twister is created ;  ; std::string Name () const;  return name of generator ;  ; unsigned int NDim () const;  return the dimension of generator ;  ; double operator() () const;  Generate a random number between ]0,1[. ;  ; bool operator() (double *x) const;  Fill array x with random numbers between ]0,1[. ;  ; GSLQuasiRandomEngine & operator= (const GSLQuasiRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; unsigned int Size () const;  return the state size of generator ;  ; bool Skip (unsigned int n) const;  Skip the next n random numbers. ;  ; void Terminate ();  delete pointer to contained rng ;  . Additional Inherited Members;  Protected Member Functions inherited from ROOT::Math::GSLQuasiRandomEngine; void SetType (GSLQRngWrapper *r);  internal method used by the derived class to set the type of g",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLQRngSobol.html:474,inherit,inherited,474,doc/master/classROOT_1_1Math_1_1GSLQRngSobol.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLQRngSobol.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Math::GSLRngCMRG Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; ROOT::Math::GSLRngCMRG Class ReferenceMath » MathCore » Interface classes for Random number generation. ; Combined multiple recursive generator (L'Ecuyer) see here ; Definition at line 454 of file GSLRndmEngines.h. Public Types; typedef GSLRandomEngine BaseType;  . Public Member Functions;  GSLRngCMRG ();  ;  Public Member Functions inherited from ROOT::Math::GSLRandomEngine;  GSLRandomEngine ();  default constructor. ;  ;  GSLRandomEngine (const GSLRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLRandomEngine (GSLRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLRandomEngine ();  call Terminate() ;  ; void Initialize ();  initialize the generator If no rng is present the default one based on Mersenne and Twister is created ;  ; unsigned long IntRndm () const;  Generate an integer number between [0,max_generator-1] (including 0 and max-1) if max is larger than available range of algorithm an error message is printed and zero is returned. ;  ; unsigned long MaxInt () const;  return the maximum integer +1 a generator can handle ;  ; unsigned long MinInt () const;  return the minimum integer a generator can handle typically this value is 0 ;  ; std::string Name () const;  return name of generator ;  ; double operator() () const;  Generate a random number between ]0,1] 0 is excluded and 1 is included. ;  ; GSLRandomEngine & operator= (const GSLRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; void RandomArray (double *begin, double *end) const;  Generate an array of random numbers The iterators points to the random numbers. ;  ; template<class Iterator > ; void RandomArray (Iterator begin, Iterator end) const;  Generate an array of random numbers. ;  ; double Rnd",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngCMRG.html:552,inherit,inherited,552,doc/master/classROOT_1_1Math_1_1GSLRngCMRG.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngCMRG.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Math::GSLRngGFSR4 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; ROOT::Math::GSLRngGFSR4 Class ReferenceMath » MathCore » Interface classes for Random number generation. ; Lagged Fibonacci generator by Ziff see here ; Definition at line 441 of file GSLRndmEngines.h. Public Types; typedef GSLRandomEngine BaseType;  . Public Member Functions;  GSLRngGFSR4 ();  ;  Public Member Functions inherited from ROOT::Math::GSLRandomEngine;  GSLRandomEngine ();  default constructor. ;  ;  GSLRandomEngine (const GSLRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLRandomEngine (GSLRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLRandomEngine ();  call Terminate() ;  ; void Initialize ();  initialize the generator If no rng is present the default one based on Mersenne and Twister is created ;  ; unsigned long IntRndm () const;  Generate an integer number between [0,max_generator-1] (including 0 and max-1) if max is larger than available range of algorithm an error message is printed and zero is returned. ;  ; unsigned long MaxInt () const;  return the maximum integer +1 a generator can handle ;  ; unsigned long MinInt () const;  return the minimum integer a generator can handle typically this value is 0 ;  ; std::string Name () const;  return name of generator ;  ; double operator() () const;  Generate a random number between ]0,1] 0 is excluded and 1 is included. ;  ; GSLRandomEngine & operator= (const GSLRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; void RandomArray (double *begin, double *end) const;  Generate an array of random numbers The iterators points to the random numbers. ;  ; template<class Iterator > ; void RandomArray (Iterator begin, Iterator end) const;  Generate an array of random numbers. ;  ; double Rndm () const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngGFSR4.html:541,inherit,inherited,541,doc/master/classROOT_1_1Math_1_1GSLRngGFSR4.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngGFSR4.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Math::GSLRngMRG Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; ROOT::Math::GSLRngMRG Class ReferenceMath » MathCore » Interface classes for Random number generation. ; 5-th order multiple recursive generator (L'Ecuyer, Blouin and Coutre) see here ; Definition at line 467 of file GSLRndmEngines.h. Public Types; typedef GSLRandomEngine BaseType;  . Public Member Functions;  GSLRngMRG ();  ;  Public Member Functions inherited from ROOT::Math::GSLRandomEngine;  GSLRandomEngine ();  default constructor. ;  ;  GSLRandomEngine (const GSLRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLRandomEngine (GSLRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLRandomEngine ();  call Terminate() ;  ; void Initialize ();  initialize the generator If no rng is present the default one based on Mersenne and Twister is created ;  ; unsigned long IntRndm () const;  Generate an integer number between [0,max_generator-1] (including 0 and max-1) if max is larger than available range of algorithm an error message is printed and zero is returned. ;  ; unsigned long MaxInt () const;  return the maximum integer +1 a generator can handle ;  ; unsigned long MinInt () const;  return the minimum integer a generator can handle typically this value is 0 ;  ; std::string Name () const;  return name of generator ;  ; double operator() () const;  Generate a random number between ]0,1] 0 is excluded and 1 is included. ;  ; GSLRandomEngine & operator= (const GSLRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; void RandomArray (double *begin, double *end) const;  Generate an array of random numbers The iterators points to the random numbers. ;  ; template<class Iterator > ; void RandomArray (Iterator begin, Iterator end) const;  Generate an array of random number",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngMRG.html:570,inherit,inherited,570,doc/master/classROOT_1_1Math_1_1GSLRngMRG.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngMRG.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Math::GSLRngMT Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; ROOT::Math::GSLRngMT Class ReferenceMath » MathCore » Interface classes for Random number generation. ; Mersenne-Twister generator gsl_rng_mt19937 from here ; Definition at line 341 of file GSLRndmEngines.h. Public Types; typedef GSLRandomEngine BaseType;  . Public Member Functions;  GSLRngMT ();  ;  Public Member Functions inherited from ROOT::Math::GSLRandomEngine;  GSLRandomEngine ();  default constructor. ;  ;  GSLRandomEngine (const GSLRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLRandomEngine (GSLRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLRandomEngine ();  call Terminate() ;  ; void Initialize ();  initialize the generator If no rng is present the default one based on Mersenne and Twister is created ;  ; unsigned long IntRndm () const;  Generate an integer number between [0,max_generator-1] (including 0 and max-1) if max is larger than available range of algorithm an error message is printed and zero is returned. ;  ; unsigned long MaxInt () const;  return the maximum integer +1 a generator can handle ;  ; unsigned long MinInt () const;  return the minimum integer a generator can handle typically this value is 0 ;  ; std::string Name () const;  return name of generator ;  ; double operator() () const;  Generate a random number between ]0,1] 0 is excluded and 1 is included. ;  ; GSLRandomEngine & operator= (const GSLRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; void RandomArray (double *begin, double *end) const;  Generate an array of random numbers The iterators points to the random numbers. ;  ; template<class Iterator > ; void RandomArray (Iterator begin, Iterator end) const;  Generate an array of random numbers. ;  ; double Rndm () const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngMT.html:541,inherit,inherited,541,doc/master/classROOT_1_1Math_1_1GSLRngMT.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngMT.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Math::GSLRngMinStd Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; ROOT::Math::GSLRngMinStd Class ReferenceMath » MathCore » Interface classes for Random number generation. ; MINSTD generator (Park and Miller) see here ; Definition at line 507 of file GSLRndmEngines.h. Public Types; typedef GSLRandomEngine BaseType;  . Public Member Functions;  GSLRngMinStd ();  ;  Public Member Functions inherited from ROOT::Math::GSLRandomEngine;  GSLRandomEngine ();  default constructor. ;  ;  GSLRandomEngine (const GSLRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLRandomEngine (GSLRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLRandomEngine ();  call Terminate() ;  ; void Initialize ();  initialize the generator If no rng is present the default one based on Mersenne and Twister is created ;  ; unsigned long IntRndm () const;  Generate an integer number between [0,max_generator-1] (including 0 and max-1) if max is larger than available range of algorithm an error message is printed and zero is returned. ;  ; unsigned long MaxInt () const;  return the maximum integer +1 a generator can handle ;  ; unsigned long MinInt () const;  return the minimum integer a generator can handle typically this value is 0 ;  ; std::string Name () const;  return name of generator ;  ; double operator() () const;  Generate a random number between ]0,1] 0 is excluded and 1 is included. ;  ; GSLRandomEngine & operator= (const GSLRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; void RandomArray (double *begin, double *end) const;  Generate an array of random numbers The iterators points to the random numbers. ;  ; template<class Iterator > ; void RandomArray (Iterator begin, Iterator end) const;  Generate an array of random numbers. ;  ; double Rndm () con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngMinStd.html:544,inherit,inherited,544,doc/master/classROOT_1_1Math_1_1GSLRngMinStd.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngMinStd.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Math::GSLRngMixMax Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; ROOT::Math::GSLRngMixMax Class ReferenceMath » MathCore » Interface classes for Random number generation. ; MixMax generator based on ROOT::Math::MixMaxEngine of N=240. ; Definition at line 517 of file GSLRndmEngines.h. Public Types; typedef GSLRandomEngine BaseType;  . Public Member Functions;  GSLRngMixMax ();  ;  ~GSLRngMixMax () override;  ;  Public Member Functions inherited from ROOT::Math::GSLRandomEngine;  GSLRandomEngine ();  default constructor. ;  ;  GSLRandomEngine (const GSLRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLRandomEngine (GSLRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLRandomEngine ();  call Terminate() ;  ; void Initialize ();  initialize the generator If no rng is present the default one based on Mersenne and Twister is created ;  ; unsigned long IntRndm () const;  Generate an integer number between [0,max_generator-1] (including 0 and max-1) if max is larger than available range of algorithm an error message is printed and zero is returned. ;  ; unsigned long MaxInt () const;  return the maximum integer +1 a generator can handle ;  ; unsigned long MinInt () const;  return the minimum integer a generator can handle typically this value is 0 ;  ; std::string Name () const;  return name of generator ;  ; double operator() () const;  Generate a random number between ]0,1] 0 is excluded and 1 is included. ;  ; GSLRandomEngine & operator= (const GSLRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; void RandomArray (double *begin, double *end) const;  Generate an array of random numbers The iterators points to the random numbers. ;  ; template<class Iterator > ; void RandomArray (Iterator begin, Iterator end) const;  Generate an ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngMixMax.html:592,inherit,inherited,592,doc/master/classROOT_1_1Math_1_1GSLRngMixMax.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngMixMax.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Math::GSLRngRanLux Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; ROOT::Math::GSLRngRanLux Class ReferenceMath » MathCore » Interface classes for Random number generation. ; Old Ranlux generator (James, Luscher) (default luxury level, p = 223) (This is eequivalent to TRandom1 with default luxury level) see here ; Definition at line 355 of file GSLRndmEngines.h. Public Types; typedef GSLRandomEngine BaseType;  . Public Member Functions;  GSLRngRanLux ();  ;  Public Member Functions inherited from ROOT::Math::GSLRandomEngine;  GSLRandomEngine ();  default constructor. ;  ;  GSLRandomEngine (const GSLRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLRandomEngine (GSLRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLRandomEngine ();  call Terminate() ;  ; void Initialize ();  initialize the generator If no rng is present the default one based on Mersenne and Twister is created ;  ; unsigned long IntRndm () const;  Generate an integer number between [0,max_generator-1] (including 0 and max-1) if max is larger than available range of algorithm an error message is printed and zero is returned. ;  ; unsigned long MaxInt () const;  return the maximum integer +1 a generator can handle ;  ; unsigned long MinInt () const;  return the minimum integer a generator can handle typically this value is 0 ;  ; std::string Name () const;  return name of generator ;  ; double operator() () const;  Generate a random number between ]0,1] 0 is excluded and 1 is included. ;  ; GSLRandomEngine & operator= (const GSLRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; void RandomArray (double *begin, double *end) const;  Generate an array of random numbers The iterators points to the random numbers. ;  ; template<class Iterator > ; void RandomArray (Ite",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngRanLux.html:639,inherit,inherited,639,doc/master/classROOT_1_1Math_1_1GSLRngRanLux.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngRanLux.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Math::GSLRngRanLuxD1 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; ROOT::Math::GSLRngRanLuxD1 Class ReferenceMath » MathCore » Interface classes for Random number generation. ; Double precision (48 bits) version of Second generation of Ranlux generator with luxury level of 1 (It throws away 202 value for every 12 used) see here ; Definition at line 399 of file GSLRndmEngines.h. Public Types; typedef GSLRandomEngine BaseType;  . Public Member Functions;  GSLRngRanLuxD1 ();  ;  Public Member Functions inherited from ROOT::Math::GSLRandomEngine;  GSLRandomEngine ();  default constructor. ;  ;  GSLRandomEngine (const GSLRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLRandomEngine (GSLRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLRandomEngine ();  call Terminate() ;  ; void Initialize ();  initialize the generator If no rng is present the default one based on Mersenne and Twister is created ;  ; unsigned long IntRndm () const;  Generate an integer number between [0,max_generator-1] (including 0 and max-1) if max is larger than available range of algorithm an error message is printed and zero is returned. ;  ; unsigned long MaxInt () const;  return the maximum integer +1 a generator can handle ;  ; unsigned long MinInt () const;  return the minimum integer a generator can handle typically this value is 0 ;  ; std::string Name () const;  return name of generator ;  ; double operator() () const;  Generate a random number between ]0,1] 0 is excluded and 1 is included. ;  ; GSLRandomEngine & operator= (const GSLRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; void RandomArray (double *begin, double *end) const;  Generate an array of random numbers The iterators points to the random numbers. ;  ; template<class Iterator > ; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngRanLuxD1.html:659,inherit,inherited,659,doc/master/classROOT_1_1Math_1_1GSLRngRanLuxD1.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngRanLuxD1.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Math::GSLRngRanLuxD2 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; ROOT::Math::GSLRngRanLuxD2 Class ReferenceMath » MathCore » Interface classes for Random number generation. ; Double precision (48 bits) version of Second generation of Ranlux generator with luxury level of 2 (It throws away 397 value for every 12 used) see here ; Definition at line 413 of file GSLRndmEngines.h. Public Types; typedef GSLRandomEngine BaseType;  . Public Member Functions;  GSLRngRanLuxD2 ();  ;  Public Member Functions inherited from ROOT::Math::GSLRandomEngine;  GSLRandomEngine ();  default constructor. ;  ;  GSLRandomEngine (const GSLRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLRandomEngine (GSLRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLRandomEngine ();  call Terminate() ;  ; void Initialize ();  initialize the generator If no rng is present the default one based on Mersenne and Twister is created ;  ; unsigned long IntRndm () const;  Generate an integer number between [0,max_generator-1] (including 0 and max-1) if max is larger than available range of algorithm an error message is printed and zero is returned. ;  ; unsigned long MaxInt () const;  return the maximum integer +1 a generator can handle ;  ; unsigned long MinInt () const;  return the minimum integer a generator can handle typically this value is 0 ;  ; std::string Name () const;  return name of generator ;  ; double operator() () const;  Generate a random number between ]0,1] 0 is excluded and 1 is included. ;  ; GSLRandomEngine & operator= (const GSLRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; void RandomArray (double *begin, double *end) const;  Generate an array of random numbers The iterators points to the random numbers. ;  ; template<class Iterator > ; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngRanLuxD2.html:659,inherit,inherited,659,doc/master/classROOT_1_1Math_1_1GSLRngRanLuxD2.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngRanLuxD2.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Math::GSLRngRanLuxS1 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; ROOT::Math::GSLRngRanLuxS1 Class ReferenceMath » MathCore » Interface classes for Random number generation. ; Second generation of Ranlux generator for single precision with luxury level of 1 (It throws away 202 values for every 12 used) see here ; Definition at line 369 of file GSLRndmEngines.h. Public Types; typedef GSLRandomEngine BaseType;  . Public Member Functions;  GSLRngRanLuxS1 ();  ;  Public Member Functions inherited from ROOT::Math::GSLRandomEngine;  GSLRandomEngine ();  default constructor. ;  ;  GSLRandomEngine (const GSLRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLRandomEngine (GSLRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLRandomEngine ();  call Terminate() ;  ; void Initialize ();  initialize the generator If no rng is present the default one based on Mersenne and Twister is created ;  ; unsigned long IntRndm () const;  Generate an integer number between [0,max_generator-1] (including 0 and max-1) if max is larger than available range of algorithm an error message is printed and zero is returned. ;  ; unsigned long MaxInt () const;  return the maximum integer +1 a generator can handle ;  ; unsigned long MinInt () const;  return the minimum integer a generator can handle typically this value is 0 ;  ; std::string Name () const;  return name of generator ;  ; double operator() () const;  Generate a random number between ]0,1] 0 is excluded and 1 is included. ;  ; GSLRandomEngine & operator= (const GSLRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; void RandomArray (double *begin, double *end) const;  Generate an array of random numbers The iterators points to the random numbers. ;  ; template<class Iterator > ; void RandomArray ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngRanLuxS1.html:643,inherit,inherited,643,doc/master/classROOT_1_1Math_1_1GSLRngRanLuxS1.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngRanLuxS1.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Math::GSLRngRanLuxS2 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; ROOT::Math::GSLRngRanLuxS2 Class ReferenceMath » MathCore » Interface classes for Random number generation. ; Second generation of Ranlux generator for Single precision with luxury level of 2 (It throws away 397 value for every 12 used) see here ; Definition at line 384 of file GSLRndmEngines.h. Public Types; typedef GSLRandomEngine BaseType;  . Public Member Functions;  GSLRngRanLuxS2 ();  ;  Public Member Functions inherited from ROOT::Math::GSLRandomEngine;  GSLRandomEngine ();  default constructor. ;  ;  GSLRandomEngine (const GSLRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLRandomEngine (GSLRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLRandomEngine ();  call Terminate() ;  ; void Initialize ();  initialize the generator If no rng is present the default one based on Mersenne and Twister is created ;  ; unsigned long IntRndm () const;  Generate an integer number between [0,max_generator-1] (including 0 and max-1) if max is larger than available range of algorithm an error message is printed and zero is returned. ;  ; unsigned long MaxInt () const;  return the maximum integer +1 a generator can handle ;  ; unsigned long MinInt () const;  return the minimum integer a generator can handle typically this value is 0 ;  ; std::string Name () const;  return name of generator ;  ; double operator() () const;  Generate a random number between ]0,1] 0 is excluded and 1 is included. ;  ; GSLRandomEngine & operator= (const GSLRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; void RandomArray (double *begin, double *end) const;  Generate an array of random numbers The iterators points to the random numbers. ;  ; template<class Iterator > ; void RandomArray (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngRanLuxS2.html:642,inherit,inherited,642,doc/master/classROOT_1_1Math_1_1GSLRngRanLuxS2.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngRanLuxS2.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Math::GSLRngRanMar Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; ROOT::Math::GSLRngRanMar Class ReferenceMath » MathCore » Interface classes for Random number generation. ; RANMAR generator see here ; Definition at line 494 of file GSLRndmEngines.h. Public Types; typedef GSLRandomEngine BaseType;  . Public Member Functions;  GSLRngRanMar ();  ;  Public Member Functions inherited from ROOT::Math::GSLRandomEngine;  GSLRandomEngine ();  default constructor. ;  ;  GSLRandomEngine (const GSLRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLRandomEngine (GSLRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLRandomEngine ();  call Terminate() ;  ; void Initialize ();  initialize the generator If no rng is present the default one based on Mersenne and Twister is created ;  ; unsigned long IntRndm () const;  Generate an integer number between [0,max_generator-1] (including 0 and max-1) if max is larger than available range of algorithm an error message is printed and zero is returned. ;  ; unsigned long MaxInt () const;  return the maximum integer +1 a generator can handle ;  ; unsigned long MinInt () const;  return the minimum integer a generator can handle typically this value is 0 ;  ; std::string Name () const;  return name of generator ;  ; double operator() () const;  Generate a random number between ]0,1] 0 is excluded and 1 is included. ;  ; GSLRandomEngine & operator= (const GSLRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; void RandomArray (double *begin, double *end) const;  Generate an array of random numbers The iterators points to the random numbers. ;  ; template<class Iterator > ; void RandomArray (Iterator begin, Iterator end) const;  Generate an array of random numbers. ;  ; double Rndm () const;  Generate a ra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngRanMar.html:526,inherit,inherited,526,doc/master/classROOT_1_1Math_1_1GSLRngRanMar.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngRanMar.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Math::GSLRngRand Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; ROOT::Math::GSLRngRand Class ReferenceMath » MathCore » Interface classes for Random number generation. ; BSD rand() generator gsl_rmg_rand from here ; Definition at line 481 of file GSLRndmEngines.h. Public Types; typedef GSLRandomEngine BaseType;  . Public Member Functions;  GSLRngRand ();  ;  Public Member Functions inherited from ROOT::Math::GSLRandomEngine;  GSLRandomEngine ();  default constructor. ;  ;  GSLRandomEngine (const GSLRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLRandomEngine (GSLRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLRandomEngine ();  call Terminate() ;  ; void Initialize ();  initialize the generator If no rng is present the default one based on Mersenne and Twister is created ;  ; unsigned long IntRndm () const;  Generate an integer number between [0,max_generator-1] (including 0 and max-1) if max is larger than available range of algorithm an error message is printed and zero is returned. ;  ; unsigned long MaxInt () const;  return the maximum integer +1 a generator can handle ;  ; unsigned long MinInt () const;  return the minimum integer a generator can handle typically this value is 0 ;  ; std::string Name () const;  return name of generator ;  ; double operator() () const;  Generate a random number between ]0,1] 0 is excluded and 1 is included. ;  ; GSLRandomEngine & operator= (const GSLRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; void RandomArray (double *begin, double *end) const;  Generate an array of random numbers The iterators points to the random numbers. ;  ; template<class Iterator > ; void RandomArray (Iterator begin, Iterator end) const;  Generate an array of random numbers. ;  ; double Rndm () const;  G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngRand.html:538,inherit,inherited,538,doc/master/classROOT_1_1Math_1_1GSLRngRand.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngRand.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Math::GSLRngTaus Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; ROOT::Math::GSLRngTaus Class ReferenceMath » MathCore » Interface classes for Random number generation. ; Tausworthe generator by L'Ecuyer see here ; Definition at line 428 of file GSLRndmEngines.h. Public Types; typedef GSLRandomEngine BaseType;  . Public Member Functions;  GSLRngTaus ();  ;  Public Member Functions inherited from ROOT::Math::GSLRandomEngine;  GSLRandomEngine ();  default constructor. ;  ;  GSLRandomEngine (const GSLRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLRandomEngine (GSLRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLRandomEngine ();  call Terminate() ;  ; void Initialize ();  initialize the generator If no rng is present the default one based on Mersenne and Twister is created ;  ; unsigned long IntRndm () const;  Generate an integer number between [0,max_generator-1] (including 0 and max-1) if max is larger than available range of algorithm an error message is printed and zero is returned. ;  ; unsigned long MaxInt () const;  return the maximum integer +1 a generator can handle ;  ; unsigned long MinInt () const;  return the minimum integer a generator can handle typically this value is 0 ;  ; std::string Name () const;  return name of generator ;  ; double operator() () const;  Generate a random number between ]0,1] 0 is excluded and 1 is included. ;  ; GSLRandomEngine & operator= (const GSLRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; void RandomArray (double *begin, double *end) const;  Generate an array of random numbers The iterators points to the random numbers. ;  ; template<class Iterator > ; void RandomArray (Iterator begin, Iterator end) const;  Generate an array of random numbers. ;  ; double Rndm () const;  Gen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngTaus.html:536,inherit,inherited,536,doc/master/classROOT_1_1Math_1_1GSLRngTaus.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngTaus.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Math::GSLSimAnMinimizer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLSimAnMinimizer Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multi-dimensional Minimization. ; GSLSimAnMinimizer class for minimization using simulated annealing using the algorithm from GSL. ; It implements the ROOT::Minimizer interface and a plug-in (name ""GSLSimAn"") exists to instantiate this class via the plug-in manager Configuration (Setting/getting) the options is done through the methods defined in the ROOT::Math::Minimizer class. The user needs to call the base class method ROOT::Math::Minimizer::SetOptions to set the corresponding options. Here is some code example for increasing n_tries from 200 (default) to 1000 ROOT::Math::GenAlgoOptions simanOpt;; simanOpt.SetValue(""n_tries"", 1000);; ROOT::Math::MinimizerOptions opt;; opt.SetExtraOptions(simanOpt);; minimizer->SetOptions(opt);; ROOT::Math::GenAlgoOptionsclass implementing generic options for a numerical algorithm Just store the options in a map of strin...Definition GenAlgoOptions.h:32; ROOT::Math::IOptions::SetValuevoid SetValue(const char *name, double val)generic methods for retrieving optionsDefinition IOptions.h:42; ROOT::Math::MinimizerOptionsMinimizer options.Definition MinimizerOptions.h:40; ROOT::Math::MinimizerOptions::SetExtraOptionsvoid SetExtraOptions(const IOptions &opt)set extra options (in this case pointer is cloned)Definition MinimizerOptions.cxx:210. Definition at line 75 of file GSLSimAnMinimizer.h. Public Member Functions;  GSLSimAnMinimizer (int type=0);  Default constructor. ;  ;  ~GSLSimAnMinimizer () override;  Destructor (no operations) ;  ; bool Minimize () override;  method to perform the minimization ;  ; const GSLSimAnParams & MinimizerParameters () const;  Get current minimiz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLSimAnMinimizer.html:547,plug-in,plug-in,547,doc/master/classROOT_1_1Math_1_1GSLSimAnMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLSimAnMinimizer.html,2,['plug-in'],['plug-in']
Modifiability,". ROOT: ROOT::Math::GSLVegasIntegrationWorkspace Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::GSLVegasIntegrationWorkspace Class Reference. ; workspace for VEGAS ; Definition at line 85 of file GSLMCIntegrationWorkspace.h. Public Member Functions;  GSLVegasIntegrationWorkspace (size_t dim=0);  ; double Chisq () const;  ; void Clear () override;  free the workspace deleting the GSL pointer ;  ; gsl_monte_vegas_state * GetWS ();  ; bool Init (size_t dim) override;  initialize the workspace creating the GSL pointer if it is not there ;  ; size_t NDim () const override;  ; std::unique_ptr< IOptions > Options () const override;  retrieve option pointer corresponding to parameters create a new object to be managed by the user ;  ; VegasParameters & Parameters ();  ; const VegasParameters & Parameters () const;  ; bool ReInit () override;  re-initialize an existing the workspace ;  ; double Result () const;  ; virtual void SetOptions (const ROOT::Math::IOptions &opt) override;  set options ;  ; void SetParameters (const struct VegasParameters &p);  ; double Sigma () const;  ; MCIntegration::Type Type () const override;  ;  Public Member Functions inherited from ROOT::Math::GSLMCIntegrationWorkspace;  GSLMCIntegrationWorkspace ();  ; virtual ~GSLMCIntegrationWorkspace ();  . Private Member Functions; void SetVegasParameters ();  . Private Attributes; VegasParameters fParams;  ; gsl_monte_vegas_state * fWs;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathmore/src/GSLMCIntegrationWorkspace.h>. Inheritance diagram for ROOT::Math::GSLVegasIntegrationWorkspace:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ GSLVegasIntegrationWorkspace(). ROOT::Math::GSLVega",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLVegasIntegrationWorkspace.html:1345,inherit,inherited,1345,doc/master/classROOT_1_1Math_1_1GSLVegasIntegrationWorkspace.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLVegasIntegrationWorkspace.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Math::IOptions Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; List of all members ; ROOT::Math::IOptions Class ReferenceabstractMath » MathCore | Math » MathMore » Numerical Algorithms. ; Generic interface for defining configuration options of a numerical algorithm. ; Definition at line 28 of file IOptions.h. Public Member Functions;  IOptions ();  ; virtual ~IOptions ();  ; virtual IOptions * Clone () const =0;  ; virtual bool GetIntValue (const char *, int &) const;  ; virtual bool GetNamedValue (const char *, std::string &) const;  ; virtual bool GetRealValue (const char *, double &) const;  ; template<typename T > ; bool GetValue (const char *name, T &t) const;  ; int IValue (const char *name) const;  ; std::string NamedValue (const char *name) const;  ; virtual void Print (std::ostream &=std::cout) const;  print options ;  ; double RValue (const char *name) const;  ; virtual void SetIntValue (const char *, int);  ; virtual void SetNamedValue (const char *, const char *);  ; virtual void SetRealValue (const char *, double);  method which need to be re-implemented by the derived classes ;  ; void SetValue (const char *name, const char *val);  ; void SetValue (const char *name, double val);  generic methods for retrieving options ;  ; void SetValue (const char *name, int val);  . Private Member Functions; bool DoGetValue (const char *name, double &val) const;  ; bool DoGetValue (const char *name, int &val) const;  ; bool DoGetValue (const char *name, std::string &val) const;  . #include <Math/IOptions.h>. Inheritance diagram for ROOT::Math::IOptions:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ IOptions(). ROOT::Math::IOptions::IOptions ; (; ). inline . Definition at line 32 of file IOptions.h. ◆ ~IOptions(). virtual ROOT::Math::IOp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IOptions.html:362,config,configuration,362,doc/master/classROOT_1_1Math_1_1IOptions.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IOptions.html,1,['config'],['configuration']
Modifiability,". ROOT: ROOT::Math::IParametricFunctionMultiDimTempl< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; List of all members ; ROOT::Math::IParametricFunctionMultiDimTempl< T > Class Template ReferenceabstractMath » MathCore » Function Classes and Interfaces » Parametric Function Evaluation Interfaces. ; template<class T>; class ROOT::Math::IParametricFunctionMultiDimTempl< T >IParamFunction interface (abstract class) describing multi-dimensional parametric functions It is a derived class from ROOT::Math::IBaseFunctionMultiDim and ROOT::Math::IBaseParam. ; Provides the interface for evaluating a function passing a coordinate vector and a parameter vector. ; Definition at line 107 of file IParamFunction.h. Public Types; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  ;  Public Types inherited from ROOT::Math::IBaseFunctionMultiDimTempl< T >; typedef T BackendType;  ; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  . Public Member Functions; T operator() (const T *x) const;  ; T operator() (const T *x, const double *p) const;  Evaluate function at a point x and for given parameters p. ;  ;  Public Member Functions inherited from ROOT::Math::IBaseFunctionMultiDimTempl< T >; virtual ~IBaseFunctionMultiDimTempl ()=default;  ; virtual IBaseFunctionMultiDimTempl< T > * Clone () const =0;  Clone a function. ;  ; virtual bool HasGradient () const;  ; virtual unsigned int NDim () const =0;  Retrieve the dimension of the function. ;  ; T operator() (const T *x) const;  Evaluate the function at a point x[]. ;  ;  Public Member Functions inherited from ROOT::Math::IBaseParam; virtual ~IBaseParam ();  Virtual Destructor (no operations) ;  ; virtual unsigned int NPar () const =0;  Return the number of Parameters. ;  ; virtual std::string ParameterName (unsigned int i) const;  Return the name of the i-th parameter (starting f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IParametricFunctionMultiDimTempl.html:950,inherit,inherited,950,doc/master/classROOT_1_1Math_1_1IParametricFunctionMultiDimTempl.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IParametricFunctionMultiDimTempl.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Math::IParametricFunctionOneDim Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; List of all members ; ROOT::Math::IParametricFunctionOneDim Class ReferenceabstractMath » MathCore » Function Classes and Interfaces » Parametric Function Evaluation Interfaces. ; Specialized IParamFunction interface (abstract class) for one-dimensional parametric functions It is a derived class from ROOT::Math::IBaseFunctionOneDim and ROOT::Math::IBaseParam. ; Definition at line 159 of file IParamFunction.h. Public Types; typedef IBaseFunctionOneDim BaseFunc;  ;  Public Types inherited from ROOT::Math::IBaseFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  . Public Member Functions; double operator() (const double *x, const double *p) const;  multidim-like interface ;  ; double operator() (double x, const double *p) const;  Evaluate function at a point x and for given parameters p. ;  ;  Public Member Functions inherited from ROOT::Math::IBaseFunctionOneDim; virtual ~IBaseFunctionOneDim ()=default;  ; virtual IBaseFunctionOneDim * Clone () const =0;  Clone a function. ;  ; virtual bool HasGradient () const;  ; double operator() (const double *x) const;  Evaluate the function at a point x[]. ;  ; double operator() (double x) const;  Evaluate the function at a point x. ;  ;  Public Member Functions inherited from ROOT::Math::IBaseParam; virtual ~IBaseParam ();  Virtual Destructor (no operations) ;  ; virtual unsigned int NPar () const =0;  Return the number of Parameters. ;  ; virtual std::string ParameterName (unsigned int i) const;  Return the name of the i-th parameter (starting from zero) Overwrite if want to avoid the default name (""Par_0, Par_1, ..."") ;  ; virtual const double * Parameters () const =0;  Access the parameter values. ;  ; virtual void SetParameters (const double *p)=0;  Set the parameter values. ;  . Private ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IParametricFunctionOneDim.html:720,inherit,inherited,720,doc/master/classROOT_1_1Math_1_1IParametricFunctionOneDim.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IParametricFunctionOneDim.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Math::IParametricGradFunctionMultiDimTempl< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; List of all members ; ROOT::Math::IParametricGradFunctionMultiDimTempl< T > Class Template ReferenceabstractMath » MathCore » Function Classes and Interfaces » Parametric Function Evaluation Interfaces. ; template<class T>; class ROOT::Math::IParametricGradFunctionMultiDimTempl< T >Interface (abstract class) for parametric gradient multi-dimensional functions providing in addition to function evaluation with respect to the coordinates also the gradient with respect to the parameters, via the method ParameterGradient. ; It is a derived class from ROOT::Math::IParametricFunctionMultiDim.; The pure private virtual method DoParameterGradient must be implemented by the derived classes in addition to those inherited by the base abstract classes. ; Definition at line 227 of file IParamFunction.h. Public Types; using BaseFunc = typename IParametricFunctionMultiDimTempl< T >::BaseFunc;  ; using BaseGradFunc = IGradientFunctionMultiDimTempl< T >;  ; using BaseParamFunc = IParametricFunctionMultiDimTempl< T >;  ;  Public Types inherited from ROOT::Math::IParametricFunctionMultiDimTempl< T >; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  ;  Public Types inherited from ROOT::Math::IBaseFunctionMultiDimTempl< T >; typedef T BackendType;  ; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  . Public Member Functions;  ~IParametricGradFunctionMultiDimTempl () override;  Virtual Destructor (no operations) ;  ; virtual bool HasParameterHessian () const;  ; T operator() (const T *x) const;  ; T operator() (const T *x, const double *p) const;  ; T ParameterDerivative (const T *x, const double *p, unsigned int ipar=0) const;  Evaluate the partial derivative w.r.t a parameter ipar from values and parameters. ;  ; T ParameterD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IParametricGradFunctionMultiDimTempl.html:973,inherit,inherited,973,doc/master/classROOT_1_1Math_1_1IParametricGradFunctionMultiDimTempl.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IParametricGradFunctionMultiDimTempl.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Math::IParametricGradFunctionOneDim Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; List of all members ; ROOT::Math::IParametricGradFunctionOneDim Class ReferenceabstractMath » MathCore » Function Classes and Interfaces » Parametric Function Evaluation Interfaces. ; Interface (abstract class) for parametric one-dimensional gradient functions providing in addition to function evaluation with respect the coordinates also the gradient with respect to the parameters, via the method ParameterGradient. ; It is a derived class from ROOT::Math::IParametricFunctionOneDim.; The pure private virtual method DoParameterGradient must be implemented by the derived classes in addition to those inherited by the base abstract classes. ; Definition at line 327 of file IParamFunction.h. Public Types; typedef IParametricFunctionOneDim::BaseFunc BaseFunc;  ; typedef IGradientFunctionOneDim BaseGradFunc;  ; typedef IParametricFunctionOneDim BaseParamFunc;  ;  Public Types inherited from ROOT::Math::IParametricFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  ;  Public Types inherited from ROOT::Math::IBaseFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  . Public Member Functions;  ~IParametricGradFunctionOneDim () override;  Virtual Destructor (no operations) ;  ; double ParameterDerivative (const double *x, const double *p, unsigned int ipar=0) const;  Partial derivative with respect a parameter Compatibility interface with multi-dimensional functions. ;  ; double ParameterDerivative (const double *x, unsigned int ipar=0) const;  Evaluate partial derivative using cached parameter values (multi-dim like interface) ;  ; double ParameterDerivative (double x, const double *p, unsigned int ipar=0) const;  Partial derivative with respect a parameter. ;  ; double ParameterDerivative (double x, unsigned int ipar=0) const;  Evalua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IParametricGradFunctionOneDim.html:846,inherit,inherited,846,doc/master/classROOT_1_1Math_1_1IParametricGradFunctionOneDim.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IParametricGradFunctionOneDim.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Math::IntegrandTransform Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::IntegrandTransform Class Reference. ; Auxiliary inner class for mapping infinite and semi-infinite integrals. ; Definition at line 234 of file GaussIntegrator.h. Public Types; enum  ESemiInfinitySign { kMinus = -1; , kPlus = +1; };  ;  Public Types inherited from ROOT::Math::IBaseFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  . Public Member Functions;  IntegrandTransform (const double boundary, ESemiInfinitySign sign, const IGenFunction *integrand);  ;  IntegrandTransform (const IGenFunction *integrand);  ; IGenFunction * Clone () const override;  Clone a function. ;  ; double DoEval (double x) const override;  implementation of the evaluation function. Must be implemented by derived classes ;  ; double operator() (double x) const;  ;  Public Member Functions inherited from ROOT::Math::IBaseFunctionOneDim; virtual ~IBaseFunctionOneDim ()=default;  ; virtual bool HasGradient () const;  ; double operator() (const double *x) const;  Evaluate the function at a point x[]. ;  ; double operator() (double x) const;  Evaluate the function at a point x. ;  . Private Member Functions; double DoEval (double x, double boundary, int sign) const;  . Private Attributes; double fBoundary;  ; bool fInfiniteInterval;  ; const IGenFunction * fIntegrand;  ; ESemiInfinitySign fSign;  . #include <Math/GaussIntegrator.h>. Inheritance diagram for ROOT::Math::IntegrandTransform:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ ESemiInfinitySign. enum ROOT::Math::IntegrandTransform::ESemiInfinitySign. EnumeratorkMinus ; kPlus . Definition at line 236 of file GaussIntegrator.h. Constructor & Destructor Documentation. ◆ In",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IntegrandTransform.html:536,inherit,inherited,536,doc/master/classROOT_1_1Math_1_1IntegrandTransform.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IntegrandTransform.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Math::IntegratorMultiDim Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::IntegratorMultiDim Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Numerical Integration. ; User class for performing multidimensional integration. ; By default uses adaptive multi-dimensional integration using the algorithm from Genz Mallik implemented in the class ROOT::Math::AdaptiveIntegratorMultiDim otherwise it can uses via the plug-in manager the MC integration class (ROOT::Math::GSLMCIntegration) from MathMore. ; Definition at line 47 of file IntegratorMultiDim.h. Public Types; typedef IntegrationMultiDim::Type Type;  . Public Member Functions;  IntegratorMultiDim (const IMultiGenFunction &f, IntegrationMultiDim::Type type=IntegrationMultiDim::kDEFAULT, double absTol=-1, double relTol=-1, unsigned int ncall=0);  Generic Constructor of multi dimensional Integrator passing a function. ;  ;  IntegratorMultiDim (IntegrationMultiDim::Type type=IntegrationMultiDim::kDEFAULT, double absTol=-1, double relTol=-1, unsigned int ncall=0);  Generic constructor of multi dimensional Integrator. ;  ; virtual ~IntegratorMultiDim ();  Template Constructor of multi dimensional Integrator passing a generic function. ;  ; double Error () const;  return integration error ;  ; VirtualIntegratorMultiDim * GetIntegrator ();  return a pointer to integrator object ;  ; double Integral (const double *xmin, const double *xmax);  evaluate the integral with the previously given function between xmin[] and xmax[] ;  ; double Integral (const IMultiGenFunction &f, const double *xmin, const double *xmax);  evaluate the integral passing a new function ;  ; template<class Function > ; double Integral (Function &f, unsigned in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IntegratorMultiDim.html:543,adapt,adaptive,543,doc/master/classROOT_1_1Math_1_1IntegratorMultiDim.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IntegratorMultiDim.html,2,"['adapt', 'plug-in']","['adaptive', 'plug-in']"
Modifiability,". ROOT: ROOT::Math::IntegratorOneDim Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::IntegratorOneDim Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Numerical Integration. ; User Class for performing numerical integration of a function in one dimension. ; It uses the plug-in manager to load advanced numerical integration algorithms from GSL, which reimplements the algorithms used in the QUADPACK, a numerical integration package written in Fortran.; Various types of adaptive and non-adaptive integration are supported. These include integration over infinite and semi-infinite ranges and singular integrals.; The integration type is selected using the Integration::type enumeration in the class constructor. The default type is adaptive integration with singularity (ADAPTIVESINGULAR or QAGS in the QUADPACK convention) applying a Gauss-Kronrod 21-point integration rule. In the case of ADAPTIVE type, the integration rule can also be specified via the Integration::GKRule. The default rule is 31 points.; In the case of integration over infinite and semi-infinite ranges, the type used is always ADAPTIVESINGULAR applying a transformation from the original interval into (0,1).; The ADAPTIVESINGULAR type is the most sophisticated type. When performances are important, it is then recommended to use the NONADAPTIVE type in case of smooth functions or ADAPTIVE with a lower Gauss-Kronrod rule.; For detailed description on GSL integration algorithms see the GSL Manual. ; Definition at line 98 of file Integrator.h. Public Types; typedef IntegrationOneDim::Type Type;  . Public Member Functions;  IntegratorOneDim (const IGenFunction &f, IntegrationOneDim::Type type=IntegrationOneDim::kDEFAULT, double ab",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html:559,plug-in,plug-in,559,doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html,3,"['adapt', 'plug-in']","['adaptive', 'plug-in']"
Modifiability,". ROOT: ROOT::Math::KahanSum< T, N > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::KahanSum< T, N > Class Template Reference. ; template<typename T = double, unsigned int N = 1>; class ROOT::Math::KahanSum< T, N >The Kahan summation is a compensated summation algorithm, which significantly reduces numerical errors when adding a sequence of finite-precision floating point numbers. ; This is done by keeping a separate running compensation (a variable to accumulate small errors). Auto-vectorisable accumulation; This class can internally use multiple accumulators (template parameter N). When filled from a collection that supports index access from a contiguous block of memory, compilers such as gcc, clang and icc can auto-vectorise the accumulation. This happens by cycling through the internal accumulators based on the value of ""`index % N`"", so N accumulators can be filled from a block of N numbers in a single instruction.; The usage of multiple accumulators might slightly increase the precision in comparison to the single-accumulator version with N = 1. This depends on the order and magnitude of the numbers being accumulated. Therefore, in rare cases, the accumulation result can change in dependence of N, even when the data are identical. The magnitude of such differences is well below the precision of the floating point type, and will therefore mostly show in the compensation sum(see Carry()). Increasing the number of accumulators therefore only makes sense to speed up the accumulation, but not to increase precision.; Parameters. TThe type of the values to be accumulated. ; NNumber of accumulators. Defaults to 1. Ideal values are the widths of a vector register on the relevant architecture. Depending on the instruction set, good values are:; AVX2-float: 8; AVX2-double: 4",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1KahanSum.html:645,variab,variable,645,doc/master/classROOT_1_1Math_1_1KahanSum.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1KahanSum.html,1,['variab'],['variable']
Modifiability,". ROOT: ROOT::Math::LCGEngine Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::LCGEngine Class Reference. . Definition at line 33 of file LCGEngine.h. Public Types; typedef TRandomEngine BaseType;  ; typedef uint32_t Result_t;  ; typedef uint32_t StateInt_t;  . Public Member Functions;  LCGEngine ();  ;  ~LCGEngine () override;  ; uint32_t IntRndm ();  ; double operator() ();  ; double Rndm () override;  ; void SetSeed (uint32_t seed);  ;  Public Member Functions inherited from ROOT::Math::TRandomEngine; virtual ~TRandomEngine ();  . Static Public Member Functions; static unsigned int MaxInt ();  maximum integer that can be generated ;  ; static unsigned int MinInt ();  minimum integer that can be generated ;  ; static std::string Name ();  Name of the generator. ;  ; static int Size ();  Size of the generator state. ;  . Protected Member Functions; int Counter () const;  ; void GetState (std::vector< uint32_t > &state);  ; void SetState (const std::vector< uint32_t > &state);  . Private Member Functions; double Rndm_impl ();  . Private Attributes; uint32_t fSeed;  . #include <Math/LCGEngine.h>. Inheritance diagram for ROOT::Math::LCGEngine:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ BaseType. typedef TRandomEngine ROOT::Math::LCGEngine::BaseType. Definition at line 38 of file LCGEngine.h. ◆ Result_t. typedef uint32_t ROOT::Math::LCGEngine::Result_t. Definition at line 39 of file LCGEngine.h. ◆ StateInt_t. typedef uint32_t ROOT::Math::LCGEngine::StateInt_t. Definition at line 40 of file LCGEngine.h. Constructor & Destructor Documentation. ◆ LCGEngine(). ROOT::Math::LCGEngine::LCGEngine ; (; ). inline . Definition at line 42 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1LCGEngine.html:731,inherit,inherited,731,doc/master/classROOT_1_1Math_1_1LCGEngine.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1LCGEngine.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Math::MinimTransformFunction Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::MinimTransformFunction Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multi-dimensional Minimization. ; MinimTransformFunction class to perform a transformations on the variables to deal with fixed or limited variables (support both double and single bounds) The class manages the passed function pointer. ; Definition at line 41 of file MinimTransformFunction.h. Public Types; typedef ROOT::Math::IMultiGradFunction::BaseFunc BaseFunc;  ; typedef ROOT::Math::IMultiGradFunction BaseGradFunc;  ;  Public Types inherited from ROOT::Math::IGradientFunctionMultiDimTempl< T >; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  ; typedef IGradientFunctionMultiDimTempl< T > BaseGrad;  ;  Public Types inherited from ROOT::Math::IBaseFunctionMultiDimTempl< T >; typedef T BackendType;  ; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  . Public Member Functions;  MinimTransformFunction (const IMultiGradFunction *f, const std::vector< ROOT::Math::EMinimVariableType > &types, const std::vector< double > &values, const std::map< unsigned int, std::pair< double, double > > &bounds);  Constructor from a IMultiGradFunction interface that is externally managed vector specifying the variable types (free, bounded or fixed, defined in enum EMinimVariableTypes ) variable values (used for the fixed ones) and a map with the bounds (for the bounded variables) ;  ;  ~MinimTransformFunction () override;  Destructor (no operation) ;  ; IMultiGenFunction * Clone () const override;  clone: not supported (since unique_ptr used in the fVariables) ;  ; void GradientTransformation (const double *x, const double *gExt, double *gInt) const;  transform gradient vector (external -> internal) at",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1MinimTransformFunction.html:487,variab,variables,487,doc/master/classROOT_1_1Math_1_1MinimTransformFunction.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1MinimTransformFunction.html,4,"['inherit', 'variab']","['inherited', 'variables']"
Modifiability,". ROOT: ROOT::Math::MinimTransformVariable Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::MinimTransformVariable Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multi-dimensional Minimization. ; MinimTransformVariable class Contains meta information of the variables such as bounds, fix flags and deals with transformation of the variable The class does not contain the values and the step size (error) of the variable This is an internal class used by the MinimTransformFunction class. ; Definition at line 48 of file MinimTransformVariable.h. Public Member Functions;  MinimTransformVariable ();  Default Constructor for an unlimited variable. ;  ;  MinimTransformVariable (const MinimTransformVariable &rhs);  ;  MinimTransformVariable (double lower, double upper, SinVariableTransformation *trafo);  ;  MinimTransformVariable (double lower, SqrtLowVariableTransformation *trafo);  ;  MinimTransformVariable (double upper, SqrtUpVariableTransformation *trafo);  ;  MinimTransformVariable (double value);  ; double DerivativeIntToExt (double x) const;  ; double ExternalToInternal (double x) const;  ; double FixValue () const;  ; bool HasLowerBound () const;  ; bool HasUpperBound () const;  ; double InternalToExternal (double x) const;  ; bool IsFixed () const;  ; bool IsLimited () const;  ; double LowerBound () const;  ; MinimTransformVariable & operator= (const MinimTransformVariable &rhs);  ; double UpperBound () const;  . Private Attributes; bool fBounds;  has double bound ;  ; bool fFix;  fix variable ;  ; bool fLowBound;  has lower bound ;  ; double fLower;  lower parameter limit ;  ; std::unique_ptr< MinimizerVariableTransformation > fTransform;  pointer to the minimizer transformation ;  ; bool fUpBound;  has upper bound param ;  ; double fUpper;  upper parameter limit ;  . #include <Math/Minim",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1MinimTransformVariable.html:440,variab,variables,440,doc/master/classROOT_1_1Math_1_1MinimTransformVariable.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1MinimTransformVariable.html,4,['variab'],"['variable', 'variables']"
Modifiability,. ROOT: ROOT::Math::MultiDimParamFunctionAdapter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::MultiDimParamFunctionAdapter Class ReferenceMath » MathCore » Function Classes and Interfaces » Parametric Function Evaluation Interfaces. ; MultiDimParamFunctionAdapter class to wrap a one-dimensional parametric function in a multi dimensional parametric function interface This is used typically in fitting where internally the function is stored as multidimensional. ; To wrap a non-parametric one-dim function in a multi-dim interface one can use simply a ROOT::Math::WrappedFunction<ROOT::Math::IGenFunction> or ROOT::Math::Functor and ROOT::Math::GradFunctor for gradient functions; This class differs from WrappedParamFunction in the fact that the parameters are not stored in the adapter class and optionally it keeps a cloned and managed copy of the adapter class. ; Definition at line 41 of file MultiDimParamFunctionAdapter.h. Public Types; typedef IParamMultiFunction::BaseFunc BaseFunc;  ;  Public Types inherited from ROOT::Math::IParametricFunctionMultiDimTempl< double >; typedef IBaseFunctionMultiDimTempl< double > BaseFunc;  ;  Public Types inherited from ROOT::Math::IBaseFunctionMultiDimTempl< T >; typedef T BackendType;  ; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  . Public Member Functions;  MultiDimParamFunctionAdapter (const IParamFunction &f);  Constructor from a parametric one dim function interface from a const reference Own the function in this case. ;  ;  MultiDimParamFunctionAdapter (const MultiDimParamFunctionAdapter &rhs);  Copy constructor. ;  ;  MultiDimParamFunctionAdapter (IParamFunction &f);  Constructor from a parametric one dim function interface from a non-const reference Do not own the function in this case. ;  ;  ~MultiDimParamFunctionAdapter,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1MultiDimParamFunctionAdapter.html:985,adapt,adapter,985,doc/master/classROOT_1_1Math_1_1MultiDimParamFunctionAdapter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1MultiDimParamFunctionAdapter.html,2,['adapt'],['adapter']
Modifiability,. ROOT: ROOT::Math::MultiDimParamGradFunctionAdapter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::MultiDimParamGradFunctionAdapter Class ReferenceMath » MathCore » Function Classes and Interfaces » Parametric Function Evaluation Interfaces. ; MultiDimParamGradFunctionAdapter class to wrap a one-dimensional parametric gradient function in a multi dimensional parametric gradient function interface This is used typically in fitting where internally the function is stored as multidimensional. ; To wrap a non-parametric one-dim gradient function in a multi-dim interface one can use simply a a ROOT::Math::GradFunctor; The parameters are not stored in the adapter class and by default the pointer to the 1D function is owned. This means that deleting the class deletes also the 1D function and copying the class copies also the 1D function This class differs from WrappedParamFunction in the fact that the parameters are not stored in the adapter class and optionally it keeps a cloned and managed copy of the adapter class. ; Definition at line 172 of file MultiDimParamFunctionAdapter.h. Public Types; typedef IParamMultiGradFunction::BaseFunc BaseFunc;  ;  Public Types inherited from ROOT::Math::IParametricGradFunctionMultiDimTempl< T >; using BaseFunc = typename IParametricFunctionMultiDimTempl< T >::BaseFunc;  ; using BaseGradFunc = IGradientFunctionMultiDimTempl< T >;  ; using BaseParamFunc = IParametricFunctionMultiDimTempl< T >;  ;  Public Types inherited from ROOT::Math::IParametricFunctionMultiDimTempl< T >; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  ;  Public Types inherited from ROOT::Math::IBaseFunctionMultiDimTempl< T >; typedef T BackendType;  ; typedef IBaseFunctionMultiDimTempl< T > BaseFunc;  . Public Member Functions;  MultiDimParamGradFunctionAdapter (const,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1MultiDimParamGradFunctionAdapter.html:860,adapt,adapter,860,doc/master/classROOT_1_1Math_1_1MultiDimParamGradFunctionAdapter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1MultiDimParamGradFunctionAdapter.html,1,['adapt'],['adapter']
Modifiability,". ROOT: ROOT::Math::MultiGenFunctionFitness Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::MultiGenFunctionFitness Class Reference. . Definition at line 18 of file GeneticMinimizer.cxx. Public Member Functions;  MultiGenFunctionFitness (const ROOT::Math::IMultiGenFunction &function);  ; Double_t EstimatorFunction (std::vector< double > &factors) override;  ; Double_t Evaluate (const std::vector< double > &factors) const;  ; void FixParameter (unsigned int ipar, double value, bool fix=true);  ; unsigned int NCalls () const;  ; unsigned int NDims () const;  ; unsigned int NTotal () const;  ; const std::vector< double > & Transform (const std::vector< double > &factors) const;  ;  Public Member Functions inherited from TMVA::IFitterTarget;  IFitterTarget ();  constructor ;  ; virtual ~IFitterTarget ();  ; virtual TClass * IsA () const;  ; virtual void ProgressNotifier (TString, TString);  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Private Attributes; std::vector< int > fFixedParFlag;  ; const ROOT::Math::IMultiGenFunction & fFunc;  ; unsigned int fNCalls;  ; unsigned int fNFree;  ; std::vector< double > fValues;  . Additional Inherited Members;  Static Public Member Functions inherited from TMVA::IFitterTarget; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Inheritance diagram for ROOT::Math::MultiGenFunctionFitness:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ MultiGenFunctionFitness(). ROOT::Math::MultiGenFunctionFitness::MultiGenFunctionFitness ; (; const ROOT::Math::IMultiGenFunction & ; function). inline . Definition at line 27 of file GeneticMinimizer",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1MultiGenFunctionFitness.html:868,inherit,inherited,868,doc/master/classROOT_1_1Math_1_1MultiGenFunctionFitness.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1MultiGenFunctionFitness.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Math::PDFIntegral Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::PDFIntegral Class Reference. . Definition at line 77 of file GoFTest.cxx. Public Member Functions;  PDFIntegral (const IGenFunction &pdf, Double_t xmin=0, Double_t xmax=-1);  ;  ~PDFIntegral () override;  ; IGenFunction * Clone () const override;  Clone a function. ;  ; Double_t DoEval (Double_t x) const override;  implementation of the evaluation function. Must be implemented by derived classes ;  ;  Public Member Functions inherited from ROOT::Math::IBaseFunctionOneDim; virtual ~IBaseFunctionOneDim ()=default;  ; virtual bool HasGradient () const;  ; double operator() (const double *x) const;  Evaluate the function at a point x[]. ;  ; double operator() (double x) const;  Evaluate the function at a point x. ;  . Private Attributes; IntegratorOneDim fIntegral;  ; Double_t fNorm;  ; const IGenFunction * fPDF;  ; Double_t fXmax;  ; Double_t fXmin;  . Additional Inherited Members;  Public Types inherited from ROOT::Math::IBaseFunctionOneDim; typedef IBaseFunctionOneDim BaseFunc;  . Inheritance diagram for ROOT::Math::PDFIntegral:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~PDFIntegral(). ROOT::Math::PDFIntegral::~PDFIntegral ; (; ). inlineoverride . Definition at line 85 of file GoFTest.cxx. ◆ PDFIntegral(). ROOT::Math::PDFIntegral::PDFIntegral ; (; const IGenFunction & ; pdf, . Double_t ; xmin = 0, . Double_t ; xmax = -1 . ). inline . Definition at line 87 of file GoFTest.cxx. Member Function Documentation. ◆ Clone(). IGenFunction * ROOT::Math::PDFIntegral::Clone ; (; ); const. inlineoverridevirtual . Clone a function. ; Each derived class will implement their version of the private DoClone method. ; Implements ROOT::Math::IBaseFunctionOneDim",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1PDFIntegral.html:665,inherit,inherited,665,doc/master/classROOT_1_1Math_1_1PDFIntegral.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1PDFIntegral.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::Math::RMinimizer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; Private Attributes |; List of all members ; ROOT::Math::RMinimizer Class Reference. ; RMinimizer class. ; Minimizer class that uses the ROOT/R interface to pass functions and minimize them in R.; The class implements the ROOT::Math::Minimizer interface and can be instantiated using the ROOT plugin manager (plugin name is ""RMinimizer""). The various minimization algorithms (BFGS, Nelder-Mead, SANN, etc..) can be passed as an option. The default algorithm is BFGS.; The library for this and future R/ROOT classes is currently libRtools.so ; Definition at line 33 of file RMinimizer.h. Public Member Functions;  RMinimizer (Option_t *method);  Default constructor. ;  ;  ~RMinimizer () override;  Destructor. ;  ; double CovMatrix (unsigned int ivar, unsigned int jvar) const override;  return covariance matrices element for variables ivar,jvar if the variable is fixed the return value is zero The ordering of the variables is the same as in the parameter and errors vectors ;  ; const double * Errors () const override;  return errors at the minimum ;  ; bool GetCovMatrix (double *covMat) const override;  Fill the passed array with the covariance matrix elements if the variable is fixed or const the value is zero. ;  ; double HessMatrix (unsigned int i, unsigned int j) const;  Returns the ith jth component of the Hessian matrix. ;  ; bool Minimize () override;  Function to find the minimum. ;  ; unsigned int NCalls () const override;  Returns the number of function calls. ;  ; bool ProvidesError () const override;  minimizer provides error and error matrix ;  ;  Public Member Functions inherited from ROOT::Math::BasicMinimizer;  BasicMinimizer ();  Default constructor. ;  ;  ~BasicMinimizer () override;  Destructor. ;  ; bool FixVariable (unsigned int ivar) override;  fix an exist",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1RMinimizer.html:495,plugin,plugin,495,doc/master/classROOT_1_1Math_1_1RMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1RMinimizer.html,2,['plugin'],['plugin']
Modifiability,". ROOT: ROOT::Math::RootFinder Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::Math::RootFinder Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » One-dimensional Root-Finding. ; User Class to find the Root of one dimensional functions. ; The GSL Methods are implemented in MathMore and they are loaded automatically via the plug-in manager; The possible types of Root-finding algorithms are: . Root Bracketing Algorithms which do not require function derivatives . RootFinder::kBRENT (default method implemented in MathCore) . RootFinder::kGSL_BISECTION . RootFinder::kGSL_FALSE_POS . RootFinder::kGSL_BRENT . Root Finding Algorithms using Derivatives . RootFinder::kGSL_NEWTON . RootFinder::kGSL_SECANT . RootFinder::kGSL_STEFFENSON . This class does not cupport copying ; Definition at line 73 of file RootFinder.h. Public Types; enum  EType { ;   kBRENT; , kGSL_BISECTION; , kGSL_FALSE_POS; , kGSL_BRENT; , ;   kGSL_NEWTON; , kGSL_SECANT; , kGSL_STEFFENSON. };  . Public Member Functions;  RootFinder (const RootFinder &)=delete;  ;  RootFinder (RootFinder &&)=delete;  ;  RootFinder (RootFinder::EType type=RootFinder::kBRENT);  Construct a Root-Finder algorithm. ;  ; virtual ~RootFinder ();  ; int Iterate ();  Perform a single iteration and return the Status. ;  ; int Iterations () const;  Return the number of iteration performed to find the Root. ;  ; const char * Name () const;  Return the current and latest estimate of the lower value of the Root-finding interval (for bracketing algorithms) ;  ; RootFinder & operator= (const RootFinder &rhs)=delete;  ; RootFinder & operator= (RootFinder &&rhs)=delete;  ; double Root () const;  Return the current and latest estimate of the Root. ;  ; bool SetFunction (const IGenFunction &f, double xlow, double xup);  Provide to the solver the function and th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1RootFinder.html:514,plug-in,plug-in,514,doc/master/classROOT_1_1Math_1_1RootFinder.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1RootFinder.html,1,['plug-in'],['plug-in']
Modifiability,". ROOT: ROOT::Math::SinVariableTransformation Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Math::SinVariableTransformation Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multi-dimensional Minimization. ; Sin Transformation class for dealing with double bounded variables. ; Definition at line 38 of file MinimizerVariableTransformation.h. Public Member Functions;  ~SinVariableTransformation () override;  ; double DInt2Ext (double value, double lower, double upper) const override;  ; double Ext2int (double value, double lower, double upper) const override;  ; double Int2ext (double value, double lower, double upper) const override;  ;  Public Member Functions inherited from ROOT::Math::MinimizerVariableTransformation; virtual ~MinimizerVariableTransformation ();  . #include <Math/MinimizerVariableTransformation.h>. Inheritance diagram for ROOT::Math::SinVariableTransformation:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~SinVariableTransformation(). ROOT::Math::SinVariableTransformation::~SinVariableTransformation ; (; ). inlineoverride . Definition at line 42 of file MinimizerVariableTransformation.h. Member Function Documentation. ◆ DInt2Ext(). double ROOT::Math::SinVariableTransformation::DInt2Ext ; (; double ; value, . double ; lower, . double ; upper . ); const. overridevirtual . Implements ROOT::Math::MinimizerVariableTransformation.; Definition at line 50 of file MinimizerVariableTransformation.cxx. ◆ Ext2int(). double ROOT::Math::SinVariableTransformation::Ext2int ; (; double ; value, . double ; lower, . double ; upper . ); const. overridevirtual . Implements ROOT::Math::MinimizerVariableTransformation.; Definition at line 23 of file MinimizerVariableTransformation.cxx. ◆ Int2ext(). double ROOT::Math::SinVariableT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1SinVariableTransformation.html:419,variab,variables,419,doc/master/classROOT_1_1Math_1_1SinVariableTransformation.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1SinVariableTransformation.html,2,"['inherit', 'variab']","['inherited', 'variables']"
Modifiability,". ROOT: ROOT::Math::SqrtLowVariableTransformation Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Math::SqrtLowVariableTransformation Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multi-dimensional Minimization. ; Sqrt Transformation class for dealing with lower bounded variables. ; Definition at line 58 of file MinimizerVariableTransformation.h. Public Member Functions;  ~SqrtLowVariableTransformation () override;  ; double DInt2Ext (double value, double lower, double upper) const override;  ; double Ext2int (double value, double lower, double upper) const override;  ; double Int2ext (double value, double lower, double upper) const override;  ;  Public Member Functions inherited from ROOT::Math::MinimizerVariableTransformation; virtual ~MinimizerVariableTransformation ();  . #include <Math/MinimizerVariableTransformation.h>. Inheritance diagram for ROOT::Math::SqrtLowVariableTransformation:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~SqrtLowVariableTransformation(). ROOT::Math::SqrtLowVariableTransformation::~SqrtLowVariableTransformation ; (; ). inlineoverride . Definition at line 61 of file MinimizerVariableTransformation.h. Member Function Documentation. ◆ DInt2Ext(). double ROOT::Math::SqrtLowVariableTransformation::DInt2Ext ; (; double ; value, . double ; lower, . double ; upper . ); const. overridevirtual . Implements ROOT::Math::MinimizerVariableTransformation.; Definition at line 76 of file MinimizerVariableTransformation.cxx. ◆ Ext2int(). double ROOT::Math::SqrtLowVariableTransformation::Ext2int ; (; double ; value, . double ; lower, . double ; upper . ); const. overridevirtual . Implements ROOT::Math::MinimizerVariableTransformation.; Definition at line 66 of file MinimizerVariableTransformation.cxx. ◆ Int2ex",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1SqrtLowVariableTransformation.html:427,variab,variables,427,doc/master/classROOT_1_1Math_1_1SqrtLowVariableTransformation.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1SqrtLowVariableTransformation.html,2,"['inherit', 'variab']","['inherited', 'variables']"
Modifiability,". ROOT: ROOT::Math::SqrtUpVariableTransformation Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Math::SqrtUpVariableTransformation Class ReferenceMath » MathCore | Math » MathMore » Numerical Algorithms » Multi-dimensional Minimization. ; Sqrt Transformation class for dealing with upper bounded variables. ; Definition at line 74 of file MinimizerVariableTransformation.h. Public Member Functions;  ~SqrtUpVariableTransformation () override;  ; double DInt2Ext (double value, double lower, double upper) const override;  ; double Ext2int (double value, double lower, double upper) const override;  ; double Int2ext (double value, double lower, double upper) const override;  ;  Public Member Functions inherited from ROOT::Math::MinimizerVariableTransformation; virtual ~MinimizerVariableTransformation ();  . #include <Math/MinimizerVariableTransformation.h>. Inheritance diagram for ROOT::Math::SqrtUpVariableTransformation:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~SqrtUpVariableTransformation(). ROOT::Math::SqrtUpVariableTransformation::~SqrtUpVariableTransformation ; (; ). inlineoverride . Definition at line 77 of file MinimizerVariableTransformation.h. Member Function Documentation. ◆ DInt2Ext(). double ROOT::Math::SqrtUpVariableTransformation::DInt2Ext ; (; double ; value, . double ; lower, . double ; upper . ); const. overridevirtual . Implements ROOT::Math::MinimizerVariableTransformation.; Definition at line 100 of file MinimizerVariableTransformation.cxx. ◆ Ext2int(). double ROOT::Math::SqrtUpVariableTransformation::Ext2int ; (; double ; value, . double ; lower, . double ; upper . ); const. overridevirtual . Implements ROOT::Math::MinimizerVariableTransformation.; Definition at line 92 of file MinimizerVariableTransformation.cxx. ◆ Int2ext(). dou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1SqrtUpVariableTransformation.html:425,variab,variables,425,doc/master/classROOT_1_1Math_1_1SqrtUpVariableTransformation.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1SqrtUpVariableTransformation.html,2,"['inherit', 'variab']","['inherited', 'variables']"
Modifiability,". ROOT: ROOT::Math::VirtualIntegrator Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Math::VirtualIntegrator Class ReferenceabstractMath » MathCore | Math » MathMore » Numerical Algorithms » Numerical Integration. ; Abstract class for all numerical integration methods (1D and multi-dim) Interface defining the common methods for the numerical integrator classes of one and multi dimensions The derived class VirtualIntegratorOneDim defines the methods for one-dimensional integration. ; The derived class VirtualIntegratorMultiDim defines the method for multi-dimensional integration. The concrete classes for one dimension (e.g. GSLIntegrator) or multi-dimension (e.g. GSLMCIntegrator) can be created using the plug-in manager. Users should not use directly this class but the concrete classes ROOT::Math::IntegratorOneDim or ROOT::Math::IntegratorMultiDim ; Definition at line 48 of file VirtualIntegrator.h. Public Member Functions; virtual ~VirtualIntegrator ();  destructor: no operation ;  ; virtual double Error () const =0;  return the estimate of the absolute Error of the last Integral calculation ;  ; virtual int NEval () const;  return number of function evaluations in calculating the integral (if integrator do not implement this function returns -1) ;  ; virtual double Result () const =0;  return the Result of the last Integral calculation ;  ; virtual void SetAbsTolerance (double)=0;  set the desired absolute Error ;  ; virtual void SetRelTolerance (double)=0;  set the desired relative Error ;  ; virtual int Status () const =0;  return the Error Status of the last Integral calculation ;  . #include <Math/VirtualIntegrator.h>. Inheritance diagram for ROOT::Math::VirtualIntegrator:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~VirtualIntegrator(). virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1VirtualIntegrator.html:842,plug-in,plug-in,842,doc/master/classROOT_1_1Math_1_1VirtualIntegrator.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1VirtualIntegrator.html,1,['plug-in'],['plug-in']
Modifiability,". ROOT: ROOT::Math::VirtualIntegratorMultiDim Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Math::VirtualIntegratorMultiDim Class ReferenceabstractMath » MathCore | Math » MathMore » Numerical Algorithms » Numerical Integration. ; Interface (abstract) class for multi numerical integration It must be implemented by the concrete Integrator classes like ROOT::Math::GSLMCIntegrator. ; Plug-in's exist in ROOT to be able to instantiate the derived classes via the plug-in manager. Users should not use directly this class but the concrete classes ROOT::Math::IntegratorMultiDim. ; Definition at line 160 of file VirtualIntegrator.h. Public Member Functions;  ~VirtualIntegratorMultiDim () override;  destructor: no operation ;  ; virtual double Integral (const double *, const double *)=0;  evaluate multi-dim integral ;  ; virtual ROOT::Math::IntegratorMultiDimOptions Options () const =0;  get the option used for the integration implement by derived class otherwise return default ones ;  ; virtual void SetFunction (const IMultiGenFunction &)=0;  setting a multi-dim function ;  ; virtual void SetOptions (const ROOT::Math::IntegratorMultiDimOptions &opt);  set the options (if needed must be re-implemented by derived classes) ;  ; virtual ROOT::Math::IntegrationMultiDim::Type Type () const;  return type of integrator ;  ;  Public Member Functions inherited from ROOT::Math::VirtualIntegrator; virtual ~VirtualIntegrator ();  destructor: no operation ;  ; virtual double Error () const =0;  return the estimate of the absolute Error of the last Integral calculation ;  ; virtual int NEval () const;  return number of function evaluations in calculating the integral (if integrator do not implement this function returns -1) ;  ; virtual double Result () const =0;  return the Result of the last Integral calculation ;  ; virtual void SetAbsTolerance (double)=0;  set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1VirtualIntegratorMultiDim.html:592,plug-in,plug-in,592,doc/master/classROOT_1_1Math_1_1VirtualIntegratorMultiDim.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1VirtualIntegratorMultiDim.html,1,['plug-in'],['plug-in']
Modifiability,". ROOT: ROOT::Math::VirtualIntegratorOneDim Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; ROOT::Math::VirtualIntegratorOneDim Class ReferenceabstractMath » MathCore | Math » MathMore » Numerical Algorithms » Numerical Integration. ; Interface (abstract) class for 1D numerical integration It must be implemented by the concrete Integrator classes like ROOT::Math::GSLIntegrator. ; Plug-in's exist in ROOT to be able to instantiate the derived classes via the plug-in manager. Users should not use directly this class but the concrete classes ROOT::Math::IntegratorOneDim. ; Definition at line 101 of file VirtualIntegrator.h. Public Member Functions;  ~VirtualIntegratorOneDim () override;  destructor: no operation ;  ; virtual double Integral ()=0;  evaluate un-defined integral (between -inf, + inf) ;  ; virtual double Integral (const std::vector< double > &pts)=0;  evaluate integral with singular points ;  ; virtual double Integral (double a, double b)=0;  evaluate integral ;  ; virtual double IntegralCauchy (double a, double b, double c)=0;  evaluate Cauchy integral ;  ; virtual double IntegralLow (double b)=0;  evaluate integral over the (-inf, b) ;  ; virtual double IntegralUp (double a)=0;  evaluate integral over the (a, +inf) ;  ; virtual ROOT::Math::IntegratorOneDimOptions Options () const =0;  get the option used for the integration must be implemented by derived class ;  ; virtual void SetFunction (const IGenFunction &)=0;  set integration function ;  ; virtual void SetOptions (const ROOT::Math::IntegratorOneDimOptions &opt);  set the options (should be re-implemented by derived classes -if more options than tolerance exist ;  ; virtual ROOT::Math::IntegrationOneDim::Type Type () const;  return type of integrator ;  ;  Public Member Functions inherited from ROOT::Math::VirtualIntegrator; virtual ~VirtualIntegrator ();  destructor: no operation ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1VirtualIntegratorOneDim.html:583,plug-in,plug-in,583,doc/master/classROOT_1_1Math_1_1VirtualIntegratorOneDim.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1VirtualIntegratorOneDim.html,1,['plug-in'],['plug-in']
Modifiability,". ROOT: ROOT::Math::WrappedParamFunctionGen< FuncPtr > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::Math::WrappedParamFunctionGen< FuncPtr > Class Template ReferenceMath » MathCore » Function Classes and Interfaces » Parametric Function Evaluation Interfaces. ; template<typename FuncPtr = FreeMultiFunctionPtr>; class ROOT::Math::WrappedParamFunctionGen< FuncPtr >WrappedParamGenFunction class to wrap any multi-dimensional function implementing the operator()(const double * ) in an interface-like IParamFunction, by fixing some of the variables and define them as parameters. ; i.e. transform any multi-dim function in a parametric function ; Definition at line 143 of file WrappedParamFunction.h. Public Member Functions;  WrappedParamFunctionGen (const FuncPtr &func, unsigned int dim, unsigned int npar, const double *par, const unsigned int *idx);  Constructor a wrapped function from a pointer to a generic callable object implementation operator()(const double *), the new function dimension, the number of parameters (number of fixed variables) and an array specifying the index of the fixed variables which became parameters in the new API. ;  ;  WrappedParamFunctionGen (FuncPtr &func, unsigned int dim, unsigned int npar, const double *par, const unsigned int *idx);  Constructor as before but taking now a non - const pointer to a callable object. ;  ; IMultiGenFunction * Clone () const override;  clone the function ;  ; unsigned int NDim () const override;  Retrieve the dimension of the function. ;  ; unsigned int NPar () const override;  Return the number of Parameters. ;  ; const double * Parameters () const override;  Access the parameter values. ;  ; void SetParameters (const double *p) override;  Set the parameter values. ;  ;  Public Member Functions inherited from ROOT::Math::IPar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1WrappedParamFunctionGen.html:728,variab,variables,728,doc/master/classROOT_1_1Math_1_1WrappedParamFunctionGen.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1WrappedParamFunctionGen.html,1,['variab'],['variables']
Modifiability,". ROOT: ROOT::Minuit2::Minuit2Minimizer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; ROOT::Minuit2::Minuit2Minimizer Class ReferenceMath » Minuit2 Minimization Library. ; Minuit2Minimizer class implementing the ROOT::Math::Minimizer interface for Minuit2 minimization algorithm. ; In ROOT it can be instantiated using the plug-in manager (plug-in ""Minuit2"") Using a string (used by the plugin manager) or via an enumeration an one can set all the possible minimization algorithms (Migrad, Simplex, Combined, Scan and Fumili).; Refer to the guide for an introduction how Minuit works. ; Definition at line 54 of file Minuit2Minimizer.h. Public Member Functions;  Minuit2Minimizer (const char *type);  Constructor with a char (used by PM) ;  ;  Minuit2Minimizer (ROOT::Minuit2::EMinimizerType type=ROOT::Minuit2::kMigrad);  Default constructor. ;  ;  ~Minuit2Minimizer () override;  Destructor (no operations) ;  ; void Clear () override;  reset for consecutive minimization - implement if needed ;  ; bool Contour (unsigned int i, unsigned int j, unsigned int &npoints, double *xi, double *xj) override;  find the contour points (xi,xj) of the function for parameter i and j around the minimum The contour will be find for value of the function = Min + ErrorUp(); ;  ; double Correlation (unsigned int i, unsigned int j) const override;  return correlation coefficient between variable i and j. ;  ; double CovMatrix (unsigned int i, unsigned int j) const override;  return covariance matrix elements if the variable is fixed or const the value is zero The ordering of the variables is the same as in errors and parameter value. ;  ; int CovMatrixStatus () const override;  return the status of the covariance matrix status = -1 : not available (inversion failed or Hesse failed) status = 0 : available but not positive defin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html:499,plug-in,plug-in,499,doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html,3,"['plug-in', 'plugin']","['plug-in', 'plugin']"
Modifiability,". ROOT: ROOT::R::TRDataFrame Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Friends |; List of all members ; ROOT::R::TRDataFrame Class ReferenceR Interface for Statistical Computing. ; This is a class to create DataFrames from ROOT to R. ; TRDataFrame class; DataFrame is a very important datatype in R and in ROOTR we have a class to manipulate; dataframes called TRDataFrame, with a lot of very useful operators overloaded to work with TRDataFrame's objects; in a similar way that in the R environment but from c++ in ROOT.; Example:. Lets to create need data to play with dataframe features. Creating variables. TVectorD v1(3);; std::vector<Double_t> v2(3);; std::array<Int_t,3> v3{ {1,2,3} };; std::list<std::string> names;; TVectorT< Double_t >; v2@ v2Definition rootcling_impl.cxx:3702; v3@ v3Definition rootcling_impl.cxx:3703; v1@ v1Definition rootcling_impl.cxx:3701; Assigning values . v1[0]=1;; v1[1]=2;; v1[2]=3;; ; v2[0]=0.101;; v2[1]=0.202;; v2[2]=0.303;; ; names.push_back(""v1"");; names.push_back(""v2"");; names.push_back(""v3"");; ; ROOT::R::TRInterface &r=ROOT::R::TRInterface::Instance();; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; ROOT::R::TRInterfaceROOT R was implemented using the R Project library and the modules Rcpp and RInsideDefinition TRInterface.h:136; ROOT::R::TRInterface::Instancestatic TRInterface & Instance()static method to get an TRInterface instance referenceDefinition TRInterface.cxx:187; In R the dataframe have associate to every column a label, in ROOTR you can have the same label using the class ROOT::R::Label to create a TRDataFrame where you data have a label associate. Cre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1R_1_1TRDataFrame.html:775,variab,variables,775,doc/master/classROOT_1_1R_1_1TRDataFrame.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1R_1_1TRDataFrame.html,1,['variab'],['variables']
Modifiability,". ROOT: ROOT::RBrowserCatchedWidget Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RBrowserCatchedWidget Class Reference. . Definition at line 235 of file RBrowser.cxx. Public Member Functions;  RBrowserCatchedWidget (const std::string &name, RWebWindow *win, const std::string &kind);  ; std::string GetKind () const override;  ; std::string GetTitle () override;  ; std::string GetUrl () override;  ; bool IsValid () override;  ; void Show (const std::string &) override;  ;  Public Member Functions inherited from ROOT::RBrowserWidget;  RBrowserWidget (const std::string &name);  ; virtual ~RBrowserWidget ()=default;  ; virtual void CheckModified ();  ; virtual bool DrawElement (std::shared_ptr< Browsable::RElement > &, const std::string &="""");  ; RBrowser * GetBrowser () const;  ; const std::string & GetName () const;  ; const Browsable::RElementPath_t & GetPath () const;  ; virtual void ResetConn ();  ; virtual std::string SendWidgetContent ();  ; std::string SendWidgetTitle ();  Returns string which can be send to browser client to set/change title of the widget tab. ;  ; virtual void SetActive ();  ; void SetPath (const Browsable::RElementPath_t &path);  . Public Attributes; std::string fCatchedKind;  ; RWebWindow * fWindow {nullptr};  . Inheritance diagram for ROOT::RBrowserCatchedWidget:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RBrowserCatchedWidget(). ROOT::RBrowserCatchedWidget::RBrowserCatchedWidget ; (; const std::string & ; name, . RWebWindow * ; win, . const std::string & ; kind . ). inline . Definition at line 251 of file RBrowser.cxx. Member Function Documentation. ◆ GetKind(). std::string ROOT::RBrowserCatchedWidget::GetKind ; (; ); const. inlineoverridevirtual . Implements ROOT::RBrowserWidget.; Definition at li",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RBrowserCatchedWidget.html:652,inherit,inherited,652,doc/master/classROOT_1_1RBrowserCatchedWidget.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RBrowserCatchedWidget.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::RBrowserCatchedWidget Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RBrowserCatchedWidget Class Reference. . Definition at line 235 of file RBrowser.cxx. Public Member Functions;  RBrowserCatchedWidget (const std::string &name, RWebWindow *win, const std::string &kind);  ; std::string GetKind () const override;  ; std::string GetTitle () override;  ; std::string GetUrl () override;  ; void Show (const std::string &) override;  ;  Public Member Functions inherited from ROOT::RBrowserWidget;  RBrowserWidget (const std::string &name);  ; virtual ~RBrowserWidget ()=default;  ; virtual void CheckModified ();  ; virtual bool DrawElement (std::shared_ptr< Browsable::RElement > &, const std::string &="""");  ; RBrowser * GetBrowser () const;  ; const std::string & GetName () const;  ; const Browsable::RElementPath_t & GetPath () const;  ; virtual void ResetConn ();  ; virtual std::string SendWidgetContent ();  ; std::string SendWidgetTitle ();  Returns string which can be send to browser client to set/change title of the widget tab. ;  ; virtual void SetActive ();  ; void SetPath (const Browsable::RElementPath_t &path);  . Public Attributes; std::string fCatchedKind;  ; RWebWindow * fWindow {nullptr};  . Inheritance diagram for ROOT::RBrowserCatchedWidget:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RBrowserCatchedWidget(). ROOT::RBrowserCatchedWidget::RBrowserCatchedWidget ; (; const std::string & ; name, . RWebWindow * ; win, . const std::string & ; kind . ). inline . Definition at line 249 of file RBrowser.cxx. Member Function Documentation. ◆ GetKind(). std::string ROOT::RBrowserCatchedWidget::GetKind ; (; ); const. inlineoverridevirtual . Implements ROOT::RBrowserWidget.; Definition at line 243 of file RBrowser.cxx. ◆",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RBrowserCatchedWidget.html:622,inherit,inherited,622,doc/v632/classROOT_1_1RBrowserCatchedWidget.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RBrowserCatchedWidget.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::RBrowserDataCleanup Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::RBrowserDataCleanup Class Reference. . Definition at line 43 of file RBrowserData.cxx. Public Member Functions;  RBrowserDataCleanup (RBrowserData &_data);  ; void RecursiveRemove (TObject *obj) override;  Recursively remove this object from a list. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RBrowserDataCleanup.html:512,inherit,inherited,512,doc/master/classROOT_1_1RBrowserDataCleanup.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RBrowserDataCleanup.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::RBrowserDataCleanup Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::RBrowserDataCleanup Class Reference. . Definition at line 43 of file RBrowserData.cxx. Public Member Functions;  RBrowserDataCleanup (RBrowserData &_data);  ; void RecursiveRemove (TObject *obj) override;  Recursively remove this object from a list. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RBrowserDataCleanup.html:511,inherit,inherited,511,doc/v632/classROOT_1_1RBrowserDataCleanup.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RBrowserDataCleanup.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::RBrowserEditorWidget Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RBrowserEditorWidget Class Reference. . Definition at line 60 of file RBrowser.cxx. Public Member Functions;  RBrowserEditorWidget (const std::string &name, bool is_editor=true);  ; virtual ~RBrowserEditorWidget ()=default;  ; bool DrawElement (std::shared_ptr< Browsable::RElement > &elem, const std::string &="""") override;  ; std::string GetKind () const override;  ; std::string GetTitle () override;  ; std::string GetUrl () override;  ; void ResetConn () override;  ; std::string SendWidgetContent () override;  ; void Show (const std::string &) override;  ;  Public Member Functions inherited from ROOT::RBrowserWidget;  RBrowserWidget (const std::string &name);  ; virtual ~RBrowserWidget ()=default;  ; virtual void CheckModified ();  ; RBrowser * GetBrowser () const;  ; const std::string & GetName () const;  ; const Browsable::RElementPath_t & GetPath () const;  ; virtual bool IsValid ();  ; std::string SendWidgetTitle ();  Returns string which can be send to browser client to set/change title of the widget tab. ;  ; virtual void SetActive ();  ; void SetPath (const Browsable::RElementPath_t &path);  . Public Attributes; std::string fContent;  ; std::string fFileName;  ; bool fFirstSend {false};  ! if editor content was send at least once ;  ; bool fIsEditor {true};  ! either editor or image viewer ;  ; std::string fItemPath;  ! item path in the browser ;  ; std::string fTitle;  . Inheritance diagram for ROOT::RBrowserEditorWidget:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RBrowserEditorWidget(). ROOT::RBrowserEditorWidget::RBrowserEditorWidget ; (; const std::string & ; name, . bool ; is_editor = true . ). inline . Definition at line 70 of file",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RBrowserEditorWidget.html:821,inherit,inherited,821,doc/master/classROOT_1_1RBrowserEditorWidget.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RBrowserEditorWidget.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::RBrowserEditorWidget Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RBrowserEditorWidget Class Reference. . Definition at line 60 of file RBrowser.cxx. Public Member Functions;  RBrowserEditorWidget (const std::string &name, bool is_editor=true);  ; virtual ~RBrowserEditorWidget ()=default;  ; bool DrawElement (std::shared_ptr< Browsable::RElement > &elem, const std::string &="""") override;  ; std::string GetKind () const override;  ; std::string GetTitle () override;  ; std::string GetUrl () override;  ; void ResetConn () override;  ; std::string SendWidgetContent () override;  ; void Show (const std::string &) override;  ;  Public Member Functions inherited from ROOT::RBrowserWidget;  RBrowserWidget (const std::string &name);  ; virtual ~RBrowserWidget ()=default;  ; virtual void CheckModified ();  ; RBrowser * GetBrowser () const;  ; const std::string & GetName () const;  ; const Browsable::RElementPath_t & GetPath () const;  ; std::string SendWidgetTitle ();  Returns string which can be send to browser client to set/change title of the widget tab. ;  ; virtual void SetActive ();  ; void SetPath (const Browsable::RElementPath_t &path);  . Public Attributes; std::string fContent;  ; std::string fFileName;  ; bool fFirstSend {false};  ! if editor content was send at least once ;  ; bool fIsEditor {true};  ! either editor or image viewer ;  ; std::string fItemPath;  ! item path in the browser ;  ; std::string fTitle;  . Inheritance diagram for ROOT::RBrowserEditorWidget:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RBrowserEditorWidget(). ROOT::RBrowserEditorWidget::RBrowserEditorWidget ; (; const std::string & ; name, . bool ; is_editor = true . ). inline . Definition at line 70 of file RBrowser.cxx. ◆ ~RBrowserEdi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RBrowserEditorWidget.html:820,inherit,inherited,820,doc/v632/classROOT_1_1RBrowserEditorWidget.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RBrowserEditorWidget.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::RBrowserInfoWidget Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RBrowserInfoWidget Class Reference. . Definition at line 136 of file RBrowser.cxx. Public Types; enum  { kMaxContentLen = 10000000; };  . Public Member Functions;  RBrowserInfoWidget (const std::string &name);  ; virtual ~RBrowserInfoWidget ()=default;  ; bool DrawElement (std::shared_ptr< Browsable::RElement > &, const std::string &="""") override;  ; std::string GetKind () const override;  ; std::string GetTitle () override;  ; std::string GetUrl () override;  ; void Refresh ();  ; void RefreshFromLogs (const std::string &promt, const std::vector< std::string > &logs);  ; void ResetConn () override;  ; std::string SendWidgetContent () override;  ; void Show (const std::string &) override;  ;  Public Member Functions inherited from ROOT::RBrowserWidget;  RBrowserWidget (const std::string &name);  ; virtual ~RBrowserWidget ()=default;  ; virtual void CheckModified ();  ; RBrowser * GetBrowser () const;  ; const std::string & GetName () const;  ; const Browsable::RElementPath_t & GetPath () const;  ; virtual bool IsValid ();  ; std::string SendWidgetTitle ();  Returns string which can be send to browser client to set/change title of the widget tab. ;  ; virtual void SetActive ();  ; void SetPath (const Browsable::RElementPath_t &path);  . Public Attributes; std::string fContent;  ; bool fFirstSend {false};  ! if editor content was send at least once ;  ; std::string fTitle;  . Inheritance diagram for ROOT::RBrowserInfoWidget:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkMaxContentLen . Definition at line 139 of file RBrowser.cxx. Constructor & Destructor Documentation. ◆ RBrowserInfoWidget(). ROOT::R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RBrowserInfoWidget.html:972,inherit,inherited,972,doc/master/classROOT_1_1RBrowserInfoWidget.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RBrowserInfoWidget.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::RBrowserInfoWidget Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RBrowserInfoWidget Class Reference. . Definition at line 136 of file RBrowser.cxx. Public Types; enum  { kMaxContentLen = 10000000; };  . Public Member Functions;  RBrowserInfoWidget (const std::string &name);  ; virtual ~RBrowserInfoWidget ()=default;  ; bool DrawElement (std::shared_ptr< Browsable::RElement > &, const std::string &="""") override;  ; std::string GetKind () const override;  ; std::string GetTitle () override;  ; std::string GetUrl () override;  ; void Refresh ();  ; void RefreshFromLogs (const std::string &promt, const std::vector< std::string > &logs);  ; void ResetConn () override;  ; std::string SendWidgetContent () override;  ; void Show (const std::string &) override;  ;  Public Member Functions inherited from ROOT::RBrowserWidget;  RBrowserWidget (const std::string &name);  ; virtual ~RBrowserWidget ()=default;  ; virtual void CheckModified ();  ; RBrowser * GetBrowser () const;  ; const std::string & GetName () const;  ; const Browsable::RElementPath_t & GetPath () const;  ; std::string SendWidgetTitle ();  Returns string which can be send to browser client to set/change title of the widget tab. ;  ; virtual void SetActive ();  ; void SetPath (const Browsable::RElementPath_t &path);  . Public Attributes; std::string fContent;  ; bool fFirstSend {false};  ! if editor content was send at least once ;  ; std::string fTitle;  . Inheritance diagram for ROOT::RBrowserInfoWidget:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. EnumeratorkMaxContentLen . Definition at line 139 of file RBrowser.cxx. Constructor & Destructor Documentation. ◆ RBrowserInfoWidget(). ROOT::RBrowserInfoWidget::RBrowserIn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RBrowserInfoWidget.html:971,inherit,inherited,971,doc/v632/classROOT_1_1RBrowserInfoWidget.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RBrowserInfoWidget.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::RBrowserTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RBrowserTimer Class Reference. . Definition at line 47 of file RBrowser.cxx. Public Member Functions;  RBrowserTimer (Long_t milliSec, Bool_t mode, RBrowser &br);  !< browser processing postponed requests ;  ; void Timeout () override;  timeout handler used to process postponed requests in main ROOT thread ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void Se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RBrowserTimer.html:563,inherit,inherited,563,doc/master/classROOT_1_1RBrowserTimer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RBrowserTimer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::RBrowserTimer Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RBrowserTimer Class Reference. . Definition at line 47 of file RBrowser.cxx. Public Member Functions;  RBrowserTimer (Long_t milliSec, Bool_t mode, RBrowser &br);  !< browser processing postponed requests ;  ; void Timeout () override;  timeout handler used to process postponed requests in main ROOT thread ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RBrowserTimer.html:562,inherit,inherited,562,doc/v632/classROOT_1_1RBrowserTimer.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RBrowserTimer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::RCompressionSetting Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Static Public Member Functions |; List of all members ; ROOT::RCompressionSetting Struct Reference. ; The global settings depend on a global variable named R__ZipMode which can be modified by a global function named R__SetZipMode. ; Both are defined in Bits.h. The default is to use the global setting and the default of the global setting is to use the ZLIB compression algorithm.; The LZMA algorithm (from the XZ package) is also available. The LZMA compression usually results in greater compression factors, but takes more CPU time and memory when compressing. LZMA memory usage is particularly high for compression levels 8 and 9.; Finally, the LZ4 package results in worse compression ratios than ZLIB but achieves much faster decompression rates. The current algorithms support level 1 to 9. The higher the level the greater the compression and more CPU time and memory resources used during compression. Level 0 means no compression.; Recommendation for the compression algorithm's levels:; ZLIB is recommended to be used with compression level 1 [101]; LZMA is recommended to be used with compression level 7-8 (higher is better, since in the case of LZMA we don't care about compression/decompression speed) [207 - 208]; LZ4 is recommended to be used with compression level 4 [404]; ZSTD is recommended to be used with compression level 5 [505] . Definition at line 46 of file Compression.h. Classes; struct  EAlgorithm;  ; struct  EDefaults;  ; struct  ELevel;  . Static Public Member Functions; static EAlgorithm::EValues AlgorithmFromCompressionSettings (int compSettings);  ; static std::string AlgorithmToString (EAlgorithm::EValues algorithm);  . #include <Compression.h>; Member Function Documentation. ◆ AlgorithmFromCompressionSettings(). static EAlgorithm::EValues ROOT::RCompressionSetting::AlgorithmFromCompressi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1RCompressionSetting.html:308,variab,variable,308,doc/master/structROOT_1_1RCompressionSetting.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1RCompressionSetting.html,1,['variab'],['variable']
Modifiability,". ROOT: ROOT::RCompressionSetting Struct Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Static Public Member Functions |; List of all members ; ROOT::RCompressionSetting Struct Reference. ; The global settings depend on a global variable named R__ZipMode which can be modified by a global function named R__SetZipMode. ; Both are defined in Bits.h. The default is to use the global setting and the default of the global setting is to use the ZLIB compression algorithm.; The LZMA algorithm (from the XZ package) is also available. The LZMA compression usually results in greater compression factors, but takes more CPU time and memory when compressing. LZMA memory usage is particularly high for compression levels 8 and 9.; Finally, the LZ4 package results in worse compression ratios than ZLIB but achieves much faster decompression rates. The current algorithms support level 1 to 9. The higher the level the greater the compression and more CPU time and memory resources used during compression. Level 0 means no compression.; Recommendation for the compression algorithm's levels:; ZLIB is recommended to be used with compression level 1 [101]; LZMA is recommended to be used with compression level 7-8 (higher is better, since in the case of LZMA we don't care about compression/decompression speed) [207 - 208]; LZ4 is recommended to be used with compression level 4 [404]; ZSTD is recommended to be used with compression level 5 [505] . Definition at line 45 of file Compression.h. Classes; struct  EAlgorithm;  ; struct  EDefaults;  ; struct  ELevel;  . Static Public Member Functions; static std::string AlgorithmToString (EAlgorithm::EValues algorithm);  . #include <Compression.h>; Member Function Documentation. ◆ AlgorithmToString(). static std::string ROOT::RCompressionSetting::AlgorithmToString ; (; EAlgorithm::EValues ; algorithm). static . The documentation for this struct was generated from the follow",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/structROOT_1_1RCompressionSetting.html:307,variab,variable,307,doc/v632/structROOT_1_1RCompressionSetting.html,https://root.cern,https://root.cern/doc/v632/structROOT_1_1RCompressionSetting.html,1,['variab'],['variable']
Modifiability,". ROOT: ROOT::RCompressionSetting::EAlgorithm Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; List of all members ; ROOT::RCompressionSetting::EAlgorithm Struct Reference. . Definition at line 86 of file Compression.h. Public Types; enum  EValues { ;   kInherit = -1; , kUseGlobal = 0; , kZLIB; , kLZMA; , ;   kOldCompressionAlgo; , kLZ4; , kZSTD; , kUndefined. };  Note: this is only temporarily a struct and will become a enum class hence the name convention used. More...;  . #include <Compression.h>; Member Enumeration Documentation. ◆ EValues. enum ROOT::RCompressionSetting::EAlgorithm::EValues. Note: this is only temporarily a struct and will become a enum class hence the name convention used. . EnumeratorkInherit Some objects use this value to denote that the compression algorithm should be inherited from the parent object (e.g., TBranch should get the algorithm from the TTree) . kUseGlobal Use the global compression algorithm. . kZLIB Use ZLIB compression. . kLZMA Use LZMA compression. . kOldCompressionAlgo Use the old compression algorithm. . kLZ4 Use LZ4 compression. . kZSTD Use ZSTD compression. . kUndefined Undefined compression algorithm (must be kept the last of the list in case a new algorithm is added). . Definition at line 88 of file Compression.h. The documentation for this struct was generated from the following file:; core/zip/inc/Compression.h. ROOTRCompressionSettingEAlgorithm. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:58 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html:894,inherit,inherited,894,doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::RCompressionSetting::EAlgorithm Struct Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; List of all members ; ROOT::RCompressionSetting::EAlgorithm Struct Reference. . Definition at line 83 of file Compression.h. Public Types; enum  EValues { ;   kInherit = -1; , kUseGlobal = 0; , kZLIB; , kLZMA; , ;   kOldCompressionAlgo; , kLZ4; , kZSTD; , kUndefined. };  Note: this is only temporarily a struct and will become a enum class hence the name. More...;  . #include <Compression.h>; Member Enumeration Documentation. ◆ EValues. enum ROOT::RCompressionSetting::EAlgorithm::EValues. Note: this is only temporarily a struct and will become a enum class hence the name. ; convention used. . EnumeratorkInherit Some objects use this value to denote that the compression algorithm should be inherited from the parent object (e.g., TBranch should get the algorithm from the TTree) . kUseGlobal Use the global compression algorithm. . kZLIB Use ZLIB compression. . kLZMA Use LZMA compression. . kOldCompressionAlgo Use the old compression algorithm. . kLZ4 Use LZ4 compression. . kZSTD Use ZSTD compression. . kUndefined Undefined compression algorithm (must be kept the last of the list in case a new algorithm is added). . Definition at line 85 of file Compression.h. The documentation for this struct was generated from the following file:; core/zip/inc/Compression.h. ROOTRCompressionSettingEAlgorithm. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:13:36 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html:880,inherit,inherited,880,doc/v632/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html,https://root.cern,https://root.cern/doc/v632/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::RCompressionSetting::ELevel Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; List of all members ; ROOT::RCompressionSetting::ELevel Struct Reference. . Definition at line 63 of file Compression.h. Public Types; enum  EValues { ;   kInherit = -1; , kUncompressed = 0; , kUseMin = 1; , kDefaultZLIB = 1; , ;   kDefaultLZ4 = 4; , kDefaultZSTD = 5; , kDefaultOld = 6; , kDefaultLZMA = 7. };  Note: this is only temporarily a struct and will become a enum class hence the name convention used. More...;  . #include <Compression.h>; Member Enumeration Documentation. ◆ EValues. enum ROOT::RCompressionSetting::ELevel::EValues. Note: this is only temporarily a struct and will become a enum class hence the name convention used. . EnumeratorkInherit Some objects use this value to denote that the compression algorithm should be inherited from the parent object. . kUncompressed Compression level reserved for ""uncompressed state"". . kUseMin Compression level reserved when we are not sure what to use (1 is for the fastest compression) . kDefaultZLIB Compression level reserved for ZLIB compression algorithm (fastest compression) . kDefaultLZ4 Compression level reserved for LZ4 compression algorithm (trade-off between file ratio/decompression speed) . kDefaultZSTD Compression level reserved for ZSTD compression algorithm (trade-off between file ratio/decompression speed) . kDefaultOld Compression level reserved for old ROOT compression algorithm. . kDefaultLZMA Compression level reserved for LZMA compression algorithm (slowest compression with smallest files) . Definition at line 65 of file Compression.h. The documentation for this struct was generated from the following file:; core/zip/inc/Compression.h. ROOTRCompressionSettingELevel. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:58 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1ELevel.html:926,inherit,inherited,926,doc/master/structROOT_1_1RCompressionSetting_1_1ELevel.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1ELevel.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::RDF::RDataSource Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Types |; Protected Member Functions |; List of all members ; ROOT::RDF::RDataSource Class ReferenceabstractDataframe. ; RDataSource defines an API that RDataFrame can use to read arbitrary data formats. ; A concrete RDataSource implementation (i.e. a class that inherits from RDataSource and implements all of its pure methods) provides an adaptor that RDataFrame can leverage to read any kind of tabular data formats. RDataFrame calls into RDataSource to retrieve information about the data, retrieve (thread-local) readers or ""cursors"" for selected columns and to advance the readers to the desired data entry.; The sequence of calls that RDataFrame (or any other client of a RDataSource) performs is the following:. SetNSlots() : inform RDataSource of the desired level of parallelism; GetColumnReaders() : retrieve from RDataSource per-thread readers for the desired columns; Initialize() : inform RDataSource that an event-loop is about to start; GetEntryRanges() : retrieve from RDataSource a set of ranges of entries that can be processed concurrently; InitSlot() : inform RDataSource that a certain thread is about to start working on a certain range of entries; SetEntry() : inform RDataSource that a certain thread is about to start working on a certain entry; FinalizeSlot() : inform RDataSource that a certain thread finished working on a certain range of entries; Finalize() : inform RDataSource that an event-loop finished. RDataSource implementations must support running multiple event-loops consecutively (although sequentially) on the same dataset.; SetNSlots() is called once per RDataSource object, typically when it is associated to a RDataFrame.; GetColumnReaders() can be called several times, potentially with the same arguments, also in-between event-loops, but not during an event-loop.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDF_1_1RDataSource.html:451,inherit,inherits,451,doc/master/classROOT_1_1RDF_1_1RDataSource.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDF_1_1RDataSource.html,2,"['adapt', 'inherit']","['adaptor', 'inherits']"
Modifiability,". ROOT: ROOT::RFileDialog Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; Protected Attributes |; Friends |; List of all members ; ROOT::RFileDialog Class ReferenceWeb Widgets » Browsable object | Web Widgets. ; Web-based FileDialog. ; Initial message send to client to configure layout. ; Definition at line 41 of file RFileDialog.hxx. Public Types; enum  EDialogTypes { kOpenFile; , kSaveAs; , kNewFile; };  . Public Member Functions;  RFileDialog (EDialogTypes kind=kOpenFile, const std::string &title="""", const std::string &fname="""");  constructor When title not specified, default will be used ;  ; virtual ~RFileDialog ();  destructor ;  ; bool GetCanChangePath () const;  Returns true if working path can be change with gui elements. ;  ; const std::string & GetFileName () const;  ; const auto & GetNameFilters () const;  Returns array of name filters. ;  ; std::string GetSelectedFilter () const;  Returns selected filter Can differ from specified value - if it does not match to existing entry in NameFilters. ;  ; const EDialogTypes & GetType () const;  ; std::string GetWorkingPath () const;  Returns current working path. ;  ; void Hide ();  Hide ROOT Browser. ;  ; bool IsCompleted () const;  ; void SetCallback (RFileDialogCallback_t callback);  Assign callback. ;  ; void SetCanChangePath (bool on=true);  Configure if working path in dialog can be changed via gui elements. ;  ; void SetNameFilters (const std::vector< std::string > &arr);  Set array of name filters like ""Text files (*.txt)"", ""Any files (*)"", ""Image files (*png *.jpg)"" Should be specified before starting dialog. ;  ; void SetSelectedFilter (const std::string &name);  Configure selected filter Has to be one of the string from NameFilters entry. ;  ; void SetWorkingPath (const std::string &);  Ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RFileDialog.html:487,config,configure,487,doc/master/classROOT_1_1RFileDialog.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RFileDialog.html,1,['config'],['configure']
Modifiability,". ROOT: ROOT::RFileDialog Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; Protected Attributes |; Friends |; List of all members ; ROOT::RFileDialog Class ReferenceWeb Widgets » Browsable object. ; Web-based FileDialog. ; web-based FileDialog.; Initial message send to client to configure layout. ; Definition at line 41 of file RFileDialog.hxx. Public Types; enum  EDialogTypes { kOpenFile; , kSaveAs; , kNewFile; };  . Public Member Functions;  RFileDialog (EDialogTypes kind=kOpenFile, const std::string &title="""", const std::string &fname="""");  constructor When title not specified, default will be used ;  ; virtual ~RFileDialog ();  destructor ;  ; bool GetCanChangePath () const;  Returns true if working path can be change with gui elements. ;  ; const std::string & GetFileName () const;  ; const auto & GetNameFilters () const;  Returns array of name filters. ;  ; std::string GetSelectedFilter () const;  Returns selected filter Can differ from specified value - if it does not match to existing entry in NameFilters. ;  ; const EDialogTypes & GetType () const;  ; std::string GetWorkingPath () const;  Returns current working path. ;  ; void Hide ();  Hide ROOT Browser. ;  ; bool IsCompleted () const;  ; void SetCallback (RFileDialogCallback_t callback);  Assign callback. ;  ; void SetCanChangePath (bool on=true);  Configure if working path in dialog can be changed via gui elements. ;  ; void SetNameFilters (const std::vector< std::string > &arr);  Set array of name filters like ""Text files (*.txt)"", ""Any files (*)"", ""Image files (*png *.jpg)"" Should be specified before starting dialog. ;  ; void SetSelectedFilter (const std::string &name);  Configure selected filter Has to be one of the string from NameFilters entry. ;  ; void SetWorkingPath (const std::string",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RFileDialog.html:495,config,configure,495,doc/v632/classROOT_1_1RFileDialog.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RFileDialog.html,1,['config'],['configure']
Modifiability,". ROOT: ROOT::RGeoItem Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; List of all members ; ROOT::RGeoItem Class ReferenceWeb Widgets » Browsable object. ; Representation of single item in the geometry browser. ; Definition at line 91 of file RGeomData.hxx. Public Member Functions;  RGeoItem ()=default;  Default constructor. ;  ;  RGeoItem (const std::string &_name, int _nchilds, int _nodeid, const std::string &_color, const std::string &_material="""", int _vis=0, int _pvis=0);  ;  ~RGeoItem () override=default;  ; void SetTop (bool on=true);  ;  Public Member Functions inherited from ROOT::Browsable::RItem;  RItem ()=default;  ;  RItem (const std::string &_name, int _nchilds=0, const std::string &_icon="""");  ; virtual ~RItem ()=default;  ; virtual bool Compare (const RItem *b, const std::string &) const;  ; const std::string & GetIcon () const;  ; const std::string & GetMTime () const;  ; const std::string & GetName () const;  ; const std::string & GetSize () const;  ; const std::string & GetTitle () const;  ; virtual bool IsFolder () const;  ; virtual bool IsHidden () const;  ; void SetChecked (bool on=true);  ; void SetExpanded (bool on=true);  ; void SetIcon (const std::string &_icon);  ; void SetMTime (const std::string &_mtime);  ; void SetName (const std::string &_name);  ; void SetSize (const std::string &_size);  ; void SetSize (Long64_t _size);  ; void SetTitle (const std::string &_title);  . Protected Attributes; std::string color;  color ;  ; int id {0};  node id ;  ; std::string material;  material ;  ; int pvis {0};  visibility of physical node ;  ; bool top {false};  indicates if node selected as top ;  ; int vis {0};  visibility of logical node ;  ;  Protected Attributes inherited from ROOT::Browsable::RItem; bool checked {false};  is checked, not yet used ;  ; bool expanded {false};  is expanded ;  ; std::string fsize;  item si",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RGeoItem.html:701,inherit,inherited,701,doc/master/classROOT_1_1RGeoItem.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RGeoItem.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::RGeoItem Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; List of all members ; ROOT::RGeoItem Class ReferenceWeb Widgets » Browsable object. ; Representation of single item in the geometry browser. ; Definition at line 91 of file RGeomData.hxx. Public Member Functions;  RGeoItem ()=default;  Default constructor. ;  ;  RGeoItem (const std::string &_name, int _nchilds, int _nodeid, const std::string &_color, const std::string &_material="""", int _vis=0, int _pvis=0);  ;  ~RGeoItem () override=default;  ; void SetTop (bool on=true);  ;  Public Member Functions inherited from ROOT::Browsable::RItem;  RItem ()=default;  ;  RItem (const std::string &_name, int _nchilds=0, const std::string &_icon="""");  ; virtual ~RItem ()=default;  ; virtual bool Compare (const RItem *b, const std::string &) const;  ; const std::string & GetIcon () const;  ; const std::string & GetMTime () const;  ; const std::string & GetName () const;  ; const std::string & GetSize () const;  ; const std::string & GetTitle () const;  ; virtual bool IsFolder () const;  ; virtual bool IsHidden () const;  ; void SetChecked (bool on=true);  ; void SetExpanded (bool on=true);  ; void SetIcon (const std::string &_icon);  ; void SetMTime (const std::string &_mtime);  ; void SetName (const std::string &_name);  ; void SetSize (const std::string &_size);  ; void SetSize (Long64_t _size);  ; void SetTitle (const std::string &_title);  . Protected Attributes; std::string color;  color ;  ; int id {0};  node id ;  ; std::string material;  material ;  ; int pvis {0};  visibility of physical node ;  ; bool top {false};  indicates if node selected as top ;  ; int vis {0};  visibility of logical node ;  ;  Protected Attributes inherited from ROOT::Browsable::RItem; bool checked {false};  is checked, not yet used ;  ; bool expanded {false};  is expanded ;  ; std::string fsize;  item size",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeoItem.html:700,inherit,inherited,700,doc/v632/classROOT_1_1RGeoItem.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeoItem.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::RGeomConfig Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Attributes |; List of all members ; ROOT::RGeomConfig Class Reference. ; Configuration parameters which can be configured on the client Send as is to-from client. ; Definition at line 162 of file RGeomData.hxx. Public Attributes; int build_shapes {1};  when shapes build on server 0 - never, 1 - TGeoComposite, 2 - plus non-cylindrical, 3 - all ;  ; std::string drawopt;  draw options for TGeoPainter ;  ; int maxnumfaces {0};  maximal number of faces ;  ; int maxnumnodes {0};  maximal number of nodes ;  ; int nsegm {0};  number of segments for cylindrical shapes ;  ; bool showtop {false};  show geometry top volume, off by default ;  ; int vislevel {0};  visible level ;  . #include <ROOT/RGeomData.hxx>; Member Data Documentation. ◆ build_shapes. int ROOT::RGeomConfig::build_shapes {1}. when shapes build on server 0 - never, 1 - TGeoComposite, 2 - plus non-cylindrical, 3 - all ; Definition at line 168 of file RGeomData.hxx. ◆ drawopt. std::string ROOT::RGeomConfig::drawopt. draw options for TGeoPainter ; Definition at line 170 of file RGeomData.hxx. ◆ maxnumfaces. int ROOT::RGeomConfig::maxnumfaces {0}. maximal number of faces ; Definition at line 166 of file RGeomData.hxx. ◆ maxnumnodes. int ROOT::RGeomConfig::maxnumnodes {0}. maximal number of nodes ; Definition at line 165 of file RGeomData.hxx. ◆ nsegm. int ROOT::RGeomConfig::nsegm {0}. number of segments for cylindrical shapes ; Definition at line 169 of file RGeomData.hxx. ◆ showtop. bool ROOT::RGeomConfig::showtop {false}. show geometry top volume, off by default ; Definition at line 167 of file RGeomData.hxx. ◆ vislevel. int ROOT::RGeomConfig::vislevel {0}. visible level ; Definition at line 164 of file RGeomData.hxx. Libraries for ROOT::RGeomConfig:. [legend]; The documentation for this class was generated from the following file:; geom/webviewer/inc/ROOT/RGeomD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RGeomConfig.html:265,config,configured,265,doc/master/classROOT_1_1RGeomConfig.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RGeomConfig.html,1,['config'],['configured']
Modifiability,". ROOT: ROOT::RGeomConfig Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Attributes |; List of all members ; ROOT::RGeomConfig Class Reference. ; Configuration parameters which can be configured on the client Send as is to-from client. ; Definition at line 162 of file RGeomData.hxx. Public Attributes; int build_shapes {1};  when shapes build on server 0 - never, 1 - TGeoComposite, 2 - plus non-cylindrical, 3 - all ;  ; std::string drawopt;  draw options for TGeoPainter ;  ; int maxnumfaces {0};  maximal number of faces ;  ; int maxnumnodes {0};  maximal number of nodes ;  ; int nsegm {0};  number of segments for cylindrical shapes ;  ; bool showtop {false};  show geometry top volume, off by default ;  ; int vislevel {0};  visible level ;  . #include <ROOT/RGeomData.hxx>; Member Data Documentation. ◆ build_shapes. int ROOT::RGeomConfig::build_shapes {1}. when shapes build on server 0 - never, 1 - TGeoComposite, 2 - plus non-cylindrical, 3 - all ; Definition at line 168 of file RGeomData.hxx. ◆ drawopt. std::string ROOT::RGeomConfig::drawopt. draw options for TGeoPainter ; Definition at line 170 of file RGeomData.hxx. ◆ maxnumfaces. int ROOT::RGeomConfig::maxnumfaces {0}. maximal number of faces ; Definition at line 166 of file RGeomData.hxx. ◆ maxnumnodes. int ROOT::RGeomConfig::maxnumnodes {0}. maximal number of nodes ; Definition at line 165 of file RGeomData.hxx. ◆ nsegm. int ROOT::RGeomConfig::nsegm {0}. number of segments for cylindrical shapes ; Definition at line 169 of file RGeomData.hxx. ◆ showtop. bool ROOT::RGeomConfig::showtop {false}. show geometry top volume, off by default ; Definition at line 167 of file RGeomData.hxx. ◆ vislevel. int ROOT::RGeomConfig::vislevel {0}. visible level ; Definition at line 164 of file RGeomData.hxx. Libraries for ROOT::RGeomConfig:. [legend]; The documentation for this class was generated from the following file:; geom/webviewer/inc/ROOT/RGeomDa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeomConfig.html:264,config,configured,264,doc/v632/classROOT_1_1RGeomConfig.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeomConfig.html,1,['config'],['configured']
Modifiability,". ROOT: ROOT::RGeomDescription Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::RGeomDescription Class Reference. . Definition at line 210 of file RGeomData.hxx. Classes; class  ShapeDescr;  . Public Member Functions;  RGeomDescription ()=default;  ; void AddSignalHandler (const void *handler, RGeomSignalFunc_t func);  Add signal handler. ;  ; void Build (TGeoManager *mgr, const std::string &volname="""");  Collect information about geometry hierarchy into flat list like it done in JSROOT ClonedNodes.createClones. ;  ; void Build (TGeoVolume *vol);  Collect information about geometry from single volume like it done in JSROOT ClonedNodes.createClones. ;  ; bool ChangeConfiguration (const std::string &json);  Change configuration by client Returns true if any parameter was really changed. ;  ; bool ChangeNodeVisibility (const std::vector< std::string > &path, bool on);  Change visibility for specified element Returns true if changes was performed. ;  ; bool ClearAllPhysVisibility ();  Reset all custom visibility settings. ;  ; void ClearCache ();  Clear cached data, need to be clear when connection broken. ;  ; void ClearDrawData ();  Clear raw data. Will be rebuild when next connection will be established. ;  ; bool ClearPhysNodeVisibility (const std::vector< std::string > &path);  Reset custom visibility of physical node by path. ;  ; int FindNodeId (const std::vector< int > &stack);  Returns nodeid for given stack array, returns -1 in case of failure. ;  ; std::string GetActiveItem () const;  ; std::vector< int > GetClickedItem () const;  ; std::string GetDrawJson () const;  ; std::string GetDrawOptions () const;  Returns draw options, used for JSROOT TGeoPainter. ;  ; std::vector< int > GetHighlightedItem () const;  ; int GetJsonComp () const;  Returns JSON compression le",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RGeomDescription.html:921,config,configuration,921,doc/master/classROOT_1_1RGeomDescription.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RGeomDescription.html,1,['config'],['configuration']
Modifiability,". ROOT: ROOT::RGeomDescription Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::RGeomDescription Class Reference. . Definition at line 210 of file RGeomData.hxx. Classes; class  ShapeDescr;  . Public Member Functions;  RGeomDescription ()=default;  ; void AddSignalHandler (const void *handler, RGeomSignalFunc_t func);  Add signal handler. ;  ; void Build (TGeoManager *mgr, const std::string &volname="""");  Collect information about geometry hierarchy into flat list like it done in JSROOT ClonedNodes.createClones. ;  ; void Build (TGeoVolume *vol);  Collect information about geometry from single volume like it done in JSROOT ClonedNodes.createClones. ;  ; bool ChangeConfiguration (const std::string &json);  Change configuration by client Returns true if any parameter was really changed. ;  ; bool ChangeNodeVisibility (const std::vector< std::string > &path, bool on);  Change visibility for specified element Returns true if changes was performed. ;  ; bool ClearAllPhysVisibility ();  Reset all custom visibility settings. ;  ; void ClearCache ();  Clear cached data, need to be clear when connection broken. ;  ; void ClearDrawData ();  Clear raw data. Will be rebuild when next connection will be established. ;  ; bool ClearPhysNodeVisibility (const std::vector< std::string > &path);  Reset custom visibility of physical node by path. ;  ; int FindNodeId (const std::vector< int > &stack);  Returns nodeid for given stack array, returns -1 in case of failure. ;  ; std::string GetActiveItem () const;  ; std::vector< int > GetClickedItem () const;  ; std::string GetDrawJson () const;  ; std::string GetDrawOptions () const;  Returns draw options, used for JSROOT TGeoPainter. ;  ; std::vector< int > GetHighlightedItem () const;  ; int GetJsonComp () const;  Returns JSON compression lev",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeomDescription.html:920,config,configuration,920,doc/v632/classROOT_1_1RGeomDescription.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeomDescription.html,1,['config'],['configuration']
Modifiability,. ROOT: ROOT::RGeomDrawing Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Attributes |; List of all members ; ROOT::RGeomDrawing Class Reference. ; Object with full description for drawing geometry It includes list of visible items and list of nodes required to build them. ; Definition at line 177 of file RGeomData.hxx. Public Attributes; RGeomConfig * cfg {nullptr};  current configurations ;  ; std::vector< RGeomNode * > nodes;  all used nodes to display visible items and not known for client ;  ; int numnodes {0};  total number of nodes in description ;  ; std::vector< RGeomVisible > visibles;  all visible items ;  . #include <ROOT/RGeomData.hxx>; Member Data Documentation. ◆ cfg. RGeomConfig* ROOT::RGeomDrawing::cfg {nullptr}. current configurations ; Definition at line 179 of file RGeomData.hxx. ◆ nodes. std::vector<RGeomNode*> ROOT::RGeomDrawing::nodes. all used nodes to display visible items and not known for client ; Definition at line 181 of file RGeomData.hxx. ◆ numnodes. int ROOT::RGeomDrawing::numnodes {0}. total number of nodes in description ; Definition at line 180 of file RGeomData.hxx. ◆ visibles. std::vector<RGeomVisible> ROOT::RGeomDrawing::visibles. all visible items ; Definition at line 182 of file RGeomData.hxx. Libraries for ROOT::RGeomDrawing:. [legend]; The documentation for this class was generated from the following file:; geom/webviewer/inc/ROOT/RGeomData.hxx. ROOTRGeomDrawing. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:59 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RGeomDrawing.html:460,config,configurations,460,doc/master/classROOT_1_1RGeomDrawing.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RGeomDrawing.html,2,['config'],['configurations']
Modifiability,. ROOT: ROOT::RGeomDrawing Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Attributes |; List of all members ; ROOT::RGeomDrawing Class Reference. ; Object with full description for drawing geometry It includes list of visible items and list of nodes required to build them. ; Definition at line 177 of file RGeomData.hxx. Public Attributes; RGeomConfig * cfg {nullptr};  current configurations ;  ; std::vector< RGeomNode * > nodes;  all used nodes to display visible items and not known for client ;  ; int numnodes {0};  total number of nodes in description ;  ; std::vector< RGeomVisible > visibles;  all visible items ;  . #include <ROOT/RGeomData.hxx>; Member Data Documentation. ◆ cfg. RGeomConfig* ROOT::RGeomDrawing::cfg {nullptr}. current configurations ; Definition at line 179 of file RGeomData.hxx. ◆ nodes. std::vector<RGeomNode*> ROOT::RGeomDrawing::nodes. all used nodes to display visible items and not known for client ; Definition at line 181 of file RGeomData.hxx. ◆ numnodes. int ROOT::RGeomDrawing::numnodes {0}. total number of nodes in description ; Definition at line 180 of file RGeomData.hxx. ◆ visibles. std::vector<RGeomVisible> ROOT::RGeomDrawing::visibles. all visible items ; Definition at line 182 of file RGeomData.hxx. Libraries for ROOT::RGeomDrawing:. [legend]; The documentation for this class was generated from the following file:; geom/webviewer/inc/ROOT/RGeomData.hxx. ROOTRGeomDrawing. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:13:36 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeomDrawing.html:459,config,configurations,459,doc/v632/classROOT_1_1RGeomDrawing.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeomDrawing.html,2,['config'],['configurations']
Modifiability,". ROOT: ROOT::RGeomNode Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RGeomNode Class Reference. ; Full node description including matrices and other attributes. ; Definition at line 71 of file RGeomData.hxx. Public Member Functions;  RGeomNode (int _id=0);  ; bool CanDisplay () const;  True when there is shape and it can be displayed. ;  ;  Public Member Functions inherited from ROOT::RGeomNodeBase;  RGeomNodeBase (int _id=0);  ; const char * GetArg (int kind);  Returns argument for regexp. ;  ; bool IsVisible () const;  . Public Attributes; int idshift {-1};  ! used to jump over then scan all geom hierarchy ;  ; std::vector< float > matr;  matrix for the node, can have reduced number of elements ;  ; int nfaces {0};  ! number of shape faces ;  ; float opacity {1.};  ! opacity of the color ;  ; bool useflag {false};  ! extra flag, used for selection ;  ; double vol {0};  ! volume estimation ;  ;  Public Attributes inherited from ROOT::RGeomNodeBase; std::vector< int > chlds;  list of childs id ;  ; std::string color;  rgb code in hex format ;  ; int id {0};  node id, index in array ;  ; std::string material;  name of the material ;  ; std::string name;  node name ;  ; bool nochlds {false};  how far in hierarchy depth should be scanned ;  ; int sortid {0};  ! place in sorted array, to check cuts, or id of original node when used search structures ;  ; int vis {0};  visibility flag, 0 - off, 1 - only when level==0, 99 - always ;  . #include <ROOT/RGeomData.hxx>. Inheritance diagram for ROOT::RGeomNode:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RGeomNode(). ROOT::RGeomNode::RGeomNode ; (; int ; _id = 0). inline . Definition at line 80 of file RGeomData.hxx. Member Function Documentation. ◆ CanDisplay(). bool ROOT::RGeomNode::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RGeomNode.html:519,inherit,inherited,519,doc/master/classROOT_1_1RGeomNode.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RGeomNode.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::RGeomNode Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RGeomNode Class Reference. ; Full node description including matrices and other attributes. ; Definition at line 71 of file RGeomData.hxx. Public Member Functions;  RGeomNode (int _id=0);  ; bool CanDisplay () const;  True when there is shape and it can be displayed. ;  ;  Public Member Functions inherited from ROOT::RGeomNodeBase;  RGeomNodeBase (int _id=0);  ; const char * GetArg (int kind);  Returns argument for regexp. ;  ; bool IsVisible () const;  . Public Attributes; int idshift {-1};  ! used to jump over then scan all geom hierarchy ;  ; std::vector< float > matr;  matrix for the node, can have reduced number of elements ;  ; int nfaces {0};  ! number of shape faces ;  ; float opacity {1.};  ! opacity of the color ;  ; bool useflag {false};  ! extra flag, used for selection ;  ; double vol {0};  ! volume estimation ;  ;  Public Attributes inherited from ROOT::RGeomNodeBase; std::vector< int > chlds;  list of childs id ;  ; std::string color;  rgb code in hex format ;  ; int id {0};  node id, index in array ;  ; std::string material;  name of the material ;  ; std::string name;  node name ;  ; bool nochlds {false};  how far in hierarchy depth should be scanned ;  ; int sortid {0};  ! place in sorted array, to check cuts, or id of original node when used search structures ;  ; int vis {0};  visibility flag, 0 - off, 1 - only when level==0, 99 - always ;  . #include <ROOT/RGeomData.hxx>. Inheritance diagram for ROOT::RGeomNode:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RGeomNode(). ROOT::RGeomNode::RGeomNode ; (; int ; _id = 0). inline . Definition at line 80 of file RGeomData.hxx. Member Function Documentation. ◆ CanDisplay(). bool ROOT::RGeomNode::C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeomNode.html:518,inherit,inherited,518,doc/v632/classROOT_1_1RGeomNode.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeomNode.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::RGeomRawRenderInfo Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RGeomRawRenderInfo Class Reference. ; Render info with raw data. ; Definition at line 127 of file RGeomData.hxx. Public Member Functions;  ~RGeomRawRenderInfo () override=default;  ;  Public Member Functions inherited from ROOT::RGeomRenderInfo; virtual ~RGeomRenderInfo ()=default;  virtual destructor required for the I/O ;  . Public Attributes; std::vector< int > idx;  vertex indexes, always triangles ;  ; std::vector< unsigned char > raw;  float vertices as raw data, JSON_base64 ;  . #include <ROOT/RGeomData.hxx>. Inheritance diagram for ROOT::RGeomRawRenderInfo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~RGeomRawRenderInfo(). ROOT::RGeomRawRenderInfo::~RGeomRawRenderInfo ; (; ). overridedefault . Member Data Documentation. ◆ idx. std::vector<int> ROOT::RGeomRawRenderInfo::idx. vertex indexes, always triangles ; Definition at line 130 of file RGeomData.hxx. ◆ raw. std::vector<unsigned char> ROOT::RGeomRawRenderInfo::raw. float vertices as raw data, JSON_base64 ; Definition at line 129 of file RGeomData.hxx. Libraries for ROOT::RGeomRawRenderInfo:. [legend]; The documentation for this class was generated from the following file:; geom/webviewer/inc/ROOT/RGeomData.hxx. ROOTRGeomRawRenderInfo. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:59 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RGeomRawRenderInfo.html:438,inherit,inherited,438,doc/master/classROOT_1_1RGeomRawRenderInfo.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RGeomRawRenderInfo.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::RGeomRawRenderInfo Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RGeomRawRenderInfo Class Reference. ; Render info with raw data. ; Definition at line 127 of file RGeomData.hxx. Public Member Functions;  ~RGeomRawRenderInfo () override=default;  ;  Public Member Functions inherited from ROOT::RGeomRenderInfo; virtual ~RGeomRenderInfo ()=default;  virtual destructor required for the I/O ;  . Public Attributes; std::vector< int > idx;  vertex indexes, always triangles ;  ; std::vector< unsigned char > raw;  float vertices as raw data, JSON_base64 ;  . #include <ROOT/RGeomData.hxx>. Inheritance diagram for ROOT::RGeomRawRenderInfo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~RGeomRawRenderInfo(). ROOT::RGeomRawRenderInfo::~RGeomRawRenderInfo ; (; ). overridedefault . Member Data Documentation. ◆ idx. std::vector<int> ROOT::RGeomRawRenderInfo::idx. vertex indexes, always triangles ; Definition at line 130 of file RGeomData.hxx. ◆ raw. std::vector<unsigned char> ROOT::RGeomRawRenderInfo::raw. float vertices as raw data, JSON_base64 ; Definition at line 129 of file RGeomData.hxx. Libraries for ROOT::RGeomRawRenderInfo:. [legend]; The documentation for this class was generated from the following file:; geom/webviewer/inc/ROOT/RGeomData.hxx. ROOTRGeomRawRenderInfo. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:13:36 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeomRawRenderInfo.html:437,inherit,inherited,437,doc/v632/classROOT_1_1RGeomRawRenderInfo.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeomRawRenderInfo.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::RGeomShapeRenderInfo Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RGeomShapeRenderInfo Class Reference. ; Render info with shape itself - client can produce shape better. ; Definition at line 135 of file RGeomData.hxx. Public Member Functions;  ~RGeomShapeRenderInfo () override=default;  ;  Public Member Functions inherited from ROOT::RGeomRenderInfo; virtual ~RGeomRenderInfo ()=default;  virtual destructor required for the I/O ;  . Public Attributes; TGeoShape * shape {nullptr};  original shape - can be much less than binary data ;  . #include <ROOT/RGeomData.hxx>. Inheritance diagram for ROOT::RGeomShapeRenderInfo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~RGeomShapeRenderInfo(). ROOT::RGeomShapeRenderInfo::~RGeomShapeRenderInfo ; (; ). overridedefault . Member Data Documentation. ◆ shape. TGeoShape* ROOT::RGeomShapeRenderInfo::shape {nullptr}. original shape - can be much less than binary data ; Definition at line 137 of file RGeomData.hxx. Libraries for ROOT::RGeomShapeRenderInfo:. [legend]; The documentation for this class was generated from the following file:; geom/webviewer/inc/ROOT/RGeomData.hxx. ROOTRGeomShapeRenderInfo. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:59 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RGeomShapeRenderInfo.html:482,inherit,inherited,482,doc/master/classROOT_1_1RGeomShapeRenderInfo.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RGeomShapeRenderInfo.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::RGeomShapeRenderInfo Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RGeomShapeRenderInfo Class Reference. ; Render info with shape itself - client can produce shape better. ; Definition at line 135 of file RGeomData.hxx. Public Member Functions;  ~RGeomShapeRenderInfo () override=default;  ;  Public Member Functions inherited from ROOT::RGeomRenderInfo; virtual ~RGeomRenderInfo ()=default;  virtual destructor required for the I/O ;  . Public Attributes; TGeoShape * shape {nullptr};  original shape - can be much less than binary data ;  . #include <ROOT/RGeomData.hxx>. Inheritance diagram for ROOT::RGeomShapeRenderInfo:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~RGeomShapeRenderInfo(). ROOT::RGeomShapeRenderInfo::~RGeomShapeRenderInfo ; (; ). overridedefault . Member Data Documentation. ◆ shape. TGeoShape* ROOT::RGeomShapeRenderInfo::shape {nullptr}. original shape - can be much less than binary data ; Definition at line 137 of file RGeomData.hxx. Libraries for ROOT::RGeomShapeRenderInfo:. [legend]; The documentation for this class was generated from the following file:; geom/webviewer/inc/ROOT/RGeomData.hxx. ROOTRGeomShapeRenderInfo. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:13:36 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeomShapeRenderInfo.html:481,inherit,inherited,481,doc/v632/classROOT_1_1RGeomShapeRenderInfo.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeomShapeRenderInfo.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::RQt5WebDisplayHandle Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; ROOT::RQt5WebDisplayHandle Class ReferenceWeb Display » QT5 Web Display. . Definition at line 92 of file rootqt5.cpp. Classes; class  Qt5Creator;  . Public Member Functions;  RQt5WebDisplayHandle (const std::string &url);  ;  ~RQt5WebDisplayHandle () override;  ; bool Resize (int width, int height) override;  resize web window - if possible ;  ;  Public Member Functions inherited from ROOT::RWebDisplayHandle;  RWebDisplayHandle (const std::string &url);  constructor ;  ; virtual ~RWebDisplayHandle ()=default;  required virtual destructor for correct cleanup at the end ;  ; const std::string & GetContent () const;  get content ;  ; const std::string & GetUrl () const;  returns url of start web display ;  ; void SetContent (const std::string &cont);  set content ;  . Static Public Member Functions; static void AddCreator ();  ;  Static Public Member Functions inherited from ROOT::RWebDisplayHandle; static bool CanProduceImages (const std::string &browser="""");  Returns true if image production for specified browser kind is supported If browser not specified - use currently configured browser or try to test existing web browsers. ;  ; static std::unique_ptr< RWebDisplayHandle > Display (const RWebDisplayArgs &args);  Create web display. ;  ; static bool DisplayUrl (const std::string &url);  Display provided url in configured web browser. ;  ; static std::string GetImageFormat (const std::string &fname);  Detect image format There is special handling of "".screenshot.pdf"" and "".screenshot.png"" extensions Creation of such files relies on headless browser functionality and fully supported only by Chrome browser. ;  ; static bool NeedHttpServer (const RWebDisplayArgs &args);  Check if http server required f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RQt5WebDisplayHandle.html:647,inherit,inherited,647,doc/master/classROOT_1_1RQt5WebDisplayHandle.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RQt5WebDisplayHandle.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::RQt5WebDisplayHandle Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; ROOT::RQt5WebDisplayHandle Class ReferenceWeb Display » QT5 Web Display. . Definition at line 92 of file rootqt5.cpp. Classes; class  Qt5Creator;  . Public Member Functions;  RQt5WebDisplayHandle (const std::string &url);  ;  ~RQt5WebDisplayHandle () override;  ; bool Resize (int width, int height) override;  resize web window - if possible ;  ;  Public Member Functions inherited from ROOT::RWebDisplayHandle;  RWebDisplayHandle (const std::string &url);  constructor ;  ; virtual ~RWebDisplayHandle ()=default;  required virtual destructor for correct cleanup at the end ;  ; const std::string & GetContent () const;  get content ;  ; const std::string & GetUrl () const;  returns url of start web display ;  ; void SetContent (const std::string &cont);  set content ;  . Static Public Member Functions; static void AddCreator ();  ;  Static Public Member Functions inherited from ROOT::RWebDisplayHandle; static bool CanProduceImages (const std::string &browser="""");  Returns true if image production for specified browser kind is supported If browser not specified - use currently configured browser or try to test existing web browsers. ;  ; static std::unique_ptr< RWebDisplayHandle > Display (const RWebDisplayArgs &args);  Create web display. ;  ; static bool DisplayUrl (const std::string &url);  Display provided url in configured web browser. ;  ; static bool NeedHttpServer (const RWebDisplayArgs &args);  Check if http server required for display. ;  ; static bool ProduceImage (const std::string &fname, const std::string &json, int width=800, int height=600, const char *batch_file=nullptr);  Produce image file using JSON data as source Invokes JSROOT drawing functionality in headless browser - Google Chrome ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RQt5WebDisplayHandle.html:646,inherit,inherited,646,doc/v632/classROOT_1_1RQt5WebDisplayHandle.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RQt5WebDisplayHandle.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::RQt6WebDisplayHandle Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; ROOT::RQt6WebDisplayHandle Class ReferenceWeb Display » QT6 Web Display. . Definition at line 68 of file rootqt6.cpp. Classes; class  Qt6Creator;  . Public Member Functions;  RQt6WebDisplayHandle (const std::string &url);  ;  ~RQt6WebDisplayHandle () override;  ; bool Resize (int width, int height) override;  resize web window - if possible ;  ;  Public Member Functions inherited from ROOT::RWebDisplayHandle;  RWebDisplayHandle (const std::string &url);  constructor ;  ; virtual ~RWebDisplayHandle ()=default;  required virtual destructor for correct cleanup at the end ;  ; const std::string & GetContent () const;  get content ;  ; const std::string & GetUrl () const;  returns url of start web display ;  ; void SetContent (const std::string &cont);  set content ;  . Static Public Member Functions; static void AddCreator ();  ;  Static Public Member Functions inherited from ROOT::RWebDisplayHandle; static bool CanProduceImages (const std::string &browser="""");  Returns true if image production for specified browser kind is supported If browser not specified - use currently configured browser or try to test existing web browsers. ;  ; static std::unique_ptr< RWebDisplayHandle > Display (const RWebDisplayArgs &args);  Create web display. ;  ; static bool DisplayUrl (const std::string &url);  Display provided url in configured web browser. ;  ; static std::string GetImageFormat (const std::string &fname);  Detect image format There is special handling of "".screenshot.pdf"" and "".screenshot.png"" extensions Creation of such files relies on headless browser functionality and fully supported only by Chrome browser. ;  ; static bool NeedHttpServer (const RWebDisplayArgs &args);  Check if http server required f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RQt6WebDisplayHandle.html:647,inherit,inherited,647,doc/master/classROOT_1_1RQt6WebDisplayHandle.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RQt6WebDisplayHandle.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::RQt6WebDisplayHandle Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; ROOT::RQt6WebDisplayHandle Class ReferenceWeb Display » QT6 Web Display. . Definition at line 68 of file rootqt6.cpp. Classes; class  Qt6Creator;  . Public Member Functions;  RQt6WebDisplayHandle (const std::string &url);  ;  ~RQt6WebDisplayHandle () override;  ; bool Resize (int width, int height) override;  resize web window - if possible ;  ;  Public Member Functions inherited from ROOT::RWebDisplayHandle;  RWebDisplayHandle (const std::string &url);  constructor ;  ; virtual ~RWebDisplayHandle ()=default;  required virtual destructor for correct cleanup at the end ;  ; const std::string & GetContent () const;  get content ;  ; const std::string & GetUrl () const;  returns url of start web display ;  ; void SetContent (const std::string &cont);  set content ;  . Static Public Member Functions; static void AddCreator ();  ;  Static Public Member Functions inherited from ROOT::RWebDisplayHandle; static bool CanProduceImages (const std::string &browser="""");  Returns true if image production for specified browser kind is supported If browser not specified - use currently configured browser or try to test existing web browsers. ;  ; static std::unique_ptr< RWebDisplayHandle > Display (const RWebDisplayArgs &args);  Create web display. ;  ; static bool DisplayUrl (const std::string &url);  Display provided url in configured web browser. ;  ; static bool NeedHttpServer (const RWebDisplayArgs &args);  Check if http server required for display. ;  ; static bool ProduceImage (const std::string &fname, const std::string &json, int width=800, int height=600, const char *batch_file=nullptr);  Produce image file using JSON data as source Invokes JSROOT drawing functionality in headless browser - Google Chrome ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RQt6WebDisplayHandle.html:646,inherit,inherited,646,doc/v632/classROOT_1_1RQt6WebDisplayHandle.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RQt6WebDisplayHandle.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::RTreeDrawInvokeTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RTreeDrawInvokeTimer Class Reference. . Definition at line 86 of file RTreeViewer.cxx. Public Member Functions;  RTreeDrawInvokeTimer (Long_t milliSec, bool mode, RTreeViewer &viewer);  constructor ;  ; void Timeout () override;  timeout handler used to process postponed requests in main ROOT thread ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void Se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RTreeDrawInvokeTimer.html:563,inherit,inherited,563,doc/master/classROOT_1_1RTreeDrawInvokeTimer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RTreeDrawInvokeTimer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::RTreeDrawInvokeTimer Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; ROOT::RTreeDrawInvokeTimer Class Reference. . Definition at line 86 of file RTreeViewer.cxx. Public Member Functions;  RTreeDrawInvokeTimer (Long_t milliSec, bool mode, RTreeViewer &viewer);  constructor ;  ; void Timeout () override;  timeout handler used to process postponed requests in main ROOT thread ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RTreeDrawInvokeTimer.html:562,inherit,inherited,562,doc/v632/classROOT_1_1RTreeDrawInvokeTimer.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RTreeDrawInvokeTimer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::RTreeDrawMonitoring Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::RTreeDrawMonitoring Class Reference. . Definition at line 31 of file RTreeViewer.cxx. Public Member Functions;  RTreeDrawMonitoring (Int_t period, RTreeViewer &viewer);  ; bool SendFileCloseEvent (TFile *) override;  ; bool SendFileOpenProgress (TFile *, TList *, const char *, bool=false) override;  ; bool SendFileReadProgress (TFile *) override;  ; bool SendFileWriteProgress (TFile *) override;  ; bool SendInfoDescription (const char *) override;  ; bool SendInfoStatus (const char *) override;  ; bool SendInfoTime () override;  ; bool SendInfoUser (const char *=nullptr) override;  ; bool SendParameters (TList *, const char *=nullptr) override;  ; bool SendProcessingProgress (Double_t nevent, Double_t, bool=false) override;  ; bool SendProcessingStatus (const char *, bool=false) override;  ; void SetLogLevel (const char *=""WARNING"") override;  ; void Verbose (bool) override;  ;  Public Member Functions inherited from TVirtualMonitoringWriter;  TVirtualMonitoringWriter ();  ;  TVirtualMonitoringWriter (const char *name, Double_t value);  ; virtual ~TVirtualMonitoringWriter ();  destructor ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RTreeDrawMonitoring.html:1176,inherit,inherited,1176,doc/master/classROOT_1_1RTreeDrawMonitoring.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RTreeDrawMonitoring.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::RTreeDrawMonitoring Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::RTreeDrawMonitoring Class Reference. . Definition at line 31 of file RTreeViewer.cxx. Public Member Functions;  RTreeDrawMonitoring (Int_t period, RTreeViewer &viewer);  ; bool SendFileCloseEvent (TFile *) override;  ; bool SendFileOpenProgress (TFile *, TList *, const char *, bool=false) override;  ; bool SendFileReadProgress (TFile *) override;  ; bool SendFileWriteProgress (TFile *) override;  ; bool SendInfoDescription (const char *) override;  ; bool SendInfoStatus (const char *) override;  ; bool SendInfoTime () override;  ; bool SendInfoUser (const char *=nullptr) override;  ; bool SendParameters (TList *, const char *=nullptr) override;  ; bool SendProcessingProgress (Double_t nevent, Double_t, bool=false) override;  ; bool SendProcessingStatus (const char *, bool=false) override;  ; void SetLogLevel (const char *=""WARNING"") override;  ; void Verbose (bool) override;  ;  Public Member Functions inherited from TVirtualMonitoringWriter;  TVirtualMonitoringWriter ();  ;  TVirtualMonitoringWriter (const char *name, Double_t value);  ; virtual ~TVirtualMonitoringWriter ();  destructor ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RTreeDrawMonitoring.html:1175,inherit,inherited,1175,doc/v632/classROOT_1_1RTreeDrawMonitoring.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RTreeDrawMonitoring.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::RWebBrowserHandle Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Types |; Private Attributes |; List of all members ; ROOT::RWebBrowserHandle Class Reference. ; Specialized handle to hold information about running browser process Used to correctly cleanup all processes and temporary directories. ; Definition at line 105 of file RWebDisplayHandle.cxx. Public Member Functions;  RWebBrowserHandle (const std::string &url, const std::string &tmpdir, const std::string &tmpfile, browser_process_id pid);  ;  RWebBrowserHandle (const std::string &url, const std::string &tmpdir, const std::string &tmpfile, const std::string &dump);  ;  ~RWebBrowserHandle () override;  ;  Public Member Functions inherited from ROOT::RWebDisplayHandle;  RWebDisplayHandle (const std::string &url);  constructor ;  ; virtual ~RWebDisplayHandle ()=default;  required virtual destructor for correct cleanup at the end ;  ; const std::string & GetContent () const;  get content ;  ; const std::string & GetUrl () const;  returns url of start web display ;  ; virtual bool Resize (int, int);  resize web window - if possible ;  ; void SetContent (const std::string &cont);  set content ;  . Private Types; typedef pid_t browser_process_id;  . Private Attributes; bool fHasPid {false};  ; browser_process_id fPid;  ; std::string fTmpDir;  temporary directory to delete at the end ;  ; std::string fTmpFile;  temporary file to remove ;  . Additional Inherited Members;  Static Public Member Functions inherited from ROOT::RWebDisplayHandle; static bool CanProduceImages (const std::string &browser="""");  Returns true if image production for specified browser kind is supported If browser not specified - use currently configured browser or try to test existing web browsers. ;  ; static std::unique_ptr< RWebDisplayHandle > Display (const RWebDisplayArgs &args);  Create web display. ;  ; static bool Dis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RWebBrowserHandle.html:817,inherit,inherited,817,doc/master/classROOT_1_1RWebBrowserHandle.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RWebBrowserHandle.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::RWebBrowserHandle Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Types |; Private Attributes |; List of all members ; ROOT::RWebBrowserHandle Class Reference. ; Specialized handle to hold information about running browser process Used to correctly cleanup all processes and temporary directories. ; Definition at line 103 of file RWebDisplayHandle.cxx. Public Member Functions;  RWebBrowserHandle (const std::string &url, const std::string &tmpdir, const std::string &tmpfile, browser_process_id pid);  ;  RWebBrowserHandle (const std::string &url, const std::string &tmpdir, const std::string &tmpfile, const std::string &dump);  ;  ~RWebBrowserHandle () override;  ;  Public Member Functions inherited from ROOT::RWebDisplayHandle;  RWebDisplayHandle (const std::string &url);  constructor ;  ; virtual ~RWebDisplayHandle ()=default;  required virtual destructor for correct cleanup at the end ;  ; const std::string & GetContent () const;  get content ;  ; const std::string & GetUrl () const;  returns url of start web display ;  ; virtual bool Resize (int, int);  resize web window - if possible ;  ; void SetContent (const std::string &cont);  set content ;  . Private Types; typedef pid_t browser_process_id;  . Private Attributes; bool fHasPid {false};  ; browser_process_id fPid;  ; std::string fTmpDir;  temporary directory to delete at the end ;  ; std::string fTmpFile;  temporary file to remove ;  . Additional Inherited Members;  Static Public Member Functions inherited from ROOT::RWebDisplayHandle; static bool CanProduceImages (const std::string &browser="""");  Returns true if image production for specified browser kind is supported If browser not specified - use currently configured browser or try to test existing web browsers. ;  ; static std::unique_ptr< RWebDisplayHandle > Display (const RWebDisplayArgs &args);  Create web display. ;  ; static bool Disp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RWebBrowserHandle.html:816,inherit,inherited,816,doc/v632/classROOT_1_1RWebBrowserHandle.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RWebBrowserHandle.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::RWebWindow Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Private Types |; Private Member Functions |; Static Private Member Functions |; Private Attributes |; Static Private Attributes |; Friends |; List of all members ; ROOT::RWebWindow Class ReferenceWeb Display. ; Represents web window, which can be shown in web browser or any other supported environment. ; Window can be configured to run either in the normal or in the batch (headless) mode. In second case no any graphical elements will be created. For the normal window one can configure geometry (width and height), which are applied when window shown.; Each window can be shown several times (if allowed) in different places - either as the CEF (chromium embedded) window or in the standard web browser. When started, window will open and show HTML page, configured with RWebWindow::SetDefaultPage() method.; Typically (but not necessarily) clients open web socket connection to the window and one can exchange data, using RWebWindow::Send() method and call-back function assigned via RWebWindow::SetDataCallBack(). ; Definition at line 54 of file RWebWindow.hxx. Classes; struct  MasterConn;  ; struct  QueueEntry;  ; struct  QueueItem;  ; struct  WebConn;  . Public Member Functions;  RWebWindow ();  RWebWindow constructor Should be defined here because of std::unique_ptr<RWebWindowWSHandler> ;  ;  ~RWebWindow ();  RWebWindow destructor Closes all connections and remove window from manager. ;  ; void AssignThreadId ();  Assign thread id which has to be used for callbacks WARNING!!! only for expert use Automatically done at the moment when any callback function is invoked Can be invoked once again if window Run method will be invoked from other thread Normally should be invoked before Show() method is called. ;  ; bool CanSend (unsigned connid, bool direct=true) cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RWebWindow.html:538,config,configured,538,doc/master/classROOT_1_1RWebWindow.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RWebWindow.html,3,['config'],"['configure', 'configured']"
Modifiability,". ROOT: ROOT::RWebWindow Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Private Types |; Private Member Functions |; Static Private Member Functions |; Private Attributes |; Static Private Attributes |; Friends |; List of all members ; ROOT::RWebWindow Class ReferenceWeb Display. ; Represents web window, which can be shown in web browser or any other supported environment. ; Window can be configured to run either in the normal or in the batch (headless) mode. In second case no any graphical elements will be created. For the normal window one can configure geometry (width and height), which are applied when window shown.; Each window can be shown several times (if allowed) in different places - either as the CEF (chromium embedded) window or in the standard web browser. When started, window will open and show HTML page, configured with RWebWindow::SetDefaultPage() method.; Typically (but not necessarily) clients open web socket connection to the window and one can exchange data, using RWebWindow::Send() method and call-back function assigned via RWebWindow::SetDataCallBack(). ; Definition at line 52 of file RWebWindow.hxx. Classes; struct  MasterConn;  ; struct  QueueEntry;  ; struct  QueueItem;  ; struct  WebConn;  . Public Member Functions;  RWebWindow ();  RWebWindow constructor Should be defined here because of std::unique_ptr<RWebWindowWSHandler> ;  ;  ~RWebWindow ();  RWebWindow destructor Closes all connections and remove window from manager. ;  ; void AssignThreadId ();  Assign thread id which has to be used for callbacks WARNING!!! only for expert use Automatically done at the moment when any callback function is invoked Can be invoked once again if window Run method will be invoked from other thread Normally should be invoked before Show() method is called. ;  ; bool CanSend (unsigned connid, bool direct=true) const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RWebWindow.html:537,config,configured,537,doc/v632/classROOT_1_1RWebWindow.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RWebWindow.html,3,['config'],"['configure', 'configured']"
Modifiability,". ROOT: ROOT::TProcessExecutor Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Types |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::TProcessExecutor Class ReferenceParallelized classes. ; This class provides a simple interface to execute the same task multiple times in parallel, possibly with different arguments every time. . ROOT::TProcessExecutor::Map; This class inherits its interfaces from ROOT::TExecutor; . The two possible usages of the Map method are:. Map(F func, unsigned nTimes): func is executed nTimes with no arguments; Map(F func, T& args): func is executed on each element of the collection of arguments args. For either signature, func is executed as many times as needed by a pool of fNWorkers workers; the number of workers can be passed to the constructor or set via SetNWorkers. It typically defaults to the number of cores.; A collection containing the result of each execution is returned.; Note: the user is responsible for the deletion of any object that might be created upon execution of func, returned objects included: ROOT::TProcessExecutor never deletes what it returns, it simply forgets it.; Note: that the usage of ROOT::TProcessExecutor::Map is indicated only when the task to be executed takes more than a few seconds, otherwise the overhead introduced by Map will outrun the benefits of parallel execution on most machines.; Parameters. funca callable object, such as a lambda expression, an std::function, a functor object or a function that takes zero arguments (for the first signature) or one (for the second signature). ; argsa standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature. An integer only for the first. . Note: in cases where the function to be executed takes more than zero/one argument but all are fixed except zero/one, the function can be wrapped in a lambda ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1TProcessExecutor.html:510,inherit,inherits,510,doc/master/classROOT_1_1TProcessExecutor.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1TProcessExecutor.html,1,['inherit'],['inherits']
Modifiability,". ROOT: ROOT::TProcessExecutor Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Types |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::TProcessExecutor Class ReferenceParallelized classes. ; This class provides a simple interface to execute the same task multiple times in parallel, possibly with different arguments every time. . ROOT::TProcessExecutor::Map; This class inherits its interfaces from ROOT::TExecutor; . The two possible usages of the Map method are:. Map(F func, unsigned nTimes): func is executed nTimes with no arguments; Map(F func, T& args): func is executed on each element of the collection of arguments args. For either signature, func is executed as many times as needed by a pool of fNWorkers workers; the number of workers can be passed to the constructor or set via SetNWorkers. It typically defaults to the number of cores.; A collection containing the result of each execution is returned.; Note: the user is responsible for the deletion of any object that might be created upon execution of func, returned objects included: ROOT::TProcessExecutor never deletes what it returns, it simply forgets it.; Note: that the usage of ROOT::TProcessExecutor::Map is indicated only when the task to be executed takes more than a few seconds, otherwise the overhead introduced by Map will outrun the benefits of parallel execution on most machines.; Parameters. funca callable object, such as a lambda expression, an std::function, a functor object or a function that takes zero arguments (for the first signature) or one (for the second signature). ; argsa standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature. An integer only for the first. . Note: in cases where the function to be executed takes more than zero/one argument but all are fixed except zero/one, the function can be wrapped in a lambda o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1TProcessExecutor.html:509,inherit,inherits,509,doc/v632/classROOT_1_1TProcessExecutor.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1TProcessExecutor.html,1,['inherit'],['inherits']
Modifiability,. ROOT: ROOT::TRWSpinLock Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::TRWSpinLock Class Reference. . Definition at line 22 of file TRWSpinLock.hxx. Public Member Functions;  TRWSpinLock ();  Regular constructor. ;  ; void ReadLock ();  Acquire the lock in read mode. ;  ; void ReadUnLock ();  Release the lock in read mode. ;  ; void WriteLock ();  Acquire the lock in write mode. ;  ; void WriteUnLock ();  Release the lock in write mode. ;  . Private Attributes; std::condition_variable_any fCond;  ! RWlock internal condition variable ;  ; ROOT::TSpinMutex fMutex;  ! RWlock internal mutex ;  ; std::atomic< int > fReaderReservation;  ! A reader wants access ;  ; std::atomic< int > fReaders;  ! Number of readers ;  ; std::atomic< bool > fWriter;  ! Is there a writer? ;  ; std::atomic< int > fWriterReservation;  ! A writer wants access ;  . #include <ROOT/TRWSpinLock.hxx>; Constructor & Destructor Documentation. ◆ TRWSpinLock(). ROOT::TRWSpinLock::TRWSpinLock ; (; ). inline . Regular constructor. ; Definition at line 34 of file TRWSpinLock.hxx. Member Function Documentation. ◆ ReadLock(). void TRWSpinLock::ReadLock ; (; ). Acquire the lock in read mode. ; Definition at line 35 of file TRWSpinLock.cxx. ◆ ReadUnLock(). void TRWSpinLock::ReadUnLock ; (; ). Release the lock in read mode. ; Definition at line 61 of file TRWSpinLock.cxx. ◆ WriteLock(). void TRWSpinLock::WriteLock ; (; ). Acquire the lock in write mode. ; Definition at line 77 of file TRWSpinLock.cxx. ◆ WriteUnLock(). void TRWSpinLock::WriteUnLock ; (; ). Release the lock in write mode. ; Definition at line 102 of file TRWSpinLock.cxx. Member Data Documentation. ◆ fCond. std::condition_variable_any ROOT::TRWSpinLock::fCond. private . ! RWlock internal condition variable ; Definition at line 29 of file TRWSpinLock.hxx. ◆ fMutex. ROOT::TSpinMutex ROOT::TRWSpinLock,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1TRWSpinLock.html:683,variab,variable,683,doc/master/classROOT_1_1TRWSpinLock.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1TRWSpinLock.html,1,['variab'],['variable']
Modifiability,. ROOT: ROOT::TRWSpinLock Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; ROOT::TRWSpinLock Class Reference. . Definition at line 22 of file TRWSpinLock.hxx. Public Member Functions;  TRWSpinLock ();  Regular constructor. ;  ; void ReadLock ();  Acquire the lock in read mode. ;  ; void ReadUnLock ();  Release the lock in read mode. ;  ; void WriteLock ();  Acquire the lock in write mode. ;  ; void WriteUnLock ();  Release the lock in write mode. ;  . Private Attributes; std::condition_variable_any fCond;  ! RWlock internal condition variable ;  ; ROOT::TSpinMutex fMutex;  ! RWlock internal mutex ;  ; std::atomic< int > fReaderReservation;  ! A reader wants access ;  ; std::atomic< int > fReaders;  ! Number of readers ;  ; std::atomic< bool > fWriter;  ! Is there a writer? ;  ; std::atomic< int > fWriterReservation;  ! A writer wants access ;  . #include <ROOT/TRWSpinLock.hxx>; Constructor & Destructor Documentation. ◆ TRWSpinLock(). ROOT::TRWSpinLock::TRWSpinLock ; (; ). inline . Regular constructor. ; Definition at line 34 of file TRWSpinLock.hxx. Member Function Documentation. ◆ ReadLock(). void TRWSpinLock::ReadLock ; (; ). Acquire the lock in read mode. ; Definition at line 35 of file TRWSpinLock.cxx. ◆ ReadUnLock(). void TRWSpinLock::ReadUnLock ; (; ). Release the lock in read mode. ; Definition at line 61 of file TRWSpinLock.cxx. ◆ WriteLock(). void TRWSpinLock::WriteLock ; (; ). Acquire the lock in write mode. ; Definition at line 77 of file TRWSpinLock.cxx. ◆ WriteUnLock(). void TRWSpinLock::WriteUnLock ; (; ). Release the lock in write mode. ; Definition at line 102 of file TRWSpinLock.cxx. Member Data Documentation. ◆ fCond. std::condition_variable_any ROOT::TRWSpinLock::fCond. private . ! RWlock internal condition variable ; Definition at line 29 of file TRWSpinLock.hxx. ◆ fMutex. ROOT::TSpinMutex ROOT::TRWSpinLock:,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1TRWSpinLock.html:682,variab,variable,682,doc/v632/classROOT_1_1TRWSpinLock.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1TRWSpinLock.html,1,['variab'],['variable']
Modifiability,". ROOT: ROOT::TSchemaRule Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Static Private Member Functions |; Private Attributes |; List of all members ; ROOT::TSchemaRule Class Reference. . Definition at line 19 of file TSchemaRule.h. Classes; class  TSources;  . Public Types; typedef void(* ReadFuncPtr_t) (char *, TVirtualObject *);  ; typedef void(* ReadRawFuncPtr_t) (char *, TBuffer &);  ; enum  RuleType_t { kReadRule = 0; , kReadRawRule = 1; , kNone = 99999; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TSchemaRule ();  Default Constructor. ;  ;  TSchemaRule (const TSchemaRule &rhs);  Copy Constructor. ;  ; virtual ~TSchemaRule ();  Destructor. ;  ; void AsString (TString &out, const char *options="""") const;  Add to the string 'out' the string representation of the rule. ;  ; void Clear (Option_t *="""") override;  Zero out this rule object. ;  ; Bool_t Conflicts (const TSchemaRule *rule) const;  Check if this rule conflicts with the given one. ;  ; const char * GetAttributes () const;  Get the attributes code of this rule. ;  ; const char * GetCode () const;  Get the source code of this rule. ;  ; Bool_t GetEmbed () const;  Return true if this rule should be saved in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1TSchemaRule.html:676,inherit,inherited,676,doc/master/classROOT_1_1TSchemaRule.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1TSchemaRule.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::TSchemaRule Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Static Private Member Functions |; Private Attributes |; List of all members ; ROOT::TSchemaRule Class Reference. . Definition at line 19 of file TSchemaRule.h. Classes; class  TSources;  . Public Types; typedef void(* ReadFuncPtr_t) (char *, TVirtualObject *);  ; typedef void(* ReadRawFuncPtr_t) (char *, TBuffer &);  ; enum  RuleType_t { kReadRule = 0; , kReadRawRule = 1; , kNone = 99999; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TSchemaRule ();  Default Constructor. ;  ;  TSchemaRule (const TSchemaRule &rhs);  Copy Constructor. ;  ; virtual ~TSchemaRule ();  Destructor. ;  ; void AsString (TString &out, const char *options="""") const;  Add to the string 'out' the string representation of the rule. ;  ; void Clear (Option_t *="""") override;  Zero out this rule object. ;  ; Bool_t Conflicts (const TSchemaRule *rule) const;  Check if this rule conflicts with the given one. ;  ; const char * GetAttributes () const;  Get the attributes code of this rule. ;  ; const char * GetCode () const;  Get the source code of this rule. ;  ; Bool_t GetEmbed () const;  Return true if this rule should be saved in ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1TSchemaRule.html:675,inherit,inherited,675,doc/v632/classROOT_1_1TSchemaRule.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1TSchemaRule.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::TSchemaRule::TSources Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; ROOT::TSchemaRule::TSources Class Reference. . Definition at line 23 of file TSchemaRule.h. Public Member Functions;  TSources (const char *name=nullptr, const char *title=nullptr, const char *dims=nullptr);  ; const char * GetDimensions ();  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1TSchemaRule_1_1TSources.html:709,inherit,inherited,709,doc/master/classROOT_1_1TSchemaRule_1_1TSources.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1TSchemaRule_1_1TSources.html,1,['inherit'],['inherited']
Modifiability,". ROOT: ROOT::TThreadExecutor Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::TThreadExecutor Class ReferenceParallelized classes. ; This class provides a simple interface to execute the same task multiple times in parallel threads, possibly with different arguments every time. . ROOT::TThreadExecutor::Map; This class inherits its interfaces from ROOT::TExecutorCRTP; , adapting them for multithreaded parallelism and extends them supporting:; Parallel Foreach operations.; Custom task granularity and partial reduction, by specifying reduction function and the number of chunks as extra parameters for the Map call. This is specially useful to reduce the size of intermediate results when dealing with a sizeable number of elements in the input data. The two possible usages of the Map method are:. Map(F func, unsigned nTimes): func is executed nTimes with no arguments; Map(F func, T& args): func is executed on each element of the collection of arguments args. For either signature, func is executed as many times as needed by a pool of nThreads threads, where nThreads typically defaults to the number of cores.; A collection containing the result of each execution is returned.; Note: the user is responsible for the deletion of any object that might be created upon execution of func, returned objects included: ROOT::TThreadExecutor never deletes what it returns, it simply forgets it.; Parameters. funca callable object, such as a lambda expression, an std::function, a functor object or a function that takes zero arguments (for the first signature) or one (for the second signature). ; argsa standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature. An integer only for the first. . Note: in cases where the function to be executed takes more than zero/one argument but all",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1TThreadExecutor.html:498,inherit,inherits,498,doc/master/classROOT_1_1TThreadExecutor.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1TThreadExecutor.html,3,"['adapt', 'extend', 'inherit']","['adapting', 'extends', 'inherits']"
Modifiability,". ROOT: ROOT::TThreadExecutor Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; ROOT::TThreadExecutor Class ReferenceParallelized classes. ; This class provides a simple interface to execute the same task multiple times in parallel threads, possibly with different arguments every time. . ROOT::TThreadExecutor::Map; This class inherits its interfaces from ROOT::TExecutorCRTP; , adapting them for multithreaded parallelism and extends them supporting:; Parallel Foreach operations.; Custom task granularity and partial reduction, by specifying reduction function and the number of chunks as extra parameters for the Map call. This is specially useful to reduce the size of intermediate results when dealing with a sizeable number of elements in the input data. The two possible usages of the Map method are:. Map(F func, unsigned nTimes): func is executed nTimes with no arguments; Map(F func, T& args): func is executed on each element of the collection of arguments args. For either signature, func is executed as many times as needed by a pool of nThreads threads, where nThreads typically defaults to the number of cores.; A collection containing the result of each execution is returned.; Note: the user is responsible for the deletion of any object that might be created upon execution of func, returned objects included: ROOT::TThreadExecutor never deletes what it returns, it simply forgets it.; Parameters. funca callable object, such as a lambda expression, an std::function, a functor object or a function that takes zero arguments (for the first signature) or one (for the second signature). ; argsa standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature. An integer only for the first. . Note: in cases where the function to be executed takes more than zero/one argument but all ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1TThreadExecutor.html:497,inherit,inherits,497,doc/v632/classROOT_1_1TThreadExecutor.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1TThreadExecutor.html,3,"['adapt', 'extend', 'inherit']","['adapting', 'extends', 'inherits']"
Modifiability,". ROOT: ROOT::v5::TF1Data Struct Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; ROOT::v5::TF1Data Struct Reference. . Definition at line 37 of file TF1Data.h. Public Member Functions;  TF1Data ();  F1 default constructor. ;  ;  ~TF1Data () override;  TF1 default destructor. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void Streamer (TBuffer &b, Int_t version, UInt_t start, UInt_t count, const TClass *onfile_class=nullptr);  specialized streamer function being able to read old TF1 versions as TF1Data in memory ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from ROOT::v5::TFormula;  TFormula ();  Formula default constructor. ;  ;  TFormula (const char *name, const char *formula);  Normal Formula constructor. ;  ;  TFormula (const TFormula &formula);  Default constructor. ;  ;  ~TFormula () override;  Formula default destructor. ;  ; virtual void Analyze (const char *schain, Int_t &err, Int_t offset=0);  Analyze a sub-expression in one formula. ;  ; virtual Bool_t AnalyzeFunction (TString &chaine, Int_t &err, Int_t offset=0);  Check if the chain as function call. ;  ; void Clear (Option_t *option="""") override;  Resets the objects. ;  ; virtual Int_t Compile (const char *expression="""");  Compile expression already stored in fTitle. ;  ; void Copy (TObject &formula) const override;  Copy this formula. ;  ; virtual char * DefinedString (Int_t code);  Return address of string corresponding to special code. ;  ; virtual Double_t DefinedValue (Int_t code);  Return value corresponding to special code. ;  ; virtual Int_t DefinedVariable (TString &variable, Int_t &action);  Check if expression is in the list of defined variables. ;  ; virtual Double_t Eval (Double_t x, Double_t y=0, Double_t z=",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1v5_1_1TF1Data.html:842,inherit,inherited,842,doc/master/structROOT_1_1v5_1_1TF1Data.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1v5_1_1TF1Data.html,1,['inherit'],['inherited']
Modifiability,". ROOT: RecHit Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; RecHit Class Reference. . Definition at line 88 of file collection_proxies.C. Public Member Functions;  RecHit (float pt, float x, float y, float z);  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRecHit.html:593,inherit,inherited,593,doc/master/classRecHit.html,https://root.cern,https://root.cern/doc/master/classRecHit.html,1,['inherit'],['inherited']
Modifiability,". ROOT: RooAbsAnaConvPdf Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Friends |; List of all members ; RooAbsAnaConvPdf Class ReferenceabstractRooFit » RooFit Core. ; Base class for PDFs that represent a physics model that can be analytically convolved with a resolution model. ; To achieve factorization between the physics model and the resolution model, each physics model must be able to be written in the form ; \[; \mathrm{Phys}(x, \bar{a}, \bar{b}) = \sum_k \mathrm{coef}_k(\bar{a}) * \mathrm{basis}_k(x,\bar{b}); \]. where \( \mathrm{basis}_k \) are a limited number of functions in terms of the variable to be convoluted, and \( \mathrm{coef}_k \) are coefficients independent of the convolution variable.; Classes derived from RooResolutionModel implement ; \[; R_k(x,\bar{b},\bar{c}) = \int \mathrm{basis}_k(x', \bar{b}) \cdot \mathrm{resModel}(x-x',\bar{c}) \; \mathrm{d}x',; \]. which RooAbsAnaConvPdf uses to construct the pdf for [ Phys (x) R ] : ; \[; \mathrm{PDF}(x,\bar{a},\bar{b},\bar{c}) = \sum_k \mathrm{coef}_k(\bar{a}) * R_k(x,\bar{b},\bar{c}); \]. A minimal implementation of a RooAbsAnaConvPdf physics model consists of. A constructor that declares the required basis functions using the declareBasis() method. The declareBasis() function assigns a unique identifier code to each declare basis; An implementation of coefficient(Int_t code) returning the coefficient value for each declared basis function. Optionally, analytical integrals can be provided for the coefficient functions. The interface for this is quite similar to that for integrals of regular PDFs. Two functions, Int_t getCoefAnalyticalIntegral(Int_t coef, RooArgSet& allVars, RooArgSet& analVars, const char* rangeName) const; double coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName) co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsAnaConvPdf.html:806,variab,variable,806,doc/master/classRooAbsAnaConvPdf.html,https://root.cern,https://root.cern/doc/master/classRooAbsAnaConvPdf.html,2,['variab'],['variable']
Modifiability,". ROOT: RooAbsData Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Static Protected Attributes |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; RooAbsData Class ReferenceabstractRooFit » RooFit Core. ; Abstract base class for binned and unbinned datasets. ; The abstract interface defines plotting and tabulating entry points for its contents and provides an iterator over its elements (bins for binned data sets, data points for unbinned datasets). Storing global observables in RooFit datasets; RooFit groups model variables into observables and parameters, depending on if their values are stored in the dataset. For fits with parameter constraints, there is a third kind of variables, called global observables. These represent the results of auxiliary measurements that constrain the nuisance parameters. In the RooFit implementation, a likelihood is generally the sum of two terms:; the likelihood of the data given the parameters, where the normalization set is the set of observables (implemented by RooNLLVar); the constraint term, where the normalization set is the set of global observables (implemented by RooConstraintSum). Before this release, the global observable values were always taken from the model/pdf. With this release, a mechanism is added to store a snapshot of global observables in any RooDataSet or RooDataHist. For toy studies where the global observables assume a different values for each toy, the bookkeeping of the set of global observables and in particular their values is much easier with this change.; Usage example for a model with global observables g1 and g2: using namespace RooFit;; ; std::unique_ptr<RooAbsData> data{model.generate(x, 1000)}; // data has only the single observables x; data->setGlobalObse",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsData.html:769,variab,variables,769,doc/master/classRooAbsData.html,https://root.cern,https://root.cern/doc/master/classRooAbsData.html,2,['variab'],['variables']
Modifiability,". ROOT: RooAbsFunc Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; RooAbsFunc Class ReferenceabstractRooFit » RooFit Core. ; Abstract interface for evaluating a real-valued function of one real variable and performing numerical algorithms on it. ; The purpose of this interface is to decouple RooAbsArg-specific implementations from numerical algorithms that only need a simple function evaluation interface. The domain of the function is assumed to be an n-dimensional box with edge coordinates specified by the the getMinLimit() and getMaxLimit() methods. ; Definition at line 27 of file RooAbsFunc.h. Public Member Functions;  RooAbsFunc (const RooAbsFunc &other);  ;  RooAbsFunc (UInt_t dimension);  ; virtual ~RooAbsFunc ();  ; virtual std::list< double > * binBoundaries (Int_t) const;  ; UInt_t getDimension () const;  ; virtual double getMaxLimit (UInt_t dimension) const =0;  ; virtual double getMinLimit (UInt_t dimension) const =0;  ; virtual const char * getName () const;  Name of function binding. ;  ; virtual TClass * IsA () const;  ; bool isValid () const;  ; Int_t numCall () const;  Return number of function calls since last reset. ;  ; virtual double operator() (const double xvector[]) const =0;  ; virtual std::list< double > * plotSamplingHint (RooAbsRealLValue &, double, double) const;  Interface for returning an optional hint for initial sampling points when constructing a curve projected on observable. ;  ; void resetNumCall () const;  Reset function call counter. ;  ; virtual void restoreXVec () const;  ; virtual void saveXVec () const;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version (); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsFunc.html:374,variab,variable,374,doc/master/classRooAbsFunc.html,https://root.cern,https://root.cern/doc/master/classRooAbsFunc.html,1,['variab'],['variable']
Modifiability,". ROOT: RooAbsMCStudyModule Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; RooAbsMCStudyModule Class ReferenceRooFit » RooFit Core. ; Base class for add-on modules to RooMCStudy that can perform additional calculations on each generate+fit cycle managed by RooMCStudy. ; This class can insert code to be executed before each generation step, between the generation and fitting step and after the fitting step. Any summary output variables declared in the RooDataSet exported through summaryData() is merged with the 'master' summary dataset in RooMCStudy.; Look at RooDLLSignificanceMCSModule for an example of an implementation. ; Definition at line 30 of file RooAbsMCStudyModule.h. Public Member Functions;  RooAbsMCStudyModule (const char *name, const char *title);  Constructor. ;  ;  RooAbsMCStudyModule (const RooAbsMCStudyModule &other);  Copy constructor. ;  ; bool doInitializeInstance (RooMCStudy &);  Initializer method called upon attachment to given RooMCStudy object. ;  ; virtual RooDataSet * finalizeRun ();  Method called at the end of each RooMCStudy run. ;  ; virtual bool initializeInstance ();  Initializer called immediately after attachment to RooMCStudy object and initialization of module base class. ;  ; virtual bool initializeRun (Int_t);  Method called at the beginning of each RooMCStudy run. ;  ; TClass * IsA () const override;  ; virtual bool processAfterFit (Int_t);  Method called after fit has been performed. ;  ; virtual bool processBeforeGen (Int_t);  Method called after resetting of generator parameters to initial values and before call to generator context Any modifications to generator parameters will affect next generation operation (only) ;  ; virtual bool processBetweenGenAndFit (Int_t);  Method called after generation of toy data sample an",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsMCStudyModule.html:638,variab,variables,638,doc/master/classRooAbsMCStudyModule.html,https://root.cern,https://root.cern/doc/master/classRooAbsMCStudyModule.html,1,['variab'],['variables']
Modifiability,". ROOT: RooAbsMoment Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; RooAbsMoment Class ReferenceRooFit » RooFit Core. . Definition at line 27 of file RooAbsMoment.h. Public Member Functions;  RooAbsMoment ()=default;  ;  RooAbsMoment (const char *name, const char *title, RooAbsReal &func, RooRealVar &x, Int_t order=1, bool takeRoot=false);  ;  RooAbsMoment (const RooAbsMoment &other, const char *name=nullptr);  ; bool central () const;  ; TClass * IsA () const override;  ; RooAbsReal * mean ();  ; Int_t order () const;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (const char *name, const char *title, double minVal, double maxVal, const char *unit="""");  Constructor with plot range and unit label. ;  ;  RooAbsReal (const RooAbsReal &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooAbsReal () override;  Destructor. ;  ; virtual double analyticalIntegral (Int_t code, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; virtual double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; TF1 * asTF (const RooArgList &obs, const RooArgList &pars=RooArgList(), const RooArgSet &nset=RooArgSet()) const;  Return a ROOT TF1,2,3 object bound to this RooAbsReal with given definition of observables and parameters. ;  ; virtual std::list< double > * binBoundari",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsMoment.html:876,inherit,inherited,876,doc/master/classRooAbsMoment.html,https://root.cern,https://root.cern/doc/master/classRooAbsMoment.html,1,['inherit'],['inherited']
Modifiability,". ROOT: RooAbsPdf::CacheElem Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; RooAbsPdf::CacheElem Class Reference. ; Normalization set with for above integral. ; Definition at line 322 of file RooAbsPdf.h. Public Member Functions;  CacheElem (RooAbsReal &norm);  ;  ~CacheElem () override;  Destructor of normalization cache element. ;  ; RooArgList containedArgs (Action) override;  ;  Public Member Functions inherited from RooAbsCacheElement;  RooAbsCacheElement ();  ; virtual ~RooAbsCacheElement ();  ; virtual void findConstantNodes (const RooArgSet &obs, RooArgSet &cacheList, RooLinkedList &processedNodes);  Interface for constant term optimization calls. ;  ; virtual TClass * IsA () const;  ; virtual void operModeHook (RooAbsArg::OperMode);  Interface for changes of operation mode. ;  ; virtual void optimizeCacheMode (const RooArgSet &obs, RooArgSet &optNodes, RooLinkedList &processedNodes);  Interface for cache optimization calls. ;  ; virtual void printCompactTreeHook (std::ostream &, const char *, Int_t curElem, Int_t totElem);  Hook function to print cache guts in tree printing mode of RooAbsArgs. ;  ; virtual bool redirectServersHook (const RooAbsCollection &, bool, bool, bool);  Interface for server redirect calls. ;  ; void setOwner (RooAbsArg *owner);  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Public Attributes; std::unique_ptr< RooAbsReal > _norm;  . Additional Inherited Members;  Public Types inherited from RooAbsCacheElement; enum  Action { OperModeChange; , OptimizeCaching; , FindConstantNodes; };  ;  Static Public Member Functions inherited from RooAbsCacheElement; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Protected Attributes inherited f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsPdf_1_1CacheElem.html:554,inherit,inherited,554,doc/master/classRooAbsPdf_1_1CacheElem.html,https://root.cern,https://root.cern/doc/master/classRooAbsPdf_1_1CacheElem.html,1,['inherit'],['inherited']
Modifiability,". ROOT: RooAbsPdf::GenSpec Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; RooAbsPdf::GenSpec Class Reference. . Definition at line 72 of file RooAbsPdf.h. Public Member Functions;  GenSpec ()=default;  ; virtual ~GenSpec ();  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions;  GenSpec (const GenSpec &other);  ;  GenSpec (RooAbsGenContext *context, const RooArgSet &whatVars, RooDataSet *protoData, Int_t nGen, bool extended, bool randProto, bool resampleProto, TString dsetName, bool init=false);  . Private Attributes; TString _dsetName;  ; bool _extended = false;  ; std::unique_ptr< RooAbsGenContext > _genContext;  ; bool _init = false;  ; Int_t _nGen = 0;  ; RooDataSet * _protoData = nullptr;  ; bool _randProto = false;  ; bool _resampleProto = false;  ; RooArgSet _whatVars;  . Friends; class RooAbsPdf;  . #include <RooAbsPdf.h>; Constructor & Destructor Documentation. ◆ ~GenSpec(). RooAbsPdf::GenSpec::~GenSpec ; (; ). virtualdefault . ◆ GenSpec() [1/3]. RooAbsPdf::GenSpec::GenSpec ; (; ). default . ◆ GenSpec() [2/3]. RooAbsPdf::GenSpec::GenSpec ; (; RooAbsGenContext * ; context, . const RooArgSet & ; whatVars, . RooDataSet * ; protoData, . Int_t ; nGen, . bool ; extended, . bool ; randProto, . bool ; resampleProto, . TString ; dsetName, . bool ; init = false . ). private . Definition at line 2685 of file RooAbsPdf.cxx. ◆ GenSpec() [3/3]. RooAbsPdf::GenSpec::GenSpec ; (; const GenSpec & ; other). private . Member Function Documentation. ◆ Class(). static TCla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsPdf_1_1GenSpec.html:936,extend,extended,936,doc/master/classRooAbsPdf_1_1GenSpec.html,https://root.cern,https://root.cern/doc/master/classRooAbsPdf_1_1GenSpec.html,1,['extend'],['extended']
Modifiability,". ROOT: RooAddModel Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Protected Attributes |; Friends |; List of all members ; RooAddModel Class Reference. ; RooAddModel is an efficient implementation of a sum of PDFs of the form. . \[; c_1 \cdot \mathrm{PDF}_1 + c_2 \cdot \mathrm{PDF}_2 + ... + c_n \cdot \mathrm{PDF}_n; \]. or ; \[; c_1 \cdot \mathrm{PDF}_1 + c_2 \cdot \mathrm{PDF}_2 + ... + \left( 1-\sum_{i=1}^{n-1} c_i \right) \cdot \mathrm{PDF}_n; \]. The first form is for extended likelihood fits, where the expected number of events is \( \sum_i c_i \). The coefficients \( c_i \) can either be explicitly provided, or, if all components support extended likelihood fits, they can be calculated from the contribution of each PDF to the total number of expected events.; In the second form, the sum of the coefficients is enforced to be one, and the coefficient of the last PDF is calculated from that condition.; RooAddModel relies on each component PDF to be normalized, and will perform no normalization other than calculating the proper last coefficient \( c_n \), if requested. An (enforced) condition for this assumption is that each \( \mathrm{PDF}_i \) is independent of each coefficient \( i \). ; Definition at line 27 of file RooAddModel.h. Classes; class  IntCacheElem;  . Public Member Functions;  RooAddModel ();  ;  RooAddModel (const char *name, const char *title, const RooArgList &pdfList, const RooArgList &coefList, bool ownPdfList=false);  Generic constructor from list of PDFs and list of coefficients. ;  ;  RooAddModel (const RooAddModel &other, const char *name=nullptr);  Copy constructor. ;  ; double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Return analytical integral defined by given scenario code. ;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAddModel.html:674,extend,extended,674,doc/master/classRooAddModel.html,https://root.cern,https://root.cern/doc/master/classRooAddModel.html,2,['extend'],['extended']
Modifiability,". ROOT: RooAddPdf Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; RooAddPdf Class ReferenceRooFit » RooFit Core. ; Efficient implementation of a sum of PDFs of the form. . \[; \sum_{i=1}^{n} c_i \cdot \mathrm{PDF}_i; \]. or ; \[; c_1\cdot\mathrm{PDF}_1 + c_2\cdot\mathrm{PDF}_2 \; + \; ... \; + \; \left( 1-\sum_{i=1}^{n-1}c_i \right) \cdot \mathrm{PDF}_n; \]. The first form is for extended likelihood fits, where the expected number of events is \( \sum_i c_i \). The coefficients \( c_i \) can either be explicitly provided, or, if all components support extended likelihood fits, they can be calculated from the contribution of each PDF to the total expected number of events.; In the second form, the sum of the coefficients is required to be 1 or less, and the coefficient of the last PDF is calculated automatically from the condition that the sum of all coefficients has to be 1. Recursive coefficients; It is also possible to parameterise the coefficients recursively. \[; \sum_{i=1}^n c_i \prod_{j=1}^{i-1} \left[ (1-c_j) \right] \cdot \mathrm{PDF}_i \\; = c_1 \cdot \mathrm{PDF}_1 + (1-c_1)\, c_2 \cdot \mathrm{PDF}_2 + \ldots + (1-c_1)\ldots(1-c_{n-1}) \cdot 1 \cdot \mathrm{PDF}_n \\; \]. In this form the sum of the coefficients is always less than 1.0 for all possible values of the individual coefficients between 0 and 1. NoteDon't pass the \( n^\mathrm{th} \) coefficient. It is always 1, since the normalisation condition removes one degree of freedom.; RooAddPdf relies on each component PDF to be normalized and will perform no normalization other than calculating the proper last coefficient \( c_n \), if requested. An (enforced) condition for this assumption is that each \( \mathrm{PDF}_i \) is independen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAddPdf.html:654,extend,extended,654,doc/master/classRooAddPdf.html,https://root.cern,https://root.cern/doc/master/classRooAddPdf.html,2,['extend'],['extended']
Modifiability,". ROOT: RooAddPdf Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; RooAddPdf Class ReferenceRooFit » RooFit Core. ; Efficient implementation of a sum of PDFs of the form. . \[; \sum_{i=1}^{n} c_i \cdot \mathrm{PDF}_i; \]. or ; \[; c_1\cdot\mathrm{PDF}_1 + c_2\cdot\mathrm{PDF}_2 \; + \; ... \; + \; \left( 1-\sum_{i=1}^{n-1}c_i \right) \cdot \mathrm{PDF}_n; \]. The first form is for extended likelihood fits, where the expected number of events is \( \sum_i c_i \). The coefficients \( c_i \) can either be explicitly provided, or, if all components support extended likelihood fits, they can be calculated from the contribution of each PDF to the total expected number of events.; In the second form, the sum of the coefficients is required to be 1 or less, and the coefficient of the last PDF is calculated automatically from the condition that the sum of all coefficients has to be 1. Recursive coefficients; It is also possible to parameterise the coefficients recursively. \[; \sum_{i=1}^n c_i \prod_{j=1}^{i-1} \left[ (1-c_j) \right] \cdot \mathrm{PDF}_i \\; = c_1 \cdot \mathrm{PDF}_1 + (1-c_1)\, c_2 \cdot \mathrm{PDF}_2 + \ldots + (1-c_1)\ldots(1-c_{n-1}) \cdot 1 \cdot \mathrm{PDF}_n \\; \]. In this form the sum of the coefficients is always less than 1.0 for all possible values of the individual coefficients between 0 and 1. NoteDon't pass the \( n^\mathrm{th} \) coefficient. It is always 1, since the normalisation condition removes one degree of freedom.; RooAddPdf relies on each component PDF to be normalized and will perform no normalization other than calculating the proper last coefficient \( c_n \), if requested. An (enforced) condition for this assumption is that each \( \mathrm{PDF}_i \) is independent",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAddPdf.html:653,extend,extended,653,doc/v632/classRooAddPdf.html,https://root.cern,https://root.cern/doc/v632/classRooAddPdf.html,2,['extend'],['extended']
Modifiability,". ROOT: RooBCPGenDecay Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; RooBCPGenDecay Class ReferenceRooFit » RooFit. ; Implement standard CP physics model with S and C (no mention of lambda) Suitably stolen and modified from RooBCPEffDecay. ; Definition at line 23 of file RooBCPGenDecay.h. Public Types; enum  DecayType { SingleSided; , DoubleSided; , Flipped; };  ;  Public Types inherited from RooAbsPdf; enum  ExtendMode { CanNotBeExtended; , CanBeExtended; , MustBeExtended; };  ;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintabl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBCPGenDecay.html:579,inherit,inherited,579,doc/master/classRooBCPGenDecay.html,https://root.cern,https://root.cern/doc/master/classRooBCPGenDecay.html,4,['inherit'],['inherited']
Modifiability,". ROOT: RooBernstein Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; RooBernstein Class ReferenceRooFit » RooFit. ; Bernstein basis polynomials are positive-definite in the range [0,1]. ; In this implementation, we extend [0,1] to be the range of the parameter. There are n+1 Bernstein basis polynomials of degree n: ; \[; B_{i,n}(x) = \begin{pmatrix}n \\\ i \end{pmatrix} x^i \cdot (1-x)^{n-i}; \]. Thus, by providing n coefficients that are positive-definite, there is a natural way to have well-behaved polynomial PDFs. For any n, the n+1 polynomials 'form a partition of unity', i.e., they sum to one for all values of x. They can be used as a basis to span the space of polynomials with degree n or less: ; \[; PDF(x, c_0, ..., c_n) = \mathcal{N} \cdot \sum_{i=0}^{n} c_i \cdot B_{i,n}(x).; \]. By giving n+1 coefficients in the constructor, this class constructs the n+1 polynomials of degree n, and sums them to form an element of the space of polynomials of degree n. \( \mathcal{N} \) is a normalisation constant that takes care of the cases where the \( c_i \) are not all equal to one.; See also http://www.idav.ucdavis.edu/education/CAGDNotes/Bernstein-Polynomials.pdf ; Definition at line 22 of file RooBernstein.h. Public Member Functions;  RooBernstein ()=default;  ;  RooBernstein (const char *name, const char *title, RooAbsRealLValue &_x, const RooArgList &_coefList);  ;  RooBernstein (const RooBernstein &other, const char *name=nullptr);  ; double analyticalIntegral (Int_t code, const char *rangeName=nullptr) const override;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; std::string buildCallToAnalyticIntegral (Int_t code, const char *rangeName, RooFit::Detail::CodeSquashContext &ctx) const override;  This function defines the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBernstein.html:421,extend,extend,421,doc/master/classRooBernstein.html,https://root.cern,https://root.cern/doc/master/classRooBernstein.html,1,['extend'],['extend']
Modifiability,". ROOT: RooBinSamplingPdf Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; RooBinSamplingPdf Class Reference. ; The RooBinSamplingPdf is supposed to be used as an adapter between a continuous PDF and a binned distribution. ; When RooFit is used to fit binned data, and the PDF is continuous, it takes the probability density at the bin centre as a proxy for the probability averaged (integrated) over the entire bin. This is correct only if the second derivative of the function vanishes, though. This is shown in the plots below.; For PDFs that have larger curvatures, the RooBinSamplingPdf can be used. It integrates the PDF in each bin using an adaptive integrator. This usually requires 21 times more function evaluations, but significantly reduces biases due to better sampling of the PDF. The integrator can be accessed from the outside using integrator(). This can be used to change the integration rules, so less/more function evaluations are performed. The target precision of the integrator can be set in the constructor. How to use it; There are two ways to use this class:; Manually wrap a PDF: RooBinSamplingPdf binSampler(""<name>"", ""title"", <binned observable of PDF>, <original PDF> [, <precision for integrator>]);; binSampler.fitTo(data);; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; RooBinSamplingPdfThe RooBinSamplingPdf is supposed to be used as an adapter between a continuous PDF and a binned dist...Definition RooBinSamplingPdf.h:28; RooBinSamplingPdf::integratorstd::unique_ptr< ROOT::Math::IntegratorOneDim > & integrator() constDirect access to the unique_ptr holding",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBinSamplingPdf.html:409,adapt,adapter,409,doc/master/classRooBinSamplingPdf.html,https://root.cern,https://root.cern/doc/master/classRooBinSamplingPdf.html,2,['adapt'],"['adapter', 'adaptive']"
Modifiability,". ROOT: RooBinnedGenContext Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; RooBinnedGenContext Class ReferenceRooFit » RooFit Core. ; Efficient implementation of the generator context specific for binned pdfs. ; Definition at line 26 of file RooBinnedGenContext.h. Public Member Functions;  RooBinnedGenContext (const RooAbsPdf &model, const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool _verbose=false);  Constructor. ;  ;  ~RooBinnedGenContext () override;  ; void attach (const RooArgSet &params) override;  Attach given set of variables to internal p.d.f. clone. ;  ; RooDataSet * generate (double nEvents=0.0, bool skipInit=false, bool extendedMode=false) override;  Generate the specified number of events with nEvents>0 and and return a dataset containing the generated events. ;  ; TClass * IsA () const override;  ; void printMultiline (std::ostream &os, Int_t content, bool verbose=false, TString indent="""") const override;  Print the details of the context. ;  ; void setExpectedData (bool) override;  ; void setProtoDataOrder (Int_t *) override;  Set the traversal order of prototype data to that in the lookup tables passed as argument. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsGenContext;  RooAbsGenContext (const RooAbsPdf &model, const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool _verbose=false);  Constructor. ;  ; Int_t defaultPrintContents (Option_t *opt) const override;  Define default contents when printing. ;  ; StyleOption defaultPrintStyle (Option_t *opt) const override;  Define default print style. ;  ; bool isV",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBinnedGenContext.html:790,variab,variables,790,doc/master/classRooBinnedGenContext.html,https://root.cern,https://root.cern/doc/master/classRooBinnedGenContext.html,2,"['extend', 'variab']","['extendedMode', 'variables']"
Modifiability,". ROOT: RooBinning Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; RooBinning Class ReferenceRooFit » RooFit Core. ; Implements a RooAbsBinning in terms of an array of boundary values, posing no constraints on the choice of binning, thus allowing variable bin sizes. ; Various methods allow the user to add single bin boundaries, mirrored pairs, or sets of uniformly spaced boundaries. ; Definition at line 27 of file RooBinning.h. Public Member Functions;  RooBinning (const RooBinning &other, const char *name=nullptr);  Copy constructor. ;  ;  RooBinning (double xlo=-RooNumber::infinity(), double xhi=RooNumber::infinity(), const char *name=nullptr);  Constructor for an initially empty binning defining the range [xlo,xhi]. ;  ;  RooBinning (Int_t nBins, const double *boundaries, const char *name=nullptr);  Constructor for a binning in the range[xlo,xhi] with 'nbins' bin boundaries listed array 'boundaries'. ;  ;  RooBinning (Int_t nBins, double xlo, double xhi, const char *name=nullptr);  Constructor for a uniform binning in 'nbins' bins in the range [xlo,xhi]. ;  ;  ~RooBinning () override;  Destructor. ;  ; bool addBoundary (double boundary);  Add bin boundary at given value. ;  ; void addBoundaryPair (double boundary, double mirrorPoint=0);  Add pair of boundaries: one at 'boundary' and one at 2*mirrorPoint-boundary. ;  ; void addUniform (Int_t nBins, double xlo, double xhi);  Add array of nbins uniformly sized bins in range [xlo,xhi]. ;  ; double * array () const override;  Return array of boundary values. ;  ; double averageBinWidth () const override;  Return the average bin width. ;  ; double binCenter (Int_t bin) const override;  Return the position of the center of bin 'bin'. ;  ; double binHigh (Int_t bin) const override;  Return the upper bound of the req",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBinning.html:457,variab,variable,457,doc/master/classRooBinning.html,https://root.cern,https://root.cern/doc/master/classRooBinning.html,1,['variab'],['variable']
Modifiability,". ROOT: RooCFunction1Ref< VO, VI > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Types |; Static Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; RooCFunction1Ref< VO, VI > Class Template Reference. ; template<class VO, class VI>; class RooCFunction1Ref< VO, VI >; Definition at line 89 of file RooCFunction1Binding.h. Public Member Functions;  RooCFunction1Ref (VO(*ptr)(VI)=nullptr);  ; const char * argName (Int_t iarg);  ; RooCFunction1Map< double, double > & fmap ();  ; RooCFunction1Map< double, int > & fmap ();  ; TClass * IsA () const override;  ; const char * name () const;  ; VO operator() (VI x) const;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract metho",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCFunction1Ref.html:991,inherit,inherited,991,doc/master/classRooCFunction1Ref.html,https://root.cern,https://root.cern/doc/master/classRooCFunction1Ref.html,1,['inherit'],['inherited']
Modifiability,". ROOT: RooCFunction2Ref< VO, VI1, VI2 > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Types |; Static Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; RooCFunction2Ref< VO, VI1, VI2 > Class Template Reference. ; template<class VO, class VI1, class VI2>; class RooCFunction2Ref< VO, VI1, VI2 >; Definition at line 98 of file RooCFunction2Binding.h. Public Member Functions;  RooCFunction2Ref (VO(*ptr)(VI1, VI2)=nullptr);  ; const char * argName (Int_t iarg);  ; TClass * IsA () const override;  ; const char * name () const;  ; VO operator() (VI1 x, VI2 y) const;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCFunction2Ref.html:940,inherit,inherited,940,doc/master/classRooCFunction2Ref.html,https://root.cern,https://root.cern/doc/master/classRooCFunction2Ref.html,1,['inherit'],['inherited']
Modifiability,". ROOT: RooCFunction3Ref< VO, VI1, VI2, VI3 > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Types |; Static Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; RooCFunction3Ref< VO, VI1, VI2, VI3 > Class Template Reference. ; template<class VO, class VI1, class VI2, class VI3>; class RooCFunction3Ref< VO, VI1, VI2, VI3 >; Definition at line 100 of file RooCFunction3Binding.h. Public Member Functions;  RooCFunction3Ref (VO(*ptr)(VI1, VI2, VI3)=nullptr);  ; const char * argName (Int_t iarg);  ; TClass * IsA () const override;  ; const char * name () const;  ; VO operator() (VI1 x, VI2 y, VI3 z) const;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCFunction3Ref.html:979,inherit,inherited,979,doc/master/classRooCFunction3Ref.html,https://root.cern,https://root.cern/doc/master/classRooCFunction3Ref.html,1,['inherit'],['inherited']
Modifiability,". ROOT: RooCFunction4Ref< VO, VI1, VI2, VI3, VI4 > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Types |; Static Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; RooCFunction4Ref< VO, VI1, VI2, VI3, VI4 > Class Template Reference. ; template<class VO, class VI1, class VI2, class VI3, class VI4>; class RooCFunction4Ref< VO, VI1, VI2, VI3, VI4 >; Definition at line 96 of file RooCFunction4Binding.h. Public Member Functions;  RooCFunction4Ref (VO(*ptr)(VI1, VI2, VI3, VI4)=nullptr);  ; const char * argName (Int_t iarg);  ; TClass * IsA () const override;  ; const char * name () const;  ; VO operator() (VI1 x, VI2 y, VI3 z, VI4 w) const;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCFunction4Ref.html:1016,inherit,inherited,1016,doc/master/classRooCFunction4Ref.html,https://root.cern,https://root.cern/doc/master/classRooCFunction4Ref.html,1,['inherit'],['inherited']
Modifiability,". ROOT: RooCachedPdf Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; RooCachedPdf Class ReferenceRooFit » RooFit Core. ; Implementation of RooAbsCachedPdf that can cache any external RooAbsPdf input function provided in the constructor. ; Definition at line 20 of file RooCachedPdf.h. Public Member Functions;  RooCachedPdf ();  ;  RooCachedPdf (const char *name, const char *title, RooAbsPdf &_pdf);  Constructor taking name, title and function to be cached. ;  ;  RooCachedPdf (const char *name, const char *title, RooAbsPdf &_pdf, const RooArgSet &cacheObs);  Constructor taking name, title and function to be cached and fixed choice of variable to cache. ;  ;  RooCachedPdf (const RooCachedPdf &other, const char *name=nullptr);  Copy constructor. ;  ; TObject * clone (const char *newname) const override;  ; TClass * IsA () const override;  ; void preferredObservableScanOrder (const RooArgSet &obs, RooArgSet &orderedObs) const override;  Defer preferred scan order to cached pdf preference. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsCachedPdf;  RooAbsCachedPdf ();  ;  RooAbsCachedPdf (const char *name, const char *title, int ipOrder=0);  Constructor. ;  ;  RooAbsCachedPdf (const RooAbsCachedPdf &other, const char *name=nullptr);  Copy constructor. ;  ; double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Implements internal (analytical) integration capabilities. ;  ; std::unique_ptr< RooAbsArg > compileForNormSet (RooArgSet const &normSet, RooFit::Detail::CompileContext &ctx) const override;  ; bool forceAnalyticalInt (const RooAbsArg &dep) const override;  Fo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCachedPdf.html:850,variab,variable,850,doc/master/classRooCachedPdf.html,https://root.cern,https://root.cern/doc/master/classRooCachedPdf.html,1,['variab'],['variable']
Modifiability,". ROOT: RooCachedReal Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; RooCachedReal Class ReferenceRooFit » RooFit Core. ; Implementation of RooAbsCachedReal that can cache any external RooAbsReal input function provided in the constructor. ; Definition at line 20 of file RooCachedReal.h. Public Member Functions;  RooCachedReal ();  ;  RooCachedReal (const char *name, const char *title, RooAbsReal &_func);  Constructor taking name, title and function to be cached. ;  ;  RooCachedReal (const char *name, const char *title, RooAbsReal &_func, const RooArgSet &cacheObs);  Constructor taking name, title and function to be cached and fixed choice of variable to cache. ;  ;  RooCachedReal (const RooCachedReal &other, const char *name=nullptr);  Copy constructor. ;  ; bool cacheSource () const;  ; TObject * clone (const char *newname) const override;  ; bool getCdfBoundaries () const;  If true the c.d.f boundary mode is active. ;  ; TClass * IsA () const override;  ; void setCacheSource (bool flag);  ; void setCdfBoundaries (bool flag);  If flag is true the RooHistFunc that represent the cache histogram will use special boundary conditions for use with cumulative distribution functions: at the lower bound the function is forced to converge at zero and the upper bound is the function is forced to converge at 1.0. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsCachedReal;  RooAbsCachedReal ();  ;  RooAbsCachedReal (const char *name, const char *title, Int_t ipOrder=0);  Constructor. ;  ;  RooAbsCachedReal (const RooAbsCachedReal &other, const char *name=nullptr);  Copy constructor. ;  ; double analyticalIntegralWN (Int_t code, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCachedReal.html:862,variab,variable,862,doc/master/classRooCachedReal.html,https://root.cern,https://root.cern/doc/master/classRooCachedReal.html,1,['variab'],['variable']
Modifiability,". ROOT: RooChi2Var Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Protected Member Functions |; Protected Attributes |; Static Protected Attributes |; Private Member Functions |; List of all members ; RooChi2Var Class ReferenceRooFit » RooFit Core. ; Simple \( \chi^2 \) calculation from a binned dataset and a PDF. ; It calculates:. \begin{align*}; \chi^2 &= \sum_{\mathrm{bins}} \left( \frac{N_\mathrm{PDF,bin} - N_\mathrm{Data,bin}}{\Delta_\mathrm{bin}} \right)^2 \\; N_\mathrm{PDF,bin} &=; \begin{cases}; \mathrm{pdf}(\text{bin centre}) \cdot V_\mathrm{bin} \cdot N_\mathrm{Data,tot} &\text{normal PDF}\\; \mathrm{pdf}(\text{bin centre}) \cdot V_\mathrm{bin} \cdot N_\mathrm{Data,expected} &\text{extended PDF}; \end{cases} \\; \Delta_\mathrm{bin} &=; \begin{cases}; \sqrt{N_\mathrm{PDF,bin}} &\text{if } \mathtt{DataError == RooAbsData::Expected}\\; \mathtt{data{\rightarrow}weightError()} &\text{otherwise} \\; \end{cases}; \end{align*}. If the dataset doesn't have user-defined errors, errors are assumed to be \( \sqrt{N} \). In extended PDF mode, N_tot (total number of data events) is substituted with N_expected, the expected number of events that the PDF predicts.; NoteIf the dataset has errors stored, empty bins will prevent the calculation of \( \chi^2 \), because those have zero error. This leads to messages like: [#0] ERROR:Eval -- RooChi2Var::RooChi2Var(chi2_GenPdf_data_hist) INFINITY ERROR: bin 2 has zero error; RooChi2Var::RooChi2VarRooChi2Var(const char *name, const char *title, RooAbsReal &func, RooDataHist &data, bool extended, RooDataHist::ErrorType etype, RooAbsTestStatistic::Configuration const &cfg=RooAbsTestStatistic::Configuration{})Definition RooChi2Var.cxx:67. In this case, one can use the expected errors of the PDF instead of the data errors: RooChi2Var chi2(..., ..., RooFit::DataError(RooAbsData::Expected), ...);; RooAbsData::Expected@ Ex",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooChi2Var.html:818,extend,extended,818,doc/master/classRooChi2Var.html,https://root.cern,https://root.cern/doc/master/classRooChi2Var.html,1,['extend'],['extended']
Modifiability,". ROOT: RooConstraintSum Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; RooConstraintSum Class ReferenceRooFit » RooFit Core. ; Calculates the sum of the -(log) likelihoods of a set of RooAbsPfs that represent constraint functions. ; This class is used to calculate the composite -log(L) of constraints to be added to the regular -log(L) in RooAbsPdf::fitTo() with Constrain(..) arguments. ; Definition at line 27 of file RooConstraintSum.h. Public Member Functions;  RooConstraintSum ();  ;  RooConstraintSum (const char *name, const char *title, const RooArgSet &constraintSet, const RooArgSet &paramSet, bool takeGlobalObservablesFromData=false);  Constructor with set of constraint p.d.f.s. All elements in constraintSet must inherit from RooAbsPdf. ;  ;  RooConstraintSum (const RooConstraintSum &other, const char *name=nullptr);  Copy constructor. ;  ; TObject * clone (const char *newname) const override;  ; std::unique_ptr< RooAbsArg > compileForNormSet (RooArgSet const &normSet, RooFit::Detail::CompileContext &ctx) const override;  ; void doEval (RooFit::EvalContext &) const override;  Base function for computing multiple values of a RooAbsReal. ;  ; TClass * IsA () const override;  ; const RooArgList & list ();  ; bool setData (RooAbsData &data, bool cloneData=true) override;  Replace the variables in this RooConstraintSum with the global observables in the dataset if they match by name. ;  ; bool setData (RooAbsData const &data, bool cloneData=true);  Replace the variables in this RooConstraintSum with the global observables in the dataset if they match by name. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void translate (RooFit::Detail::CodeSquashContext &ctx)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooConstraintSum.html:941,inherit,inherit,941,doc/master/classRooConstraintSum.html,https://root.cern,https://root.cern/doc/master/classRooConstraintSum.html,1,['inherit'],['inherit']
Modifiability,". ROOT: RooConvGenContext Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; RooConvGenContext Class ReferenceRooFit » RooFit Core. ; Efficient implementation of the generator context specific for RooAbsAnaConvPdf objects. ; The physics model is generated with a truth resolution model and the requested resolution model is generated separately as a PDF. The convolution variable of the physics model is subsequently explicitly smeared with the resolution model distribution. ; Definition at line 31 of file RooConvGenContext.h. Public Member Functions;  RooConvGenContext (const RooAbsAnaConvPdf &model, const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool _verbose=false);  Constructor for specialized generator context for analytical convolutions. ;  ;  RooConvGenContext (const RooFFTConvPdf &model, const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool _verbose=false);  Constructor for specialized generator context for FFT numerical convolutions. ;  ;  RooConvGenContext (const RooNumConvPdf &model, const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool _verbose=false);  Constructor for specialized generator context for numerical convolutions. ;  ; void attach (const RooArgSet &params) override;  Attach given set of arguments to internal clones of pdf and resolution model. ;  ; void generateEvent (RooArgSet &theEvent, Int_t remaining) override;  Generate a single event. ;  ; void initGenerator (const RooArgSet &theEvent) override;  One-time initialization of generator context, attaches the context to the supplied event container. ;  ; TClass * IsA () const override;  ; void printMultiline (std::ostream &os, Int_t content, bool verbose=f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooConvGenContext.html:578,variab,variable,578,doc/master/classRooConvGenContext.html,https://root.cern,https://root.cern/doc/master/classRooConvGenContext.html,1,['variab'],['variable']
Modifiability,". ROOT: RooEfficiency Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; RooEfficiency Class ReferenceRooFit » RooFit Core. ; A PDF helper class to fit efficiencies parameterized by a supplied function F. ; Given a dataset with a category C that determines if a given event is accepted or rejected for the efficiency to be measured, this class evaluates as F if C is 'accept' and as (1-F) if C is 'reject'. Values of F below 0 and above 1 are clipped. F may have an arbitrary number of dependents and parameters ; Definition at line 24 of file RooEfficiency.h. Public Member Functions;  RooEfficiency ();  Default constructor. ;  ;  RooEfficiency (const char *name, const char *title, const RooAbsReal &effFunc, const RooAbsCategory &cat, const char *sigCatName);  Construct an N+1 dimensional efficiency p.d.f from an N-dimensional efficiency function and a category cat with two states (0,1) that indicate if a given event should be counted as rejected or accepted respectively. ;  ;  RooEfficiency (const RooEfficiency &other, const char *name=nullptr);  Copy constructor. ;  ; double analyticalIntegral (Int_t code, const char *rangeName=nullptr) const override;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; std::string buildCallToAnalyticIntegral (Int_t code, const char *rangeName, RooFit::Detail::CodeSquashContext &ctx) const override;  This function defines the analytical integral translation for the class. ;  ; TObject * clone (const char *newname) const override;  ; Int_t getAnalyticalIntegral (RooArgSet &allVars, RooArgSet &analVars, const char *rangeName=nullptr) const override;  Interface function getAnalyticalIntergral advertises the analytical integrals that are supported. ;  ; TClass * IsA () const override;  ; void Streamer (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooEfficiency.html:372,parameteriz,parameterized,372,doc/master/classRooEfficiency.html,https://root.cern,https://root.cern/doc/master/classRooEfficiency.html,1,['parameteriz'],['parameterized']
Modifiability,". ROOT: RooErrorVar Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; RooErrorVar Class ReferenceRooFit » RooFit Core. ; Auxiliary class that represents the error of a RooRealVar as a separate object. ; The main reason of existence of this class is to facilitate the reuse of existing techniques to perform calculations that involve a RooRealVars error, such as calculating the pull value. ; Definition at line 28 of file RooErrorVar.h. Public Member Functions;  RooErrorVar ();  Default constructor. ;  ;  RooErrorVar (const char *name, const char *title, const RooRealVar &input);  Construct an lvalue variable representing the error of RooRealVar input. ;  ;  RooErrorVar (const RooErrorVar &other, const char *name=nullptr);  ;  ~RooErrorVar () override;  ; TObject * clone (const char *newname) const override;  ; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ; const RooAbsBinning & getBinning (const char *name=nullptr, bool verbose=true, bool createOnTheFly=false) const override;  Return binning with given name. ;  ; RooAbsBinning & getBinning (const char *name=nullptr, bool verbose=true, bool createOnTheFly=false) override;  Return binning with given name. ;  ; std::list< std::string > getBinningNames () const override;  Get a list of all binning names. ;  ; double getValV (const RooArgSet *set=nullptr) const override;  Return value, i.e. error on input variable. ;  ; bool hasBinning (const char *name) const override;  Return true if we have binning with given name. ;  ; TClass * IsA () const override;  ; bool isFundamental () const override;  Is this object a fundamental type that can be added to a dataset? Fundamental-type subclasses override this method to return true. ;  ; virtual Roo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooErrorVar.html:812,variab,variable,812,doc/master/classRooErrorVar.html,https://root.cern,https://root.cern/doc/master/classRooErrorVar.html,1,['variab'],['variable']
Modifiability,". ROOT: RooExponential Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; RooExponential Class ReferenceRooFit » RooFit. ; Exponential PDF. ; It computes ; \[; \mathrm{RooExponential}(x, c) = \mathcal{N} \cdot \exp(c\cdot x),; \]. where \( \mathcal{N} \) is a normalisation constant that depends on the range and values of the arguments. ; Definition at line 22 of file RooExponential.h. Public Member Functions;  RooExponential ();  ;  RooExponential (const char *name, const char *title, RooAbsReal &variable, RooAbsReal &coefficient, bool negateCoefficient=false);  ;  RooExponential (const RooExponential &other, const char *name=nullptr);  ; double analyticalIntegral (Int_t code, const char *rangeName=nullptr) const override;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; std::string buildCallToAnalyticIntegral (Int_t code, const char *rangeName, RooFit::Detail::CodeSquashContext &ctx) const override;  This function defines the analytical integral translation for the class. ;  ; TObject * clone (const char *newname) const override;  ; RooAbsReal const & coefficient () const;  Get the coefficient ""c"". ;  ; Int_t getAnalyticalIntegral (RooArgSet &allVars, RooArgSet &analVars, const char *rangeName=nullptr) const override;  Interface function getAnalyticalIntergral advertises the analytical integrals that are supported. ;  ; TClass * IsA () const override;  ; bool negateCoefficient () const;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void translate (RooFit::Detail::CodeSquashContext &ctx) const override;  This function defines a translation for each RooAbsReal based object that can be used to express the class as simple C++ code.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooExponential.html:709,variab,variable,709,doc/master/classRooExponential.html,https://root.cern,https://root.cern/doc/master/classRooExponential.html,1,['variab'],['variable']
Modifiability,". ROOT: RooExtendPdf Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; RooExtendPdf Class Reference. ; RooExtendPdf is a wrapper around an existing PDF that adds a parameteric extended likelihood term to the PDF, optionally divided by a fractional term from a partial normalization of the PDF: . \[; n_\mathrm{Expected} = N \quad \text{or} \quad n_\mathrm{Expected} = N / \mathrm{frac}; \]. where \( N \) is supplied as a RooAbsReal to RooExtendPdf. The fractional term is defined as ; \[; \mathrm{frac} = \frac{\int_\mathrm{cutRegion[x]} \mathrm{pdf}(x,y) \; \mathrm{d}x \mathrm{d}y}{; \int_\mathrm{normRegion[x]} \mathrm{pdf}(x,y) \; \mathrm{d}x \mathrm{d}y}; \]. where \( x \) is the set of dependents involved in the selection region and \( y \) is the set of remaining dependents.; \( \mathrm{cutRegion}[x] \) is a limited integration range that is contained in the nominal integration range \( \mathrm{normRegion}[x] \). ; Definition at line 22 of file RooExtendPdf.h. Public Member Functions;  RooExtendPdf ()=default;  ;  RooExtendPdf (const char *name, const char *title, RooAbsPdf &pdf, RooAbsReal &norm, const char *rangeName=nullptr);  ;  RooExtendPdf (const char *name, const char *title, RooAbsPdf &pdf, RooAbsReal::Ref norm, const char *rangeName=nullptr);  Constructor. ;  ;  RooExtendPdf (const RooExtendPdf &other, const char *name=nullptr);  ; double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Forward calculation of analytical integrals to input p.d.f. ;  ; TObject * clone (const char *newname) const override;  ; std::unique_ptr< RooAbsReal > createExpectedEventsFunc (const RooArgSet *nset) const override;  Returns an object that represents the expected number of events for a given normalization set, similar to how createIntegral() ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooExtendPdf.html:354,extend,extended,354,doc/master/classRooExtendPdf.html,https://root.cern,https://root.cern/doc/master/classRooExtendPdf.html,1,['extend'],['extended']
Modifiability,". ROOT: RooExtendedBinding Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; RooExtendedBinding Class Reference. . Definition at line 20 of file RooExtendedBinding.h. Public Member Functions;  RooExtendedBinding ();  ;  RooExtendedBinding (const char *name, const char *title, RooAbsPdf &_pdf);  ;  RooExtendedBinding (const RooExtendedBinding &other, const char *name=nullptr);  ; TObject * clone (const char *newname) const override;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (const char *name, const char *title, double minVal, double maxVal, const char *unit="""");  Constructor with plot range and unit label. ;  ;  RooAbsReal (const RooAbsReal &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooAbsReal () override;  Destructor. ;  ; virtual double analyticalIntegral (Int_t code, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; virtual double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; TF1 * asTF (const RooArgList &obs, const RooArgList &pars=RooArgList(), const RooArgSet &nset=RooArgSet()) const;  Return a ROOT TF1,2,3 object bound to this RooAbsReal with given definition of observables and parameters. ;  ; virtual std::list< double > * binBoundaries (RooAbsRealLValue &obs, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooExtendedBinding.html:849,inherit,inherited,849,doc/master/classRooExtendedBinding.html,https://root.cern,https://root.cern/doc/master/classRooExtendedBinding.html,1,['inherit'],['inherited']
Modifiability,". ROOT: RooExtendedTerm Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; RooExtendedTerm Class ReferenceRooFit » RooFit Core. ; A p.d.f with no observables that only introduces an extended ML term for a given number of expected events term when an extended ML is constructed. ; Definition at line 22 of file RooExtendedTerm.h. Public Member Functions;  RooExtendedTerm ()=default;  ;  RooExtendedTerm (const char *name, const char *title, const RooAbsReal &n);  Constructor. ;  ;  RooExtendedTerm (const RooExtendedTerm &other, const char *name=nullptr);  Copy constructor. ;  ; TObject * clone (const char *newname) const override;  ; std::unique_ptr< RooAbsReal > createExpectedEventsFunc (const RooArgSet *nset) const override;  Returns an object that represents the expected number of events for a given normalization set, similar to how createIntegral() returns an object that returns the integral. ;  ; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ; double expectedEvents (const RooArgSet *nset) const override;  Return number of expected events, in other words the value of the associated n parameter. ;  ; ExtendMode extendMode () const override;  Returns ability of PDF to provide extended likelihood terms. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsPdf;  RooAbsPdf ();  Default constructor. ;  ;  RooAbsPdf (const char *name, const char *title, double minVal, double maxVal);  Constructor with name, title, and plot range. ;  ;  RooAbsPdf (const char *name, const char *title=nullptr);  Constructor with name and title only. ;  ;  ~RooAbsPdf ()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooExtendedTerm.html:359,extend,extended,359,doc/master/classRooExtendedTerm.html,https://root.cern,https://root.cern/doc/master/classRooExtendedTerm.html,2,['extend'],['extended']
Modifiability,". ROOT: RooFit Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions ; RooFit Namespace Reference. The namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or other types of arguments). ; More... Namespaces; namespace  Detail;  ; namespace  Experimental;  ; namespace  JSONIO;  ; namespace  MultiProcess;  ; namespace  TestStatistics;  Namespace for new RooFit test statistic calculation. ;  . Classes; class  EvalBackend;  ; class  EvalContext;  ; class  Evaluator;  Evaluates a RooAbsReal object in other ways than recursive graph traversal. More...;  ; struct  NodeInfo;  A struct used by the Evaluator to store information on the RooAbsArgs in the computation graph. More...;  ; struct  UniqueId;  A UniqueId can be added as a class member to enhance any class with a unique identifier for each instantiated object. More...;  . Typedefs; typedef double(* CFUNCD1D) (double);  ; typedef double(* CFUNCD1I) (Int_t);  ; typedef double(* CFUNCD2DD) (double, double);  ; typedef double(* CFUNCD2DI) (double, Int_t);  ; typedef double(* CFUNCD2ID) (Int_t, double);  ; typedef double(* CFUNCD2II) (Int_t, Int_t);  ; typedef double(* CFUNCD2UD) (UInt_t, double);  ; typedef double(* CFUNCD3DDB) (double, double, bool);  ; typedef double(* CFUNCD3DDD) (double, double, double);  ; typedef double(* CFUNCD3DII) (double, Int_t, Int_t);  ; typedef double(* CFUNCD3UDD) (UInt_t, double, double);  ; typedef double(* CFUNCD3UDU) (UInt_t, double, UInt_t);  ; typedef double(* CFUNCD3UUD) (UInt_t, UInt_t, double);  ; typedef double(* CFUNCD4DDDB) (double, double, double, bool);  ; typedef double(* CFUNCD4DDDD) (double, double, double, double);  ; typedef double(* CFUNCD4DDDI) (double, double, double, Int_t);  ; using ModelConfig = RooStats::ModelConfig;  ; template<typename T > ; using OwningPtr = T *;  An alias for raw pointers for indicating that the retur",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceRooFit.html:895,enhance,enhance,895,doc/master/namespaceRooFit.html,https://root.cern,https://root.cern/doc/master/namespaceRooFit.html,1,['enhance'],['enhance']
Modifiability,". ROOT: RooFit. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Modules ; RooFit. ; RooFit is a package for building likelihood models and fitting these to data. ; For an introduction check the RooFit Tutorials, user's guides, courses or the RooFit chapter of the Manual.; For developers, there is also the RooFit Developer Documentation, which serves as a reference on how to extend RooFit with custom classes or for contributing to RooFit itself. . Modules;  RooFit Developer Documentation;  How-to guides on how to extend RooFit with custom classes or to work on RooFit itself. ;  ;  RooFit;  RooFit main classes for building likelihood models, mainly PDFs. ;  ;  RooFit Core;  RooFit core classes. These provide the infrastructure for building likelihood models. ;  ;  RooFit Legacy;  Old RooFit classes. ;  ;  RooFit command arguments;  These arguments can be passed to functions of RooFit objects. ;  ;  RooFit More;  RooFit components that are only available if ROOT was built with the mathmore option. ;  ;  RooStats;  RooStats is a toolkit for statistical tests built on top of RooFit. ;  ;  xRooFit;  A high-level API for RooFit. ;  ;  RooFit Pythonizations;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:33 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Roofitmain.html:410,extend,extend,410,doc/master/group__Roofitmain.html,https://root.cern,https://root.cern/doc/master/group__Roofitmain.html,2,['extend'],['extend']
Modifiability,". ROOT: RooFit::EvalContext Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Attributes |; Friends |; List of all members ; RooFit::EvalContext Class Reference. . Definition at line 84 of file EvalContext.h. Public Types; enum class  OffsetMode { WithoutOffset; , WithOffset; , OnlyOffset; };  . Public Member Functions; std::span< const double > at (RooAbsArg const *arg, RooAbsArg const *caller=nullptr);  ; template<class T > ; std::span< const double > at (RooTemplateProxy< T > const &proxy);  ; RooBatchCompute::Config config (RooAbsArg const *arg) const;  ; void enableVectorBuffers (bool enable);  ; std::span< double > output ();  ; void resetVectorBuffers ();  ; void resize (std::size_t n);  ; void set (RooAbsArg const *arg, std::span< const double > const &span);  ; void setConfig (RooAbsArg const *arg, RooBatchCompute::Config const &config);  ; void setOutputWithOffset (RooAbsArg const *arg, ROOT::Math::KahanSum< double > val, ROOT::Math::KahanSum< double > const &offset);  Sets the output value with an offset. ;  ; auto size () const;  . Private Attributes; std::size_t _bufferIdx = 0;  ; std::vector< std::vector< double > > _buffers;  ; std::vector< RooBatchCompute::Config > _cfgs;  ; std::vector< std::span< const double > > _ctx;  ; std::span< double > _currentOutput;  ; bool _enableVectorBuffers = false;  ; OffsetMode _offsetMode = OffsetMode::WithoutOffset;  . Friends; class Evaluator;  . #include <RooFit/EvalContext.h>; Member Enumeration Documentation. ◆ OffsetMode. enum class RooFit::EvalContext::OffsetMode. strong . EnumeratorWithoutOffset ; WithOffset ; OnlyOffset . Definition at line 86 of file EvalContext.h. Member Function Documentation. ◆ at() [1/2]. std::span< const double > RooFit::EvalContext::at ; (; RooAbsArg const * ; arg, . RooAbsArg const * ; caller = nullptr . ). Definition at line 35 of file EvalContext.cxx. ◆ at() [2/2",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFit_1_1EvalContext.html:648,config,config,648,doc/master/classRooFit_1_1EvalContext.html,https://root.cern,https://root.cern/doc/master/classRooFit_1_1EvalContext.html,2,['config'],['config']
Modifiability,". ROOT: RooFit::TestStatistics::RooRealL Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; RooFit::TestStatistics::RooRealL Class ReferenceRooFit » RooFit Core. ; RooAbsReal that wraps RooAbsL likelihoods for use in RooFit outside of the RooMinimizer context. ; This class provides a simple wrapper to evaluate RooAbsL derived likelihood objects like a regular RooFit real value. Whereas the RooAbsL objects are meant to be used within the context of minimization, RooRealL can be used in any RooFit context, like plotting. The value can be accessed through getVal(), like with other RooFit real variables. ; Definition at line 28 of file RooRealL.h. Public Member Functions;  RooRealL (const char *name, const char *title, std::shared_ptr< RooAbsL > likelihood);  ;  RooRealL (const RooRealL &other, const char *name=nullptr);  ; TObject * clone (const char *newname) const override;  ; double defaultErrorLevel () const override;  ; double getCarry () const;  ; std::shared_ptr< RooAbsL > const & getRooAbsL ();  ; double globalNormalization () const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (const char *name, const char *title, double minVal, double maxVal, const char *unit="""");  Constructor with plot range and unit label. ;  ;  RooAbsReal (const RooAbsReal &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooAbsReal () override;  Destructor. ;  ; virtual double analyticalIntegral (Int_t code, const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFit_1_1TestStatistics_1_1RooRealL.html:802,variab,variables,802,doc/master/classRooFit_1_1TestStatistics_1_1RooRealL.html,https://root.cern,https://root.cern/doc/master/classRooFit_1_1TestStatistics_1_1RooRealL.html,1,['variab'],['variables']
Modifiability,. ROOT: RooFit::UniqueId< Class > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Static Public Attributes |; Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; RooFit::UniqueId< Class > Struct Template Reference. ; template<class Class>; struct RooFit::UniqueId< Class >A UniqueId can be added as a class member to enhance any class with a unique identifier for each instantiated object. ; Example: class MyClass {; ; public:; /// Return unique ID by reference.; /// Please always use the name `uniqueId` for the getter.; UniqueId<MyClass> const& uniqueId() const { return _uniqueId; }; ; private:; const UniqueId<MyClass> _uniqueId; //! should be non-persistent; ; };; RooFit::UniqueIdA UniqueId can be added as a class member to enhance any class with a unique identifier for each inst...Definition UniqueId.h:39. Definition at line 39 of file UniqueId.h. Public Types; using Value_t = unsigned long;  . Public Member Functions;  UniqueId ();  Create a new UniqueId with the next value from the static counter. ;  ;  UniqueId (const UniqueId &)=delete;  ;  UniqueId (UniqueId &&)=delete;  ;  operator Value_t () const;  ; bool operator< (UniqueId const &other) const;  ; UniqueId & operator= (const UniqueId &)=delete;  ; UniqueId & operator= (UniqueId &&)=delete;  ; bool operator== (UniqueId const &other) const;  ; constexpr Value_t value () const;  Return numerical value of ID. ;  . Static Public Member Functions; static UniqueId const & nullid ();  Get an ID that is less than the ID of any object (similar to nullptr). ;  . Static Public Attributes; static constexpr Value_t nullval = 0UL;  The value of the nullid. ;  . Private Member Functions;  UniqueId (Value_t val);  . Private Attributes; Value_t _val;  Numerical value of the ID. ;  . Static Private Attributes; static std:,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structRooFit_1_1UniqueId.html:526,enhance,enhance,526,doc/master/structRooFit_1_1UniqueId.html,https://root.cern,https://root.cern/doc/master/structRooFit_1_1UniqueId.html,2,['enhance'],['enhance']
Modifiability,". ROOT: RooFoamGenerator Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Protected Member Functions |; Protected Attributes |; Friends |; List of all members ; RooFoamGenerator Class ReferenceRooFit » RooFit Core. ; Generic Monte Carlo toy generator that implement the TFOAM sampling technique on any positively valued function. ; The RooFoamGenerator generator is used by the various generator context classes to take care of generation of observables for which p.d.fs do not define internal methods.; The foam generator reacts to the following config options:; nCell[123N]D; nSample; chatLevel Access those using: myPdf->specialGeneratorConfig()->getConfigSection(""RooFoamGenerator"").setRealValue(""nSample"",1e4);. See alsorf902_numgenconfig.C ; Definition at line 32 of file RooFoamGenerator.h. Public Member Functions;  RooFoamGenerator ()=default;  ;  RooFoamGenerator (const RooAbsReal &func, const RooArgSet &genVars, const RooNumGenConfig &config, bool verbose=false, const RooAbsReal *maxFuncVal=nullptr);  ; bool canSampleCategories () const override;  ; bool canSampleConditional () const override;  ; RooAbsNumGenerator * clone (const RooAbsReal &func, const RooArgSet &genVars, const RooArgSet &, const RooNumGenConfig &config, bool verbose=false, const RooAbsReal *maxFuncVal=nullptr) const override;  ; TFoam & engine ();  ; const RooArgSet * generateEvent (UInt_t remaining, double &resampleRatio) override;  are we actually generating anything? (the cache always contains at least our function value) ;  ; std::string const & generatorName () const override;  Return unique name of generator implementation. ;  ;  Public Member Functions inherited from RooAbsNumGenerator;  RooAbsNumGenerator ();  ;  RooAbsNumGenerator (const RooAbsReal &func, const RooArgSet &genVars, bool verbose=false, const RooAbsReal *maxFuncVal=nullptr);  Initialize an accept-reject generator for the s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFoamGenerator.html:653,config,config,653,doc/master/classRooFoamGenerator.html,https://root.cern,https://root.cern/doc/master/classRooFoamGenerator.html,1,['config'],['config']
Modifiability,". ROOT: RooFunctor Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; RooFunctor Class ReferenceRooFit » RooFit Core. ; Lightweight interface adaptor that exports a RooAbsPdf as a functor. ; Definition at line 25 of file RooFunctor.h. Public Member Functions;  RooFunctor (const RooAbsFunc &func);  ;  RooFunctor (const RooAbsReal &func, const RooArgList &observables, const RooArgList &parameters);  Store list of observables. ;  ;  RooFunctor (const RooAbsReal &func, const RooArgList &observables, const RooArgList &parameters, const RooArgSet &nset);  Store normalization set. ;  ;  RooFunctor (const RooFunctor &);  ; virtual ~RooFunctor ();  ; RooAbsFunc & binding ();  ; RooAbsFunc const & binding () const;  ; double eval (const double *) const;  ; double eval (const double *, const double *) const;  ; double eval (double) const;  ; virtual TClass * IsA () const;  ; Int_t nObs () const;  ; Int_t nPar () const;  ; double operator() (const double *x) const;  ; double operator() (const double *x, const double *p) const;  ; double operator() (double x) const;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Attributes; RooAbsFunc * _binding = nullptr;  Function binding. ;  ; Int_t _nobs;  ! Number of observables ; ;  ; Int_t _npar = 0;  ! Number of parameters ; ;  ; RooArgSet _nset;  Normalization observables. ;  ; std::unique_ptr< RooAbsFunc > _ownedBinding;  Do we own the binding function. ;  ; std::vector< double > _x;  ! Transfer array ; ;  . #include <RooFunctor.h>; Constructor & Destructor Documentation. ◆ RooFunctor() [1/4]. RooFunctor::RooFun",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFunctor.html:319,adapt,adaptor,319,doc/master/classRooFunctor.html,https://root.cern,https://root.cern/doc/master/classRooFunctor.html,1,['adapt'],['adaptor']
Modifiability,". ROOT: RooFunctorBinding Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; RooFunctorBinding Class ReferenceRooFit » RooFit. ; RooFunctorBinding makes math functions from ROOT usable in RooFit. ; It takes a ROOT::Math::IBaseFunctionMultiDim, and binds the variables of this function to the RooFit variables passed in the constructor.; Instances of function binding classes are fully functional RooFit function objects with one exception: if the bound function is not a standard TMath or MathMore function the class cannot be persisted in a RooWorkspace without registering the function pointer first using RooCFunction1Binding<T1,T2>::register(). ; Definition at line 31 of file RooFunctorBinding.h. Public Member Functions;  RooFunctorBinding ()=default;  ;  RooFunctorBinding (const char *name, const char *title, const ROOT::Math::IBaseFunctionMultiDim &ftor, const RooArgList &vars);  Create a RooFit function that makes ftor usable in RooFit. ;  ;  RooFunctorBinding (const RooFunctorBinding &other, const char *name=nullptr);  ;  ~RooFunctorBinding () override;  ; TObject * clone (const char *newname) const override;  ; TClass * IsA () const override;  ; void printArgs (std::ostream &os) const override;  Print object arguments, ie its proxies. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (const char *name, const char *title, double minVal, double maxVal, const char *unit="""");  Constructor with plot range and unit label. ;  ;  RooAbsReal (con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFunctorBinding.html:465,variab,variables,465,doc/master/classRooFunctorBinding.html,https://root.cern,https://root.cern/doc/master/classRooFunctorBinding.html,2,['variab'],['variables']
Modifiability,". ROOT: RooFunctorPdfBinding Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; RooFunctorPdfBinding Class ReferenceRooFit » RooFit. ; RooFunctorPdfBinding makes math functions from ROOT usable as PDFs in RooFit. ; It takes a ROOT::Math::IBaseFunctionMultiDim, and binds the variables of this function to the RooFit variables passed in the constructor. When the PDF is evaluated, the bound function is evaluated, and also integrated numerically to normalise it to unity over the range of its observables.; Instances of function binding classes are fully functional RooFit function objects with one exception: if the bound function is not a standard TMath or MathMore function the class cannot be persisted in a RooWorkspace without registering the function pointer first using RooCFunction1Binding<T1,T2>::register(). ; Definition at line 56 of file RooFunctorBinding.h. Public Member Functions;  RooFunctorPdfBinding ()=default;  ;  RooFunctorPdfBinding (const char *name, const char *title, const ROOT::Math::IBaseFunctionMultiDim &ftor, const RooArgList &vars);  Create a RooFit PDF that makes ftor usable as a PDF in RooFit. ;  ;  RooFunctorPdfBinding (const RooFunctorPdfBinding &other, const char *name=nullptr);  ;  ~RooFunctorPdfBinding () override;  ; TObject * clone (const char *newname) const override;  ; TClass * IsA () const override;  ; void printArgs (std::ostream &os) const override;  Print object arguments, ie its proxies. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsPdf;  RooAbsPdf ();  Default constructor. ;  ;  RooAbsPdf (const char *name, const char *title, double minVal, double maxVal);  Constructor with name, title,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFunctorPdfBinding.html:482,variab,variables,482,doc/master/classRooFunctorPdfBinding.html,https://root.cern,https://root.cern/doc/master/classRooFunctorPdfBinding.html,2,['variab'],['variables']
Modifiability,". ROOT: RooGExpModel Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; Static Private Member Functions |; Private Attributes |; List of all members ; RooGExpModel Class ReferenceRooFit » RooFit. ; The RooGExpModel is a RooResolutionModel implementation that models a resolution function that is the convolution of a Gaussian with a one-sided exponential. ; Such objects can be used for analytical convolutions with classes inheriting from RooAbsAnaConvPdf. ; \[; \mathrm{GExp} = \exp \left( -\frac{1}{2} \left(\frac{x-\mu}{\sigma} \right)^2 \right)^2; \otimes \exp\left( -\frac{x}{\tau} \right); \]. Definition at line 25 of file RooGExpModel.h. Public Types; enum  Type { Normal; , Flipped; };  ;  Public Types inherited from RooAbsPdf; enum  ExtendMode { CanNotBeExtended; , CanBeExtended; , MustBeExtended; };  ;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooGExpModel.html:629,inherit,inheriting,629,doc/master/classRooGExpModel.html,https://root.cern,https://root.cern/doc/master/classRooGExpModel.html,1,['inherit'],['inheriting']
Modifiability,". ROOT: RooGaussModel Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; Private Attributes |; List of all members ; RooGaussModel Class ReferenceRooFit » RooFit. ; Class RooGaussModel implements a RooResolutionModel that models a Gaussian distribution. ; Object of class RooGaussModel can be used for analytical convolutions with classes inheriting from RooAbsAnaConvPdf ; Definition at line 25 of file RooGaussModel.h. Public Member Functions;  RooGaussModel ()=default;  ;  RooGaussModel (const char *name, const char *title, RooAbsRealLValue &x, RooAbsReal &mean, RooAbsReal &sigma);  ;  RooGaussModel (const char *name, const char *title, RooAbsRealLValue &x, RooAbsReal &mean, RooAbsReal &sigma, RooAbsReal &meanSF, RooAbsReal &sigmaSF);  ;  RooGaussModel (const char *name, const char *title, RooAbsRealLValue &x, RooAbsReal &mean, RooAbsReal &sigma, RooAbsReal &msSF);  ;  RooGaussModel (const RooGaussModel &other, const char *name=nullptr);  ; void advertiseAymptoticIntegral (bool flag);  ; void advertiseFlatScaleFactorIntegral (bool flag);  ; double analyticalIntegral (Int_t code, const char *rangeName) const override;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; Int_t basisCode (const char *name) const override;  ; bool canComputeBatchWithCuda () const override;  ; TObject * clone (const char *newname) const override;  ; void doEval (RooFit::EvalContext &) const override;  Base function for computing multiple values of a RooAbsReal. ;  ; void generateEvent (Int_t code) override;  Interface for generation of an event using the algorithm corresponding to the specified code. ;  ; Int_t getAnalyticalIntegral (RooArgSet &allVars, RooArgSet &analVars, const char *rangeName=nullptr) const override;  Interface function getAnalyticalIntergra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooGaussModel.html:537,inherit,inheriting,537,doc/master/classRooGaussModel.html,https://root.cern,https://root.cern/doc/master/classRooGaussModel.html,1,['inherit'],['inheriting']
Modifiability,". ROOT: RooGenContext Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; RooGenContext Class ReferenceRooFit » RooFit Core. ; Implements a universal generator context for all RooAbsPdf classes that do not have or need a specialized generator context. ; This generator context queries the input p.d.f which observables it can generate internally and delegates generation of those observables to the p.d.f if it deems that safe. The other observables are generated use a RooAcceptReject sampling technique. ; Definition at line 29 of file RooGenContext.h. Public Member Functions;  RooGenContext (const RooAbsPdf &model, const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool verbose=false, const RooArgSet *forceDirect=nullptr);  Initialize a new context for generating events with the specified variables, using the specified PDF model. ;  ;  ~RooGenContext () override;  ; void attach (const RooArgSet &params) override;  Attach the cloned model to the event buffer we will be filling. ;  ; TClass * IsA () const override;  ; void printMultiline (std::ostream &os, Int_t content, bool verbose=false, TString indent="""") const override;  Printing interface. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsGenContext;  RooAbsGenContext (const RooAbsPdf &model, const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool _verbose=false);  Constructor. ;  ; Int_t defaultPrintContents (Option_t *opt) const override;  Define default contents when printing. ;  ; StyleOption defaultPrintStyle (Option_t *opt) const override;  Define default print style. ;  ; virtual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooGenContext.html:1047,variab,variables,1047,doc/master/classRooGenContext.html,https://root.cern,https://root.cern/doc/master/classRooGenContext.html,1,['variab'],['variables']
Modifiability,". ROOT: RooHelpers::WrapIntoTObject< T > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; RooHelpers::WrapIntoTObject< T > Struct Template Reference. ; template<typename T>; struct RooHelpers::WrapIntoTObject< T >Wrap an object into a TObject. Sometimes needed to avoid reinterpret_cast or enable RTTI. ; Definition at line 57 of file RooHelpers.h. Public Member Functions;  WrapIntoTObject (T &obj);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structRooHelpers_1_1WrapIntoTObject.html:581,inherit,inherited,581,doc/master/structRooHelpers_1_1WrapIntoTObject.html,https://root.cern,https://root.cern/doc/master/structRooHelpers_1_1WrapIntoTObject.html,1,['inherit'],['inherited']
Modifiability,". ROOT: RooJohnson Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Types |; Private Member Functions |; Private Attributes |; List of all members ; RooJohnson Class ReferencefinalRooFit » RooFit. ; Johnson's \( S_{U} \) distribution. ; This PDF results from transforming a normally distributed variable \( x \) to this form: ; \[; z = \gamma + \delta \sinh^{-1}\left( \frac{x - \mu}{\lambda} \right); \]. The resulting PDF is ; \[; \mathrm{PDF}[\mathrm{Johnson}\ S_U] = \frac{\delta}{\lambda\sqrt{2\pi}}; \frac{1}{\sqrt{1 + \left( \frac{x-\mu}{\lambda} \right)^2}}; \;\exp\left[-\frac{1}{2} \left(\gamma + \delta \sinh^{-1}\left(\frac{x-\mu}{\lambda}\right) \right)^2\right].; \]. It is often used to fit a mass difference for charm decays, and therefore the variable \( x \) is called ""mass"" in the implementation. A mass threshold allows to set the PDF to zero to the left of the threshold. References:; Johnson, N. L. (1949). Systems of Frequency Curves Generated by Methods of Translation. Biometrika 36(1/2), 149–176. doi:10.2307/2332539. Definition at line 24 of file RooJohnson.h. Public Member Functions;  RooJohnson ();  ;  RooJohnson (const char *name, const char *title, RooAbsReal &mass, RooAbsReal &mu, RooAbsReal &lambda, RooAbsReal &gamma, RooAbsReal &delta, double massThreshold=-std::numeric_limits< double >::max());  Construct a new Johnson PDF. ;  ;  RooJohnson (const RooJohnson &other, const char *newName=nullptr);  Copy a Johnson PDF. ;  ; double analyticalIntegral (Int_t code, const char *rangeName=nullptr) const override;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; TObject * clone (const char *newname) const override;  ; void generateEvent (Int_t code) override;  Generate events based on code obtained by getGenerator(). ;  ; Int_t getAnalyticalIntegral (RooArgSet &allVars, RooArgSet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooJohnson.html:436,variab,variable,436,doc/master/classRooJohnson.html,https://root.cern,https://root.cern/doc/master/classRooJohnson.html,2,['variab'],['variable']
Modifiability,". ROOT: RooKeysPdf Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; RooKeysPdf Class ReferenceRooFit » RooFit. ; Class RooKeysPdf implements a one-dimensional kernel estimation p.d.f which model the distribution of an arbitrary input dataset as a superposition of Gaussian kernels, one for each data point, each contributing 1/N to the total integral of the pdf. ; If the 'adaptive mode' is enabled, the width of the Gaussian is adaptively calculated from the local density of events, i.e. narrow for regions with high event density to preserve details and wide for regions with low event density to promote smoothness. The details of the general algorithm are described in the following paper:; Cranmer KS, Kernel Estimation in High-Energy Physics. Computer Physics Communications 136:198-207,2001 - e-Print Archive: hep ex/0011057 ; Definition at line 24 of file RooKeysPdf.h. Public Types; enum  Mirror { ;   NoMirror; , MirrorLeft; , MirrorRight; , MirrorBoth; , ;   MirrorAsymLeft; , MirrorAsymLeftRight; , MirrorAsymRight; , MirrorLeftAsymRight; , ;   MirrorAsymBoth. };  ;  Public Types inherited from RooAbsPdf; enum  ExtendMode { CanNotBeExtended; , CanBeExtended; , MustBeExtended; };  ;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCount",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooKeysPdf.html:677,adapt,adaptive,677,doc/master/classRooKeysPdf.html,https://root.cern,https://root.cern/doc/master/classRooKeysPdf.html,2,['adapt'],"['adaptive', 'adaptively']"
Modifiability,". ROOT: RooLagrangianMorphFunc Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Static Public Attributes |; Private Member Functions |; Private Attributes |; List of all members ; RooLagrangianMorphFunc Class ReferenceRooFit » RooFit. ; Class RooLagrangianMorphing is a implementation of the method of Effective Lagrangian Morphing, described in ATL-PHYS-PUB-2015-047. ; Effective Lagrangian Morphing is a method to construct a continuous signal model in the coupling parameter space. Basic assumption is that shape and cross section of a physical distribution is proportional to it's squared matrix element. The signal model is constructed by a weighted sum over N input distributions. The calculation of the weights is based on Matrix Elements evaluated for the different input scenarios. The number of input files depends on the number of couplings in production and decay vertices, and also whether the decay and production vertices describe the same process or not. ; Definition at line 77 of file RooLagrangianMorphFunc.h. Classes; class  CacheElem;  ; struct  Config;  . Public Types; typedef std::map< const std::string, FlagSet > FlagMap;  ; typedef std::map< const std::string, int > FlagSet;  ; typedef std::map< const std::string, ParamSet > ParamMap;  ; typedef std::map< const std::string, double > ParamSet;  ;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLR",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLagrangianMorphFunc.html:619,coupling,coupling,619,doc/master/classRooLagrangianMorphFunc.html,https://root.cern,https://root.cern/doc/master/classRooLagrangianMorphFunc.html,1,['coupling'],['coupling']
Modifiability,". ROOT: RooLegacyExpPoly Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; RooLegacyExpPoly Class ReferenceRooFit » RooFit. ; RooLegacyExpPoly implements a polynomial PDF of the form. . \[ f(x) =; \mathcal{N} \cdot \exp( \sum_{i} a_{i} * x^{i} ) \]. \( \mathcal{N}; \) is a normalisation constant that is automatically calculated when the function is used in computations.; The sum can be truncated at the low end. See the main constructor RooLegacyExpPoly::RooLegacyExpPoly(const char*, const char*, RooAbsReal&, const RooArgList&, int). Definition at line 18 of file RooLegacyExpPoly.h. Public Member Functions;  RooLegacyExpPoly ();  ;  RooLegacyExpPoly (const char *name, const char *title, RooAbsReal &x, const RooArgList &coefList, int lowestOrder=1);  Create a polynomial in the variable x. ;  ;  RooLegacyExpPoly (const RooLegacyExpPoly &other, const char *name=nullptr);  Copy constructor. ;  ; void adjustLimits ();  ; double analyticalIntegral (int code, const char *rangeName=nullptr) const override;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; TObject * clone (const char *newname) const override;  ; RooArgList const & coefList () const;  Get the coefficient list. ;  ; int getAnalyticalIntegral (RooArgSet &allVars, RooArgSet &analVars, const char *rangeName=nullptr) const override;  Interface function getAnalyticalIntergral advertises the analytical integrals that are supported. ;  ; std::string getFormulaExpression (bool expand) const;  ; double getLogVal (const RooArgSet *nset) const override;  Return the log of the current value with given normalization An error message is printed if the argument of the log is negative. ;  ; TClass * IsA () const override;  ; int lowestOrder () const;  Return the order for the first coef",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLegacyExpPoly.html:994,variab,variable,994,doc/master/classRooLegacyExpPoly.html,https://root.cern,https://root.cern/doc/master/classRooLegacyExpPoly.html,1,['variab'],['variable']
Modifiability,". ROOT: RooLinTransBinning Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; RooLinTransBinning Class ReferenceRooFit » RooFit Core. ; Special binning implementation for RooLinearVar that transforms the binning of the RooLinearVar input variable in the same way that RooLinearVar does. ; Definition at line 22 of file RooLinTransBinning.h. Public Member Functions;  RooLinTransBinning (const char *name=nullptr);  ;  RooLinTransBinning (const RooAbsBinning &input, double slope=1.0, double offset=0.0, const char *name=nullptr);  Constructor with a given input binning and the slope and offset to be applied to construct the linear transformation. ;  ;  RooLinTransBinning (const RooLinTransBinning &, const char *name=nullptr);  Copy constructor. ;  ; double * array () const override;  Return array of bin boundaries. ;  ; double averageBinWidth () const override;  ; double binCenter (Int_t bin) const override;  ; double binHigh (Int_t bin) const override;  ; double binLow (Int_t bin) const override;  ; void binNumbers (double const *x, int *bins, std::size_t n, int coef) const override;  Compute the bin indices for multiple values of x. ;  ; double binWidth (Int_t bin) const override;  ; RooAbsBinning * clone (const char *name=nullptr) const override;  ; double highBound () const override;  ; TClass * IsA () const override;  ; double lowBound () const override;  ; Int_t numBoundaries () const override;  ; void setMax (double xhi) override;  Change upper bound to xhi. ;  ; void setMin (double xlo) override;  Change lower bound to xlo. ;  ; void setRange (double xlo, double xhi) override;  ; void Streamer (TBuffer &) override;  Custom streamer implementing schema evolution between V1 and V2 persistent binnings. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLinTransBinning.html:445,variab,variable,445,doc/master/classRooLinTransBinning.html,https://root.cern,https://root.cern/doc/master/classRooLinTransBinning.html,1,['variab'],['variable']
Modifiability,". ROOT: RooLognormal Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; RooLognormal Class ReferenceRooFit » RooFit. ; RooFit Lognormal PDF. ; The two parameters are:; m0: the median of the distribution; k = exp(sigma): sigma is called the shape parameter in the TMath parameterization. \[; \mathrm{RooLognormal}(x \, | \, m_0, k) = \frac{1}{\sqrt{2\pi \cdot \ln(k) \cdot x}} \cdot \exp\left(; \frac{-\ln^2(\frac{x}{m_0})}{2 \ln^2(k)} \right) \]. The parameterization here is physics driven and differs from the ROOT::Math::lognormal_pdf() in x,m,s,x0 with:; m = log(m0); s = log(k); x0 = 0 . Definition at line 17 of file RooLognormal.h. Public Member Functions;  RooLognormal ();  ;  RooLognormal (const char *name, const char *title, RooAbsReal &_x, RooAbsReal &_m0, RooAbsReal &_k, bool useStandardParametrization=false);  ;  RooLognormal (const RooLognormal &other, const char *name=nullptr);  ; double analyticalIntegral (Int_t code, const char *rangeName=nullptr) const override;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; std::string buildCallToAnalyticIntegral (int code, const char *rangeName, RooFit::Detail::CodeSquashContext &ctx) const override;  This function defines the analytical integral translation for the class. ;  ; TObject * clone (const char *newname) const override;  ; void generateEvent (Int_t code) override;  Interface for generation of an event using the algorithm corresponding to the specified code. ;  ; Int_t getAnalyticalIntegral (RooArgSet &allVars, RooArgSet &analVars, const char *rangeName=nullptr) const override;  Interface function getAnalyticalIntergral advertises the analytical integrals that are supported. ;  ; Int_t getGenerator (const RooArgSet &directVars, RooArgSet &generateVars, bool staticInitO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLognormal.html:476,parameteriz,parameterization,476,doc/master/classRooLognormal.html,https://root.cern,https://root.cern/doc/master/classRooLognormal.html,2,['parameteriz'],['parameterization']
Modifiability,". ROOT: RooMCStudy Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; Friends |; List of all members ; RooMCStudy Class ReferenceRooFit » RooFit Core. ; Helper class to facilitate Monte Carlo studies such as 'goodness-of-fit' studies, that involve fitting a PDF to multiple toy Monte Carlo sets. ; These may be generated from either same PDF or from a different PDF with similar parameters.; Given a fit and a generator PDF (they might be identical), RooMCStudy can produce toyMC samples and/or fit these. It accumulates the post-fit parameters of each iteration in a dataset. These can be retrieved using fitParams() or fitParDataSet(). This dataset additionally contains the variables; NLL: The value of the negative log-likelihood for each run.; ngen: The number of events generated for each run. Additional plotting routines simplify the task of plotting the distribution of the minimized likelihood, the fitted parameter values, fitted error and pull distribution.; RooMCStudy provides the option to insert add-in modules that modify the generate-and-fit cycle and allow to perform extra steps in the cycle. Output of these modules can be stored alongside the fit results in the aggregate results dataset. These study modules should derive from the class RooAbsMCStudyModule.; Check the RooFit tutorials; rf801_mcstudy.C; rf802_mcstudy_addons.C; rf803_mcstudy_addons2.C; rf804_mcstudy_constr.C for usage examples. PyROOT; Some member functions of RooMCStudy that take a RooCmdArg as argument also support keyword arguments. So far, this applies to constructor RooMCStudy(), RooMCStudy::plotParamOn, RooMCStudy::plotParam, RooMCStudy::plotNLL, RooMCStudy::plotError and RooMCStudy::plotPull. For example, the following code is equivalent in PyROOT: # Directly passing a RooCmdArg:; fr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMCStudy.html:890,variab,variables,890,doc/master/classRooMCStudy.html,https://root.cern,https://root.cern/doc/master/classRooMCStudy.html,1,['variab'],['variables']
Modifiability,". ROOT: RooMinimizer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; RooMinimizer Class ReferenceRooFit » RooFit Core. ; Wrapper class around ROOT::Math::Minimizer that provides a seamless interface between the minimizer functionality and the native RooFit interface. ; By default the Minimizer is Minuit 2. RooMinimizer can minimize any RooAbsReal function with respect to its parameters. Usual choices for minimization are the object returned by RooAbsPdf::createNLL() or RooAbsReal::createChi2(). RooMinimizer has methods corresponding to MINUIT functions like hesse(), migrad(), minos() etc. In each of these function calls the state of the MINUIT engine is synchronized with the state of the RooFit variables: any change in variables, change in the constant status etc is forwarded to MINUIT prior to execution of the MINUIT call. Afterwards the RooFit objects are resynchronized with the output state of MINUIT: changes parameter values, errors are propagated. Various methods are available to control verbosity, profiling, automatic PDF optimization. ; Definition at line 48 of file RooMinimizer.h. Classes; struct  Config;  Config argument to RooMinimizer constructor. More...;  ; struct  FitResult;  ; class  FitterInterface;  . Public Types; enum  PrintLevel { ;   None = -1; , Reduced = 0; , Normal = 1; , ExtraForProblem = 2; , ;   Maximum = 3. };  ; enum  Strategy { Speed = 0; , Balance = 1; , Robustness = 2; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMinimizer.html:948,variab,variables,948,doc/master/classRooMinimizer.html,https://root.cern,https://root.cern/doc/master/classRooMinimizer.html,2,['variab'],['variables']
Modifiability,". ROOT: RooMomentMorphFunc Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Friends |; List of all members ; RooMomentMorphFunc Class ReferenceRooFit » RooFit. . Definition at line 30 of file RooMomentMorphFunc.h. Classes; class  CacheElem;  . Public Types; enum  Setting { ;   Linear; , NonLinear; , NonLinearPosFractions; , NonLinearLinFractions; , ;   SineLinear. };  ;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCode { Activate =0; , DeActivate =1; , ConfigChange =2; , ValueChange =3; };  ; enum  OperMode { Auto =0; , AClean =1; , ADirty =2; };  ; using RefCountList_t = RooSTLRefCountList< RooAbsArg >;  ; using RefCountListLegacyIterator_t = TIteratorToSTLInterface< RefCountList_t::Container_t >;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMomentMorphFunc.html:601,inherit,inherited,601,doc/master/classRooMomentMorphFunc.html,https://root.cern,https://root.cern/doc/master/classRooMomentMorphFunc.html,3,['inherit'],['inherited']
Modifiability,". ROOT: RooMsgService Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; Static Public Attributes |; Protected Member Functions |; Protected Attributes |; List of all members ; RooMsgService Class ReferenceRooFit » RooFit Core. ; Singleton class that organizes messages generated in RooFit. ; Each message has a message level RooFit::MsgLevel (DEBUG,INFO,PROGRESS,WARNING,ERROR or FATAL), an source object, and a RooFit::MsgTopic. RooMsgService allows to filter and redirect messages into streams according to message level, topic, (base) class of originating object, name of originating object and based on attribute labels attached to individual objects. The current default configuration creates streams for all messages at WARNING level or higher (e.g. ERROR and FATAL) and for all INFO message on topics Generation,Plotting, Integration and Minimization and redirects them to stdout. Users can create additional streams for logging of e.g. DEBUG messages on particular topics or objects and/or redirect streams to C++ streams or files.; The singleton instance is accessible through RooMsgService::instance(). Temporarily change the message level; There is a helper, RooHelpers::LocalChangeMsgLevel, that overrides the default message levels as long as it is alive. To suppress everything below WARNING: RooHelpers::LocalChangeMessageLevel changeMsgLvl(RooFit::WARNING);; [ statements that normally generate a lot of output ]; a#define a(i)Definition RSha256.hxx:99; RooFit::WARNING@ WARNINGDefinition RooGlobalFunc.h:60; outputstatic void output(); Temporarily capture a message stream; RooHelpers::HijackMessageStream allows to fully capture a message stream in a std::stringstream. With this, RooFit messages can be evaluated or suppressed. PyROOT; Some member functions of RooMsgService that take a RooCmdArg as argument also supp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMsgService.html:840,config,configuration,840,doc/master/classRooMsgService.html,https://root.cern,https://root.cern/doc/master/classRooMsgService.html,1,['config'],['configuration']
Modifiability,". ROOT: RooNDKeysPdf Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; RooNDKeysPdf Class ReferenceRooFit » RooFit. ; Generic N-dimensional implementation of a kernel estimation p.d.f. ; This p.d.f. models the distribution of an arbitrary input dataset as a superposition of Gaussian kernels, one for each data point, each contributing 1/N to the total integral of the p.d.f. If the 'adaptive mode' is enabled, the width of the Gaussian is adaptively calculated from the local density of events, i.e. narrow for regions with high event density to preserve details and wide for regions with log event density to promote smoothness. The details of the general algorithm are described in the following paper: Cranmer KS, Kernel Estimation in High-Energy Physics. Computer Physics Communications 136:198-207,2001 - e-Print Archive: hep ex/0011057 For multi-dimensional datasets, the kernels are modeled by multidimensional Gaussians. The kernels are constructed such that they reflect the correlation coefficients between the observables in the input dataset. ; Definition at line 44 of file RooNDKeysPdf.h. Classes; struct  BoxInfo;  . Public Types; enum  Mirror { ;   NoMirror; , MirrorLeft; , MirrorRight; , MirrorBoth; , ;   MirrorAsymLeft; , MirrorAsymLeftRight; , MirrorAsymRight; , MirrorLeftAsymRight; , ;   MirrorAsymBoth. };  ;  Public Types inherited from RooAbsPdf; enum  ExtendMode { CanNotBeExtended; , CanBeExtended; , MustBeExtended; };  ;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNDKeysPdf.html:619,adapt,adaptive,619,doc/master/classRooNDKeysPdf.html,https://root.cern,https://root.cern/doc/master/classRooNDKeysPdf.html,2,['adapt'],"['adaptive', 'adaptively']"
Modifiability,". ROOT: RooNameReg Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; Protected Attributes |; Friends |; List of all members ; RooNameReg Class ReferenceRooFit » RooFit Core. ; Registry for const char* names. ; For each unique name (which is not necessarily a unique pointer in the C++ standard), a unique pointer to a TNamed object is returned that can be used for fast searches and comparisons. ; Definition at line 26 of file RooNameReg.h. Public Types; enum  { kRenamedArg = (1ULL << ( 19 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  RooNameReg (const RooNameReg &other)=delete;  ; const TNamed * constPtr (const char *stringPtr);  Return a unique TNamed pointer for given C++ string. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNameReg.html:731,inherit,inherited,731,doc/master/classRooNameReg.html,https://root.cern,https://root.cern/doc/master/classRooNameReg.html,1,['inherit'],['inherited']
Modifiability,". ROOT: RooNumConvolution Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Friends |; List of all members ; RooNumConvolution Class ReferenceRooFit » RooFit Core. ; Numeric 1-dimensional convolution operator PDF. ; This class can convolve any PDF with any other PDF This class should not be used blindly as numeric convolution is computing intensive and prone to stability fitting problems. If an analytic convolution can be calculated, you should use that or implement it if not available. RooNumConvolution implements reasonable defaults that should convolve most functions reasonably well, but results strongly depend on the shape of your input PDFS so always check your result.; The default integration engine for the numeric convolution is the adaptive Gauss-Kronrod method, which empirically seems the most robust for this task. You can override the convolution integration settings via the RooNumIntConfig object reference returned by the convIntConfig() member function By default the numeric convolution is integrated from -infinity to +infinity through a x -> 1/x coordinate transformation of the tails. For convolution with a very small bandwidth it may be advantageous (for both CPU consumption and stability) if the integration domain is limited to a finite range. The function setConvolutionWindow(mean,width,scale) allows to set a sliding window around the x value to be calculated taking a RooAbsReal expression for an offset and a width to be taken around the x value. These input expression can be RooFormulaVars or other function objects although the 3d 'scale' argument 'scale' multiplies the width RooAbsReal expression given in the 2nd argument, allowing for an appropriate window definition for most cases without need for a RooFormulaVar object: e.g. a Gaussian resolution PDF do setConvolu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNumConvolution.html:936,adapt,adaptive,936,doc/master/classRooNumConvolution.html,https://root.cern,https://root.cern/doc/master/classRooNumConvolution.html,1,['adapt'],['adaptive']
Modifiability,". ROOT: RooNumGenConfig Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; RooNumGenConfig Class ReferenceRooFit » RooFit Core. ; Holds the configuration parameters of the various numeric integrators used by RooRealIntegral. ; RooRealIntegral and RooAbsPdf use this class in the (normalization) integral configuration interface ; Definition at line 25 of file RooNumGenConfig.h. Public Member Functions;  RooNumGenConfig ();  Constructor. ;  ;  RooNumGenConfig (const RooNumGenConfig &other);  Copy constructor. ;  ;  ~RooNumGenConfig () override;  Destructor. ;  ; bool addConfigSection (const RooAbsNumGenerator *proto, const RooArgSet &defaultConfig);  Add a configuration section for a particular integrator. ;  ; StyleOption defaultPrintStyle (Option_t *opt) const override;  ; RooArgSet & getConfigSection (const char *name);  Return section with configuration parameters for integrator with given (class) name. ;  ; const RooArgSet & getConfigSection (const char *name) const;  Retrieve configuration information specific to integrator with given name. ;  ; TClass * IsA () const override;  ; RooCategory & method1D (bool cond, bool cat);  ; const RooCategory & method1D (bool cond, bool cat) const;  ; RooCategory & method2D (bool cond, bool cat);  ; const RooCategory & method2D (bool cond, bool cat) const;  ; RooCategory & methodND (bool cond, bool cat);  ; const RooCategory & methodND (bool cond, bool cat) const;  ; RooNumGenConfig & operator= (const RooNumGenConfig &other);  Assignment operator from other RooNumGenConfig. ;  ; void Print (Option_t *options=nullptr) const override;  This method must be overridden when a class wants to print itself. ;  ; void printMultiline (std::ostream &os, Int_t content, bool verbose, TString indent="""") const override;  Detailed printing interface. ;  ; void Streamer ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNumGenConfig.html:317,config,configuration,317,doc/master/classRooNumGenConfig.html,https://root.cern,https://root.cern/doc/master/classRooNumGenConfig.html,4,['config'],['configuration']
Modifiability,". ROOT: RooNumGenFactory Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Friends |; List of all members ; RooNumGenFactory Class ReferenceRooFit » RooFit Core. ; Factory to instantiate numeric integrators from a given function binding and a given configuration. ; The factory searches for a numeric integrator registered with the factory that has the ability to perform the numeric integration. The choice of method may depend on the number of dimensions integrated, the nature of the integration limits (closed or open ended) and the preference of the caller as encoded in the configuration object. ; Definition at line 30 of file RooNumGenFactory.h. Public Member Functions;  ~RooNumGenFactory () override;  Destructor. ;  ; RooAbsNumGenerator * createSampler (RooAbsReal &func, const RooArgSet &genVars, const RooArgSet &condVars, const RooNumGenConfig &config, bool verbose=false, RooAbsReal *maxFuncVal=nullptr);  Construct a numeric integrator instance that operates on function 'func' and is configured with 'config'. ;  ; const RooAbsNumGenerator * getProtoSampler (const char *name);  Return prototype integrator with given (class) name. ;  ; bool storeProtoSampler (RooAbsNumGenerator *proto, const RooArgSet &defConfig);  Method accepting registration of a prototype numeric integrator along with a RooArgSet of its default configuration options and an optional list of names of other numeric integrators on which this integrator depends. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNumGenFactory.html:435,config,configuration,435,doc/master/classRooNumGenFactory.html,https://root.cern,https://root.cern/doc/master/classRooNumGenFactory.html,2,['config'],['configuration']
Modifiability,". ROOT: RooNumIntConfig Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; RooNumIntConfig Class ReferenceRooFit » RooFit Core. ; Holds the configuration parameters of the various numeric integrators used by RooRealIntegral. ; RooRealIntegral and RooAbsPdf use this class in the (normalization) integral configuration interface ; Definition at line 25 of file RooNumIntConfig.h. Public Member Functions;  RooNumIntConfig ();  Constructor. ;  ;  RooNumIntConfig (const RooNumIntConfig &other);  Copy constructor. ;  ;  ~RooNumIntConfig () override;  Destructor. ;  ; bool addConfigSection (std::string const &name, const RooArgSet &inDefaultConfig, bool canIntegrate1D, bool canIntegrate2D, bool canIntegrateND, bool canIntegrateOpenEnded);  Add a configuration section for a particular integrator. ;  ; StyleOption defaultPrintStyle (Option_t *opt) const override;  ; double epsAbs () const;  ; double epsRel () const;  ; RooArgSet & getConfigSection (const char *name);  Return section with configuration parameters for integrator with given (class) name. ;  ; const RooArgSet & getConfigSection (const char *name) const;  Retrieve configuration information specific to integrator with given name. ;  ; TClass * IsA () const override;  ; RooCategory & method1D ();  ; const RooCategory & method1D () const;  ; RooCategory & method1DOpen ();  ; const RooCategory & method1DOpen () const;  ; RooCategory & method2D ();  ; const RooCategory & method2D () const;  ; RooCategory & method2DOpen ();  ; const RooCategory & method2DOpen () const;  ; RooCategory & methodND ();  ; const RooCategory & methodND () const;  ; RooCategory & methodNDOpen ();  ; const RooCategory & methodNDOpen () const;  ; RooNumIntConfig & operator= (const RooNumIntConfig &other);  Assignment operator from other RooNumIntConfig. ;  ; void Print (Opt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNumIntConfig.html:317,config,configuration,317,doc/master/classRooNumIntConfig.html,https://root.cern,https://root.cern/doc/master/classRooNumIntConfig.html,3,['config'],['configuration']
Modifiability,". ROOT: RooNumIntFactory Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; RooNumIntFactory Class ReferenceRooFit » RooFit Core. ; Factory to instantiate numeric integrators from a given function binding and a given configuration. ; The factory searches for a numeric integrator registered with the factory that has the ability to perform the numeric integration. The choice of method may depend on the number of dimensions integrated, the nature of the integration limits (closed or open ended) and the preference of the caller as encoded in the configuration object. ; Definition at line 33 of file RooNumIntFactory.h. Classes; struct  PluginInfo;  . Public Types; using Creator = std::function< std::unique_ptr< RooAbsIntegrator >(RooAbsFunc const &function, const RooNumIntConfig &config)>;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  RooNumIntFactory (const RooNumIntFactory &other)=delete;  ; std::unique_ptr< RooAbsIntegrator > createIntegrator (RooAbsFunc &func, const RooNumIntConfig &config, int ndim=0, bool isBinned=false) const;  Construct a numeric integrator instance that operates on function 'func' and is configured wi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooNumIntFactory.html:458,config,configuration,458,doc/master/classRooNumIntFactory.html,https://root.cern,https://root.cern/doc/master/classRooNumIntFactory.html,2,['config'],['configuration']
Modifiability,". ROOT: RooPlot Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; Protected Member Functions |; Protected Attributes |; Static Protected Attributes |; List of all members ; RooPlot Class ReferenceRooFit » RooFit Core. ; Plot frame and a container for graphics objects within that frame. ; As a frame, it provides the TH1-style public interface for setting plot ranges, configuring axes, etc. As a container, it holds an arbitrary set of objects that might be histograms of data, curves representing a fit model, or text labels. Use the Draw() method to draw a frame and the objects it contains. Use the various add...() methods to add objects to be drawn. In general, the add...() methods create a private copy of the object you pass them and return a pointer to this copy. The caller owns the input object and this class owns the returned object. All RooAbsReal and RooAbsData derived classes implement plotOn() functions that facilitate to plot themselves on a given RooPlot, e.g. RooPlot *frame = x.frame() ;; data.plotOn(frame) ;; pdf.plotOn(frame) ;; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; xDouble_t x[n]Definition legend1.C:17; These high level functions also take care of any projections or other mappings that need to be made to plot a multi-dimensional object onto a one-dimensional plot. ; Definition at line 45 of file RooPlot.h. Classes; class  DrawOpt;  . Public Typ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPlot.html:549,config,configuring,549,doc/master/classRooPlot.html,https://root.cern,https://root.cern/doc/master/classRooPlot.html,1,['config'],['configuring']
Modifiability,". ROOT: RooPolyFunc Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; RooPolyFunc Class ReferenceRooFit » RooFit. ; RooPolyFunc implements a polynomial function in multi-variables. ; The polynomial coefficients are implemented as doubles and are not part of the RooFit computation graph. ; Definition at line 28 of file RooPolyFunc.h. Public Member Functions;  RooPolyFunc ();  Default constructor. ;  ;  RooPolyFunc (const char *name, const char *title, const RooAbsCollection &vars);  Parameterised constructor. ;  ;  RooPolyFunc (const char *name, const char *title, RooAbsReal &x, const RooAbsCollection &coefList);  ;  RooPolyFunc (const char *name, const char *title, RooAbsReal &x, RooAbsReal &y, const RooAbsCollection &coefList);  ;  RooPolyFunc (const RooPolyFunc &other, const char *name=nullptr);  Copy constructor. ;  ; void addTerm (double coefficient);  coverity[UNINIT_CTOR] ;  ; void addTerm (double coefficient, const RooAbsCollection &exponents);  ; void addTerm (double coefficient, const RooAbsReal &var1, int exp1);  ; void addTerm (double coefficient, const RooAbsReal &var1, int exp1, const RooAbsReal &var2, int exp2);  ; std::string asString () const;  Return to RooPolyFunc as a string. ;  ; TObject * clone (const char *newname) const override;  ; RooRealVar * getCoefficient (const RooArgList &term);  ; RooRealVar * getExponent (const RooArgList &term, RooRealVar *v);  ; TClass * IsA () const override;  ; RooPolyFunc & operator= (const RooPolyFunc &other)=delete;  ; RooPolyFunc & operator= (RooPolyFunc &&other)=delete;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; const std::vector< std::unique_ptr< RooListProxy > > & terms () const;  ; const RooArgList & va",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPolyFunc.html:378,variab,variables,378,doc/master/classRooPolyFunc.html,https://root.cern,https://root.cern/doc/master/classRooPolyFunc.html,1,['variab'],['variables']
Modifiability,". ROOT: RooPowerSum Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; RooPowerSum Class ReferenceRooFit » RooFit. ; RooPowerSum implements a power law PDF of the form. . \[ f(x) = \mathcal{N} \cdot \sum_{i} a_{i} * x^{b_i} \]. Definition at line 20 of file RooPowerSum.h. Public Member Functions;  RooPowerSum ();  ;  RooPowerSum (const char *name, const char *title, RooAbsReal &x, const RooArgList &coefList, const RooArgList &expList);  Create a power law in the variable x. ;  ;  RooPowerSum (const RooPowerSum &other, const char *name=nullptr);  Copy constructor. ;  ; double analyticalIntegral (int code, const char *rangeName=nullptr) const override;  Do the analytical integral according to the code that was returned by getAnalyticalIntegral(). ;  ; RooAbsReal const & base () const;  Get the base of the exponentiated terms (aka. x variable). ;  ; TObject * clone (const char *newname) const override;  ; RooArgList const & coefList () const;  Get the list of coefficients. ;  ; RooArgList const & expList () const;  Get the list of exponents. ;  ; int getAnalyticalIntegral (RooArgSet &allVars, RooArgSet &analVars, const char *rangeName=nullptr) const override;  Advertise to RooFit that this function can be analytically integrated. ;  ; std::string getFormulaExpression (bool expand) const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsPdf;  RooAbsPdf ();  Default constructor. ;  ;  RooAbsPdf (const char *name, const char *title, double minVal, double maxVal);  Constructor with name, title, and plot range. ;  ;  RooAbsPdf (const char *name, const char *title=nullptr);  Constructor with name an",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPowerSum.html:674,variab,variable,674,doc/master/classRooPowerSum.html,https://root.cern,https://root.cern/doc/master/classRooPowerSum.html,1,['variab'],['variable']
Modifiability,". ROOT: RooRandomizeParamMCSModule Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; RooRandomizeParamMCSModule Class ReferenceRooFit » RooFit Core. ; Add-on module to RooMCStudy that allows you to randomize input generation parameters. ; Randomized generation parameters can be sampled from a uniform or Gaussian distribution. For every randomized parameter, an extra variable is added to RooMCStudy::fitParDataSet() named <parname>_gen that indicates the actual value used for generation for each trial. You can also choose to randomize the sum of N parameters, rather than a single parameter. In that case common multiplicative scale factor is applied to each component to bring the sum to the desired target value taken from either uniform or Gaussian sampling. This latter option is for example useful if you want to change the total number of expected events of an extended p.d.f ; Definition at line 24 of file RooRandomizeParamMCSModule.h. Classes; struct  GausParam;  ; struct  GausParamSet;  ; struct  UniParam;  ; struct  UniParamSet;  . Public Member Functions;  RooRandomizeParamMCSModule ();  Constructor. ;  ;  RooRandomizeParamMCSModule (const RooRandomizeParamMCSModule &other);  Copy constructor. ;  ;  ~RooRandomizeParamMCSModule () override;  ; RooDataSet * finalizeRun () override;  Return auxiliary data of this module so that it is merged with RooMCStudy::fitParDataSet() ;  ; bool initializeInstance () override;  Initialize module after attachment to RooMCStudy object. ;  ; bool initializeRun (Int_t) override;  Initialize module at beginning of RooCMStudy run. ;  ; TClass * IsA () const override;  ; bool processBeforeGen (Int_t) override;  Apply all smearings to generator parameters. ;  ; void sampleGaussian (RooRealVar &param, double mean, double sigma);  Request Gaussian smearing ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRandomizeParamMCSModule.html:556,variab,variable,556,doc/master/classRooRandomizeParamMCSModule.html,https://root.cern,https://root.cern/doc/master/classRooRandomizeParamMCSModule.html,1,['variab'],['variable']
Modifiability,". ROOT: RooRangeBoolean Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; RooRangeBoolean Class ReferenceRooFit » RooFit Core. ; Returns 1.0 if variable is within given a range and 0.0 otherwise. ; Definition at line 26 of file RooRangeBoolean.h. Public Member Functions;  RooRangeBoolean ()=default;  ;  RooRangeBoolean (const char *name, const char *title, RooAbsRealLValue &x, const char *rangeName);  ;  RooRangeBoolean (const RooRangeBoolean &other, const char *name=nullptr);  Copy constructor. ;  ; TObject * clone (const char *newname) const override;  ; TClass * IsA () const override;  ; std::list< double > * plotSamplingHint (RooAbsRealLValue &obs, double xlo, double xhi) const override;  Interface for returning an optional hint for initial sampling points when constructing a curve projected on observable obs. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (const char *name, const char *title, double minVal, double maxVal, const char *unit="""");  Constructor with plot range and unit label. ;  ;  RooAbsReal (const RooAbsReal &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooAbsReal () override;  Destructor. ;  ; virtual double analyticalIntegral (Int_t code, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; virtual double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const;  Implements the actual ana",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRangeBoolean.html:352,variab,variable,352,doc/master/classRooRangeBoolean.html,https://root.cern,https://root.cern/doc/master/classRooRangeBoolean.html,1,['variab'],['variable']
Modifiability,". ROOT: RooRealIntegral Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Protected Attributes |; Static Protected Attributes |; Private Member Functions |; List of all members ; RooRealIntegral Class ReferenceRooFit » RooFit Core. ; Performs hybrid numerical/analytical integrals of RooAbsReal objects. ; The class performs none of the actual integration, but only manages the logic of what variables can be integrated analytically, accounts for eventual jacobian terms and defines what numerical integrations needs to be done to complement the analytical integral. The actual analytical integrations (if any) are done in the PDF themselves, the numerical integration is performed in the various implementations of the RooAbsIntegrator base class. ; Definition at line 29 of file RooRealIntegral.h. Public Member Functions;  RooRealIntegral ();  ;  RooRealIntegral (const char *name, const char *title, const RooAbsReal &function, const RooArgSet &depList, const RooArgSet *funcNormSet=nullptr, const RooNumIntConfig *config=nullptr, const char *rangeName=nullptr);  Construct integral of 'function' over observables in 'depList' in range 'rangeName' with normalization observables 'funcNormSet' (for p.d.f.s). ;  ;  RooRealIntegral (const RooRealIntegral &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooRealIntegral () override;  ; const RooArgSet & anaIntVars () const;  ; TObject * clone (const char *newname) const override;  ; std::unique_ptr< RooAbsArg > compileForNormSet (RooArgSet const &normSet, RooFit::Detail::CompileContext &ctx) const override;  ; RooFit::OwningPtr< RooAbsReal > createIntegral (const RooArgSet &iset, const RooArgSet *nset=nullptr, const RooNumIntConfig *cfg=nullptr, const char *rangeName=nullptr) const override;  Create an object that represents the integral of the fu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealIntegral.html:573,variab,variables,573,doc/master/classRooRealIntegral.html,https://root.cern,https://root.cern/doc/master/classRooRealIntegral.html,1,['variab'],['variables']
Modifiability,". ROOT: RooRealVar Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Static Protected Member Functions |; Protected Attributes |; Static Protected Attributes |; List of all members ; RooRealVar Class ReferenceRooFit » RooFit Core. ; Variable that can be changed from the outside. ; For example by the user or a fitter.; It can be written into datasets, can hold a (possibly asymmetric) error, and can have several ranges. These can be accessed with names, to e.g. limit fits or integrals to sub ranges. The range without any name is used as default range. ; Definition at line 37 of file RooRealVar.h. Public Member Functions;  RooRealVar ();  Default constructor. ;  ;  RooRealVar (const char *name, const char *title, double minValue, double maxValue, const char *unit="""");  Create a variable allowed to float in the given range. ;  ;  RooRealVar (const char *name, const char *title, double value, const char *unit="""");  Create a constant variable with a value and optional unit. ;  ;  RooRealVar (const char *name, const char *title, double value, double minValue, double maxValue, const char *unit="""");  Create a variable with the given starting value. ;  ;  RooRealVar (const RooRealVar &other, const char *name=nullptr);  Copy Constructor. ;  ;  ~RooRealVar () override;  Destructor. ;  ; TObject * clone (const char *newname) const override;  ; void copyCacheFast (const RooRealVar &other, bool setValDirty=true);  ; Int_t defaultPrintContents (Option_t *opt) const override;  Mapping of Print() option string to RooPrintable contents specifications. ;  ; void deleteSharedProperties ();  Stop sharing properties. ;  ; RooErrorVar * errorVar () const;  Return a RooAbsRealLValue representing the error associated with this variable. ;  ; TString * format (const RooCmdArg &formatArg) const;  Format contents of R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealVar.html:967,variab,variable,967,doc/master/classRooRealVar.html,https://root.cern,https://root.cern/doc/master/classRooRealVar.html,1,['variab'],['variable']
Modifiability,". ROOT: RooRefArray Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; RooRefArray Class Reference. . Definition at line 64 of file RooAbsArg.h. Public Member Functions;  RooRefArray ()=default;  ;  RooRefArray (const RooRefArray &other);  ; TClass * IsA () const override;  ; RooRefArray & operator= (const RooRefArray &other)=default;  ; void Streamer (TBuffer &) override;  Stream an object of class RooRefArray. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObjArray;  TObjArray (const TObjArray &a);  Create a copy of TObjArray a. Note, does not copy the kIsOwner flag. ;  ;  TObjArray (Int_t s=TCollection::kInitCapacity, Int_t lowerBound=0);  Create an object array. ;  ; virtual ~TObjArray ();  Delete an array. ;  ; void Add (TObject *obj) override;  ; void AddAfter (const TObject *after, TObject *obj) override;  Add object in the slot after object after. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Add object at position ids. ;  ; virtual void AddAtAndExpand (TObject *obj, Int_t idx);  Add object at position idx. ;  ; virtual Int_t AddAtFree (TObject *obj);  Return the position of the new object. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  Add object in the slot before object before. ;  ; void AddFirst (TObject *obj) override;  Add object in the first slot of the array. ;  ; void AddLast (TObject *obj) override;  Add object in the next empty slot in the array. ;  ; TObject * After (const TObject *obj) const override;  Return the object after obj. Returns 0 if obj is last object. ;  ; TObject * At (Int_t idx) const override;  ; TObject * Before (const TObject *obj) const override;  Return the object before obj. Returns 0 if obj is first object. ;  ; virtual Int_t BinarySearch (TObject *obj, Int_t upto=kMaxInt);  Find obje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRefArray.html:664,inherit,inherited,664,doc/master/classRooRefArray.html,https://root.cern,https://root.cern/doc/master/classRooRefArray.html,1,['inherit'],['inherited']
Modifiability,". ROOT: RooResolutionModel Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Friends |; List of all members ; RooResolutionModel Class Referenceabstract. ; RooResolutionModel is the base class for PDFs that represent a resolution model that can be convoluted with a physics model of the form. . \[; \mathrm{Phys}(x,a,b) = \sum_k \mathrm{coef}_k(a) * \mathrm{basis}_k(x,b); \]. where basis_k are a limited number of functions in terms of the variable to be convoluted and coef_k are coefficients independent of the convolution variable.; Classes derived from RooResolutionModel implement ; \[; R_k(x,\bar{b},\bar{c}) = \int \mathrm{basis}_k(x',\bar{b}) * \mathrm{resModel}(x-x',\bar{c}) \; \mathrm{d} x',; \]. which RooAbsAnaConvPdf uses to construct the pdf for [ Phys (x) R ] : ; \[; \mathrm{PDF}(x,\bar a, \bar b, \bar c) = \sum_k \mathrm{coef}_k(\bar a) * R_k(x, \bar b, \bar c); \]. A minimal implementation of a RooResolutionModel consists of a Int_t basisCode(const char* name); namechar name[80]Definition TGX11.cxx:110; RooResolutionModel::basisCodevirtual Int_t basisCode(const char *name) const =0; int; function indicating which basis functions this resolution model supports, and double evaluate(),; RooAbsReal::evaluatevirtual double evaluate() const =0Evaluate this PDF / function / constant. Needs to be overridden by all derived classes.; which should implement the resolution model (optionally convoluted with one of the supported basis functions). RooResolutionModel objects can be used as regular PDFs (They inherit from RooAbsPdf), or as resolution model convoluted with a basis function. The implementation of evaluate() can identify the requested mode using basisCode(). If zero, the regular PDF value should be calculated. If non-zero, the model's value convoluted with the basis function ide",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooResolutionModel.html:627,variab,variable,627,doc/master/classRooResolutionModel.html,https://root.cern,https://root.cern/doc/master/classRooResolutionModel.html,2,['variab'],['variable']
Modifiability,". ROOT: RooSimGenContext Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; RooSimGenContext Class ReferenceRooFit » RooFit Core. ; Efficient implementation of the generator context specific for RooSimultaneous PDFs when generating more than one of the component pdfs. ; It runs in two modes:; Proto data with category entries are given: An event from the same category as in the proto data is created.; No proto data: A category is chosen randomly. NoteThis requires that the PDFs are extended, to determine the relative probabilities that an event originates from a certain category. . Definition at line 27 of file RooSimGenContext.h. Public Member Functions;  RooSimGenContext (const RooSimultaneous &model, const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool _verbose=false);  Constructor of specialized generator context for RooSimultaneous p.d.f.s. ;  ;  ~RooSimGenContext () override;  ; void attach (const RooArgSet &params) override;  Attach the index category clone to the given event buffer. ;  ; TClass * IsA () const override;  ; void printMultiline (std::ostream &os, Int_t content, bool verbose=false, TString indent="""") const override;  Detailed printing interface. ;  ; void setProtoDataOrder (Int_t *lut) override;  Set the traversal order of the prototype data to that in the given lookup table. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsGenContext;  RooAbsGenContext (const RooAbsPdf &model, const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool _verbose=false);  Constructor. ;  ; Int_t defaultPrintContents (Option_t *opt) con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSimGenContext.html:693,extend,extended,693,doc/master/classRooSimGenContext.html,https://root.cern,https://root.cern/doc/master/classRooSimGenContext.html,1,['extend'],['extended']
Modifiability,". ROOT: RooSimultaneous Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; Static Private Member Functions |; Private Attributes |; Friends |; List of all members ; RooSimultaneous Class ReferenceRooFit » RooFit Core. ; Facilitates simultaneous fitting of multiple PDFs to subsets of a given dataset. ; The class takes an index category, which is used as a selector for PDFs, and a list of PDFs, each associated with a state of the index category. RooSimultaneous always returns the value of the PDF that is associated with the current value of the index category.; Extended likelihood fitting is supported if all components support extended likelihood mode. The expected number of events by a RooSimultaneous is that of the component p.d.f. selected by the index category.; The index category can be accessed using indexCategory(). Generating events; When generating events from a RooSimultaneous, the index category has to be added to the dataset. Further, the PDF needs to know the relative probabilities of each category, i.e., how many events are in which category. This can be achieved in two ways:; Generating with proto data that have category entries: An event from the same category as in the proto data is created for each event in the proto data. See RooAbsPdf::generate(const RooArgSet&,const RooDataSet&,Int_t,bool,bool,bool) const.; No proto data: A category is chosen randomly. NoteThis requires that the PDFs building the simultaneous are extended. In this way, the relative probability of each category can be calculated from the number of events in each category. PyROOT; Some member functions of RooSimultaneous that take a RooCmdArg as argument also support keyword arguments. So far, this applies to RooSimultaneous::plotOn. For example, the following cod",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSimultaneous.html:857,extend,extended,857,doc/master/classRooSimultaneous.html,https://root.cern,https://root.cern/doc/master/classRooSimultaneous.html,1,['extend'],['extended']
Modifiability,". ROOT: RooStats::AcceptanceRegion Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; RooStats::AcceptanceRegion Class Reference. . Definition at line 95 of file ConfidenceBelt.h. Public Member Functions;  AcceptanceRegion ();  ;  AcceptanceRegion (Int_t lu, double ll, double ul);  ; Int_t GetLookupIndex ();  ; double GetLowerLimit ();  ; double GetUpperLimit ();  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1AcceptanceRegion.html:746,inherit,inherited,746,doc/master/classRooStats_1_1AcceptanceRegion.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1AcceptanceRegion.html,1,['inherit'],['inherited']
Modifiability,". ROOT: RooStats::ConfInterval Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; RooStats::ConfInterval Class ReferenceabstractRooFit » RooStats. ; ConfInterval is an interface class for a generic interval in the RooStats framework. ; Any tool inheriting from IntervalCalculator can return a ConfInterval. There are many types of intervals, they may be a simple range [a,b] in 1 dimension, or they may be disconnected regions in multiple dimensions. So the common interface is simply to ask the interval if a given point ""IsInInterval"". The Interval also knows what confidence level it was constructed at and the space of parameters for which it was constructed. Note, one could use the same class for a Bayesian ""credible interval"". ; Definition at line 35 of file ConfInterval.h. Public Member Functions;  ConfInterval (const char *name=nullptr);  constructor given name and title ;  ; virtual bool CheckParameters (const RooArgSet &) const =0;  check if parameters are correct (i.e. they are the POI of this interval) ;  ; virtual double ConfidenceLevel () const =0;  return confidence level ;  ; virtual RooArgSet * GetParameters () const =0;  return list of parameters of interest defining this interval (return a new cloned list) ;  ; TClass * IsA () const override;  ; virtual bool IsInInterval (const RooArgSet &) const =0;  check if given point is in the interval ;  ; ConfInterval & operator= (const ConfInterval &other);  operator= ;  ; virtual void SetConfidenceLevel (double cl)=0;  used to set confidence level. Keep pure virtual ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1ConfInterval.html:398,inherit,inheriting,398,doc/master/classRooStats_1_1ConfInterval.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1ConfInterval.html,1,['inherit'],['inheriting']
Modifiability,". ROOT: RooStats::HLFactory Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; RooStats::HLFactory Class ReferenceRooFit » RooStats. ; HLFactory is an High Level model Factory allows you to describe your models in a configuration file (datacards) acting as an interface with the RooFactoryWSTool. ; Moreover it provides tools for the combination of models and datasets. ; Definition at line 29 of file HLFactory.h. Public Member Functions;  HLFactory ();  Default Constructor. ;  ;  HLFactory (const char *name, const char *fileName=nullptr, bool isVerbose=false);  Constructor. ;  ;  HLFactory (const char *name, RooWorkspace *externalWs, bool isVerbose=false);  Constructor with external RooWorkspace. ;  ;  ~HLFactory () override;  Default Destructor. ;  ; int AddChannel (const char *label, const char *SigBkgPdfName, const char *BkgPdfName=nullptr, const char *datasetName=nullptr);  Add channel for the combination. ;  ; void DumpCfg (const char *);  Dump the Workspace content as configuration file. ;  ; RooAbsPdf * GetTotBkgPdf ();  Get the combined background pdf. ;  ; RooCategory * GetTotCategory ();  Get the combined dataset. ;  ; RooDataSet * GetTotDataSet ();  Get the combined dataset. ;  ; RooAbsPdf * GetTotSigBkgPdf ();  Get the combined signal plus background pdf. ;  ; RooWorkspace * GetWs ();  Get the RooWorkspace containing the models and variables. ;  ; TClass * IsA () const override;  ; int ProcessCard (const char *filename);  Process a configuration file. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1HLFactory.html:419,config,configuration,419,doc/master/classRooStats_1_1HLFactory.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1HLFactory.html,1,['config'],['configuration']
Modifiability,". ROOT: RooStats::Heaviside Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; RooStats::Heaviside Class ReferenceRooFit » RooStats. ; Represents the Heaviside function. ; Evaluates to 1.0 when ((double)x) >= ((double)c), 0.0 otherwise. ; Definition at line 21 of file Heaviside.h. Public Member Functions;  Heaviside ();  ;  Heaviside (const char *name, const char *title, RooAbsReal &_x, RooAbsReal &_c);  ;  Heaviside (const Heaviside &other, const char *name=nullptr);  ; TObject * clone (const char *newname) const override;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsReal;  RooAbsReal ();  coverity[UNINIT_CTOR] Default constructor ;  ;  RooAbsReal (const char *name, const char *title, const char *unit="""");  Constructor with unit label. ;  ;  RooAbsReal (const char *name, const char *title, double minVal, double maxVal, const char *unit="""");  Constructor with plot range and unit label. ;  ;  RooAbsReal (const RooAbsReal &other, const char *name=nullptr);  Copy constructor. ;  ;  ~RooAbsReal () override;  Destructor. ;  ; virtual double analyticalIntegral (Int_t code, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; virtual double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; TF1 * asTF (const RooArgList &obs, const RooArgList &pars=RooArgList(), const RooArgSet &nset=RooArgSet()) const;  Return a ROOT TF1,2,3 object bound to this RooAbsReal with given definition of observab",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1Heaviside.html:942,inherit,inherited,942,doc/master/classRooStats_1_1Heaviside.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1Heaviside.html,1,['inherit'],['inherited']
Modifiability,". ROOT: RooStats::HybridResult Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; RooStats::HybridResult Class ReferenceRooFit » RooStats. ; Class encapsulating the result of the HybridCalculatorOriginal. ; This class is a fresh rewrite in RooStats of RooStatsCms/LimitResults developed by D. Piparo and G. Schott New contributions to this class have been written by Matthias Wolf (error estimation); The objects of this class store and access with lightweight methods the information calculated by LimitResults through a Lent calculation using MC toy experiments. In some ways can be considered an extended and extensible implementation of TConfidenceLevel. ; Definition at line 27 of file HybridResult.h. Public Member Functions;  HybridResult (const char *name, const std::vector< double > &testStat_sb_vals, const std::vector< double > &testStat_b_vals, bool sumLargerValues=true);  Constructor for HybridResult. ;  ;  HybridResult (const char *name=nullptr);  Default constructor. ;  ;  ~HybridResult () override;  Destructor of HybridResult. ;  ; void Add (HybridResult *other);  add additional toy-MC experiments to the current results use the data test statistics of the added object if none is already present (otherwise, ignore the new one) ;  ; double AlternatePValue () const override;  Returns \(CL_{s+b}\) : the S+B p-value. ;  ; double CLbError () const;  The error on the ""confidence level"" of the null hypothesis. ;  ; double CLsError () const;  The error on the ratio \(CL_{s+b}/CL_{b}\). ;  ; double CLsplusbError () const;  The error on the ""confidence level"" of the alternative hypothesis. ;  ; HybridPlot * GetPlot (const char *name, const char *title, int n_bins);  prepare a plot showing a result and return a pointer to a HybridPlot object the needed arguments are: an object name, a title and the num",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1HybridResult.html:404,rewrite,rewrite,404,doc/master/classRooStats_1_1HybridResult.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1HybridResult.html,2,"['extend', 'rewrite']","['extended', 'rewrite']"
Modifiability,". ROOT: RooStats::HypoTestInverterResult Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Static Protected Attributes |; Private Member Functions |; Friends |; List of all members ; RooStats::HypoTestInverterResult Class ReferenceRooFit » RooStats. ; HypoTestInverterResult class holds the array of hypothesis test results and compute a confidence interval. ; Based on the RatioFinder code available in the RooStatsCms package developed by Gregory Schott and Danilo Piparo Ported and adapted to RooStats by Gregory Schott Some contributions to this class have been written by Matthias Wolf (error estimation) ; Definition at line 26 of file HypoTestInverterResult.h. Public Types; enum  InterpolOption_t { kLinear; , kSpline; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  HypoTestInverterResult (const char *name, const RooRealVar &scannedVariable, double cl);  constructor ;  ;  HypoTestInverterResult (const char *name=nullptr);  default constructor ;  ;  HypoTestInverterResult (const HypoTestInverterResult &other, const char *name);  copy constructor ;  ;  ~HypoTestInverterResult () override;  destructor ;  ; bool Add (const HypoTestInverterResult &otherResult);  merge with the content of another",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1HypoTestInverterResult.html:657,adapt,adapted,657,doc/master/classRooStats_1_1HypoTestInverterResult.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1HypoTestInverterResult.html,2,"['adapt', 'inherit']","['adapted', 'inherited']"
Modifiability,". ROOT: RooStats::HypoTestResult Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; RooStats::HypoTestResult Class ReferenceRooFit » RooStats. ; HypoTestResult is a base class for results from hypothesis tests. ; Any tool inheriting from HypoTestCalculator can return a HypoTestResult. As such, it stores a p-value for the null-hypothesis (eg. background-only) and an alternate hypothesis (eg. signal+background). The p-values can also be transformed into confidence levels ( \(CL_{b}\), \(CL_{s+b}\)) in a trivial way. The ratio of the \(CL_{s+b}\) to \(CL_{b}\) is often called \(CL_{s}\), and is considered useful, though it is not a probability. Finally, the p-value of the null can be transformed into a number of equivalent Gaussian sigma using the Significance method.; The p-value of the null for a given test statistic is rigorously defined and this is the starting point for the following conventions. Conventions used in this class; The p-value for the null and alternate are on the same side of the observed value of the test statistic. This is the more standard convention and avoids confusion when doing inverted tests.; For exclusion, we also want the formula \(CL_{s} = CL_{s+b} / CL_{b}\) to hold which therefore defines our conventions for \(CL_{s+b}\) and \(CL_{b}\). \(CL_{s}\) was specifically invented for exclusion and therefore all quantities need be related through the assignments as they are for exclusion: \(CL_{s+b} = p_{s+b}\); \(CL_{b} = p_{b}\). This is derived by considering the scenarios of a powerful and not powerful inverted test, where for the not so powerful test, \(CL_{s}\) must be close to one.; For results of Hypothesis tests, \(CL_{s}\) has no similar direct interpretation as for exclusion and can be larger than one. ; Definition at line 22 of file",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1HypoTestResult.html:427,inherit,inheriting,427,doc/master/classRooStats_1_1HypoTestResult.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1HypoTestResult.html,1,['inherit'],['inheriting']
Modifiability,". ROOT: RooStats::MCMCInterval Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; Static Private Attributes |; List of all members ; RooStats::MCMCInterval Class ReferenceRooFit » RooStats. ; MCMCInterval is a concrete implementation of the RooStats::ConfInterval interface. ; It takes as input Markov Chain of data points in the parameter space generated by Monte Carlo using the Metropolis algorithm. From the Markov Chain, the confidence interval can be determined in two ways:; Using a Kernel-Estimated PDF: (not the default method); A RooNDKeysPdf is constructed from the data set using adaptive kernel width. With this RooNDKeysPdf F, we then integrate over the most likely domain in the parameter space (tallest points in the posterior RooNDKeysPdf) until the target confidence level is reached within an acceptable neighborhood as defined by SetEpsilon(). More specifically: we calculate the following for different cutoff values C until we reach the target confidence level: \(\int_{ F >= C } F; d{normset} \). Important note: this is not the default method because of a bug in constructing the RooNDKeysPdf from a weighted data set. Configure to use this method by calling SetUseKeys(true), and the data set will be interpreted without weights.; Using a binned data set: (the default method); This is the binned analog of the continuous integrative method that uses the kernel-estimated PDF. The points in the Markov Chain are put into a binned data set and the interval is then calculated by adding the heights of the bins in decreasing order until the desired level of confidence has been reached. Note that this means the actual confidence level is >= the confidence level prescribed by the client (unless the user calls SetHistStrict(false)). This method is ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1MCMCInterval.html:821,adapt,adaptive,821,doc/master/classRooStats_1_1MCMCInterval.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1MCMCInterval.html,1,['adapt'],['adaptive']
Modifiability,". ROOT: RooStats::ModelConfig Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; RooStats::ModelConfig Class ReferencefinalRooFit » RooStats. ; ModelConfig is a simple class that holds configuration information specifying how a model should be used in the context of various RooStats tools. ; A single model can be used in different ways, and this class should carry all that is needed to specify how it should be used. ModelConfig requires a workspace to be set.; A ModelConfig holds sets of parameters of the likelihood function that have different interpretations:; Parameter of interest Parameters that are measured (i.e. fitted).; Nuisance parameters Parameters that are fitted, but their post-fit value is not interesting. Often, they might be constrained because external knowledge about them exists, e.g. from external measurements.; Constraint parameters No direct use in RooFit/RooStats. Can be used by the user for bookkeeping.; Observables Parameters that have been measured externally, i.e. they exist in a dataset. These are not fitted, but read during fitting from the entries of a dataset.; Conditional observables Observables that are not integrated when the normalisation of the PDF is calculated. See e.g. rf306_condpereventerrors in the RooFit tutorials.; Global observables Observables that to the fit look like ""constant"" values, i.e. they are not being fitted and they are not loaded from a dataset, but some knowledge exists that allows to set them to a specific value. Examples: – A signal efficiency measured in a Monte Carlo study. – When constraining a parameter \( b \), the target value ( \( b_0 \)) that this parameter is constrained to: ; \[; \mathrm{Constraint}_b = \mathrm{Gauss}(b_0 \, | \, b, 0.2); \]. External constraints Includ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1ModelConfig.html:420,config,configuration,420,doc/master/classRooStats_1_1ModelConfig.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1ModelConfig.html,1,['config'],['configuration']
Modifiability,". ROOT: RooStats::PdfProposal Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; RooStats::PdfProposal Class ReferenceRooFit » RooStats. ; PdfProposal is a concrete implementation of the ProposalFunction interface. ; It proposes points across the parameter space in the distribution of the given PDF.; To make Propose(xPrime, x) dependent on x, configure with PdfProposal::AddMapping(varToUpdate, valueToUse). For example, suppose we have:; // our parameter; RooRealVar p(""p"", ""p"", 5, 0, 10);; ; // create mean and sigma for gaussian proposal function; RooRealVar meanP(""meanP"", ""meanP"", 0, 10);; RooRealVar sigma(""sigma"", ""sigma"", 1, 0, 5);; RooGaussian pGaussian(""pGaussian"", ""pGaussian"", p, meanP, sigma);; ; // configure proposal function; PdfProposal pdfProposal(pGaussian);; pdfProposal.AddMapping(meanP, p); // each call of Propose(xPrime, x), meanP in; // the proposal function will be updated to; // the value of p in x. this will center the; // proposal function about x's p when; // proposing for xPrime; ; // To improve performance, PdfProposal has the ability to cache a specified; // number of proposals. If you don't call this function, the default cache size; // is 1, which can be slow.; pdfProposal.SetCacheSize(desiredCacheSize);; pwinID h TVirtualViewer3D TVirtualGLPainter pDefinition TGWin32VirtualGLProxy.cxx:51; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; RooStats::PdfProposalPdfProposal is a concrete implementation of the ProposalFunction interface.Definition PdfProposal.h:30; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; PdfProposal currently uses a fixed cache size. Adaptive caching methods are in the works for future versions. ; Definition at line",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1PdfProposal.html:552,config,configure,552,doc/master/classRooStats_1_1PdfProposal.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1PdfProposal.html,2,['config'],['configure']
Modifiability,". ROOT: RooStats::SamplingSummary Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; RooStats::SamplingSummary Class Reference. . Definition at line 116 of file ConfidenceBelt.h. Public Member Functions;  SamplingSummary ();  ;  SamplingSummary (AcceptanceRegion &ar);  ; void AddAcceptanceRegion (AcceptanceRegion &ar);  ; AcceptanceRegion & GetAcceptanceRegion (Int_t index=0);  ; Int_t GetParameterPointIndex ();  ; SamplingDistribution * GetSamplingDistribution ();  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1SamplingSummary.html:850,inherit,inherited,850,doc/master/classRooStats_1_1SamplingSummary.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1SamplingSummary.html,1,['inherit'],['inherited']
Modifiability,". ROOT: RooStats::SamplingSummaryLookup Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Types |; Private Attributes |; List of all members ; RooStats::SamplingSummaryLookup Class Reference. . Definition at line 30 of file ConfidenceBelt.h. Public Member Functions;  SamplingSummaryLookup ();  ; void Add (double cl, double leftside);  ; double GetConfidenceLevel (Int_t index);  ; double GetLeftSideTailFraction (Int_t index);  ; Int_t GetLookupIndex (double cl, double leftside);  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t Dista",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1SamplingSummaryLookup.html:828,inherit,inherited,828,doc/master/classRooStats_1_1SamplingSummaryLookup.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1SamplingSummaryLookup.html,1,['inherit'],['inherited']
Modifiability,". ROOT: RooStats::ToyMCPayload Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; RooStats::ToyMCPayload Class Reference. . Definition at line 70 of file ToyMCStudy.h. Public Member Functions;  ToyMCPayload ();  ;  ToyMCPayload (RooDataSet *sd);  ; RooDataSet * GetSamplingDistributions ();  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1ToyMCPayload.html:671,inherit,inherited,671,doc/master/classRooStats_1_1ToyMCPayload.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1ToyMCPayload.html,1,['inherit'],['inherited']
Modifiability,". ROOT: RooTFnPdfBinding Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; RooTFnPdfBinding Class ReferenceRooFit » RooFit. . Definition at line 20 of file RooTFnPdfBinding.h. Public Member Functions;  RooTFnPdfBinding ()=default;  ;  RooTFnPdfBinding (const char *name, const char *title, TF1 *func, const RooArgList &list);  ;  RooTFnPdfBinding (const RooTFnPdfBinding &other, const char *name=nullptr);  ; TObject * clone (const char *newname) const override;  ; TClass * IsA () const override;  ; void printArgs (std::ostream &os) const override;  Print object arguments, ie its proxies. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsPdf;  RooAbsPdf ();  Default constructor. ;  ;  RooAbsPdf (const char *name, const char *title, double minVal, double maxVal);  Constructor with name, title, and plot range. ;  ;  RooAbsPdf (const char *name, const char *title=nullptr);  Constructor with name and title only. ;  ;  ~RooAbsPdf () override;  Destructor. ;  ; double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Analytical integral with normalization (see RooAbsReal::analyticalIntegralWN() for further information). ;  ; virtual RooAbsGenContext * autoGenContext (const RooArgSet &vars, const RooDataSet *prototype=nullptr, const RooArgSet *auxProto=nullptr, bool verbose=false, bool autoBinned=true, const char *binnedTag="""") const;  ; virtual RooAbsGenContext * binnedGenContext (const RooArgSet &vars, bool verbose=false) const;  Return a binned generator context. ;  ; bool canBeExtended () const;  If true, PDF can provide extended likelihood term. ;  ; std::unique_ptr< RooA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooTFnPdfBinding.html:972,inherit,inherited,972,doc/master/classRooTFnPdfBinding.html,https://root.cern,https://root.cern/doc/master/classRooTFnPdfBinding.html,1,['inherit'],['inherited']
Modifiability,". ROOT: RooTable Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; RooTable Class ReferenceabstractRooFit » RooFit Core. ; Abstract interface for table objects. ; Table objects are the category equivalent of RooPlot objects (which are used for real-valued objects) ; Definition at line 32 of file RooTable.h. Public Member Functions;  RooTable ();  ;  RooTable (const char *name, const char *title);  ;  RooTable (const RooTable &other)=default;  ; virtual void fill (RooAbsCategory &cat, double weight=1.0)=0;  ; TClass * IsA () const override;  ; virtual bool isIdentical (const RooTable &other, bool verbose)=0;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooTable.html:939,inherit,inherited,939,doc/master/classRooTable.html,https://root.cern,https://root.cern/doc/master/classRooTable.html,1,['inherit'],['inherited']
Modifiability,". ROOT: RooTemplateProxy< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; RooTemplateProxy< T > Class Template ReferenceRooFit » RooFit Core. ; template<class T>; class RooTemplateProxy< T >; Introduction; A RooTemplateProxy is used to hold references to other RooFit objects in an expression tree. A RooGaussian(..., x, mean, sigma) can e.g. store references to x, mean, sigma as RooTemplateProxy<RooAbsReal> _x;; RooTemplateProxy<RooAbsReal> _mean;; RooTemplateProxy<RooAbsReal> _sigma;; RooTemplateProxyDefinition RooTemplateProxy.h:152; Now, the values of these three can be accessed, and the template argument ensures that only objects that evaluate to real numbers (RooAbsReal) can be stored in such a proxy. These can e.g. be variables, PDFs and functions. To store an object that's a RooCategory, one would, for example, use RooTemplateProxy<RooCategory> _category;; Since ROOT 6.22, the proxy can be used like a pointer to an instance of the template argument. For this, it provides operator* and operator->, e.g. double oldValue = _x->getVal(normalisationSet);; *_x = 17.;; RooTemplateProxy's base class RooArgProxy registers the proxied objects as ""servers"" of the object that holds the proxy. When the value of the proxied object is changed, the owner is notified, and can recalculate its own value. Renaming or exchanging objects that serve values to the owner of the proxy is handled automatically. Modernisation of proxies in ROOT 6.22; In ROOT 6.22, the classes RooRealProxy and RooCategoryProxy were replaced by RooTemplateProxy<class T>.; Two typedefs have been defined for backward compatibility:; RooRealProxy = RooTemplateProxy<RooAbsReal>. Any generic object that converts to a real value.; RooCategoryProxy = RooTemplateProxy<RooAbsCategory>. Any category object. To modernise a class, on",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooTemplateProxy.html:923,variab,variables,923,doc/master/classRooTemplateProxy.html,https://root.cern,https://root.cern/doc/master/classRooTemplateProxy.html,1,['variab'],['variables']
Modifiability,". ROOT: RooTreeData Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; RooTreeData Class Reference. . Definition at line 25 of file RooTreeData.h. Public Member Functions; const TTree * GetTree () const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class RooAbsData. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsData;  RooAbsData ();  Default constructor. ;  ;  RooAbsData (const RooAbsData &other, const char *newname=nullptr);  Copy constructor. ;  ;  RooAbsData (RooStringView name, RooStringView title, const RooArgSet &vars, RooAbsDataStore *store=nullptr);  Constructor from a set of variables. ;  ;  ~RooAbsData () override;  Destructor. ;  ; virtual void add (const RooArgSet &row, double weight=1)=0;  ; void addOwnedComponent (const char *idxlabel, RooAbsData &data);  ; void attachBuffers (const RooArgSet &extObs);  ; bool canSplitFast () const;  ; virtual bool changeObservableName (const char *from, const char *to);  ; void checkInit () const;  ; virtual void convertToTreeStore ();  Convert vector-based storage to tree-based storage. ;  ; void convertToVectorStore ();  Convert tree-based storage to vector-based storage. ;  ; double correlation (RooRealVar &x, RooRealVar &y, const char *cutSpec=nullptr, const char *cutRange=nullptr) const;  ; RooFit::OwningPtr< TMatrixDSym > correlationMatrix (const char *cutSpec=nullptr, const char *cutRange=nullptr) const;  ; RooFit::OwningPtr< TMatrixDSym > correlationMatrix (const RooArgList &vars, const char *cutSpec=nullptr, const char *cutRange=nullptr) const;  ; double covariance (RooRealVar &x, RooRealVar &y, const char *cutSpec=nullptr, const char *cutRange=nullptr) const;  ; RooFit::OwningPtr< TMatrixDSym > covarianceMatrix (const c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooTreeData.html:587,inherit,inherited,587,doc/master/classRooTreeData.html,https://root.cern,https://root.cern/doc/master/classRooTreeData.html,2,"['inherit', 'variab']","['inherited', 'variables']"
Modifiability,". ROOT: RooUnblindUniform Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; RooUnblindUniform Class ReferenceRooFit » RooFit. ; Implementation of BlindTools' offset blinding method. ; A RooUnblindUniform object is a real-valued function object, constructed from a parameter to be blinded and a set of config parameters to change the blinding method. When supplied to a PDF in lieu of the regular parameter, a transformation will be applied such that the likelihood is computed with the actual value of the parameter, but RooFit (, the user, MINUIT) see only the transformed (blinded) value. The transformation is chosen such that the error of the blind parameter is identical to that of the original parameter. ; Definition at line 23 of file RooUnblindUniform.h. Public Member Functions;  RooUnblindUniform ()=default;  ;  RooUnblindUniform (const char *name, const char *title, const char *blindString, double scale, RooAbsReal &blindValue);  Constructor from a given RooAbsReal (to hold the blinded value) and a set of blinding parameters. ;  ;  RooUnblindUniform (const RooUnblindUniform &other, const char *name=nullptr);  Copy constructor. ;  ; TObject * clone (const char *newname) const override;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsHiddenReal;  RooAbsHiddenReal ();  ;  RooAbsHiddenReal (const char *name, const char *title, const char *unit="""");  Constructor. ;  ;  RooAbsHiddenReal (const char *name, const char *title, RooAbsCategory &blindState, const char *unit="""");  Constructor. ;  ;  RooAbsHiddenReal (const RooAbsHiddenReal &other, const char *name=nullptr);  Copy constructor. ;  ; do",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooUnblindUniform.html:509,config,config,509,doc/master/classRooUnblindUniform.html,https://root.cern,https://root.cern/doc/master/classRooUnblindUniform.html,1,['config'],['config']
Modifiability,". ROOT: RooWorkspace Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; Static Private Attributes |; Friends |; List of all members ; RooWorkspace Class ReferenceRooFit » RooFit Core. ; Persistable container for RooFit projects. ; A workspace can contain and own variables, p.d.f.s, functions and datasets. All objects that live in the workspace are owned by the workspace. The import() method enforces consistency of objects upon insertion into the workspace (e.g. no duplicate object with the same name are allowed) and makes sure all objects in the workspace are connected to each other. Easy accessor methods like pdf(), var() and data() allow to refer to the contents of the workspace by object name. The entire RooWorkspace can be saved into a ROOT TFile and organises the consistent streaming of its contents without duplication. If a RooWorkspace contains custom classes, i.e. classes not in the ROOT distribution, portability of workspaces can be enhanced by storing the source code of those classes in the workspace as well. This process is also organized by the workspace through the importClassCode() method. Seemingly random crashes when reading large workspaces; When reading or loading workspaces with deeply nested PDFs, one can encounter ouf-of-memory errors if the stack size is too small. This manifests in crashes at seemingly random locations, or in the process silently ending. Unfortunately, ROOT neither recover from this situation, nor warn or give useful instructions. When suspecting to have run out of stack memory, check ulimit -s; and try reading again. PyROOT; The RooWorkspace::import function can't be used in PyROOT because import is a reserved python keyword. For this reason, an alternative with a capitalized name is provided: workspace.Import(x). Definition at line 43 of",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooWorkspace.html:455,variab,variables,455,doc/master/classRooWorkspace.html,https://root.cern,https://root.cern/doc/master/classRooWorkspace.html,1,['variab'],['variables']
Modifiability,". ROOT: TARInterruptHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TARInterruptHandler Class Reference. . Definition at line 123 of file TApplicationRemote.h. Public Member Functions;  TARInterruptHandler (TApplicationRemote *r);  ; Bool_t Notify () override;  TApplicationRemote interrupt handler. ;  ;  Public Member Functions inherited from TSignalHandler;  TSignalHandler (ESignals sig, Bool_t sync=kTRUE);  Create signal event handler. ;  ; virtual ~TSignalHandler ();  ; void Add () override;  Add signal handler to system signal handler list. ;  ; void Delay ();  ; ESignals GetSignal () const;  ; void HandleDelayedSignal ();  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove signal handler from system signal handler list. ;  ; void SetSignal (ESignals sig);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTARInterruptHandler.html:482,inherit,inherited,482,doc/master/classTARInterruptHandler.html,https://root.cern,https://root.cern/doc/master/classTARInterruptHandler.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TASImagePlugin Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TASImagePlugin Class Reference. . Definition at line 26 of file TASImagePlugin.h. Public Member Functions;  TASImagePlugin (const char *ext);  ;  ~TASImagePlugin () override;  ; virtual Bool_t ASImage2File (ASImage *);  ; virtual ASImage * File2ASImage (const char *);  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; unsigned char * ReadFile (const char *, UInt_t &, UInt_t &) override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t WriteFile (const char *, unsigned char *, UInt_t, UInt_t) override;  ;  Public Member Functions inherited from TImagePlugin;  TImagePlugin (const char *ext);  ;  ~TImagePlugin () override;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTASImagePlugin.html:925,inherit,inherited,925,doc/master/classTASImagePlugin.html,https://root.cern,https://root.cern/doc/master/classTASImagePlugin.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TASInputHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TASInputHandler Class Reference. . Definition at line 115 of file TApplicationServer.cxx. Public Member Functions;  TASInputHandler (TApplicationServer *s, Int_t fd);  ; Bool_t Notify () override;  Handle this input. ;  ; Bool_t ReadNotify () override;  Notify when something can be read from the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TFileHandler;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system file handler list. ;  ; int GetFd () const;  ; virtual Bool_t HasReadInterest ();  True if handler is interested in read events. ;  ; virtual Bool_t HasWriteInterest ();  True if handler is interested in write events. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsReadReady () const;  ; virtual Bool_t IsWriteReady () const;  ; Bool_t Notify () override;  Notify when event occurred on descriptor associated with this handler. ;  ; void Remove () override;  Remove file event handler from system file handler list. ;  ; virtual void ResetReadyMask ();  ; void SetFd (int fd);  ; virtual void SetInterest (Int_t mask);  Set interest mask to 'mask'. ;  ; virtual void SetReadReady ();  ; virtual void SetWriteReady ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t WriteNotify ();  Notify when something can be written to the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTASInputHandler.html:584,inherit,inherited,584,doc/master/classTASInputHandler.html,https://root.cern,https://root.cern/doc/master/classTASInputHandler.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TASInterruptHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TASInterruptHandler Class Reference. . Definition at line 72 of file TApplicationServer.cxx. Public Member Functions;  TASInterruptHandler (TApplicationServer *s);  ; Bool_t Notify () override;  Handle this interrupt. ;  ;  Public Member Functions inherited from TSignalHandler;  TSignalHandler (ESignals sig, Bool_t sync=kTRUE);  Create signal event handler. ;  ; virtual ~TSignalHandler ();  ; void Add () override;  Add signal handler to system signal handler list. ;  ; void Delay ();  ; ESignals GetSignal () const;  ; void HandleDelayedSignal ();  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove signal handler from system signal handler list. ;  ; void SetSignal (ESignals sig);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *metho",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTASInterruptHandler.html:468,inherit,inherited,468,doc/master/classTASInterruptHandler.html,https://root.cern,https://root.cern/doc/master/classTASInterruptHandler.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TASLogHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TASLogHandler Class Reference. . Definition at line 101 of file TApplicationServer.h. Public Types; enum  EStatusBits { kFileIsPipe = (1ULL << ( 23 )); };  ;  Public Types inherited from TFileHandler; enum  { kRead = 1; , kWrite = 2; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TASLogHandler (const char *cmd, TSocket *s, const char *pfx="""");  Execute 'cmd' in a pipe and handle output messages from the related file. ;  ;  TASLogHandler (FILE *f, TSocket *s, const char *pfx="""");  Handle available message from the open file 'f'. ;  ; virtual ~TASLogHandler ();  Handle available message in the open file. ;  ; Bool_t IsValid ();  ; Bool_t Notify () override;  Handle available message in the open file. ;  ; Bool_t ReadNotify () override;  Notify when something can be read from the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TFileHandler;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system file handler list. ;  ; int GetF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTASLogHandler.html:465,inherit,inherited,465,doc/master/classTASLogHandler.html,https://root.cern,https://root.cern/doc/master/classTASLogHandler.html,2,['inherit'],['inherited']
Modifiability,". ROOT: TASPaletteEditor::LimitLine Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; TASPaletteEditor::LimitLine Class Reference. . Definition at line 52 of file TASPaletteEditor.h. Public Member Functions;  LimitLine (Coord_t x, Coord_t y1, Coord_t y2, TASPaletteEditor *gui);  The blue limit line in the pixel value histogram. ;  ; void Paint (Option_t *option="""") override;  Paint the limit lines. ;  ;  Public Member Functions inherited from TLine;  TLine ();  ;  TLine (const TLine &line);  Line copy constructor. ;  ;  TLine (Double_t x1, Double_t y1, Double_t x2, Double_t y2);  Line normal constructor. ;  ;  ~TLine () override=default;  ; void Copy (TObject &line) const override;  Copy this line to line. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a line. ;  ; virtual TLine * DrawLine (Double_t x1, Double_t y1, Double_t x2, Double_t y2);  Draw this line with new coordinates. ;  ; virtual TLine * DrawLineNDC (Double_t x1, Double_t y1, Double_t x2, Double_t y2);  Draw this line with new coordinates in NDC. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; Rectangle_t GetBBox () override;  Return the bounding Box of the Line. ;  ; TPoint GetBBoxCenter () override;  Return the center of the BoundingBox as TPoint in pixels. ;  ; Double_t GetX1 () const;  ; Double_t GetX2 () const;  ; Double_t GetY1 () const;  ; Double_t GetY2 () const;  ; TClass * IsA () const override;  ; Bool_t IsHorizontal ();  Check whether this line is to be drawn horizontally. ;  ; Bool_t IsVertical ();  Check whether this line is to be drawn vertically. ;  ; void ls (Option_t *option="""") const override;  List this line with its attributes. ;  ; TLine & operator= (const TLine &src);  Assignment operator. ;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTASPaletteEditor_1_1LimitLine.html:604,inherit,inherited,604,doc/master/classTASPaletteEditor_1_1LimitLine.html,https://root.cern,https://root.cern/doc/master/classTASPaletteEditor_1_1LimitLine.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TASPaletteEditor::PaintPalette Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; List of all members ; TASPaletteEditor::PaintPalette Class Reference. . Definition at line 42 of file TASPaletteEditor.h. Public Member Functions;  PaintPalette (TImagePalette **palette, TAttImage *attImage);  ; void Paint (Option_t *option="""") override;  Actually paint the paletter. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTASPaletteEditor_1_1PaintPalette.html:526,inherit,inherited,526,doc/master/classTASPaletteEditor_1_1PaintPalette.html,https://root.cern,https://root.cern/doc/master/classTASPaletteEditor_1_1PaintPalette.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TASSigPipeHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TASSigPipeHandler Class Reference. . Definition at line 95 of file TApplicationServer.cxx. Public Member Functions;  TASSigPipeHandler (TApplicationServer *s);  ; Bool_t Notify () override;  Handle this signal. ;  ;  Public Member Functions inherited from TSignalHandler;  TSignalHandler (ESignals sig, Bool_t sync=kTRUE);  Create signal event handler. ;  ; virtual ~TSignalHandler ();  ; void Add () override;  Add signal handler to system signal handler list. ;  ; void Delay ();  ; ESignals GetSignal () const;  ; void HandleDelayedSignal ();  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove signal handler from system signal handler list. ;  ; void SetSignal (ESignals sig);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTASSigPipeHandler.html:459,inherit,inherited,459,doc/master/classTASSigPipeHandler.html,https://root.cern,https://root.cern/doc/master/classTASSigPipeHandler.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TApplication Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; Protected Attributes |; Static Protected Attributes |; Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TApplication Class ReferenceCore ROOT classes » Base ROOT classes. ; This class creates the ROOT Application Environment that interfaces to the windowing system eventloop and eventhandlers. ; This class must be instantiated exactly once in any given application. Normally the specific application class inherits from TApplication (see TRint). ; Definition at line 39 of file TApplication.h. Public Types; enum  EExitOnException { kDontExit; , kExit; , kAbort; };  ; enum  EFileBits { kExpression = (1ULL << ( 14 )); };  ; enum  EStatusBits { kProcessRemotely = (1ULL << ( 15 )); , kDefaultApplication = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TApplication (const char *appClassName, Int_t *argc, char **argv, void *options=nullptr, Int_t numOptions=0);  Create an application environment. ;  ; virtual ~TApplication ();  TApplication dtor. ;  ; virtual const char * ApplicationName () const;  ; Int_t Argc () co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTApplication.html:745,inherit,inherits,745,doc/master/classTApplication.html,https://root.cern,https://root.cern/doc/master/classTApplication.html,1,['inherit'],['inherits']
Modifiability,". ROOT: TApplicationRemote Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TApplicationRemote Class Reference. . Definition at line 43 of file TApplicationRemote.h. Classes; class  TARFileStat;  . Public Types; enum  ESendFileOpt { kAscii = 0x0; , kBinary = 0x1; , kForce = 0x2; };  ; enum  EStatusBits { kCollecting = (1ULL << ( 17 )); };  ;  Public Types inherited from TApplication; enum  EExitOnException { kDontExit; , kExit; , kAbort; };  ; enum  EFileBits { kExpression = (1ULL << ( 14 )); };  ; enum  EStatusBits { kProcessRemotely = (1ULL << ( 15 )); , kDefaultApplication = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TApplicationRemote (const char *url, Int_t debug=0, const char *script=nullptr);  Main constructor: start a remote session at 'url' accepting callbacks on local port 'port'; if port is already in use scan up to 'scan - 1' ports starting from port + 1, i.e. ;  ; virtual ~TApplicationRemote ();  Destructor. ;  ; const char * ApplicationName () const override;  ; void Browse (TBrowser *b) override;  Browse remote application (working directory and ROOT files). ;  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTApplicationRemote.html:619,inherit,inherited,619,doc/master/classTApplicationRemote.html,https://root.cern,https://root.cern/doc/master/classTApplicationRemote.html,2,['inherit'],['inherited']
Modifiability,". ROOT: TApplicationRemote::TARFileStat Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; TApplicationRemote::TARFileStat Class Reference. . Definition at line 57 of file TApplicationRemote.h. Public Member Functions;  TARFileStat (const char *fn, TMD5 *md5, Long_t mt);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTApplicationRemote_1_1TARFileStat.html:440,inherit,inherited,440,doc/master/classTApplicationRemote_1_1TARFileStat.html,https://root.cern,https://root.cern/doc/master/classTApplicationRemote_1_1TARFileStat.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TAttBBox2D Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TAttBBox2D Class ReferenceabstractCore ROOT classes » Base ROOT classes | Graphics » Graphics attributes. ; Abstract base class for elements drawn in the editor. ; Classes inheriting from TAttBBox2D implementing the TAttBBox2D virtual classes, and using TPad::ShowGuideLines in ExecuteEvent will automatically get the guide lines drawn when moved in the pad. All methods work with pixel coordinates. ; Definition at line 19 of file TAttBBox2D.h. Public Member Functions; virtual ~TAttBBox2D ();  ; virtual Rectangle_t GetBBox ()=0;  ; virtual TPoint GetBBoxCenter ()=0;  ; virtual TClass * IsA () const;  ; virtual void SetBBoxCenter (const TPoint &p)=0;  ; virtual void SetBBoxCenterX (const Int_t x)=0;  ; virtual void SetBBoxCenterY (const Int_t y)=0;  ; virtual void SetBBoxX1 (const Int_t x)=0;  ; virtual void SetBBoxX2 (const Int_t x)=0;  ; virtual void SetBBoxY1 (const Int_t y)=0;  ; virtual void SetBBoxY2 (const Int_t y)=0;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . #include <TAttBBox2D.h>. Inheritance diagram for TAttBBox2D:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ~TAttBBox2D(). TAttBBox2D::~TAttBBox2D ; (; ). virtual . Definition at line 30 of file TAttBBox2D.cxx. Member Function Documentation. ◆ Class(). static TClass * TAttBBox2D::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TAttBBox2D::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Vers",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAttBBox2D.html:395,inherit,inheriting,395,doc/master/classTAttBBox2D.html,https://root.cern,https://root.cern/doc/master/classTAttBBox2D.html,1,['inherit'],['inheriting']
Modifiability,". ROOT: TAttFill Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TAttFill Class ReferenceCore ROOT classes » Base ROOT classes | Graphics » Graphics attributes. ; Fill Area Attributes class. ; This class is used (in general by secondary inheritance) by many other classes (graphics, histograms). It holds all the fill area attributes. Fill Area attributes; Fill Area attributes are:. Fill Area color; Fill Area style. Fill Area color; The fill area color is a color index (integer) pointing in the ROOT color table. The fill area color of any class inheriting from TAttFill can be changed using the method SetFillColor and retrieved using the method GetFillColor. The following table shows the first 50 default colors. Color transparency; SetFillColorAlpha(), allows to set a transparent color. In the following example the fill color of the histogram histo is set to blue with an opacity of 35% (i.e. a transparency of 65%). (The color kBlue itself is internally stored as fully opaque.); histo->SetFillColorAlpha(kBlue, 0.35);; kBlue@ kBlueDefinition Rtypes.h:66; The transparency is available on all platforms when the flag OpenGL.CanvasPreferGL is set to 1 in $ROOTSYS/etc/system.rootrc, or on Mac with the Cocoa backend. On the file output it is visible with PDF, PNG, Gif, JPEG, SVG, TeX... but not PostScript.; Alternatively, you can call at the top of your script gSytle->SetCanvasPreferGL();. Or if you prefer to activate GL for a single canvas c, then use c->SetSupportGL(true);. The ROOT Color Wheel.; The wheel contains the recommended 216 colors to be used in web applications. The colors in the Color Wheel are created by TColor::CreateColorWheel.; Using this color set for your text, background or graphics will give your application a consistent appearance across different platforms and browsers.; Colors",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAttFill.html:417,inherit,inheritance,417,doc/master/classTAttFill.html,https://root.cern,https://root.cern/doc/master/classTAttFill.html,2,['inherit'],"['inheritance', 'inheriting']"
Modifiability,". ROOT: TAttImage Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TAttImage Class ReferenceGraphics » 2D Graphics » Basic graphics | Graphics » Graphics attributes. ; TImage attributes. ; Image attributes are:. Image Quality (see EImageQuality for the list of qualities); Compression defines the compression rate of the color data in the internal image structure. Speed and memory depends on this rate, but not the image display itself 0: no compression; 100: max compression; Radio Flag: kTRUE the x/y radio of the displayed image is always identical to the original image kFALSE the x and y size of the displayed image depends on the size of the pad; Palette: Defines the conversion from a pixel value to the screen color. This class is used (in general by secondary inheritance) by some other classes (image display). ; Definition at line 59 of file TAttImage.h. Public Types; enum  EImageQuality { ;   kImgDefault = -1; , kImgPoor = 0; , kImgFast = 1; , kImgGood = 2; , ;   kImgBest = 3. };  . Public Member Functions;  TAttImage ();  TAttImage default constructor. ;  ;  TAttImage (EImageQuality lquality, UInt_t lcompression, Bool_t constRatio);  TAttImage normal constructor. ;  ; virtual ~TAttImage ();  TAttImage destructor. ;  ; void Copy (TAttImage &attline) const;  Copy this image attributes to a new attimage. ;  ; virtual void EditorClosed ();  ; Bool_t GetConstRatio () const;  ; UInt_t GetImageCompression () const;  ; EImageQuality GetImageQuality () const;  ; virtual const TImagePalette & GetPalette () const;  ; virtual TClass * IsA () const;  ; Bool_t IsPaletteEnabled () const;  ; virtual void ResetAttImage (Option_t *option="""");  Reset this image attributes to default values. ;  ; virtual void SaveImageAttributes (std::ostream &out, const char *name, EImageQuality qualdef=kImgD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAttImage.html:965,inherit,inheritance,965,doc/master/classTAttImage.html,https://root.cern,https://root.cern/doc/master/classTAttImage.html,1,['inherit'],['inheritance']
Modifiability,". ROOT: TAttLine Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TAttLine Class ReferenceCore ROOT classes » Base ROOT classes | Graphics » Graphics attributes. ; Line Attributes class. ; This class is used (in general by secondary inheritance) by many other classes (graphics, histograms). It holds all the line attributes. Line attributes; Line attributes are:. Line Color; Line Width; Line Style. Line Color; The line color is a color index (integer) pointing in the ROOT color table. The line color of any class inheriting from TAttLine can be changed using the method SetLineColor and retrieved using the method GetLineColor. The following table shows the first 50 default colors. Color transparency; SetLineColorAlpha(), allows to set a transparent color. In the following example the line color of the histogram histo is set to blue with an opacity of 35% (i.e. a transparency of 65%). (The color kBlue itself is internally stored as fully opaque.); histo->SetLineColorAlpha(kBlue, 0.35);; kBlue@ kBlueDefinition Rtypes.h:66; The transparency is available on all platforms when the flag OpenGL.CanvasPreferGL is set to 1 in $ROOTSYS/etc/system.rootrc, or on Mac with the Cocoa backend. On the file output it is visible with PDF, PNG, Gif, JPEG, SVG, TeX ... but not PostScript.; Alternatively, you can call at the top of your script gSytle->SetCanvasPreferGL();. Or if you prefer to activate GL for a single canvas c, then use c->SetSupportGL(true);. Line Width; The line width is expressed in pixel units. The line width of any class inheriting from TAttLine can be changed using the method SetLineWidth and retrieved using the method GetLineWidth. The following picture shows the line widths from 1 to 10 pixels. Line Style; Line styles are identified via integer numbers. The line style of any class inheriting ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAttLine.html:412,inherit,inheritance,412,doc/master/classTAttLine.html,https://root.cern,https://root.cern/doc/master/classTAttLine.html,2,['inherit'],"['inheritance', 'inheriting']"
Modifiability,". ROOT: TAttMarker Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TAttMarker Class ReferenceCore ROOT classes » Base ROOT classes | Graphics » Graphics attributes. ; Marker Attributes class. ; This class is used (in general by secondary inheritance) by many other classes (graphics, histograms). It holds all the markers attributes. Marker attributes; The marker attributes are:. Marker color; Marker style; Marker line width. Marker size. Marker color; The marker color is a color index (integer) pointing in the ROOT color table. The marker color of any class inheriting from TAttMarker can be changed using the method SetMarkerColor and retrieved using the method GetMarkerColor. The following table shows the first 50 default colors. Color transparency; SetMarkerColorAlpha(), allows to set a transparent color. In the following example the marker color of the histogram histo is set to blue with an opacity of 35% (i.e. a transparency of 65%). (The color kBlue itself is internally stored as fully opaque.); histo->SetMarkerColorAlpha(kBlue, 0.35);; kBlue@ kBlueDefinition Rtypes.h:66; The transparency is available on all platforms when the flag OpenGL.CanvasPreferGL is set to 1 in $ROOTSYS/etc/system.rootrc, or on Mac with the Cocoa backend. On the file output it is visible with PDF, PNG, Gif, JPEG, SVG, TeX ... but not PostScript.; Alternatively, you can call at the top of your script gSytle->SetCanvasPreferGL();. Or if you prefer to activate GL for a single canvas c, then use c->SetSupportGL(true);. Marker style; The Marker style defines the markers' shape. The marker style of any class inheriting from TAttMarker can be changed using the method SetMarkerStyle and retrieved using the method GetMarkerStyle.; The following list gives the currently supported markers (screen and PostScript) style. Each ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAttMarker.html:418,inherit,inheritance,418,doc/master/classTAttMarker.html,https://root.cern,https://root.cern/doc/master/classTAttMarker.html,2,['inherit'],"['inheritance', 'inheriting']"
Modifiability,". ROOT: TAttText Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TAttText Class ReferenceCore ROOT classes » Base ROOT classes | Graphics » Graphics attributes. ; Text Attributes class. ; This class is used (in general by secondary inheritance) by many other classes (graphics, histograms). It holds all the text attributes. Text attributes; Text attributes are:. Text Alignment; Text Angle; Text Color; Text Size; Text Font and Precision; Font quality and speed; How to use True Type Fonts; List of the currently supported fonts. Text Alignment; The text alignment is an integer number (align) allowing to control the horizontal and vertical position of the text string with respect to the text position. The text alignment of any class inheriting from TAttText can be changed using the method SetTextAlign and retrieved using the method GetTextAlign.; align = 10*HorizontalAlign + VerticalAlign; For horizontal alignment the following convention applies:; 1=left adjusted, 2=centered, 3=right adjusted; For vertical alignment the following convention applies:; 1=bottom adjusted, 2=centered, 3=top adjusted; For example:; align = 11 = left adjusted and bottom adjusted; align = 32 = right adjusted and vertically centered; {; auto *Ta = new TCanvas(""Ta"",""Ta"",0,0,500,200);; Ta->Range(0,0,1,1);; ; TLine lv;; lv.SetLineStyle(3);; lv.SetLineColor(kBlue);; lv.DrawLine(0.33,0.0,0.33,1.0);; lv.DrawLine(0.6,0.165,1.,0.165);; lv.DrawLine(0.6,0.493,1.,0.493);; lv.DrawLine(0.6,0.823,1.,0.823);; ; // Horizontal alignment.; auto *th1 = new TText(0.33,0.165,""Left adjusted"");; th1->SetTextAlign(11); th1->SetTextSize(0.12);; th1->Draw();; ; auto *th2 = new TText(0.33,0.493,""Center adjusted"");; th2->SetTextAlign(21); th2->SetTextSize(0.12);; th2->Draw();; ; auto *th3 = new TText(0.33,0.823,""Right adjusted"");; th3->SetTextAli",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAttText.html:412,inherit,inheritance,412,doc/master/classTAttText.html,https://root.cern,https://root.cern/doc/master/classTAttText.html,2,['inherit'],"['inheritance', 'inheriting']"
Modifiability,". ROOT: TAuthenticate Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Static Private Member Functions |; Private Attributes |; Static Private Attributes |; Friends |; List of all members ; TAuthenticate Class Reference. . Definition at line 53 of file TAuthenticate.h. Public Types; enum  ESecurity { ;   kClear; , kUnsupported; , kKrb5; , kGlobus; , ;   kSSH; , kRfio. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TAuthenticate (TSocket *sock, const char *remote, const char *proto, const char *user="""");  Create authentication object. ;  ; virtual ~TAuthenticate ();  ; Bool_t Authenticate ();  Authenticate to remote rootd or proofd server. ;  ; Int_t AuthExists (TString User, Int_t method, const char *Options, Int_t *Message, Int_t *Rflag, CheckSecCtx_t funcheck);  Check if we have a valid established sec context in memory Retrieves relevant info and negotiates with server. ;  ; void CatchTimeOut ();  Called in connection with a timer timeout. ;  ; Bool_t CheckNetrc (TString &user, TString &passwd);  Try to get user name and passwd from the ~/.rootnetrc or ~/.netrc files. ;  ; Bool_t CheckNetrc (TString &user, TString &passwd, Bool_t &pwhash, Bool_t srppwd);  Try to get user name and",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAuthenticate.html:568,inherit,inherited,568,doc/master/classTAuthenticate.html,https://root.cern,https://root.cern/doc/master/classTAuthenticate.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TAutoBinVal Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TAutoBinVal Class Reference. . Definition at line 86 of file TProofPlayer.cxx. Public Member Functions;  TAutoBinVal (const char *name, Double_t xmin, Double_t xmax, Double_t ymin, Double_t ymax, Double_t zmin, Double_t zmax);  ; void GetAll (Double_t &xmin, Double_t &xmax, Double_t &ymin, Double_t &ymax, Double_t &zmin, Double_t &zmax);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAutoBinVal.html:580,inherit,inherited,580,doc/master/classTAutoBinVal.html,https://root.cern,https://root.cern/doc/master/classTAutoBinVal.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TAxis Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Types |; Private Member Functions |; Private Attributes |; List of all members ; TAxis Class ReferenceHistogram Library » Histogram classes. ; Class to manage histogram axis. ; This class manages histogram axis. It is referenced by TH1 and TGraph. To make a graphical representation of an histogram axis, this class references the TGaxis class. TAxis supports axis with fixed or variable bin sizes. Labels may be associated to individual bins. See examples of various axis representations drawn by class TGaxis. ; Definition at line 31 of file TAxis.h. Public Types; enum  EStatusBits { ;   kDecimals = (1ULL << ( 7 )); , kTickPlus = (1ULL << ( 9 )); , kTickMinus = (1ULL << ( 10 )); , kAxisRange = (1ULL << ( 11 )); , ;   kCenterTitle = (1ULL << ( 12 )); , kCenterLabels = (1ULL << ( 14 )); , kRotateTitle = (1ULL << ( 15 )); , kPalette = (1ULL << ( 16 )); , ;   kNoExponent = (1ULL << ( 17 )); , kLabelsHori = (1ULL << ( 18 )); , kLabelsVert = (1ULL << ( 19 )); , kLabelsDown = (1ULL << ( 20 )); , ;   kLabelsUp = (1ULL << ( 21 )); , kIsInteger = (1ULL << ( 22 )); , kMoreLogLabels = (1ULL << ( 23 )). };  TAxis status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Publ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAxis.html:599,variab,variable,599,doc/master/classTAxis.html,https://root.cern,https://root.cern/doc/master/classTAxis.html,1,['variab'],['variable']
Modifiability,". ROOT: TBackCompFitter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; TBackCompFitter Class ReferenceHistogram Library. ; Backward compatible implementation of TVirtualFitter. ; Backward compatible implementation of TVirtualFitter using the class ROOT::Fit::Fitter. This class is created after fitting an histogram (TH1), TGraph or TTree and provides in addition to the methods of the TVirtualFitter hooks to access the fit result class (ROOT::Fit::FitResult), the fit configuration (ROOT::Fit::FitConfig) or the fit data (ROOT::Fit::FitData) using; TBackCompFitter * fitter = (TBackCompFitter *) TVirtualFitter::GetFitter();; ROOT::Fit::FitResult & result = fitter->GetFitResult();; result.Print(std::cout);; resultOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t resultDefinition TGWin32VirtualXProxy.cxx:174; ROOT::Fit::FitResultclass containing the result of the fit and all the related information (fitted parameter values,...Definition FitResult.h:47; TBackCompFitterBackward compatible implementation of TVirtualFitter.Definition TBackCompFitter.h:37; TBackCompFitter::GetFitResultconst ROOT::Fit::FitResult & GetFitResult() constGet reference to Fit Result object (NOTE: it will be invalid when class is deleted)Definition TBackCompFitter.h:94; TVirtualFitter::GetFitterstatic TVirtualFitter * GetFitter()static: return the current FitterDefinition TVirtualFitter.cxx:209; Methods for getting the confidence level or contours are also provided. Note that after a new calls to TH1::Fit (or similar) the class will be deleted and all reference to the FitR",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBackCompFitter.html:695,config,configuration,695,doc/master/classTBackCompFitter.html,https://root.cern,https://root.cern/doc/master/classTBackCompFitter.html,1,['config'],['configuration']
Modifiability,". ROOT: TBaseClass Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Types |; Private Member Functions |; Private Attributes |; List of all members ; TBaseClass Class Reference. ; Each class (see TClass) has a linked list of its base class(es). ; This class describes one single base class. The base class info is obtained via the CINT api. see class TCling.; The base class information is used a.o. in to find all inherited methods. ; Definition at line 33 of file TBaseClass.h. Public Member Functions;  TBaseClass (BaseClassInfo_t *info=nullptr, TClass *cl=nullptr);  Default TBaseClass ctor. ;  ; virtual ~TBaseClass ();  TBaseClass dtor deletes adopted CINT BaseClassInfo object. ;  ; void Browse (TBrowser *b) override;  Called by the browser, to browse a baseclass. ;  ; TClass * GetClassPointer (Bool_t load=kTRUE);  Get pointer to the base class TClass. ;  ; Int_t GetDelta ();  Get offset from ""this"" to part of base class. ;  ; const char * GetTitle () const override;  Get base class description (comment). ;  ; TClass * IsA () const override;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; ROOT::ESTLType IsSTLContainer ();  Return which type (if any) of STL container the data member is. ;  ; Long_t Property () const override;  Get property description word. For meaning of bits see EProperty. ;  ; void SetClass (TClass *cl);  ; void Streamer (TBuffer &) override;  Stream an object of TBaseClass. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TDictionary;  TDictionary ();  ;  TDictionary (const char *name);  ;  TDictionary (const TDictionary &dict);  ; virtual ~TDictionary ();  ; void CreateAttributeMap ();  ; TDictAttributeMap * GetAttributeMap () const;  ; TClass * IsA () con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBaseClass.html:555,inherit,inherited,555,doc/master/classTBaseClass.html,https://root.cern,https://root.cern/doc/master/classTBaseClass.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TBasket Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Static Public Attributes |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; Friends |; List of all members ; TBasket Class ReferenceTree Library. ; Manages buffers for branches of a Tree. ; See picture in TTree. ; Definition at line 34 of file TBasket.h. Public Types; enum class  EIOBits : Char_t { kGenerateOffsetMap = (1ULL << ( 0 )); , kSupported = kGenerateOffsetMap; };  ; enum class  EUnsupportedIOBits : Char_t { kUnsupported = 0; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TBasket ();  Default constructor. ;  ;  TBasket (const char *name, const char *title, TBranch *branch);  Basket normal constructor, used during writing. ;  ;  TBasket (TDirectory *motherDir);  Constructor used during reading. ;  ;  ~TBasket () override;  Basket destructor. ;  ; virtual void AdjustSize (Int_t newsize);  Increase the size of the current fBuffer up to newsize. ;  ; Long64_t CopyTo (TFile *to);  Copy the basket of this branch onto the file to. ;  ; virtual void DeleteEntryOffset ();  Delete fEntryOffset array. ;  ; virtual Int_t DropBuffers ();  Drop buffers of this basket if it is not the current basket. ;  ; TBranch * Get",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBasket.html:707,inherit,inherited,707,doc/master/classTBasket.html,https://root.cern,https://root.cern/doc/master/classTBasket.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TBinomialEfficiencyFitter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TBinomialEfficiencyFitter Class ReferenceHistogram Library. ; Binomial fitter for the division of two histograms. ; Use when you need to calculate a selection's efficiency from two histograms, one containing all entries, and one containing the subset of these entries that pass the selection, and when you have a parametrization available for the efficiency as a function of the variable(s) under consideration.; A very common problem when estimating efficiencies is that of error estimation: when no other information is available than the total number of events N and the selected number n, the best estimate for the selection efficiency p is n/N. Standard binomial statistics dictates that the uncertainty (this presupposes sufficiently high statistics that an approximation by a normal distribution is reasonable) on p, given N, is ; \[; \sqrt{\frac{p(1-p)}{N}}; \]. However, when p is estimated as n/N, fluctuations from the true p to its estimate become important, especially for low numbers of events, and giving rise to biased results.; When fitting a parametrized efficiency, these problems can largely be overcome, as a hypothesized true efficiency is available by construction. Even so, simply using the corresponding uncertainty still presupposes that Gaussian errors yields a reasonable approximation. When using, instead of binned efficiency histograms, the original numerator and denominator histograms, a binned maximum likelihood can be constructed as the product of bin-by-bin binomial probabilities to select n out of N events. Assuming that a correct parametrization of the efficiency is provided, this construction in general yields less biased results (and is much less sensitive to binnin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBinomialEfficiencyFitter.html:669,variab,variable,669,doc/master/classTBinomialEfficiencyFitter.html,https://root.cern,https://root.cern/doc/master/classTBinomialEfficiencyFitter.html,1,['variab'],['variable']
Modifiability,". ROOT: TBits Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TBits Class ReferenceCore ROOT classes » Containers. ; Container of bits. ; This class provides a simple container of bits. Each bit can be set and tested via the functions SetBitNumber and TestBitNumber.; The default value of all bits is kFALSE. The size of the container is automatically extended when a bit number is either set or tested. To reduce the memory size of the container use the Compact function, this will discard the memory occupied by the upper bits that are 0. ; Definition at line 26 of file TBits.h. Classes; class  TReference;  . Public Member Functions;  TBits (const TBits &);  TBits copy constructor. ;  ;  TBits (UInt_t nbits=8);  TBits constructor. All bits set to 0. ;  ; virtual ~TBits ();  TBits destructor. ;  ; void Clear (Option_t *option="""") override;  Clear the value. ;  ; void Compact ();  Reduce the storage used by the object to a minimun. ;  ; UInt_t CountBits (UInt_t startBit=0) const;  Return number of bits set to 1 starting at bit startBit. ;  ; UInt_t FirstNullBit (UInt_t startBit=0) const;  Return position of first null bit (starting from position 0 and up) ;  ; UInt_t FirstSetBit (UInt_t startBit=0) const;  Return position of first non null bit (starting from position 0 and up) ;  ; void Get (Char_t *array) const;  Copy all the byes. ;  ; void Get (Int_t *array) const;  ; void Get (Long64_t *array) const;  ; void Get (Short_t *array) const;  ; void Get (UChar_t *array) const;  ; void Get (UInt_t *array) const;  ; void Get (ULong64_t *array) const;  ; void Get (UShort_t *array) const;  ; UInt_t GetNbits () const;  ; UInt_t GetNbytes () const;  ; TClass * IsA () const override;  ; UInt_t LastNullBit (UInt_t startBit=999999999) const;  Return position of first",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBits.html:573,extend,extended,573,doc/master/classTBits.html,https://root.cern,https://root.cern/doc/master/classTBits.html,1,['extend'],['extended']
Modifiability,". ROOT: TBlinkTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TBlinkTimer Class Reference. . Definition at line 222 of file TGTextEntry.cxx. Public Member Functions;  TBlinkTimer (TGTextEntry *t, Long_t ms);  ; Bool_t Notify () override;  Notify when timer times out and reset the timer. ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Start (Long_t milliS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBlinkTimer.html:468,inherit,inherited,468,doc/master/classTBlinkTimer.html,https://root.cern,https://root.cern/doc/master/classTBlinkTimer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TBox Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Attributes |; List of all members ; TBox Class ReferenceGraphics » 2D Graphics » Basic graphics. ; Create a Box. ; A box is defined by :. Its bottom left coordinates x1,y1; Its top right coordinates x2,y2. A box has line attributes (see TAttLine) and fill area attributes (see TAttFill). ; Definition at line 22 of file TBox.h. Public Types; enum  { kCannotMove = (1ULL << ( 12 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TBox ();  Box default constructor. ;  ;  TBox (const TBox &box);  Box copy constructor. ;  ;  TBox (Double_t x1, Double_t y1, Double_t x2, Double_t y2);  Box standard constructor. ;  ;  ~TBox () override;  Box destructor. ;  ; void Copy (TObject &box) const override;  Copy a Box. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a box. ;  ; void Draw (Option_t *option="""") override;  Draw this box with its current attributes. ;  ; virtual TBox * DrawBox (Double_t x1, Double_t y1, Double_t x2, Double_t y2);  Draw this box with new coordinates. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one even",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBox.html:645,inherit,inherited,645,doc/master/classTBox.html,https://root.cern,https://root.cern/doc/master/classTBox.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TBranchElement Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; Static Private Member Functions |; Friends |; List of all members ; TBranchElement Class ReferenceTree Library. ; A Branch for the case of an object. ; Definition at line 39 of file TBranchElement.h. Public Types; enum  EBranchElementType { ;   kLeafNode = 0; , kBaseClassNode = 1; , kObjectNode = 2; , kClonesNode = 3; , ;   kSTLNode = 4; , kClonesMemberNode = 31; , kSTLMemberNode = 41. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TBranchElement ();  Default and I/O constructor. ;  ;  TBranchElement (TBranch *parent, const char *name, TClonesArray *clones, Int_t basketsize=32000, Int_t splitlevel=0, Int_t compress=ROOT::RCompressionSetting::EAlgorithm::kInherit);  Constructor when the branch object is a TClonesArray. ;  ;  TBranchElement (TBranch *parent, const char *name, TStreamerInfo *sinfo, Int_t id, char *pointer, Int_t basketsize=32000, Int_t splitlevel=0, Int_t btype=0);  Constructor when the branch object is not a TClonesArray nor an STL container. ;  ;  TBranchElement (TBranch *parent, const char *name, TVirtualCollectionProxy *co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBranchElement.html:731,inherit,inherited,731,doc/master/classTBranchElement.html,https://root.cern,https://root.cern/doc/master/classTBranchElement.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TBreakLineCom Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; TBreakLineCom Class Reference. . Definition at line 136 of file TGTextEdit.cxx. Public Member Functions;  TBreakLineCom (TGTextEdit *te);  ; Bool_t Notify () override;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ;  Public Member Functions inherited from TGTextEditCommand;  TGTextEditCommand (TGTextEdit *te);  ; void SetPos (TGLongPosition pos);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass ()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBreakLineCom.html:488,inherit,inherited,488,doc/master/classTBreakLineCom.html,https://root.cern,https://root.cern/doc/master/classTBreakLineCom.html,2,['inherit'],['inherited']
Modifiability,". ROOT: TBrowserObject Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TBrowserObject Class Reference. ; This class is designed to wrap a Foreign object in order to inject it into the Browse sub-system. ; Definition at line 80 of file TBrowser.cxx. Public Member Functions;  TBrowserObject (void *obj, TClass *cl, const char *brname);  ;  ~TBrowserObject ();  ; void Browse (TBrowser *b) override;  Browse object. May be overridden for another default action. ;  ; TClass * IsA () const override;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBrowserObject.html:811,inherit,inherited,811,doc/master/classTBrowserObject.html,https://root.cern,https://root.cern/doc/master/classTBrowserObject.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TBrowserPlugin Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; TBrowserPlugin Class ReferenceGUI » Low level GUI widgets. ; Helper class used to manage plugins (command or macro to be executed). ; Definition at line 35 of file TRootBrowser.h. Public Member Functions;  TBrowserPlugin (const char *name, const char *cmd="""", Int_t tab=1, Int_t sub=-1);  ;  ~TBrowserPlugin () override;  ; TClass * IsA () const override;  ; void SetCommand (const char *cmd);  ; void SetSubTab (Int_t sub);  ; void SetTab (Int_t tab);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBrowserPlugin.html:337,plugin,plugins,337,doc/master/classTBrowserPlugin.html,https://root.cern,https://root.cern/doc/master/classTBrowserPlugin.html,2,"['inherit', 'plugin']","['inherited', 'plugins']"
Modifiability,". ROOT: TBrowserTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; List of all members ; TBrowserTimer Class Reference. ; Called whenever timer times out. ; Definition at line 51 of file TBrowser.cxx. Public Member Functions;  TBrowserTimer (TBrowser *b, Long_t ms=1000);  ; Bool_t Notify () override;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBrowserTimer.html:557,inherit,inherited,557,doc/master/classTBrowserTimer.html,https://root.cern,https://root.cern/doc/master/classTBrowserTimer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TBtree Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TBtree Class ReferenceCore ROOT classes » Containers. ; B-tree class. ; TBtree inherits from the TSeqCollection ABC. B-tree Implementation notes; This implements B-trees with several refinements. Most of them can be found in Knuth Vol 3, but some were developed to adapt to restrictions imposed by C++. First, a restatement of Knuth's properties that a B-tree must satisfy, assuming we make the enhancement he suggests in the paragraph at the bottom of page 476. Instead of storing null pointers to non-existent nodes (which Knuth calls the leaves) we utilize the space to store keys. Therefore, what Knuth calls level (l-1) is the bottom of our tree, and we call the nodes at this level LeafNodes. Other nodes are called InnerNodes. The other enhancement we have adopted is in the paragraph at the bottom of page 477: overflow control.; The following are modifications of Knuth's properties on page 478:. Every InnerNode has at most Order keys, and at most Order+1 sub-trees.; Every LeafNode has at most 2*(Order+1) keys.; An InnerNode with k keys has k+1 sub-trees.; Every InnerNode that is not the root has at least InnerLowWaterMark keys.; Every LeafNode that is not the root has at least LeafLowWaterMark keys.; If the root is a LeafNode, it has at least one key.; If the root is an InnerNode, it has at least one key and two sub-trees.; All LeafNodes are the same distance from the root as all the other LeafNodes.; For InnerNode n with key n[i].key, then sub-tree n[i-1].tree contains all keys < n[i].key, and sub-tree n[i].tree contains all keys >= n[i].key.; Order is at least 3. The values of InnerLowWaterMark and LeafLowWaterMark may actually be set by the user w",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBtree.html:405,inherit,inherits,405,doc/master/classTBtree.html,https://root.cern,https://root.cern/doc/master/classTBtree.html,3,"['adapt', 'enhance', 'inherit']","['adapt', 'enhancement', 'inherits']"
Modifiability,". ROOT: TBuffer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Protected Attributes |; List of all members ; TBuffer Class ReferenceabstractCore ROOT classes » Base ROOT classes. ; Buffer base class used for serializing objects. ; Definition at line 43 of file TBuffer.h. Public Types; enum  { kInitialSize = 1024; , kMinimalSize = 128; };  ; enum  EMode { kRead = 0; , kWrite = 1; };  ; enum  EStatusBits { kIsOwner = (1ULL << ( 16 )); , kCannotHandleMemberWiseStreaming = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TBuffer (EMode mode);  Create an I/O buffer object. ;  ;  TBuffer (EMode mode, Int_t bufsiz);  Create an I/O buffer object. ;  ;  TBuffer (EMode mode, Int_t bufsiz, void *buf, Bool_t adopt=kTRUE, ReAllocCharFun_t reallocfunc=nullptr);  Create an I/O buffer object. ;  ; virtual ~TBuffer ();  Delete an I/O buffer object. ;  ; virtual Int_t ApplySequence (const TStreamerInfoActions::TActionSequence &sequence, void *object)=0;  ; virtual Int_t ApplySequence (const TStreamerInfoActions::TActionSequence &sequence, void *start_collection, void *end_collection)=0;  ; virtual Int_t ApplySequenceVecPtr (const TStreamerInfoActions::TActionSeq",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBuffer.html:712,inherit,inherited,712,doc/master/classTBuffer.html,https://root.cern,https://root.cern/doc/master/classTBuffer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TBufferFile Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Protected Attributes |; List of all members ; TBufferFile Class ReferenceInput/Output Library. ; The concrete implementation of TBuffer for writing/reading to/from a ROOT file or socket. ; Definition at line 47 of file TBufferFile.h. Public Types; enum  { kStreamedMemberWise = (1ULL << ( 14 )); };  ;  Public Types inherited from TBufferIO; enum  { kMapSize = 503; };  ; enum  EStatusBits { ;   kNotDecompressed = (1ULL << ( 15 )); , kTextBasedStreaming = (1ULL << ( 18 )); , kUser1 = (1ULL << ( 21 )); , kUser2 = (1ULL << ( 22 )); , ;   kUser3 = (1ULL << ( 23 )). };  ;  Public Types inherited from TBuffer; enum  { kInitialSize = 1024; , kMinimalSize = 128; };  ; enum  EMode { kRead = 0; , kWrite = 1; };  ; enum  EStatusBits { kIsOwner = (1ULL << ( 16 )); , kCannotHandleMemberWiseStreaming = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TBufferFile (TBuffer::EMode mode);  Create an I/O buffer object. ;  ;  TBufferFile (TBuffer::EMode mode, Int_t bufsiz);  Create an I/O buffer object. ;  ;  TBufferFile (TBuffer::EMode mode, Int_t bufsiz, void *buf, Bool_t adopt=kTRUE, ReAllocCharFu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferFile.html:583,inherit,inherited,583,doc/master/classTBufferFile.html,https://root.cern,https://root.cern/doc/master/classTBufferFile.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TCefTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; TCefTimer Class Reference. . Definition at line 33 of file RCefWebDisplayHandle.cxx. Public Member Functions;  TCefTimer (Long_t milliSec, Bool_t mode);  ; void Timeout () override;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Start (Long_t milliSec=-1, Bool_t singleShot=kFALSE);  Starts the timer with a milliSec ti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCefTimer.html:398,inherit,inherited,398,doc/master/classTCefTimer.html,https://root.cern,https://root.cern/doc/master/classTCefTimer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TClassTree Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TClassTree Class ReferenceGraphics » 2D Graphics » Graphics pad. ; Draw inheritance tree and their relations for a list of classes. ; The following options are supported; Direct inheritance (default); Multiple inheritance; Composition; References by data members and member functions; References from Code. The list of classes is specified:; either in the TClassTree constructor as a second argument; or the parameter to TClassTree::Draw. Note that the ClassTree viewer can also be started from the canvas pull down menu ""Classes"".; In the list of classes, class names are separated by a "":"" wildcarding is supported. The following formats are supported, eg in TClassTree::Draw; Draw(""ClassA""); Draw inheritance tree for ClassA; Show all classes referenced by ClassA. Draw(""*ClassB""); Draw inheritance tree for ClassB and all the classes deriving from ClassB. Draw("">ClassC""); Draw inheritance tree for ClassC; Show classes referencing ClassC. Draw(""ClassD<""); Draw inheritance tree for ClassD; Show classes referenced by ClassD; Show all classes referencing ClassD. Draw(""Cla*""); Draw inheritance tree for all classes with name starting with ""Cla""; Show classes referenced by these classes. Draw(""ClassA:ClassB<""); Draw inheritance tree for ClassA; Show all classes referenced by ClassA; Draw inheritance tree for ClassB; Show classes referenced by ClassB; Show all classes referencing ClassB. Example: Draw(""TTree<""); Draw inheritance tree for the Root class TTree; Show all classes referenced by TTree; Show all classes using TTree. By default, only direct inheritance is drawn. Use TClassTree::ShowLinks(option) to show additional references; option = ""H"" to show links to embedded classes; option = ""M"" to show multiple",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClassTree.html:349,inherit,inheritance,349,doc/master/classTClassTree.html,https://root.cern,https://root.cern/doc/master/classTClassTree.html,4,['inherit'],['inheritance']
Modifiability,". ROOT: TCollection Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; Static Private Attributes |; List of all members ; TCollection Class ReferenceabstractCore ROOT classes » Containers. ; Collection abstract base class. ; This class describes the base protocol all collection classes have to implement. The ROOT collection classes always store pointers to objects that inherit from TObject. They never adopt the objects. Therefore, it is the user's responsibility to take care of deleting the actual objects once they are not needed anymore. In exceptional cases, when the user is 100% sure nothing else is referencing the objects in the collection, one can delete all objects and the collection at the same time using the Delete() function.; Collections can be iterated using an iterator object (see TIterator). Depending on the concrete collection class there may be some additional methods of iterating. See the respective classes.; TCollection inherits from TObject since we want to be able to have collections of collections.; In a later release the collections may become templatized. ; Definition at line 65 of file TCollection.h. Public Types; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCann",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCollection.html:620,inherit,inherit,620,doc/master/classTCollection.html,https://root.cern,https://root.cern/doc/master/classTCollection.html,1,['inherit'],['inherit']
Modifiability,". ROOT: TCollection Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; Static Private Attributes |; List of all members ; TCollection Class ReferenceabstractCore ROOT classes » Containers. ; Collection abstract base class. ; This class describes the base protocol all collection classes have to implement. The ROOT collection classes always store pointers to objects that inherit from TObject. They never adopt the objects. Therefore, it is the user's responsibility to take care of deleting the actual objects once they are not needed anymore. In exceptional cases, when the user is 100% sure nothing else is referencing the objects in the collection, one can delete all objects and the collection at the same time using the Delete() function.; Collections can be iterated using an iterator object (see TIterator). Depending on the concrete collection class there may be some additional methods of iterating. See the respective classes.; TCollection inherits from TObject since we want to be able to have collections of collections.; In a later release the collections may become templatized. ; Definition at line 65 of file TCollection.h. Public Types; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCanno",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTCollection.html:619,inherit,inherit,619,doc/v632/classTCollection.html,https://root.cern,https://root.cern/doc/v632/classTCollection.html,1,['inherit'],['inherit']
Modifiability,". ROOT: TCollectionMethodBrowsable Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members ; TCollectionMethodBrowsable Class ReferenceTree Library. ; TCollectionMethodBrowsable extends TCollectionPropertyBrowsable by showing all methods of the collection itself. ; If none are available - e.g. for STL classes like std::list, a TVirtualBranchBrowsable object is created instead. The methods' names will have a ""@"" prepended, to distinguish them from the contained elements' methods.; This browser helper object is not part of the default list of registered generators (see TVirtualBranchBrowsable::RegisterDefaultGenerators()). If you want to use it, you should call TCollectionMethodBrowsable::Register(); As it extends the functionality of TVirtualBranchBrowsable, one might want to unregister the generator of the ""@size()"" method by calling TCollectionPropertyBrowsable::Unregister(); ; Definition at line 178 of file TBranchBrowsable.h. Public Member Functions;  ~TCollectionMethodBrowsable () override;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMethodBrowsable;  ~TMethodBrowsable () override;  ; const char * GetIconName () const override;  return our special icons ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TVirtualBranchBrowsable;  ~TVirtualBranchBrowsable () override;  Destructor. Delete our leaves. ;  ; void Browse (TBrowser *b) override;  Calls TTree::Draw on the method if return type is not a class; otherwise expands returned object's ""folder"". ;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCollectionMethodBrowsable.html:354,extend,extends,354,doc/master/classTCollectionMethodBrowsable.html,https://root.cern,https://root.cern/doc/master/classTCollectionMethodBrowsable.html,2,['extend'],['extends']
Modifiability,". ROOT: TColorGradient Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TColorGradient Class ReferenceCore ROOT classes » Base ROOT classes | Graphics » Graphics attributes. ; TColorGradient extends basic TColor. ; Actually, this is not a simple color, but linear gradient + shadow for filled area. By inheriting from TColor, gradients can be placed inside gROOT's list of colors and use it in all TAttXXX descendants without modifying any existing code.; Shadow, of course, is not a property of any color, and gradient is not, but this is the best way to add new attributes to filled area without re-writing all the graphics code. ; Definition at line 32 of file TColorGradient.h. Classes; struct  Point;  . Public Types; enum  ECoordinateMode { kPadMode; , kObjectBoundingMode; };  ; typedef std::vector< Color_t >::size_type SizeType_t;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TColorGradient ();  ;  TColorGradient (Color_t newColor, UInt_t nPoints, const Double_t *points, const Color_t *colorIndices, ECoordinateMode mode=kObjectBoundingMode);  There is no way to validate parameters here, so it's up to user to pass correct arguments. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTColorGradient.html:423,extend,extends,423,doc/master/classTColorGradient.html,https://root.cern,https://root.cern/doc/master/classTColorGradient.html,2,"['extend', 'inherit']","['extends', 'inheriting']"
Modifiability,". ROOT: TCondition Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TCondition Class Reference. . Definition at line 32 of file TCondition.h. Public Member Functions;  TCondition (TMutex *m=nullptr);  Create a condition variable. ;  ; virtual ~TCondition ();  Clean up condition variable. ;  ; Int_t Broadcast ();  ; TMutex * GetMutex () const;  Get internally created mutex. ;  ; TClass * IsA () const override;  ; Int_t Signal ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t TimedWait (ULong_t secs, ULong_t nanoSecs);  Wait to be signaled or till the timer times out. ;  ; Int_t TimedWaitRelative (ULong_t ms);  Wait to be signaled or till the timer times out. ;  ; Int_t Wait ();  Wait to be signaled. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCondition.html:436,variab,variable,436,doc/master/classTCondition.html,https://root.cern,https://root.cern/doc/master/classTCondition.html,2,['variab'],['variable']
Modifiability,". ROOT: TConditionImp Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TConditionImp Class Referenceabstract. . Definition at line 26 of file TConditionImp.h. Public Member Functions;  TConditionImp ();  ; virtual ~TConditionImp ();  ; virtual Int_t Broadcast ()=0;  ; TClass * IsA () const override;  ; virtual Int_t Signal ()=0;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Int_t TimedWait (ULong_t secs, ULong_t nanoSecs=0)=0;  ; virtual Int_t Wait ()=0;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTConditionImp.html:749,inherit,inherited,749,doc/master/classTConditionImp.html,https://root.cern,https://root.cern/doc/master/classTConditionImp.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TCondor Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; TCondor Class Reference. . Definition at line 52 of file TCondor.h. Public Types; enum  EState { kFree; , kSuspended; , kActive; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TCondor (const char *pool="""");  Create Condor interface object. ;  ;  ~TCondor () override;  Cleanup Condor interface. ;  ; TCondorSlave * Claim (const char *vmname, const char *cmd);  Claim virtual machine with name vmname This function does not figure out the image and performance index before returning the condor slave. ;  ; TList * Claim (Int_t n, const char *cmd);  Claim n virtual machines This function figures out the image and performance index before returning the list of condor slaves. ;  ; TString GetImage (const char *host) const;  Get image of the worker. ;  ; EState GetState () const;  ; TList * GetVirtualMachines () const;  Get the names of the virtual machines in the pool. ;  ; Bool_t GetVmInfo (const char *vm, TString &image, Int_t &perfidx) const;  Get info about worker status. ;  ; TClass * IsA () const override;  ; Bool_t IsValid () const;  ; void Print (Option_t *option="""") const o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCondor.html:437,inherit,inherited,437,doc/master/classTCondor.html,https://root.cern,https://root.cern/doc/master/classTCondor.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TCondorSlave Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; TCondorSlave Class Reference. . Definition at line 34 of file TCondor.h. Public Member Functions; TClass * IsA () const override;  ; void Print (Option_t *option="""") const override;  Print worker status. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCondorSlave.html:622,inherit,inherited,622,doc/master/classTCondorSlave.html,https://root.cern,https://root.cern/doc/master/classTCondorSlave.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TControlBar Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; Friends |; List of all members ; TControlBar Class ReferenceGraphics » 2D Graphics » Graphics pad. ; A Control Bar is a fully user configurable tool which provides fast access to frequently used operations. ; The user can choose between buttons and drawn buttons (let's say icons) and assign to them their own actions (let's say ROOT or C++ commands).; The macro below shows an example of control bar. To execute an item, click with the left mouse button. To see the HELP of a button, click on the right mouse button.; You have access to the last clicked button via the method GetClicked(). For example, bar->GetClicked()->GetName() will return the name of the last clicked button.; {; // run macro from tutorials directory of ROOT!; TControlBar bar(""vertical"");; bar.AddButton(""Help to run demos"","".x demoshelp.C"",; ""Explains how to run the demos"");; bar.AddButton(""framework"", "".x graphics/framework.C"",; ""An Example of Object Oriented User Interface"");; bar.AddButton(""hsimple"", "".x hsimple.C"",; ""An Example Creating Histograms/Ntuples on File"");; bar.AddButton(""hsum"", "".x hist/hsum.C"",; ""Filling histograms and some graphics options"");; bar.AddButton(""canvas"", "".x graphics/canvas.C"",; ""Canvas and Pad Management"");; bar.AddButton(""formula1"", "".x graphics/formula1.C"",; ""Simple Formula and Functions"");; bar.AddButton(""fillrandom"", "".x hist/fillrandom.C"",; ""Histograms with Random Numbers from a Function"");; bar.AddButton(""fit1"", "".x fit/fit1.C"",; ""A Simple Fitting Example"");; bar.AddButton(""draw2dopt"", "".x hist/draw2dopt.C"",; ""Drawing Options for 2D Histograms"");; bar.AddButton(""graph"", "".x graphs/graph.C"",; ""Examples of a simple graph"");; bar.AddButton(""tornado"", "".x graphics/tornado.C"",; ""Examples of 3-D PolyMarkers""",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTControlBar.html:401,config,configurable,401,doc/master/classTControlBar.html,https://root.cern,https://root.cern/doc/master/classTControlBar.html,1,['config'],['configurable']
Modifiability,". ROOT: TControlBarButton Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TControlBarButton Class ReferenceGraphics » 2D Graphics » Graphics pad. ; This class defines the control bar buttons. ; Created by the TControlBar. Not for general consumption. ; Definition at line 17 of file TControlBarButton.h. Public Types; enum  { kButton = 1; , kDrawnButton; , kSeparator; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TControlBarButton ();  Default control bar button ctor. ;  ;  TControlBarButton (const char *label, const char *action="""", const char *hint="""", const char *type=""button"");  Create control bar button. ;  ;  ~TControlBarButton () override;  ; virtual void Action ();  Execute control bar button command. ;  ; virtual void Create ();  ; virtual const char * GetAction () const;  ; virtual Int_t GetType () const;  ; TClass * IsA () const override;  ; virtual void SetAction (const char *action);  Set action to be executed by this button. ;  ; virtual void SetType (const char *type);  Set button type. ;  ; virtual void SetType (Int_t type);  Set button type. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTControlBarButton.html:585,inherit,inherited,585,doc/master/classTControlBarButton.html,https://root.cern,https://root.cern/doc/master/classTControlBarButton.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TCurlyArc Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TCurlyArc Class ReferenceGraphics » 2D Graphics » Basic graphics. ; Implements curly or wavy arcs used to draw Feynman diagrams. ; Amplitudes and wavelengths may be specified in the constructors, via commands or interactively from popup menus. The class make use of TCurlyLine by inheritance, ExecuteEvent methods are highly inspired from the methods used in TPolyLine and TArc. The picture below has been generated by the tutorial feynman.; ; void feynman(); {; TCanvas *c1 = new TCanvas(""c1"", ""A canvas"", 10,10, 600, 300);; c1->Range(0, 0, 140, 60);; Int_t linsav = gStyle->GetLineWidth();; gStyle->SetLineWidth(3);; TLatex t;; t.SetTextAlign(22);; t.SetTextSize(0.1);; TLine * l;; l = new TLine(10, 10, 30, 30); l->Draw();; l = new TLine(10, 50, 30, 30); l->Draw();; TCurlyArc *ginit = new TCurlyArc(30, 30, 12.5*sqrt(2), 135, 225);; ginit->SetWavy();; ginit->Draw();; t.DrawLatex(7,6,""e^{-}"");; t.DrawLatex(7,55,""e^{+}"");; t.DrawLatex(7,30,""#gamma"");; ; TCurlyLine *Gamma = new TCurlyLine(30, 30, 55, 30);; Gamma->SetWavy();; Gamma->Draw();; t.DrawLatex(42.5,37.7,""#gamma"");; ; TArc *a = new TArc(70, 30, 15);; a->Draw();; t.DrawLatex(55, 45,""#bar{q}"");; t.DrawLatex(85, 15,""q"");; TCurlyLine *gluon = new TCurlyLine(70, 45, 70, 15);; gluon->Draw();; t.DrawLatex(77.5,30,""g"");; ; TCurlyLine *z0 = new TCurlyLine(85, 30, 110, 30);; z0->SetWavy();; z0->Draw();; t.DrawLatex(100, 37.5,""Z^{0}"");; ; l = new TLine(110, 30, 130, 10); l->Draw();; l = new TLine(110, 30, 130, 50); l->Draw();; ; TCurlyArc *gluon1 = new TCurlyArc(110, 30, 12.5*sqrt(2), 315, 45);; gluon1->Draw();; ; t.DrawLatex(135,6,""#bar{q}"");; t.DrawLatex(135,55,""q"");; t.DrawLatex(135,30,""g"");; c1->Update();; gStyle->SetLineWidth(linsav);; }; a#define a(i)Defini",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCurlyArc.html:553,inherit,inheritance,553,doc/master/classTCurlyArc.html,https://root.cern,https://root.cern/doc/master/classTCurlyArc.html,1,['inherit'],['inheritance']
Modifiability,". ROOT: TCurlyLine Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Static Protected Attributes |; List of all members ; TCurlyLine Class ReferenceGraphics » 2D Graphics » Basic graphics. ; Implements curly or wavy polylines used to draw Feynman diagrams. ; Amplitudes and wavelengths may be specified in the constructors, via commands or interactively from popup menus. The class make use of TPolyLine by inheritance, ExecuteEvent methods are highly inspired from the methods used in TPolyLine and TArc. The picture below has been generated by the tutorial feynman.; ; void feynman(); {; TCanvas *c1 = new TCanvas(""c1"", ""A canvas"", 10,10, 600, 300);; c1->Range(0, 0, 140, 60);; Int_t linsav = gStyle->GetLineWidth();; gStyle->SetLineWidth(3);; TLatex t;; t.SetTextAlign(22);; t.SetTextSize(0.1);; TLine * l;; l = new TLine(10, 10, 30, 30); l->Draw();; l = new TLine(10, 50, 30, 30); l->Draw();; TCurlyArc *ginit = new TCurlyArc(30, 30, 12.5*sqrt(2), 135, 225);; ginit->SetWavy();; ginit->Draw();; t.DrawLatex(7,6,""e^{-}"");; t.DrawLatex(7,55,""e^{+}"");; t.DrawLatex(7,30,""#gamma"");; ; TCurlyLine *Gamma = new TCurlyLine(30, 30, 55, 30);; Gamma->SetWavy();; Gamma->Draw();; t.DrawLatex(42.5,37.7,""#gamma"");; ; TArc *a = new TArc(70, 30, 15);; a->Draw();; t.DrawLatex(55, 45,""#bar{q}"");; t.DrawLatex(85, 15,""q"");; TCurlyLine *gluon = new TCurlyLine(70, 45, 70, 15);; gluon->Draw();; t.DrawLatex(77.5,30,""g"");; ; TCurlyLine *z0 = new TCurlyLine(85, 30, 110, 30);; z0->SetWavy();; z0->Draw();; t.DrawLatex(100, 37.5,""Z^{0}"");; ; l = new TLine(110, 30, 130, 10); l->Draw();; l = new TLine(110, 30, 130, 50); l->Draw();; ; TCurlyArc *gluon1 = new TCurlyArc(110, 30, 12.5*sqrt(2), 315, 45);; gluon1->Draw();; ; t.DrawLatex(135,6,""#bar{q}"");; t.DrawLatex(135,55,""q"");; t.DrawLatex(135,30,""g"");; c1->Update();; gStyle->SetLineWidth(linsav);; }; a#define ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCurlyLine.html:563,inherit,inheritance,563,doc/master/classTCurlyLine.html,https://root.cern,https://root.cern/doc/master/classTCurlyLine.html,1,['inherit'],['inheritance']
Modifiability,". ROOT: TCutG Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TCutG Class ReferenceGraphics » 2D Graphics » Basic graphics. ; Graphical cut class. ; A TCutG object is a closed polygon defining a closed region in a x,y plot. It can be created via the graphics editor option ""CutG"" or directly by invoking its constructor. The first and last points should be the same.; To create a TCutG via the graphics editor, use the left button to select the points building the contour of the cut. Click on the right button to close the TCutG. When it is created via the graphics editor, the TCutG object is named ""CUTG"". It is recommended to immediately change the name by using the context menu item ""SetName"". When the graphics editor is used, the names of the variables X,Y are automatically taken from the current pad title.; Example:; Assume a TTree object T and: Root > T.Draw(""abs(fMomemtum):fEtot""); the TCutG members fVarX, fVary will be set to: fVarx = fEtot; fVary = abs(fMomemtum); A graphical cut can be used in a TTree selection expression: Root > T.Draw(""fEtot"",""cutg1""); where ""cutg1"" is the name of an existing graphical cut.; Note that, as shown in the example above, a graphical cut may be used in a selection expression when drawing TTrees expressions of 1-d, 2-d or 3-dimensions. The expressions used in TTree::Draw can reference the variables in the fVarX, fVarY of the graphical cut plus other variables.; When the TCutG object is created by TTree::Draw, it is added to the list of special objects in the main TROOT object pointed by gROOT. To retrieve a pointer to this object from the code or command line, do: TCutG *mycutg;; mycutg = (TCutG*)gROOT->GetListOfSpecials()->FindObject(""CUTG""); mycutg->SetName(""mycutg"");; gROOT#define gROOTDefinition TROOT.h:406; TCutGGraphical cut class.Definition TCutG.h:20",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCutG.html:931,variab,variables,931,doc/master/classTCutG.html,https://root.cern,https://root.cern/doc/master/classTCutG.html,1,['variab'],['variables']
Modifiability,". ROOT: TDCacheFile Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TDCacheFile Class ReferenceInput/Output Library. ; A TDCacheFile is like a normal TFile except that it may read and write its data via a dCache server (for more on the dCache daemon see http://www-dcache.desy.de/. ; Given a path which doesn't belong to the dCache managed filesystem, it falls back to the ordinary TFile behaviour. ; Definition at line 25 of file TDCacheFile.h. Public Types; enum  EOnErrorAction { kOnErrorRetry = 1; , kOnErrorFail = 0; , kOnErrorDefault = -1; };  Note: This must be kept in sync with values #defined in dcap.h. More...;  ;  Public Types inherited from TFile; enum  { kStartBigFile = 2000000000; };  ; enum  EAsyncOpenStatus { kAOSNotAsync = -1; , kAOSFailure = 0; , kAOSInProgress = 1; , kAOSSuccess = 2; };  Asynchronous open request status. More...;  ; enum  ECacheAction { kDisconnect = 0; , kDoNotDisconnect = 1; };  TTreeCache flushing semantics. More...;  ; enum  EFileType { ;   kDefault = 0; , kLocal = 1; , kNet = 2; , kWeb = 3; , ;   kFile = 4; , kMerge = 5. };  File type. More...;  ; enum  EOpenTimeOut { kInstantTimeout = 0; , kEternalTimeout = 999999999; };  Open timeout constants. More...;  ; enum  ERelativeTo { kBeg = 0; , kCur = 1; , kEnd = 2; };  ; enum  EStatusBits { ;   k630forwardCompatibility = (1ULL << ( 2 )); , kRecovered = (1ULL << ( 10 )); , kHasReferences = (1ULL << ( 11 )); , kDevNull = (1ULL << ( 12 )); , ;   kWriteError = (1ULL << ( 14 )); , kBinaryFile = (1ULL << ( 15 )); , kRedirected = (1ULL << ( 16 )); , kReproducible = (1ULL << ( 17 )). };  TFile status bits. BIT(13) is taken up by TObject. More...;  ;  Public Types inherited from TDirectoryFile; enum  EStatusBits { kCloseDirectory = (1ULL << ( 7 )); };  ;  Public Types inherited",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDCacheFile.html:862,inherit,inherited,862,doc/master/classTDCacheFile.html,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TDNDData Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; Private Member Functions |; List of all members ; TDNDData Class ReferenceGUI » Low level GUI widgets. ; Drag and drop data container. ; Definition at line 64 of file TGDNDManager.h. Public Member Functions;  TDNDData (Atom_t dt=kNone, void *d=nullptr, Int_t len=0, Atom_t act=kNone);  ;  ~TDNDData () override;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDNDData.html:737,inherit,inherited,737,doc/master/classTDNDData.html,https://root.cern,https://root.cern/doc/master/classTDNDData.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TDSetElement Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TDSetElement Class ReferencePROOF » PROOF kernel Libraries. ; Manages an element of a TDSet. ; See TDSet. ; Definition at line 66 of file TDSet.h. Public Types; enum  EStatusBits { ;   kHasBeenLookedUp = (1ULL << ( 15 )); , kWriteV3 = (1ULL << ( 16 )); , kEmpty = (1ULL << ( 17 )); , kCorrupted = (1ULL << ( 18 )); , ;   kNewRun = (1ULL << ( 19 )); , kNewPacket = (1ULL << ( 20 )). };  ; typedef std::list< std::pair< TDSetElement *, TString > > FriendsList_t;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TDSetElement ();  Default constructor. ;  ;  TDSetElement (const char *file, const char *objname=0, const char *dir=0, Long64_t first=0, Long64_t num=-1, const char *msd=0, const char *dataset=0);  Create a TDSet element. ;  ;  TDSetElement (const TDSetElement &elem);  copy constructor ;  ;  ~TDSetElement () override;  Clean up the element. ;  ; void AddAssocObj (TObject *assocobj);  Add an associated object to the list. ;  ; virtual void AddFriend (TDSetElement *friendElement, const char *alias);  Add friend TDSetElement to this set. The friend element will be copied to this",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDSetElement.html:769,inherit,inherited,769,doc/master/classTDSetElement.html,https://root.cern,https://root.cern/doc/master/classTDSetElement.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TDSetProxy Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TDSetProxy Class Reference. . Definition at line 29 of file TDSetProxy.h. Public Member Functions;  TDSetProxy ();  Constructor. ;  ;  TDSetProxy (const char *type, const char *objname=""*"", const char *dir=""/"");  Constructor. ;  ; TClass * IsA () const override;  ; TDSetElement * Next (Long64_t totalEntries=-1) override;  Get the next packet. ;  ; void Reset () override;  Reset this instance. ;  ; void SetProofServ (TProofServ *serv);  Set the reference TProofServ instance. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TDSet. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TDSet;  TDSet ();  iterator on fSrvMaps ;  ;  TDSet (const char *name, const char *objname=""*"", const char *dir=""/"", const char *type=0);  Create a named TDSet object. ;  ;  TDSet (const TChain &chain, Bool_t withfriends=kTRUE);  Create a named TDSet object from existing TChain 'chain'. ;  ;  ~TDSet () override;  Cleanup. ;  ; virtual Bool_t Add (const char *file, const char *objname=0, const char *dir=0, Long64_t first=0, Long64_t num=-1, const char *msd=0);  Add file to list of files to be analyzed. ;  ; virtual Bool_t Add (TCollection *fileinfo, const char *meta=0, Bool_t availableOnly=kFALSE, TCollection *badlist=0);  Add files passed as list of TFileInfo, TUrl or TObjString objects . ;  ; virtual Bool_t Add (TDSet *set);  Add specified data set to the this set. ;  ; virtual Bool_t Add (TFileInfo *fileinfo, const char *meta=0);  Add file described by 'fi' to list of files to be analyzed. ;  ; virtual void AddFriend (TDSet *friendset, const char *alias);  Add friend dataset to this set. ;  ; void AddInput (TObject *obj);  Add objects that might be needed during the process",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDSetProxy.html:894,inherit,inherited,894,doc/master/classTDSetProxy.html,https://root.cern,https://root.cern/doc/master/classTDSetProxy.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TDatime Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Friends |; List of all members ; TDatime Class ReferenceCore ROOT classes » Base ROOT classes. ; This class stores the date and time with a precision of one second in an unsigned 32 bit word (950130 124559). ; The date is stored with the origin being the 1st January 1995.; This class has no support for time zones. The time is assumed to be in the local time of the machine where the object was created. As a result, TDatime objects are not portable between machines operating in different time zones and unsuitable for storing the date/time of data taking events and the like. If absolute time is required, use TTimeStamp. ; Definition at line 37 of file TDatime.h. Public Member Functions;  TDatime ();  Create a TDatime and set it to the current time. ;  ;  TDatime (const char *sqlDateTime);  Expects as input a string in SQL date/time compatible format, like: yyyy-mm-dd hh:mm:ss. ;  ;  TDatime (const TDatime &d);  ;  TDatime (Int_t date, Int_t time);  Create a TDatime and set it to the specified date and time. ;  ;  TDatime (Int_t year, Int_t month, Int_t day, Int_t hour, Int_t min, Int_t sec);  Create a TDatime and set it to the specified year, month, day, time, hour, minute and second. ;  ;  TDatime (UInt_t tloc, Bool_t dosDate=kFALSE);  ; virtual ~TDatime ();  ; const char * AsSQLString () const;  Return the date & time in SQL compatible string format, like: 1997-01-15 20:16:28. ;  ; const char * AsString () const;  Return the date & time as a string (ctime() format). ;  ; const char * AsString (char *out) const;  Return the date & time as a string (ctime() format). ;  ; UInt_t Convert (Bool_t toGMT=kFALSE) const;  Convert fDatime from TDatime format to the standard time_t format. ;  ; void Copy (TDatime &datime) const;  Copy this to datime. ;  ; void ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDatime.html:664,portab,portable,664,doc/master/classTDatime.html,https://root.cern,https://root.cern/doc/master/classTDatime.html,1,['portab'],['portable']
Modifiability,". ROOT: TDavixFile Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TDavixFile Class Reference. . Definition at line 70 of file TDavixFile.h. Public Member Functions;  TDavixFile (const char *url, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault);  Open function for TDavixFile. ;  ;  ~TDavixFile ();  ; std::string DiscoverToken ();  ; void enableGridMode ();  Enable the grid mode The grid Mode configure automatically all grid-CA path, VOMS authentication and grid related extension for a grid analysis usage. ;  ; virtual TString GetNewUrl ();  ; virtual Long64_t GetSize () const;  Returns the current file size. ;  ; virtual TClass * IsA () const;  ; virtual Bool_t ReadBuffer (char *buf, Int_t len);  Read specified byte range from remote file via HTTP. ;  ; virtual Bool_t ReadBuffer (char *buf, Long64_t pos, Int_t len);  Read a buffer from the file at the offset 'pos' in the file. ;  ; virtual Bool_t ReadBufferAsync (Long64_t offs, Int_t len);  ; virtual Bool_t ReadBuffers (char *buf, Long64_t *pos, Int_t *len, Int_t nbuf);  Read the nbuf blocks described in arrays pos and len. ;  ; virtual void Seek (Long64_t offset, ERelativeTo pos=kBeg);  Set position from where to start reading. ;  ; void setCACheck (Bool_t check);  Enable or disable certificate authority check. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t WriteBuffer (const char *buffer, Int_t bufferLength);  Write a buffer to the file. ;  ;  Public Member Functions inherited from TFile;  TFile ();  File default Constructor. ;  ;  TFile (const char *fname, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompression",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDavixFile.html:670,config,configure,670,doc/master/classTDavixFile.html,https://root.cern,https://root.cern/doc/master/classTDavixFile.html,1,['config'],['configure']
Modifiability,". ROOT: TDecayChannel Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TDecayChannel Class ReferenceMonte Carlo » EG. ; Description of the decay channel. ; Feb 16 2001 P.Murat ; Definition at line 24 of file TDecayChannel.h. Public Member Functions;  TDecayChannel ();  default constructor ;  ;  TDecayChannel (Int_t Number, Int_t MatrixElementCode, Double_t BranchingRatio, Int_t NDaughters, Int_t *DaughterPdgCode);  constructor ;  ;  ~TDecayChannel () override;  destructor ;  ; Double_t BranchingRatio ();  ; Int_t DaughterPdgCode (Int_t i);  ; TClass * IsA () const override;  ; Int_t MatrixElementCode ();  ; Int_t NDaughters ();  ; Int_t Number ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDecayChannel.html:1005,inherit,inherited,1005,doc/master/classTDecayChannel.html,https://root.cern,https://root.cern/doc/master/classTDecayChannel.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TDelCharCom Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TDelCharCom Class Reference. . Definition at line 111 of file TGTextEdit.cxx. Public Member Functions;  TDelCharCom (TGTextEdit *te);  ; Bool_t Notify () override;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ;  Public Member Functions inherited from TGTextEditCommand;  TGTextEditCommand (TGTextEdit *te);  ; void SetPos (TGLongPosition pos);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDelCharCom.html:504,inherit,inherited,504,doc/master/classTDelCharCom.html,https://root.cern,https://root.cern/doc/master/classTDelCharCom.html,2,['inherit'],['inherited']
Modifiability,". ROOT: TDelTextCom Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TDelTextCom Class Reference. . Definition at line 184 of file TGTextEdit.cxx. Public Member Functions;  TDelTextCom (const TDelTextCom &dtc);  ;  TDelTextCom (TGTextEdit *te, TGText *txt);  ;  ~TDelTextCom () override;  ; Bool_t Notify () override;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; TDelTextCom & operator= (const TDelTextCom &dtc);  ; void SetBreakLine (Bool_t on);  ; void SetEndPos (TGLongPosition end);  ;  Public Member Functions inherited from TGTextEditCommand;  TGTextEditCommand (TGTextEdit *te);  ; void SetPos (TGLongPosition pos);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDelTextCom.html:716,inherit,inherited,716,doc/master/classTDelTextCom.html,https://root.cern,https://root.cern/doc/master/classTDelTextCom.html,2,['inherit'],['inherited']
Modifiability,". ROOT: TDictionary Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; TDictionary Class Referenceabstract. ; This class defines an abstract interface that must be implemented by all classes that contain dictionary information. ; The dictionary is defined by the following classes: TDataType (typedef definitions); TGlobal (global variables); TGlobalFunc (global functions); TClass (classes); TBaseClass (base classes); TDataMember (class datamembers); TMethod (class methods); TMethodArg (method arguments); TBaseClassEach class (see TClass) has a linked list of its base class(es).Definition TBaseClass.h:33; TClassTClass instances represent classes, structs and namespaces in the ROOT type system.Definition TClass.h:81; TDataMemberAll ROOT classes may have RTTI (run time type identification) support added.Definition TDataMember.h:31; TDataTypeBasic data type descriptor (datatype information is obtained from CINT).Definition TDataType.h:44; TGlobalGlobal variables class (global variables are obtained from CINT).Definition TGlobal.h:28; TMethodArgEach ROOT method (see TMethod) has a linked list of its arguments.Definition TMethodArg.h:36; TMethodEach ROOT class (see TClass) has a linked list of methods.Definition TMethod.h:38; All the above classes implement the TDictionary abstract interface. Note: the indentation shows aggregation not inheritance. TMethodCall (method call environment); TMethodCallMethod or function calling interface.Definition TMethodCall.h:37; . Definition at line 168 of file TDictionary.h. Public Types; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = ROOT::kSTL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDictionary.html:552,variab,variables,552,doc/master/classTDictionary.html,https://root.cern,https://root.cern/doc/master/classTDictionary.html,1,['variab'],['variables']
Modifiability,". ROOT: TDimensionInfo Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; TDimensionInfo Class Reference. ; A small helper class to help in keeping track of the array dimensions encountered in the analysis of the expression. ; Definition at line 111 of file TTreeFormula.cxx. Public Member Functions;  TDimensionInfo (Int_t code, Int_t oper, Int_t size, TFormLeafInfoMultiVarDim *multiDim);  ;  ~TDimensionInfo () override;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDimensionInfo.html:592,inherit,inherited,592,doc/master/classTDimensionInfo.html,https://root.cern,https://root.cern/doc/master/classTDimensionInfo.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TDispatchTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TDispatchTimer Class Reference. . Definition at line 112 of file TProofPlayer.cxx. Public Member Functions;  TDispatchTimer (TProofPlayer *p);  ; Bool_t Notify () override;  Handle expiration of the timer associated with dispatching pending events while processing. ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDispatchTimer.html:511,inherit,inherited,511,doc/master/classTDispatchTimer.html,https://root.cern,https://root.cern/doc/master/classTDispatchTimer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TDocDirective Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Friends |; List of all members ; TDocDirective Class Referenceabstract. . Definition at line 34 of file TDocDirective.h. Public Member Functions; virtual void AddLine (const TSubString &line)=0;  ; virtual void DeleteOutput () const;  ; virtual const char * GetEndTag () const =0;  ; virtual Bool_t GetResult (TString &result)=0;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDocDirective.html:793,inherit,inherited,793,doc/master/classTDocDirective.html,https://root.cern,https://root.cern/doc/master/classTDocDirective.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TDocHtmlDirective Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TDocHtmlDirective Class Reference. . Definition at line 80 of file TDocDirective.h. Public Member Functions;  TDocHtmlDirective ();  ;  ~TDocHtmlDirective () override;  ; void AddLine (const TSubString &line) override;  Add a line of HTML. ;  ; const char * GetEndTag () const override;  ; Bool_t GetResult (TString &result) override;  Set result to the HTML code that was passed in via AddLine(). ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TDocDirective; virtual void DeleteOutput () const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDocHtmlDirective.html:857,inherit,inherited,857,doc/master/classTDocHtmlDirective.html,https://root.cern,https://root.cern/doc/master/classTDocHtmlDirective.html,2,['inherit'],['inherited']
Modifiability,". ROOT: TDocMacroDirective Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TDocMacroDirective Class Reference. . Definition at line 95 of file TDocDirective.h. Public Member Functions;  TDocMacroDirective ();  ;  ~TDocMacroDirective () override;  Destructor. ;  ; void AddLine (const TSubString &line) override;  Add a macro line. ;  ; void DeleteOutput () const override;  ; const char * GetEndTag () const override;  ; Bool_t GetResult (TString &result) override;  Get the result (i.e. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TDocDirective; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDocMacroDirective.html:901,inherit,inherited,901,doc/master/classTDocMacroDirective.html,https://root.cern,https://root.cern/doc/master/classTDocMacroDirective.html,2,['inherit'],['inherited']
Modifiability,". ROOT: TDocMethodWrapper Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; TDocMethodWrapper Class Referenceabstract. . Definition at line 37 of file TDocParser.h. Public Types; enum  { kDocumented = 14; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions; virtual TMethod * GetMethod () const =0;  ; virtual Int_t GetOverloadIdx () const =0;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDocMethodWrapper.html:361,inherit,inherited,361,doc/master/classTDocMethodWrapper.html,https://root.cern,https://root.cern/doc/master/classTDocMethodWrapper.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TDocOutput Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Protected Attributes |; List of all members ; TDocOutput Class Reference. . Definition at line 37 of file TDocOutput.h. Public Types; enum  EFileType { kSource; , kInclude; , kTree; , kDoc; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TDocOutput (THtml &html);  ;  ~TDocOutput () override;  ; virtual void AdjustSourcePath (TString &line, const char *relpath=""../"");  adjust the path of links for source files, which are in src/, but need to point to relpath (usually ""../""). ;  ; void Convert (std::istream &in, const char *infilename, const char *outfilename, const char *title, const char *relpath=""../"", Int_t includeOutput=0, const char *context="""", TGClient *gclient=0);  Convert a text file into a html file. ;  ; Bool_t CopyHtmlFile (const char *sourceName, const char *destName="""");  Copy file to HTML directory. ;  ; virtual void CreateClassIndex ();  Create index of all classes. ;  ; virtual void CreateClassTypeDefs ();  Create a forwarding page for each typedef pointing to a class. ;  ; virtual void CreateHierarchy ();  Create a hierarchical class list The algorithm descends from the base clas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDocOutput.html:476,inherit,inherited,476,doc/master/classTDocOutput.html,https://root.cern,https://root.cern/doc/master/classTDocOutput.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TEmulatedCollectionProxy Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Protected Member Functions |; Private Member Functions |; Friends |; List of all members ; TEmulatedCollectionProxy Class ReferenceInput/Output Library. ; Streamer around an arbitrary STL like container, which implements basic container functionality. . Note:; Although this class contains all the setup necessary to deal with maps, the map-like functionality is NOT supported. For optimization reasons this functionality is put into the class TEmulatedMapProxy. ; Definition at line 18 of file TEmulatedCollectionProxy.h. Public Types; typedef std::vector< char > Cont_t;  ; typedef Cont_t * PCont_t;  ;  Public Types inherited from TGenCollectionProxy; enum  { kBIT_ISSTRING = 0x20000000; , kBIT_ISTSTRING = 0x40000000; };  ; typedef const std::type_info & Info_t;  ;  Public Types inherited from TVirtualCollectionProxy; typedef void *(* CopyIterator_t) (void *dest, const void *source);  Copy the iterator source into dest. ;  ; typedef void(* CreateIterators_t) (void *collection, void **begin_arena, void **end_arena, TVirtualCollectionProxy *proxy);  *begin_arena and *end_arena should contain the location of a memory arena of size fgIteratorArenaSize. ;  ; typedef void(* DeleteIterator_t) (void *iter);  If the size of the iterator is greater than fgIteratorArenaSize, call delete on the addresses; otherwise, just call the iterator's destructor. ;  ; typedef void(* DeleteTwoIterators_t) (void *begin, void *end);  ; enum  EProperty { kIsAssociative = (1ULL << ( 2 )); , kIsEmulated = (1ULL << ( 3 )); , kNeedDelete = (1ULL << ( 4 )); , kCustomAlloc = (1ULL << ( 5 )); };  ; typedef void *(* Next_t) (void *iter, const void *end);  iter and end should be pointers to an iterator to be incremented and an iterator that points to the end of the collection, respectively. ;  . Public Member Funct",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEmulatedCollectionProxy.html:816,inherit,inherited,816,doc/master/classTEmulatedCollectionProxy.html,https://root.cern,https://root.cern/doc/master/classTEmulatedCollectionProxy.html,2,['inherit'],['inherited']
Modifiability,". ROOT: TEnum Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Types |; Private Attributes |; List of all members ; TEnum Class Reference. ; The TEnum class implements the enum type. ; Definition at line 33 of file TEnum.h. Public Types; enum  ESearchAction { kNone = 0; , kAutoload = 1; , kInterpLookup = 2; , kALoadAndInterpLookup = 3; };  ;  Public Types inherited from TDictionary; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = ROOT::kSTLvector; , kList = ROOT::kSTLlist; , kForwardlist = ROOT::kSTLforwardlist; , ;   kDeque = ROOT::kSTLdeque; , kMap = ROOT::kSTLmap; , kMultimap = ROOT::kSTLmultimap; , kSet = ROOT::kSTLset; , ;   kMultiset = ROOT::kSTLmultiset; , kUnorderedSet = ROOT::kSTLunorderedset; , kUnorderedMultiset = ROOT::kSTLunorderedmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TEnum ();  ;  TEnum (const char *name, DeclId_t declid, TClass *cls);  Constructor for TEnum class. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEnum.html:515,inherit,inherited,515,doc/master/classTEnum.html,https://root.cern,https://root.cern/doc/master/classTEnum.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TEnum Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Types |; Private Attributes |; List of all members ; TEnum Class Reference. ; The TEnum class implements the enum type. ; Definition at line 33 of file TEnum.h. Public Types; enum  ESearchAction { kNone = 0; , kAutoload = 1; , kInterpLookup = 2; , kALoadAndInterpLookup = 3; };  ;  Public Types inherited from TDictionary; typedef const void * DeclId_t;  ; enum class  EMemberSelection { kNoUsingDecls; , kOnlyUsingDecls; , kAlsoUsingDecls; };  Kinds of members to include in lists. More...;  ; enum  ESTLType { ;   kNone = ROOT::kNotSTL; , kVector = ROOT::kSTLvector; , kList = ROOT::kSTLlist; , kForwardlist = ROOT::kSTLforwardlist; , ;   kDeque = ROOT::kSTLdeque; , kMap = ROOT::kSTLmap; , kMultimap = ROOT::kSTLmultimap; , kSet = ROOT::kSTLset; , ;   kMultiset = ROOT::kSTLmultiset; , kUnorderedSet = ROOT::kSTLunorderedset; , kUnorderedMultiset = ROOT::kSTLunorderedmultiset; , kUnorderedMap = ROOT::kSTLunorderedmap; , ;   kUnorderedMultimap = ROOT::kSTLunorderedmultimap; , kBitset = ROOT::kSTLbitset. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TEnum ();  ;  TEnum (const char *name, DeclId_t declid, TClass *cls);  Constructor for TEnum class. ;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTEnum.html:514,inherit,inherited,514,doc/v632/classTEnum.html,https://root.cern,https://root.cern/doc/v632/classTEnum.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TEnumConstant Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TEnumConstant Class Reference. ; The TEnumConstant class implements the constants of the enum type. ; Definition at line 29 of file TEnumConstant.h. Public Member Functions;  TEnumConstant ();  ;  TEnumConstant (DataMemberInfo_t *info, const char *name, Long64_t value, TEnum *type);  Constructor of the TEnumConstant. ;  ; virtual ~TEnumConstant ();  Destructor. ;  ; void * GetAddress () const override;  Return address of global. ;  ; const char * GetFullTypeName () const override;  Get full type description of global variable, e,g.: ""class TDirectory*"". ;  ; const TEnum * GetType () const;  ; const char * GetTypeName () const override;  Get type of global variable, e,g.: ""class TDirectory*"" -> ""TDirectory"". ;  ; Long64_t GetValue () const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGlobal;  TGlobal (const TGlobal &);  Copy constructor. ;  ;  TGlobal (DataMemberInfo_t *info=nullptr);  pointer to CINT data member info ;  ; virtual ~TGlobal ();  TGlobal dtor deletes adopted CINT DataMemberInfo object. ;  ; virtual Int_t GetArrayDim () const;  Return number of array dimensions. ;  ; virtual DeclId_t GetDeclId () const;  ; virtual Int_t GetMaxIndex (Int_t dim) const;  Return maximum index for array dimension ""dim"". ;  ; TClass * IsA () const override;  ; virtual Bool_t IsValid ();  Return true if this global object is pointing to a currently loaded global. ;  ; TGlobal & operator= (const TGlobal &);  Assignment operator. ;  ; Long_t Property () const override;  Get property description word. For meaning of bits see EProperty. ;  ; void Streamer (TBuffer ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEnumConstant.html:771,variab,variable,771,doc/master/classTEnumConstant.html,https://root.cern,https://root.cern/doc/master/classTEnumConstant.html,2,['variab'],['variable']
Modifiability,". ROOT: TEnv Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TEnv Class ReferenceCore ROOT classes » Base ROOT classes. ; The TEnv class reads config files, by default named .rootrc. ; Three types of config files are read: global, user and local files. The global file is $ROOTSYS/etc/system<name> (or ROOTETCDIR/system<name>) the user file is $HOME/<name> and the local file is ./<name>. By setting the shell variable ROOTENV_NO_HOME=1 the reading of the $HOME/<name> resource file will be skipped. This might be useful in case the home directory resides on an auto-mounted remote file system and one wants to avoid this file system from being mounted.; The format of the .rootrc file is similar to the .Xdefaults format: [+]<SystemName>.<RootName|ProgName>.<name>[(type)]: <value>; valueOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void valueDefinition TGWin32VirtualXProxy.cxx:142; typeOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyName wid window const char font_name cursor keysym reg const char only_if_exist regb h Point_t winding char text const char depth char const char Int_t count const char ColorStruct_t color const char Pixmap_t Pixmap_t PictureAttributes_t attr const char char ret_data h unsigned char height h Atom_t Int_t ULong_t ULong_t unsigned char prop_list Atom_t Atom_t Atom_t Time_t typeDefinition TGW",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEnv.html:349,config,config,349,doc/master/classTEnv.html,https://root.cern,https://root.cern/doc/master/classTEnv.html,3,"['config', 'variab']","['config', 'variable']"
Modifiability,". ROOT: TEnvRec Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TEnvRec Class Reference. . Definition at line 86 of file TEnv.h. Public Member Functions;  TEnvRec ();  ;  ~TEnvRec ();  TNamed destructor. ;  ; EEnvLevel GetLevel () const;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetType () const;  ; const char * GetValue () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEnvRec.html:872,inherit,inherited,872,doc/master/classTEnvRec.html,https://root.cern,https://root.cern/doc/master/classTEnvRec.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TEveCluster Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; TEveCluster Class Reference. . Definition at line 105 of file TEveVSDStructs.h. Public Member Functions;  TEveCluster ();  ;  ~TEveCluster () override;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCluster.html:602,inherit,inherited,602,doc/master/classTEveCluster.html,https://root.cern,https://root.cern/doc/master/classTEveCluster.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TEveCompositeFrameInPack Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TEveCompositeFrameInPack Class ReferenceGraphics » 3D Graphics » Event Display. ; An EVE window-slot contained within one frame of a TGPack. ; Definition at line 147 of file TEveWindow.h. Public Member Functions;  TEveCompositeFrameInPack (TGCompositeFrame *parent, TEveWindow *eve_parent, TGPack *pack);  Constructor. ;  ;  ~TEveCompositeFrameInPack () override;  Destructor. ;  ; void Destroy () override;  Virtual function called from eve side when the frame should be destroyed. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TEveCompositeFrame;  TEveCompositeFrame (TGCompositeFrame *gui_parent, TEveWindow *eve_parent);  Constructor. ;  ;  ~TEveCompositeFrame () override;  If fEveWindow != 0 we are being deleted from the ROOT GUI side. ;  ; virtual void AcquireEveWindow (TEveWindow *ew);  Accept window and increase its deny-destroy count. ;  ; void ActionPressed ();  The action-button of the title-bar was pressed. ;  ; void FlipTitleBarState ();  Change display-state of the title-bar / mini-bar. ;  ; TEveWindow * GetEveParentAsWindow () const;  Returns eve-parent dynamic-casted to TEveWindow. ;  ; TEveWindow * GetEveWindow () const;  ; virtual void HideAllDecorations ();  Hide title-bar and mini-bar. ;  ; virtual TEveWindow * RelinquishEveWindow (Bool_t reparent=kTRUE);  Remove window and decrease its deny-destroy count. ;  ; virtual void SetCurrent (Bool_t curr);  Set current state of this frame. ;  ; virtual void SetShowTitleBar (Bool_t show);  Set state of title-bar. ;  ; virtual void ShowNormalDecorations (); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCompositeFrameInPack.html:979,inherit,inherited,979,doc/master/classTEveCompositeFrameInPack.html,https://root.cern,https://root.cern/doc/master/classTEveCompositeFrameInPack.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TEveCompoundProjected Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; List of all members ; TEveCompoundProjected Class ReferenceGraphics » 3D Graphics » Event Display. ; Description of TEveCompoundProjected. ; Definition at line 60 of file TEveCompound.h. Public Member Functions;  TEveCompoundProjected ();  Constructor. ;  ;  ~TEveCompoundProjected () override;  ; TEveElement * GetProjectedAsElement () override;  Returns this projected dynamic-casted to TEveElement. ;  ; TClass * IsA () const override;  ; void SetMainColor (Color_t color) override;  Revert back to the behaviour of TEveElement as color is propagated: ;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UpdateProjection () override;  ;  Public Member Functions inherited from TEveCompound;  TEveCompound (const char *n=""TEveCompound"", const char *t="""", Bool_t doColor=kTRUE, Bool_t doTransparency=kFALSE);  Constructor. ;  ;  ~TEveCompound () override;  ; void AddElement (TEveElement *el) override;  Call base-class implementation. ;  ; void CloseCompound ();  ; void FillImpliedSelectedSet (Set_t &impSelSet) override;  Recurse on all children that are in this compound and call the base-class version. ;  ; Bool_t IsCompoundOpen () const;  ; void OpenCompound ();  ; TClass * ProjectedClass (const TEveProjection *p) const override;  Virtual from TEveProjectable, returns TEveCompoundProjected class. ;  ; void RemoveElementLocal (TEveElement *el) override;  Decompoundofy el, call base-class version. ;  ; void RemoveElementsLocal () override;  Decompoundofy children, call base-class version. ;  ; void SetMainTransparency (Char_t t) override;  SetMainTransparency for the compound. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited fr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCompoundProjected.html:967,inherit,inherited,967,doc/master/classTEveCompoundProjected.html,https://root.cern,https://root.cern/doc/master/classTEveCompoundProjected.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TEveContextMenu Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TEveContextMenu Class ReferenceGraphics » 3D Graphics » Event Display. ; Specialization of TContext menu. ; Provide a window manager hint that ensures proper placement of popup on Cocoa. ; Definition at line 430 of file TEveWindow.h. Public Member Functions;  TEveContextMenu (const char *name, const char *title=""Eve context menu"");  Constructor. ;  ; TClass * IsA () const override;  ; void SetupAndPopup (TGWindow *button, TObject *obj);  Position the popup below given button and show context menu for object obj. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TContextMenu;  TContextMenu (const char *name, const char *title=""Context sensitive popup menu"");  Create a context menu. ;  ; virtual ~TContextMenu ();  Destroy a context menu. ;  ; virtual void Action (TClassMenuItem *classmenuitem);  Action to be performed when this menu item is selected. ;  ; void Action (TMethod *method);  ; virtual void Action (TObject *object, TMethod *method);  Action to be performed when this menu item is selected. ;  ; virtual void Action (TObject *object, TToggle *toggle);  Action to be performed when this toggle menu item is selected. ;  ; void Action (TToggle *toggle);  ; virtual const char * CreateArgumentTitle (TMethodArg *argument);  Create string describing argument (for use in dialog box). ;  ; virtual const char * CreateDialogTitle (TObject *object, TFunction *method);  Create title for dialog box retrieving argument values. ;  ; virtual const char * CreatePopupTitle (TObject *object);  Create title for popup menu. ;  ; void Execute (const char *method, const char *params, Int_t *error=nullptr) override;  Execute met",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveContextMenu.html:918,inherit,inherited,918,doc/master/classTEveContextMenu.html,https://root.cern,https://root.cern/doc/master/classTEveContextMenu.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TEveElementList Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TEveElementList Class ReferenceGraphics » 3D Graphics » Event Display. ; A list of TEveElements. ; Class of acceptable children can be limited by setting the fChildClass member.; !!! should have two ctors (like in TEveElement), one with Color_t& and set fDoColor automatically, based on which ctor is called. ; Definition at line 430 of file TEveElement.h. Public Member Functions;  TEveElementList (const char *n=""TEveElementList"", const char *t="""", Bool_t doColor=kFALSE, Bool_t doTransparency=kFALSE);  Constructor. ;  ;  TEveElementList (const TEveElementList &e);  Copy constructor. ;  ;  ~TEveElementList () override;  ; Bool_t AcceptElement (TEveElement *el) override;  Check if TEveElement el is inherited from fChildClass. ;  ; TEveElementList * CloneElement () const override;  Clone the element via copy constructor. ;  ; TClass * GetChildClass () const;  ; const char * GetElementName () const override;  Virtual function for retrieving name of the element. ;  ; const char * GetElementTitle () const override;  Virtual function for retrieving title of the render-element. ;  ; TObject * GetObject (const TEveException &=""TEveElementList::GetObject "") const override;  Get a TObject associated with this render-element. ;  ; TClass * IsA () const override;  ; TClass * ProjectedClass (const TEveProjection *p) const override;  Virtual from TEveProjectable, returns TEveCompoundProjected class. ;  ; void SetChildClass (TClass *c);  ; void SetElementName (const char *name) override;  Virtual function for setting of name of an element. ;  ; void SetElementNameTitle (const char *name, const char *title) override;  Virtual function for setting of name and title of render element. ;  ; void SetElementTitle (c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveElementList.html:984,inherit,inherited,984,doc/master/classTEveElementList.html,https://root.cern,https://root.cern/doc/master/classTEveElementList.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TEveFrameBox Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; Friends |; List of all members ; TEveFrameBox Class ReferenceGraphics » 3D Graphics » Event Display. ; Description of a 2D or 3D frame that can be used to visually group a set of objects. ; Definition at line 18 of file TEveFrameBox.h. Public Types; enum  EFrameType_e { kFT_None; , kFT_Quad; , kFT_Box; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TEveFrameBox ();  ;  ~TEveFrameBox () override;  Destructor. ;  ; Color_t GetBackColor () const;  ; UChar_t * GetBackRGBA ();  ; Bool_t GetDrawBack () const;  ; Color_t GetFrameColor () const;  ; Bool_t GetFrameFill () const;  ; Float_t * GetFramePoints () const;  ; UChar_t * GetFrameRGBA ();  ; Int_t GetFrameSize () const;  ; EFrameType_e GetFrameType () const;  ; Float_t GetFrameWidth () const;  ; TClass * IsA () const override;  ; void OnZeroRefCount () override;  ; Color_t * PtrBackColor ();  ; Color_t * PtrFrameColor ();  ; void SetAABox (Float_t x, Float_t y, Float_t z, Float_t dx, Float_t dy, Float_t dz);  Setup for axis-aligned box with one corner at x, y, z and given sizes in x (dx), y (dy) and z (dz). ;  ; void SetAABoxCenterHalfSize (F",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveFrameBox.html:595,inherit,inherited,595,doc/master/classTEveFrameBox.html,https://root.cern,https://root.cern/doc/master/classTEveFrameBox.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TEveGridStepper Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TEveGridStepper Class ReferenceGraphics » 3D Graphics » Event Display. ; Provide discrete position coordinates for placement of objects on regular grids. ; Definition at line 21 of file TEveGridStepper.h. Public Types; enum  EStepMode_e { kSM_XYZ; , kSM_YXZ; , kSM_XZY; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TEveGridStepper (Int_t sm=kSM_XYZ);  Constructor. ;  ;  ~TEveGridStepper () override;  ; Int_t GetCx () const;  ; Int_t GetCy () const;  ; Int_t GetCz () const;  ; Float_t GetDx () const;  ; Float_t GetDy () const;  ; Float_t GetDz () const;  ; Int_t GetNx () const;  ; Int_t GetNy () const;  ; Int_t GetNz () const;  ; Float_t GetOx () const;  ; Float_t GetOy () const;  ; Float_t GetOz () const;  ; void GetPosition (Float_t *p);  Get current position. ;  ; TClass * IsA () const override;  ; void Reset ();  Reset position to origin. ;  ; void SetDs (Float_t dx, Float_t dy, Float_t dz=0);  ; void SetNs (Int_t nx, Int_t ny, Int_t nz=1);  ; void SetOs (Float_t ox, Float_t oy, Float_t oz=0);  ; void SetTrans (TEveTrans *mx);  Se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveGridStepper.html:619,inherit,inherited,619,doc/master/classTEveGridStepper.html,https://root.cern,https://root.cern/doc/master/classTEveGridStepper.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TEveHit Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; TEveHit Class Reference. . Definition at line 79 of file TEveVSDStructs.h. Public Member Functions;  TEveHit ();  ;  ~TEveHit () override;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveHit.html:585,inherit,inherited,585,doc/master/classTEveHit.html,https://root.cern,https://root.cern/doc/master/classTEveHit.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TEveMCRecCrossRef Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; TEveMCRecCrossRef Class Reference. . Definition at line 257 of file TEveVSDStructs.h. Public Member Functions;  TEveMCRecCrossRef ();  ;  ~TEveMCRecCrossRef () override;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveMCRecCrossRef.html:626,inherit,inherited,626,doc/master/classTEveMCRecCrossRef.html,https://root.cern,https://root.cern/doc/master/classTEveMCRecCrossRef.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TEveMCTrack Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; TEveMCTrack Class Reference. . Definition at line 42 of file TEveVSDStructs.h. Public Member Functions;  TEveMCTrack ();  ;  ~TEveMCTrack () override;  ; TClass * IsA () const override;  ; TEveMCTrack & operator= (const TParticle &p);  ; void ResetPdgCode ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TParticle;  TParticle ();  reference to the particle record in PDG database ;  ;  TParticle (const TParticle &part);  copy constructor ;  ;  TParticle (Int_t pdg, Int_t status, Int_t mother1, Int_t mother2, Int_t daughter1, Int_t daughter2, const TLorentzVector &p, const TLorentzVector &v);  constructor ;  ;  TParticle (Int_t pdg, Int_t status, Int_t mother1, Int_t mother2, Int_t daughter1, Int_t daughter2, Double_t px, Double_t py, Double_t pz, Double_t etot, Double_t vx, Double_t vy, Double_t vz, Double_t time);  constructor ;  ;  ~TParticle () override;  destructor ;  ; Int_t Beauty () const;  Return beauty quantum number. ;  ; Int_t Charm () const;  Return charm quantum number. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a primary track. ;  ; Double_t Ek () const;  ; Double_t Energy () const;  ; Double_t Eta () const;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; Double_t GetCalcMass () const;  ; Int_t GetDaughter (Int_t i) const;  ; Int_t GetFirstDaughter () const;  ; Int_t GetFirstMother () const;  ; Int_t GetLastDaughter () const;  ; Double_t GetMass () const;  Return nominal particle mass from PDG table. ;  ; Int_t GetMother (Int_t i) const;  ; const char * Get",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveMCTrack.html:675,inherit,inherited,675,doc/master/classTEveMCTrack.html,https://root.cern,https://root.cern/doc/master/classTEveMCTrack.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TEveMacro Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TEveMacro Class ReferenceGraphics » 3D Graphics » Event Display. ; Sub-class of TMacro, overriding Exec to unload the previous version and cleanup after the execution. ; Definition at line 19 of file TEveMacro.h. Public Member Functions;  TEveMacro ();  Default constructor. ;  ;  TEveMacro (const char *name);  ;  TEveMacro (const TEveMacro &);  ;  ~TEveMacro () override;  ; Longptr_t Exec (const char *params=""0"", Int_t *error=nullptr) override;  Execute the macro. ;  ; TClass * IsA () const override;  ; void ResetRoot ();  Call gROOT->Reset() via interpreter. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMacro;  TMacro ();  Create an empty macro, use AddLine() or ReadFile() to fill this macro. ;  ;  TMacro (const char *name, const char *title="""");  Create a macro with a name and a title. ;  ;  TMacro (const TMacro &);  Copy constructor. ;  ; virtual ~TMacro ();  Delete this macro. ;  ; virtual TObjString * AddLine (const char *text);  Add line with text in the list of lines of this macro. ;  ; void Browse (TBrowser *b) override;  When clicking in the browser, the following action is performed on this macro, depending the content of the variable TMacro.Browse. ;  ; virtual TMD5 * Checksum ();  Returns checksum of the current content. ;  ; virtual TObjString * GetLineWith (const char *text) const;  Search the first line containing text. ;  ; TList * GetListOfLines () const;  ; TClass * IsA () const override;  ; virtual Bool_t Load () const;  Load the macro into the interpreter. ;  ; TMacro & operator= (const TMacro &);  Copy constructor. ;  ; void Paint (Option_t *option="""") override;  Execute this macro (called",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveMacro.html:960,inherit,inherited,960,doc/master/classTEveMacro.html,https://root.cern,https://root.cern/doc/master/classTEveMacro.html,1,['inherit'],['inherited']
Modifiability,. ROOT: TEveManager::TExceptionHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TEveManager::TExceptionHandler Class ReferenceGraphics » 3D Graphics » Event Display. ; Exception handler for Eve exceptions. ; Definition at line 71 of file TEveManager.h. Public Member Functions;  TExceptionHandler ();  ;  ~TExceptionHandler () override;  ; EStatus Handle (std::exception &exc) override;  Handle exceptions deriving from TEveException. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TStdExceptionHandler;  TStdExceptionHandler ();  Handle standard C++ exceptions intercepted by the TSystem::Run(). ;  ; virtual ~TStdExceptionHandler ();  ; void Add () override;  Add std::exception handler to system handler list. ;  ; TClass * IsA () const override;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove std::exception handler from system handler list. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveManager_1_1TExceptionHandler.html:805,inherit,inherited,805,doc/master/classTEveManager_1_1TExceptionHandler.html,https://root.cern,https://root.cern/doc/master/classTEveManager_1_1TExceptionHandler.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TEvePointSetArray Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; Friends |; List of all members ; TEvePointSetArray Class ReferenceGraphics » 3D Graphics » Event Display. ; An array of point-sets with each point-set playing a role of a bin in a histogram. ; When a new point is added to a TEvePointSetArray, an additional separating quantity needs to be specified: it determines into which TEvePointSet (bin) the point will actually be stored. Underflow and overflow bins are automatically created but they are not drawn by default.; By using the TEvePointSelector the points and the separating quantities can be filled directly from a TTree holding the source data. Setting of per-point TRef's is not supported.; After the filling, the range of separating variable can be controlled with a slider to choose a sub-set of PointSets that are actually shown. ; Definition at line 107 of file TEvePointSet.h. Public Member Functions;  TEvePointSetArray (const char *name=""TEvePointSetArray"", const char *title="""");  Constructor. ;  ;  ~TEvePointSetArray () override;  Destructor: deletes the fBins array. ;  ; void CloseBins ();  Call this after all the points have been filled. ;  ; Bool_t Fill (Double_t x, Double_t y, Double_t z, Double_t quant);  Add a new point. ;  ; TEvePointSet * GetBin (Int_t bin) const;  ; Double_t GetCurMax () const;  ; Double_t GetCurMin () const;  ; Int_t GetDefPointSetCapacity () const;  ; Double_t GetMax () const;  ; Double_t GetMin () const;  ; Int_t GetNBins () const;  ; void InitBins (const char *quant_name, Int_t nbins, Double_t min, Double_t max);  Initialize internal point-sets with given binning parameters. ;  ; TClass * IsA () const override;  ; void RemoveElementLocal (TEveElement *el) override;  Virtual from TEveElement, provide bin management. ;  ; void Remo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEvePointSetArray.html:952,variab,variable,952,doc/master/classTEvePointSetArray.html,https://root.cern,https://root.cern/doc/master/classTEvePointSetArray.html,1,['variab'],['variable']
Modifiability,". ROOT: TEveQuadSet Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Static Protected Member Functions |; Protected Attributes |; Private Member Functions |; Friends |; List of all members ; TEveQuadSet Class ReferenceGraphics » 3D Graphics » Event Display. ; Supports various internal formats that result in rendering of a set of planar (lines, rectangles, hexagons with shared normal) objects. ; Names of internal structures and their variables use A, B and C as names for coordinate value-holders. Typical assignment is A->X, B->Y, C->Z but each render mode can override this convention and impose y or x as a fixed (third or C) coordinate. Alphabetic order is obeyed in this correspondence.; For quad modes the deltas are expected to be positive. For line modes negative deltas are ok. ; Definition at line 19 of file TEveQuadSet.h. Classes; struct  QFreeQuad_t;  ; struct  QHex_t;  ; struct  QLineFixC_t;  ; struct  QOrigin_t;  ; struct  QRect_t;  ; struct  QRectFixC_t;  ; struct  QRectFixDim_t;  ; struct  QRectFixDimC_t;  . Public Types; enum  EQuadType_e { ;   kQT_Undef; , kQT_FreeQuad; , kQT_RectangleXY; , kQT_RectangleXZ; , ;   kQT_RectangleYZ; , kQT_RectangleXYFixedDim; , kQT_RectangleXYFixedZ; , kQT_RectangleXZFixedY; , ;   kQT_RectangleYZFixedX; , kQT_RectangleXYFixedDimZ; , kQT_RectangleXZFixedDimY; , kQT_RectangleYZFixedDimX; , ;   kQT_Rectangle_End; , kQT_LineXYFixedZ; , kQT_LineXZFixedY; , kQT_Line_End; , ;   kQT_HexagonXY; , kQT_HexagonYX; , kQT_Hexagon_End. };  ;  Public Types inherited from TEveDigitSet; typedef void(* Callback_foo) (TEveDigitSet *, Int_t, TObject *);  ; enum  ERenderMode_e { kRM_AsIs; , kRM_Line; , kRM_Fill; };  ; typedef TString(* TooltipCB_foo) (TEveDigitSet *, Int_t);  ;  Public Types inherited from TEveElement; enum  EChangeBits { kCBColorSelection = (1ULL << ( 0 )); , kCBTransBBox =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveQuadSet.html:597,variab,variables,597,doc/master/classTEveQuadSet.html,https://root.cern,https://root.cern/doc/master/classTEveQuadSet.html,1,['variab'],['variables']
Modifiability,". ROOT: TEveRGBAPalette Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Static Protected Attributes |; Private Member Functions |; Friends |; List of all members ; TEveRGBAPalette Class ReferenceGraphics » 3D Graphics » Event Display. ; A generic, speed-optimised mapping from value to RGBA color supporting different wrapping and range truncation modes. ; Flag fFixColorRange: specifies how the palette is mapped to signal values:; true - LowLimit -> HighLimit; false - MinValue -> MaxValue . Definition at line 22 of file TEveRGBAPalette.h. Public Types; enum  ELimitAction_e { kLA_Cut; , kLA_Mark; , kLA_Clip; , kLA_Wrap; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TEveRGBAPalette ();  Constructor. ;  ;  TEveRGBAPalette (Int_t min, Int_t max, Bool_t interp=kTRUE, Bool_t showdef=kTRUE, Bool_t fixcolrng=kFALSE);  Constructor. ;  ;  ~TEveRGBAPalette () override;  Destructor. ;  ; void ClearColorArray ();  Clear internal color array. ;  ; const UChar_t * ColorFromValue (Int_t val) const;  ; Bool_t ColorFromValue (Int_t val, Int_t defVal, UChar_t *pix, Bool_t alpha=kTRUE) const;  ; void ColorFromValue (Int_t val, UChar_t *pix, Bool_t alpha=kTRUE) const;  ; Color_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveRGBAPalette.html:849,inherit,inherited,849,doc/master/classTEveRGBAPalette.html,https://root.cern,https://root.cern/doc/master/classTEveRGBAPalette.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TEveRecCascade Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; TEveRecCascade Class Reference. . Definition at line 228 of file TEveVSDStructs.h. Public Member Functions;  TEveRecCascade ();  ;  ~TEveRecCascade () override;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveRecCascade.html:614,inherit,inherited,614,doc/master/classTEveRecCascade.html,https://root.cern,https://root.cern/doc/master/classTEveRecCascade.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TEveRecKink Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; TEveRecKink Class Reference. . Definition at line 162 of file TEveVSDStructs.h. Public Member Functions;  TEveRecKink ();  ;  ~TEveRecKink () override;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveRecKink.html:602,inherit,inherited,602,doc/master/classTEveRecKink.html,https://root.cern,https://root.cern/doc/master/classTEveRecKink.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TEveRecTrackT< TT > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; TEveRecTrackT< TT > Class Template Reference. ; template<typename TT>; class TEveRecTrackT< TT >; Definition at line 129 of file TEveVSDStructs.h. Public Member Functions;  TEveRecTrackT ();  ;  ~TEveRecTrackT () override;  ; TClass * IsA () const override;  ; Float_t Pt ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveRecTrackT.html:708,inherit,inherited,708,doc/master/classTEveRecTrackT.html,https://root.cern,https://root.cern/doc/master/classTEveRecTrackT.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TEveRecV0 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; TEveRecV0 Class Reference. . Definition at line 197 of file TEveVSDStructs.h. Public Member Functions;  TEveRecV0 ();  ;  ~TEveRecV0 () override;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritanc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveRecV0.html:594,inherit,inherited,594,doc/master/classTEveRecV0.html,https://root.cern,https://root.cern/doc/master/classTEveRecV0.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TEveSelectorToEventList Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TEveSelectorToEventList Class ReferenceGraphics » 3D Graphics » Event Display. ; TSelector that stores entry numbers of matching TTree entries into an event-list. ; Definition at line 22 of file TEveTreeTools.h. Public Member Functions;  TEveSelectorToEventList (TEventList *evl, const char *sel);  Constructor. ;  ; TClass * IsA () const override;  ; Bool_t Process (Long64_t entry) override;  Process entry. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t Version () const override;  ;  Public Member Functions inherited from TSelectorDraw;  TSelectorDraw ();  Default selector constructor. ;  ;  ~TSelectorDraw () override;  Selector destructor. ;  ; void Begin (TTree *tree) override;  Called every time a loop on the tree(s) starts. ;  ; virtual Int_t GetAction () const;  ; virtual bool GetCleanElist () const;  ; virtual Int_t GetDimension () const;  ; virtual Long64_t GetDrawFlag () const;  ; Int_t GetMultiplicity () const;  ; virtual Int_t GetNfill () const;  ; TObject * GetObject () const;  ; TH1 * GetOldHistogram () const;  ; TTreeFormula * GetSelect () const;  ; virtual Long64_t GetSelectedRows () const;  ; TTree * GetTree () const;  ; virtual Double_t * GetV1 () const;  See TSelectorDraw::GetVal. ;  ; virtual Double_t * GetV2 () const;  See TSelectorDraw::GetVal. ;  ; virtual Double_t * GetV3 () const;  See TSelectorDraw::GetVal. ;  ; virtual Double_t * GetV4 () const;  See TSelectorDraw::GetVal. ;  ; virtual Double_t * GetVal (Int_t i) const;  Return the last values corresponding to the i-th component of the formula being processed (where the component are ':' separated). ;  ; TT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveSelectorToEventList.html:906,inherit,inherited,906,doc/master/classTEveSelectorToEventList.html,https://root.cern,https://root.cern/doc/master/classTEveSelectorToEventList.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TEveTrackListProjected Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; List of all members ; TEveTrackListProjected Class ReferenceGraphics » 3D Graphics » Event Display. ; Specialization of TEveTrackList for holding TEveTrackProjected objects. ; Definition at line 60 of file TEveTrackProjected.h. Public Member Functions;  TEveTrackListProjected ();  Default constructor. ;  ;  ~TEveTrackListProjected () override;  ; TEveElement * GetProjectedAsElement () override;  Returns this projected dynamic-casted to TEveElement. ;  ; TClass * IsA () const override;  ; void SetDepth (Float_t d) override;  Set depth of all children inheriting from TEveTrackProjected. ;  ; virtual void SetDepth (Float_t d, TEveElement *el);  Set depth of all children of el inheriting from TEveTrackProjected. ;  ; void SetProjection (TEveProjectionManager *proj, TEveProjectable *model) override;  This is virtual method from base-class TEveProjected. ;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UpdateProjection () override;  ;  Public Member Functions inherited from TEveTrackList;  TEveTrackList (const char *name, TEveTrackPropagator *prop=nullptr);  Constructor. ;  ;  TEveTrackList (TEveTrackPropagator *prop=nullptr);  Constructor. ;  ;  ~TEveTrackList () override;  Destructor. ;  ; void CopyVizParams (const TEveElement *el) override;  Copy visualization parameters from element el. ;  ; void FindMomentumLimits (Bool_t recurse=kTRUE);  Loop over children and find highest pT and p of contained TEveTracks. ;  ; TEveTrack * FindTrackByIndex (Int_t index);  Find track by index, select it and display it in the editor. ;  ; TEveTrack * FindTrackByLabel (Int_t label);  Find track by label, select it and display it in the editor. ;  ; Double_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveTrackListProjected.html:827,inherit,inheriting,827,doc/master/classTEveTrackListProjected.html,https://root.cern,https://root.cern/doc/master/classTEveTrackListProjected.html,2,['inherit'],['inheriting']
Modifiability,". ROOT: TEveWindowFrame Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TEveWindowFrame Class ReferenceGraphics » 3D Graphics » Event Display. ; Encapsulates TGFrame into an eve-window. ; The frame is owned by the eve-window. ; Definition at line 335 of file TEveWindow.h. Public Member Functions;  TEveWindowFrame (TGFrame *frame, const char *n=""TEveWindowFrame"", const char *t="""");  Constructor. ;  ;  ~TEveWindowFrame () override;  Destructor. ;  ; TGCompositeFrame * GetGUICompositeFrame ();  Returns the registered top-frame of this eve-window dynamic-casted to composite-frame. ;  ; TGFrame * GetGUIFrame () override;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TEveWindow;  TEveWindow (const char *n=""TEveWindow"", const char *t="""");  ;  ~TEveWindow () override;  Destructor. ;  ; virtual Bool_t CanMakeNewSlots () const;  ; void ClearEveFrame ();  Clears eve-frame associated with this window. ;  ; virtual void DestroyWindow ();  Destroy eve-window - replace it with an empty frame-slot. ;  ; virtual void DestroyWindowAndSlot ();  Destroy eve-window and its frame-slot. ;  ; void FlipShowTitleBar ();  ; TEveCompositeFrame * GetEveFrame ();  ; Bool_t GetShowTitleBar () const;  ; Bool_t IsAncestorOf (TEveWindow *win);  Returns true if this is an ancestor of win. ;  ; Bool_t IsCurrent () const;  Returns true if this window is the current one. ;  ; void MakeCurrent ();  Make this window current. ;  ; void NameTitleChanged () override;  Name or title of the window changed - propagate to frames. ;  ; virtual TEveWindowSlot * NewSlot ();  ; void PopulateEmptyFrame (TEveCompositeFrame *ef);  Populate given frame-slot - intended for initial pop",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveWindowFrame.html:999,inherit,inherited,999,doc/master/classTEveWindowFrame.html,https://root.cern,https://root.cern/doc/master/classTEveWindowFrame.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TEventIter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TEventIter Class ReferenceabstractPROOF » PROOF kernel Libraries. ; Special iterator class used in TProofPlayer to iterate over events or objects in the packets. ; Definition at line 42 of file TEventIter.h. Public Types; enum  EIterType { kData = 15; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TEventIter ();  Default constructor. ;  ;  TEventIter (TDSet *dset, TSelector *sel, Long64_t first, Long64_t num);  Constructor. ;  ;  ~TEventIter () override;  Destructor. ;  ; virtual Long64_t GetCacheSize ()=0;  ; virtual Long64_t GetEntryNumber (Long64_t);  ; virtual Int_t GetLearnEntries ()=0;  ; virtual Long64_t GetNextEvent ()=0;  ; virtual Int_t GetNextPacket (Long64_t &first, Long64_t &num)=0;  ; TList * GetPackets ();  ; virtual void InvalidatePacket ();  Invalidated the current packet (if any) by setting the TDSetElement::kCorrupted bit. ;  ; TClass * IsA () const override;  ; virtual void StopProcess (Bool_t abort);  Set flag to stop the process. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &Class",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEventIter.html:565,inherit,inherited,565,doc/master/classTEventIter.html,https://root.cern,https://root.cern/doc/master/classTEventIter.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TEventIterObj Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; TEventIterObj Class Reference. . Definition at line 122 of file TEventIter.h. Public Member Functions;  TEventIterObj ();  Default ctor. ;  ;  TEventIterObj (TDSet *dset, TSelector *sel, Long64_t first, Long64_t num);  Constructor. ;  ;  ~TEventIterObj () override;  Destructor. ;  ; Long64_t GetCacheSize () override;  ; Int_t GetLearnEntries () override;  ; Long64_t GetNextEvent () override;  Get next event. ;  ; Int_t GetNextPacket (Long64_t &first, Long64_t &num) override;  Get loop range. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TEventIter;  TEventIter ();  Default constructor. ;  ;  TEventIter (TDSet *dset, TSelector *sel, Long64_t first, Long64_t num);  Constructor. ;  ;  ~TEventIter () override;  Destructor. ;  ; virtual Long64_t GetEntryNumber (Long64_t);  ; TList * GetPackets ();  ; virtual void InvalidatePacket ();  Invalidated the current packet (if any) by setting the TDSetElement::kCorrupted bit. ;  ; virtual void StopProcess (Bool_t abort);  Set flag to stop the process. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  B",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEventIterObj.html:982,inherit,inherited,982,doc/master/classTEventIterObj.html,https://root.cern,https://root.cern/doc/master/classTEventIterObj.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TEventIterTree::TFileTree Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; TEventIterTree::TFileTree Class Reference. . Definition at line 162 of file TEventIter.h. Public Member Functions;  TFileTree (const char *name, TFile *f, Bool_t islocal);  Default ctor. ;  ;  ~TFileTree () override;  Default dtor. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEventIterTree_1_1TFileTree.html:487,inherit,inherited,487,doc/master/classTEventIterTree_1_1TFileTree.html,https://root.cern,https://root.cern/doc/master/classTEventIterTree_1_1TFileTree.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TEventIterUnit Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TEventIterUnit Class Reference. . Definition at line 99 of file TEventIter.h. Public Member Functions;  TEventIterUnit ();  Default constructor. ;  ;  TEventIterUnit (TDSet *dset, TSelector *sel, Long64_t num);  Main constructor. ;  ;  ~TEventIterUnit () override;  ; Long64_t GetCacheSize () override;  ; Int_t GetLearnEntries () override;  ; Long64_t GetNextEvent () override;  Get next event. ;  ; Int_t GetNextPacket (Long64_t &first, Long64_t &num) override;  Get loop range. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TEventIter;  TEventIter ();  Default constructor. ;  ;  TEventIter (TDSet *dset, TSelector *sel, Long64_t first, Long64_t num);  Constructor. ;  ;  ~TEventIter () override;  Destructor. ;  ; virtual Long64_t GetEntryNumber (Long64_t);  ; TList * GetPackets ();  ; virtual void InvalidatePacket ();  Invalidated the current packet (if any) by setting the TDSetElement::kCorrupted bit. ;  ; virtual void StopProcess (Bool_t abort);  Set flag to stop the process. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEventIterUnit.html:937,inherit,inherited,937,doc/master/classTEventIterUnit.html,https://root.cern,https://root.cern/doc/master/classTEventIterUnit.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TF1 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Protected Attributes |; Static Protected Attributes |; Private Member Functions |; Friends |; List of all members ; TF1 Class ReferenceHistogram Library » Function classes. ; 1-Dim function class . TF1: 1-Dim function class; A TF1 object is a 1-Dim function defined between a lower and upper limit. The function may be a simple function based on a TFormula expression or a precompiled user function. The function may have associated parameters. TF1 graphics function is via the TH1 and TGraph drawing functions.; The following types of functions can be created:. Expression using variable x and no parameters; Expression using variable x with parameters; Lambda Expression with variable x and parameters; A general C function with parameters; A general C++ function object (functor) with parameters; A member function with parameters of a general C++ class. 1 - Expression using variable x and no parameters; Case 1: inline expression using standard C++ functions/operators; {; auto fa1 = new TF1(""fa1"",""sin(x)/x"",0,10);; fa1->Draw();; }; TF1::TF1TF1()TF1 default constructor.Definition TF1.cxx:489. Case 2: inline expression using a ROOT function (e.g. from TMath) without parameters; {; auto fa2 = new TF1(""fa2"",""TMath::DiLog(x)"",0,10);; fa2->Draw();; }. Case 3: inline expression using a user defined CLING function by name; Double_t myFunc(double x) { return x+sin(x); }; ....; auto fa3 = new TF1(""fa3"",""myFunc(x)"",-3,5);; fa3->Draw();; myFuncDouble_t myFunc(Double_t x)Definition ROOTR.C:4; double; xDouble_t x[n]Definition legend1.C:17. 2 - Expression using variable x with parameters; Case 1: inline expression using standard C++ functions/operators; Example a:; auto fa = new TF1(""fa"",""[0]*x*sin([1]*x)"",-3,3);; This create",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF1.html:850,variab,variable,850,doc/master/classTF1.html,https://root.cern,https://root.cern/doc/master/classTF1.html,3,['variab'],['variable']
Modifiability,". ROOT: TF1::TF1FunctorPointerImpl< T > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; TF1::TF1FunctorPointerImpl< T > Struct Template Reference. ; template<class T>; struct TF1::TF1FunctorPointerImpl< T >; Definition at line 313 of file TF1.h. Public Member Functions;  TF1FunctorPointerImpl (const ROOT::Math::ParamFunctorTempl< T > &func);  ;  TF1FunctorPointerImpl (const std::function< T(const T *f, const Double_t *param)> &func);  ;  ~TF1FunctorPointerImpl () override;  ; TF1FunctorPointer * Clone () const override;  ;  Public Member Functions inherited from TF1::TF1FunctorPointer; virtual ~TF1FunctorPointer ();  . Public Attributes; ROOT::Math::ParamFunctorTempl< T > fImpl;  . #include <TF1.h>. Inheritance diagram for TF1::TF1FunctorPointerImpl< T >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TF1FunctorPointerImpl() [1/2]. template<class T > . TF1::TF1FunctorPointerImpl< T >::TF1FunctorPointerImpl ; (; const ROOT::Math::ParamFunctorTempl< T > & ; func). inline . Definition at line 314 of file TF1.h. ◆ TF1FunctorPointerImpl() [2/2]. template<class T > . TF1::TF1FunctorPointerImpl< T >::TF1FunctorPointerImpl ; (; const std::function< T(const T *f, const Double_t *param)> & ; func). inline . Definition at line 315 of file TF1.h. ◆ ~TF1FunctorPointerImpl(). template<class T > . TF1::TF1FunctorPointerImpl< T >::~TF1FunctorPointerImpl ; (; ). inlineoverride . Definition at line 316 of file TF1.h. Member Function Documentation. ◆ Clone(). template<class T > . TF1FunctorPointer * TF1::TF1FunctorPointerImpl< T >::Clone ; (; ); const. inlineoverridevirtual . Implements TF1::TF1FunctorPointer.; Definition at line 317 of file TF1.h. Member Data Documentation. ◆ fImpl. template<class T > . ROOT::Math::ParamFunctorTempl<T> TF1::TF1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structTF1_1_1TF1FunctorPointerImpl.html:707,inherit,inherited,707,doc/master/structTF1_1_1TF1FunctorPointerImpl.html,https://root.cern,https://root.cern/doc/master/structTF1_1_1TF1FunctorPointerImpl.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TF1AbsComposition Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TF1AbsComposition Class Referenceabstract. . Definition at line 16 of file TF1AbsComposition.h. Public Member Functions;  ~TF1AbsComposition () override;  ; void Copy (TObject &obj) const override=0;  Copy this to obj. ;  ; TClass * IsA () const override;  ; virtual double operator() (const Double_t *x, const Double_t *p)=0;  ; virtual void SetParameters (const Double_t *params)=0;  ; virtual void SetRange (Double_t a, Double_t b)=0;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Update ()=0;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, In",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF1AbsComposition.html:867,inherit,inherited,867,doc/master/classTF1AbsComposition.html,https://root.cern,https://root.cern/doc/master/classTF1AbsComposition.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TF1NormSum Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TF1NormSum Class ReferenceHistogram Library » Function classes. ; Class adding two functions: c1*f1+c2*f2. ; Definition at line 19 of file TF1NormSum.h. Public Member Functions;  TF1NormSum ();  ;  TF1NormSum (const std::vector< TF1 * > &functions, const std::vector< Double_t > &coeffs, Double_t scale=1.);  ;  TF1NormSum (const TF1NormSum &nsum);  Copy constructor (necessary to hold unique_ptr as member variable) ;  ;  TF1NormSum (const TString &formula, Double_t xmin, Double_t xmax);  TF1NormSum constructor taking any addition of formulas with coefficient or not. ;  ;  TF1NormSum (TF1 *function1, TF1 *function2, Double_t coeff1=1., Double_t coeff2=1., Double_t scale=1.);  TF1NormSum constructor taking 2 functions, and 2 coefficients (if not equal to 1) ;  ;  TF1NormSum (TF1 *function1, TF1 *function2, TF1 *function3, Double_t coeff1=1., Double_t coeff2=1., Double_t coeff3=1., Double_t scale=1.);  TF1NormSum constructor taking 3 functions, and 3 coefficients (if not equal to 1) ;  ;  ~TF1NormSum () override;  ; void Copy (TObject &obj) const override;  Copy this to obj. ;  ; Int_t GetNpar () const;  Return the number of (non constant) parameters including the coefficients: for 2 functions: c1,c2,p0,p1,p2,p3... ;  ; std::vector< double > GetParameters () const;  Return array of parameters. ;  ; const char * GetParName (Int_t ipar) const;  ; void GetRange (Double_t &a, Double_t &b) const;  ; Double_t GetScale () const;  ; Double_t GetXmax () const;  ; Double_t GetXmin () const;  ; TClass * IsA () const override;  ; double operator() (const Double_t *x, const Double_t *p) override;  Overload the parenthesis to add the functions. ;  ; TF1NormSum & operator= (const TF1NormSum &rhs);  Operator =. ;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF1NormSum.html:684,variab,variable,684,doc/master/classTF1NormSum.html,https://root.cern,https://root.cern/doc/master/classTF1NormSum.html,1,['variab'],['variable']
Modifiability,". ROOT: TF2 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TF2 Class ReferenceHistogram Library » Function classes. ; A 2-Dim function with parameters. ; The following types of functions can be created:. Expression using variables x and y; Expression using a user defined function; Lambda Expression with x and y variables and parameters. Expression using variables x and y; {; auto f2 = new TF2(""f2"",""sin(x)*sin(y)/(x*y)"",0,5,0,5);; f2->Draw();; }; TF2::TF2TF2()TF2 default constructor.Definition TF2.cxx:83. Expression using a user defined function; Double_t func(Double_t *val, Double_t *par); {; Float_t x = val[0];; Float_t y = val[1];; Double_t f = x*x-y*y;; return f;; }; ; void fplot(); {; auto f = new TF2(""f"",func,-1,1,-1,1);; f->Draw(""surf1"");; }; f#define f(i)Definition RSha256.hxx:104; Float_tfloat Float_tDefinition RtypesCore.h:57; double; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17. Lambda Expression with x and y variables and parameters; root [0] TF2 f2(""f2"", [](double* x, double*p) { return x[0] + x[1] * p[0]; }, 0., 1., 0., 1., 1); (TF2 &) Name: f2 Title: f2; root [1] f2.SetParameter(0, 1.); root [2] f2.Eval(1., 2.); (double) 3.0000000; pwinID h TVirtualViewer3D TVirtualGLPainter pDefinition TGWin32VirtualGLProxy.cxx:51; TF2A 2-Dim function with parameters.Definition TF2.h:29; See TF1 class for the list of functions formats ; Definition at line 29 of file TF2.h. Public Member Functions;  TF2 ();  TF2 default constructor. ;  ;  TF2 (const char *name, const char *formula, Double_t xmin=0, Double_t xmax=1, Double_t ymin=0, Double_t ymax=1, Option_t *opt=nullptr);  F2 constructor using a formula definition. ;  ; template<class PtrObj , typename MemFn > ;  TF2 (const char *name, const PtrObj &p, MemFn memFn, Double_t xmin, D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF2.html:432,variab,variables,432,doc/master/classTF2.html,https://root.cern,https://root.cern/doc/master/classTF2.html,3,['variab'],['variables']
Modifiability,". ROOT: TFITSHDU Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TFITSHDU Class ReferenceGraphics » 2D Graphics » FITS file. ; FITS file interface class. ; TFITSHDU is a class that allows extracting images and data from FITS files and contains several methods to manage them. ; Definition at line 35 of file TFITS.h. Classes; union  Cell;  ; struct  Column;  ; struct  HDURecord;  . Public Types; enum  EColumnTypes { kString; , kRealNumber; , kRealArray; , kRealVector; };  ; enum  EHDUTypes { kImageHDU; , kTableHDU; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TFITSHDU (const char *filepath, const char *extension_name);  TFITSHDU constructor from filepath and extension name. ;  ;  TFITSHDU (const char *filepath, Int_t extension_number);  TFITSHDU constructor from filepath and extension number. ;  ;  TFITSHDU (const char *filepath_with_filter);  TFITSHDU constructor from file path with HDU selection filter. ;  ;  ~TFITSHDU () override;  TFITSHDU destructor. ;  ; Bool_t Change (const char *filter);  Change to another HDU given by ""filter"". ;  ; Bool_t Change (Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFITSHDU.html:841,inherit,inherited,841,doc/master/classTFITSHDU.html,https://root.cern,https://root.cern/doc/master/classTFITSHDU.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TFTP Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TFTP Class Reference. . Definition at line 34 of file TFTP.h. Public Types; enum  { kDfltBlockSize = 0x80000; , kDfltWindowSize = 65535; , kBinary = 0; , kAscii = 1; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TFTP (const char *url, Int_t parallel=1, Int_t wsize=kDfltWindowSize, TSocket *sock=nullptr);  Open connection to host specified by the url using par parallel sockets. ;  ; virtual ~TFTP ();  TFTP dtor. Send close message and close socket. ;  ; Bool_t AccessPathName (const char *path, EAccessMode mode=kFileExists, Bool_t print=kFALSE);  Returns kFALSE if one can access a file using the specified access mode. ;  ; void Ascii ();  ; void ascii ();  ; void bin ();  ; void Binary ();  ; void bye ();  ; void cd (const char *dir) const;  ; Int_t ChangeDirectory (const char *dir) const;  Change the remote directory. ;  ; Int_t ChangePermission (const char *file, Int_t mode) const;  Change permissions of a remote file. ;  ; void chmod (const char *file, Int_t mode) const;  ; Int_t Close ();  Close ftp connection. ;  ; Int_t DeleteDirectory (const ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFTP.html:498,inherit,inherited,498,doc/master/classTFTP.html,https://root.cern,https://root.cern/doc/master/classTFTP.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TFileCollection Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TFileCollection Class ReferenceCore ROOT classes » Base ROOT classes. ; Class that contains a list of TFileInfo's and accumulated meta data information about its entries. ; This class is used to describe file sets as stored by Grid file catalogs, by PROOF or any other collection of TFile names. ; Definition at line 39 of file TFileCollection.h. Public Types; enum  EStatusBits { kRemoteCollection = (1ULL << ( 15 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TFileCollection (const char *name=nullptr, const char *title=nullptr, const char *file=nullptr, Int_t nfiles=-1, Int_t firstfile=1);  TFileCollection constructor. ;  ; virtual ~TFileCollection ();  Cleanup. ;  ; Int_t Add (const char *path);  Add all files matching the specified pattern to the collection. ;  ; Int_t Add (TFileCollection *coll);  Add content of the TFileCollection to this collection. ;  ; Int_t Add (TFileInfo *info);  Add TFileInfo to the collection. ;  ; Int_t AddFromFile (const char *file, Int_t nfiles=-1, Int_t firstfile=1);  Add file names contained in the specified text file. ;  ; Bool_t Ad",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFileCollection.html:733,inherit,inherited,733,doc/master/classTFileCollection.html,https://root.cern,https://root.cern/doc/master/classTFileCollection.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TFileHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TFileHandler Class Reference. . Definition at line 65 of file TSysEvtHandler.h. Public Types; enum  { kRead = 1; , kWrite = 2; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system file handler list. ;  ; int GetFd () const;  ; virtual Bool_t HasReadInterest ();  True if handler is interested in read events. ;  ; virtual Bool_t HasWriteInterest ();  True if handler is interested in write events. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsReadReady () const;  ; virtual Bool_t IsWriteReady () const;  ; Bool_t Notify () override;  Notify when event occurred on descriptor associated with this handler. ;  ; virtual Bool_t ReadNotify ();  Notify when something can be read from the descriptor associated with this handler. ;  ; void Remove () override;  Remove file event handler from system file handler list. ;  ; virtual void ResetReadyMask ();  ; void SetFd (int fd);  ; virtual void SetInterest (Int_t mas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFileHandler.html:442,inherit,inherited,442,doc/master/classTFileHandler.html,https://root.cern,https://root.cern/doc/master/classTFileHandler.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TFileInfo Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TFileInfo Class ReferenceCore ROOT classes » Base ROOT classes. ; Class describing a generic file including meta information. ; Definition at line 39 of file TFileInfo.h. Public Types; enum  EStatusBits { kStaged = (1ULL << ( 15 )); , kCorrupted = (1ULL << ( 16 )); , kSortWithIndex = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TFileInfo (const char *url=nullptr, Long64_t size=-1, const char *uuid=nullptr, const char *md5=nullptr, TObject *meta=nullptr);  Constructor. ;  ;  TFileInfo (const TFileInfo &);  Copy constructor. ;  ; virtual ~TFileInfo ();  Destructor. ;  ; Bool_t AddMetaData (TObject *meta);  Add's a meta data object to the file info object. ;  ; Bool_t AddUrl (const char *url, Bool_t infront=kFALSE);  Add a new URL. ;  ; Int_t Compare (const TObject *obj) const override;  Compare TFileInfo object by their first urls. ;  ; TUrl * FindByUrl (const char *url, Bool_t withDeflt=kFALSE);  Find an element from a URL. Returns 0 if not found. ;  ; TUrl * GetCurrentUrl () const;  Return the current url. ;  ; TUrl * GetFirstUrl () const;  ; Int_t GetIn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFileInfo.html:611,inherit,inherited,611,doc/master/classTFileInfo.html,https://root.cern,https://root.cern/doc/master/classTFileInfo.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TFileInfoMeta Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TFileInfoMeta Class Reference. . Definition at line 108 of file TFileInfo.h. Public Types; enum  EStatusBits { kExternal = (1ULL << ( 15 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TFileInfoMeta ();  ;  TFileInfoMeta (const char *objPath, const char *objClass=""TTree"", Long64_t entries=-1, Long64_t first=0, Long64_t last=-1, Long64_t totbytes=-1, Long64_t zipbytes=-1);  Create file meta data object. ;  ;  TFileInfoMeta (const char *objPath, const char *objDir, const char *objClass, Long64_t entries=-1, Long64_t first=0, Long64_t last=-1, Long64_t totbytes=-1, Long64_t zipbytes=-1);  Create file meta data object. ;  ;  TFileInfoMeta (const TFileInfoMeta &m);  Copy constructor. ;  ; virtual ~TFileInfoMeta ();  ; const char * GetClass () const;  ; const char * GetDirectory () const;  Get the object's directory in the ROOT file. ;  ; Long64_t GetEntries () const;  ; Long64_t GetFirst () const;  ; Long64_t GetLast () const;  ; const char * GetObject () const;  Get the object name, with path stripped off. ;  ; Long64_t GetTotBytes () const;  ; Long64_t GetZipBytes () co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFileInfoMeta.html:453,inherit,inherited,453,doc/master/classTFileInfoMeta.html,https://root.cern,https://root.cern/doc/master/classTFileInfoMeta.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TFileMerger Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Types |; Private Member Functions |; List of all members ; TFileMerger Class ReferenceInput/Output Library. ; This class provides file copy and merging services. ; It can be used to copy files (not only ROOT files), using TFile or any of its remote file access plugins. It is therefore useful in a Grid environment where the files might be accessible only remotely. The merging interface allows files containing histograms and trees to be merged, like the standalone hadd program. ; Definition at line 30 of file TFileMerger.h. Public Types; enum  EPartialMergeType { ;   kRegular = 0; , kIncremental = (1ULL << ( 1 )); , kResetable = (1ULL << ( 2 )); , kNonResetable = (1ULL << ( 3 )); , ;   kDelayWrite = (1ULL << ( 4 )); , kAll = (1ULL << ( 2 ))|(1ULL << ( 3 )); , kAllIncremental = kIncremental | kAll; , kOnlyListed = (1ULL << ( 5 )); , ;   kSkipListed = (1ULL << ( 6 )); , kKeepCompression = (1ULL << ( 7 )). };  Type of the partial merge. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TFileMerger (Bool_t isLocal=kTRUE, Bool_t histoOneGo=kTRUE);  Create file merger object. ;  ;  ~TFi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFileMerger.html:541,plugin,plugins,541,doc/master/classTFileMerger.html,https://root.cern,https://root.cern/doc/master/classTFileMerger.html,1,['plugin'],['plugins']
Modifiability,". ROOT: TFileOpenHandle Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TFileOpenHandle Class ReferenceInput/Output Library. ; Class holding info about the file being opened. ; Definition at line 354 of file TFile.h. Public Member Functions;  ~TFileOpenHandle () override;  ; Int_t GetCompress () const;  ; Int_t GetNetOpt () const;  ; const char * GetOpt () const;  ; Bool_t Matches (const char *name);  Return kTRUE if this async request matches the open request specified by 'url'. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFileOpenHandle.html:698,inherit,inherited,698,doc/master/classTFileOpenHandle.html,https://root.cern,https://root.cern/doc/master/classTFileOpenHandle.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TFitResult Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TFitResult Class ReferenceHistogram Library. ; Extends the ROOT::Fit::Result class with a TNamed inheritance providing easy possibility for I/O. ; Definition at line 34 of file TFitResult.h. Public Member Functions;  TFitResult (const char *name, const char *title);  ;  TFitResult (const ROOT::Fit::FitResult &f);  Constructor from a ROOT::Fit::FitResult copy the contained TF1 pointer function if it is. ;  ;  TFitResult (int status=0);  ;  ~TFitResult () override;  ; bool Contour (unsigned int ipar, unsigned int jpar, TGraph *gr, double confLevel=0.683);  Create a 2D contour around the minimum for the parameter ipar and jpar if a minimum does not exist or is invalid it will return false on exit a TGraph is filled with the contour points the number of contour points is determined by the size of the TGraph. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; double Error (unsigned int i) const;  ; TMatrixDSym GetCorrelationMatrix () const;  Return the correlation matrix from fit. ;  ; TMatrixDSym GetCovarianceMatrix () const;  Return the covariance matrix from fit. ;  ; TClass * IsA () const override;  ; void Print (Option_t *option="""") const override;  Print result of the fit, by default chi2, parameter values and errors. ;  ; bool Scan (unsigned int ipar, TGraph *gr, double xmin=0, double xmax=0);  Scan parameter ipar between value of xmin and xmax A graph must be given which will be on return filled with the scan resul If the graph size is zero, a default size n = 40 will be used. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFitResult.html:320,inherit,inheritance,320,doc/master/classTFitResult.html,https://root.cern,https://root.cern/doc/master/classTFitResult.html,1,['inherit'],['inheritance']
Modifiability,". ROOT: TFoam Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TFoam Class Reference. ; TFoam is the main class of the multi-dimensional general purpose Monte Carlo event generator (integrator) FOAM. . FOAM Version 1.02M; AuthorsS. Jadach and P.Sawicki Institute of Nuclear Physics, Cracow, Poland Stanislaw. Jadac.nosp@m.h@if.nosp@m.j.edu.nosp@m..pl, Pawel.nosp@m..Saw.nosp@m.icki@.nosp@m.ifj..nosp@m.edu.p.nosp@m.l. What is FOAM for?. Suppose you want to generate randomly points (vectors) according to an arbitrary probability distribution in n dimensions, for which you supply your own method. FOAM can do it for you! Even if your distributions has quite strong peaks and is discontinuous!; FOAM generates random points with weight one or with variable weight.; FOAM is capable to integrate using efficient ""adaptive"" MC method. (The distribution does not need to be normalized to one.). How does it work?; FOAM is the simplified version of the multi-dimensional general purpose Monte Carlo event generator (integrator) FOAM. It creates hyper-rectangular ""foam of cells"", which is more dense around its peaks. See the following 2-dim. example of the map of 1000 cells for doubly peaked distribution:. FOAM is now fully integrated with the ROOT package. The important bonus of the ROOT use is persistency of the FOAM objects!; For more sophisticated problems full version of FOAM may be more appropriate: See full version of FOAM. Simple example of the use of FOAM:; ; #include ""Riostream.h""; #include ""TFoam.h""; #include ""TCanvas.h""; #include ""TH2.h""; #include ""TMath.h""; #include ""TFoamIntegrand.h""; #include ""TRandom3.h""; ; //_____________________________________________________________________________; Double_t sqr(Double_t x){; return x*x;; }; //______________________________________",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFoam.html:955,variab,variable,955,doc/master/classTFoam.html,https://root.cern,https://root.cern/doc/master/classTFoam.html,1,['variab'],['variable']
Modifiability,". ROOT: TFoamIntegrand Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TFoamIntegrand Class Referenceabstract. ; Abstract class representing n-dimensional real positive integrand function. ; Definition at line 9 of file TFoamIntegrand.h. Public Member Functions;  TFoamIntegrand ();  ;  ~TFoamIntegrand () override;  ; virtual Double_t Density (Int_t ndim, Double_t *)=0;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFoamIntegrand.html:733,inherit,inherited,733,doc/master/classTFoamIntegrand.html,https://root.cern,https://root.cern/doc/master/classTFoamIntegrand.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TFriendElement Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Friends |; List of all members ; TFriendElement Class ReferenceTree Library. ; A TFriendElement TF describes a TTree object TF in a file. ; When a TFriendElement TF is added to the list of friends of an existing TTree T, any variable from TF can be referenced in a query to T.; To add a TFriendElement to an existing TTree T, do: T.AddFriend(""friendTreename"",""friendTreeFile"");; See TTree::AddFriend for more information. ; Definition at line 33 of file TFriendElement.h. Public Types; enum  EStatusBits { kFromChain = (1ULL << ( 9 )); , kUpdated = (1ULL << ( 10 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TFriendElement ();  Default constructor for a friend element. ;  ;  TFriendElement (TTree *tree, const char *treename, const char *filename);  Create a friend element. ;  ;  TFriendElement (TTree *tree, const char *treename, TFile *file);  Create a friend element. ;  ;  TFriendElement (TTree *tree, TTree *friendtree, const char *alias);  Create a friend element. ;  ;  ~TFriendElement () override;  Destructor. Disconnect from the owning tree if needed. ;  ; virtual TTree * Connect (); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFriendElement.html:500,variab,variable,500,doc/master/classTFriendElement.html,https://root.cern,https://root.cern/doc/master/classTFriendElement.html,2,"['inherit', 'variab']","['inherited', 'variable']"
Modifiability,". ROOT: TGCanvas Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TGCanvas Class ReferenceGUI » Low level GUI widgets. ; A frame containing two scrollbars (a horizontal and a vertical) and a viewport. ; The viewport acts as the window through which we look at the contents of the container frame. ; Definition at line 192 of file TGCanvas.h. Public Types; enum  { kCanvasNoScroll = 0; , kCanvasScrollHorizontal = (1ULL << ( 0 )); , kCanvasScrollVertical = (1ULL << ( 1 )); , kCanvasScrollBoth = (kCanvasScrollHorizontal | kCanvasScrollVertical); };  ;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGCanvas (const TGWindow *p=nullptr, UInt_t w=1, UInt_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGCanvas.html:789,inherit,inherited,789,doc/master/classTGCanvas.html,https://root.cern,https://root.cern/doc/master/classTGCanvas.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGContainerKeyboardTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TGContainerKeyboardTimer Class Reference. . Definition at line 93 of file TGCanvas.cxx. Public Member Functions;  TGContainerKeyboardTimer (TGContainer *t);  ; Bool_t Notify () override;  single shot timer ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Start (Long_t milliSec=-1, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGContainerKeyboardTimer.html:461,inherit,inherited,461,doc/master/classTGContainerKeyboardTimer.html,https://root.cern,https://root.cern/doc/master/classTGContainerKeyboardTimer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGContainerScrollTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TGContainerScrollTimer Class Reference. . Definition at line 114 of file TGCanvas.cxx. Public Member Functions;  TGContainerScrollTimer (TGContainer *t);  ; Bool_t Notify () override;  on-timeout ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Start (Long_t milliSec=-1, Bool_t singl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGContainerScrollTimer.html:449,inherit,inherited,449,doc/master/classTGContainerScrollTimer.html,https://root.cern,https://root.cern/doc/master/classTGContainerScrollTimer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGDockButton Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TGDockButton Class Reference. . Definition at line 28 of file TGDockableFrame.h. Public Member Functions;  TGDockButton (const TGCompositeFrame *p=nullptr, Int_t id=1);  Create a dock button (i.e. button with two vertical bars). ;  ;  ~TGDockButton () override;  Delete dock button. ;  ; Bool_t HandleCrossing (Event_t *event) override;  Handle dock button crossing events. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGButton;  TGButton (const TGWindow *p=nullptr, Int_t id=-1, GContext_t norm=GetDefaultGC()(), UInt_t option=kRaisedFrame|kDoubleBorder);  Create button base class part. ;  ;  ~TGButton () override;  Delete button. ;  ; virtual void AllowStayDown (Bool_t a);  ; virtual void Clicked ();  ; TGButtonGroup * GetGroup () const;  ; GContext_t GetNormGC () const;  ; virtual EButtonState GetState () const;  ; virtual UInt_t GetStyle () const;  ; virtual TGToolTip * GetToolTip () const;  ; virtual void * GetUserData () const;  ; Bool_t HandleButton (Event_t *event) override;  Handle mouse button event. ;  ; virtual Bool_t IsDown () const;  ; virtual Bool_t IsExclusiveToggle () const;  ; virtual Bool_t IsOn () const;  ; virtual Bool_t IsToggleButton () const;  ; virtual void Pressed ();  ; virtual void Released ();  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a button widget as a C++ statement(s) on output stream out. ;  ; virtual void SetDown (Bool_t on=kTRUE, Bool_t emit=kFALSE);  ; virtual void SetEnabled (Bool_t e=kTRUE);  Set enabled or disabled state of button. ;  ; virtual void ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGDockButton.html:860,inherit,inherited,860,doc/master/classTGDockButton.html,https://root.cern,https://root.cern/doc/master/classTGDockButton.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGDockHideButton Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TGDockHideButton Class Reference. . Definition at line 47 of file TGDockableFrame.h. Public Member Functions;  TGDockHideButton (const TGCompositeFrame *p=nullptr);  Create a dock hide button (i.e. button with small triangle). ;  ; TClass * IsA () const override;  ; void SetAspectRatio (Int_t a);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGDockButton;  TGDockButton (const TGCompositeFrame *p=nullptr, Int_t id=1);  Create a dock button (i.e. button with two vertical bars). ;  ;  ~TGDockButton () override;  Delete dock button. ;  ; Bool_t HandleCrossing (Event_t *event) override;  Handle dock button crossing events. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGButton;  TGButton (const TGWindow *p=nullptr, Int_t id=-1, GContext_t norm=GetDefaultGC()(), UInt_t option=kRaisedFrame|kDoubleBorder);  Create button base class part. ;  ;  ~TGButton () override;  Delete button. ;  ; virtual void AllowStayDown (Bool_t a);  ; virtual void Clicked ();  ; TGButtonGroup * GetGroup () const;  ; GContext_t GetNormGC () const;  ; virtual EButtonState GetState () const;  ; virtual UInt_t GetStyle () const;  ; virtual TGToolTip * GetToolTip () const;  ; virtual void * GetUserData () const;  ; Bool_t HandleButton (Event_t *event) override;  Handle mouse button event. ;  ; virtual Bool_t IsDown () const;  ; virtual Bool_t IsExclusiveToggle () const;  ; virtual Bool_t IsOn () const;  ; virtual Bool_t IsToggleButton () const;  ; virtual void Pressed ();  ; virtual void Released ();  ; void SavePrimitive (std",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGDockHideButton.html:751,inherit,inherited,751,doc/master/classTGDockHideButton.html,https://root.cern,https://root.cern/doc/master/classTGDockHideButton.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGFSFrameElement Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; TGFSFrameElement Class Reference. . Definition at line 95 of file TGFSContainer.cxx. Public Member Functions; Int_t Compare (const TObject *obj) const override;  Sort frame elements in file selection list view container. ;  ; Bool_t IsSortable () const override;  ;  Public Member Functions inherited from TGFrameElement;  TGFrameElement ();  ;  TGFrameElement (TGFrame *f, TGLayoutHints *l);  Constructor. ;  ;  ~TGFrameElement () override;  Destructor. Decrease ref. count of fLayout. ;  ; TClass * IsA () const override;  ; void ls (Option_t *option="""") const override;  The ls function lists the contents of a class on stdout. ;  ; void Print (Option_t *option="""") const override;  Print this frame element. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an objec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFSFrameElement.html:507,inherit,inherited,507,doc/master/classTGFSFrameElement.html,https://root.cern,https://root.cern/doc/master/classTGFSFrameElement.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGFileBrowser Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TGFileBrowser Class ReferenceGUI » Low level GUI widgets. ; System file browser, used as TRootBrowser plug-in. ; This class is the real core of the ROOT browser. ; Definition at line 36 of file TGFileBrowser.h. Public Types; typedef std::map< TGListTreeItem *, std::string > mFiltered_t;  ; typedef sLTI_t::iterator sLTI_i;  ; typedef sLTI_t::reverse_iterator sLTI_ri;  ; typedef std::list< TGListTreeItem * > sLTI_t;  ;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGFileBrowser (const TGWindow *p, TBrowser *b=nullptr, UInt_t w=200, UInt_t h=400);  TGFileBrowser constructor. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFileBrowser.html:398,plug-in,plug-in,398,doc/master/classTGFileBrowser.html,https://root.cern,https://root.cern/doc/master/classTGFileBrowser.html,2,"['inherit', 'plug-in']","['inherited', 'plug-in']"
Modifiability,". ROOT: TGFontTypeComboBox Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TGFontTypeComboBox Class Reference. ; The TGFontTypeComboBox is user callable and it creates a combobox for selecting the font. ; Definition at line 178 of file TGComboBox.h. Public Member Functions;  TGFontTypeComboBox (const TGWindow *p=nullptr, Int_t id=-1, UInt_t options=kHorizontalFrame|kSunkenFrame|kDoubleBorder, Pixel_t bask=GetWhitePixel());  Create a text font combo box. ;  ;  ~TGFontTypeComboBox () override;  Text font combo box dtor. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGComboBox;  TGComboBox (const TGWindow *p, const char *text, Int_t id=-1, UInt_t options=kHorizontalFrame|kSunkenFrame|kDoubleBorder, Pixel_t back=GetWhitePixel());  Create an editable combo box widget. ;  ;  TGComboBox (const TGWindow *p=nullptr, Int_t id=-1, UInt_t options=kHorizontalFrame|kSunkenFrame|kDoubleBorder, Pixel_t back=GetWhitePixel());  Create a combo box widget. ;  ;  ~TGComboBox () override;  Delete a combo box widget. ;  ; virtual void AddEntry (const char *s, Int_t id);  ; virtual void AddEntry (TGLBEntry *lbe, TGLayoutHints *lhints);  ; virtual void AddEntry (TGString *s, Int_t id);  ; virtual void Changed ();  ; void DrawBorder () override;  Draw border of combo box widget. ;  ; virtual void EnableTextInput (Bool_t on);  Switch text input or readonly mode of combobox (not perfect yet). ;  ; virtual TGLBEntry * FindEntry (const char *s) const;  Find entry by name. ;  ; TGDimension GetDefaultSize () const override;  std::cout << fWidth << ""x"" << fHeight << std::endl; ;  ; virtual TGListBox * GetListBox () const;  ; virtual Int_t GetNumberOf",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFontTypeComboBox.html:911,inherit,inherited,911,doc/master/classTGFontTypeComboBox.html,https://root.cern,https://root.cern/doc/master/classTGFontTypeComboBox.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGFrameElement Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; Private Member Functions |; List of all members ; TGFrameElement Class Reference. . Definition at line 105 of file TGLayout.h. Public Member Functions;  TGFrameElement ();  ;  TGFrameElement (TGFrame *f, TGLayoutHints *l);  Constructor. ;  ;  ~TGFrameElement () override;  Destructor. Decrease ref. count of fLayout. ;  ; TClass * IsA () const override;  ; void ls (Option_t *option="""") const override;  The ls function lists the contents of a class on stdout. ;  ; void Print (Option_t *option="""") const override;  Print this frame element. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFrameElement.html:940,inherit,inherited,940,doc/master/classTGFrameElement.html,https://root.cern,https://root.cern/doc/master/classTGFrameElement.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGFrameElementPack Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; Private Member Functions |; List of all members ; TGFrameElementPack Class Reference. . Definition at line 21 of file TGPack.h. Public Member Functions;  TGFrameElementPack (TGFrame *frame, TGLayoutHints *lh=nullptr, Float_t weight=1);  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGFrameElement;  TGFrameElement ();  ;  TGFrameElement (TGFrame *f, TGLayoutHints *l);  Constructor. ;  ;  ~TGFrameElement () override;  Destructor. Decrease ref. count of fLayout. ;  ; void ls (Option_t *option="""") const override;  The ls function lists the contents of a class on stdout. ;  ; void Print (Option_t *option="""") const override;  Print this frame element. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFrameElementPack.html:671,inherit,inherited,671,doc/master/classTGFrameElementPack.html,https://root.cern,https://root.cern/doc/master/classTGFrameElementPack.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGGroupFrame Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Static Protected Attributes |; Private Member Functions |; List of all members ; TGGroupFrame Class ReferenceGUI » Low level GUI widgets. ; A composite frame with a border and a title. ; It is typically used to group a number of logically related widgets visually together. ; Definition at line 522 of file TGFrame.h. Public Types; enum  ETitlePos { kLeft = -1; , kCenter = 0; , kRight = 1; };  ;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGGroupFrame (const TGWindow *p, TGString *title, UInt_t options=kVerticalFrame, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), Pix",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGGroupFrame.html:684,inherit,inherited,684,doc/master/classTGGroupFrame.html,https://root.cern,https://root.cern/doc/master/classTGGroupFrame.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGHButtonGroup Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TGHButtonGroup Class ReferenceGUI » Low level GUI widgets. ; Organizes TGButton widgets in a group with one horizontal row. ; TGHButtonGroup is a convenience class that offers a thin layer on top of TGButtonGroup. It inherits from TGButtonGroup. ; Definition at line 112 of file TGButtonGroup.h. Public Member Functions;  TGHButtonGroup (const TGWindow *parent, const TString &title="""", GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), Pixel_t back=GetDefaultFrameBackground());  ;  ~TGHButtonGroup () override;  ; TClass * IsA () const override;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a button group widget as a C++ statement(s) on output stream out. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGButtonGroup;  TGButtonGroup (const TGWindow *parent, UInt_t r, UInt_t c, Int_t s=0, Int_t h=0, const TString &title="""", GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), Pixel_t back=GetDefaultFrameBackground());  Constructor. ;  ;  TGButtonGroup (const TGWindow *parent=nullptr, const TString &title="""", UInt_t options=kChildFrame|kVerticalFrame, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), Pixel_t back=GetDefaultFrameBackground());  Constructor. Layout 1 row or 1 column. ;  ;  ~TGButtonGroup () override;  Destructor, we do not delete the buttons. ;  ; virtual void ButtonClicked ();  This slot is activated when one of the buttons in the group emits the Clicked() signal. ;  ; virtual void ButtonPressed ();  This slot is activated when one of the buttons in the group emits the Pressed() signal. ;  ; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHButtonGroup.html:444,inherit,inherits,444,doc/master/classTGHButtonGroup.html,https://root.cern,https://root.cern/doc/master/classTGHButtonGroup.html,1,['inherit'],['inherits']
Modifiability,". ROOT: TGHorizontalFrame Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TGHorizontalFrame Class ReferenceGUI » Low level GUI widgets. ; A composite frame that layout their children in horizontal way. ; Definition at line 385 of file TGFrame.h. Public Member Functions;  TGHorizontalFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kChildFrame, Pixel_t back=GetDefaultFrameBackground());  ; TClass * IsA () const override;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a horizontal frame widget as a C++ statement(s) on output stream out. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGCompositeFrame;  TGCompositeFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a composite frame. ;  ;  TGCompositeFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGCompositeFrame () override;  Delete a composite frame. ;  ; virtual void AddFrame (TGFrame *f, TGLayoutHints *l=nullptr);  Add frame to the composite frame using the specified layout hints. ;  ; void ChangeOptions (UInt_t options) override;  Change composite frame options. Options is an OR of the EFrameTypes. ;  ; virtual void ChangeSubframesBackground (Pixel_t back);  Change background color for this frame and all subframes. ;  ; virtual void Cleanup ();  Cleanup and delete all objects contained in this composite frame. ;  ; virtual TGFrameElement * FindFrameElement (TGFrame *f) const;  Find frame-element holding frame f. ;  ; UInt_t GetDefaultHeight () const override;  ; TGDimension GetDefaultSize () const override;  std::cout <<",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHorizontalFrame.html:925,inherit,inherited,925,doc/master/classTGHorizontalFrame.html,https://root.cern,https://root.cern/doc/master/classTGHorizontalFrame.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGHorizontalLayout Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TGHorizontalLayout Class ReferenceGUI » Low level GUI widgets. . Definition at line 187 of file TGLayout.h. Public Member Functions;  TGHorizontalLayout (TGCompositeFrame *main);  ; TGDimension GetDefaultSize () const override;  Return default dimension of the horizontal layout. ;  ; TClass * IsA () const override;  ; void Layout () override;  Make a horizontal layout of all frames in the list. ;  ; void SavePrimitive (std::ostream &out, Option_t *="""") override;  Save horizontal layout manager as a C++ statement(s) on output stream. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGVerticalLayout;  TGVerticalLayout (TGCompositeFrame *main);  Create vertical layout manager. ;  ; TGDimension GetDefaultSize () const override;  Return default dimension of the vertical layout. ;  ; TClass * IsA () const override;  ; void Layout () override;  Make a vertical layout of all frames in the list. ;  ; void SavePrimitive (std::ostream &out, Option_t *="""") override;  Save vertical layout manager as a C++ statement(s) on output stream. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGLayoutManager;  TGLayoutManager ();  ; virtual Bool_t IsModified () const;  ; virtual void SetDefaultHeight (UInt_t);  ; virtual void SetDefaultWidth (UInt_t);  ; virtual void SetModified (Bool_t flag=kTRUE);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHorizontalLayout.html:942,inherit,inherited,942,doc/master/classTGHorizontalLayout.html,https://root.cern,https://root.cern/doc/master/classTGHorizontalLayout.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGHtmlElement Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; TGHtmlElement Class Reference. . Definition at line 250 of file TGHtml.h. Public Member Functions;  TGHtmlElement (int etype=0);  HTML element constructor. ;  ; virtual int GetAlignment (int dflt);  ; virtual int GetOrderedListType (int dflt);  ; virtual int GetUnorderedListType (int dflt);  ; virtual int GetVerticalAlignment (int dflt);  ; virtual int IsMarkup () const;  ; virtual const char * MarkupArg (const char *, const char *);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHtmlElement.html:679,inherit,inherited,679,doc/master/classTGHtmlElement.html,https://root.cern,https://root.cern/doc/master/classTGHtmlElement.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGHtmlImage Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; Private Member Functions |; List of all members ; TGHtmlImage Class Reference. . Definition at line 507 of file TGHtml.h. Public Member Functions;  TGHtmlImage (TGHtml *htm, const char *url, const char *width, const char *height);  ctor. ;  ;  ~TGHtmlImage () override;  dtor. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *opti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHtmlImage.html:496,inherit,inherited,496,doc/master/classTGHtmlImage.html,https://root.cern,https://root.cern/doc/master/classTGHtmlImage.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGHtmlLayoutContext Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; Protected Member Functions |; List of all members ; TGHtmlLayoutContext Class Reference. . Definition at line 761 of file TGHtml.h. Public Member Functions;  TGHtmlLayoutContext ();  Html Layout Context constructor. ;  ; void LayoutBlock ();  Do as much layout as possible on the block of text defined by the HtmlLayoutContext. ;  ; void PopIndent ();  Adjust (pop) ident. ;  ; void PushIndent ();  Adjust (push) ident. ;  ; void Reset ();  Reset the layout context. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""")",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHtmlLayoutContext.html:694,inherit,inherited,694,doc/master/classTGHtmlLayoutContext.html,https://root.cern,https://root.cern/doc/master/classTGHtmlLayoutContext.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGHtmlUri Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; Private Member Functions |; List of all members ; TGHtmlUri Class Reference. . Definition at line 55 of file TGHtmlUri.h. Public Member Functions;  TGHtmlUri (const char *zUri=nullptr);  Parse a text URI into an HtmlUri structure. ;  ;  TGHtmlUri (const TGHtmlUri *uri);  Html uri copy constructor. ;  ;  ~TGHtmlUri () override;  Html uri destructor. ;  ; char * BuildUri ();  Create a string to hold the given URI. ;  ; int ComponentLength (const char *z, const char *zInit, const char *zTerm);  Return the length of the next component of the URL in z[] given that the component starts at z[0]. ;  ; int EqualsUri (const TGHtmlUri *uri, int field_mask=((1<< 0)|(1<< 1)|(1<< 2)|(1<< 3)|(1<< 4)));  Compare another uri with given field mask. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHtmlUri.html:958,inherit,inherited,958,doc/master/classTGHtmlUri.html,https://root.cern,https://root.cern/doc/master/classTGHtmlUri.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGIdleHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TGIdleHandler Class ReferenceGUI » Low level GUI widgets. ; Handle idle events, i.e. ; process GUI actions when there is nothing else anymore to do. ; Definition at line 19 of file TGIdleHandler.h. Public Member Functions;  TGIdleHandler (TGWindow *w);  Create idle handler. ;  ;  ~TGIdleHandler () override;  Delete idle handler. ;  ; virtual Bool_t HandleEvent ();  Handle the idle event. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGIdleHandler.html:846,inherit,inherited,846,doc/master/classTGIdleHandler.html,https://root.cern,https://root.cern/doc/master/classTGIdleHandler.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGImageMap Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TGImageMap Class ReferenceGUI » Low level GUI widgets. ; (with TGRegion and TGRegionWithId help classes) ; A TGImageMap provides the functionality like a clickable image in a web browser with sensitive regions (MAP HTML tag). ; Definition at line 107 of file TGImageMap.h. Public Types; enum  ENavMode { kNavRegions; , kNavGrid; };  ;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGImageMap (const TGWindow *p, const TString &pic);  Create an image map widget. ;  ;  TGImageMap (const TGWindow *p=nullptr, const TGPicture *pic=nullptr);  Create an image map widget. ;  ;  ~TGImageMap ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGImageMap.html:640,inherit,inherited,640,doc/master/classTGImageMap.html,https://root.cern,https://root.cern/doc/master/classTGImageMap.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGInputHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TGInputHandler Class Reference. . Definition at line 103 of file TGClient.cxx. Public Member Functions;  TGInputHandler (TGClient *c, Int_t fd);  ; Bool_t Notify () override;  Notify input from the display server. ;  ;  Public Member Functions inherited from TFileHandler;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system file handler list. ;  ; int GetFd () const;  ; virtual Bool_t HasReadInterest ();  True if handler is interested in read events. ;  ; virtual Bool_t HasWriteInterest ();  True if handler is interested in write events. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsReadReady () const;  ; virtual Bool_t IsWriteReady () const;  ; virtual Bool_t ReadNotify ();  Notify when something can be read from the descriptor associated with this handler. ;  ; void Remove () override;  Remove file event handler from system file handler list. ;  ; virtual void ResetReadyMask ();  ; void SetFd (int fd);  ; virtual void SetInterest (Int_t mask);  Set interest mask to 'mask'. ;  ; virtual void SetReadReady ();  ; virtual void SetWriteReady ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t WriteNotify ();  Notify when something can be written to the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGInputHandler.html:459,inherit,inherited,459,doc/master/classTGInputHandler.html,https://root.cern,https://root.cern/doc/master/classTGInputHandler.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGItemContext Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; List of all members ; TGItemContext Class Reference. ; Empty object used as context menu support for TGLVTreeEntries. ; Definition at line 36 of file TTVLVContainer.h. Public Member Functions;  TGItemContext ();  Constructor. ;  ;  ~TGItemContext () override;  ; void Associate (TTVLVEntry *item);  ; void Delete (Option_t *) override;  Delete this object. ;  ; void Draw (Option_t *option="""") override;  Draw item. ;  ; void EditExpression ();  Edit expression. ;  ; void Empty ();  Empty item. ;  ; void RemoveItem ();  Remove item. ;  ; void Scan ();  Scan item. ;  ; void SetExpression (const char *name="""", const char *alias=""-empty-"", bool cut=false);  Set item expression. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGItemContext.html:904,inherit,inherited,904,doc/master/classTGItemContext.html,https://root.cern,https://root.cern/doc/master/classTGItemContext.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGLBFrameElement Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; TGLBFrameElement Class Reference. . Definition at line 455 of file TGListBox.cxx. Public Member Functions;  TGLBFrameElement (TGFrame *f, TGLayoutHints *l);  ;  ~TGLBFrameElement () override;  ; Int_t Compare (const TObject *obj) const override;  Compare abstract method. ;  ; Bool_t IsSortable () const override;  ;  Public Member Functions inherited from TGFrameElement;  TGFrameElement ();  ;  TGFrameElement (TGFrame *f, TGLayoutHints *l);  Constructor. ;  ;  ~TGFrameElement () override;  Destructor. Decrease ref. count of fLayout. ;  ; TClass * IsA () const override;  ; void ls (Option_t *option="""") const override;  The ls function lists the contents of a class on stdout. ;  ; void Print (Option_t *option="""") const override;  Print this frame element. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLBFrameElement.html:537,inherit,inherited,537,doc/master/classTGLBFrameElement.html,https://root.cern,https://root.cern/doc/master/classTGLBFrameElement.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGLClipSetEditor Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TGLClipSetEditor Class ReferenceGraphics » 3D Graphics » OpenGL rendering. ; GUI editor for TGLClipSet. ; Definition at line 68 of file TGLClipSetEditor.h. Public Member Functions;  TGLClipSetEditor (const TGWindow *p=nullptr, Int_t width=170, Int_t height=30, UInt_t options=kChildFrame, Pixel_t back=GetDefaultFrameBackground());  Constructor. ;  ;  ~TGLClipSetEditor () override;  ; TClass * IsA () const override;  ; void SetModel (TObject *obj) override;  Set model object. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGedFrame;  TGedFrame (const TGWindow *p=nullptr, Int_t width=140, Int_t height=30, UInt_t options=kChildFrame, Pixel_t back=GetDefaultFrameBackground());  Constructor of the base GUI attribute frame. ;  ;  ~TGedFrame () override;  Destructor of the base GUI attribute frame. ;  ; virtual Bool_t AcceptModel (TObject *);  ; virtual void ActivateBaseClassEditors (TClass *cl);  Provide list of editors for base-classes. ;  ; virtual void AddExtraTab (TGedSubFrame *sf);  Adds tab container to list of extra tabs. ;  ;  ClassDefOverride (TGedFrame, 0);  ; virtual TGVerticalFrame * CreateEditorTabSubFrame (const char *name);  Create a vertical frame to be used by 'owner' in extra tab 'name'. ;  ; Option_t * GetDrawOption () const override;  Get draw options of the selected object. ;  ; TList * GetExtraTabs ();  ; TGedEditor * GetGedEditor ();  ; TClass * GetModelClass ();  ; Int_t GetPriority ();  ; virtual void Refresh (TObject *model);  Refresh the GUI info about the object attributes. ;  ; void SetDrawOption (Option_t *option="""") override;  Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLClipSetEditor.html:932,inherit,inherited,932,doc/master/classTGLClipSetEditor.html,https://root.cern,https://root.cern/doc/master/classTGLClipSetEditor.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGLLightSet Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TGLLightSet Class ReferenceGraphics » 3D Graphics » OpenGL rendering. ; Encapsulates a set of lights for OpenGL. ; Definition at line 21 of file TGLLightSet.h. Public Types; enum  ELight { ;   kLightFront = 0x0001; , kLightTop = 0x0002; , kLightBottom = 0x0004; , kLightLeft = 0x0008; , ;   kLightRight = 0x0010; , kLightMask = 0x001f; , kLightSpecular = 0x0100. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGLLightSet ();  power of specular lamp ;  ;  ~TGLLightSet () override;  ; Float_t GetFrontPower () const;  ; UInt_t GetLightState ();  ; Float_t GetSidePower () const;  ; Float_t GetSpecularPower () const;  ; Bool_t GetUseSpecular () const;  ; TClass * IsA () const override;  ; void SetFrontPower (Float_t p);  ; void SetLight (ELight light, Bool_t on);  Set a light on/off. ;  ; void SetSidePower (Float_t p);  ; void SetSpecularPower (Float_t p);  ; void SetUseSpecular (Bool_t s);  ; void StdSetupLights (const TGLBoundingBox &bbox, const TGLCamera &camera, Bool_t debug=kFALSE);  Setup lights for current given bounding box and camera. ;  ; void Streamer (TBuffer &) ove",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLLightSet.html:675,inherit,inherited,675,doc/master/classTGLLightSet.html,https://root.cern,https://root.cern/doc/master/classTGLLightSet.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGLPShapeObj Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; Private Member Functions |; List of all members ; TGLPShapeObj Class ReferenceGraphics » 3D Graphics » OpenGL rendering. ; Wrap TGLPysicalShape into TObject so that it can be edited using GED. ; Definition at line 20 of file TGLPShapeObj.h. Public Member Functions;  TGLPShapeObj ();  ;  TGLPShapeObj (TGLPhysicalShape *sh, TGLViewer *v);  ;  ~TGLPShapeObj () override;  ; const char * GetName () const override;  Returns name of object. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Del",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLPShapeObj.html:869,inherit,inherited,869,doc/master/classTGLPShapeObj.html,https://root.cern,https://root.cern/doc/master/classTGLPShapeObj.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGLRedrawTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TGLRedrawTimer Class Reference. . Definition at line 401 of file TGLViewer.h. Public Member Functions;  TGLRedrawTimer (TGLViewer &viewer);  ;  ~TGLRedrawTimer () override;  ; Bool_t IsPending () const;  ; Bool_t Notify () override;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void RequestDraw (Int_t milliSec, Short_t redrawLOD);  ; void Stop () override;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLRedrawTimer.html:659,inherit,inherited,659,doc/master/classTGLRedrawTimer.html,https://root.cern,https://root.cern/doc/master/classTGLRedrawTimer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGLSAViewer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TGLSAViewer Class ReferenceGraphics » 3D Graphics » OpenGL rendering. ; The top level standalone GL-viewer - created via plugin manager. ; Definition at line 37 of file TGLSAViewer.h. Public Types; enum  EGLSACommands { ;   kGLHelpAbout; , kGLHelpViewer; , kGLPerspYOZ; , kGLPerspXOZ; , ;   kGLPerspXOY; , kGLXOY; , kGLXOZ; , kGLZOY; , ;   kGLZOX; , kGLXnOY; , kGLXnOZ; , kGLZnOY; , ;   kGLZnOX; , kGLOrthoRotate; , kGLOrthoDolly; , kGLSaveEPS; , ;   kGLSavePDF; , kGLSavePNG; , kGLSaveGIF; , kGLSaveAnimGIF; , ;   kGLSaveJPG; , kGLSaveAS; , kGLCloseViewer; , kGLQuitROOT; , ;   kGLEditObject; , kGLHideMenus. };  ;  Public Types inherited from TGLViewer; enum  ECameraType { ;   kCameraPerspXOZ; , kCameraPerspYOZ; , kCameraPerspXOY; , kCameraOrthoXOY; , ;   kCameraOrthoXOZ; , kCameraOrthoZOY; , kCameraOrthoZOX; , kCameraOrthoXnOY; , ;   kCameraOrthoXnOZ; , kCameraOrthoZnOY; , kCameraOrthoZnOX. };  ; enum  EDragAction { ;   kDragNone; , kDragCameraRotate; , kDragCameraTruck; , kDragCameraDolly; , ;   kDragOverlay. };  ; enum  EPushAction { kPushStd; , kPushCamCenter; , kPushAnnotate; };  ; enum  ESecSelType { kOnRequest; , kOnKeyMod1; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCan",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLSAViewer.html:440,plugin,plugin,440,doc/master/classTGLSAViewer.html,https://root.cern,https://root.cern/doc/master/classTGLSAViewer.html,1,['plugin'],['plugin']
Modifiability,". ROOT: TGLTH3Composition Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Types |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TGLTH3Composition Class ReferenceGraphics » 3D Graphics » OpenGL rendering. . Definition at line 27 of file TGLTH3Composition.h. Public Types; enum  ETH3BinShape { kBox; , kSphere; };  ;  Public Types inherited from TH1; enum  { ;   kNoAxis = 0; , kXaxis = (1ULL << ( 0 )); , kYaxis = (1ULL << ( 1 )); , kZaxis = (1ULL << ( 2 )); , ;   kAllAxes = kXaxis | kYaxis | kZaxis. };  Enumeration specifying which axes can be extended. More...;  ; enum  { kNstat = 13; };  Size of statistics data (size of array used in GetStats()/ PutStats ) More...;  ; enum  EBinErrorOpt { kNormal = 0; , kPoisson = 1; , kPoisson2 = 2; };  Enumeration specifying type of statistics for bin errors. More...;  ; enum  EStatOverflows { kIgnore = 0; , kConsider = 1; , kNeutral = 2; };  Enumeration specifying the way to treat statoverflow. More...;  ; enum  EStatusBits { ;   kNoStats = (1ULL << ( 9 )); , kUserContour = (1ULL << ( 10 )); , kLogX = (1ULL << ( 15 )); , kIsZoomed = (1ULL << ( 16 )); , ;   kNoTitle = (1ULL << ( 17 )); , kIsAverage = (1ULL << ( 18 )); , kIsNotW = (1ULL << ( 19 )); , kAutoBinPTwo = (1ULL << ( 20 )); , ;   kIsHighlight = (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLTH3Composition.html:525,inherit,inherited,525,doc/master/classTGLTH3Composition.html,https://root.cern,https://root.cern/doc/master/classTGLTH3Composition.html,2,"['extend', 'inherit']","['extended', 'inherited']"
Modifiability,". ROOT: TGLTH3Slice Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TGLTH3Slice Class ReferenceGraphics » 3D Graphics » OpenGL rendering. ; A slice of a TH3. ; Definition at line 99 of file TGLPlotPainter.h. Public Types; enum  ESliceAxis { kXOZ; , kYOZ; , kXOY; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGLTH3Slice (const TString &sliceName, const TH3 *hist, const TF3 *fun, const TGLPlotCoordinates *coord, const TGLPlotBox *box, ESliceAxis axis);  Constructor. ;  ;  TGLTH3Slice (const TString &sliceName, const TH3 *hist, const TGLPlotCoordinates *coord, const TGLPlotBox *box, ESliceAxis axis);  Constructor. ;  ; void DrawSlice (Double_t pos) const;  Draw slice. ;  ; const TGLLevelPalette & GetPalette () const;  ; TClass * IsA () const override;  ; void SetMinMax (const Rgl::Range_t &newRange);  ; void SetSliceWidth (Int_t width=1);  Set Slice width. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLTH3Slice.html:505,inherit,inherited,505,doc/master/classTGLTH3Slice.html,https://root.cern,https://root.cern/doc/master/classTGLTH3Slice.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGLWidget Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TGLWidget Class ReferenceGraphics » 3D Graphics » OpenGL rendering. ; GL window with context. ; Must have a parent window (the 'parent' parameter of ctors). The current version inherits TGCanvas (I'm not sure about future versions), probably, in future multiple inheritance will be added - the second base class will be TGLPaintDevice or something like this.; Usage:; Simply create TGLWidget as an embedded widget, and connect your slots to signals you need: HandleExpose, HandleConfigureNotify, etc. In your slots you can use gl API directly - under Win32 TGLWidget switches between threads internally (look TGLPShapeObjEditor for such usage).; You can write your own class, derived from TGLWidget, with PaintGL and InitGL overriden. Resources (and invariants):; fContainer (TGLWidgetContainer) - controlled by std::auto_ptr; fWindowIndex - controlled manually (see CreateWidget and dtor); fGLContext - controlled manually (see CreateWidget and dtor); visual info for X11 version, controlled manually (see CreateGLContainer and dtor). Exceptions:; can be thrown only during construction.; under win32 class does not throw itself (but some internal operations can throw); under X11 can throw std::runtime_error (from CreateGLContext).; In case of exceptions resources will be freed. TGLWidget object is immutable as far as it was created.; Boolean parameter defines, if you want to grab user's input or not. By default you want, but for example when not - see TGLPShapeObjEditor.; Non-copyable. ; Definition at line 27 of file TGLWidget.h. Public Member Functions;  ~TGLWidget () override;  Destructor. Deletes window ???? and XVisualInfo. ;  ; Bool_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLWidget.html:527,inherit,inherits,527,doc/master/classTGLWidget.html,https://root.cern,https://root.cern/doc/master/classTGLWidget.html,2,['inherit'],"['inheritance', 'inherits']"
Modifiability,". ROOT: TGLayoutManager Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TGLayoutManager Class ReferenceabstractGUI » Low level GUI widgets. ; Frame layout manager. ; This is an abstract class. ; Definition at line 135 of file TGLayout.h. Public Member Functions;  TGLayoutManager ();  ; virtual TGDimension GetDefaultSize () const =0;  ; TClass * IsA () const override;  ; virtual Bool_t IsModified () const;  ; virtual void Layout ()=0;  ; virtual void SetDefaultHeight (UInt_t);  ; virtual void SetDefaultWidth (UInt_t);  ; virtual void SetModified (Bool_t flag=kTRUE);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLayoutManager.html:922,inherit,inherited,922,doc/master/classTGLayoutManager.html,https://root.cern,https://root.cern/doc/master/classTGLayoutManager.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGListLayout Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TGListLayout Class ReferenceGUI » Low level GUI widgets. ; This is a layout manager for the TGListView widget. ; Definition at line 335 of file TGLayout.h. Public Member Functions;  TGListLayout (TGCompositeFrame *main, Int_t sep=0);  ; TGDimension GetDefaultSize () const override;  Return default dimension of the list layout. ;  ; TClass * IsA () const override;  ; void Layout () override;  Make a tile layout of all frames in the list. ;  ; void SavePrimitive (std::ostream &out, Option_t *="""") override;  Save list layout manager as a C++ statement(s) on output stream. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGTileLayout;  TGTileLayout (TGCompositeFrame *main, Int_t sep=0);  Create a tile layout manager. ;  ; TGDimension GetDefaultSize () const override;  Return default dimension of the tile layout. ;  ; TClass * IsA () const override;  ; Bool_t IsModified () const override;  ; void Layout () override;  Make a tile layout of all frames in the list. ;  ; void SavePrimitive (std::ostream &out, Option_t *="""") override;  Save tile layout manager as a C++ statement(s) on output stream. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGLayoutManager;  TGLayoutManager ();  ; virtual void SetDefaultHeight (UInt_t);  ; virtual void SetDefaultWidth (UInt_t);  ; virtual void SetModified (Bool_t flag=kTRUE);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGListLayout.html:973,inherit,inherited,973,doc/master/classTGListLayout.html,https://root.cern,https://root.cern/doc/master/classTGListLayout.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGMainFrame::TGMapKey Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; Private Member Functions |; List of all members ; TGMainFrame::TGMapKey Class Reference. . Definition at line 403 of file TGFrame.h. Public Member Functions;  TGMapKey (UInt_t keycode, TGWindow *w);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMainFrame_1_1TGMapKey.html:426,inherit,inherited,426,doc/master/classTGMainFrame_1_1TGMapKey.html,https://root.cern,https://root.cern/doc/master/classTGMainFrame_1_1TGMapKey.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGMdiButtons Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Friends |; List of all members ; TGMdiButtons Class Reference. . Definition at line 129 of file TGMdiDecorFrame.h. Public Member Functions;  TGMdiButtons (const TGWindow *p, const TGWindow *titlebar);  TGMdiButtons constructor. ;  ;  ~TGMdiButtons () override;  TGMdiButtons destructor. ;  ; TGPictureButton * GetButton (Int_t no) const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGCompositeFrame;  TGCompositeFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a composite frame. ;  ;  TGCompositeFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGCompositeFrame () override;  Delete a composite frame. ;  ; virtual void AddFrame (TGFrame *f, TGLayoutHints *l=nullptr);  Add frame to the composite frame using the specified layout hints. ;  ; void ChangeOptions (UInt_t options) override;  Change composite frame options. Options is an OR of the EFrameTypes. ;  ; virtual void ChangeSubframesBackground (Pixel_t back);  Change background color for this frame and all subframes. ;  ; virtual void Cleanup ();  Cleanup and delete all objects contained in this composite frame. ;  ; virtual TGFrameElement * FindFrameElement (TGFrame *f) const;  Find frame-element holding frame f. ;  ; UInt_t GetDefaultHeight () const override;  ; TGDimension GetDefaultSize () const override;  std::cout << fWidth << ""x"" << fHeight << std::endl; ;  ; UInt_t GetDefaultWidth () const override;  ; TGFrame * GetFrameFromPoint (Int_t x, Int_t y) override;  Get fra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMdiButtons.html:770,inherit,inherited,770,doc/master/classTGMdiButtons.html,https://root.cern,https://root.cern/doc/master/classTGMdiButtons.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGMdiContainer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TGMdiContainer Class Reference. . Definition at line 235 of file TGMdiMainFrame.h. Public Member Functions;  TGMdiContainer (const TGMdiMainFrame *p, Int_t w, Int_t h, UInt_t options=0, ULong_t back=GetDefaultFrameBackground());  TGMdiContainer constructor. ;  ; TGDimension GetDefaultSize () const override;  Return dimension of MDI container. ;  ; Bool_t HandleConfigureNotify (Event_t *event) override;  Handle configure notify events for MDI container. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGFrame;  TGFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a TGFrame object. Options is an OR of the EFrameTypes. ;  ;  TGFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGFrame () override;  Destructor. ;  ; virtual void Activate (Bool_t);  ; void AddInput (UInt_t emask);  Add events specified in the emask to the events the frame should handle. ;  ; virtual void ChangeBackground (Pixel_t back);  Change frame background color. ;  ; virtual void ChangeOptions (UInt_t options);  Change frame options. Options is an OR of the EFrameTypes. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; virtual void DeleteWindow ();  Delete window. ;  ; virtual void DrawBorder ();  Draw frame border. ;  ; void DrawClass () const override;  Draw class inheritance tree of the class to which this object belongs. ;  ; TObject * DrawClone (Option_t *="""") const ov",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMdiContainer.html:665,config,configure,665,doc/master/classTGMdiContainer.html,https://root.cern,https://root.cern/doc/master/classTGMdiContainer.html,2,"['config', 'inherit']","['configure', 'inherited']"
Modifiability,". ROOT: TGMdiDecorFrame Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Friends |; List of all members ; TGMdiDecorFrame Class ReferenceGUI » Low level GUI widgets. ; This file contains all different MDI frame decoration classes. ; Definition at line 229 of file TGMdiDecorFrame.h. Public Types; enum  { kMdiBorderWidth = 5; };  ;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGMdiDecorFrame (TGMdiMainFrame *main, TGMdiFrame *frame, Int_t w, Int_t h, const TGGC *boxGC, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  TGMdiDecorFrame constructor. ;  ;  ~TGMdiDecorFrame () override;  TGMdiDecorFrame destructor. ;  ; virtual Int_t CloseWindow ();  ; TGMdiHorizontalWinResizer * GetLeftV",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMdiDecorFrame.html:519,inherit,inherited,519,doc/master/classTGMdiDecorFrame.html,https://root.cern,https://root.cern/doc/master/classTGMdiDecorFrame.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGMime Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; Friends |; List of all members ; TGMime Class ReferenceGUI » Low level GUI widgets. ; TGMime is internally used by TGMimeTypes. ; Definition at line 29 of file TGMimeTypes.h. Public Member Functions;  TGMime ();  ;  ~TGMime () override;  Delete mime object. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMime.html:473,inherit,inherited,473,doc/master/classTGMime.html,https://root.cern,https://root.cern/doc/master/classTGMime.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGNumberEntryLayout Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TGNumberEntryLayout Class Reference. . Definition at line 277 of file TGNumberEntry.h. Public Member Functions;  TGNumberEntryLayout (TGNumberEntry *box);  ; TGDimension GetDefaultSize () const override;  Return the default size of the numeric control box. ;  ; TClass * IsA () const override;  ; void Layout () override;  Layout the internal GUI elements in use. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGLayoutManager;  TGLayoutManager ();  ; virtual Bool_t IsModified () const;  ; virtual void SetDefaultHeight (UInt_t);  ; virtual void SetDefaultWidth (UInt_t);  ; virtual void SetModified (Bool_t flag=kTRUE);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newna",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGNumberEntryLayout.html:820,inherit,inherited,820,doc/master/classTGNumberEntryLayout.html,https://root.cern,https://root.cern/doc/master/classTGNumberEntryLayout.html,2,['inherit'],['inherited']
Modifiability,". ROOT: TGRectMap Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; Private Member Functions |; List of all members ; TGRectMap Class Reference. . Definition at line 22 of file TGSplitFrame.h. Public Member Functions;  TGRectMap (Int_t rx, Int_t ry, UInt_t rw, UInt_t rh);  ;  ~TGRectMap () override;  ; Bool_t Contains (Int_t px, Int_t py) const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGRectMap.html:706,inherit,inherited,706,doc/master/classTGRectMap.html,https://root.cern,https://root.cern/doc/master/classTGRectMap.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGRegion Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TGRegion Class Reference. . Definition at line 27 of file TGImageMap.h. Public Types; enum  ERegionType { kRectangle; , kEllipse; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGRegion ();  Create a region object. ;  ;  TGRegion (const TArrayS &x, const TArrayS &y, Bool_t winding=kFALSE);  Create and initialize a region with an X and a Y array of points. ;  ;  TGRegion (const TGRegion &reg);  Region copy constructor. ;  ;  TGRegion (Int_t n, Int_t *x, Int_t *y, Bool_t winding=kFALSE);  Create and initialize a region with an X and Y array of points. ;  ;  TGRegion (Int_t n, TPoint *points, Bool_t winding=kFALSE);  Create and intialize a region with a polygon. ;  ;  TGRegion (Int_t x, Int_t y, UInt_t w, UInt_t h, ERegionType=kRectangle);  Create and initialize a region with a rectangle. ;  ;  ~TGRegion () override;  Delete a region. ;  ; Bool_t Contains (const TPoint &p) const;  Return true if point p is contained in the region. ;  ; Bool_t Contains (Int_t x, Int_t y) const;  Return true if point (x,y) is contained in the region. ;  ; TGRegion Eor (const TGRegion &r) cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGRegion.html:441,inherit,inherited,441,doc/master/classTGRegion.html,https://root.cern,https://root.cern/doc/master/classTGRegion.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGSelectedPicture Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; Protected Attributes |; Static Protected Attributes |; List of all members ; TGSelectedPicture Class Reference. . Definition at line 67 of file TGPicture.h. Public Member Functions;  TGSelectedPicture (const TGClient *client, const TGPicture *p);  Create a ""selected"" looking picture based on the original TGPicture. ;  ;  ~TGSelectedPicture () override;  Delete selected picture. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGPicture;  ~TGPicture () override;  Delete picture object. ;  ; virtual void Draw (Handle_t id, GContext_t gc, Int_t x, Int_t y) const;  Draw a picture. ;  ; UInt_t GetHeight () const;  ; Pixmap_t GetMask () const;  ; const char * GetName () const override;  Returns name of object. ;  ; Pixmap_t GetPicture () const;  ; UInt_t GetWidth () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsScaled () const;  ; void Print (Option_t *option="""") const override;  Print picture info. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default actio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGSelectedPicture.html:863,inherit,inherited,863,doc/master/classTGSelectedPicture.html,https://root.cern,https://root.cern/doc/master/classTGSelectedPicture.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGSpeedo Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TGSpeedo Class ReferenceGUI » Low level GUI widgets. ; TGSpeedo is a widget looking like a speedometer, with a needle, a counter and a small odometer window. ; Three thresholds are configurable, with their glowing color A peak mark can be enabled, allowing to keep track of the highest value displayed. The mark can be reset by right-clicking on the widget.; Two signals are available:; OdoClicked(): when user click on the small odometer window; LedClicked(): when user click on the small led near the counter . Definition at line 22 of file TGSpeedo.h. Public Types; enum  EGlowColor { kNoglow; , kGreen; , kOrange; , kRed; };  ;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContext",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGSpeedo.html:472,config,configurable,472,doc/master/classTGSpeedo.html,https://root.cern,https://root.cern/doc/master/classTGSpeedo.html,1,['config'],['configurable']
Modifiability,". ROOT: TGTextEditCommand Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; List of all members ; TGTextEditCommand Class Reference. . Definition at line 81 of file TGTextEdit.cxx. Public Member Functions;  TGTextEditCommand (TGTextEdit *te);  ; void SetPos (TGLongPosition pos);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextEditCommand.html:430,inherit,inherited,430,doc/master/classTGTextEditCommand.html,https://root.cern,https://root.cern/doc/master/classTGTextEditCommand.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGTextEditHist Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; TGTextEditHist Class Reference. . Definition at line 62 of file TGTextEdit.cxx. Public Member Functions;  TGTextEditHist ();  ;  ~TGTextEditHist () override;  ; Bool_t Notify () override;  'Notify' all objects in this collection. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; void AddAfter (const TObject *after, TObject *obj) override;  Insert object after object after in the list. ;  ; virtual void AddAfter (TObjLink *after, TObject *obj);  Insert object after the specified ObjLink object. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Insert object at position idx in the list. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  Insert object before object before in the list. ;  ; virtual void AddBefore (TObjLink *before, TObject *obj);  Insert object before the specified ObjLink object. ;  ; void AddFirst (TObject *obj) override;  Add object at the beginning of the list. ;  ; virtual void AddFirst (TObject *obj, Option_t *opt);  Add object at the beginning of the list and also store option. ;  ; void AddLast (TObject *obj) override;  Add object at the end of the list. ;  ; virtual void AddLast (TObject *obj, Option_t *opt);  Add object at the end of the list and also store option. ;  ; TObject * After (const TObject *obj) const override;  Returns the object after object obj. ;  ; TObject * At (Int_t idx) const override;  Returns the object at position idx. Returns 0 if idx is out of range. ;  ; TObject * Before (const TObject *obj) const override;  Returns the object before object obj. ;  ; void Clear",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextEditHist.html:453,inherit,inherited,453,doc/master/classTGTextEditHist.html,https://root.cern,https://root.cern/doc/master/classTGTextEditHist.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGTransientFrame Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TGTransientFrame Class ReferenceGUI » Low level GUI widgets. ; Defines transient windows that typically are used for dialogs windows. ; Definition at line 498 of file TGFrame.h. Public Types; enum  EPlacement { ;   kCenter; , kLeft; , kRight; , kTop; , ;   kBottom; , kTopLeft; , kTopRight; , kBottomLeft; , ;   kBottomRight. };  ;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( 0 )); , kEditDisableEvents = (1ULL << ( 1 )); , kEditDisableGrab = (1ULL << ( 2 )); , ;   kEditDisableLayout = (1ULL << ( 3 )); , kEditDisableResize = (1ULL << ( 4 )); , kEditDisableHeight = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGTransientFrame (const TGWindow *p=nullptr, const TGWindow *main=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame);  Create a transient window. ;  ; virtual void CenterOnParent (Bool_t c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTransientFrame.html:643,inherit,inherited,643,doc/master/classTGTransientFrame.html,https://root.cern,https://root.cern/doc/master/classTGTransientFrame.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGTripleHSlider Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TGTripleHSlider Class ReferenceGUI » Low level GUI widgets. ; TripleSlider inherit from DoubleSlider widgets and allow easy selection of a min, max and pointer value out of a range. ; The pointer position can be constrained to edges of slider and / or can be relative to the slider position.; To change the min value press the mouse near to the left / bottom edge of the slider. To change the max value press the mouse near to the right / top edge of the slider. To change both values simultaneously press the mouse near to the center of the slider. To change pointer value press the mouse on the pointer and drag it to the desired position; Dragging the slider will generate the event:; kC_HSLIDER, kSL_POS, slider id, 0. Pressing the mouse will generate the event:; kC_HSLIDER, kSL_PRESS, slider id, 0. Releasing the mouse will generate the event:; kC_HSLIDER, kSL_RELEASE, slider id, 0. Moving the pointer will generate the event:; kC_HSLIDER, kSL_POINTER, slider id, 0. Use the functions GetMinPosition(), GetMaxPosition() and GetPosition() to retrieve the position of the slider. Use the function GetPointerPosition() to retrieve the position of the pointer ; Definition at line 73 of file TGTripleSlider.h. Public Member Functions;  TGTripleHSlider (const TGWindow *p=nullptr, UInt_t w=1, UInt_t type=1, Int_t id=-1, UInt_t options=kHorizontalFrame, Pixel_t back=GetDefaultFrameBackground(), Bool_t reversed=kFALSE, Bool_t mark_ends=kFALSE, Bool_t constrained=kTRUE, Bool_t relative=kFALSE);  Create horizontal slider widget. ;  ;  ~TGTripleHSlider () override;  Delete a horizontal slider widget. ;  ; virtual void DrawPointer ();  Draw slider pointer. ;  ; virtual Float_t GetPointerPosition () const;  ; virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTripleHSlider.html:357,inherit,inherit,357,doc/master/classTGTripleHSlider.html,https://root.cern,https://root.cern/doc/master/classTGTripleHSlider.html,1,['inherit'],['inherit']
Modifiability,". ROOT: TGTripleVSlider Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TGTripleVSlider Class ReferenceGUI » Low level GUI widgets. ; TripleSlider inherit from DoubleSlider widgets and allow easy selection of a min, max and pointer value out of a range. ; The pointer position can be constrained to edges of slider and / or can be relative to the slider position.; To change the min value press the mouse near to the left / bottom edge of the slider. To change the max value press the mouse near to the right / top edge of the slider. To change both values simultaneously press the mouse near to the center of the slider. To change pointer value press the mouse on the pointer and drag it to the desired position; Dragging the slider will generate the event:; kC_VSLIDER, kSL_POS, slider id, 0. Pressing the mouse will generate the event:; kC_VSLIDER, kSL_PRESS, slider id, 0. Releasing the mouse will generate the event:; kC_VSLIDER, kSL_RELEASE, slider id, 0. Moving the pointer will generate the event:; kC_VSLIDER, kSL_POINTER, slider id, 0. Use the functions GetMinPosition(), GetMaxPosition() and GetPosition() to retrieve the position of the slider. Use the function GetPointerPosition() to retrieve the position of the pointer ; Definition at line 20 of file TGTripleSlider.h. Public Member Functions;  TGTripleVSlider (const TGWindow *p=nullptr, UInt_t h=1, UInt_t type=1, Int_t id=-1, UInt_t options=kVerticalFrame, Pixel_t back=GetDefaultFrameBackground(), Bool_t reversed=kFALSE, Bool_t mark_ends=kFALSE, Bool_t constrained=kTRUE, Bool_t relative=kFALSE);  Create a vertical slider widget. ;  ;  ~TGTripleVSlider () override;  Delete vertical slider widget. ;  ; virtual void DrawPointer ();  Draw slider pointer. ;  ; virtual Float_t GetPointerPosition () const;  ; virtual Doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTripleVSlider.html:357,inherit,inherit,357,doc/master/classTGTripleVSlider.html,https://root.cern,https://root.cern/doc/master/classTGTripleVSlider.html,1,['inherit'],['inherit']
Modifiability,". ROOT: TGUnknownWindowHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TGUnknownWindowHandler Class ReferenceabstractGUI » Low level GUI widgets. ; Handle events for windows that are not part of the native ROOT GUI. ; Typically windows created by Xt or Motif. ; Definition at line 141 of file TGWindow.h. Public Member Functions;  TGUnknownWindowHandler ();  ;  ~TGUnknownWindowHandler () override;  ; virtual Bool_t HandleEvent (Event_t *)=0;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGUnknownWindowHandler.html:813,inherit,inherited,813,doc/master/classTGUnknownWindowHandler.html,https://root.cern,https://root.cern/doc/master/classTGUnknownWindowHandler.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGVButtonGroup Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TGVButtonGroup Class ReferenceGUI » Low level GUI widgets. ; Organizes TGButton widgets in a group with one vertical column. ; TGVButtonGroup is a convenience class that offers a thin layer on top of TGButtonGroup. It inherits from TGButtonGroup. ; Definition at line 94 of file TGButtonGroup.h. Public Member Functions;  TGVButtonGroup (const TGWindow *parent, const TString &title="""", GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), Pixel_t back=GetDefaultFrameBackground());  ;  ~TGVButtonGroup () override;  ; TClass * IsA () const override;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a button group widget as a C++ statement(s) on output stream out. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGButtonGroup;  TGButtonGroup (const TGWindow *parent, UInt_t r, UInt_t c, Int_t s=0, Int_t h=0, const TString &title="""", GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), Pixel_t back=GetDefaultFrameBackground());  Constructor. ;  ;  TGButtonGroup (const TGWindow *parent=nullptr, const TString &title="""", UInt_t options=kChildFrame|kVerticalFrame, GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), Pixel_t back=GetDefaultFrameBackground());  Constructor. Layout 1 row or 1 column. ;  ;  ~TGButtonGroup () override;  Destructor, we do not delete the buttons. ;  ; virtual void ButtonClicked ();  This slot is activated when one of the buttons in the group emits the Clicked() signal. ;  ; virtual void ButtonPressed ();  This slot is activated when one of the buttons in the group emits the Pressed() signal. ;  ; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGVButtonGroup.html:445,inherit,inherits,445,doc/master/classTGVButtonGroup.html,https://root.cern,https://root.cern/doc/master/classTGVButtonGroup.html,1,['inherit'],['inherits']
Modifiability,". ROOT: TGVerticalFrame Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TGVerticalFrame Class ReferenceGUI » Low level GUI widgets. ; A composite frame that layout their children in vertical way. ; Definition at line 374 of file TGFrame.h. Public Member Functions;  TGVerticalFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kChildFrame, Pixel_t back=GetDefaultFrameBackground());  ; TClass * IsA () const override;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save a vertical frame widget as a C++ statement(s) on output stream out. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGCompositeFrame;  TGCompositeFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a composite frame. ;  ;  TGCompositeFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGCompositeFrame () override;  Delete a composite frame. ;  ; virtual void AddFrame (TGFrame *f, TGLayoutHints *l=nullptr);  Add frame to the composite frame using the specified layout hints. ;  ; void ChangeOptions (UInt_t options) override;  Change composite frame options. Options is an OR of the EFrameTypes. ;  ; virtual void ChangeSubframesBackground (Pixel_t back);  Change background color for this frame and all subframes. ;  ; virtual void Cleanup ();  Cleanup and delete all objects contained in this composite frame. ;  ; virtual TGFrameElement * FindFrameElement (TGFrame *f) const;  Find frame-element holding frame f. ;  ; UInt_t GetDefaultHeight () const override;  ; TGDimension GetDefaultSize () const override;  std::cout << fWidth <<",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGVerticalFrame.html:915,inherit,inherited,915,doc/master/classTGVerticalFrame.html,https://root.cern,https://root.cern/doc/master/classTGVerticalFrame.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGWin32CallBackObject Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; TGWin32CallBackObject Class Reference. . Definition at line 90 of file TGWin32ProxyBase.cxx. Public Member Functions;  TGWin32CallBackObject (TGWin32CallBack cb, void *p);  ;  ~TGWin32CallBackObject ();  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGWin32CallBackObject.html:452,inherit,inherited,452,doc/master/classTGWin32CallBackObject.html,https://root.cern,https://root.cern/doc/master/classTGWin32CallBackObject.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGedFrame::TGedSubFrame Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; Private Member Functions |; List of all members ; TGedFrame::TGedSubFrame Class Reference. . Definition at line 31 of file TGedFrame.h. Public Member Functions;  TGedSubFrame (TString n, TGCompositeFrame *f);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGedFrame_1_1TGedSubFrame.html:438,inherit,inherited,438,doc/master/classTGedFrame_1_1TGedSubFrame.html,https://root.cern,https://root.cern/doc/master/classTGedFrame_1_1TGedSubFrame.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGedTabInfo Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; TGedTabInfo Class Reference. . Definition at line 63 of file TGedEditor.cxx. Public Member Functions;  TGedTabInfo (TGTabElement *el, TGCompositeFrame *f);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGedTabInfo.html:395,inherit,inherited,395,doc/master/classTGedTabInfo.html,https://root.cern,https://root.cern/doc/master/classTGedTabInfo.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGenBitsetProxy Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; TGenBitsetProxy Class Reference. . Definition at line 135 of file TGenCollectionProxy.cxx. Public Member Functions;  TGenBitsetProxy (const TGenCollectionProxy &c);  ;  ~TGenBitsetProxy () override;  ; void * At (UInt_t idx) override;  Return the address of the value at index idx ;  ; void DeleteItem (Bool_t force, void *ptr) const override;  Call to delete/destruct individual item. ;  ;  Public Member Functions inherited from TGenCollectionProxy;  TGenCollectionProxy (const ROOT::Detail::TCollectionProxyInfo &info, TClass *cl);  Build a proxy for a collection whose type is described by 'collectionClass'. ;  ;  TGenCollectionProxy (const TGenCollectionProxy &copy);  Build a proxy for an emulated container. ;  ;  TGenCollectionProxy (Info_t typ, size_t iter_size);  Build a proxy for a collection whose type is described by 'collectionClass'. ;  ;  ~TGenCollectionProxy () override;  Standard destructor. ;  ; void * Allocate (UInt_t n, Bool_t forceDelete) override;  Allocate the needed space. ;  ; void * At (UInt_t idx) override;  Return the address of the value at index 'idx'. ;  ; void Clear (const char *opt="""") override;  Clear the emulated collection. ;  ; void Commit (void *env) override;  Commit the change. ;  ; TVirtualCollectionProxy * Generate () const override;  Virtual copy constructor. ;  ; TClass * GetCollectionClass () const override;  Return a pointer to the TClass representing the container. ;  ; Int_t GetCollectionType () const override;  Return the type of collection see TClassEdit::ESTLType. ;  ; TStreamerInfoActions::TActionSequence * GetConversionReadMemberWiseActions (TClass *oldClass, Int_t version) override;  Return the set of action necessary to stream in this collection member-wise coming from the old value class layout refered to by 'version'. ;  ; CopyI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenBitsetProxy.html:610,inherit,inherited,610,doc/master/classTGenBitsetProxy.html,https://root.cern,https://root.cern/doc/master/classTGenBitsetProxy.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGenListProxy Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; TGenListProxy Class Reference. . Definition at line 190 of file TGenCollectionProxy.cxx. Public Member Functions;  TGenListProxy (const TGenCollectionProxy &c);  ;  ~TGenListProxy () override;  ; void * At (UInt_t idx) override;  Return the address of the value at index 'idx'. ;  ;  Public Member Functions inherited from TGenVectorProxy;  TGenVectorProxy (const TGenCollectionProxy &c);  ;  ~TGenVectorProxy () override;  ; void * At (UInt_t idx) override;  Return the address of the value at index 'idx'. ;  ; void DeleteItem (Bool_t force, void *ptr) const override;  Call to delete/destruct individual item. ;  ;  Public Member Functions inherited from TGenCollectionProxy;  TGenCollectionProxy (const ROOT::Detail::TCollectionProxyInfo &info, TClass *cl);  Build a proxy for a collection whose type is described by 'collectionClass'. ;  ;  TGenCollectionProxy (const TGenCollectionProxy &copy);  Build a proxy for an emulated container. ;  ;  TGenCollectionProxy (Info_t typ, size_t iter_size);  Build a proxy for a collection whose type is described by 'collectionClass'. ;  ;  ~TGenCollectionProxy () override;  Standard destructor. ;  ; void * Allocate (UInt_t n, Bool_t forceDelete) override;  Allocate the needed space. ;  ; void Clear (const char *opt="""") override;  Clear the emulated collection. ;  ; void Commit (void *env) override;  Commit the change. ;  ; TVirtualCollectionProxy * Generate () const override;  Virtual copy constructor. ;  ; TClass * GetCollectionClass () const override;  Return a pointer to the TClass representing the container. ;  ; Int_t GetCollectionType () const override;  Return the type of collection see TClassEdit::ESTLType. ;  ; TStreamerInfoActions::TActionSequence * GetConversionReadMemberWiseActions (TClass *oldClass, Int_t version) override;  Return the s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenListProxy.html:500,inherit,inherited,500,doc/master/classTGenListProxy.html,https://root.cern,https://root.cern/doc/master/classTGenListProxy.html,2,['inherit'],['inherited']
Modifiability,". ROOT: TGenMapProxy Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; TGenMapProxy Class ReferenceInput/Output Library. ; Localoptimization class. ; Collection proxies get copied. On copy we switch the type of the proxy to the concrete STL type. The concrete types are optimized for element access. ; Definition at line 277 of file TGenCollectionProxy.cxx. Public Member Functions;  TGenMapProxy (const TGenCollectionProxy &c);  ;  ~TGenMapProxy () override;  ; void DeleteItem (Bool_t force, void *ptr) const override;  Call to delete/destruct individual item. ;  ;  Public Member Functions inherited from TGenSetProxy;  TGenSetProxy (const TGenCollectionProxy &c);  ;  ~TGenSetProxy () override;  ; void * At (UInt_t idx) override;  Return the address of the value at index 'idx'. ;  ;  Public Member Functions inherited from TGenVectorProxy;  TGenVectorProxy (const TGenCollectionProxy &c);  ;  ~TGenVectorProxy () override;  ; void * At (UInt_t idx) override;  Return the address of the value at index 'idx'. ;  ; void DeleteItem (Bool_t force, void *ptr) const override;  Call to delete/destruct individual item. ;  ;  Public Member Functions inherited from TGenCollectionProxy;  TGenCollectionProxy (const ROOT::Detail::TCollectionProxyInfo &info, TClass *cl);  Build a proxy for a collection whose type is described by 'collectionClass'. ;  ;  TGenCollectionProxy (const TGenCollectionProxy &copy);  Build a proxy for an emulated container. ;  ;  TGenCollectionProxy (Info_t typ, size_t iter_size);  Build a proxy for a collection whose type is described by 'collectionClass'. ;  ;  ~TGenCollectionProxy () override;  Standard destructor. ;  ; void * Allocate (UInt_t n, Bool_t forceDelete) override;  Allocate the needed space. ;  ; void Clear (const char *opt="""") override;  Clear the emulated collection. ;  ; void Commit (void *env) override;  Commit the change. ;  ; T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenMapProxy.html:713,inherit,inherited,713,doc/master/classTGenMapProxy.html,https://root.cern,https://root.cern/doc/master/classTGenMapProxy.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGenSetProxy Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; TGenSetProxy Class ReferenceInput/Output Library. ; Localoptimization class. ; Collection proxies get copied. On copy we switch the type of the proxy to the concrete STL type. The concrete types are optimized for element access. ; Definition at line 232 of file TGenCollectionProxy.cxx. Public Member Functions;  TGenSetProxy (const TGenCollectionProxy &c);  ;  ~TGenSetProxy () override;  ; void * At (UInt_t idx) override;  Return the address of the value at index 'idx'. ;  ;  Public Member Functions inherited from TGenVectorProxy;  TGenVectorProxy (const TGenCollectionProxy &c);  ;  ~TGenVectorProxy () override;  ; void * At (UInt_t idx) override;  Return the address of the value at index 'idx'. ;  ; void DeleteItem (Bool_t force, void *ptr) const override;  Call to delete/destruct individual item. ;  ;  Public Member Functions inherited from TGenCollectionProxy;  TGenCollectionProxy (const ROOT::Detail::TCollectionProxyInfo &info, TClass *cl);  Build a proxy for a collection whose type is described by 'collectionClass'. ;  ;  TGenCollectionProxy (const TGenCollectionProxy &copy);  Build a proxy for an emulated container. ;  ;  TGenCollectionProxy (Info_t typ, size_t iter_size);  Build a proxy for a collection whose type is described by 'collectionClass'. ;  ;  ~TGenCollectionProxy () override;  Standard destructor. ;  ; void * Allocate (UInt_t n, Bool_t forceDelete) override;  Allocate the needed space. ;  ; void Clear (const char *opt="""") override;  Clear the emulated collection. ;  ; void Commit (void *env) override;  Commit the change. ;  ; TVirtualCollectionProxy * Generate () const override;  Virtual copy constructor. ;  ; TClass * GetCollectionClass () const override;  Return a pointer to the TClass representing the container. ;  ; Int_t GetCollectionType () const override;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenSetProxy.html:695,inherit,inherited,695,doc/master/classTGenSetProxy.html,https://root.cern,https://root.cern/doc/master/classTGenSetProxy.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGenVectorBoolProxy Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TGenVectorBoolProxy Class ReferenceInput/Output Library. ; Local optimization class. ; Collection proxies get copied. On copy we switch the type of the proxy to the concrete STL type. The concrete types are optimized for element access. ; Definition at line 88 of file TGenCollectionProxy.cxx. Public Member Functions;  TGenVectorBoolProxy (const TGenCollectionProxy &c);  ;  ~TGenVectorBoolProxy () override;  ; void * At (UInt_t idx) override;  Return the address of the value at index 'idx'. ;  ; void DeleteItem (Bool_t force, void *ptr) const override;  Call to delete/destruct individual item. ;  ;  Public Member Functions inherited from TGenCollectionProxy;  TGenCollectionProxy (const ROOT::Detail::TCollectionProxyInfo &info, TClass *cl);  Build a proxy for a collection whose type is described by 'collectionClass'. ;  ;  TGenCollectionProxy (const TGenCollectionProxy &copy);  Build a proxy for an emulated container. ;  ;  TGenCollectionProxy (Info_t typ, size_t iter_size);  Build a proxy for a collection whose type is described by 'collectionClass'. ;  ;  ~TGenCollectionProxy () override;  Standard destructor. ;  ; void * Allocate (UInt_t n, Bool_t forceDelete) override;  Allocate the needed space. ;  ; void Clear (const char *opt="""") override;  Clear the emulated collection. ;  ; void Commit (void *env) override;  Commit the change. ;  ; TVirtualCollectionProxy * Generate () const override;  Virtual copy constructor. ;  ; TClass * GetCollectionClass () const override;  Return a pointer to the TClass representing the container. ;  ; Int_t GetCollectionType () const override;  Return the type of collection see TClassEdit::ESTLType. ;  ; TStreamerInfoActions::TActionSequence * GetConversionReadMemberWiseActions (TClass *oldClass, Int_t version) override",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenVectorBoolProxy.html:850,inherit,inherited,850,doc/master/classTGenVectorBoolProxy.html,https://root.cern,https://root.cern/doc/master/classTGenVectorBoolProxy.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGenVectorProxy Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; TGenVectorProxy Class ReferenceInput/Output Library. ; Local optimization class. ; Collection proxies get copied. On copy we switch the type of the proxy to the concrete STL type. The concrete types are optimized for element access. ; Definition at line 39 of file TGenCollectionProxy.cxx. Public Member Functions;  TGenVectorProxy (const TGenCollectionProxy &c);  ;  ~TGenVectorProxy () override;  ; void * At (UInt_t idx) override;  Return the address of the value at index 'idx'. ;  ; void DeleteItem (Bool_t force, void *ptr) const override;  Call to delete/destruct individual item. ;  ;  Public Member Functions inherited from TGenCollectionProxy;  TGenCollectionProxy (const ROOT::Detail::TCollectionProxyInfo &info, TClass *cl);  Build a proxy for a collection whose type is described by 'collectionClass'. ;  ;  TGenCollectionProxy (const TGenCollectionProxy &copy);  Build a proxy for an emulated container. ;  ;  TGenCollectionProxy (Info_t typ, size_t iter_size);  Build a proxy for a collection whose type is described by 'collectionClass'. ;  ;  ~TGenCollectionProxy () override;  Standard destructor. ;  ; void * Allocate (UInt_t n, Bool_t forceDelete) override;  Allocate the needed space. ;  ; void Clear (const char *opt="""") override;  Clear the emulated collection. ;  ; void Commit (void *env) override;  Commit the change. ;  ; TVirtualCollectionProxy * Generate () const override;  Virtual copy constructor. ;  ; TClass * GetCollectionClass () const override;  Return a pointer to the TClass representing the container. ;  ; Int_t GetCollectionType () const override;  Return the type of collection see TClassEdit::ESTLType. ;  ; TStreamerInfoActions::TActionSequence * GetConversionReadMemberWiseActions (TClass *oldClass, Int_t version) override;  Return the set of action necessary ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenVectorProxy.html:812,inherit,inherited,812,doc/master/classTGenVectorProxy.html,https://root.cern,https://root.cern/doc/master/classTGenVectorProxy.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGenerator Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TGenerator Class ReferenceMonte Carlo » EG. ; The interface to various event generators. ; Is an base class, that defines the interface of ROOT to various ; event generators. Every event generator should inherit from ; TGenerator or its subclasses. . Derived class can overload the member function GenerateEvent ; to do the actual event generation (e.g., call PYEVNT or similar). . The derived class should overload the member function ; ImportParticles (both types) to read the internal storage of the ; generated event into either the internal TObjArray or the passed ; TClonesArray of TParticles. . If the generator code stores event data in the /HEPEVT/ common block Then the default implementation of ImportParticles should suffice. ; The common block /HEPEVT/ is structed like . // C ; typedef struct { ; Int_t nevhep; // Event number ; Int_t nhep; // # of particles ; Int_t isthep[4000]; // Status flag of i'th particle ; Int_t idhep[4000]; // PDG # of particle ; Int_t jmohep[4000][2]; // 1st & 2nd mother particle # ; Int_t jdahep[4000][2]; // 1st & 2nd daughter particle # ; Double_t phep[4000][5]; // 4-momentum and 1 word ; Double_t vhep[4000][4]; // 4-position of production ; } HEPEVT_DEF; ; ; ; C Fortran ; COMMON/HEPEVT/NEVHEP,NHEP,ISTHEP(4000),IDHEP(4000), ; + JMOHEP(2,4000),JDAHEP(2,4000),PHEP(5,4000),VHEP(4,4000) ; INTEGER NEVHEP,NHEP,ISTHEP,IDHEP,JMOHEP,JDAHEP ; DOUBLE PRECISION PHEP,VHEP ; The generic member functions SetParameter and GetParameter can be overloaded to set and get parameters of the event generator.; Note, if the derived class interfaces a (set of) Fortran common blocks (like TPythia, TVenus does), one better make the derived class a singleton. That is, something like; class MyGe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenerator.html:481,inherit,inherit,481,doc/master/classTGenerator.html,https://root.cern,https://root.cern/doc/master/classTGenerator.html,1,['inherit'],['inherit']
Modifiability,". ROOT: TGeoCompositeShape Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; TGeoCompositeShape Class ReferenceThe Geometry Package » Shapes. ; Composite shapes are Boolean combinations of two or more shape components. ; The supported Boolean operations are union (+), intersection (*) and subtraction(-). Composite shapes derive from the base TGeoShape** class, therefore providing all shape features: computation of bounding box, finding if a given point is inside or outside the combination, as well as computing the distance to entering/exiting. They can be directly used for creating volumes or used in the definition of other composite shapes.; Composite shapes are provided in order to complement and extend the set of basic shape primitives. They have a binary tree internal structure, therefore all shape-related geometry queries are signals propagated from top level down to the final leaves, while the provided answers are assembled and interpreted back at top. This CSG (composite solid geometry) hierarchy is effective for small number of components, while performance drops dramatically for large structures. Building a complete geometry in this style is virtually possible but highly not recommended.; The Structure of Composite Shapes; A composite shape can always be looked as the result of a Boolean operation between only two shape components. All information identifying these two components as well as their positions with respect to the frame of the composite is represented by an object called Boolean node. A composite shape has a pointer to such a Boolean node. Since the shape components may also be composites, they will also contain binary Boolean nodes branching out other two shapes in the hierarchy. Any such branch ends-up when the final leaves are no longer comp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoCompositeShape.html:914,extend,extend,914,doc/master/classTGeoCompositeShape.html,https://root.cern,https://root.cern/doc/master/classTGeoCompositeShape.html,1,['extend'],['extend']
Modifiability,". ROOT: TGeoElementTable Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Types |; Private Attributes |; List of all members ; TGeoElementTable Class ReferenceThe Geometry Package » Geometry classes. ; Table of elements. ; Definition at line 398 of file TGeoElement.h. Public Types; enum  EGeoETStatus { kETDefaultElements = (1ULL << ( 14 )); , kETRNElements = (1ULL << ( 15 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGeoElementTable ();  default constructor ;  ;  TGeoElementTable (Int_t nelements);  constructor ;  ;  ~TGeoElementTable () override;  destructor ;  ; void AddElement (const char *name, const char *title, Int_t z, Double_t a);  Add an element to the table. Obsolete. ;  ; void AddElement (const char *name, const char *title, Int_t z, Int_t n, Double_t a);  Add an element to the table. ;  ; void AddElement (TGeoElement *elem);  Add a custom element to the table. ;  ; void AddElementRN (TGeoElementRN *elem);  Add a radionuclide to the table and map it. ;  ; void AddIsotope (TGeoIsotope *isotope);  Add isotope to the table. ;  ; void BuildDefaultElements ();  Creates the default element table. ;  ; Bool_t CheckTable () const;  Checks status of element table. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoElementTable.html:586,inherit,inherited,586,doc/master/classTGeoElementTable.html,https://root.cern,https://root.cern/doc/master/classTGeoElementTable.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGeoIsotope Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TGeoIsotope Class Reference. . Definition at line 103 of file TGeoElement.h. Public Member Functions;  TGeoIsotope ();  Dummy I/O constructor. ;  ;  TGeoIsotope (const char *name, Int_t z, Int_t n, Double_t a);  Constructor. ;  ;  ~TGeoIsotope () override;  ; Double_t GetA () const;  ; Int_t GetN () const;  ; Int_t GetZ () const;  ; TClass * IsA () const override;  ; void Print (Option_t *option="""") const override;  Print this isotope. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoIsotope.html:860,inherit,inherited,860,doc/master/classTGeoIsotope.html,https://root.cern,https://root.cern/doc/master/classTGeoIsotope.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGeoIteratorPlugin Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TGeoIteratorPlugin Class ReferenceabstractThe Geometry Package » Geometry classes. . Definition at line 224 of file TGeoNode.h. Public Member Functions;  TGeoIteratorPlugin ();  ;  ~TGeoIteratorPlugin () override;  ; TClass * IsA () const override;  ; virtual void ProcessNode ()=0;  ; void SetIterator (const TGeoIterator *iter);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Comput",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoIteratorPlugin.html:784,inherit,inherited,784,doc/master/classTGeoIteratorPlugin.html,https://root.cern,https://root.cern/doc/master/classTGeoIteratorPlugin.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGeoNavigatorArray Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TGeoNavigatorArray Class Reference. . Definition at line 294 of file TGeoNavigator.h. Public Member Functions;  TGeoNavigatorArray ();  ;  TGeoNavigatorArray (TGeoManager *mgr);  ;  ~TGeoNavigatorArray () override;  ; TGeoNavigator * AddNavigator ();  Add a new navigator to the array. ;  ; TGeoNavigator * GetCurrentNavigator () const;  ; TClass * IsA () const override;  ; TGeoNavigator * SetCurrentNavigator (Int_t inav);  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObjArray;  TObjArray (const TObjArray &a);  Create a copy of TObjArray a. Note, does not copy the kIsOwner flag. ;  ;  TObjArray (Int_t s=TCollection::kInitCapacity, Int_t lowerBound=0);  Create an object array. ;  ; virtual ~TObjArray ();  Delete an array. ;  ; void Add (TObject *obj) override;  ; void AddAfter (const TObject *after, TObject *obj) override;  Add object in the slot after object after. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Add object at position ids. ;  ; virtual void AddAtAndExpand (TObject *obj, Int_t idx);  Add object at position idx. ;  ; virtual Int_t AddAtFree (TObject *obj);  Return the position of the new object. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  Add object in the slot before object before. ;  ; void AddFirst (TObject *obj) override;  Add object in the first slot of the array. ;  ; void AddLast (TObject *obj) override;  Add object in the next empty slot in the array. ;  ; TObject * After (const TObject *obj) const override;  Return the object after obj. Returns 0 if obj is last object. ;  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoNavigatorArray.html:905,inherit,inherited,905,doc/master/classTGeoNavigatorArray.html,https://root.cern,https://root.cern/doc/master/classTGeoNavigatorArray.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGeoOverlap Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TGeoOverlap Class ReferenceThe Geometry Package » Geometry painter. ; Base class describing geometry overlaps. ; Overlaps apply to the nodes contained inside a volume. These should not overlap to each other nor extrude the shape of their mother volume. ; Definition at line 37 of file TGeoOverlap.h. Public Types; enum  EOverlapType { kGeoOverlap = (1ULL << ( 14 )); , kGeoExtrusion = (1ULL << ( 15 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGeoOverlap ();  Default ctor. ;  ;  TGeoOverlap (const char *name, TGeoVolume *vol1, TGeoVolume *vol2, const TGeoMatrix *matrix1, const TGeoMatrix *matrix2, Bool_t isovlp=kTRUE, Double_t ovlp=0.01);  Creates a named overlap belonging to volume VOL and having the size OVLP. ;  ;  ~TGeoOverlap () override;  Destructor. ;  ; void Browse (TBrowser *b) override;  Define double-click action. ;  ; Int_t Compare (const TObject *obj) const override;  Method to compare this overlap with another. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Distance to primitive for an overlap. ;  ; void Draw (Option_t *option="""") overri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoOverlap.html:715,inherit,inherited,715,doc/master/classTGeoOverlap.html,https://root.cern,https://root.cern/doc/master/classTGeoOverlap.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGeoRegionCut Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TGeoRegionCut Class Reference. . Definition at line 20 of file TGeoRegion.h. Public Member Functions;  TGeoRegionCut ();  ;  TGeoRegionCut (const char *name, Double_t cut);  ;  ~TGeoRegionCut () override;  ; Double_t GetCut () const;  ; TClass * IsA () const override;  ; void SetCut (Double_t cut);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TName",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoRegionCut.html:720,inherit,inherited,720,doc/master/classTGeoRegionCut.html,https://root.cern,https://root.cern/doc/master/classTGeoRegionCut.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGeoSkinSurface Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TGeoSkinSurface Class Reference. . Definition at line 177 of file TGeoOpticalSurface.h. Public Member Functions;  TGeoSkinSurface ();  ;  TGeoSkinSurface (const char *name, const char *ref, TGeoOpticalSurface const *surf, TGeoVolume const *vol);  ;  ~TGeoSkinSurface () override;  ; TGeoOpticalSurface const * GetSurface () const;  ; TGeoVolume const * GetVolume () const;  ; TClass * IsA () const override;  ; void Print (Option_t *option="""") const override;  This method must be overridden when a class wants to print itself. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoSkinSurface.html:950,inherit,inherited,950,doc/master/classTGeoSkinSurface.html,https://root.cern,https://root.cern/doc/master/classTGeoSkinSurface.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGeoVoxelFinder Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TGeoVoxelFinder Class ReferenceThe Geometry Package » Geometry classes. ; Finder class handling voxels. ; Full description with examples and pictures. Definition at line 20 of file TGeoVoxelFinder.h. Public Types; enum  EVoxelsType { kGeoInvalidVoxels = (1ULL << ( 15 )); , kGeoRebuildVoxels = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGeoVoxelFinder ();  Default constructor. ;  ;  TGeoVoxelFinder (TGeoVolume *vol);  Default constructor. ;  ;  ~TGeoVoxelFinder () override;  Destructor. ;  ; void DaughterToMother (Int_t id, const Double_t *local, Double_t *master) const;  convert a point from the local reference system of node id to reference system of mother volume ;  ; virtual Double_t Efficiency ();  Compute voxelization efficiency. ;  ; virtual void FindOverlaps (Int_t inode) const;  create the list of nodes for which the bboxes overlap with inode's bbox ;  ; Double_t * GetBoxes () const;  ; virtual Int_t * GetCheckList (const Double_t *point, Int_t &nelem, TGeoStateInfo &td);  get the list of daughter indices f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoVoxelFinder.html:658,inherit,inherited,658,doc/master/classTGeoVoxelFinder.html,https://root.cern,https://root.cern/doc/master/classTGeoVoxelFinder.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGlobal Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TGlobal Class Reference. ; Global variables class (global variables are obtained from CINT). ; This class describes the attributes of a global variable. The TROOT class contains a list of all currently defined global variables (accessible via TROOT::GetListOfGlobals()). ; Definition at line 28 of file TGlobal.h. Public Member Functions;  TGlobal (const TGlobal &);  Copy constructor. ;  ;  TGlobal (DataMemberInfo_t *info=nullptr);  pointer to CINT data member info ;  ; virtual ~TGlobal ();  TGlobal dtor deletes adopted CINT DataMemberInfo object. ;  ; virtual void * GetAddress () const;  Return address of global. ;  ; virtual Int_t GetArrayDim () const;  Return number of array dimensions. ;  ; virtual DeclId_t GetDeclId () const;  ; virtual const char * GetFullTypeName () const;  Get full type description of global variable, e,g.: ""class TDirectory*"". ;  ; virtual Int_t GetMaxIndex (Int_t dim) const;  Return maximum index for array dimension ""dim"". ;  ; virtual const char * GetTypeName () const;  Get type of global variable, e,g.: ""class TDirectory*"" -> ""TDirectory"". ;  ; TClass * IsA () const override;  ; virtual Bool_t IsValid ();  Return true if this global object is pointing to a currently loaded global. ;  ; TGlobal & operator= (const TGlobal &);  Assignment operator. ;  ; Long_t Property () const override;  Get property description word. For meaning of bits see EProperty. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual bool Update (DataMemberInfo_t *info);  Update the TFunction to reflect the new info. ;  ;  Public Member Functions inherited from TDictionary;  TDictionary ();  ;  TDictionary (const char *name);  ;  TDic",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGlobal.html:276,variab,variables,276,doc/master/classTGlobal.html,https://root.cern,https://root.cern/doc/master/classTGlobal.html,4,['variab'],"['variable', 'variables']"
Modifiability,". ROOT: TGridJob Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TGridJob Class Referenceabstract. . Definition at line 31 of file TGridJob.h. Public Member Functions;  TGridJob (TString jobID);  ; virtual ~TGridJob ();  ; virtual Bool_t Cancel ()=0;  ; virtual TString GetJobID ();  ; virtual TGridJobStatus * GetJobStatus () const =0;  ; virtual Int_t GetOutputSandbox (const char *localpath, Option_t *opt=nullptr);  Must be implemented by actual GRID job implementation. ;  ; TClass * IsA () const override;  ; virtual Bool_t Resubmit ()=0;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGridJob.html:895,inherit,inherited,895,doc/master/classTGridJob.html,https://root.cern,https://root.cern/doc/master/classTGridJob.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGridJobStatus Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; List of all members ; TGridJobStatus Class Referenceabstract. . Definition at line 26 of file TGridJobStatus.h. Public Types; enum  EGridJobStatus { ;   kUNKNOWN; , kWAITING; , kRUNNING; , kABORTED; , ;   kFAIL; , kDONE. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGridJobStatus ();  ; virtual ~TGridJobStatus ();  ; virtual EGridJobStatus GetStatus () const =0;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Cop",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGridJobStatus.html:462,inherit,inherited,462,doc/master/classTGridJobStatus.html,https://root.cern,https://root.cern/doc/master/classTGridJobStatus.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGridJobStatusList Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TGridJobStatusList Class Reference. . Definition at line 30 of file TGridJobStatusList.h. Public Member Functions;  TGridJobStatusList ();  ; virtual ~TGridJobStatusList ();  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; void AddAfter (const TObject *after, TObject *obj) override;  Insert object after object after in the list. ;  ; virtual void AddAfter (TObjLink *after, TObject *obj);  Insert object after the specified ObjLink object. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Insert object at position idx in the list. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  Insert object before object before in the list. ;  ; virtual void AddBefore (TObjLink *before, TObject *obj);  Insert object before the specified ObjLink object. ;  ; void AddFirst (TObject *obj) override;  Add object at the beginning of the list. ;  ; virtual void AddFirst (TObject *obj, Option_t *opt);  Add object at the beginning of the list and also store option. ;  ; void AddLast (TObject *obj) override;  Add object at the end of the list. ;  ; virtual void AddLast (TObject *obj, Option_t *opt);  Add object at the end of the list and also store option. ;  ; TObject * After (const TObject *obj) const override;  Returns the object after object obj. ;  ; TObject * At (I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGridJobStatusList.html:663,inherit,inherited,663,doc/master/classTGridJobStatusList.html,https://root.cern,https://root.cern/doc/master/classTGridJobStatusList.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGuiBldAction Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; TGuiBldAction Class Reference. . Definition at line 25 of file TGuiBuilder.h. Public Member Functions;  TGuiBldAction (const char *name=nullptr, const char *title=nullptr, Int_t type=kGuiBldCtor, TGLayoutHints *hints=nullptr);  constructor ;  ;  ~TGuiBldAction () override;  destructor ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGuiBldAction.html:740,inherit,inherited,740,doc/master/classTGuiBldAction.html,https://root.cern,https://root.cern/doc/master/classTGuiBldAction.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TGuiBldDragManagerRepeatTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TGuiBldDragManagerRepeatTimer Class Reference. . Definition at line 669 of file TGuiBldDragManager.cxx. Public Member Functions;  TGuiBldDragManagerRepeatTimer (TGuiBldDragManager *m, Long_t ms);  ; Bool_t Notify () override;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGuiBldDragManagerRepeatTimer.html:584,inherit,inherited,584,doc/master/classTGuiBldDragManagerRepeatTimer.html,https://root.cern,https://root.cern/doc/master/classTGuiBldDragManagerRepeatTimer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TH1 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; Protected Attributes |; Static Protected Attributes |; Private Member Functions |; Friends |; List of all members ; TH1 Class ReferenceHistogram Library » Histogram classes. ; TH1 is the base class of all histogram classes in ROOT. ; It provides the common interface for operations such as binning, filling, drawing, which will be detailed below. Creating histograms; Labelling axes. Binning; Fix or variable bin size; Convention for numbering bins; Alphanumeric Bin Labels; Histograms with automatic bins; Rebinning. Filling histograms; Associated errors; Associated functions; Projections of histograms; Random Numbers and histograms; Making a copy of a histogram; Normalizing histograms. Drawing histograms; Setting Drawing histogram contour levels (2-D hists only); Setting histogram graphics attributes; Customising how axes are drawn. Fitting histograms; Saving/reading histograms to/from a ROOT file; Operations on histograms; Miscellaneous operations. ROOT supports the following histogram types:. 1-D histograms:; TH1C : histograms with one byte per channel. Maximum bin content = 127; TH1S : histograms with one short per channel. Maximum bin content = 32767; TH1I : histograms with one int per channel. Maximum bin content = INT_MAX (*); TH1L : histograms with one long64 per channel. Maximum bin content = LLONG_MAX (**); TH1F : histograms with one float per channel. Maximum precision 7 digits, maximum integer bin content = +/-16777216 (***); TH1D : histograms with one double per channel. Maximum precision 14 digits, maximum integer bin content = +/-9007199254740992 (****). 2-D histograms:; TH2C : histograms with one byte per channel. Maximum bin content = 127; TH2S : histograms with one short per channel",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:677,variab,variable,677,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,1,['variab'],['variable']
Modifiability,". ROOT: TH1C Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Friends |; List of all members ; TH1C Class ReferenceHistogram Library » Histogram classes. ; 1-D histogram with a byte per channel (see TH1 documentation) ; Definition at line 458 of file TH1.h. Public Member Functions;  TH1C ();  Constructor. ;  ;  TH1C (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins);  Create a 1-Dim histogram with variable bins of type char (one byte per channel) (see TH1::TH1 for explanation of parameters) ;  ;  TH1C (const char *name, const char *title, Int_t nbinsx, const Float_t *xbins);  Create a 1-Dim histogram with variable bins of type char (one byte per channel) (see TH1::TH1 for explanation of parameters) ;  ;  TH1C (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup);  Create a 1-Dim histogram with fix bins of type char (one byte per channel) (see TH1::TH1 for explanation of parameters) ;  ;  TH1C (const TH1C &h1c);  Copy constructor. ;  ;  ~TH1C () override;  Destructor. ;  ; void AddBinContent (Int_t bin) override;  Increment bin content by 1. ;  ; void AddBinContent (Int_t bin, Double_t w) override;  Increment bin content by w. ;  ; void Copy (TObject &hnew) const override;  Copy this to newth1. ;  ; TClass * IsA () const override;  ; TH1C & operator= (const TH1C &h1);  Operator =. ;  ; void Reset (Option_t *option="""") override;  Reset. ;  ; void SetBinsLength (Int_t n=-1) override;  Set total number of bins including under/overflow Reallocate bin contents array. ;  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TH1;  ~TH1 () override;  Histogram default destructor. ;  ; virtual Bool_t Add (const TH1 *h, const TH1 *h2, Double_t c1=1, Do",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1C.html:588,variab,variable,588,doc/master/classTH1C.html,https://root.cern,https://root.cern/doc/master/classTH1C.html,2,['variab'],['variable']
Modifiability,". ROOT: TH1D Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Friends |; List of all members ; TH1D Class ReferenceHistogram Library » Histogram classes. ; 1-D histogram with a double per channel (see TH1 documentation) ; Definition at line 670 of file TH1.h. Public Member Functions;  TH1D ();  Constructor. ;  ;  TH1D (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins);  Create a 1-Dim histogram with variable bins of type double (see TH1::TH1 for explanation of parameters) ;  ;  TH1D (const char *name, const char *title, Int_t nbinsx, const Float_t *xbins);  Create a 1-Dim histogram with variable bins of type double (see TH1::TH1 for explanation of parameters) ;  ;  TH1D (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup);  Create a 1-Dim histogram with fix bins of type double (see TH1::TH1 for explanation of parameters) ;  ;  TH1D (const TH1D &h1d);  Constructor. ;  ;  TH1D (const TVectorD &v);  Create a histogram from a TVectorD by default the histogram name is ""TVectorD"" and title = """". ;  ;  ~TH1D () override;  Destructor. ;  ; void AddBinContent (Int_t bin) override;  Increment bin content by 1. ;  ; void AddBinContent (Int_t bin, Double_t w) override;  Increment bin content by a weight w Passing an out-of-range bin leads to undefined behavior. ;  ; void Copy (TObject &hnew) const override;  Copy this to newth1. ;  ; TClass * IsA () const override;  ; TH1D & operator= (const TH1D &h1);  Operator =. ;  ; void Reset (Option_t *option="""") override;  Reset. ;  ; void SetBinsLength (Int_t n=-1) override;  Set total number of bins including under/overflow Reallocate bin contents array. ;  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1D.html:590,variab,variable,590,doc/master/classTH1D.html,https://root.cern,https://root.cern/doc/master/classTH1D.html,2,['variab'],['variable']
Modifiability,". ROOT: TH1F Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Friends |; List of all members ; TH1F Class ReferenceHistogram Library » Histogram classes. ; 1-D histogram with a float per channel (see TH1 documentation) ; Definition at line 622 of file TH1.h. Public Member Functions;  TH1F ();  Constructor. ;  ;  TH1F (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins);  Create a 1-Dim histogram with variable bins of type float (see TH1::TH1 for explanation of parameters) ;  ;  TH1F (const char *name, const char *title, Int_t nbinsx, const Float_t *xbins);  Create a 1-Dim histogram with variable bins of type float (see TH1::TH1 for explanation of parameters) ;  ;  TH1F (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup);  Create a 1-Dim histogram with fix bins of type float (see TH1::TH1 for explanation of parameters) ;  ;  TH1F (const TH1F &h1f);  Copy Constructor. ;  ;  TH1F (const TVectorF &v);  Create a histogram from a TVectorF by default the histogram name is ""TVectorF"" and title = """". ;  ;  ~TH1F () override;  Destructor. ;  ; void AddBinContent (Int_t bin) override;  Increment bin content by 1. ;  ; void AddBinContent (Int_t bin, Double_t w) override;  Increment bin content by a weight w. ;  ; void Copy (TObject &hnew) const override;  Copy this to newth1. ;  ; TClass * IsA () const override;  ; TH1F & operator= (const TH1F &h1);  Operator =. ;  ; void Reset (Option_t *option="""") override;  Reset. ;  ; void SetBinsLength (Int_t n=-1) override;  Set total number of bins including under/overflow Reallocate bin contents array. ;  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TH1;  ~TH1 () override;  Histogram default destructor.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1F.html:589,variab,variable,589,doc/master/classTH1F.html,https://root.cern,https://root.cern/doc/master/classTH1F.html,2,['variab'],['variable']
Modifiability,". ROOT: TH1I Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Friends |; List of all members ; TH1I Class ReferenceHistogram Library » Histogram classes. ; 1-D histogram with an int per channel (see TH1 documentation) ; Definition at line 540 of file TH1.h. Public Member Functions;  TH1I ();  Constructor. ;  ;  TH1I (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins);  Create a 1-Dim histogram with variable bins of type integer (see TH1::TH1 for explanation of parameters) ;  ;  TH1I (const char *name, const char *title, Int_t nbinsx, const Float_t *xbins);  Create a 1-Dim histogram with variable bins of type integer (see TH1::TH1 for explanation of parameters) ;  ;  TH1I (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup);  Create a 1-Dim histogram with fix bins of type integer (see TH1::TH1 for explanation of parameters) ;  ;  TH1I (const TH1I &h1i);  Copy constructor. ;  ;  ~TH1I () override;  Destructor. ;  ; void AddBinContent (Int_t bin) override;  Increment bin content by 1. ;  ; void AddBinContent (Int_t bin, Double_t w) override;  Increment bin content by w. ;  ; void Copy (TObject &hnew) const override;  Copy this to newth1. ;  ; TClass * IsA () const override;  ; TH1I & operator= (const TH1I &h1);  Operator =. ;  ; void Reset (Option_t *option="""") override;  Reset. ;  ; void SetBinsLength (Int_t n=-1) override;  Set total number of bins including under/overflow Reallocate bin contents array. ;  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TH1;  ~TH1 () override;  Histogram default destructor. ;  ; virtual Bool_t Add (const TH1 *h, const TH1 *h2, Double_t c1=1, Double_t c2=1);  Replace contents of this histogram by the add",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1I.html:588,variab,variable,588,doc/master/classTH1I.html,https://root.cern,https://root.cern/doc/master/classTH1I.html,2,['variab'],['variable']
Modifiability,". ROOT: TH1L Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Friends |; List of all members ; TH1L Class ReferenceHistogram Library » Histogram classes. ; 1-D histogram with a long64 per channel (see TH1 documentation) ; Definition at line 581 of file TH1.h. Public Member Functions;  TH1L ();  Constructor. ;  ;  TH1L (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins);  Create a 1-Dim histogram with variable bins of type long64 (see TH1::TH1 for explanation of parameters) ;  ;  TH1L (const char *name, const char *title, Int_t nbinsx, const Float_t *xbins);  Create a 1-Dim histogram with variable bins of type long64 (see TH1::TH1 for explanation of parameters) ;  ;  TH1L (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup);  Create a 1-Dim histogram with fix bins of type long64 (see TH1::TH1 for explanation of parameters) ;  ;  TH1L (const TH1L &h1l);  Copy constructor. ;  ;  ~TH1L () override;  Destructor. ;  ; void AddBinContent (Int_t bin) override;  Increment bin content by 1. ;  ; void AddBinContent (Int_t bin, Double_t w) override;  Increment bin content by w. ;  ; void Copy (TObject &hnew) const override;  Copy this to newth1. ;  ; TClass * IsA () const override;  ; TH1L & operator= (const TH1L &h1);  Operator =. ;  ; void Reset (Option_t *option="""") override;  Reset. ;  ; void SetBinsLength (Int_t n=-1) override;  Set total number of bins including under/overflow Reallocate bin contents array. ;  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TH1;  ~TH1 () override;  Histogram default destructor. ;  ; virtual Bool_t Add (const TH1 *h, const TH1 *h2, Double_t c1=1, Double_t c2=1);  Replace contents of this histogram by the addi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1L.html:590,variab,variable,590,doc/master/classTH1L.html,https://root.cern,https://root.cern/doc/master/classTH1L.html,2,['variab'],['variable']
Modifiability,". ROOT: TH1S Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Friends |; List of all members ; TH1S Class ReferenceHistogram Library » Histogram classes. ; 1-D histogram with a short per channel (see TH1 documentation) ; Definition at line 499 of file TH1.h. Public Member Functions;  TH1S ();  Constructor. ;  ;  TH1S (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins);  Create a 1-Dim histogram with variable bins of type short (see TH1::TH1 for explanation of parameters) ;  ;  TH1S (const char *name, const char *title, Int_t nbinsx, const Float_t *xbins);  Create a 1-Dim histogram with variable bins of type short (see TH1::TH1 for explanation of parameters) ;  ;  TH1S (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup);  Create a 1-Dim histogram with fix bins of type short (see TH1::TH1 for explanation of parameters) ;  ;  TH1S (const TH1S &h1s);  Copy constructor. ;  ;  ~TH1S () override;  Destructor. ;  ; void AddBinContent (Int_t bin) override;  Increment bin content by 1. ;  ; void AddBinContent (Int_t bin, Double_t w) override;  Increment bin content by w. ;  ; void Copy (TObject &hnew) const override;  Copy this to newth1. ;  ; TClass * IsA () const override;  ; TH1S & operator= (const TH1S &h1);  Operator =. ;  ; void Reset (Option_t *option="""") override;  Reset. ;  ; void SetBinsLength (Int_t n=-1) override;  Set total number of bins including under/overflow Reallocate bin contents array. ;  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TH1;  ~TH1 () override;  Histogram default destructor. ;  ; virtual Bool_t Add (const TH1 *h, const TH1 *h2, Double_t c1=1, Double_t c2=1);  Replace contents of this histogram by the addition",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1S.html:589,variab,variable,589,doc/master/classTH1S.html,https://root.cern,https://root.cern/doc/master/classTH1S.html,2,['variab'],['variable']
Modifiability,". ROOT: TH3C Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Friends |; List of all members ; TH3C Class ReferenceHistogram Library » Histogram classes. ; 3-D histogram with a byte per channel (see TH1 documentation) ; Definition at line 157 of file TH3.h. Public Member Functions;  TH3C ();  Constructor. ;  ;  TH3C (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins, Int_t nbinsy, const Double_t *ybins, Int_t nbinsz, const Double_t *zbins);  Constructor for variable bin size 3-D histograms. ;  ;  TH3C (const char *name, const char *title, Int_t nbinsx, const Float_t *xbins, Int_t nbinsy, const Float_t *ybins, Int_t nbinsz, const Float_t *zbins);  Constructor for variable bin size 3-D histograms. ;  ;  TH3C (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup);  Constructor for fix bin size 3-D histograms (see TH3::TH3 for explanation of parameters) ;  ;  TH3C (const TH3C &h3c);  Copy constructor. ;  ;  ~TH3C () override;  Destructor. ;  ; void AddBinContent (Int_t bin) override;  Increment bin content by 1. ;  ; void AddBinContent (Int_t bin, Double_t w) override;  Increment bin content by w. ;  ; void AddBinContent (Int_t binx, Int_t biny, Int_t binz) override;  Increment 3D bin content by 1. ;  ; void AddBinContent (Int_t binx, Int_t biny, Int_t binz, Double_t w) override;  Increment 3D bin content by a weight w. ;  ; void Copy (TObject &hnew) const override;  Copy this 3-D histogram structure to newth3. ;  ; TClass * IsA () const override;  ; TH3C & operator= (const TH3C &h1);  Operator =. ;  ; void Reset (Option_t *option="""") override;  Reset this histogram: contents, errors, etc. ;  ; void SetBinsLength (Int_t n=-1) override;  Set total number of bins including under/o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3C.html:648,variab,variable,648,doc/master/classTH3C.html,https://root.cern,https://root.cern/doc/master/classTH3C.html,2,['variab'],['variable']
Modifiability,". ROOT: TH3D Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Friends |; List of all members ; TH3D Class ReferenceHistogram Library » Histogram classes. ; 3-D histogram with a double per channel (see TH1 documentation) ; Definition at line 363 of file TH3.h. Public Member Functions;  TH3D ();  Constructor. ;  ;  TH3D (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins, Int_t nbinsy, const Double_t *ybins, Int_t nbinsz, const Double_t *zbins);  Constructor for variable bin size 3-D histograms (see TH3::TH3 for explanation of parameters) ;  ;  TH3D (const char *name, const char *title, Int_t nbinsx, const Float_t *xbins, Int_t nbinsy, const Float_t *ybins, Int_t nbinsz, const Float_t *zbins);  Constructor for variable bin size 3-D histograms (see TH3::TH3 for explanation of parameters) ;  ;  TH3D (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup);  Constructor for fix bin size 3-D histograms (see TH3::TH3 for explanation of parameters) ;  ;  TH3D (const TH3D &h3d);  Copy constructor. ;  ;  ~TH3D () override;  Destructor. ;  ; void AddBinContent (Int_t bin) override;  Increment bin content by 1. ;  ; void AddBinContent (Int_t bin, Double_t w) override;  Increment bin content by a weight w Passing an out-of-range bin leads to undefined behavior. ;  ; void AddBinContent (Int_t binx, Int_t biny, Int_t binz) override;  Increment 3D bin content by 1. ;  ; void AddBinContent (Int_t binx, Int_t biny, Int_t binz, Double_t w) override;  Increment 3D bin content by a weight w. ;  ; void Copy (TObject &hnew) const override;  Copy this 3-D histogram structure to newth3. ;  ; TClass * IsA () const override;  ; TH3D & operator= (const TH3D &h1);  Operator =. ;  ; void Reset (Option_t *op",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3D.html:650,variab,variable,650,doc/master/classTH3D.html,https://root.cern,https://root.cern/doc/master/classTH3D.html,2,['variab'],['variable']
Modifiability,". ROOT: TH3F Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Friends |; List of all members ; TH3F Class ReferenceHistogram Library » Histogram classes. ; 3-D histogram with a float per channel (see TH1 documentation) ; Definition at line 317 of file TH3.h. Public Member Functions;  TH3F ();  Constructor. ;  ;  TH3F (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins, Int_t nbinsy, const Double_t *ybins, Int_t nbinsz, const Double_t *zbins);  Constructor for variable bin size 3-D histograms (see TH3::TH3 for explanation of parameters) ;  ;  TH3F (const char *name, const char *title, Int_t nbinsx, const Float_t *xbins, Int_t nbinsy, const Float_t *ybins, Int_t nbinsz, const Float_t *zbins);  Constructor for variable bin size 3-D histograms (see TH3::TH3 for explanation of parameters) ;  ;  TH3F (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup);  Constructor for fix bin size 3-D histograms (see TH3::TH3 for explanation of parameters) ;  ;  TH3F (const TH3F &h3f);  Copy constructor. ;  ;  ~TH3F () override;  Destructor. ;  ; void AddBinContent (Int_t bin) override;  Increment bin content by 1. ;  ; void AddBinContent (Int_t bin, Double_t w) override;  Increment bin content by a weight w. ;  ; void AddBinContent (Int_t binx, Int_t biny, Int_t binz) override;  Increment 3D bin content by 1. ;  ; void AddBinContent (Int_t binx, Int_t biny, Int_t binz, Double_t w) override;  Increment 3D bin content by a weight w. ;  ; void Copy (TObject &hnew) const override;  Copy this 3-D histogram structure to newth3. ;  ; TClass * IsA () const override;  ; TH3F & operator= (const TH3F &h1);  Operator =. ;  ; void Reset (Option_t *option="""") override;  Reset this histogram: contents, error",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3F.html:649,variab,variable,649,doc/master/classTH3F.html,https://root.cern,https://root.cern/doc/master/classTH3F.html,2,['variab'],['variable']
Modifiability,". ROOT: TH3I Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Friends |; List of all members ; TH3I Class ReferenceHistogram Library » Histogram classes. ; 3-D histogram with an int per channel (see TH1 documentation) ; Definition at line 237 of file TH3.h. Public Member Functions;  TH3I ();  Constructor. ;  ;  TH3I (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins, Int_t nbinsy, const Double_t *ybins, Int_t nbinsz, const Double_t *zbins);  Constructor for variable bin size 3-D histograms (see TH3::TH3 for explanation of parameters) ;  ;  TH3I (const char *name, const char *title, Int_t nbinsx, const Float_t *xbins, Int_t nbinsy, const Float_t *ybins, Int_t nbinsz, const Float_t *zbins);  Constructor for variable bin size 3-D histograms (see TH3::TH3 for explanation of parameters) ;  ;  TH3I (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup);  Constructor for fix bin size 3-D histograms (see TH3::TH3 for explanation of parameters) ;  ;  TH3I (const TH3I &h3i);  Copy constructor. ;  ;  ~TH3I () override;  Destructor. ;  ; void AddBinContent (Int_t bin) override;  Increment bin content by 1. ;  ; void AddBinContent (Int_t bin, Double_t w) override;  Increment bin content by w. ;  ; void AddBinContent (Int_t binx, Int_t biny, Int_t binz) override;  Increment 3D bin content by 1. ;  ; void AddBinContent (Int_t binx, Int_t biny, Int_t binz, Double_t w) override;  Increment 3D bin content by a weight w. ;  ; void Copy (TObject &hnew) const override;  Copy this 3-D histogram structure to newth3. ;  ; TClass * IsA () const override;  ; TH3I & operator= (const TH3I &h1);  Operator =. ;  ; void Reset (Option_t *option="""") override;  Reset this histogram: contents, errors, etc. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3I.html:648,variab,variable,648,doc/master/classTH3I.html,https://root.cern,https://root.cern/doc/master/classTH3I.html,2,['variab'],['variable']
Modifiability,". ROOT: TH3L Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Friends |; List of all members ; TH3L Class ReferenceHistogram Library » Histogram classes. ; 3-D histogram with a long64 per channel (see TH1 documentation) ; Definition at line 278 of file TH3.h. Public Member Functions;  TH3L ();  Constructor. ;  ;  TH3L (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins, Int_t nbinsy, const Double_t *ybins, Int_t nbinsz, const Double_t *zbins);  Constructor for variable bin size 3-D histograms (see TH3::TH3 for explanation of parameters) ;  ;  TH3L (const char *name, const char *title, Int_t nbinsx, const Float_t *xbins, Int_t nbinsy, const Float_t *ybins, Int_t nbinsz, const Float_t *zbins);  Constructor for variable bin size 3-D histograms (see TH3::TH3 for explanation of parameters) ;  ;  TH3L (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup);  Constructor for fix bin size 3-D histograms (see TH3::TH3 for explanation of parameters) ;  ;  TH3L (const TH3L &h3l);  Copy constructor. ;  ;  ~TH3L () override;  Destructor. ;  ; void AddBinContent (Int_t bin) override;  Increment bin content by 1. ;  ; void AddBinContent (Int_t bin, Double_t w) override;  Increment bin content by w. ;  ; void AddBinContent (Int_t binx, Int_t biny, Int_t binz) override;  Increment 3D bin content by 1. ;  ; void AddBinContent (Int_t binx, Int_t biny, Int_t binz, Double_t w) override;  Increment 3D bin content by a weight w. ;  ; void Copy (TObject &hnew) const override;  Copy this 3-D histogram structure to newth3. ;  ; TClass * IsA () const override;  ; TH3L & operator= (const TH3L &h1);  Operator =. ;  ; void Reset (Option_t *option="""") override;  Reset this histogram: contents, errors, etc. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3L.html:650,variab,variable,650,doc/master/classTH3L.html,https://root.cern,https://root.cern/doc/master/classTH3L.html,2,['variab'],['variable']
Modifiability,". ROOT: TH3S Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Friends |; List of all members ; TH3S Class ReferenceHistogram Library » Histogram classes. ; 3-D histogram with a short per channel (see TH1 documentation) ; Definition at line 197 of file TH3.h. Public Member Functions;  TH3S ();  Constructor. ;  ;  TH3S (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins, Int_t nbinsy, const Double_t *ybins, Int_t nbinsz, const Double_t *zbins);  Constructor for variable bin size 3-D histograms. ;  ;  TH3S (const char *name, const char *title, Int_t nbinsx, const Float_t *xbins, Int_t nbinsy, const Float_t *ybins, Int_t nbinsz, const Float_t *zbins);  Constructor for variable bin size 3-D histograms. ;  ;  TH3S (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup);  Constructor for fix bin size 3-D histograms. ;  ;  TH3S (const TH3S &h3s);  Copy Constructor. ;  ;  ~TH3S () override;  Destructor. ;  ; void AddBinContent (Int_t bin) override;  Increment bin content by 1. ;  ; void AddBinContent (Int_t bin, Double_t w) override;  Increment bin content by w. ;  ; void AddBinContent (Int_t binx, Int_t biny, Int_t binz) override;  Increment 3D bin content by 1. ;  ; void AddBinContent (Int_t binx, Int_t biny, Int_t binz, Double_t w) override;  Increment 3D bin content by a weight w. ;  ; void Copy (TObject &hnew) const override;  Copy this 3-D histogram structure to newth3. ;  ; TClass * IsA () const override;  ; TH3S & operator= (const TH3S &h1);  Operator =. ;  ; void Reset (Option_t *option="""") override;  Reset this histogram: contents, errors, etc. ;  ; void SetBinsLength (Int_t n=-1) override;  Set total number of bins including under/overflow Reallocate bin contents array. ;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3S.html:649,variab,variable,649,doc/master/classTH3S.html,https://root.cern,https://root.cern/doc/master/classTH3S.html,2,['variab'],['variable']
Modifiability,". ROOT: THaarMatrixT< Element > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; List of all members ; THaarMatrixT< Element > Class Template Reference. ; template<class Element>; class THaarMatrixT< Element >; Definition at line 122 of file TMatrixTLazy.h. Public Member Functions;  THaarMatrixT ();  ;  THaarMatrixT (Int_t n, Int_t no_cols=0);  ; virtual ~THaarMatrixT ();  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMatrixTLazy< Element >;  TMatrixTLazy ();  ;  TMatrixTLazy (Int_t nrows, Int_t ncols);  ;  TMatrixTLazy (Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb);  ;  ~TMatrixTLazy () override;  ; Int_t GetColLwb () const;  ; Int_t GetColUpb () const;  ; Int_t GetRowLwb () const;  ; Int_t GetRowUpb () const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHaarMatrixT.html:750,inherit,inherited,750,doc/master/classTHaarMatrixT.html,https://root.cern,https://root.cern/doc/master/classTHaarMatrixT.html,1,['inherit'],['inherited']
Modifiability,". ROOT: THashList Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; THashList Class ReferenceCore ROOT classes » Containers. ; THashList implements a hybrid collection class consisting of a hash table and a list to store TObject's. ; The hash table is used for quick access and lookup of objects while the list allows the objects to be ordered. The hash value is calculated using the value returned by the TObject's Hash() function. Each class inheriting from TObject can override Hash() as it sees fit. ; Definition at line 34 of file THashList.h. Public Member Functions;  THashList (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashList object. ;  ;  THashList (TObject *parent, Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  For backward compatibility only. Use other ctor. ;  ; virtual ~THashList ();  Delete a hashlist. ;  ; void AddAfter (const TObject *after, TObject *obj) override;  Insert object after object after in the list. ;  ; void AddAfter (TObjLink *after, TObject *obj) override;  Insert object after object after in the list. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Insert object at location idx in the list. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  Insert object before object before in the list. ;  ; void AddBefore (TObjLink *before, TObject *obj) override;  Insert object before object before in the list. ;  ; void AddFirst (TObject *obj) override;  Add object at the beginning of the list. ;  ; void AddFirst (TObject *obj, Option_t *opt) override;  Add object at the beginning of the list and also store option. ;  ; void AddLast (TObject *obj) override;  Add object at the end of the list. ;  ; void AddLast (TObject *obj, Option_t *opt) override;  Add object at the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHashList.html:650,inherit,inheriting,650,doc/master/classTHashList.html,https://root.cern,https://root.cern/doc/master/classTHashList.html,1,['inherit'],['inheriting']
Modifiability,". ROOT: THashTable Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; THashTable Class ReferenceCore ROOT classes » Containers. ; THashTable implements a hash table to store TObject's. ; The hash value is calculated using the value returned by the TObject's Hash() function. Each class inheriting from TObject can override Hash() as it sees fit.; THashTable does not preserve the insertion order of the objects. If the insertion order is important AND fast retrieval is needed use THashList instead. ; Definition at line 35 of file THashTable.h. Public Member Functions;  THashTable (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  Create a THashTable object. ;  ; virtual ~THashTable ();  Delete a hashtable. ;  ; void Add (TObject *obj) override;  Add object to the hash table. ;  ; void AddAll (const TCollection *col) override;  Add all objects from collection col to this collection. ;  ; void AddBefore (const TObject *before, TObject *obj);  Add object to the hash table. ;  ; Float_t AverageCollisions () const;  ; void Clear (Option_t *option="""") override;  Remove all objects from the table. ;  ; Int_t Collisions (const char *name) const;  Returns the number of collisions for an object with a certain name (i.e. ;  ; Int_t Collisions (TObject *obj) const;  Returns the number of collisions for an object (i.e. ;  ; void Delete (Option_t *option="""") override;  Remove all objects from the table AND delete all heap based objects. ;  ; Bool_t Empty () const;  ; TObject * FindObject (const char *name) const override;  Find object using its name. ;  ; TObject * FindObject (const TObject *obj) const override;  Find object using its hash value (returned by its Hash() member). ;  ; const TList * GetListForObject (const char *name) const;  Return the TLis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHashTable.html:500,inherit,inheriting,500,doc/master/classTHashTable.html,https://root.cern,https://root.cern/doc/master/classTHashTable.html,1,['inherit'],['inheriting']
Modifiability,". ROOT: THbookFile Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Static Protected Attributes |; List of all members ; THbookFile Class ReferenceHistogram Library. ; This class is an interface to the Hbook objects in Hbook files. ; Any Hbook object (1-D, 2-D, Profile, RWN or CWN can be read; NB: a THbookFile can only be used in READ mode Use the utility in $ROOTSYS/bin/h2root to convert Hbook to Root; Example of use: gSystem->Load(""libHbook"");; THbookFile f(""myfile.hbook"");; f.ls();; TH1F *h1 = (TH1F*)f.Get(1); //import histogram ID=1 in h1; h1->Fit(""gaus"");; THbookTree *T = (THbookTree*)f.Get(111); //import ntuple header; T->Print(); //show the Hbook ntuple variables; T->Draw(""x"",""y<0""); // as in normal TTree::Draw; THbookFile can be browsed via TBrowser. ; Definition at line 29 of file THbookFile.h. Public Member Functions;  THbookFile ();  the constructor ;  ;  THbookFile (const char *fname, Int_t lrecl=1024);  Constructor for an HBook file object. ;  ;  ~THbookFile () override;  destructor ;  ; void Browse (TBrowser *b) override;  to be implemented ;  ; virtual Bool_t cd (const char *dirname="""");  change directory to dirname ;  ; virtual void Close (Option_t *option="""");  Close the Hbook file. ;  ; virtual TObject * Convert1D (Int_t id);  Convert an Hbook 1-d histogram into a Root TH1F. ;  ; virtual TObject * Convert2D (Int_t id);  Convert an Hbook 2-d histogram into a Root TH2F. ;  ; virtual TFile * Convert2root (const char *rootname="""", Int_t lrecl=0, Option_t *option="""");  Convert this Hbook file to a Root file with name rootname. ;  ; virtual TObject * ConvertCWN (Int_t id);  Convert the Column-Wise-Ntuple id to a Root Tree. ;  ; virtual TObject * ConvertProfile (Int_t id);  Convert an Hbook profile histogram into a Root TProfile. ;  ; virtual TObject * ConvertRWN (Int_t id);  Convert the Row-Wise-Ntupl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHbookFile.html:826,variab,variables,826,doc/master/classTHbookFile.html,https://root.cern,https://root.cern/doc/master/classTHbookFile.html,1,['variab'],['variables']
Modifiability,". ROOT: THbookKey Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; THbookKey Class ReferenceHistogram Library. ; HBOOK Key. ; Definition at line 26 of file THbookKey.h. Public Member Functions;  THbookKey ();  ;  THbookKey (Int_t id, THbookFile *file);  constructor ;  ;  ~THbookKey () override;  ; void Browse (TBrowser *b) override;  Read object from disk and call its Browse() method. ;  ; TClass * IsA () const override;  ; Bool_t IsFolder () const override;  an hbook key is not a folder ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *optio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHbookKey.html:844,inherit,inherited,844,doc/master/classTHbookKey.html,https://root.cern,https://root.cern/doc/master/classTHbookKey.html,1,['inherit'],['inherited']
Modifiability,". ROOT: THbookTree Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; THbookTree Class ReferenceHistogram Library. ; A wrapper class supporting Hbook ntuples (CWN and RWN). ; The normal TTree calls can be used, including TTree::Draw(). Data read directly from the Hbook file via THbookFile.; IMPORTANT NOTE When setting the branch address (via THbookTree::SetBranchAddress) for a branch in an Hbook block containing several names, eg Hbook block SELEVN with the following variables:; 1 * R*4 * * * SELEVN * WGGS; 2 * R*4 * * * SELEVN * AM12; 3 * R*4 * * * SELEVN * AM34; 4 * R*4 * * * SELEVN * AM14; 5 * R*4 * * * SELEVN * AM32; 6 * R*4 * * * SELEVN * PtPI(4); 7 * R*4 * * * SELEVN * PHIPI(4); 8 * R*4 * * * SELEVN * THTPI(4); ; one must define a C struct like:; struct {; Float_t Wggs;; Float_t Am12;; Float_t Am34;; Float_t Am14;; Float_t Am32;; Float_t Ptpi[4];; Float_t Phipi[4];; Float_t Thtpi[4];; } event;; ; and set ONLY the first variable address with:; h96->SetBranchAddress(""Wggs"",&event.Wggs);; a#define a(i)Definition RSha256.hxx:99; Float_tfloat Float_tDefinition RtypesCore.h:57; R. Definition at line 30 of file THbookTree.h. Public Member Functions;  THbookTree ();  default constructor ;  ;  THbookTree (const char *name, Int_t id);  constructor ;  ;  ~THbookTree () override;  destructor ;  ; Int_t GetEntry (Long64_t entry=0, Int_t getall=0) override;  get one entry from the hbook ntuple ;  ; THbookFile * GetHbookFile ();  ; virtual Int_t GetID ();  ; virtual Int_t GetType ();  ; Float_t * GetX ();  ; virtual void InitBranches (Long64_t entry);  Initialize the branch addresses. ;  ; TClass * IsA () const override;  ; char * MakeX (Int_t nvars);  ; void Print (Option_t *option="""") const override;  Print an overview of the hbook ntuple. ;  ; Long64_t SetEntries (Long64_t n=-1) override;  Set the n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHbookTree.html:649,variab,variables,649,doc/master/classTHbookTree.html,https://root.cern,https://root.cern/doc/master/classTHbookTree.html,2,['variab'],"['variable', 'variables']"
Modifiability,". ROOT: THilbertMatrixTSym< Element > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; List of all members ; THilbertMatrixTSym< Element > Class Template Reference. ; template<class Element>; class THilbertMatrixTSym< Element >; Definition at line 161 of file TMatrixTLazy.h. Public Member Functions;  THilbertMatrixTSym ();  ;  THilbertMatrixTSym (Int_t no_rows);  ;  THilbertMatrixTSym (Int_t row_lwb, Int_t row_upb);  ; virtual ~THilbertMatrixTSym ();  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMatrixTSymLazy< Element >;  TMatrixTSymLazy ();  ;  TMatrixTSymLazy (Int_t nrows);  ;  TMatrixTSymLazy (Int_t row_lwb, Int_t row_upb);  ;  ~TMatrixTSymLazy () override;  ; Int_t GetRowLwb () const;  ; Int_t GetRowUpb () const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHilbertMatrixTSym.html:830,inherit,inherited,830,doc/master/classTHilbertMatrixTSym.html,https://root.cern,https://root.cern/doc/master/classTHilbertMatrixTSym.html,1,['inherit'],['inherited']
Modifiability,". ROOT: THnIter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; THnIter Class Reference. ; Iterator over THnBase bins. ; Definition at line 333 of file THnBase.h. Public Member Functions;  THnIter (const THnBase *hist, Bool_t respectAxisRange=kFALSE);  ;  ~THnIter () override;  ; Int_t GetCoord (Int_t dim) const;  ; Bool_t HaveSkippedBin () const;  ; TClass * IsA () const override;  ; Long64_t Next (Int_t *coord=nullptr);  Return the next bin's index. ;  ; Bool_t RespectsAxisRange () const;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; vir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHnIter.html:844,inherit,inherited,844,doc/master/classTHnIter.html,https://root.cern,https://root.cern/doc/master/classTHnIter.html,1,['inherit'],['inherited']
Modifiability,". ROOT: THnSparseCompactBinCoord Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; THnSparseCompactBinCoord Class Reference. ; THnSparseCompactBinCoord is a class used by THnSparse internally. ; It maps between an n-dimensional array of bin coordinates (indices) and its compact version, the THnSparseCoordCompression. ; Definition at line 351 of file THnSparse.cxx. Public Member Functions;  THnSparseCompactBinCoord (Int_t dim, const Int_t *nbins);  Initialize a THnSparseCompactBinCoord object with ""dim"" dimensions and ""bins"" holding the number of bins for each dimension. ;  ;  ~THnSparseCompactBinCoord ();  destruct a THnSparseCompactBinCoord ;  ; const Char_t * GetBuffer () const;  ; Int_t * GetCoord ();  ; ULong64_t GetHash () const;  ; void SetBuffer (const Char_t *buf);  ; void SetCoord (const Int_t *coord);  ; void UpdateCoord ();  ;  Public Member Functions inherited from THnSparseCoordCompression;  THnSparseCoordCompression (const THnSparseCoordCompression &other);  Construct a THnSparseCoordCompression from another one. ;  ;  THnSparseCoordCompression (Int_t dim, const Int_t *nbins);  Initialize a THnSparseCoordCompression object with ""dim"" dimensions and ""bins"" holding the number of bins for each dimension; it stores the. ;  ;  ~THnSparseCoordCompression ();  destruct a THnSparseCoordCompression ;  ; Int_t GetBufferSize () const;  ; ULong64_t GetHashFromBuffer (const Char_t *buf) const;  Calculate hash from compact bin index. ;  ; Int_t GetNdimensions () const;  ; THnSparseCoordCompression & operator= (const THnSparseCoordCompression &other);  Set this to other if different. ;  ; ULong64_t SetBufferFromCoord (const Int_t *coord_in, Char_t *buf_out) const;  Given the cbin coordinates coord_in, calculate (""compact"") the bin coordinates and return them in buf_in. ;  ; void SetCoordFromBuffer (co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHnSparseCompactBinCoord.html:1045,inherit,inherited,1045,doc/master/classTHnSparseCompactBinCoord.html,https://root.cern,https://root.cern/doc/master/classTHnSparseCompactBinCoord.html,1,['inherit'],['inherited']
Modifiability,". ROOT: THtml::TFileDefinition Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members ; THtml::TFileDefinition Class Reference. . Definition at line 71 of file THtml.h. Public Member Functions; virtual bool GetDeclFileName (const TClass *cl, TString &out_filename, TString &out_fsys, TFileSysEntry **fse=0) const;  Determine cl's declaration file name. ;  ; virtual bool GetImplFileName (const TClass *cl, TString &out_filename, TString &out_fsys, TFileSysEntry **fse=0) const;  Determine cl's implementation file name. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from THtml::THelperBase;  THelperBase ();  ;  ~THelperBase () override;  Helper's destructor. ;  ; THtml * GetOwner () const;  ; TClass * IsA () const override;  ; void SetOwner (THtml *html);  Set the THtml object owning this object; if it's already set to a different THtml object than issue an error message and signal to the currently set object that we are not belonging to it anymore. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t Che",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHtml_1_1TFileDefinition.html:904,inherit,inherited,904,doc/master/classTHtml_1_1TFileDefinition.html,https://root.cern,https://root.cern/doc/master/classTHtml_1_1TFileDefinition.html,1,['inherit'],['inherited']
Modifiability,". ROOT: THtml::TFileSysDB Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; THtml::TFileSysDB Class Reference. . Definition at line 174 of file THtml.h. Public Member Functions;  TFileSysDB (const char *path, const char *ignorePath, Int_t maxdirlevel);  ; THashTable & GetEntries ();  ; const TString & GetIgnore () const;  ; TExMap & GetMapIno ();  ; Int_t GetMaxLevel () const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from THtml::TFileSysDir;  TFileSysDir (const char *name, TFileSysDir *parent);  ; const TList * GetFiles () const;  ; const TList * GetSubDirs () const;  ; TClass * IsA () const override;  ; void Recurse (TFileSysDB *db, const char *path);  Recursively fill entries by parsing the contents of path. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from THtml::TFileSysEntry;  TFileSysEntry (const char *name, TFileSysDir *parent);  ;  ~TFileSysEntry () override;  ; virtual void GetFullName (TString &fullname, Bool_t asIncluded) const;  ; Int_t GetLevel () const;  ; const char * GetName () const override;  Returns name of object. ;  ; TFileSysDir * GetParent () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHtml_1_1TFileSysDB.html:791,inherit,inherited,791,doc/master/classTHtml_1_1TFileSysDB.html,https://root.cern,https://root.cern/doc/master/classTHtml_1_1TFileSysDB.html,1,['inherit'],['inherited']
Modifiability,". ROOT: THtml::TFileSysDir Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; THtml::TFileSysDir Class Reference. . Definition at line 138 of file THtml.h. Public Member Functions;  TFileSysDir (const char *name, TFileSysDir *parent);  ; const TList * GetFiles () const;  ; const TList * GetSubDirs () const;  ; TClass * IsA () const override;  ; void Recurse (TFileSysDB *db, const char *path);  Recursively fill entries by parsing the contents of path. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from THtml::TFileSysEntry;  TFileSysEntry (const char *name, TFileSysDir *parent);  ;  ~TFileSysEntry () override;  ; virtual void GetFullName (TString &fullname, Bool_t asIncluded) const;  ; Int_t GetLevel () const;  ; const char * GetName () const override;  Returns name of object. ;  ; TFileSysDir * GetParent () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHtml_1_1TFileSysDir.html:804,inherit,inherited,804,doc/master/classTHtml_1_1TFileSysDir.html,https://root.cern,https://root.cern/doc/master/classTHtml_1_1TFileSysDir.html,1,['inherit'],['inherited']
Modifiability,". ROOT: THtml::TFileSysEntry Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; THtml::TFileSysEntry Class Reference. . Definition at line 106 of file THtml.h. Public Member Functions;  TFileSysEntry (const char *name, TFileSysDir *parent);  ;  ~TFileSysEntry () override;  ; virtual void GetFullName (TString &fullname, Bool_t asIncluded) const;  ; Int_t GetLevel () const;  ; const char * GetName () const override;  Returns name of object. ;  ; TFileSysDir * GetParent () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHtml_1_1TFileSysEntry.html:937,inherit,inherited,937,doc/master/classTHtml_1_1TFileSysEntry.html,https://root.cern,https://root.cern/doc/master/classTHtml_1_1TFileSysEntry.html,1,['inherit'],['inherited']
Modifiability,". ROOT: THtml::TFileSysRoot Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; THtml::TFileSysRoot Class Reference. . Definition at line 157 of file THtml.h. Public Member Functions;  TFileSysRoot (const char *name, TFileSysDB *parent);  ; void GetFullName (TString &fullname, Bool_t asIncluded) const override;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from THtml::TFileSysDir;  TFileSysDir (const char *name, TFileSysDir *parent);  ; const TList * GetFiles () const;  ; const TList * GetSubDirs () const;  ; void Recurse (TFileSysDB *db, const char *path);  Recursively fill entries by parsing the contents of path. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from THtml::TFileSysEntry;  TFileSysEntry (const char *name, TFileSysDir *parent);  ;  ~TFileSysEntry () override;  ; Int_t GetLevel () const;  ; const char * GetName () const override;  Returns name of object. ;  ; TFileSysDir * GetParent () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHtml_1_1TFileSysRoot.html:670,inherit,inherited,670,doc/master/classTHtml_1_1TFileSysRoot.html,https://root.cern,https://root.cern/doc/master/classTHtml_1_1TFileSysRoot.html,1,['inherit'],['inherited']
Modifiability,". ROOT: THtml::THelperBase Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; THtml::THelperBase Class Reference. . Definition at line 44 of file THtml.h. Public Member Functions;  THelperBase ();  ;  ~THelperBase () override;  Helper's destructor. ;  ; THtml * GetOwner () const;  ; TClass * IsA () const override;  ; void SetOwner (THtml *html);  Set the THtml object owning this object; if it's already set to a different THtml object than issue an error message and signal to the currently set object that we are not belonging to it anymore. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Op",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHtml_1_1THelperBase.html:893,inherit,inherited,893,doc/master/classTHtml_1_1THelperBase.html,https://root.cern,https://root.cern/doc/master/classTHtml_1_1THelperBase.html,1,['inherit'],['inherited']
Modifiability,". ROOT: THtml::TModuleDefinition Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; THtml::TModuleDefinition Class Reference. . Definition at line 61 of file THtml.h. Public Member Functions; virtual bool GetModule (TClass *cl, TFileSysEntry *fse, TString &out_modulename) const;  Set out_modulename to cl's module name; return true if it's valid. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from THtml::THelperBase;  THelperBase ();  ;  ~THelperBase () override;  Helper's destructor. ;  ; THtml * GetOwner () const;  ; void SetOwner (THtml *html);  Set the THtml object owning this object; if it's already set to a different THtml object than issue an error message and signal to the currently set object that we are not belonging to it anymore. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHtml_1_1TModuleDefinition.html:708,inherit,inherited,708,doc/master/classTHtml_1_1TModuleDefinition.html,https://root.cern,https://root.cern/doc/master/classTHtml_1_1TModuleDefinition.html,1,['inherit'],['inherited']
Modifiability,". ROOT: THttpCallArg Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; THttpCallArg Class ReferenceHTTP server. ; Contains arguments for single HTTP call. ; Must be used in THttpEngine to process incoming http requests ; Definition at line 27 of file THttpCallArg.h. Public Types; enum  { kNoZip = 0; , kZip = 1; , kZipLarge = 2; , kZipAlways = 3; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  THttpCallArg ();  ; virtual ~THttpCallArg ();  destructor ;  ; void AddHeader (const char *name, const char *value);  Set name: value pair to reply header. ;  ; void AddNoCacheHeader ();  Set CacheControl http header to disable browser caching. ;  ; virtual Bool_t CanPostpone () const;  Return true if reply can be postponed by server .  ; Bool_t CompressWithGzip ();  Compress reply data with gzip compression. ;  ; template<class T , typename... Args> ; void CreateWSEngine (Args... args);  ; std::string FillHttpHeader (const char *header=nullptr);  Fills HTTP header, which can be send at the beginning of reply on the http request. ;  ; const void * GetContent () const;  ; Long_t GetContentL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHttpCallArg.html:653,inherit,inherited,653,doc/master/classTHttpCallArg.html,https://root.cern,https://root.cern/doc/master/classTHttpCallArg.html,1,['inherit'],['inherited']
Modifiability,". ROOT: THttpEngine Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Friends |; List of all members ; THttpEngine Class ReferenceHTTP server. ; Abstract class for implementing http protocol for THttpServer. ; Definition at line 19 of file THttpEngine.h. Public Member Functions; virtual Bool_t Create (const char *);  Method to create all components of engine. ;  ; THttpServer * GetServer () const;  Returns pointer to THttpServer associated with engine. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHttpEngine.html:850,inherit,inherited,850,doc/master/classTHttpEngine.html,https://root.cern,https://root.cern/doc/master/classTHttpEngine.html,1,['inherit'],['inherited']
Modifiability,". ROOT: THttpTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; Private Attributes |; List of all members ; THttpTimer Class Reference. . Definition at line 42 of file THttpServer.cxx. Public Member Functions;  THttpTimer (Long_t milliSec, Bool_t mode, THttpServer &serv);  !< server processing requests ;  ; Bool_t IsSlow () const;  ; void SetSlow (Bool_t flag);  ; void Timeout () override;  timeout handler used to process http requests in main ROOT thread ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHttpTimer.html:614,inherit,inherited,614,doc/master/classTHttpTimer.html,https://root.cern,https://root.cern/doc/master/classTHttpTimer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TIconBoxThumb Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; TIconBoxThumb Class Reference. . Definition at line 238 of file TRootBrowserLite.cxx. Public Member Functions;  TIconBoxThumb (const char *name, const TGPicture *spic, const TGPicture *pic);  ; const char * GetName () const override;  Returns name of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTIconBoxThumb.html:575,inherit,inherited,575,doc/master/classTIconBoxThumb.html,https://root.cern,https://root.cern/doc/master/classTIconBoxThumb.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TIdleTOTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TIdleTOTimer Class Reference. . Definition at line 443 of file TProofServ.h. Public Member Functions;  TIdleTOTimer (TProofServ *p, Int_t delay);  ; Bool_t Notify () override;  Handle expiration of the idle timer. The session will just be terminated. ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTIdleTOTimer.html:494,inherit,inherited,494,doc/master/classTIdleTOTimer.html,https://root.cern,https://root.cern/doc/master/classTIdleTOTimer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TIdleTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; TIdleTimer Class Reference. . Definition at line 60 of file TApplication.cxx. Public Member Functions;  TIdleTimer (Long_t ms);  ; Bool_t Notify () override;  Notify handler. ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Start (Long_t milliSec=-1, Bool_t singleShot=kFALSE);  Starts the timer with a milliSec timeou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTIdleTimer.html:394,inherit,inherited,394,doc/master/classTIdleTimer.html,https://root.cern,https://root.cern/doc/master/classTIdleTimer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TImagePalette Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; TImagePalette Class ReferenceGraphics » 2D Graphics » Basic graphics. ; A class to define a conversion from pixel values to pixel color. ; A Palette is defined by some anchor points. Each anchor point has a value between 0 and 1 and a color. An image has to be normalized and the values between the anchor points are interpolated. All member variables are public and can be directly manipulated. In most cases the default operator will be used to create a TImagePalette. In this case the member arrays have to be allocated by an application and will be deleted in the destructor of this class.; We provide few predefined palettes:. gHistImagePalette - palette used in TH2::Draw(""col""); gWebImagePalette The web palette is a set of 216 colors that will not dither or shift on PCs or Macs. Browsers use this built-in palette when they need to render colors on monitors with only 256 colors (also called 8-bit color monitors). The 6x6x6 web palette provides very quick color index lookup and can be used for good quality conversion of images into 2-D histograms.; TImagePalette(Int_t ncolors, Int_t *colors) if ncolors <= 0 a default palette (see below) of 50 colors is defined. if ncolors == 1 && colors == 0, then a Rainbow Palette is created.; if ncolors > 50 and colors=0, the DeepSea palette is used. (see TStyle::CreateGradientColorTable for more details); if ncolors > 0 and colors = 0, the default palette is used with a maximum of ncolors.; The default palette defines:; index 0->9 : grey colors from light to dark grey; index 10->19 : ""brown"" colors; index 20->29 : ""blueish"" colors; index 30->39 : ""redish"" colors; index 40->49 : basic colors . Definition at line 33 of file TAttImage.h. Public Member Functions;  TImagePalette ();  Default const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTImagePalette.html:589,variab,variables,589,doc/master/classTImagePalette.html,https://root.cern,https://root.cern/doc/master/classTImagePalette.html,1,['variab'],['variables']
Modifiability,". ROOT: TImagePlugin Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TImagePlugin Class Referenceabstract. . Definition at line 22 of file TImagePlugin.h. Public Member Functions;  TImagePlugin (const char *ext);  ;  ~TImagePlugin () override;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; virtual unsigned char * ReadFile (const char *filename, UInt_t &w, UInt_t &h)=0;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t WriteFile (const char *filename, unsigned char *argb, UInt_t w, UInt_t h)=0;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *opti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTImagePlugin.html:881,inherit,inherited,881,doc/master/classTImagePlugin.html,https://root.cern,https://root.cern/doc/master/classTImagePlugin.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TInetAddress Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TInetAddress Class ReferenceCore ROOT classes » Base ROOT classes. ; This class represents an Internet Protocol (IP) address. ; Definition at line 36 of file TInetAddress.h. Public Types; typedef std::vector< UInt_t > AddressList_t;  ; typedef std::vector< TString > AliasList_t;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TInetAddress ();  Default ctor. Used in case of unknown host. Not a valid address. ;  ;  TInetAddress (const TInetAddress &adr);  TInetAddress copy ctor. ;  ; virtual ~TInetAddress ();  ; UInt_t GetAddress () const;  ; UChar_t * GetAddressBytes () const;  Returns the raw IP address in host byte order. ;  ; const AddressList_t & GetAddresses () const;  ; const AliasList_t & GetAliases () const;  ; Int_t GetFamily () const;  ; const char * GetHostAddress () const;  Returns the IP address string ""%d.%d.%d.%d"". ;  ; const char * GetHostName () const;  ; Int_t GetPort () const;  ; TClass * IsA () const override;  ; Bool_t IsValid () const;  ; TInetAddress & operator= (const TInetAddress &rhs);  TInetAddress assignment operator. ;  ; void Print (Op",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTInetAddress.html:599,inherit,inherited,599,doc/master/classTInetAddress.html,https://root.cern,https://root.cern/doc/master/classTInetAddress.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TInsCharCom Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; TInsCharCom Class Reference. . Definition at line 95 of file TGTextEdit.cxx. Public Member Functions;  TInsCharCom (TGTextEdit *te, char ch);  ; Bool_t Notify () override;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ;  Public Member Functions inherited from TGTextEditCommand;  TGTextEditCommand (TGTextEdit *te);  ; void SetPos (TGLongPosition pos);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTInsCharCom.html:490,inherit,inherited,490,doc/master/classTInsCharCom.html,https://root.cern,https://root.cern/doc/master/classTInsCharCom.html,2,['inherit'],['inherited']
Modifiability,". ROOT: TInsTextCom Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; Private Attributes |; List of all members ; TInsTextCom Class Reference. . Definition at line 154 of file TGTextEdit.cxx. Public Member Functions;  TInsTextCom (TGTextEdit *te);  ; Bool_t Notify () override;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void SetEndPos (TGLongPosition end);  ;  Public Member Functions inherited from TGTextEditCommand;  TGTextEditCommand (TGTextEdit *te);  ; void SetPos (TGLongPosition pos);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *opt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTInsTextCom.html:565,inherit,inherited,565,doc/master/classTInsTextCom.html,https://root.cern,https://root.cern/doc/master/classTInsTextCom.html,2,['inherit'],['inherited']
Modifiability,". ROOT: TInspectorObject Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TInspectorObject Class ReferenceGraphics » 2D Graphics » Graphics pad. ; This class is designed to wrap a Foreign object in order to inject it into the Browse sub-system. ; Definition at line 36 of file TInspectCanvas.cxx. Public Member Functions;  TInspectorObject (void *obj, TClass *cl);  ;  ~TInspectorObject () override;  ; void * GetObject () const;  ; void Inspect () const override;  Dump contents of this object in a graphics canvas. ;  ; TClass * IsA () const override;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTInspectorObject.html:725,inherit,inherited,725,doc/master/classTInspectorObject.html,https://root.cern,https://root.cern/doc/master/classTInspectorObject.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TInterruptHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; TInterruptHandler Class Reference. . Definition at line 83 of file TRint.cxx. Public Member Functions;  TInterruptHandler ();  ; Bool_t Notify () override;  TRint interrupt handler. ;  ;  Public Member Functions inherited from TSignalHandler;  TSignalHandler (ESignals sig, Bool_t sync=kTRUE);  Create signal event handler. ;  ; virtual ~TSignalHandler ();  ; void Add () override;  Add signal handler to system signal handler list. ;  ; void Delay ();  ; ESignals GetSignal () const;  ; void HandleDelayedSignal ();  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove signal handler from system signal handler list. ;  ; void SetSignal (ESignals sig);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTInterruptHandler.html:408,inherit,inherited,408,doc/master/classTInterruptHandler.html,https://root.cern,https://root.cern/doc/master/classTInterruptHandler.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TIterCategory< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TIterCategory< T > Class Template Reference. ; template<class T>; class TIterCategory< T >; Definition at line 281 of file TCollection.h. Public Member Functions;  TIterCategory (const TCollection *col, Bool_t dir=kIterForward);  ;  TIterCategory (TIterator *it);  ; virtual ~TIterCategory ();  ; TIterCategory & Begin ();  ;  Public Member Functions inherited from TIter;  TIter (const TCollection *col, Bool_t dir=kIterForward);  ;  TIter (const TIter &iter);  Copy a TIter. ;  ;  TIter (TIterator *it);  ; virtual ~TIter ();  ; TIter & Begin ();  Pointing to the first element of the container. ;  ; const TCollection * GetCollection () const;  ; Option_t * GetOption () const;  ; virtual TClass * IsA () const;  ; TObject * Next ();  ; Bool_t operator!= (const TIter &aIter) const;  ; TObject * operator() ();  ; TObject * operator* () const;  ; TIter & operator++ ();  ; TIter & operator= (const TIter &rhs);  Assigning an TIter to another. ;  ; TIter & operator= (TIterator *iter);  ; Bool_t operator== (const TIter &aIter) const;  ; void Reset ();  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TIterCategory End ();  ;  Static Public Member Functions inherited from TIter; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TIter End ();  Pointing to the element after the last - to a nullptr value in our case. ;  . Additional Inherited Members;  Protected Member Functions inherited from TIter;  TIter ();  . #include <TCollection.h>. Inheritance diagram for TIterCategory< T >:. This browser is not able to show SVG: try Firefox, Chrome, Saf",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTIterCategory.html:591,inherit,inherited,591,doc/master/classTIterCategory.html,https://root.cern,https://root.cern/doc/master/classTIterCategory.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TJSONStackObj Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Public Attributes |; List of all members ; TJSONStackObj Class Reference. . Definition at line 306 of file TBufferJSON.cxx. Classes; struct  StlRead;  . Public Member Functions;  TJSONStackObj ()=default;  keep actual class version, workaround for ReadVersion in custom streamer ;  ;  ~TJSONStackObj () override;  ; Bool_t AssignStl (TClass *cl, Int_t map_convert, const char *typename_tag);  ; void ClearStl ();  ; nlohmann::json * GetStlNode ();  ; Int_t IsJsonArray (nlohmann::json *json=nullptr, const char *map_convert_type=nullptr);  checks if specified JSON node is array (compressed or not compressed) returns length of array (or -1 if failure) ;  ; Bool_t IsJsonString ();  ; Bool_t IsStl () const;  ; Bool_t IsStreamerElement () const;  ; Bool_t IsStreamerInfo () const;  ; std::unique_ptr< TArrayIndexProducer > MakeReadIndexes ();  ; const char * NextMemberSeparator ();  returns separator for data members ;  ; Int_t PopIntValue ();  ; void PushIntValue (Int_t v);  ; void PushValue (TString &v);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTJSONStackObj.html:1219,inherit,inherited,1219,doc/master/classTJSONStackObj.html,https://root.cern,https://root.cern/doc/master/classTJSONStackObj.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TLeafC Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TLeafC Class ReferenceTree Library. ; A TLeaf for a variable length string. ; Definition at line 26 of file TLeafC.h. Public Member Functions;  TLeafC ();  Default constructor for LeafC. ;  ;  TLeafC (TBranch *parent, const char *name, const char *type);  Create a LeafC. ;  ;  ~TLeafC () override;  Default destructor for a LeafC. ;  ; void Export (TClonesArray *list, Int_t n) override;  Export element from local leaf buffer to ClonesArray. ;  ; void FillBasket (TBuffer &b) override;  Pack leaf elements in Basket output buffer. ;  ; Int_t GetMaximum () const override;  ; Int_t GetMinimum () const override;  ; const char * GetTypeName () const override;  Returns name of leaf type. ;  ; Double_t GetValue (Int_t i=0) const override;  ; void * GetValuePointer () const override;  ; virtual char * GetValueString () const;  ; void Import (TClonesArray *list, Int_t n) override;  Import element from ClonesArray into local leaf buffer. ;  ; bool IncludeRange (TLeaf *) override;  Copy/set fMinimum and fMaximum to include/be wide than those of the parameter. ;  ; TClass * IsA () const override;  ; void PrintValue (Int_t i=0) const override;  Prints leaf value. ;  ; void ReadBasket (TBuffer &b) override;  Read leaf elements from Basket input buffer. ;  ; void ReadBasketExport (TBuffer &b, TClonesArray *list, Int_t n) override;  Read leaf elements from Basket input buffer and export buffer to TClonesArray objects. ;  ; void ReadValue (std::istream &s, Char_t delim=' ') override;  Read a string from std::istream s up to delimiter and store it into the branch buffer. ;  ; void SetAddress (void *add=nullptr) override;  Set leaf buffer data address. ;  ; virtual void SetMaximum (Int_t max);  ; virtual void SetMinimum (Int_t min);  ; void Streamer ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafC.html:295,variab,variable,295,doc/master/classTLeafC.html,https://root.cern,https://root.cern/doc/master/classTLeafC.html,1,['variab'],['variable']
Modifiability,". ROOT: TLeafObject Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TLeafObject Class ReferenceTree Library. ; A TLeaf for a general object derived from TObject. ; Definition at line 31 of file TLeafObject.h. Public Types; enum  EStatusBits { kWarn = (1ULL << ( 14 )); };  ; enum  EStatusBitsOldValues { kOldWarn = (1ULL << ( 12 )); };  In version of ROOT older then v6.12, kWarn was set to BIT(12) which overlaps with TBranch::kBranchObject. More...;  ;  Public Types inherited from TLeaf; enum class  DeserializeType { ;   kInvalid = 0; , kExternal; , kDestructive = kExternal; , kInPlace; , ;   kZeroCopy. };  ; enum  EStatusBits { kIndirectAddress = (1ULL << ( 11 )); , kNewValue = (1ULL << ( 12 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TLeafObject ();  Default constructor for LeafObject. ;  ;  TLeafObject (TBranch *parent, const char *name, const char *type);  Create a LeafObject. ;  ;  ~TLeafObject () override;  Default destructor for a LeafObject. ;  ; bool CanGenerateOffsetArray () override;  ; void FillBasket (TBuffer &b) override;  Pack leaf elements in Basket output buffer. ;  ; virtual Int_t * GenerateOffsetArrayBase (Int_t, Int_t);  ; TClass * GetClas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafObject.html:665,inherit,inherited,665,doc/master/classTLeafObject.html,https://root.cern,https://root.cern/doc/master/classTLeafObject.html,2,['inherit'],['inherited']
Modifiability,". ROOT: TLibraryDocInfo Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TLibraryDocInfo Class Reference. . Definition at line 141 of file TDocInfo.h. Public Member Functions;  TLibraryDocInfo ();  ;  TLibraryDocInfo (const char *lib);  ; void AddDependency (const std::string &lib);  ; void AddModule (const std::string &module);  ; std::set< std::string > & GetDependencies ();  ; std::set< std::string > & GetModules ();  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed na",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLibraryDocInfo.html:806,inherit,inherited,806,doc/master/classTLibraryDocInfo.html,https://root.cern,https://root.cern/doc/master/classTLibraryDocInfo.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TLinearMinimizer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TLinearMinimizer Class Reference. ; TLinearMinimizer class: minimizer implementation based on TMinuit. ; See alsoMinuit2 for a newer version of this class; TLinearMinimizer, simple class implementing the ROOT::Math::Minimizer interface usingTLinearFitter. This class uses TLinearFitter to find directly (by solving a system of linear equations) the minimum of a least-square function which has a linear dependence in the fit parameters. This class is not used directly, but via the ROOT::Fitter class, when calling the LinearFit method. It is instantiates using the plug-in manager (plug-in name is ""Linear""). ; Definition at line 31 of file TLinearMinimizer.h. Public Member Functions;  TLinearMinimizer (const char *type);  Constructor from a char * (used by PM) ;  ;  TLinearMinimizer (int type=0);  Default constructor. ;  ;  ~TLinearMinimizer () override;  Destructor (no operations) ;  ; double CovMatrix (unsigned int i, unsigned int j) const override;  return covariance matrices elements if the variable is fixed the matrix is zero The ordering of the variables is the same as in errors ;  ; int CovMatrixStatus () const override;  return covariance matrix status ;  ; double Edm () const override;  return expected distance reached from the minimum ;  ; const double * Errors () const override;  return errors at the minimum ;  ; virtual TClass * IsA () const;  ; const double * MinGradient () const override;  return pointer to gradient values at the minimum ;  ; bool Minimize () override;  method to perform the minimization ;  ; double MinValue () const override;  return minimum function value ;  ; unsigned int NCalls () const override;  number of function calls to reach the minimum ;  ; unsigned int NDim () const override;  this is",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLinearMinimizer.html:817,plug-in,plug-in,817,doc/master/classTLinearMinimizer.html,https://root.cern,https://root.cern/doc/master/classTLinearMinimizer.html,2,['plug-in'],['plug-in']
Modifiability,". ROOT: TLink Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TLink Class ReferenceGraphics » 2D Graphics » Basic graphics. ; Special TText object used to show hyperlinks. ; In the example below created by TObject::Inspect, TLinks are used to show pointers to other objects. Clicking on one link, inspect the corresponding object. ; Definition at line 17 of file TLink.h. Public Types; enum  EStatusBits { kIsStarStar = (1ULL << ( 2 )); };  ;  Public Types inherited from TText; enum  { kTextNDC = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TLink ();  Link default constructor. ;  ;  TLink (Double_t x, Double_t y, void *pointer);  Constructor to define a link object. ;  ;  ~TLink () override;  Link default destructor. ;  ; void ExecuteEvent (Int_t event, Int_t px, Int_t py) override;  Execute action corresponding to one event. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TText;  TText ();  ;  TText (const TText &text);  Copy constructor. ;  ;  TText (Double_t x, Double_t y, c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLink.html:653,inherit,inherited,653,doc/master/classTLink.html,https://root.cern,https://root.cern/doc/master/classTLink.html,2,['inherit'],['inherited']
Modifiability,". ROOT: TList Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; Friends |; List of all members ; TList Class ReferenceCore ROOT classes » Containers. ; A doubly linked list. ; All classes inheriting from TObject can be inserted in a TList. Before being inserted into the list the object pointer is wrapped in a TObjLink object which contains, besides the object pointer also a previous and next pointer.; There are several ways to iterate over a TList; in order of preference, if not forced by other constraints:. (Preferred way) Using the C++ range-based for or begin() / end(): for(TObject *obj: *GetListOfPrimitives()); obj->Write();; TCollection::WriteInt_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) overrideWrite all objects in this collection.Definition TCollection.cxx:672; TObjectMother of all ROOT objects.Definition TObject.h:41. Using the R__FOR_EACH macro: GetListOfPrimitives()->R__FOR_EACH(TObject,Paint)(option);; optionOption_t Option_t optionDefinition TGWin32VirtualXProxy.cxx:44; TCollection::Paintvoid Paint(Option_t *option="""") overridePaint all objects in this collection.Definition TCollection.cxx:417. Using the TList iterator TListIter (via the wrapper class TIter): TIter next(GetListOfPrimitives());; while (TObject *obj = next()); obj->Draw(next.GetOption());; TIterDefinition TCollection.h:235. Using the TList iterator TListIter and std::for_each algorithm: // A function object, which will be applied to each element; // of the given range.; struct STestFunctor {; bool operator()(TObject *aObj) {; ...; return true;; }; }; ...; ...; TIter iter(mylist);; for_each( iter.Begin(), TIter::End(), STestFunctor() );; operator()TRObject operator()(const T1 &t1) constDefinition TRFunctionImport__oprtr.h:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTList.html:437,inherit,inheriting,437,doc/master/classTList.html,https://root.cern,https://root.cern/doc/master/classTList.html,1,['inherit'],['inheriting']
Modifiability,". ROOT: TListOfDataMembers Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TListOfDataMembers Class Reference. ; A collection of TDataMember objects designed for fast access given a DeclId_t and for keep track of TDataMember that were described unloaded data member. ; Definition at line 32 of file TListOfDataMembers.h. Public Types; typedef TDictionary::DeclId_t DeclId_t;  ;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions; template<class DataMemberList > ;  TListOfDataMembers (DataMemberList &dmlist);  Construct from a generic collection of data members objects. ;  ;  TListOfDataMembers (TClass *cl, TDictionary::EMemberSelection selection);  Constructor, possibly for all members of a class (or globals). ;  ;  ~TListOfDataMembers ();  Destructor. ;  ; void AddAfter (const TObject *after, TObject *obj) override;  Insert object after object after in the list. ;  ; void AddAfter (TObjLink *after, TObject *obj) override;  Insert object after object after in the list. ;  ; void Ad",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTListOfDataMembers.html:614,inherit,inherited,614,doc/master/classTListOfDataMembers.html,https://root.cern,https://root.cern/doc/master/classTListOfDataMembers.html,3,['inherit'],['inherited']
Modifiability,". ROOT: TListOfEnums Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TListOfEnums Class Reference. ; A collection of TEnum objects designed for fast access given a DeclId_t and for keep track of TEnum that were described unloaded enum. ; Definition at line 32 of file TListOfEnums.h. Public Types; typedef TDictionary::DeclId_t DeclId_t;  ;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TListOfEnums (TClass *cl=nullptr);  Constructor. ;  ;  ~TListOfEnums () override;  Destructor. ;  ; void AddAfter (const TObject *after, TObject *obj) override;  Insert object after object after in the list. ;  ; void AddAfter (TObjLink *after, TObject *obj) override;  Insert object after object after in the list. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Insert object at location idx in the list. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  Insert object before object before in the list. ;  ; void AddBefore (TObjLin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTListOfEnums.html:618,inherit,inherited,618,doc/master/classTListOfEnums.html,https://root.cern,https://root.cern/doc/master/classTListOfEnums.html,3,['inherit'],['inherited']
Modifiability,". ROOT: TListOfFunctions Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TListOfFunctions Class Reference. ; A collection of TFunction objects designed for fast access given a DeclId_t and for keep track of TFunction that were described unloaded function. ; Definition at line 34 of file TListOfFunctions.h. Public Types; typedef TDictionary::DeclId_t DeclId_t;  ;  Public Types inherited from TList; typedef TListIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TListOfFunctions (TClass *cl);  Constructor. ;  ;  ~TListOfFunctions ();  Destructor. ;  ; void AddAfter (const TObject *after, TObject *obj) override;  Insert object after object after in the list. ;  ; void AddAfter (TObjLink *after, TObject *obj) override;  Insert object after object after in the list. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Insert object at location idx in the list. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  Insert object before object before in the list. ;  ; void AddBefore (TObjLink *before, TObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTListOfFunctions.html:612,inherit,inherited,612,doc/master/classTListOfFunctions.html,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html,3,['inherit'],['inherited']
Modifiability,". ROOT: TLockPath Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TLockPath Class ReferencePROOF » PROOF kernel Libraries. ; Path locking class allowing shared and exclusive locks. ; Definition at line 26 of file TLockPath.h. Public Member Functions;  TLockPath (const char *path="""");  Locks the directory. ;  ;  ~TLockPath () override;  ; const char * GetName () const override;  Returns name of object. ;  ; TClass * IsA () const override;  ; Bool_t IsLocked () const;  ; Int_t Lock (Bool_t shared=kFALSE);  ; void SetName (const char *path);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t Unlock ();  Unlock the directory. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLockPath.html:938,inherit,inherited,938,doc/master/classTLockPath.html,https://root.cern,https://root.cern/doc/master/classTLockPath.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMLPAnalyzer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; TMLPAnalyzer Class Reference. ; This utility class contains a set of tests useful when developing a neural network. ; It allows you to check for unneeded variables, and to control the network structure. ; Definition at line 25 of file TMLPAnalyzer.h. Public Member Functions;  TMLPAnalyzer (TMultiLayerPerceptron &net);  ;  TMLPAnalyzer (TMultiLayerPerceptron *net);  ;  ~TMLPAnalyzer () override;  Destructor. ;  ; void CheckNetwork ();  Gives some information about the network in the terminal. ;  ; void DrawDInput (Int_t i);  Draws the distribution (on the test sample) of the impact on the network output of a small variation of the ith input. ;  ; void DrawDInputs ();  Draws the distribution (on the test sample) of the impact on the network output of a small variation of each input. ;  ; void DrawNetwork (Int_t neuron, const char *signal, const char *bg);  Draws the distribution of the neural network (using ith neuron). ;  ; TProfile * DrawTruthDeviation (Int_t outnode=0, Option_t *option="""");  Create a profile of the difference of the MLP output minus the true value for a given output node outnode, vs the true value for outnode, for all test data events. ;  ; TProfile * DrawTruthDeviationInOut (Int_t innode, Int_t outnode=0, Option_t *option="""");  Creates a profile of the difference of the MLP output outnode minus the true value of outnode vs the input value innode, for all test data events. ;  ; THStack * DrawTruthDeviationInsOut (Int_t outnode=0, Option_t *option="""");  Creates a profile of the difference of the MLP output outnode minus the true value of outnode vs the input value, stacked for all inputs, for all test data events. ;  ; THStack * DrawTruthDeviations (Option_t *option="""");  Create",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMLPAnalyzer.html:431,variab,variables,431,doc/master/classTMLPAnalyzer.html,https://root.cern,https://root.cern/doc/master/classTMLPAnalyzer.html,1,['variab'],['variables']
Modifiability,". ROOT: TMVA Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Attributes |; List of all members ; TMVA Class ReferenceTMVA. ; Base Class for all classes that need option parsing. ; Node for the Decision Tree.; The node specifies ONE variable out of the given set of selection variable that is used to split the sample which ""arrives"" at the node, into a left (background-enhanced) and a right (signal-enhanced) sample. . Public Types; enum  ECellValue { ;   kValue; , kValueError; , kValueDensity; , kMeanValue; , ;   kRms; , kRmsOvMean; , kCellVolume. };  ; enum  EDTSeparation { ;   kFoam; , kGiniIndex; , kMisClassificationError; , kCrossEntropy; , ;   kGiniIndexWithLaplace; , kSdivSqrtSplusB. };  ; enum class  EEfficiencyPlotType { kEffBvsEffS; , kRejBvsEffS; };  ; enum  EFoamType { ;   kSeparate; , kDiscr; , kMonoTarget; , kMultiTarget; , ;   kMultiClass. };  ; enum  EMsgType { ;   kDEBUG = 1; , kVERBOSE = 2; , kINFO = 3; , kWARNING = 4; , ;   kERROR = 5; , kFATAL = 6; , kSILENT = 7; , kHEADER = 8. };  ; enum  ETargetSelection { kMean = 0; , kMpv = 1; };  ; using EventCollection_t = std::vector< Event * >;  ; using EventOutputs_t = std::vector< Float_t >;  ; using EventOutputsMulticlass_t = std::vector< std::vector< Float_t > >;  ; using EventTypes_t = std::vector< Bool_t >;  ; enum  HistType { kMVAType = 0; , kProbaType = 1; , kRarityType = 2; , kCompareType = 3; };  ; typedef UInt_t TMVAVersion_t;  ; enum  VIType { kShort =0; , kAll =1; , kRandom =2; };  . Public Attributes; std::vector< TControlBar * > BDT_Global__cbar;  ; std::vector< TControlBar * > BDTReg_Global__cbar;  ; const Bool_t GeneticAlgorithm__DEBUG__ = kFALSE;  ; const int max_Events_ = 200000;  ; const int max_nLayers_ = 6;  ; const int max_nNodes_ = 200;  ; const int max_nVar_ = 200;  ; const Bool_t MethodPDERS_UseFindRoot = kFALSE;  . Member Typedef Documentation. ◆ EventCollection_t. using TMVA::EventCollec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA.html:328,variab,variable,328,doc/master/classTMVA.html,https://root.cern,https://root.cern/doc/master/classTMVA.html,4,"['enhance', 'variab']","['enhanced', 'variable']"
Modifiability,". ROOT: TMVA Namespace Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Classes |; Functions ; TMVA Namespace Reference. create variable transformations ; More... Namespaces; namespace  DNN;  ; namespace  Experimental;  ; namespace  Internal;  ; namespace  kNN;  ; namespace  TMVAGlob;  . Classes; class  AbsoluteDeviationLossFunction;  Absolute Deviation Loss Function. More...;  ; class  AbsoluteDeviationLossFunctionBDT;  Absolute Deviation BDT Loss Function. More...;  ; class  AbsValue;  ; class  BDTEventWrapper;  ; class  BinarySearchTree;  A simple Binary search tree including a volume search method. More...;  ; class  BinarySearchTreeNode;  Node for the BinarySearch or Decision Trees. More...;  ; class  BinaryTree;  Base class for BinarySearch and Decision Trees. More...;  ; class  CCPruner;  A helper class to prune a decision tree using the Cost Complexity method (see Classification and Regression Trees by Leo Breiman et al) More...;  ; class  CCTreeWrapper;  ; class  ClassifierFactory;  This is the MVA factory. More...;  ; class  ClassInfo;  Class that contains all the information of a class. More...;  ; class  Config;  Singleton class for global configuration settings used by TMVA. More...;  ; class  Configurable;  ; class  ConvergenceTest;  Check for convergence. More...;  ; class  CostComplexityPruneTool;  A class to prune a decision tree using the Cost Complexity method. More...;  ; class  CrossEntropy;  Implementation of the CrossEntropy as separation criterion. More...;  ; class  CrossValidation;  Class to perform cross validation, splitting the dataloader into folds. More...;  ; class  CrossValidationFoldResult;  ; class  CrossValidationResult;  Class to save the results of cross validation, the metric for the classification ins ROC and you can ROC curves ROC integrals, ROC average and ROC standard deviation. More...;  ; class  CvSplit;  ; class  CvSplitKFolds;  ; class  CvSplitKFoldsExpr;  ; class ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceTMVA.html:185,variab,variable,185,doc/master/namespaceTMVA.html,https://root.cern,https://root.cern/doc/master/namespaceTMVA.html,1,['variab'],['variable']
Modifiability,". ROOT: TMVA Namespace Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Classes |; Functions ; TMVA Namespace Reference. create variable transformations ; More... Namespaces; namespace  DNN;  ; namespace  Experimental;  ; namespace  Internal;  ; namespace  kNN;  ; namespace  TMVAGlob;  . Classes; class  AbsoluteDeviationLossFunction;  Absolute Deviation Loss Function. More...;  ; class  AbsoluteDeviationLossFunctionBDT;  Absolute Deviation BDT Loss Function. More...;  ; class  AbsValue;  ; class  BDTEventWrapper;  ; class  BinarySearchTree;  A simple Binary search tree including a volume search method. More...;  ; class  BinarySearchTreeNode;  Node for the BinarySearch or Decision Trees. More...;  ; class  BinaryTree;  Base class for BinarySearch and Decision Trees. More...;  ; class  CCPruner;  A helper class to prune a decision tree using the Cost Complexity method (see Classification and Regression Trees by Leo Breiman et al) More...;  ; class  CCTreeWrapper;  ; class  ClassifierFactory;  This is the MVA factory. More...;  ; class  ClassInfo;  Class that contains all the information of a class. More...;  ; class  Config;  Singleton class for global configuration settings used by TMVA. More...;  ; class  Configurable;  ; class  ConvergenceTest;  Check for convergence. More...;  ; class  CostComplexityPruneTool;  A class to prune a decision tree using the Cost Complexity method. More...;  ; class  CrossEntropy;  Implementation of the CrossEntropy as separation criterion. More...;  ; class  CrossValidation;  Class to perform cross validation, splitting the dataloader into folds. More...;  ; class  CrossValidationFoldResult;  ; class  CrossValidationResult;  Class to save the results of cross validation, the metric for the classification ins ROC and you can ROC curves ROC integrals, ROC average and ROC standard deviation. More...;  ; class  CvSplit;  ; class  CvSplitKFolds;  ; class  CvSplitKFoldsExpr;  ; class  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/namespaceTMVA.html:184,variab,variable,184,doc/v632/namespaceTMVA.html,https://root.cern,https://root.cern/doc/v632/namespaceTMVA.html,1,['variab'],['variable']
Modifiability,". ROOT: TMVA tutorials. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Modules |; Files ; TMVA tutorialsTutorials. ; Example code which illustrates how to use the TMVA toolkit. . Modules;  Envelope Tutorials;  ;  TMVA Keras tutorials;  Example code which illustrates how to use keras with the python interface of TMVA. ;  ;  TMVA PyTorch tutorials;  Example code which illustrates how to use pytorch with the python interface of TMVA. ;  . Files; file  createData.C;  Plot the variables. ;  ; file  RBatchGenerator_NumPy.py;   Example of getting batches of events from a ROOT dataset as Python generators of numpy arrays. ;  ; file  RBatchGenerator_PyTorch.py;   Example of getting batches of events from a ROOT dataset into a basic PyTorch workflow. ;  ; file  RBatchGenerator_TensorFlow.py;   Example of getting batches of events from a ROOT dataset into a basic TensorFlow workflow. ;  ; file  tmva001_RTensor.C;   This tutorial illustrates the basic features of the RTensor class, RTensor is a std::vector-like container with additional shape information. ;  ; file  tmva002_RDataFrameAsTensor.C;   This tutorial shows how the content of an RDataFrame can be converted to an RTensor object. ;  ; file  tmva003_RReader.C;   This tutorial shows how to apply with the modern interfaces models saved in TMVA XML files. ;  ; file  tmva004_RStandardScaler.C;   This tutorial illustrates the usage of the standard scaler as preprocessing method. ;  ; file  tmva100_DataPreparation.py;   This tutorial illustrates how to prepare ROOT datasets to be nicely readable by most machine learning methods. ;  ; file  tmva101_Training.py;   This tutorial show how you can train a machine learning model with any package reading the training data directly from ROOT files. ;  ; file  tmva102_Testing.py;   This tutorial illustrates how you can test a trained BDT model using the fast tree inference engine offered by TMVA and external tools such as scikit-learn. ;  ; file  tmva10",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__tmva.html:511,variab,variables,511,doc/master/group__tutorial__tmva.html,https://root.cern,https://root.cern/doc/master/group__tutorial__tmva.html,1,['variab'],['variables']
Modifiability,". ROOT: TMVA::AbsoluteDeviationLossFunction Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; TMVA::AbsoluteDeviationLossFunction Class ReferenceTMVA. ; Absolute Deviation Loss Function. ; Definition at line 239 of file LossFunction.h. Public Member Functions;  AbsoluteDeviationLossFunction ();  ;  ~AbsoluteDeviationLossFunction ();  ; Double_t CalculateLoss (LossFunctionEventInfo &e);  absolute deviation, determine the loss for a single event ;  ; Double_t CalculateMeanLoss (std::vector< LossFunctionEventInfo > &evs);  absolute deviation, determine the mean loss for a collection of events ;  ; Double_t CalculateNetLoss (std::vector< LossFunctionEventInfo > &evs);  absolute deviation, determine the net loss for a collection of events ;  ; Int_t Id ();  ; TString Name ();  ;  Public Member Functions inherited from TMVA::LossFunction;  LossFunction ();  ; virtual ~LossFunction ();  . #include <TMVA/LossFunction.h>. Inheritance diagram for TMVA::AbsoluteDeviationLossFunction:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ AbsoluteDeviationLossFunction(). TMVA::AbsoluteDeviationLossFunction::AbsoluteDeviationLossFunction ; (; ). inline . Definition at line 242 of file LossFunction.h. ◆ ~AbsoluteDeviationLossFunction(). TMVA::AbsoluteDeviationLossFunction::~AbsoluteDeviationLossFunction ; (; ). inline . Definition at line 243 of file LossFunction.h. Member Function Documentation. ◆ CalculateLoss(). Double_t TMVA::AbsoluteDeviationLossFunction::CalculateLoss ; (; LossFunctionEventInfo & ; e). virtual . absolute deviation, determine the loss for a single event ; Implements TMVA::LossFunction.; Definition at line 497 of file LossFunction.cxx. ◆ CalculateMeanLoss(). Double_t TMVA::AbsoluteDeviationLossFunction::CalculateMeanLoss ; (; std::vector< LossFunctionEventInfo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1AbsoluteDeviationLossFunction.html:930,inherit,inherited,930,doc/master/classTMVA_1_1AbsoluteDeviationLossFunction.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1AbsoluteDeviationLossFunction.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMVA::BinarySearchTreeNode Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TMVA::BinarySearchTreeNode Class ReferenceTMVA. ; Node for the BinarySearch or Decision Trees. ; for the binary search tree, it basically consists of the EVENT, and pointers to the parent and daughters; in case of the Decision Tree, it specifies parent and daughters, as well as ""which variable is used"" in the selection of this node, including the respective cut value. ; Definition at line 55 of file BinarySearchTreeNode.h. Public Member Functions;  BinarySearchTreeNode (BinarySearchTreeNode *parent, char pos);  constructor of a daughter node as a daughter of 'p' ;  ;  BinarySearchTreeNode (const BinarySearchTreeNode &n, BinarySearchTreeNode *parent=nullptr);  copy constructor of a node. ;  ;  BinarySearchTreeNode (const Event *e=nullptr, UInt_t signalClass=0);  constructor of a node for the search tree ;  ; virtual ~BinarySearchTreeNode ();  node destructor ;  ; virtual void AddAttributesToNode (void *node) const;  adding attributes to tree node ;  ; virtual void AddContentToNode (std::stringstream &s) const;  adding attributes to tree node ;  ; virtual Node * CreateNode () const;  ; virtual Bool_t EqualsMe (const Event &) const;  check if the event fed into the node actually equals the event that forms the node (in case of a search tree) ;  ; UInt_t GetClass () const;  ; const std::vector< Float_t > & GetEventV () const;  ; Short_t GetSelector () const;  return index of variable used for discrimination at this node ;  ; const std::vector< Float_t > & GetTargets () const;  ; Float_t GetWeight () const;  ; virtual Bool_t GoesLeft (const Event &) const;  check if the event fed into the node goes/descends to the left daughter ;  ; virtual Bool_t GoesRight (const Event &) const;  check if the event fed into the nod",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1BinarySearchTreeNode.html:547,variab,variable,547,doc/master/classTMVA_1_1BinarySearchTreeNode.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1BinarySearchTreeNode.html,1,['variab'],['variable']
Modifiability,. ROOT: TMVA::Config Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; Protected Attributes |; Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TMVA::Config Class ReferenceTMVA. ; Singleton class for global configuration settings used by TMVA. ; Definition at line 49 of file Config.h. Classes; class  IONames;  ; class  VariablePlotting;  . Public Member Functions; void DisableMT ();  Force disabling MT running and release the thread pool by using instead seriaql execution. ;  ; Bool_t DrawProgressBar () const;  ; void EnableMT (int numthreads=0);  Enable MT in TMVA (by default is on when ROOT::EnableImplicitMT() is set. ;  ; IONames & GetIONames ();  ; ROOT::TThreadExecutor & GetMultiThreadExecutor ();  ; UInt_t GetNCpu ();  ; UInt_t GetNumWorkers () const;  ; Executor & GetThreadExecutor ();  Get executor class for multi-thread usage In case when MT is not enabled will return a serial executor. ;  ; VariablePlotting & GetVariablePlotting ();  ; virtual TClass * IsA () const;  ; Bool_t IsMTEnabled () const;  Check if IMT is enabled. ;  ; Bool_t IsSilent () const;  ; void SetDrawProgressBar (Bool_t d);  ; void SetNumWorkers (UInt_t n);  ; void SetSilent (Bool_t s);  ; void SetUseColor (Bool_t uc);  ; void SetWriteOptionsReference (Bool_t w);  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t UseColor () const;  ; Bool_t WriteOptionsReference () const;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static void DestroyInstance ();  static function: destroy TMVA instance ;  ; static Config & Instance ();  static function: returns TMVA instance ;  . Public At,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Config.html:423,config,configuration,423,doc/master/classTMVA_1_1Config.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Config.html,1,['config'],['configuration']
Modifiability,". ROOT: TMVA::CrossEntropy Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TMVA::CrossEntropy Class ReferenceTMVA. ; Implementation of the CrossEntropy as separation criterion. ; -p log (p) - (1-p)log(1-p); p=purity. Definition at line 43 of file CrossEntropy.h. Public Member Functions;  CrossEntropy ();  ;  CrossEntropy (const CrossEntropy &g);  ; virtual ~CrossEntropy ();  ; virtual Double_t GetSeparationIndex (const Double_t s, const Double_t b);  Cross Entropy defined as: ;  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::SeparationBase;  SeparationBase ();  Constructor. ;  ;  SeparationBase (const SeparationBase &s);  Copy constructor. ;  ; virtual ~SeparationBase ();  ; const TString & GetName ();  ; virtual Double_t GetSeparationGain (const Double_t nSelS, const Double_t nSelB, const Double_t nTotS, const Double_t nTotB);  Separation Gain: the measure of how the quality of separation of the sample increases by splitting the sample e.g. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::SeparationBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Additional Inherited Members;  Protected Attributes inherited from TMVA::SeparationBase; TString fName;  ; Double_t fPrecisionCut;  . #include <TMVA/CrossEntropy.h>. Inheritance diagram for TMVA::CrossEntropy:. This browser is not able to show SVG: try Firefox, Chrome, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1CrossEntropy.html:804,inherit,inherited,804,doc/master/classTMVA_1_1CrossEntropy.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1CrossEntropy.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMVA::CvSplitKFolds Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TMVA::CvSplitKFolds Class Reference. . Definition at line 92 of file CvSplit.h. Public Member Functions;  CvSplitKFolds (UInt_t numFolds, TString splitExpr="""", Bool_t stratified=kTRUE, UInt_t seed=100);  Splits a dataset into k folds, ready for use in cross validation. ;  ;  ~CvSplitKFolds () override;  ; TClass * IsA () const override;  ; void MakeKFoldDataSet (DataSetInfo &dsi) override;  Prepares a DataSet for cross validation. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::CvSplit;  CvSplit (UInt_t numFolds);  ; virtual ~CvSplit ();  ; UInt_t GetNumFolds ();  ; Bool_t NeedsRebuild ();  ; virtual void PrepareFoldDataSet (DataSetInfo &dsi, UInt_t foldNumber, Types::ETreeType tt);  Set training and test set vectors of dataset described by dsi. ;  ; virtual void RecombineKFoldDataSet (DataSetInfo &dsi, Types::ETreeType tt=Types::kTraining);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::Configurable;  Configurable (const TString &theOption="""");  constructor ;  ; virtual ~Configurable ();  default destructor ;  ; void AddOptionsXMLTo (void *parent) const;  write options to XML file ;  ; template<class T > ; void AddPreDefVal (const T &);  ; template<class T > ; void AddPreDefVal (const TString &optname, const T &);  ; void CheckForUnusedOptions () const;  checks for unused options in option string ;  ; template<class T > ; TMVA::OptionBase * DeclareOptionRef (T &ref, const TString &name, const TString &desc);  ; template<class T > ; OptionBase * DeclareOptionRef (T &ref, const TStri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1CvSplitKFolds.html:889,inherit,inherited,889,doc/master/classTMVA_1_1CvSplitKFolds.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1CvSplitKFolds.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMVA::DNN::Net Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Attributes |; List of all members ; TMVA::DNN::Net Class Reference. ; neural net ; holds the structure of all layers and some data for the whole net does not know the layer data though (i.e. values of the nodes and weights) ; Definition at line 1061 of file NeuralNet.h. Public Types; typedef std::pair< iterator_type, iterator_type > begin_end_type;  ; typedef std::vector< double > container_type;  ; typedef container_type::iterator iterator_type;  . Public Member Functions;  Net ();  c'tor ;  ;  Net (const Net &other);  d'tor ;  ; void addLayer (Layer &&layer);  ; void addLayer (Layer &layer);  add a layer (layout) ;  ; template<typename Settings > ; void backPropagate (std::vector< std::vector< LayerData > > &layerPatternData, const Settings &settings, size_t trainFromLayer, size_t totalNumWeights) const;  ; void clear ();  ; template<typename Weights > ; std::vector< double > compute (const std::vector< double > &input, const Weights &weights) const;  compute the net with the given input and the given weights ;  ; template<typename ItWeight > ; std::tuple< double, double > computeError (const Settings &settings, std::vector< LayerData > &lastLayerData, Batch &batch, ItWeight itWeightBegin, ItWeight itWeightEnd) const;  ; void dE ();  ; template<typename WeightsType , typename DropProbabilities > ; void dropOutWeightFactor (WeightsType &weights, const DropProbabilities &drops, bool inverse=false);  set the drop out configuration ;  ; double E ();  ; template<typename Container , typename ItWeight > ; double errorFunction (LayerData &layerData, Container truth, ItWeight itWeight, ItWeight itWeightEnd, double patternWeight, double factorWeightDecay, EnumRegularization eRegularization) const;  computes the error of the DNN ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1Net.html:359,layers,layers,359,doc/master/classTMVA_1_1DNN_1_1Net.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1Net.html,1,['layers'],['layers']
Modifiability,". ROOT: TMVA::DNN::TAdadelta< Architecture_t, Layer_t, DeepNet_t > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TMVA::DNN::TAdadelta< Architecture_t, Layer_t, DeepNet_t > Class Template Reference. ; template<typename Architecture_t, typename Layer_t = VGeneralLayer<Architecture_t>, typename DeepNet_t = TDeepNet<Architecture_t, Layer_t>>; class TMVA::DNN::TAdadelta< Architecture_t, Layer_t, DeepNet_t >Adadelta Optimizer class. ; This class represents the Adadelta Optimizer. ; Definition at line 45 of file Adadelta.h. Public Types; using Matrix_t = typename Architecture_t::Matrix_t;  ; using Scalar_t = typename Architecture_t::Scalar_t;  ;  Public Types inherited from TMVA::DNN::VOptimizer< Architecture_t, Layer_t, DeepNet_t >; using Matrix_t = typename Architecture_t::Matrix_t;  ; using Scalar_t = typename Architecture_t::Scalar_t;  . Public Member Functions;  TAdadelta (DeepNet_t &deepNet, Scalar_t learningRate=1.0, Scalar_t rho=0.95, Scalar_t epsilon=1e-8);  Constructor. ;  ;  ~TAdadelta ()=default;  Destructor. ;  ; Scalar_t GetEpsilon () const;  ; std::vector< std::vector< Matrix_t > > & GetPastSquaredBiasGradients ();  ; std::vector< Matrix_t > & GetPastSquaredBiasGradientsAt (size_t i);  ; std::vector< std::vector< Matrix_t > > & GetPastSquaredBiasUpdates ();  ; std::vector< Matrix_t > & GetPastSquaredBiasUpdatesAt (size_t i);  ; std::vector< std::vector< Matrix_t > > & GetPastSquaredWeightGradients ();  ; std::vector< Matrix_t > & GetPastSquaredWeightGradientsAt (size_t i);  ; std::vector< std::vector< Matrix_t > > & GetPastSquaredWeightUpdates ();  ; std::vector< Matrix_t > & GetPastSquaredWeightUpdatesAt (size_t i);  ; Scalar_t GetRho () const;  Getters. ;  ;  Public Member Functions inherited from TMVA::DNN::VOptimizer< Architecture_t, Layer_t, DeepNet_t >; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TAdadelta.html:864,inherit,inherited,864,doc/master/classTMVA_1_1DNN_1_1TAdadelta.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TAdadelta.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMVA::DNN::TAdagrad< Architecture_t, Layer_t, DeepNet_t > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TMVA::DNN::TAdagrad< Architecture_t, Layer_t, DeepNet_t > Class Template Reference. ; template<typename Architecture_t, typename Layer_t = VGeneralLayer<Architecture_t>, typename DeepNet_t = TDeepNet<Architecture_t, Layer_t>>; class TMVA::DNN::TAdagrad< Architecture_t, Layer_t, DeepNet_t >Adagrad Optimizer class. ; This class represents the Adagrad Optimizer. ; Definition at line 45 of file Adagrad.h. Public Types; using Matrix_t = typename Architecture_t::Matrix_t;  ; using Scalar_t = typename Architecture_t::Scalar_t;  ;  Public Types inherited from TMVA::DNN::VOptimizer< Architecture_t, Layer_t, DeepNet_t >; using Matrix_t = typename Architecture_t::Matrix_t;  ; using Scalar_t = typename Architecture_t::Scalar_t;  . Public Member Functions;  TAdagrad (DeepNet_t &deepNet, Scalar_t learningRate=0.01, Scalar_t epsilon=1e-8);  Constructor. ;  ;  ~TAdagrad ()=default;  Destructor. ;  ; Scalar_t GetEpsilon () const;  Getters. ;  ; std::vector< std::vector< Matrix_t > > & GetPastSquaredBiasGradients ();  ; std::vector< Matrix_t > & GetPastSquaredBiasGradientsAt (size_t i);  ; std::vector< std::vector< Matrix_t > > & GetPastSquaredWeightGradients ();  ; std::vector< Matrix_t > & GetPastSquaredWeightGradientsAt (size_t i);  ;  Public Member Functions inherited from TMVA::DNN::VOptimizer< Architecture_t, Layer_t, DeepNet_t >;  VOptimizer (Scalar_t learningRate, DeepNet_t &deepNet);  Constructor. ;  ; virtual ~VOptimizer ()=default;  Virtual Destructor. ;  ; size_t GetGlobalStep () const;  ; Layer_t * GetLayerAt (size_t i);  ; std::vector< Layer_t * > & GetLayers ();  ; Scalar_t GetLearningRate () const;  Getters. ;  ; void IncrementGlobalStep ();  Increments the gl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TAdagrad.html:858,inherit,inherited,858,doc/master/classTMVA_1_1DNN_1_1TAdagrad.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TAdagrad.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMVA::DNN::TAdam< Architecture_t, Layer_t, DeepNet_t > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TMVA::DNN::TAdam< Architecture_t, Layer_t, DeepNet_t > Class Template Reference. ; template<typename Architecture_t, typename Layer_t = VGeneralLayer<Architecture_t>, typename DeepNet_t = TDeepNet<Architecture_t, Layer_t>>; class TMVA::DNN::TAdam< Architecture_t, Layer_t, DeepNet_t >Adam Optimizer class. ; This class represents the Adam Optimizer. ; Definition at line 45 of file Adam.h. Public Types; using Matrix_t = typename Architecture_t::Matrix_t;  ; using Scalar_t = typename Architecture_t::Scalar_t;  ;  Public Types inherited from TMVA::DNN::VOptimizer< Architecture_t, Layer_t, DeepNet_t >; using Matrix_t = typename Architecture_t::Matrix_t;  ; using Scalar_t = typename Architecture_t::Scalar_t;  . Public Member Functions;  TAdam (DeepNet_t &deepNet, Scalar_t learningRate=0.001, Scalar_t beta1=0.9, Scalar_t beta2=0.999, Scalar_t epsilon=1e-7);  Constructor. ;  ;  ~TAdam ()=default;  Destructor. ;  ; Scalar_t GetBeta1 () const;  Getters. ;  ; Scalar_t GetBeta2 () const;  ; Scalar_t GetEpsilon () const;  ; std::vector< std::vector< Matrix_t > > & GetFirstMomentBiases ();  ; std::vector< Matrix_t > & GetFirstMomentBiasesAt (size_t i);  ; std::vector< std::vector< Matrix_t > > & GetFirstMomentWeights ();  ; std::vector< Matrix_t > & GetFirstMomentWeightsAt (size_t i);  ; std::vector< std::vector< Matrix_t > > & GetSecondMomentBiases ();  ; std::vector< Matrix_t > & GetSecondMomentBiasesAt (size_t i);  ; std::vector< std::vector< Matrix_t > > & GetSecondMomentWeights ();  ; std::vector< Matrix_t > & GetSecondMomentWeightsAt (size_t i);  ;  Public Member Functions inherited from TMVA::DNN::VOptimizer< Architecture_t, Layer_t, DeepNet_t >;  VOptimizer (Scalar_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TAdam.html:840,inherit,inherited,840,doc/master/classTMVA_1_1DNN_1_1TAdam.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TAdam.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMVA::DNN::TBatchNormLayer< Architecture_t > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Protected Member Functions |; Private Attributes |; List of all members ; TMVA::DNN::TBatchNormLayer< Architecture_t > Class Template Reference. ; template<typename Architecture_t>; class TMVA::DNN::TBatchNormLayer< Architecture_t >Layer implementing Batch Normalization. ; The input from each batch are normalized during training to have zero mean and unit variance and they are then scaled by two parameter, different for each input variable:; a scale factor gamma; an offset beta. In addition a running batch mean and variance is computed and stored in the class During inference the inputs are not normalized using the batch mean but the previously computed at running mean and variance If momentum is in [0,1) the running mean and variances are the exponential averages using the momentum value running_mean = momentum * running_mean + (1-momentum) * batch_mean If instead momentum<1 the cumulative average is computed running_mean = (nb/(nb+1) * running_mean + 1/(nb+1) * batch_mean; See more at [https://arxiv.org/pdf/1502.03167v3.pdf] ; Definition at line 64 of file BatchNormLayer.h. Public Types; using BNormDescriptors_t = typename Architecture_t::BNormDescriptors_t;  ; using HelperDescriptor_t = typename Architecture_t::TensorDescriptor_t;  ; using Matrix_t = typename Architecture_t::Matrix_t;  ; using Scalar_t = typename Architecture_t::Scalar_t;  ; using Tensor_t = typename Architecture_t::Tensor_t;  . Public Member Functions;  TBatchNormLayer (const TBatchNormLayer &);  Copy Constructor. ;  ;  TBatchNormLayer (size_t batchSize, size_t inputDepth, size_t inputHeight, size_t inputWidth, const std::vector< size_t > &shape, int axis=-1, Scalar_t momentum=-1., Scalar_t epsilon=0.0001);  Constructor. ;  ;  TBatchNormLayer (TBatchNormLayer< Archite",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TBatchNormLayer.html:668,variab,variable,668,doc/master/classTMVA_1_1DNN_1_1TBatchNormLayer.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TBatchNormLayer.html,1,['variab'],['variable']
Modifiability,". ROOT: TMVA::DNN::TCpuTensor< AFloat > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Friends |; List of all members ; TMVA::DNN::TCpuTensor< AFloat > Class Template Reference. ; template<typename AFloat>; class TMVA::DNN::TCpuTensor< AFloat >; Definition at line 40 of file CpuTensor.h. Public Types; using Matrix_t = TCpuMatrix< AFloat >;  ; using MemoryLayout = TMVA::Experimental::MemoryLayout;  ; using Scalar_t = AFloat;  ; using Shape_t = typename TMVA::Experimental::RTensor< AFloat >::Shape_t;  ;  Public Types inherited from TMVA::Experimental::RTensor< AFloat, TCpuBuffer< AFloat > >; using Container_t = TCpuBuffer< AFloat >;  ; using Index_t = Shape_t;  ; using Shape_t = std::vector< std::size_t >;  ; using Slice_t = std::vector< Shape_t >;  ; using Value_t = AFloat;  . Public Member Functions;  TCpuTensor ();  ;  TCpuTensor (AFloat *data, const Shape_t &shape, MemoryLayout memlayout=MemoryLayout::ColumnMajor);  ;  TCpuTensor (const TCpuBuffer< AFloat > &buffer, Shape_t shape, MemoryLayout memlayout=MemoryLayout::ColumnMajor);  constructors from a TCpuBuffer and a shape ;  ;  TCpuTensor (const TCpuMatrix< AFloat > &matrix, size_t dim=3, MemoryLayout memlayout=MemoryLayout::ColumnMajor);  constructors from a TCpuMatrix. ;  ;  TCpuTensor (Shape_t shape, MemoryLayout memlayout=MemoryLayout::ColumnMajor);  constructors from a shape. ;  ;  TCpuTensor (size_t bsize, size_t depth, size_t height, size_t width, MemoryLayout memlayout=MemoryLayout::ColumnMajor);  constructors from batch size, depth, height, width ;  ;  TCpuTensor (size_t bsize, size_t depth, size_t hw, MemoryLayout memlayout=MemoryLayout::ColumnMajor);  constructors from batch size, depth, height*width ;  ;  TCpuTensor (size_t n, size_t m, MemoryLayout memlayout=MemoryLayout::ColumnMajor);  constructors from n m ;  ; TCpuTensor< AFloat > At (size_t i);  ; TCpuTensor< AFloat > At (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TCpuTensor.html:647,inherit,inherited,647,doc/master/classTMVA_1_1DNN_1_1TCpuTensor.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TCpuTensor.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMVA::DNN::TCudaTensor< AFloat > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TMVA::DNN::TCudaTensor< AFloat > Class Template Reference. ; template<typename AFloat>; class TMVA::DNN::TCudaTensor< AFloat >TCudaTensor Class. ; The TCudaTensor class extends the TCudaMatrix class for dimensions > 2. ; Definition at line 83 of file CudaTensor.h. Classes; struct  TensorDescriptor;  . Public Types; using MemoryLayout = TMVA::Experimental::MemoryLayout;  ; using Scalar_t = AFloat;  ; using Shape_t = std::vector< size_t >;  . Public Member Functions;  TCudaTensor ();  ;  TCudaTensor (const AFloat *data, const std::vector< size_t > &shape, MemoryLayout memlayout=MemoryLayout::ColumnMajor, int deviceIndx=0, int streamIndx=0);  ;  TCudaTensor (const std::vector< size_t > &shape, MemoryLayout memlayout=MemoryLayout::ColumnMajor, int deviceIndx=0, int streamIndx=0);  ;  TCudaTensor (const TCudaMatrix< AFloat > &m, size_t dim=2);  ;  TCudaTensor (const TCudaTensor &)=default;  ;  TCudaTensor (const TMatrixT< AFloat > &m, size_t dim=2);  ;  TCudaTensor (size_t bsize, size_t csize, size_t hsize, size_t wsize, MemoryLayout memlayout=MemoryLayout::ColumnMajor, int deviceIndx=0, int streamIndx=0);  ;  TCudaTensor (size_t bsize, size_t csize, size_t hwsize, MemoryLayout memlayout=MemoryLayout::ColumnMajor, int deviceIndx=0, int streamIndx=0);  ;  TCudaTensor (size_t n, size_t m, MemoryLayout memlayout=MemoryLayout::ColumnMajor, int deviceIndx=0, int streamIndx=0);  ;  TCudaTensor (TCudaDeviceBuffer< AFloat > buffer, const std::vector< size_t > &shape, MemoryLayout memlayout=MemoryLayout::ColumnMajor, int deviceIndx=0, int streamIndx=0);  ;  TCudaTensor (TCudaDeviceBuffer< AFloat > buffer, size_t n, size_t m);  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TCudaTensor.html:529,extend,extends,529,doc/master/classTMVA_1_1DNN_1_1TCudaTensor.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TCudaTensor.html,1,['extend'],['extends']
Modifiability,". ROOT: TMVA::DNN::TDNNGenDescriptors< Layer_t > Struct Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Attributes |; List of all members ; TMVA::DNN::TDNNGenDescriptors< Layer_t > Struct Template Reference. ; template<typename Layer_t>; struct TMVA::DNN::TDNNGenDescriptors< Layer_t >; Definition at line 37 of file ContextHandles.h. Public Types; using HelperDescriptor_t = typename Layer_t::HelperDescriptor_t;  . Public Attributes; HelperDescriptor_t HelperDescriptor;  . Additional Inherited Members;  Public Member Functions inherited from TMVA::DNN::TDescriptors; virtual ~TDescriptors ();  . #include <TMVA/DNN/CNN/ContextHandles.h>. Inheritance diagram for TMVA::DNN::TDNNGenDescriptors< Layer_t >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ HelperDescriptor_t. template<typename Layer_t > . using TMVA::DNN::TDNNGenDescriptors< Layer_t >::HelperDescriptor_t = typename Layer_t::HelperDescriptor_t. Definition at line 38 of file ContextHandles.h. Member Data Documentation. ◆ HelperDescriptor. template<typename Layer_t > . HelperDescriptor_t TMVA::DNN::TDNNGenDescriptors< Layer_t >::HelperDescriptor. Definition at line 40 of file ContextHandles.h. Collaboration diagram for TMVA::DNN::TDNNGenDescriptors< Layer_t >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; The documentation for this struct was generated from the following file:; tmva/tmva/inc/TMVA/DNN/CNN/ContextHandles.h. TMVADNNTDNNGenDescriptors. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:46 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structTMVA_1_1DNN_1_1TDNNGenDescriptors.html:630,inherit,inherited,630,doc/master/structTMVA_1_1DNN_1_1TDNNGenDescriptors.html,https://root.cern,https://root.cern/doc/master/structTMVA_1_1DNN_1_1TDNNGenDescriptors.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMVA::DNN::TNet< Architecture_t, Layer_t > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Attributes |; List of all members ; TMVA::DNN::TNet< Architecture_t, Layer_t > Class Template Reference. ; template<typename Architecture_t, typename Layer_t = TLayer<Architecture_t>>; class TMVA::DNN::TNet< Architecture_t, Layer_t >Generic neural network class. ; This generic neural network class represents a concrete neural network through a vector of layers and coordinates the forward and backward propagation through the net.; The net takes as input a batch from the training data given in matrix form, with each row corresponding to a certain training event.; On construction, the neural network allocates all the memory required for the training of the neural net and keeps it until its destruction.; The Architecture type argument simply holds the architecture-specific data types, which are just the matrix type Matrix_t and the used scalar type Scalar_t.; Template Parameters. ArchitectureThe Architecture type that holds the ; Layer_tThe type used for the layers. Can be either Layer<Architecture> or SharedWeightLayer<Architecture>. datatypes for a given architecture. . Definition at line 49 of file Net.h. Public Types; using LayerIterator_t = typename std::vector< Layer_t >::iterator;  ; using Matrix_t = typename Architecture_t::Matrix_t;  ; using Scalar_t = typename Architecture_t::Scalar_t;  . Public Member Functions;  TNet ();  ;  TNet (const TNet &other);  ; template<typename OtherArchitecture_t > ;  TNet (size_t batchSize, const TNet< OtherArchitecture_t > &);  ;  TNet (size_t batchSize, size_t inputWidth, ELossFunction fJ, ERegularization fR=ERegularization::kNone, Scalar_t fWeightDecay=0.0);  Construct a neural net for a given batch size with given output function * and regularization. ;  ; template<typename SharedLayer > ; void AddL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TNet.html:588,layers,layers,588,doc/master/classTMVA_1_1DNN_1_1TNet.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TNet.html,1,['layers'],['layers']
Modifiability,". ROOT: TMVA::DNN::TRMSProp< Architecture_t, Layer_t, DeepNet_t > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TMVA::DNN::TRMSProp< Architecture_t, Layer_t, DeepNet_t > Class Template Reference. ; template<typename Architecture_t, typename Layer_t = VGeneralLayer<Architecture_t>, typename DeepNet_t = TDeepNet<Architecture_t, Layer_t>>; class TMVA::DNN::TRMSProp< Architecture_t, Layer_t, DeepNet_t >RMSProp Optimizer class. ; This class represents the RMSProp Optimizer with options for applying momentum. ; Definition at line 45 of file RMSProp.h. Public Types; using Matrix_t = typename Architecture_t::Matrix_t;  ; using Scalar_t = typename Architecture_t::Scalar_t;  ;  Public Types inherited from TMVA::DNN::VOptimizer< Architecture_t, Layer_t, DeepNet_t >; using Matrix_t = typename Architecture_t::Matrix_t;  ; using Scalar_t = typename Architecture_t::Scalar_t;  . Public Member Functions;  TRMSProp (DeepNet_t &deepNet, Scalar_t learningRate=0.001, Scalar_t momentum=0.0, Scalar_t rho=0.9, Scalar_t epsilon=1e-7);  Constructor. ;  ;  ~TRMSProp ()=default;  Destructor. ;  ; std::vector< std::vector< Matrix_t > > & GetBiasUpdates ();  ; std::vector< Matrix_t > & GetBiasUpdatesAt (size_t i);  ; Scalar_t GetEpsilon () const;  ; Scalar_t GetMomentum () const;  Getters. ;  ; std::vector< std::vector< Matrix_t > > & GetPastSquaredBiasGradients ();  ; std::vector< Matrix_t > & GetPastSquaredBiasGradientsAt (size_t i);  ; std::vector< std::vector< Matrix_t > > & GetPastSquaredWeightGradients ();  ; std::vector< Matrix_t > & GetPastSquaredWeightGradientsAt (size_t i);  ; Scalar_t GetRho () const;  ; std::vector< std::vector< Matrix_t > > & GetWeightUpdates ();  ; std::vector< Matrix_t > & GetWeightUpdatesAt (size_t i);  ;  Public Member Functions inherited from TMVA::DNN::VOptimize",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TRMSProp.html:893,inherit,inherited,893,doc/master/classTMVA_1_1DNN_1_1TRMSProp.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TRMSProp.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMVA::DNN::TSGD< Architecture_t, Layer_t, DeepNet_t > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TMVA::DNN::TSGD< Architecture_t, Layer_t, DeepNet_t > Class Template Reference. ; template<typename Architecture_t, typename Layer_t = VGeneralLayer<Architecture_t>, typename DeepNet_t = TDeepNet<Architecture_t, Layer_t>>; class TMVA::DNN::TSGD< Architecture_t, Layer_t, DeepNet_t >Stochastic Batch Gradient Descent Optimizer class. ; This class represents the Stochastic Batch Gradient Descent Optimizer with options for applying momentum and nesterov momentum. ; Definition at line 46 of file SGD.h. Public Types; using Matrix_t = typename Architecture_t::Matrix_t;  ; using Scalar_t = typename Architecture_t::Scalar_t;  ;  Public Types inherited from TMVA::DNN::VOptimizer< Architecture_t, Layer_t, DeepNet_t >; using Matrix_t = typename Architecture_t::Matrix_t;  ; using Scalar_t = typename Architecture_t::Scalar_t;  . Public Member Functions;  TSGD (Scalar_t learningRate, DeepNet_t &deepNet, Scalar_t momentum);  Constructor. ;  ;  ~TSGD ()=default;  Destructor. ;  ; Scalar_t GetMomentum () const;  Getters. ;  ; std::vector< std::vector< Matrix_t > > & GetPastBiasGradients ();  ; std::vector< Matrix_t > & GetPastBiasGradientsAt (size_t i);  ; std::vector< std::vector< Matrix_t > > & GetPastWeightGradients ();  ; std::vector< Matrix_t > & GetPastWeightGradientsAt (size_t i);  ;  Public Member Functions inherited from TMVA::DNN::VOptimizer< Architecture_t, Layer_t, DeepNet_t >;  VOptimizer (Scalar_t learningRate, DeepNet_t &deepNet);  Constructor. ;  ; virtual ~VOptimizer ()=default;  Virtual Destructor. ;  ; size_t GetGlobalStep () const;  ; Layer_t * GetLayerAt (size_t i);  ; std::vector< Layer_t * > & GetLayers ();  ; Scalar_t GetLearningRate () const;  Getters. ;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TSGD.html:951,inherit,inherited,951,doc/master/classTMVA_1_1DNN_1_1TSGD.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TSGD.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMVA::DNN::TSharedLayer< Architecture_t > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Attributes |; List of all members ; TMVA::DNN::TSharedLayer< Architecture_t > Class Template Reference. ; template<typename Architecture_t>; class TMVA::DNN::TSharedLayer< Architecture_t >Layer class width shared weight and bias layers. ; Like the Layer class only that weight matrices are shared between different instances of the net, which can be used to implement multithreading 'Hogwild' style. ; Definition at line 147 of file Layer.h. Public Types; using Matrix_t = typename Architecture_t::Matrix_t;  ; using Scalar_t = typename Architecture_t::Scalar_t;  ; using Tensor_t = typename Architecture_t::Tensor_t;  . Public Member Functions;  TSharedLayer (const TSharedLayer &layer);  ;  TSharedLayer (size_t fBatchSize, TLayer< Architecture_t > &layer);  ; void Backward (Matrix_t &gradients_backward, const Matrix_t &activations_backward, ERegularization r, Scalar_t weightDecay);  Compute weight, bias and activation gradients. ;  ; void Forward (Matrix_t &input, bool applyDropout=false);  Compute activation of the layer for the given input. ;  ; EActivationFunction GetActivationFunction () const;  ; Matrix_t & GetActivationGradients ();  ; const Matrix_t & GetActivationGradients () const;  ; size_t GetBatchSize () const;  ; Matrix_t & GetBiases ();  ; const Matrix_t & GetBiases () const;  ; Matrix_t & GetBiasGradients ();  ; const Matrix_t & GetBiasGradients () const;  ; size_t GetDropoutProbability () const;  ; size_t GetInputWidth () const;  ; Matrix_t & GetOutput ();  ; const Matrix_t & GetOutput () const;  ; Matrix_t & GetWeightGradients ();  ; const Matrix_t & GetWeightGradients () const;  ; Matrix_t & GetWeights () const;  ; size_t GetWidth () const;  ; void Print () const;  ; void SetDropoutProbability (Scalar_t p);  . Private Attributes;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TSharedLayer.html:460,layers,layers,460,doc/master/classTMVA_1_1DNN_1_1TSharedLayer.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TSharedLayer.html,1,['layers'],['layers']
Modifiability,". ROOT: TMVA::DNN::VGeneralLayer< Architecture_t > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; Private Types |; List of all members ; TMVA::DNN::VGeneralLayer< Architecture_t > Class Template Referenceabstract. ; template<typename Architecture_t>; class TMVA::DNN::VGeneralLayer< Architecture_t >Generic General Layer class. ; This class represents the general class for all layers in the Deep Learning Module. ; Definition at line 51 of file GeneralLayer.h. Public Member Functions;  VGeneralLayer (const VGeneralLayer &);  Copy Constructor. ;  ;  VGeneralLayer (size_t BatchSize, size_t InputDepth, size_t InputHeight, size_t InputWidth, size_t Depth, size_t Height, size_t Width, size_t WeightsNSlices, size_t WeightsNRows, size_t WeightsNCols, size_t BiasesNSlices, size_t BiasesNRows, size_t BiasesNCols, size_t OutputNSlices, size_t OutputNRows, size_t OutputNCols, EInitialization Init);  Constructor. ;  ;  VGeneralLayer (size_t BatchSize, size_t InputDepth, size_t InputHeight, size_t InputWidth, size_t Depth, size_t Height, size_t Width, size_t WeightsNSlices, std::vector< size_t > WeightsNRows, std::vector< size_t > WeightsNCols, size_t BiasesNSlices, std::vector< size_t > BiasesNRows, std::vector< size_t > BiasesNCols, size_t OutputNSlices, size_t OutputNRows, size_t OutputNCols, EInitialization Init);  General Constructor with different weights dimension. ;  ;  VGeneralLayer (VGeneralLayer< Architecture_t > *layer);  Copy the layer provided as a pointer. ;  ; virtual ~VGeneralLayer ();  Virtual Destructor. ;  ; virtual void AddWeightsXMLTo (void *parent)=0;  Writes the information and the weights about the layer in an XML node. ;  ; virtual void Backward (Tensor_t &gradients_backward, const Tensor_t &activations_backward)=0;  Backpropagates the error. ;  ; void CopyBiases (const std::vector< Matrix_t > &otherBiases);  Copies the biase",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1VGeneralLayer.html:512,layers,layers,512,doc/master/classTMVA_1_1DNN_1_1VGeneralLayer.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1VGeneralLayer.html,1,['layers'],['layers']
Modifiability,". ROOT: TMVA::DTNodeTrainingInfo Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; TMVA::DTNodeTrainingInfo Class Reference. . Definition at line 51 of file DecisionTreeNode.h. Public Member Functions;  DTNodeTrainingInfo ();  ;  DTNodeTrainingInfo (const DTNodeTrainingInfo &n);  . Public Attributes; Double_t fAlpha;  critical alpha for this node ;  ; Double_t fCC;  debug variable for cost complexity pruning .. ;  ; Double_t fG;  minimum alpha in subtree rooted at this node ;  ; Double_t fNB;  sum of weights of background events from the pruning sample in this node ;  ; Float_t fNBkgEvents;  sum of weights of backgr event in the node ;  ; Float_t fNBkgEvents_unboosted;  sum of backgr event in the node ;  ; Float_t fNBkgEvents_unweighted;  sum of backgr event in the node ;  ; Float_t fNEvents;  number of events in that entered the node (during training) ;  ; Float_t fNEvents_unboosted;  number of events in that entered the node (during training) ;  ; Float_t fNEvents_unweighted;  number of events in that entered the node (during training) ;  ; Double_t fNodeR;  node resubstitution estimate, R(t) ;  ; Double_t fNS;  ditto for the signal events ;  ; Float_t fNSigEvents;  sum of weights of signal event in the node ;  ; Float_t fNSigEvents_unboosted;  sum of signal event in the node ;  ; Float_t fNSigEvents_unweighted;  sum of signal event in the node ;  ; Int_t fNTerminal;  number of terminal nodes in subtree rooted at this node ;  ; std::vector< Float_t > fSampleMax;  the maxima for each ivar of the sample on the node during training ;  ; std::vector< Float_t > fSampleMin;  the minima for each ivar of the sample on the node during training ;  ; Float_t fSeparationGain;  measure of ""purity"", separation, or information gained BY this nodes selection ;  ; Float_t fSeparationIndex;  measure of ""purity"" (separation between S and B) AT t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DTNodeTrainingInfo.html:516,variab,variable,516,doc/master/classTMVA_1_1DTNodeTrainingInfo.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DTNodeTrainingInfo.html,1,['variab'],['variable']
Modifiability,". ROOT: TMVA::DataSetFactory Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Types |; List of all members ; TMVA::DataSetFactory Class ReferenceTMVA. ; Class that contains all the data information. ; Definition at line 116 of file DataSetFactory.h. Classes; class  EventStats;  . Public Member Functions;  DataSetFactory ();  constructor ;  ;  ~DataSetFactory ();  destructor ;  ; DataSet * CreateDataSet (DataSetInfo &, DataInputHandler &);  steering the creation of a new dataset ;  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (O",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DataSetFactory.html:894,inherit,inherited,894,doc/master/classTMVA_1_1DataSetFactory.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DataSetFactory.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMVA::DataSetInfo Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TMVA::DataSetInfo Class ReferenceTMVA. ; Class that contains all the data information. ; Definition at line 62 of file DataSetInfo.h. Public Types; enum  { kIsArrayVariable = (1ULL << ( 15 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  DataSetInfo (const TString &name=""Default"");  constructor ;  ; virtual ~DataSetInfo ();  destructor ;  ; ClassInfo * AddClass (const TString &className);  ; void AddCut (const TCut &cut, const TString &className);  set the cut for the classes ;  ; VariableInfo & AddSpectator (const TString &expression, const TString &title, const TString &unit, Double_t min, Double_t max, char type='F', Bool_t normalized=kTRUE, void *external=nullptr);  add a spectator (can be a complex expression) to the set of spectator variables used in the MV analysis ;  ; VariableInfo & AddSpectator (const VariableInfo &varInfo);  add spectator with given VariableInfo ;  ; VariableInfo & AddTarget (const TString &expression, const TString &title, const TString &unit, Double_t min, Double_t max, Bool_t normalized=kTRUE, void *external=nullptr);  add",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DataSetInfo.html:520,inherit,inherited,520,doc/master/classTMVA_1_1DataSetInfo.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DataSetInfo.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMVA::DecisionTree Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TMVA::DecisionTree Class ReferenceTMVA. ; Implementation of a Decision Tree. ; In a decision tree successive decision nodes are used to categorize the events out of the sample as either signal or background. Each node uses only a single discriminating variable to decide if the event is signal-like (""goes right"") or background-like (""goes left""). This forms a tree like structure with ""baskets"" at the end (leave nodes), and an event is classified as either signal or background according to whether the basket where it ends up has been classified signal or background during the training. Training of a decision tree is the process to define the ""cut criteria"" for each node. The training starts with the root node. Here one takes the full training event sample and selects the variable and corresponding cut value that gives the best separation between signal and background at this stage. Using this cut criterion, the sample is then divided into two subsamples, a signal-like (right) and a background-like (left) sample. Two new nodes are then created for each of the two sub-samples and they are constructed using the same mechanism as described for the root node. The devision is stopped once a certain node has reached either a minimum number of events, or a minimum or maximum signal purity. These leave nodes are then called ""signal"" or ""background"" if they contain more signal respective background events from the training sample. ; Definition at line 65 of file DecisionTree.h. Public Types; enum  EPruneMethod { kExpectedErrorPruning =0; , kCostComplexityPruning; , kNoPruning; };  ; typedef std::vector< const TMVA::Event * > EventConstList;  ; typedef std::ve",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DecisionTree.html:578,variab,variable,578,doc/master/classTMVA_1_1DecisionTree.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DecisionTree.html,1,['variab'],['variable']
Modifiability,". ROOT: TMVA::Factory Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TMVA::Factory Class ReferenceTMVA. ; This is the main MVA steering class. ; It creates all MVA methods, and guides them through the training, testing and evaluation phases. ; Definition at line 80 of file Factory.h. Public Types; typedef std::vector< IMethod * > MVector;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  Factory (TString theJobName, TFile *theTargetFile, TString theOption="""");  Standard constructor. ;  ;  Factory (TString theJobName, TString theOption="""");  Constructor. ;  ; virtual ~Factory ();  Destructor. ;  ; MethodBase * BookMethod (DataLoader *, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString);  ; MethodBase * BookMethod (DataLoader *loader, TString theMethodName, TString methodTitle, TString theOption="""");  Book a classifier or regression method. ;  ; MethodBase * BookMethod (DataLoader *loader, Types::EMVA theMethod, TString methodTitle, TString theOption="""");  Books MVA method. ;  ; void DeleteAllMethods (void);  Delete methods. ;  ; void EvaluateAllMethods (void);  Iterates over all MVAs that have been ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Factory.html:613,inherit,inherited,613,doc/master/classTMVA_1_1Factory.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Factory.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMVA::GeneticFitter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TMVA::GeneticFitter Class ReferenceTMVA. ; Fitter using a Genetic Algorithm. ; Definition at line 44 of file GeneticFitter.h. Public Member Functions;  GeneticFitter (IFitterTarget &target, const TString &name, const std::vector< TMVA::Interval * > &ranges, const TString &theOption);  constructor ;  ; virtual ~GeneticFitter ();  ; virtual TClass * IsA () const;  ; Double_t NewFitness (Double_t oldF, Double_t newF);  ; Double_t Run (std::vector< Double_t > &pars);  Execute fitting. ;  ; void SetParameters (Int_t cycles, Int_t nsteps, Int_t popSize, Int_t SC_steps, Int_t SC_rate, Double_t SC_factor, Double_t convCrit);  set GA configuration parameters ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::FitterBase;  FitterBase (IFitterTarget &target, const TString &name, const std::vector< TMVA::Interval * > ranges, const TString &theOption);  constructor ;  ; virtual ~FitterBase ();  ; Double_t EstimatorFunction (std::vector< Double_t > &parameters);  estimator function interface for fitting ;  ; IFitterTarget & GetFitterTarget () const;  ; const char * GetName () const;  Returns name of object. ;  ; Int_t GetNpars () const;  ; Double_t Run ();  estimator function interface for fitting ;  ; void SetIPythonInteractive (bool *ExitFromTraining, UInt_t *fIPyMaxIter_, UInt_t *fIPyCurrentIter_);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::Configurable;  Configurable (const TString &theOption="""");  constructor ;  ; virtual ~Configurable ();  default destructor ;  ; void AddOptionsXMLTo (void *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1GeneticFitter.html:915,config,configuration,915,doc/master/classTMVA_1_1GeneticFitter.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1GeneticFitter.html,1,['config'],['configuration']
Modifiability,". ROOT: TMVA::LeastSquaresLossFunction Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; TMVA::LeastSquaresLossFunction Class ReferenceTMVA. ; Least Squares Loss Function. ; Definition at line 200 of file LossFunction.h. Public Member Functions;  LeastSquaresLossFunction ();  ;  ~LeastSquaresLossFunction ();  ; Double_t CalculateLoss (LossFunctionEventInfo &e);  least squares , determine the loss for a single event ;  ; Double_t CalculateMeanLoss (std::vector< LossFunctionEventInfo > &evs);  least squares , determine the mean loss for a collection of events ;  ; Double_t CalculateNetLoss (std::vector< LossFunctionEventInfo > &evs);  least squares , determine the net loss for a collection of events ;  ; Int_t Id ();  ; TString Name ();  ;  Public Member Functions inherited from TMVA::LossFunction;  LossFunction ();  ; virtual ~LossFunction ();  . #include <TMVA/LossFunction.h>. Inheritance diagram for TMVA::LeastSquaresLossFunction:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ LeastSquaresLossFunction(). TMVA::LeastSquaresLossFunction::LeastSquaresLossFunction ; (; ). inline . Definition at line 203 of file LossFunction.h. ◆ ~LeastSquaresLossFunction(). TMVA::LeastSquaresLossFunction::~LeastSquaresLossFunction ; (; ). inline . Definition at line 204 of file LossFunction.h. Member Function Documentation. ◆ CalculateLoss(). Double_t TMVA::LeastSquaresLossFunction::CalculateLoss ; (; LossFunctionEventInfo & ; e). virtual . least squares , determine the loss for a single event ; Implements TMVA::LossFunction.; Definition at line 368 of file LossFunction.cxx. ◆ CalculateMeanLoss(). Double_t TMVA::LeastSquaresLossFunction::CalculateMeanLoss ; (; std::vector< LossFunctionEventInfo > & ; evs). virtual . least squares , determine the mean loss for a collection of eve",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1LeastSquaresLossFunction.html:893,inherit,inherited,893,doc/master/classTMVA_1_1LeastSquaresLossFunction.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1LeastSquaresLossFunction.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMVA::LossFunctionBDT Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; TMVA::LossFunctionBDT Class Referenceabstract. . Definition at line 124 of file LossFunction.h. Public Member Functions;  LossFunctionBDT ();  ; virtual ~LossFunctionBDT ();  ; virtual Double_t Fit (std::vector< LossFunctionEventInfo > &evs)=0;  ; virtual void Init (std::map< const TMVA::Event *, LossFunctionEventInfo > &evinfomap, std::vector< double > &boostWeights)=0;  ; virtual void SetTargets (std::vector< const TMVA::Event * > &evs, std::map< const TMVA::Event *, LossFunctionEventInfo > &evinfomap)=0;  ; virtual Double_t Target (LossFunctionEventInfo &e)=0;  ;  Public Member Functions inherited from TMVA::LossFunction;  LossFunction ();  ; virtual ~LossFunction ();  ; virtual Double_t CalculateLoss (LossFunctionEventInfo &e)=0;  ; virtual Double_t CalculateMeanLoss (std::vector< LossFunctionEventInfo > &evs)=0;  ; virtual Double_t CalculateNetLoss (std::vector< LossFunctionEventInfo > &evs)=0;  ; virtual Int_t Id ()=0;  ; virtual TString Name ()=0;  . #include <TMVA/LossFunction.h>. Inheritance diagram for TMVA::LossFunctionBDT:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ LossFunctionBDT(). TMVA::LossFunctionBDT::LossFunctionBDT ; (; ). inline . Definition at line 129 of file LossFunction.h. ◆ ~LossFunctionBDT(). virtual TMVA::LossFunctionBDT::~LossFunctionBDT ; (; ). inlinevirtual . Definition at line 130 of file LossFunction.h. Member Function Documentation. ◆ Fit(). virtual Double_t TMVA::LossFunctionBDT::Fit ; (; std::vector< LossFunctionEventInfo > & ; evs). pure virtual . Implemented in TMVA::HuberLossFunctionBDT, TMVA::LeastSquaresLossFunctionBDT, and TMVA::AbsoluteDeviationLossFunctionBDT. ◆ Init(). virtual void TMVA::LossFunctionBDT::Init ; (; std::map< const TMV",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1LossFunctionBDT.html:798,inherit,inherited,798,doc/master/classTMVA_1_1LossFunctionBDT.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1LossFunctionBDT.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMVA::MCFitter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TMVA::MCFitter Class ReferenceTMVA. ; Fitter using Monte Carlo sampling of parameters. ; Definition at line 44 of file MCFitter.h. Public Member Functions;  MCFitter (IFitterTarget &target, const TString &name, const std::vector< TMVA::Interval * > &ranges, const TString &theOption);  constructor ;  ; virtual ~MCFitter ();  ; virtual TClass * IsA () const;  ; Double_t Run (std::vector< Double_t > &pars);  Execute fitting. ;  ; void SetParameters (Int_t cycles);  set MC fitter configuration parameters ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::FitterBase;  FitterBase (IFitterTarget &target, const TString &name, const std::vector< TMVA::Interval * > ranges, const TString &theOption);  constructor ;  ; virtual ~FitterBase ();  ; Double_t EstimatorFunction (std::vector< Double_t > &parameters);  estimator function interface for fitting ;  ; IFitterTarget & GetFitterTarget () const;  ; const char * GetName () const;  Returns name of object. ;  ; Int_t GetNpars () const;  ; Double_t Run ();  estimator function interface for fitting ;  ; void SetIPythonInteractive (bool *ExitFromTraining, UInt_t *fIPyMaxIter_, UInt_t *fIPyCurrentIter_);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::Configurable;  Configurable (const TString &theOption="""");  constructor ;  ; virtual ~Configurable ();  default destructor ;  ; void AddOptionsXMLTo (void *parent) const;  write options to XML file ;  ; template<class T > ; void AddPreDefVal (const T &);  ; template<class T > ; void AddPreDefVal (const TString &",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MCFitter.html:758,config,configuration,758,doc/master/classTMVA_1_1MCFitter.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MCFitter.html,1,['config'],['configuration']
Modifiability,". ROOT: TMVA::MethodANNBase Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TMVA::MethodANNBase Class ReferenceabstractTMVA. ; Base class for all TMVA methods using artificial neural networks. ; Definition at line 62 of file MethodANNBase.h. Public Types; enum  EEstimator { kMSE =0; , kCE; };  ;  Public Types inherited from TMVA::MethodBase; enum  EWeightFileType { kROOT =0; , kTEXT; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  MethodANNBase (const TString &jobName, Types::EMVA methodType, const TString &methodTitle, DataSetInfo &theData, const TString &theOption);  standard constructor Note: Right now it is an option to choose the neuron input function, but only the input function ""sum"" leads to weight convergence – otherwise the weights go to nan and lead to an ABORT. ;  ;  MethodANNBase (Types::EMVA methodType, DataSetInfo &theData, const TString &theWeightFile);  construct the Method from the weight file ;  ; virtual ~MethodANNBase ();  destructor ;  ; void AddWeightsXMLTo (void *parent) const;  create XML description of ANN class",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodANNBase.html:637,inherit,inherited,637,doc/master/classTMVA_1_1MethodANNBase.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodANNBase.html,2,['inherit'],['inherited']
Modifiability,". ROOT: TMVA::MethodBDT Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TMVA::MethodBDT Class ReferenceTMVA. ; Analysis of Boosted Decision Trees. ; Boosted decision trees have been successfully used in High Energy Physics analysis for example by the MiniBooNE experiment (Yang-Roe-Zhu, physics/0508045). In Boosted Decision Trees, the selection is done on a majority vote on the result of several decision trees, which are all derived from the same training sample by supplying different event weights during the training. Decision trees:; Successive decision nodes are used to categorize the events out of the sample as either signal or background. Each node uses only a single discriminating variable to decide if the event is signal-like (""goes right"") or background-like (""goes left""). This forms a tree like structure with ""baskets"" at the end (leave nodes), and an event is classified as either signal or background according to whether the basket where it ends up has been classified signal or background during the training. Training of a decision tree is the process to define the ""cut criteria"" for each node. The training starts with the root node. Here one takes the full training event sample and selects the variable and corresponding cut value that gives the best separation between signal and background at this stage. Using this cut criterion, the sample is then divided into two subsamples, a signal-like (right) and a background-like (left) sample. Two new nodes are then created for each of the two sub-samples and they are constructed using the same mechanism as described for the root node. The devision is stopped once a certain node has reached either a minimum number of events, or a minimum or maximum signal ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodBDT.html:960,variab,variable,960,doc/master/classTMVA_1_1MethodBDT.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodBDT.html,1,['variab'],['variable']
Modifiability,". ROOT: TMVA::MethodCFMlpANN Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TMVA::MethodCFMlpANN Class ReferenceTMVA. ; Interface to Clermond-Ferrand artificial neural network. ; The CFMlpANN belong to the class of Multilayer Perceptrons (MLP), which are feed-forward networks according to the following propagation schema:. Schema for artificial neural network.; The input layer contains as many neurons as input variables used in the MVA. The output layer contains two neurons for the signal and background event classes. In between the input and output layers are a variable number of k hidden layers with arbitrary numbers of neurons. (While the structure of the input and output layers is determined by the problem, the hidden layers can be configured by the user through the option string of the method booking.); As indicated in the sketch, all neuron inputs to a layer are linear combinations of the neuron output of the previous layer. The transfer from input to output within a neuron is performed by means of an ""activation; function"". In general, the activation function of a neuron can be zero (deactivated), one (linear), or non-linear. The above example uses a sigmoid activation function. The transfer function of the output layer is usually linear. As a consequence: an ANN without hidden layer should give identical discrimination power as a linear discriminant analysis (Fisher). In case of one hidden layer, the ANN computes a linear combination of sigmoid.; The learning method used by the CFMlpANN is only stochastic. ; Definition at line 95 of file MethodCFMlpANN.h. Public Member Functions;  MethodCFMlpANN (const TString &jobName, const TString &methodTitle, DataSetInfo &theData, const TString &theOption=""3000:N-1:N-2"");  standard constr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodCFMlpANN.html:651,variab,variables,651,doc/master/classTMVA_1_1MethodCFMlpANN.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodCFMlpANN.html,7,"['config', 'layers', 'variab']","['configured', 'layers', 'variable', 'variables']"
Modifiability,". ROOT: TMVA::MethodCategory Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TMVA::MethodCategory Class ReferenceTMVA. ; Class for categorizing the phase space. ; This class is meant to allow categorisation of the data. For different categories, different classifiers may be booked and different variables may be considered. The aim is to account for the difference that is due to different locations/angles. ; Definition at line 58 of file MethodCategory.h. Public Member Functions;  MethodCategory (const TString &jobName, const TString &methodTitle, DataSetInfo &theData, const TString &theOption="""");  standard constructor ;  ;  MethodCategory (DataSetInfo &dsi, const TString &theWeightFile);  constructor from weight file ;  ; virtual ~MethodCategory (void);  destructor ;  ; TMVA::IMethod * AddMethod (const TCut &, const TString &theVariables, Types::EMVA theMethod, const TString &theTitle, const TString &theOptions);  adds sub-classifier for a category ;  ; void AddWeightsXMLTo (void *parent) const;  create XML description of Category classifier ;  ; const Ranking * CreateRanking ();  no ranking ;  ; virtual const std::vector< Float_t > & GetMulticlassValues ();  returns the mva values of the multi-class right sub-classifier ;  ; Double_t GetMvaValue (Double_t *err=nullptr, Double_t *errUpper=nullptr);  returns the mva value of the right sub-classifier ;  ; virtual const std::vector< Float_t > & GetRegressionValues ();  returns the mva value of the right sub-classifier ;  ; virtual Bool_t HasAnalysisType (Types::EAnalysisType type, UInt_t numberClasses, UInt_t);  check whether method category has analysis type the method type has to be the same for all sub-methods ;  ; virtual TClass * IsA () const;  ; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodCategory.html:567,variab,variables,567,doc/master/classTMVA_1_1MethodCategory.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodCategory.html,1,['variab'],['variables']
Modifiability,". ROOT: TMVA::MethodCuts Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Static Public Attributes |; Protected Member Functions |; Private Types |; Private Member Functions |; Private Attributes |; List of all members ; TMVA::MethodCuts Class ReferenceTMVA. ; Multivariate optimisation of signal efficiency for given background efficiency, applying rectangular minimum and maximum requirements. ; Also implemented is a ""decorrelate/diagonalized cuts approach"", which improves over the uncorrelated cuts approach by transforming linearly the input variables into a diagonal space, using the square-root of the covariance matrix.; Other optimisation criteria, such as maximising the signal significance- squared, \( \frac{S^2}{(S+B)} \), with S and B being the signal and background yields, correspond to a particular point in the optimised background rejection versus signal efficiency curve. This working point requires the knowledge of the expected yields, which is not the case in general. Note also that for rare signals, Poissonian statistics should be used, which modifies the significance criterion.; The rectangular cut of a volume in the variable space is performed using a binary tree to sort the training events. This provides a significant reduction in computing time (up to several orders of magnitudes, depending on the complexity of the problem at hand).; Technically, optimisation is achieved in TMVA by two methods:. Monte Carlo generation using uniform priors for the lower cut value, and the cut width, thrown within the variable ranges.; A Genetic Algorithm (GA) searches for the optimal (""fittest"") cut sample. The GA is configurable by many external settings through the option string. For difficult cases (such as many variables), some tuning may be necessary to achieve satisfying results. Attempts to use Minuit fits (Simplex ot Migrad) instea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodCuts.html:681,variab,variables,681,doc/master/classTMVA_1_1MethodCuts.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodCuts.html,1,['variab'],['variables']
Modifiability,". ROOT: TMVA::MethodDT Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TMVA::MethodDT Class ReferenceTMVA. ; Analysis of Boosted Decision Trees. ; Boosted decision trees have been successfully used in High Energy Physics analysis for example by the MiniBooNE experiment (Yang-Roe-Zhu, physics/0508045). In Boosted Decision Trees, the selection is done on a majority vote on the result of several decision trees, which are all derived from the same training sample by supplying different event weights during the training. Decision trees:; successive decision nodes are used to categorize the events out of the sample as either signal or background. Each node uses only a single discriminating variable to decide if the event is signal-like (""goes right"") or background-like (""goes left""). This forms a tree like structure with ""baskets"" at the end (leave nodes), and an event is classified as either signal or background according to whether the basket where it ends up has been classified signal or background during the training. Training of a decision tree is the process to define the ""cut criteria"" for each node. The training starts with the root node. Here one takes the full training event sample and selects the variable and corresponding cut value that gives the best separation between signal and background at this stage. Using this cut criterion, the sample is then divided into two subsamples, a signal-like (right) and a background-like (left) sample. Two new nodes are then created for each of the two sub-samples and they are constructed using the same mechanism as described for the root node. The devision is stopped once a certain node has reached either a minimum number of events, or a minimum or maximum signal purity. These leave nodes are th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodDT.html:928,variab,variable,928,doc/master/classTMVA_1_1MethodDT.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodDT.html,1,['variab'],['variable']
Modifiability,". ROOT: TMVA::MethodFDA Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TMVA::MethodFDA Class ReferenceTMVA. ; Function discriminant analysis (FDA). ; This simple classifier fits any user-defined TFormula (via option configuration string) to the training data by requiring a formula response of 1 (0) to signal (background) events. The parameter fitting is done via the abstract class FitterBase, featuring Monte Carlo sampling, Genetic Algorithm, Simulated Annealing, MINUIT and combinations of these.; Can compute regression value for one dimensional output ; Definition at line 61 of file MethodFDA.h. Public Member Functions;  MethodFDA (const TString &jobName, const TString &methodTitle, DataSetInfo &theData, const TString &theOption="""");  standard constructor ;  ;  MethodFDA (DataSetInfo &theData, const TString &theWeightFile);  constructor from weight file ;  ; virtual ~MethodFDA (void);  destructor ;  ; void AddWeightsXMLTo (void *parent) const;  create XML description for LD classification and regression (for arbitrary number of output classes/targets) ;  ; void CheckSetup ();  check may be overridden by derived class (sometimes, eg, fitters are used which can only be implemented during training phase) ;  ; const Ranking * CreateRanking ();  ; Double_t EstimatorFunction (std::vector< Double_t > &);  compute estimator for given parameter set (to be minimised) ;  ; virtual const std::vector< Float_t > & GetMulticlassValues ();  ; Double_t GetMvaValue (Double_t *err=nullptr, Double_t *errUpper=nullptr);  returns MVA value for given event ;  ; virtual const std::vector< Float_t > & GetRegressionValues ();  ; Bool_t HasAnalysisType (Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets);  FDA can handle classification with ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodFDA.html:453,config,configuration,453,doc/master/classTMVA_1_1MethodFDA.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodFDA.html,1,['config'],['configuration']
Modifiability,". ROOT: TMVA::MethodFisher Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TMVA::MethodFisher Class ReferenceTMVA. ; Fisher and Mahalanobis Discriminants (Linear Discriminant Analysis) ; In the method of Fisher discriminants event selection is performed in a transformed variable space with zero linear correlations, by distinguishing the mean values of the signal and background distributions.; The linear discriminant analysis determines an axis in the (correlated) hyperspace of the input variables such that, when projecting the output classes (signal and background) upon this axis, they are pushed as far as possible away from each other, while events of a same class are confined in a close vicinity. The linearity property of this method is reflected in the metric with which ""far apart"" and ""close vicinity"" are determined: the covariance matrix of the discriminant variable space.; The classification of the events in signal and background classes relies on the following characteristics (only): overall sample means, \( x_i \), for each input variable, \( i \), class-specific sample means, \( x_{S(B),i}\), and total covariance matrix \( T_{ij} \). The covariance matrix can be decomposed into the sum of a within ( \( W_{ij} \)) and a between-class ( \( B_{ij} \)) class matrix. They describe the dispersion of events relative to the means of their own class (within-class matrix), and relative to the overall sample means (between-class matrix). The Fisher coefficients, \( F_i \), are then given by. \[; F_i = \frac{\sqrt{N_s N_b}}{N_s + N_b} \sum_{j=1}^{N_{SB}} W_{ij}^{-1} (\bar{X}_{Sj} - \bar{X}_{Bj}); \]. where in TMVA is set \( N_S = N_B \), so that the factor in front of the sum simplifies to \( \frac{1}{2}\). The Fisher disc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodFisher.html:523,variab,variable,523,doc/master/classTMVA_1_1MethodFisher.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodFisher.html,2,['variab'],"['variable', 'variables']"
Modifiability,". ROOT: TMVA::MethodHMatrix Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TMVA::MethodHMatrix Class ReferenceTMVA. ; H-Matrix method, which is implemented as a simple comparison of chi-squared estimators for signal and background, taking into account the linear correlations between the input variables. ; This MVA approach is used by the \(D\emptyset \) collaboration (FNAL) for the purpose of electron identification (see, eg., hep-ex/9507007). As it is implemented in TMVA, it is usually equivalent or worse than the Fisher-Mahalanobis discriminant, and it has only been added for the purpose of completeness. Two chi^2 estimators are computed for an event, each one for signal and background, using the estimates for the means and covariance matrices obtained from the training sample:. \[; \chi^2_\eta = (x_\eta(i) - \bar{x}_\eta)^T C_\eta^{-1} (x_\eta(i) - \bar{x}_\eta), \eta = S,B; \]. TMVA then uses as normalised analyser for event \( (i) \) the ratio: ; \[; \frac{(chi_S(i)^2 - chi_B^2(i))}{(chi_S^2(i) + chi_B^2(i))}; \]. Definition at line 52 of file MethodHMatrix.h. Public Member Functions;  MethodHMatrix (const TString &jobName, const TString &methodTitle, DataSetInfo &theData, const TString &theOption="""");  standard constructor for the H-Matrix method ;  ;  MethodHMatrix (DataSetInfo &theData, const TString &theWeightFile);  constructor from weight file ;  ; virtual ~MethodHMatrix ();  destructor ;  ; void AddWeightsXMLTo (void *parent) const;  create XML description for HMatrix classification ;  ; const Ranking * CreateRanking ();  ; Double_t GetMvaValue (Double_t *err=nullptr, Double_t *errUpper=nullptr);  returns the H-matrix signal estimator ;  ; virtual Bool_t HasAnalysisType (Types::EAnalysisType type, UInt_t numberClasses, UIn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodHMatrix.html:531,variab,variables,531,doc/master/classTMVA_1_1MethodHMatrix.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodHMatrix.html,1,['variab'],['variables']
Modifiability,". ROOT: TMVA::MethodInfo Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; TMVA::MethodInfo Class Reference. . Definition at line 26 of file mvaeffs.h. Public Member Functions;  MethodInfo ();  ; virtual ~MethodInfo ();  ; virtual TClass * IsA () const;  ; void SetResultHists ();  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed pa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodInfo.html:625,inherit,inherited,625,doc/master/classTMVA_1_1MethodInfo.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodInfo.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMVA::MethodLD Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TMVA::MethodLD Class ReferenceTMVA. ; Linear Discriminant. ; Can compute multidimensional output for regression (although it computes every dimension separately) ; Definition at line 50 of file MethodLD.h. Public Member Functions;  MethodLD (const TString &jobName, const TString &methodTitle, DataSetInfo &dsi, const TString &theOption=""LD"");  standard constructor for the LD ;  ;  MethodLD (DataSetInfo &dsi, const TString &theWeightFile);  constructor from weight file ;  ; virtual ~MethodLD (void);  destructor ;  ; void AddWeightsXMLTo (void *parent) const;  create XML description for LD classification and regression (for arbitrary number of output classes/targets) ;  ; const Ranking * CreateRanking ();  computes ranking of input variables ;  ; void DeclareOptions ();  MethodLD options. ;  ; Double_t GetMvaValue (Double_t *err=nullptr, Double_t *errUpper=nullptr);  Returns the MVA classification output. ;  ; virtual const std::vector< Float_t > & GetRegressionValues ();  Calculates the regression output. ;  ; Bool_t HasAnalysisType (Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets);  LD can handle classification with 2 classes and regression with one regression-target. ;  ; virtual TClass * IsA () const;  ; void ProcessOptions ();  this is the preparation for training ;  ; virtual void ReadWeightsFromStream (std::istream &)=0;  ; void ReadWeightsFromStream (std::istream &i);  read LD coefficients from weight file ;  ; virtual void ReadWeightsFromStream (TFile &);  ; void ReadWeightsFromXML (void *wghtnode);  read coefficients from xml weight file ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodLD.html:1046,variab,variables,1046,doc/master/classTMVA_1_1MethodLD.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodLD.html,1,['variab'],['variables']
Modifiability,". ROOT: TMVA::MethodLikelihood Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TMVA::MethodLikelihood Class ReferenceTMVA. ; Likelihood analysis (""non-parametric approach"") ; Also implemented is a ""diagonalized likelihood approach"", which improves over the uncorrelated likelihood approach by transforming linearly the input variables into a diagonal space, using the square-root of the covariance matrix; The method of maximum likelihood is the most straightforward, and certainly among the most elegant multivariate analyser approaches. We define the likelihood ratio, \( R_L \), for event \( i \), by:. \[; R_L(i) = \frac{L_S(i)}{L_B(i) + L_B(i)}; \]. Here the signal and background likelihoods, \( L_S \), \( L_B \), are products of the corresponding probability densities, \( p_S \), \( p_B \), of the \( N_{var} \) discriminating variables used in the MVA:. \[; L_S(i) \ \prod_{j=1}^{N_{var}} p_{Sj} (i); \]. and accordingly for \( L_B \). In practise, TMVA uses polynomial splines to estimate the probability density functions (PDF) obtained from the distributions of the training variables.; Note that in TMVA the output of the likelihood ratio is transformed by:. \[; R_L(i) \to R'_L(i) = -\frac{1}{\tau} ln(R_L^{-1}(i) -1); \]. to avoid the occurrence of heavy peaks at \( R_L = 0.1 \) .; Decorrelated (or ""diagonalized"") Likelihood; The biggest drawback of the Likelihood approach is that it assumes that the discriminant variables are uncorrelated. If it were the case, it can be proven that the discrimination obtained by the above likelihood ratio is optimal, ie, no other method can beat it. However, in most practical applications of MVAs correlations are present. ; Linear correlations, measured from the training sample, can be taken into account ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodLikelihood.html:561,variab,variables,561,doc/master/classTMVA_1_1MethodLikelihood.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodLikelihood.html,2,['variab'],['variables']
Modifiability,". ROOT: TMVA::MethodMLP Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TMVA::MethodMLP Class ReferenceTMVA. ; Multilayer Perceptron class built off of MethodANNBase. ; Definition at line 69 of file MethodMLP.h. Public Types; enum  EBPTrainingMode { kSequential =0; , kBatch; };  ; enum  ETrainingMethod { kBP =0; , kBFGS; , kGA; };  ;  Public Types inherited from TMVA::MethodANNBase; enum  EEstimator { kMSE =0; , kCE; };  ;  Public Types inherited from TMVA::MethodBase; enum  EWeightFileType { kROOT =0; , kTEXT; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  MethodMLP (const TString &jobName, const TString &methodTitle, DataSetInfo &theData, const TString &theOption);  standard constructor ;  ;  MethodMLP (DataSetInfo &theData, const TString &theWeightFile);  constructor from a weight file ;  ; virtual ~MethodMLP ();  destructor nothing to be done ;  ; Double_t ComputeEstimator (std::vector< Double_t > &parameters);  this function is called by GeneticANN for GA optimization ;  ; Double_t EstimatorFunction (std::vector< Double_t > &parameters);  interface to the estimate ;  ; Double",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodMLP.html:631,inherit,inherited,631,doc/master/classTMVA_1_1MethodMLP.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodMLP.html,3,['inherit'],['inherited']
Modifiability,". ROOT: TMVA::MethodPDERS Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Types |; Private Member Functions |; Static Private Member Functions |; Private Attributes |; List of all members ; TMVA::MethodPDERS Class ReferenceTMVA. ; This is a generalization of the above Likelihood methods to \( N_{var} \) dimensions, where \( N_{var} \) is the number of input variables used in the MVA. ; If the multi-dimensional probability density functions (PDFs) for signal and background were known, this method contains the entire physical information, and is therefore optimal. Usually, kernel estimation methods are used to approximate the PDFs using the events from the training sample.; A very simple probability density estimator (PDE) has been suggested in hep-ex/0211019. The PDE for a given test event is obtained from counting the (normalized) number of signal and background (training) events that occur in the ""vicinity"" of the test event. The volume that describes ""vicinity"" is user-defined. A search method based on binary-trees is used to effectively reduce the selection time for the range search. Three different volume definitions are optional:. MinMax: the volume is defined in each dimension with respect to the full variable range found in the training sample.; RMS: the volume is defined in each dimensions with respect to the RMS estimated from the training sample.; Adaptive: a volume element is defined in each dimensions with respect to the RMS estimated from the training sample. The overall scale of the volume element is then determined for each event so that the total number of events confined in the volume be within a user-defined range. The adaptive range search is used by default. ; Definition at line 61 of file MethodPDERS.h. Public Member Functions;  MethodPDERS (const TStrin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodPDERS.html:556,variab,variables,556,doc/master/classTMVA_1_1MethodPDERS.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodPDERS.html,1,['variab'],['variables']
Modifiability,". ROOT: TMVA::MethodPyKeras Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TMVA::MethodPyKeras Class Reference. . Definition at line 34 of file MethodPyKeras.h. Public Types; enum  EBackendType { kUndefined = -1; , kTensorFlow = 0; , kTheano = 1; , kCNTK = 2; };  enumeration defining the used Keras backend More...;  ;  Public Types inherited from TMVA::MethodBase; enum  EWeightFileType { kROOT =0; , kTEXT; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  MethodPyKeras (const TString &jobName, const TString &methodTitle, DataSetInfo &dsi, const TString &theOption="""");  ;  MethodPyKeras (DataSetInfo &dsi, const TString &theWeightFile);  ;  ~MethodPyKeras ();  ; virtual void AddWeightsXMLTo (void *) const;  ; const Ranking * CreateRanking ();  ; void DeclareOptions ();  ; void GetHelpMessage () const;  ; EBackendType GetKerasBackend ();  Get the Keras backend (can be: TensorFlow, Theano or CNTK) ;  ; TString GetKerasBackendName ();  ; std::vector< Float_t > & GetMulticlassValues ();  ; Double_t GetMvaValue (Double_t *errLower, Double_t *errUpper);  ; std::vector< Double_t > GetMvaValues (Long64_t firstEvt, Long64_t lastEvt, Bool_t logProgress);  get all the MVA values for the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodPyKeras.html:523,inherit,inherited,523,doc/master/classTMVA_1_1MethodPyKeras.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodPyKeras.html,2,['inherit'],['inherited']
Modifiability,". ROOT: TMVA::MethodSVM Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TMVA::MethodSVM Class ReferenceTMVA. ; SMO Platt's SVM classifier with Keerthi & Shavade improvements. ; Definition at line 61 of file MethodSVM.h. Public Member Functions;  MethodSVM (const TString &jobName, const TString &methodTitle, DataSetInfo &theData, const TString &theOption="""");  standard constructor ;  ;  MethodSVM (DataSetInfo &theData, const TString &theWeightFile);  constructor from weight file ;  ; virtual ~MethodSVM (void);  destructor ;  ; void AddWeightsXMLTo (void *parent) const;  write configuration to xml file ;  ; const Ranking * CreateRanking ();  ; void GetMGamma (const std::vector< float > &gammas);  Produces GammaList string for multigaussian kernel to be written to xml file. ;  ; Double_t GetMvaValue (Double_t *err=nullptr, Double_t *errUpper=nullptr);  returns MVA value for given event ;  ; const std::vector< Float_t > & GetRegressionValues ();  ; std::map< TString, std::vector< Double_t > > GetTuningOptions ();  GetTuningOptions Function to allow for ranges and number of steps (for scan) when optimising kernel function parameters. ;  ; virtual Bool_t HasAnalysisType (Types::EAnalysisType type, UInt_t numberClasses, UInt_t numberTargets);  SVM can handle classification with 2 classes and regression with one regression-target. ;  ; void Init (void);  default initialisation ;  ; virtual TClass * IsA () const;  ; std::vector< TMVA::SVKernelFunction::EKernelType > MakeKernelList (std::string multiKernels, TString kernel);  MakeKernelList Function providing string manipulation for product or sum of kernels functions to take list of kernels specified in the booking of the method and provide a vector of SV kernels to iterate over in SVKernelFunc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodSVM.html:818,config,configuration,818,doc/master/classTMVA_1_1MethodSVM.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodSVM.html,1,['config'],['configuration']
Modifiability,". ROOT: TMVA::MisClassificationError Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TMVA::MisClassificationError Class ReferenceTMVA. ; Implementation of the MisClassificationError as separation criterion. ; Definition at line 46 of file MisClassificationError.h. Public Member Functions;  MisClassificationError ();  ;  MisClassificationError (const MisClassificationError &g);  ; virtual ~MisClassificationError ();  ; virtual Double_t GetSeparationIndex (const Double_t s, const Double_t b);  Misclassification error criterion: 1-max(p, 1-p) (p: purity= s/(s+b)) ;  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::SeparationBase;  SeparationBase ();  Constructor. ;  ;  SeparationBase (const SeparationBase &s);  Copy constructor. ;  ; virtual ~SeparationBase ();  ; const TString & GetName ();  ; virtual Double_t GetSeparationGain (const Double_t nSelS, const Double_t nSelB, const Double_t nTotS, const Double_t nTotB);  Separation Gain: the measure of how the quality of separation of the sample increases by splitting the sample e.g. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::SeparationBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Additional Inherited Members;  Protected Attributes inherited from TMVA::SeparationBase; TString fName;  ; Double_t fPrecisionCut;  . #include <TMVA/MisClassificationError.h>. Inherita",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MisClassificationError.html:890,inherit,inherited,890,doc/master/classTMVA_1_1MisClassificationError.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MisClassificationError.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMVA::Node Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Static Private Attributes |; Friends |; List of all members ; TMVA::Node Class ReferenceabstractTMVA. ; Node for the BinarySearch or Decision Trees. ; For the binary search tree, it basically consists of the EVENT, and pointers to the parent and daughters; In case of the Decision Tree, it specifies parent and daughters, as well as ""which variable is used"" in the selection of this node, including the respective cut value. ; Definition at line 58 of file Node.h. Public Member Functions;  Node ();  ;  Node (const Node &n);  copy constructor, make sure you don't just copy the pointer to the node, but that the parents/daughters are initialized to 0 (and set by the copy constructors of the derived classes ;  ;  Node (Node *p, char pos);  constructor of a daughter node as a daughter of 'p' ;  ; virtual ~Node ();  node destructor ;  ; virtual void AddAttributesToNode (void *node) const =0;  ; virtual void AddContentToNode (std::stringstream &s) const =0;  ; void * AddXMLTo (void *parent) const;  add attributes to XML ;  ; Int_t CountMeAndAllDaughters () const;  recursively go through the part of the tree below this node and count all daughters ;  ; virtual Node * CreateNode () const =0;  ; int GetCount ();  returns the global number of instantiated nodes ;  ; UInt_t GetDepth () const;  ; virtual Node * GetLeft () const;  ; virtual Node * GetParent () const;  ; virtual TMVA::BinaryTree * GetParentTree () const;  ; char GetPos () const;  ; virtual Node * GetRight () const;  ; virtual Bool_t GoesLeft (const Event &) const =0;  ; virtual Bool_t GoesRight (const Event &) const =0;  ; virtual TClass * IsA () const;  ; virtual void Print (std::ostream &os) const =0;  ; virtual void PrintRec (std::ostream &os) const =0;  ; virtual void ReadAttributes (void *node",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Node.html:565,variab,variable,565,doc/master/classTMVA_1_1Node.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Node.html,1,['variab'],['variable']
Modifiability,". ROOT: TMVA::Option< T * > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; TMVA::Option< T * > Class Template Reference. ; template<typename T>; class TMVA::Option< T * >; Definition at line 131 of file Option.h. Public Member Functions;  Option (T *&ref, Int_t size, const TString &name, const TString &desc);  ; virtual ~Option ();  ; virtual Int_t GetArraySize () const;  ; TString GetValue (Int_t i) const;  ; virtual Bool_t IsArrayOpt () const;  ; virtual void Print (std::ostream &, Int_t levelofdetail=0) const;  ; virtual Bool_t SetValue (const TString &val, Int_t i=0);  set value for option ;  ; T & Value (Int_t i);  ; const T & Value (Int_t i) const;  ;  Public Member Functions inherited from TMVA::Option< T >;  Option (T &ref, const TString &name, const TString &desc);  ; void AddPreDefVal (const Bool_t &);  ; void AddPreDefVal (const Float_t &);  ; virtual void AddPreDefVal (const T &);  ; virtual Bool_t HasPreDefinedVal () const;  ; virtual Bool_t IsPreDefinedVal (const TString &) const;  ; virtual void Print (Option_t *option="""") const;  This method must be overridden when a class wants to print itself. ;  ; virtual void PrintPreDefs (std::ostream &, Int_t levelofdetail=0) const;  ;  Public Member Functions inherited from TMVA::OptionBase;  OptionBase (const TString &name, const TString &desc);  constructor ;  ; virtual ~OptionBase ();  ; const TString & Description () const;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual TClass * IsA () const;  ; Bool_t IsSet () const;  ; virtual void Print (Option_t *option="""") const;  This method must be overridden when a class wants to print itself. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual const char * TheName () const;  ;  Publ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Option_3_01T_01_5_01_4.html:844,inherit,inherited,844,doc/master/classTMVA_1_1Option_3_01T_01_5_01_4.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Option_3_01T_01_5_01_4.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMVA::PDEFoam Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Friends |; List of all members ; TMVA::PDEFoam Class ReferenceTMVA. ; Implementation of PDEFoam. ; The PDEFoam method is an extension of the PDERS method, which uses self-adapting binning to divide the multi-dimensional phase space in a finite number of hyper-rectangles (boxes).; For a given number of boxes, the binning algorithm adjusts the size and position of the boxes inside the multidimensional phase space, minimizing the variance of the signal and background densities inside the boxes. The binned density information is stored in binary trees, allowing for a very fast and memory-efficient classification of events.; The implementation of the PDEFoam is based on the monte-carlo integration package TFoam included in the analysis package ROOT.; The class TMVA::PDEFoam defines the default interface for the PDEFoam variants:. PDEFoamEvent; PDEFoamDiscriminant; PDEFoamTarget; PDEFoamMultiTarget; PDEFoamDecisionTree. Per default PDEFoam stores in the cells the number of events (event weights) and therefore acts as an event density estimator. However, the above listed derived classes override this behaviour to implement certain PDEFoam variations.; In order to use PDEFoam the user has to set the density estimator of the type TMVA::PDEFoamDensityBase, which is used to during the foam build-up. The default PDEFoam should be used with PDEFoamEventDensity. ; Definition at line 79 of file PDEFoam.h. Public Member Functions;  PDEFoam ();  Default constructor for streamer, user should not use it. ;  ;  PDEFoam (const TString &);  User constructor, to be employed by the user. ;  ; virtual ~PDEFoam ();  Default destructor. ;  ; void AddVariableName (const char *s);  ; void AddVariableName (TObjString *s);  ; void CheckAll (Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDEFoam.html:429,adapt,adapting,429,doc/master/classTMVA_1_1PDEFoam.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDEFoam.html,1,['adapt'],['adapting']
Modifiability,". ROOT: TMVA::PDEFoamMultiTarget Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TMVA::PDEFoamMultiTarget Class ReferenceTMVA. ; This PDEFoam variant is used to estimate multiple targets by creating an event density foam (PDEFoamEvent), which has dimension: ; dimension = number of variables + number targets; This PDEFoam variant stores in every cell the sum of event weights and the sum of the squared event weights. During evaluation for a given event, which has only variables and no targets (number of event variables is smaller than the foam dimension), the targets are estimated by finding all cells, which correspond to this event and calculate the Mean (or Mpv, depending on the ETargetSelection) cell center weighted by the event density in the cell.; This PDEFoam variant should be booked together with the PDEFoamEventDensity density estimator, which returns the event weight density at a given phase space point during the foam build-up. ; Definition at line 46 of file PDEFoamMultiTarget.h. Public Member Functions;  PDEFoamMultiTarget ();  Default constructor for streamer, user should not use it. ;  ;  PDEFoamMultiTarget (const TString &, ETargetSelection);  User constructor. ;  ; virtual ~PDEFoamMultiTarget ();  ; virtual Float_t GetCellValue (const PDEFoamCell *cell, ECellValue cv);  Returns the cell value of 'cell' corresponding to the given option 'cv'. ;  ; virtual std::vector< Float_t > GetCellValue (const std::map< Int_t, Float_t > &, ECellValue);  This function is overridden from PDFEFoam. ;  ; virtual std::vector< Float_t > GetCellValue (const std::map< Int_t, Float_t > &xvec, ECellValue cv);  This function finds all cells, which corresponds to the given (incomplete) untransformed event vector 'xvec' and returns the cell values, according to the paramet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDEFoamMultiTarget.html:492,variab,variables,492,doc/master/classTMVA_1_1PDEFoamMultiTarget.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDEFoamMultiTarget.html,3,['variab'],['variables']
Modifiability,". ROOT: TMVA::PDF Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Static Private Member Functions |; Private Attributes |; Static Private Attributes |; Friends |; List of all members ; TMVA::PDF Class ReferenceTMVA. ; PDF wrapper for histograms; uses user-defined spline interpolation. ; Definition at line 63 of file PDF.h. Public Types; enum  EInterpolateMethod { ;   kSpline0; , kSpline1; , kSpline2; , kSpline3; , ;   kSpline5; , kKDE. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  PDF (const TString &name, Bool_t norm=kTRUE);  default constructor needed for ROOT I/O ;  ;  PDF (const TString &name, const TH1 *theHist, EInterpolateMethod method=kSpline2, Int_t minnsmooth=0, Int_t maxnsmooth=0, Bool_t checkHist=kFALSE, Bool_t norm=kTRUE);  constructor of spline based PDF: ;  ;  PDF (const TString &name, const TH1 *theHist, KDEKernel::EKernelType ktype, KDEKernel::EKernelIter kiter, KDEKernel::EKernelBorder kborder, Float_t FineFactor, Bool_t norm=kTRUE);  constructor of kernel based PDF: ;  ;  PDF (const TString &name, const TString &options, const TString &suffix="""", PDF *defaultPDF=nullptr, Bool_t norm=kTRUE);  ; virtual ~PDF ();  ; void AddXMLTo (void *parent);  XML file writing. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PDF.html:638,inherit,inherited,638,doc/master/classTMVA_1_1PDF.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PDF.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMVA::Rank Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TMVA::Rank Class Reference. . Definition at line 76 of file Ranking.h. Public Member Functions;  Rank (const TString &variable, Double_t rankValue);  constructor ;  ; virtual ~Rank ();  destructor ;  ; Int_t GetRank () const;  ; Double_t GetRankValue () const;  ; const TString & GetVariable () const;  ; Bool_t operator< (const Rank &other) const;  comparison operator < ;  ; Bool_t operator> (const Rank &other) const;  comparison operator > ;  ; void SetRank (Int_t rank);  . Private Attributes; Int_t fRank;  ; Double_t fRankValue;  ; TString fVariable;  . #include <TMVA/Ranking.h>; Constructor & Destructor Documentation. ◆ Rank(). TMVA::Rank::Rank ; (; const TString & ; variable, . Double_t ; rankValue . ). constructor ; Definition at line 139 of file Ranking.cxx. ◆ ~Rank(). TMVA::Rank::~Rank ; (; ). virtual . destructor ; Definition at line 149 of file Ranking.cxx. Member Function Documentation. ◆ GetRank(). Int_t TMVA::Rank::GetRank ; (; ); const. inline . Definition at line 89 of file Ranking.h. ◆ GetRankValue(). Double_t TMVA::Rank::GetRankValue ; (; ); const. inline . Definition at line 88 of file Ranking.h. ◆ GetVariable(). const TString & TMVA::Rank::GetVariable ; (; ); const. inline . Definition at line 87 of file Ranking.h. ◆ operator<(). Bool_t TMVA::Rank::operator< ; (; const Rank & ; other); const. comparison operator < ; Definition at line 156 of file Ranking.cxx. ◆ operator>(). Bool_t TMVA::Rank::operator> ; (; const Rank & ; other); const. comparison operator > ; Definition at line 165 of file Ranking.cxx. ◆ SetRank(). void TMVA::Rank::SetRank ; (; Int_t ; rank). inline . Definition at line 90 of file Ranking.h. Member Data Documentation. ◆ fRank. Int_t TMVA::Rank::fRank. private . Definition at line 97 of file Ranking.h. ◆ fRankValue. Double_t T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Rank.html:329,variab,variable,329,doc/master/classTMVA_1_1Rank.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Rank.html,2,['variab'],['variable']
Modifiability,". ROOT: TMVA::Ranking Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TMVA::Ranking Class ReferenceTMVA. ; Ranking for variables in method (implementation) ; Definition at line 48 of file Ranking.h. Public Member Functions;  Ranking ();  default constructor ;  ;  Ranking (const TString &context, const TString &rankingDiscriminatorName);  constructor ;  ; virtual ~Ranking ();  destructor ;  ; virtual void AddRank (const Rank &rank);  Add a new rank take ownership of it. ;  ; virtual TClass * IsA () const;  ; virtual void Print () const;  get maximum length of variable names ;  ; void SetContext (const TString &context);  ; void SetDiscrName (const TString &discrName);  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions; MsgLogger & Log () const;  . Private Attributes; TString fContext;  the ranking context ;  ; MsgLogger * fLogger;  ! message logger ;  ; std::vector< TMVA::Rank > fRanking;  vector of ranks ;  ; TString fRankingDiscriminatorName;  the name of the ranking discriminator ;  . #include <TMVA/Ranking.h>; Constructor & Destructor Documentation. ◆ Ranking() [1/2]. TMVA::Ranking::Ranking ; (; ). default constructor ; Definition at line 46 of file Ranking.cxx. ◆ Ranking() [2/2]. TMVA::Ranking::Ranking ; (; const TString & ; context, . const TString & ; rankingDiscriminatorName . ). constructor ; Definition at line 57 of file Ranking.cxx. ◆ ~Ranking(). TMVA::Ranking::~Ranking ; (; ). virtual . destructor ; Definition at line 68 of file Ranking.cxx. Member Function Documentation. ◆ AddRank(). void TM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Ranking.html:325,variab,variables,325,doc/master/classTMVA_1_1Ranking.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Ranking.html,2,['variab'],"['variable', 'variables']"
Modifiability,". ROOT: TMVA::Reader Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TMVA::Reader Class ReferenceTMVA. ; The Reader class serves to use the MVAs in a specific analysis context. ; Within an event loop, a vector is filled that corresponds to the variables that were used to train the MVA(s) during the training stage. This vector is transfered to the Reader, who takes care of interpreting the weight file of the MVA of choice, and to return the MVA's output. This is then used by the user for further analysis.; Usage:; // ------ before starting the event loop (eg, in the initialisation step); ; //; // create TMVA::Reader object; //; TMVA::Reader *reader = new TMVA::Reader();; ; // create a set of variables and declare them to the reader; // - the variable names must corresponds in name and type to; // those given in the weight file(s) that you use; Float_t var1, var2, var3, var4;; reader->AddVariable( ""var1"", &var1 );; reader->AddVariable( ""var2"", &var2 );; reader->AddVariable( ""var3"", &var3 );; reader->AddVariable( ""var4"", &var4 );; ; // book the MVA of your choice (prior training of these methods, ie,; // existence of the weight files is required); reader->BookMVA( ""Fisher method"", ""weights/Fisher.weights.txt"" );; reader->BookMVA( ""MLP method"", ""weights/MLP.weights.txt"" );; // ... etc; ; // ------- start your event loop; ; for (Long64_t ievt=0; ievt<myTree->GetEntries();ievt++) {; ; // fill vector with values of variables computed from those in the tree; var1 = myvar1;; var2 = myvar2;; var3 = myvar3;; var4 = myvar4;; ; // retrieve the corresponding MVA output; double mvaFi = reader->EvaluateMVA( ""Fisher method"" );; double mvaNN = reader->EvaluateMVA( ""MLP method"" );; ; // do something with these ...., e.g., fill them into your ntuple; ; } // end of event loop; ; delete",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Reader.html:450,variab,variables,450,doc/master/classTMVA_1_1Reader.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Reader.html,1,['variab'],['variables']
Modifiability,". ROOT: TMVA::RootFinder Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TMVA::RootFinder Class ReferenceTMVA. ; Root finding using Brents algorithm (translated from CERNLIB function RZERO) ; Definition at line 48 of file RootFinder.h. Public Member Functions;  RootFinder (MethodBase *method, Double_t rootMin, Double_t rootMax, Int_t maxIterations=100, Double_t absTolerance=0.0);  constructor ;  ; virtual ~RootFinder (void);  destructor ;  ; virtual TClass * IsA () const;  ; Double_t Root (Double_t refValue);  Root finding using Brents algorithm; taken from CERNLIB function RZERO. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1RootFinder.html:965,inherit,inherited,965,doc/master/classTMVA_1_1RootFinder.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1RootFinder.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMVA::RuleEnsemble Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TMVA::RuleEnsemble Class ReferenceTMVA. . Definition at line 53 of file RuleEnsemble.h. Public Types; enum  ELearningModel { kFull =0; , kRules =1; , kLinear =2; };  . Public Member Functions;  RuleEnsemble ();  constructor ;  ;  RuleEnsemble (const RuleEnsemble &other);  copy constructor ;  ;  RuleEnsemble (RuleFit *rf);  constructor ;  ; virtual ~RuleEnsemble ();  destructor ;  ; void AddOffset (Double_t v);  ; void * AddXMLTo (void *parent) const;  write rules to XML ;  ; void CalcImportance ();  calculate the importance of each rule ;  ; Double_t CalcLinImportance ();  calculate the linear importance for each rule ;  ; Double_t CalcLinNorm (Double_t stdev);  ; Int_t CalcNRules (const TMVA::DecisionTree *dtree);  calculate the number of rules ;  ; Double_t CalcRuleImportance ();  calculate importance of each rule ;  ; void CalcRuleSupport ();  calculate the support for all rules ;  ; void CalcVarImportance ();  Calculates variable importance using eq (35) in RuleFit paper by Friedman et.al. ;  ; void CleanupLinear ();  cleanup linear model ;  ; void CleanupRules ();  cleanup rules ;  ; void ClearCoefficients (Double_t val=0);  ; void ClearLinCoefficients (Double_t val=0);  ; void ClearLinNorm (Double_t val=1.0);  ; void ClearRuleMap ();  ; Double_t CoefficientRadius ();  Calculates sqrt(Sum(a_i^2)), i=1..N (NOTE do not include a0) ;  ; Bool_t DoFull () const;  ; Bool_t DoLinear () const;  ; Bool_t DoOnlyLinear () const;  ; Bool_t DoOnlyRules () const;  ; Bool_t DoRules () const;  ; Double_t EvalEvent () const;  ; Double_t EvalEvent (const Event &e);  ; Double_t EvalEvent (const Event &e, Double_t ofs, const std::vector< Double_t > &coefs, const std::vector< Double_t > &lincoefs);  ; Double_t Eva",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1RuleEnsemble.html:1213,variab,variable,1213,doc/master/classTMVA_1_1RuleEnsemble.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1RuleEnsemble.html,1,['variab'],['variable']
Modifiability,". ROOT: TMVA::SdivSqrtSplusB Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TMVA::SdivSqrtSplusB Class ReferenceTMVA. ; Implementation of the SdivSqrtSplusB as separation criterion. ; \( Index = \frac{S}{\sqrt{S+B}} \) (statistical significance) ; Definition at line 44 of file SdivSqrtSplusB.h. Public Member Functions;  SdivSqrtSplusB ();  ;  SdivSqrtSplusB (const SdivSqrtSplusB &g);  ; virtual ~SdivSqrtSplusB ();  ; virtual Double_t GetSeparationGain (const Double_t nSelS, const Double_t nSelB, const Double_t nTotS, const Double_t nTotB);  Separation Gain: the measure of how the quality of separation of the sample increases by splitting the sample e.g. ;  ; virtual Double_t GetSeparationIndex (const Double_t s, const Double_t b);  Index = S/sqrt(S+B) (statistical significance) ;  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::SeparationBase;  SeparationBase ();  Constructor. ;  ;  SeparationBase (const SeparationBase &s);  Copy constructor. ;  ; virtual ~SeparationBase ();  ; const TString & GetName ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::SeparationBase; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Additional Inherited Members;  Protected Attributes inherited from TMVA::SeparationBase; TString fName;  ; Double_t fPrecisionCut;  . #include <TMVA/SdivSqrtSplusB.h>. Inheritance diagram for TMVA::SdivSqrtS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1SdivSqrtSplusB.html:1113,inherit,inherited,1113,doc/master/classTMVA_1_1SdivSqrtSplusB.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1SdivSqrtSplusB.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMVA::SimulatedAnnealing Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Types |; Private Member Functions |; Private Attributes |; List of all members ; TMVA::SimulatedAnnealing Class ReferenceTMVA. ; Base implementation of simulated annealing fitting procedure. ; Definition at line 51 of file SimulatedAnnealing.h. Public Member Functions;  SimulatedAnnealing (IFitterTarget &target, const std::vector< TMVA::Interval * > &ranges);  constructor ;  ; virtual ~SimulatedAnnealing ();  destructor ;  ; virtual TClass * IsA () const;  ; Double_t Minimize (std::vector< Double_t > &parameters);  minimisation algorithm ;  ; void SetAccuracy (Double_t eps);  ; void SetAdaptiveSpeed (Double_t speed);  ; void SetInitTemp (Double_t it);  ; void SetIPythonInteractive (bool *ExitFromTraining, UInt_t *fIPyCurrentIter_);  ; void SetMaxCalls (Int_t mc);  ; void SetMinTemp (Double_t min);  ; void SetOptions (Int_t maxCalls, Double_t initialTemperature, Double_t minTemperature, Double_t eps, TString kernelTemperatureS, Double_t temperatureScale, Double_t adaptiveSpeed, Double_t temperatureAdaptiveStep, Bool_t useDefaultScale, Bool_t useDefaultTemperature);  option setter ;  ; void SetTemperatureScale (Double_t scale);  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Types; enum  EKernelTemperature { ;   kSqrt = 0; , kIncreasingAdaptive; , kDecreasingAdaptive; , kLog; , ;   kHomo; , kSin; , kGeo. };  . Private Member Functions; void FillWithRandomValues (std::vector< Double_t > &parameters);  random starting parameters ;  ; Double_t GenerateMaxTemperature (std::vector< Double_t > &parameters); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1SimulatedAnnealing.html:1200,adapt,adaptiveSpeed,1200,doc/master/classTMVA_1_1SimulatedAnnealing.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1SimulatedAnnealing.html,1,['adapt'],['adaptiveSpeed']
Modifiability,". ROOT: TMVA::SimulatedAnnealingFitter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TMVA::SimulatedAnnealingFitter Class ReferenceTMVA. ; Fitter using a Simulated Annealing Algorithm. ; Definition at line 49 of file SimulatedAnnealingFitter.h. Public Member Functions;  SimulatedAnnealingFitter (IFitterTarget &target, const TString &name, const std::vector< TMVA::Interval * > &ranges, const TString &theOption);  constructor ;  ; virtual ~SimulatedAnnealingFitter ();  ; virtual TClass * IsA () const;  ; Double_t Run (std::vector< Double_t > &pars);  Execute fitting. ;  ; void SetParameters (Int_t fMaxCalls, Double_t fInitialTemperature, Double_t fMinTemperature, Double_t fEps, TString fKernelTemperatureS, Double_t fTemperatureScale, Double_t fTemperatureAdaptiveStep, Bool_t fUseDefaultScale, Bool_t fUseDefaultTemperature);  set SA configuration parameters ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::FitterBase;  FitterBase (IFitterTarget &target, const TString &name, const std::vector< TMVA::Interval * > ranges, const TString &theOption);  constructor ;  ; virtual ~FitterBase ();  ; Double_t EstimatorFunction (std::vector< Double_t > &parameters);  estimator function interface for fitting ;  ; IFitterTarget & GetFitterTarget () const;  ; const char * GetName () const;  Returns name of object. ;  ; Int_t GetNpars () const;  ; Double_t Run ();  estimator function interface for fitting ;  ; void SetIPythonInteractive (bool *ExitFromTraining, UInt_t *fIPyMaxIter_, UInt_t *fIPyCurrentIter_);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::Configurable;  Config",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1SimulatedAnnealingFitter.html:1050,config,configuration,1050,doc/master/classTMVA_1_1SimulatedAnnealingFitter.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1SimulatedAnnealingFitter.html,1,['config'],['configuration']
Modifiability,". ROOT: TMVA::TActivationIdentity Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TMVA::TActivationIdentity Class ReferenceTMVA. ; Identity activation function for TNeuron. ; Definition at line 41 of file TActivationIdentity.h. Public Member Functions;  TActivationIdentity ();  ;  ~TActivationIdentity ();  ; virtual Double_t Eval (Double_t arg);  ; virtual Double_t EvalDerivative (Double_t);  ; virtual TString GetExpression ();  ; virtual Double_t GetMax ();  ; virtual Double_t GetMin ();  ; virtual TClass * IsA () const;  ; virtual void MakeFunction (std::ostream &fout, const TString &fncName);  writes the identity function source code ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::TActivation;  TActivation ();  ; virtual ~TActivation ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::TActivation; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . #include <TMVA/TActivationIdentity.h>. Inheritance diagram for TMVA::TActivationIdentity:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TActivationIdentity(). TMVA::TActivationIdentity::TActivationIdentity ; (; ). inline . Definition at line 45 of file TActivationIdentity.h. ◆ ~TActivationIdentity(). TMVA::TActivationIdentity::~TActivationIdentity ; (; ). inline . Definition at line 46 of file TActivationIdentity.h.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1TActivationIdentity.html:934,inherit,inherited,934,doc/master/classTMVA_1_1TActivationIdentity.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1TActivationIdentity.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMVA::TActivationRadial Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TMVA::TActivationRadial Class ReferenceTMVA. ; Radial basis activation function for ANN. ; Definition at line 41 of file TActivationRadial.h. Public Member Functions;  TActivationRadial ();  ;  ~TActivationRadial ();  ; Double_t Eval (Double_t arg);  evaluate gaussian ;  ; Double_t EvalDerivative (Double_t arg);  evaluate derivative ;  ; TString GetExpression ();  get expressions for the gaussian and its derivatives ;  ; Double_t GetMax ();  ; Double_t GetMin ();  ; virtual TClass * IsA () const;  ; virtual void MakeFunction (std::ostream &fout, const TString &fncName);  writes the sigmoid activation function source code ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::TActivation;  TActivation ();  ; virtual ~TActivation ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::TActivation; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . #include <TMVA/TActivationRadial.h>. Inheritance diagram for TMVA::TActivationRadial:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TActivationRadial(). TMVA::TActivationRadial::TActivationRadial ; (; ). inline . Definition at line 44 of file TActivationRadial.h. ◆ ~TActivationRadial(). TMVA::TActivationRadial::~TActivationRadial ; (; ). inline . Defini",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1TActivationRadial.html:998,inherit,inherited,998,doc/master/classTMVA_1_1TActivationRadial.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1TActivationRadial.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMVA::TActivationReLU Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TMVA::TActivationReLU Class ReferenceTMVA. ; Rectified Linear Unit activation function for TNeuron. ; Definition at line 41 of file TActivationReLU.h. Public Member Functions;  TActivationReLU ();  ;  ~TActivationReLU ();  ; Double_t Eval (Double_t arg);  ; Double_t EvalDerivative (Double_t arg);  ; TString GetExpression ();  get expressions for the tanh and its derivative ;  ; Double_t GetMax ();  ; Double_t GetMin ();  ; virtual TClass * IsA () const;  ; virtual void MakeFunction (std::ostream &fout, const TString &fncName);  writes the Rectified Linear Unit activation function source code ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::TActivation;  TActivation ();  ; virtual ~TActivation ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::TActivation; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . #include <TMVA/TActivationReLU.h>. Inheritance diagram for TMVA::TActivationReLU:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TActivationReLU(). TMVA::TActivationReLU::TActivationReLU ; (; ). inline . Definition at line 44 of file TActivationReLU.h. ◆ ~TActivationReLU(). TMVA::TActivationReLU::~TActivationReLU ; (; ). inline . Definition at line 45 of file TActivationReLU.h. Member ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1TActivationReLU.html:966,inherit,inherited,966,doc/master/classTMVA_1_1TActivationReLU.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1TActivationReLU.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMVA::TActivationSigmoid Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TMVA::TActivationSigmoid Class ReferenceTMVA. ; Sigmoid activation function for TNeuron. ; Definition at line 41 of file TActivationSigmoid.h. Public Member Functions;  TActivationSigmoid ();  ;  ~TActivationSigmoid ();  ; Double_t Eval (Double_t arg);  evaluate the sigmoid ;  ; Double_t EvalDerivative (Double_t arg);  evaluate the derivative of the sigmoid ;  ; TString GetExpression ();  get expressions for the sigmoid and its derivatives ;  ; Double_t GetMax ();  ; Double_t GetMin ();  ; virtual TClass * IsA () const;  ; virtual void MakeFunction (std::ostream &fout, const TString &fncName);  writes the sigmoid activation function source code ;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::TActivation;  TActivation ();  ; virtual ~TActivation ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::TActivation; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . #include <TMVA/TActivationSigmoid.h>. Inheritance diagram for TMVA::TActivationSigmoid:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TActivationSigmoid(). TMVA::TActivationSigmoid::TActivationSigmoid ; (; ). inline . Definition at line 44 of file TActivationSigmoid.h. ◆ ~TActivationSigmoid(). TMVA::TActivationSigmoid::~TActivat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1TActivationSigmoid.html:1023,inherit,inherited,1023,doc/master/classTMVA_1_1TActivationSigmoid.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1TActivationSigmoid.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMVA::TActivationTanh Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TMVA::TActivationTanh Class ReferenceTMVA. ; Tanh activation function for ANN. ; Definition at line 41 of file TActivationTanh.h. Public Member Functions;  TActivationTanh ();  ;  ~TActivationTanh ();  ; Double_t Eval (Double_t arg);  evaluate the tanh ;  ; Double_t EvalDerivative (Double_t arg);  evaluate the derivative ;  ; TString GetExpression ();  get expressions for the tanh and its derivative whatever that may be good for ... ;  ; Double_t GetMax ();  ; Double_t GetMin ();  ; virtual TClass * IsA () const;  ; virtual void MakeFunction (std::ostream &fout, const TString &fncName);  writes the Tanh sigmoid activation function source code ;  ; void SetSlow ();  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::TActivation;  TActivation ();  ; virtual ~TActivation ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::TActivation; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Private Member Functions; Double_t fast_tanh (Double_t arg);  a fast tanh approximation ;  . Private Attributes; Bool_t fFAST;  . #include <TMVA/TActivationTanh.h>. Inheritance diagram for TMVA::TActivationTanh:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TActiva",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1TActivationTanh.html:1088,inherit,inherited,1088,doc/master/classTMVA_1_1TActivationTanh.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1TActivationTanh.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMVA::TNeuronInputAbs Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TMVA::TNeuronInputAbs Class ReferenceTMVA. ; TNeuron input calculator – calculates the sum of the absolute values of the weighted inputs. ; Definition at line 46 of file TNeuronInputAbs.h. Public Member Functions;  TNeuronInputAbs ();  ; virtual ~TNeuronInputAbs ();  ; Double_t GetInput (const TNeuron *neuron) const;  ; TString GetName ();  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::TNeuronInput;  TNeuronInput ();  ; virtual ~TNeuronInput ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::TNeuronInput; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . #include <TMVA/TNeuronInputAbs.h>. Inheritance diagram for TMVA::TNeuronInputAbs:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TNeuronInputAbs(). TMVA::TNeuronInputAbs::TNeuronInputAbs ; (; ). inline . Definition at line 50 of file TNeuronInputAbs.h. ◆ ~TNeuronInputAbs(). virtual TMVA::TNeuronInputAbs::~TNeuronInputAbs ; (; ). inlinevirtual . Definition at line 51 of file TNeuronInputAbs.h. Member Function Documentation. ◆ Class(). static TClass * TMVA::TNeuronInputAbs::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMVA::TNeuronInputAbs::Class_Name ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1TNeuronInputAbs.html:741,inherit,inherited,741,doc/master/classTMVA_1_1TNeuronInputAbs.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1TNeuronInputAbs.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMVA::TNeuronInputSqSum Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TMVA::TNeuronInputSqSum Class ReferenceTMVA. ; TNeuron input calculator – calculates the squared weighted sum of inputs. ; Definition at line 43 of file TNeuronInputSqSum.h. Public Member Functions;  TNeuronInputSqSum ();  ; virtual ~TNeuronInputSqSum ();  ; Double_t GetInput (const TNeuron *neuron) const;  ; TString GetName ();  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::TNeuronInput;  TNeuronInput ();  ; virtual ~TNeuronInput ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::TNeuronInput; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . #include <TMVA/TNeuronInputSqSum.h>. Inheritance diagram for TMVA::TNeuronInputSqSum:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TNeuronInputSqSum(). TMVA::TNeuronInputSqSum::TNeuronInputSqSum ; (; ). inline . Definition at line 47 of file TNeuronInputSqSum.h. ◆ ~TNeuronInputSqSum(). virtual TMVA::TNeuronInputSqSum::~TNeuronInputSqSum ; (; ). inlinevirtual . Definition at line 48 of file TNeuronInputSqSum.h. Member Function Documentation. ◆ Class(). static TClass * TMVA::TNeuronInputSqSum::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMVA::TNeuronInputSqSu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1TNeuronInputSqSum.html:732,inherit,inherited,732,doc/master/classTMVA_1_1TNeuronInputSqSum.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1TNeuronInputSqSum.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMVA::TNeuronInputSum Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TMVA::TNeuronInputSum Class ReferenceTMVA. ; TNeuron input calculator – calculates the weighted sum of inputs. ; Definition at line 41 of file TNeuronInputSum.h. Public Member Functions;  TNeuronInputSum ();  ; virtual ~TNeuronInputSum ();  ; Double_t GetInput (const TNeuron *neuron) const;  ; TString GetName ();  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::TNeuronInput;  TNeuronInput ();  ; virtual ~TNeuronInput ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TMVA::TNeuronInput; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . #include <TMVA/TNeuronInputSum.h>. Inheritance diagram for TMVA::TNeuronInputSum:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TNeuronInputSum(). TMVA::TNeuronInputSum::TNeuronInputSum ; (; ). inline . Definition at line 45 of file TNeuronInputSum.h. ◆ ~TNeuronInputSum(). virtual TMVA::TNeuronInputSum::~TNeuronInputSum ; (; ). inlinevirtual . Definition at line 46 of file TNeuronInputSum.h. Member Function Documentation. ◆ Class(). static TClass * TMVA::TNeuronInputSum::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMVA::TNeuronInputSum::Class_Name ; (; ). static . ReturnsName",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1TNeuronInputSum.html:714,inherit,inherited,714,doc/master/classTMVA_1_1TNeuronInputSum.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1TNeuronInputSum.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMVA::TransformationHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TMVA::TransformationHandler Class ReferenceTMVA. ; Class that contains all the data information. ; Definition at line 56 of file TransformationHandler.h. Classes; struct  VariableStat;  . Public Member Functions;  TransformationHandler (DataSetInfo &, const TString &callerName);  constructor ;  ;  ~TransformationHandler ();  destructor ;  ; void AddStats (Int_t k, UInt_t ivar, Double_t mean, Double_t rms, Double_t min, Double_t max);  Caches calculated summary statistics of transformed variables. ;  ; VariableTransformBase * AddTransformation (VariableTransformBase *, Int_t cls);  ; void AddXMLTo (void *parent=nullptr) const;  XML node describing the transformation. ;  ; void CalcStats (const std::vector< Event * > &events);  method to calculate minimum, maximum, mean, and RMS for all variables used in the MVA ;  ; const std::vector< Event * > * CalcTransformations (const std::vector< Event * > &, Bool_t createNewVector=kFALSE);  computation of transformation ;  ; const TString & GetCallerName () const;  ; Double_t GetMax (Int_t ivar, Int_t cls=-1) const;  ; Double_t GetMean (Int_t ivar, Int_t cls=-1) const;  ; Double_t GetMin (Int_t ivar, Int_t cls=-1) const;  ; TString GetName () const;  return transformation name ;  ; const char * GetNameOfLastTransform () const;  returns string for transformation ;  ; Int_t GetNumOfTransformations () const;  ; Double_t GetRMS (Int_t ivar, Int_t cls=-1) const;  ; TDirectory * GetRootDir () const;  ; const TList & GetTransformationList () const;  ; std::vector< TString > * GetTransformationStringsOfLastTransform () const;  returns string for transformation ;  ; TString GetVariableAxisTitle (const VariableInfo &info) const;  incorporates transformation type into title ax",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1TransformationHandler.html:758,variab,variables,758,doc/master/classTMVA_1_1TransformationHandler.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1TransformationHandler.html,1,['variab'],['variables']
Modifiability,". ROOT: TMVA::TreeInfo Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TMVA::TreeInfo Class Reference. . Definition at line 52 of file DataInputHandler.h. Public Member Functions;  TreeInfo ();  ;  TreeInfo (TTree *tr, const TString &className, Double_t weight=1.0, Types::ETreeType tt=Types::kMaxTreeType, Bool_t own=kFALSE);  ;  ~TreeInfo ();  ; const TString & GetClassName () const;  ; UInt_t GetEntries () const;  ; TTree * GetTree () const;  ; Types::ETreeType GetTreeType () const;  ; Double_t GetWeight () const;  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1TreeInfo.html:902,inherit,inherited,902,doc/master/classTMVA_1_1TreeInfo.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1TreeInfo.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMVA::VarTransformHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; Private Member Functions |; Private Attributes |; List of all members ; TMVA::VarTransformHandler Class Reference. . Definition at line 41 of file VarTransformHandler.h. Public Member Functions;  VarTransformHandler (DataLoader *);  constructor ;  ;  ~VarTransformHandler ();  destructor ;  ; MsgLogger & Log () const;  message logger ;  ; TMVA::DataLoader * VarianceThreshold (Double_t threshold);  Computes variance of all the variables and returns a new DataLoader with the selected variables whose variance is above a specific threshold. ;  . Public Attributes; MsgLogger * fLogger;  . Private Member Functions; void CalcNorm ();  Computes maximum, minimum, mean, RMS and variance for all variables and targets. ;  ; void CopyDataLoader (TMVA::DataLoader *des, TMVA::DataLoader *src);  ; void UpdateNorm (Int_t ivar, Double_t x);  Updates maximum and minimum value of a variable or target. ;  . Private Attributes; DataLoader * fDataLoader;  ; DataSetInfo & fDataSetInfo;  ; const std::vector< Event * > & fEvents;  . #include <TMVA/VarTransformHandler.h>; Constructor & Destructor Documentation. ◆ VarTransformHandler(). TMVA::VarTransformHandler::VarTransformHandler ; (; DataLoader * ; dl). constructor ; Definition at line 49 of file VarTransformHandler.cxx. ◆ ~VarTransformHandler(). TMVA::VarTransformHandler::~VarTransformHandler ; (; ). destructor ; Definition at line 61 of file VarTransformHandler.cxx. Member Function Documentation. ◆ CalcNorm(). void TMVA::VarTransformHandler::CalcNorm ; (; ). private . Computes maximum, minimum, mean, RMS and variance for all variables and targets. ; Definition at line 148 of file VarTransformHandler.cxx. ◆ CopyDataLoader(). void TMVA::VarTransformHandler::CopyDataLoader ; (; TMVA::DataLoader * ; des, . TMVA::DataLoader * ; src . ). private ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VarTransformHandler.html:632,variab,variables,632,doc/master/classTMVA_1_1VarTransformHandler.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VarTransformHandler.html,3,['variab'],['variables']
Modifiability,". ROOT: TMVA::VariableDecorrTransform Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TMVA::VariableDecorrTransform Class ReferenceTMVA. ; Linear interpolation class. ; Definition at line 49 of file VariableDecorrTransform.h. Public Member Functions;  VariableDecorrTransform (DataSetInfo &dsi);  constructor ;  ; virtual ~VariableDecorrTransform (void);  destructor ;  ; virtual void AttachXMLTo (void *parent);  node attachment to parent ;  ; std::vector< TString > * GetTransformationStrings (Int_t cls) const;  creates string with variable transformations applied ;  ; void Initialize ();  initialisation ;  ; virtual const Event * InverseTransform (const Event *const, Int_t cls) const;  apply the inverse decorrelation transformation ... TODO : ... build the inverse transformation ;  ; virtual TClass * IsA () const;  ; virtual void MakeFunction (std::ostream &fout, const TString &fncName, Int_t part, UInt_t trCounter, Int_t cls);  creates C++ code fragment of the decorrelation transform for inclusion in standalone C++ class ;  ; Bool_t PrepareTransformation (const std::vector< Event * > &);  calculate the decorrelation matrix and the normalization ;  ; virtual void PrintTransformation (std::ostream &o);  prints the transformation matrix ;  ; virtual void ReadFromXML (void *trfnode);  Read the transformation matrices from the xml node. ;  ; void ReadTransformationFromStream (std::istream &, const TString &);  Read the decorellation matrix from an input stream. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual const Event * Transform (const Event *const, Int_t cls) const;  apply the decorrelation transformation ;  ; void WriteTransformationToStream (std::ostream &) con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariableDecorrTransform.html:741,variab,variable,741,doc/master/classTMVA_1_1VariableDecorrTransform.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariableDecorrTransform.html,1,['variab'],['variable']
Modifiability,". ROOT: TMVA::VariableGaussTransform Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TMVA::VariableGaussTransform Class ReferenceTMVA. ; Gaussian Transformation of input variables. ; Definition at line 72 of file VariableGaussTransform.h. Public Member Functions;  VariableGaussTransform (DataSetInfo &dsi, TString strcor="""");  constructor can only be applied one after the other when they are created. ;  ; virtual ~VariableGaussTransform (void);  destructor ;  ; virtual void AttachXMLTo (void *parent);  create XML description of Gauss transformation ;  ; void Initialize ();  ; virtual const Event * InverseTransform (const Event *const, Int_t cls) const;  apply the inverse Gauss or inverse uniform transformation ;  ; virtual TClass * IsA () const;  ; virtual void MakeFunction (std::ostream &fout, const TString &fncName, Int_t part, UInt_t trCounter, Int_t cls);  creates the transformation function ;  ; Bool_t PrepareTransformation (const std::vector< Event * > &);  calculate the cumulative distributions ;  ; virtual void PrintTransformation (std::ostream &o);  prints the transformation ;  ; virtual void ReadFromXML (void *trfnode);  Read the transformation matrices from the xml node. ;  ; void ReadTransformationFromStream (std::istream &, const TString &);  Read the cumulative distribution. ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual const Event * Transform (const Event *const, Int_t cls) const;  apply the Gauss transformation ;  ; void WriteTransformationToStream (std::ostream &) const;  ;  Public Member Functions inherited from TMVA::VariableTransformBase;  VariableTransformBase (DataSetInfo &dsi, Types::EVariableTransform tf, const TString &trfName);  stand",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariableGaussTransform.html:376,variab,variables,376,doc/master/classTMVA_1_1VariableGaussTransform.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariableGaussTransform.html,1,['variab'],['variables']
Modifiability,". ROOT: TMVA::VariableImportance Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; TMVA::VariableImportance Class ReferenceTMVA. . Definition at line 44 of file VariableImportance.h. Public Member Functions;  VariableImportance (DataLoader *loader);  ;  ~VariableImportance ();  ; virtual void Evaluate ();  Virtual method to be implemented with your algorithm. ;  ; const VariableImportanceResult & GetResults () const;  ; VIType GetType ();  ; virtual TClass * IsA () const;  ; void SetType (VIType type);  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMVA::Envelope;  ~Envelope ();  Default destructor. ;  ; virtual void BookMethod (TString methodname, TString methodtitle, TString options="""");  Method to book the machine learning method to perform the algorithm. ;  ; virtual void BookMethod (Types::EMVA method, TString methodtitle, TString options="""");  Method to book the machine learning method to perform the algorithm. ;  ; DataLoader * GetDataLoader ();  Method to get the pointer to TMVA::DataLoader object. ;  ; TFile * GetFile ();  Method to get the pointer to TFile object. ;  ; std::vector< OptionMap > & GetMethods ();  Method get the Booked methods in a option map object. ;  ; Bool_t HasMethod (TString methodname, TString methodtitle);  function to check methods booked ;  ; Bool_t IsModelPersistence ();  Method to see if the algorithm model is saved in xml or serialized files. ;  ; Bool_t IsSilentFile ();  Method to see if a file is available to save results. ;  ; Bool_t IsVerbose ();  Method to see if the algorithm should print extra information. ;  ; virtual void ParseOptions ();  Method to parse the internal option string. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariableImportance.html:883,inherit,inherited,883,doc/master/classTMVA_1_1VariableImportance.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariableImportance.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMVA::VariableInfo Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TMVA::VariableInfo Class ReferenceTMVA. ; Class for type info of MVA input variable. ; Definition at line 47 of file VariableInfo.h. Public Member Functions;  VariableInfo ();  default constructor ;  ;  VariableInfo (const TString &expression, const TString &title, const TString &unit, Int_t varCounter, char varType='F', void *external=nullptr, Double_t min=0, Double_t max=0, Bool_t normalized=kTRUE);  constructor ;  ;  VariableInfo (const VariableInfo &other);  copy constructor ;  ;  ~VariableInfo ();  ; void AddToXML (void *varnode);  write class to XML ;  ; const TString & GetExpression () const;  ; void * GetExternalLink () const;  ; const TString & GetInternalName () const;  ; const TString & GetLabel () const;  ; Double_t GetMax () const;  ; Double_t GetMean () const;  ; Double_t GetMin () const;  ; Double_t GetRMS () const;  ; const TString & GetUnit () const;  ; Double_t GetVariance () const;  ; char GetVarType () const;  ; virtual TClass * IsA () const;  ; VariableInfo & operator= (const TMVA::VariableInfo &rhs);  comparison operator ;  ; void ReadFromStream (std::istream &istr);  read VariableInfo from stream ;  ; void ReadFromXML (void *varnode);  read VariableInfo from stream ;  ; void ResetMinMax ();  ; void SetExternalLink (void *p);  ; void SetInternalName (const char *name);  ; void SetMax (Double_t v);  ; void SetMean (Double_t v);  ; void SetMin (Double_t v);  ; void SetRMS (Double_t v);  ; void SetVariance (Double_t v);  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void WriteToStream (std::ostream &o) const;  write VariableInfo to stream ;  ;  Public Member Functions inherited",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariableInfo.html:356,variab,variable,356,doc/master/classTMVA_1_1VariableInfo.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariableInfo.html,1,['variab'],['variable']
Modifiability,". ROOT: TMVA::VariableNormalizeTransform Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TMVA::VariableNormalizeTransform Class ReferenceTMVA. ; Linear interpolation class. ; Definition at line 48 of file VariableNormalizeTransform.h. Public Types; typedef std::vector< Float_t > FloatVector;  ; typedef std::vector< FloatVector > VectorOfFloatVectors;  ;  Public Types inherited from TMVA::VariableTransformBase; typedef VectorOfCharAndInt::iterator ItVarTypeIdx;  ; typedef VectorOfCharAndInt::const_iterator ItVarTypeIdxConst;  ; typedef std::vector< std::pair< Char_t, UInt_t > > VectorOfCharAndInt;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  VariableNormalizeTransform (DataSetInfo &dsi);  constructor ;  ; virtual ~VariableNormalizeTransform (void);  ; virtual void AttachXMLTo (void *parent);  create XML description of Normalize transformation ;  ; void BuildTransformationFromVarInfo (const std::vector< TMVA::VariableInfo > &var);  this method is only used when building a normalization transformation from old text files in this case regression didn't exist and there were no targets ;  ; std::vector< TString > * GetTransformationStrings (Int_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariableNormalizeTransform.html:592,inherit,inherited,592,doc/master/classTMVA_1_1VariableNormalizeTransform.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariableNormalizeTransform.html,2,['inherit'],['inherited']
Modifiability,". ROOT: TMVA::VariableRearrangeTransform Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; List of all members ; TMVA::VariableRearrangeTransform Class ReferenceTMVA. ; Rearrangement of input variables. ; Definition at line 43 of file VariableRearrangeTransform.h. Public Types; typedef std::vector< Float_t > FloatVector;  ;  Public Types inherited from TMVA::VariableTransformBase; typedef VectorOfCharAndInt::iterator ItVarTypeIdx;  ; typedef VectorOfCharAndInt::const_iterator ItVarTypeIdxConst;  ; typedef std::vector< std::pair< Char_t, UInt_t > > VectorOfCharAndInt;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  VariableRearrangeTransform (DataSetInfo &dsi);  constructor ;  ; virtual ~VariableRearrangeTransform (void);  ; virtual void AttachXMLTo (void *parent);  create XML description of Rearrange transformation ;  ; std::vector< TString > * GetTransformationStrings (Int_t cls) const;  creates string with variable transformations applied ;  ; void Initialize ();  initialization of the rearrangement transformation (nothing to do) ;  ; virtual const Event * InverseTransform (const Event *const, Int_t cls) const;  ; virtual TClass * IsA () const;  ; virtual void MakeFunction (std::ostream &fout, const TString &fncN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariableRearrangeTransform.html:340,variab,variables,340,doc/master/classTMVA_1_1VariableRearrangeTransform.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariableRearrangeTransform.html,3,"['inherit', 'variab']","['inherited', 'variables']"
Modifiability,". ROOT: TMVA::VariableTransformBase Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; Private Attributes |; List of all members ; TMVA::VariableTransformBase Class ReferenceabstractTMVA. ; Linear interpolation class. ; Definition at line 54 of file VariableTransformBase.h. Public Types; typedef VectorOfCharAndInt::iterator ItVarTypeIdx;  ; typedef VectorOfCharAndInt::const_iterator ItVarTypeIdxConst;  ; typedef std::vector< std::pair< Char_t, UInt_t > > VectorOfCharAndInt;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  VariableTransformBase (DataSetInfo &dsi, Types::EVariableTransform tf, const TString &trfName);  standard constructor ;  ; virtual ~VariableTransformBase (void);  ; virtual void AttachXMLTo (void *parent)=0;  create XML description the transformation (write out info of selected variables) ;  ; virtual void CountVariableTypes (UInt_t &nvars, UInt_t &ntgts, UInt_t &nspcts) const;  count variables, targets and spectators ;  ; virtual Bool_t GetInput (const Event *event, std::vector< Float_t > &input, std::vector< Char_t > &mask, Bool_t backTransform=kFALSE) const;  select the values from the event ;  ; virtual const char ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariableTransformBase.html:725,inherit,inherited,725,doc/master/classTMVA_1_1VariableTransformBase.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariableTransformBase.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMVA::Volume Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; Private Attributes |; List of all members ; TMVA::Volume Class ReferenceTMVA. ; Volume for BinarySearchTree. ; volume element: variable space between upper and lower bonds of nvar-dimensional variable space ; Definition at line 47 of file Volume.h. Public Member Functions;  Volume (Double_t *l, Double_t *u, Int_t nvar);  constructor specifying the volume by c-style arrays of doubles ;  ;  Volume (Double_t l, Double_t u);  simple constructors for 1 dimensional values (double) ;  ;  Volume (Float_t *l, Float_t *u, Int_t nvar);  constructor specifying the volume by c-style arrays of floats ;  ;  Volume (Float_t l, Float_t u);  simple constructors for 1 dimensional values (float) ;  ;  Volume (std::vector< Double_t > *l=nullptr, std::vector< Double_t > *u=nullptr);  constructor specifying the volume by std::vectors of doubles ;  ;  Volume (std::vector< Float_t > *l, std::vector< Float_t > *u=nullptr);  constructor specifying the volume by std::vectors of floats ;  ;  Volume (Volume &);  copy constructor ;  ; virtual ~Volume (void);  destructor ;  ; void Delete (void);  delete array of volume bondaries ;  ; Volume & operator= (const Volume &);  assignment operator ;  ; void Print (void) const;  printout of the volume boundaries ;  ; void Scale (Double_t f);  ""scale"" the volume by multiplying each upper and lower boundary by ""f"" ;  ; void ScaleInterval (Double_t f);  ""scale"" the volume by symmetrically blowing up the interval in each dimension ;  . Public Attributes; std::vector< Double_t > * fLower;  vector with lower volume dimensions ;  ; std::vector< Double_t > * fUpper;  vector with upper volume dimensions ;  . Private Attributes; Bool_t fOwnerShip;  flag if ""boundary vector"" is owned by the volume of not ;  . #include <TMVA/Volume.h>; Constructor & Destructor Documentation. ◆ Volu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Volume.html:317,variab,variable,317,doc/master/classTMVA_1_1Volume.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Volume.html,2,['variab'],['variable']
Modifiability,". ROOT: TMacOSXSystem Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TMacOSXSystem Class Reference. . Definition at line 39 of file TMacOSXSystem.h. Public Member Functions;  TMacOSXSystem ();  ;  ~TMacOSXSystem ();  ; bool CocoaInitialized () const;  ; void DispatchOneEvent (Bool_t pendingOnly);  Dispatch a single event. ;  ;  Public Member Functions inherited from TUnixSystem;  TUnixSystem ();  ; virtual ~TUnixSystem ();  Reset to original state. ;  ; void Abort (int code=0) override;  Abort the application. ;  ; int AcceptConnection (int sock) override;  Accept a connection. ;  ; Bool_t AccessPathName (const char *path, EAccessMode mode=kFileExists) override;  Returns FALSE if one can access a file using the specified access mode. ;  ; void AddDynamicPath (const char *lib) override;  Add a new directory to the dynamic path. ;  ; void AddFileHandler (TFileHandler *fh) override;  Add a file handler to the list of system file handlers. ;  ; void AddSignalHandler (TSignalHandler *sh) override;  Add a signal handler to list of system signal handlers. ;  ; void AddTimer (TTimer *ti) override;  Add timer to list of system timers. ;  ; int AnnounceTcpService (int port, Bool_t reuse, int backlog, int tcpwindowsize=-1) override;  Announce TCP/IP service. ;  ; int AnnounceUdpService (int port, int backlog) override;  Announce UDP service. ;  ; int AnnounceUnixService (const char *sockpath, int backlog) override;  Announce unix domain service on path 'sockpath'. ;  ; int AnnounceUnixService (int port, int backlog) override;  Announce unix domain service on path ""kServerPath/<port>"". ;  ; Bool_t ChangeDirectory (const char *path) override;  Change directory. Returns kTRUE in case of success, kFALSE otherwise. ;  ; void CheckChilds ();  Check if children have finished. ;  ; Bool_t CheckDescriptors",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMacOSXSystem.html:538,inherit,inherited,538,doc/master/classTMacOSXSystem.html,https://root.cern,https://root.cern/doc/master/classTMacOSXSystem.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMap Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TMap Class ReferenceCore ROOT classes » Containers. ; TMap implements an associative array of (key,value) pairs using a THashTable for efficient retrieval (therefore TMap does not conserve the order of the entries). ; The hash value is calculated using the value returned by the keys Hash() function and the key comparison is done via the IsEqual() function. Both key and value must inherit from TObject. ; Definition at line 40 of file TMap.h. Public Types; typedef TMapIter Iterator_t;  ;  Public Types inherited from TCollection; enum  { kInitCapacity = 16; , kInitHashTableCapacity = 17; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TMap (Int_t capacity=TCollection::kInitHashTableCapacity, Int_t rehash=0);  TMap ctor. See THashTable for a description of the arguments. ;  ; virtual ~TMap ();  TMap dtor. ;  ; void Add (TObject *key, TObject *value);  Add a (key,value) pair to the map. ;  ; void Add (TObject *obj) override;  This function may not be used (but we need to provide it since it is a pure virtual in TCollection). ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMap.html:726,inherit,inherit,726,doc/master/classTMap.html,https://root.cern,https://root.cern/doc/master/classTMap.html,3,['inherit'],"['inherit', 'inherited']"
Modifiability,". ROOT: TMathTextRenderer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TMathTextRenderer Class Reference. . Definition at line 54 of file TMathText.cxx. Public Member Functions;  TMathTextRenderer (TMathText *parent);  ; mathtext::bounding_box_t bounding_box (const std::wstring string, const unsigned int family=FAMILY_PLAIN) override;  ; mathtext::bounding_box_t bounding_box (const wchar_t character, float &current_x, const unsigned int family);  ; void filled_rectangle (const mathtext::bounding_box_t &bounding_box_0) override;  ; float font_size (const unsigned int family=FAMILY_PLAIN) const override;  ; void point (const float, const float) override;  ; void rectangle (const mathtext::bounding_box_t &) override;  ; void reset_font_size (const unsigned int) override;  ; void set_font_size (const float size) override;  ; void set_font_size (const float size, const unsigned int family) override;  ; void set_parameter (const float x, const float y, const float size, const float angle_degree);  ; void text_raw (const float x, const float y, const std::wstring string, const unsigned int family=FAMILY_PLAIN) override;  ; void text_with_bounding_box (const float, const float, const std::wstring, const unsigned int) override;  ; void transform_pad (double &xt, double &yt, const float x, const float y) const;  ;  Public Member Functions inherited from TText;  TText ();  ;  TText (const TText &text);  Copy constructor. ;  ;  TText (Double_t x, Double_t y, const char *text);  Text normal constructor. ;  ;  TText (Double_t x, Double_t y, const wchar_t *text);  Text normal constructor. ;  ;  ~TText () override;  Text default destructor. ;  ; void Copy (TObject &text) const override;  Copy this text to text. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMathTextRenderer.html:1556,inherit,inherited,1556,doc/master/classTMathTextRenderer.html,https://root.cern,https://root.cern/doc/master/classTMathTextRenderer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMatrixT< Element > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TMatrixT< Element > Class Template ReferenceMath » Matrix Linear Algebra. ; template<class Element>; class TMatrixT< Element >TMatrixT. ; Template class of a general matrix in the linear algebra package; See the Matrix Linear Algebra page for the documentation of the linear algebra package ; Definition at line 40 of file TMatrixT.h. Public Types; enum  { kWorkMax = 100; };  ; enum  EMatrixCreatorsOp1 { ;   kZero; , kUnit; , kTransposed; , kInverted; , ;   kAtA. };  ; enum  EMatrixCreatorsOp2 { ;   kMult; , kTransposeMult; , kInvMult; , kMultTranspose; , ;   kPlus; , kMinus. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TMatrixT ();  ;  TMatrixT (const TMatrixT< Element > &a, EMatrixCreatorsOp2 op, const TMatrixT< Element > &b);  Constructor of matrix applying a specific operation to two prototypes. ;  ;  TMatrixT (const TMatrixT< Element > &a, EMatrixCreatorsOp2 op, const TMatrixTSym< Element > &b);  Constructor of matrix applying a specific operation to two prototypes. ;  ;  TMatrixT (const TMatrixT< Element > &another);  Copy constructor. ;  ; temp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMatrixT.html:912,inherit,inherited,912,doc/master/classTMatrixT.html,https://root.cern,https://root.cern/doc/master/classTMatrixT.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMatrixTSymLazy< Element > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; Friends |; List of all members ; TMatrixTSymLazy< Element > Class Template Referenceabstract. ; template<class Element>; class TMatrixTSymLazy< Element >; Definition at line 86 of file TMatrixTLazy.h. Public Member Functions;  TMatrixTSymLazy ();  ;  TMatrixTSymLazy (Int_t nrows);  ;  TMatrixTSymLazy (Int_t row_lwb, Int_t row_upb);  ;  ~TMatrixTSymLazy () override;  ; Int_t GetRowLwb () const;  ; Int_t GetRowUpb () const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMatrixTSymLazy.html:939,inherit,inherited,939,doc/master/classTMatrixTSymLazy.html,https://root.cern,https://root.cern/doc/master/classTMatrixTSymLazy.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMemFile Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Protected Attributes |; Static Protected Attributes |; List of all members ; TMemFile Class ReferenceInput/Output Library. ; A TMemFile is like a normal TFile except that it reads and writes only from memory. ; Definition at line 19 of file TMemFile.h. Classes; struct  TMemBlock;  ; struct  ZeroCopyView_t;  A read-only memory range which we do not control. More...;  . Public Types; using ExternalDataPtr_t = std::shared_ptr< const std::vector< char > >;  ;  Public Types inherited from TFile; enum  { kStartBigFile = 2000000000; };  ; enum  EAsyncOpenStatus { kAOSNotAsync = -1; , kAOSFailure = 0; , kAOSInProgress = 1; , kAOSSuccess = 2; };  Asynchronous open request status. More...;  ; enum  ECacheAction { kDisconnect = 0; , kDoNotDisconnect = 1; };  TTreeCache flushing semantics. More...;  ; enum  EFileType { ;   kDefault = 0; , kLocal = 1; , kNet = 2; , kWeb = 3; , ;   kFile = 4; , kMerge = 5. };  File type. More...;  ; enum  EOpenTimeOut { kInstantTimeout = 0; , kEternalTimeout = 999999999; };  Open timeout constants. More...;  ; enum  ERelativeTo { kBeg = 0; , kCur = 1; , kEnd = 2; };  ; enum  EStatusBits { ;   k630forwardCompatibility = (1ULL << ( 2 )); , kRecovered = (1ULL << ( 10 )); , kHasReferences = (1ULL << ( 11 )); , kDevNull = (1ULL << ( 12 )); , ;   kWriteError = (1ULL << ( 14 )); , kBinaryFile = (1ULL << ( 15 )); , kRedirected = (1ULL << ( 16 )); , kReproducible = (1ULL << ( 17 )). };  TFile status bits. BIT(13) is taken up by TObject. More...;  ;  Public Types inherited from TDirectoryFile; enum  EStatusBits { kCloseDirectory = (1ULL << ( 7 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMemFile.html:749,inherit,inherited,749,doc/master/classTMemFile.html,https://root.cern,https://root.cern/doc/master/classTMemFile.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMemFile Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Protected Attributes |; Static Protected Attributes |; List of all members ; TMemFile Class ReferenceInput/Output Library. ; A TMemFile is like a normal TFile except that it reads and writes only from memory. ; Definition at line 19 of file TMemFile.h. Classes; struct  TMemBlock;  ; struct  ZeroCopyView_t;  A read-only memory range which we do not control. More...;  . Public Types; using ExternalDataPtr_t = std::shared_ptr< const std::vector< char > >;  ;  Public Types inherited from TFile; enum  { kStartBigFile = 2000000000; };  ; enum  EAsyncOpenStatus { kAOSNotAsync = -1; , kAOSFailure = 0; , kAOSInProgress = 1; , kAOSSuccess = 2; };  Asynchronous open request status. More...;  ; enum  ECacheAction { kDisconnect = 0; , kDoNotDisconnect = 1; };  TTreeCache flushing semantics. More...;  ; enum  EFileType { ;   kDefault = 0; , kLocal = 1; , kNet = 2; , kWeb = 3; , ;   kFile = 4; , kMerge = 5. };  File type. More...;  ; enum  EOpenTimeOut { kInstantTimeout = 0; , kEternalTimeout = 999999999; };  Open timeout constants. More...;  ; enum  ERelativeTo { kBeg = 0; , kCur = 1; , kEnd = 2; };  ; enum  EStatusBits { ;   k630forwardCompatibility = (1ULL << ( 2 )); , kRecovered = (1ULL << ( 10 )); , kHasReferences = (1ULL << ( 11 )); , kDevNull = (1ULL << ( 12 )); , ;   kWriteError = (1ULL << ( 14 )); , kBinaryFile = (1ULL << ( 15 )); , kRedirected = (1ULL << ( 16 )); , kReproducible = (1ULL << ( 17 )). };  TFile status bits. BIT(13) is taken up by TObject. More...;  ;  Public Types inherited from TDirectoryFile; enum  EStatusBits { kCloseDirectory = (1ULL << ( 7 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTMemFile.html:748,inherit,inherited,748,doc/v632/classTMemFile.html,https://root.cern,https://root.cern/doc/v632/classTMemFile.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMinuit Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; Private Member Functions |; List of all members ; TMinuit Class ReferenceMath » TMinuit. ; See alsoMinuit2 for a newer version of this package; Implementation in C++ of the Minuit package written by Fred James. This is a straightforward conversion of the original Fortran version.; The main changes are:. The variables in the various Minuit labelled common blocks have been changed to the TMinuit class data members.; The internal arrays with a maximum dimension depending on the maximum number of parameters are now data members arrays with a dynamic dimension such that one can fit very large problems by simply initialising the TMinuit constructor with the maximum number of parameters.; The include file Minuit.h has been commented as much as possible using existing comments in the code or the printed documentation; The original Minuit subroutines are now member functions.; Constructors and destructor have been added.; Instead of passing the FCN function in the argument list, the addresses of this function is stored as pointer in the data members of the class. This is by far more elegant and flexible in an interactive environment. The member function SetFCN can be used to define this pointer.; The ROOT static function Printf is provided to replace all format statements and to print on currently defined output file.; The functions SetObjectFit(TObject * obj)/GetObjectFit() can be used inside the FCN function to set/get a referenced object instead of using global variables. Basic concepts of MINUIT; The MINUIT package acts on a multiparameter Fortran function to which one must give the generic name FCN. In the ROOT implementation, the function FCN is defined via the MINUIT SetFCN member function when an Histogram.Fit command is invoked. The val",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMinuit.html:544,variab,variables,544,doc/master/classTMinuit.html,https://root.cern,https://root.cern/doc/master/classTMinuit.html,1,['variab'],['variables']
Modifiability,". ROOT: TMinuit2TraceObject Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TMinuit2TraceObject Class Reference. . Definition at line 30 of file TMinuit2TraceObject.h. Public Member Functions;  TMinuit2TraceObject (int parNumber=-1);  ;  ~TMinuit2TraceObject () override;  ; void Init (const ROOT::Minuit2::MnUserParameterState &state) override;  ; TClass * IsA () const override;  ; void operator() (int i, const ROOT::Minuit2::MinimumState &state) override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from ROOT::Minuit2::MnTraceObject;  MnTraceObject (int parNumber=-1);  ; virtual ~MnTraceObject ();  ; int ParNumber () const;  ; void SetParNumber (int number);  ; const MnUserParameterState & UserState () const;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMinuit2TraceObject.html:808,inherit,inherited,808,doc/master/classTMinuit2TraceObject.html,https://root.cern,https://root.cern/doc/master/classTMinuit2TraceObject.html,2,['inherit'],['inherited']
Modifiability,". ROOT: TMinuitMinimizer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TMinuitMinimizer Class ReferenceMath » TMinuit. ; TMinuitMinimizer class: ROOT::Math::Minimizer implementation based on TMinuit. ; See alsoMinuit2 for a newer version of this class TMinuitMinimizer class implementing the ROOT::Math::Minimizer interface using TMinuit. This class is normally instantiated using the plug-in manager (plug-in with name Minuit2 Minimization Library or TMinuit). In addition the user can choose the minimizer algorithm: Migrad (the default one), Simplex, or Minimize (combined Migrad + Simplex) ; Definition at line 51 of file TMinuitMinimizer.h. Public Member Functions;  TMinuitMinimizer (const char *type, unsigned int ndim=0);  Constructor from a char * (used by PM) ;  ;  TMinuitMinimizer (ROOT::Minuit::EMinimizerType type=ROOT::Minuit::kMigrad, unsigned int ndim=0);  Default constructor. ;  ;  ~TMinuitMinimizer () override;  Destructor (no operations) ;  ; bool Contour (unsigned int i, unsigned int j, unsigned int &npoints, double *xi, double *xj) override;  find the contour points (xi,xj) of the function for parameter i and j around the minimum The contour will be find for value of the function = Min + ErrorUp(); ;  ; double CovMatrix (unsigned int i, unsigned int j) const override;  return covariance matrices elements if the variable is fixed the matrix is zero The ordering of the variables is the same as in errors ;  ; int CovMatrixStatus () const override;  return status of covariance matrix ;  ; double Edm () const override;  return expected distance reached from the minimum ;  ; const double * Errors () const override;  return errors at the minimum ;  ; bool FixVariable (unsigned int) override;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMinuitMinimizer.html:661,plug-in,plug-in,661,doc/master/classTMinuitMinimizer.html,https://root.cern,https://root.cern/doc/master/classTMinuitMinimizer.html,2,['plug-in'],['plug-in']
Modifiability,". ROOT: TModuleDocInfo Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TModuleDocInfo Class Reference. . Definition at line 107 of file TDocInfo.h. Public Member Functions;  TModuleDocInfo (const char *name, TModuleDocInfo *super, const char *doc="""");  ;  ~TModuleDocInfo () override;  ; void AddClass (TClassDocInfo *cl);  ; TList * GetClasses ();  ; const char * GetDoc () const;  ; THashList & GetSub ();  ; TModuleDocInfo * GetSuper () const;  ; TClass * IsA () const override;  ; Bool_t IsSelected () const;  ; void SetDoc (const char *doc);  ; void SetSelected (Bool_t sel=kTRUE);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTModuleDocInfo.html:935,inherit,inherited,935,doc/master/classTModuleDocInfo.html,https://root.cern,https://root.cern/doc/master/classTModuleDocInfo.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMonitor Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TMonitor Class Reference. . Definition at line 36 of file TMonitor.h. Public Types; enum  EInterest { kRead = 1; , kWrite = 2; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TMonitor (Bool_t mainloop=kTRUE);  Create a monitor object. ;  ;  TMonitor (const TMonitor &m);  Copy constructor. ;  ; virtual ~TMonitor ();  Cleanup the monitor object. Does not delete sockets being monitored. ;  ; virtual void Activate (TSocket *sock);  Activate a de-activated socket. ;  ; virtual void ActivateAll ();  Activate all de-activated sockets. ;  ; virtual void Add (TSocket *sock, Int_t interest=kRead);  Add socket to the monitor's active list. ;  ; virtual void DeActivate (TSocket *sock);  De-activate a socket. ;  ; virtual void DeActivateAll ();  De-activate all activated sockets. ;  ; Int_t GetActive (Long_t timeout=-1) const;  Return number of sockets in the active list. ;  ; Int_t GetDeActive () const;  Return number of sockets in the de-active list. ;  ; TList * GetListOfActives () const;  Returns a list with all active sockets. ;  ; TList * GetListOfDeActives () const;  Ret",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMonitor.html:445,inherit,inherited,445,doc/master/classTMonitor.html,https://root.cern,https://root.cern/doc/master/classTMonitor.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMrbSubevent_Caen Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TMrbSubevent_Caen Class Reference. . Definition at line 46 of file clonesA_Event.h. Public Member Functions;  TMrbSubevent_Caen ();  ; virtual ~TMrbSubevent_Caen ();  ; void Clear (Option_t *="""");  ; TUsrHitBuffer * GetHitBuffer ();  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMrbSubevent__Caen.html:690,inherit,inherited,690,doc/master/classTMrbSubevent__Caen.html,https://root.cern,https://root.cern/doc/master/classTMrbSubevent__Caen.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TMutexImp Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TMutexImp Class Referenceabstract. . Definition at line 27 of file TMutexImp.h. Public Member Functions;  TMutexImp ();  ; virtual ~TMutexImp ();  ; TClass * IsA () const override;  ; virtual Int_t Lock ()=0;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Int_t TryLock ()=0;  ; virtual Int_t UnLock ()=0;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMutexImp.html:662,inherit,inherited,662,doc/master/classTMutexImp.html,https://root.cern,https://root.cern/doc/master/classTMutexImp.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TNotifyLinkBase Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TNotifyLinkBase Class Reference. ; See TNotifyLink. ; Definition at line 47 of file TNotifyLink.h. Public Types; enum  EStatusBits { kLinked = (1ULL << ( 11 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions; void Clear (Option_t *="""") override;  ; TObject * GetNext () const;  ; TClass * IsA () const override;  ; Bool_t IsLinked ();  ; template<class Chain > ; void PrependLink (Chain &chain);  Set this link as the head of the chain's list of notify subscribers. ;  ; template<class Chain > ; void RemoveLink (Chain &chain);  Remove this link from a chain's list of notify subscribers. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNotifyLinkBase.html:449,inherit,inherited,449,doc/master/classTNotifyLinkBase.html,https://root.cern,https://root.cern/doc/master/classTNotifyLinkBase.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TNtuple Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TNtuple Class ReferenceTree Library. ; A simple TTree restricted to a list of float variables only. ; Each variable goes to a separate branch.; A Ntuple is created via TNtuple(name,title,varlist,bufsize); namechar name[80]Definition TGX11.cxx:110; TNtuple::TNtupleTNtuple()Default constructor for Ntuple.Definition TNtuple.cxx:46; It is filled via: TNtuple::Fill(*x) or; TNtuple::Fill(v1,v2,v3.....); TNtuple::FillInt_t Fill() overrideFill a Ntuple with current values in fArgs.Definition TNtuple.cxx:169; xDouble_t x[n]Definition legend1.C:17; v2@ v2Definition rootcling_impl.cxx:3702; v3@ v3Definition rootcling_impl.cxx:3703; v1@ v1Definition rootcling_impl.cxx:3701. Definition at line 28 of file TNtuple.h. Public Member Functions;  TNtuple ();  Default constructor for Ntuple. ;  ;  TNtuple (const char *name, const char *title, const char *varlist, Int_t bufsize=32000);  Create an Ntuple. ;  ;  ~TNtuple () override;  Default destructor for an Ntuple. ;  ; void Browse (TBrowser *b) override;  Browse content of the ntuple. ;  ; TTree * CloneTree (Long64_t nentries=-1, Option_t *option="""") override;  Create a clone of this tree and copy nentries. ;  ; virtual Int_t Fill (const Float_t *x);  Fill a Ntuple with an array of floats. ;  ; Int_t Fill (Double_t x0);  ; virtual Int_t Fill (Float_t x0, Float_t x1=0, Float_t x2=0, Float_t x3=0, Float_t x4=0, Float_t x5=0, Float_t x6=0, Float_t x7=0, Float_t x8=0, Float_t x9=0, Float_t x10=0, Float_t x11=0, Float_t x12=0, Float_t x13=0, Float_t x14=0);  Fill a Ntuple: Each Ntuple item is an argument. ;  ; Int_t Fill (Int_t x0);  ; Float_t * GetArgs () const;  ; virtual Int_t GetNvar () const;  ; TClass * IsA () const override;  ; Long64_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNtuple.html:386,variab,variables,386,doc/master/classTNtuple.html,https://root.cern,https://root.cern/doc/master/classTNtuple.html,2,['variab'],"['variable', 'variables']"
Modifiability,". ROOT: TNtupleD Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TNtupleD Class ReferenceTree Library. ; A simple TTree restricted to a list of double variables only. ; Each variable goes to a separate branch.; A Ntuple is created via TNtupleD(name,title,varlist,bufsize); namechar name[80]Definition TGX11.cxx:110; TNtupleD::TNtupleDTNtupleD()Default constructor for Ntuple.Definition TNtupleD.cxx:45; It is filled via: TNtupleD::Fill(*x) or; TNtupleD::Fill(v1,v2,v3.....); TNtupleD::FillInt_t Fill() overrideFill a Ntuple with current values in fArgs.Definition TNtupleD.cxx:150; xDouble_t x[n]Definition legend1.C:17; v2@ v2Definition rootcling_impl.cxx:3702; v3@ v3Definition rootcling_impl.cxx:3703; v1@ v1Definition rootcling_impl.cxx:3701. Definition at line 28 of file TNtupleD.h. Public Member Functions;  TNtupleD ();  Default constructor for Ntuple. ;  ;  TNtupleD (const char *name, const char *title, const char *varlist, Int_t bufsize=32000);  Create an Ntuple. ;  ;  ~TNtupleD () override;  Default destructor for an Ntuple. ;  ; void Browse (TBrowser *b) override;  Browse content. ;  ; virtual Int_t Fill (const Double_t *x);  Fill a Ntuple with an array of floats. ;  ; virtual Int_t Fill (Double_t x0, Double_t x1, Double_t x2=0, Double_t x3=0, Double_t x4=0, Double_t x5=0, Double_t x6=0, Double_t x7=0, Double_t x8=0, Double_t x9=0, Double_t x10=0, Double_t x11=0, Double_t x12=0, Double_t x13=0, Double_t x14=0);  Fill a Ntuple: Each Ntuple item is an argument. ;  ; Double_t * GetArgs () const;  ; virtual Int_t GetNvar () const;  ; TClass * IsA () const override;  ; Long64_t ReadStream (std::istream &inputstream, const char *branchDescriptor="""", char delimiter=' ') override;  Read from filename as many columns as variables in the ntupl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNtupleD.html:389,variab,variables,389,doc/master/classTNtupleD.html,https://root.cern,https://root.cern/doc/master/classTNtupleD.html,2,['variab'],"['variable', 'variables']"
Modifiability,". ROOT: TODBCResult Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TODBCResult Class Reference. . Definition at line 30 of file TODBCResult.h. Public Member Functions;  TODBCResult (SQLHSTMT stmt);  Constructor. ;  ; virtual ~TODBCResult ();  Cleanup ODBC query result. ;  ; void Close (Option_t *opt="""") final;  Close (cleanup) ODBC result object. Deletes statement. ;  ; Int_t GetFieldCount () final;  ; const char * GetFieldName (Int_t field) final;  Get name of specified field. ;  ; TClass * IsA () const override;  ; TSQLRow * Next () final;  Get next query result row. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSQLResult; virtual ~TSQLResult ();  ; virtual Int_t GetRowCount () const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTODBCResult.html:929,inherit,inherited,929,doc/master/classTODBCResult.html,https://root.cern,https://root.cern/doc/master/classTODBCResult.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TObjOptLink Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TObjOptLink Class Reference. . Definition at line 166 of file TList.h. Public Member Functions;  TObjOptLink (TObject *obj, Option_t *opt);  ;  ~TObjOptLink ();  ; Option_t * GetAddOption () const override;  ; Option_t * GetOption () const override;  ; void SetOption (Option_t *option) override;  ;  Public Member Functions inherited from TObjLink;  TObjLink (TObject *obj);  ; virtual ~TObjLink ();  ; TObject * GetObject () const;  ; TObject ** GetObjectRef ();  ; TObjLink * Next ();  ; TObjLinkPtr_t NextSP ();  ; TObjLink * Prev ();  ; TObjLinkPtr_t PrevSP ();  ; void SetObject (TObject *obj);  . Private Attributes; TString fOption;  . #include <TList.h>. Inheritance diagram for TObjOptLink:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TObjOptLink(). TObjOptLink::TObjOptLink ; (; TObject * ; obj, . Option_t * ; opt . ). inline . Definition at line 172 of file TList.h. ◆ ~TObjOptLink(). TObjOptLink::~TObjOptLink ; (; ). inline . Definition at line 173 of file TList.h. Member Function Documentation. ◆ GetAddOption(). Option_t * TObjOptLink::GetAddOption ; (; ); const. inlineoverridevirtual . Reimplemented from TObjLink.; Definition at line 174 of file TList.h. ◆ GetOption(). Option_t * TObjOptLink::GetOption ; (; ); const. inlineoverridevirtual . Reimplemented from TObjLink.; Definition at line 175 of file TList.h. ◆ SetOption(). void TObjOptLink::SetOption ; (; Option_t * ; option). inlineoverridevirtual . Reimplemented from TObjLink.; Definition at line 176 of file TList.h. Member Data Documentation. ◆ fOption. TString TObjOptLink::fOption. private . Definition at line 169 of file TList.h. Libraries for TObjOptLink:. [legend]; The documentation for this class was gen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTObjOptLink.html:537,inherit,inherited,537,doc/master/classTObjOptLink.html,https://root.cern,https://root.cern/doc/master/classTObjOptLink.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TObject Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Static Private Member Functions |; Private Attributes |; Static Private Attributes |; Friends |; List of all members ; TObject Class ReferenceCore ROOT classes » Base ROOT classes. ; Mother of all ROOT objects. ; The TObject class provides default behaviour and protocol for all objects in the ROOT system. It provides protocol for object I/O, error handling, sorting, inspection, printing, drawing, etc. Every object which inherits from TObject can be stored in the ROOT collection classes.; TObject's bits can be used as flags, bits 0 - 13 and 24-31 are reserved as global bits while bits 14 - 23 can be used in different class hierarchies (watch out for overlaps). ; Definition at line 41 of file TObject.h. Public Types; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTObject.html:687,inherit,inherits,687,doc/master/classTObject.html,https://root.cern,https://root.cern/doc/master/classTObject.html,1,['inherit'],['inherits']
Modifiability,". ROOT: TObject Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Static Private Member Functions |; Private Attributes |; Static Private Attributes |; Friends |; List of all members ; TObject Class ReferenceCore ROOT classes » Base ROOT classes. ; Mother of all ROOT objects. ; The TObject class provides default behaviour and protocol for all objects in the ROOT system. It provides protocol for object I/O, error handling, sorting, inspection, printing, drawing, etc. Every object which inherits from TObject can be stored in the ROOT collection classes.; TObject's bits can be used as flags, bits 0 - 13 and 24-31 are reserved as global bits while bits 14 - 23 can be used in different class hierarchies (watch out for overlaps). ; Definition at line 41 of file TObject.h. Public Types; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTObject.html:686,inherit,inherits,686,doc/v632/classTObject.html,https://root.cern,https://root.cern/doc/v632/classTObject.html,1,['inherit'],['inherits']
Modifiability,". ROOT: TObjectRefSpy Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TObjectRefSpy Class Reference. . Definition at line 52 of file TObjectSpy.h. Public Member Functions;  TObjectRefSpy (TObject *&obj, Bool_t fixMustCleanupBit=kTRUE);  Register the object that must be spied. ;  ; virtual ~TObjectRefSpy ();  Cleanup. ;  ; TObject * GetObject () const;  ; TClass * IsA () const override;  ; void RecursiveRemove (TObject *obj) override;  Sets the object pointer to zero if the object is deleted in the RecursiveRemove() operation. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTObjectRefSpy.html:912,inherit,inherited,912,doc/master/classTObjectRefSpy.html,https://root.cern,https://root.cern/doc/master/classTObjectRefSpy.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TOptionListItem Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; TOptionListItem Class Reference. . Definition at line 105 of file TDataMember.h. Public Member Functions;  TOptionListItem ();  ;  TOptionListItem (TDataMember *m, Long_t val, Long_t valmask, Long_t tglmask, const char *name, const char *label);  Constructor. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTOptionListItem.html:716,inherit,inherited,716,doc/master/classTOptionListItem.html,https://root.cern,https://root.cern/doc/master/classTOptionListItem.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TPBHandleDSType Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TPBHandleDSType Class Reference. . Definition at line 83 of file TProofBenchTypes.h. Public Types; enum  EHandleDSType { kReleaseCache = 0; , kCheckCache = 1; , kRemoveFiles = 2; , kCopyFiles = 3; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TPBHandleDSType (EHandleDSType type=kReleaseCache);  ;  ~TPBHandleDSType () override;  ; const char * GetName () const override;  Returns name of object. ;  ; EHandleDSType GetType () const;  ; TClass * IsA () const override;  ; Bool_t IsCheckCache () const;  ; Bool_t IsCopyFiles () const;  ; Bool_t IsReleaseCache () const;  ; Bool_t IsRemoveFiles () const;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void Appen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPBHandleDSType.html:483,inherit,inherited,483,doc/master/classTPBHandleDSType.html,https://root.cern,https://root.cern/doc/master/classTPBHandleDSType.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TPBHistType Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TPBHistType Class Reference. . Definition at line 57 of file TProofBenchTypes.h. Public Types; enum  EHistType { ;   kHistNotSpecified = 0; , kHist1D = 1; , kHist2D = 2; , kHist3D = 4; , ;   kHistAll = kHist1D | kHist2D | kHist3D. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TPBHistType (EHistType type=kHist1D);  ;  ~TPBHistType () override;  ; const char * GetName () const override;  Returns name of object. ;  ; EHistType GetType () const;  ; TClass * IsA () const override;  ; Bool_t IsHist1D () const;  ; Bool_t IsHist2D () const;  ; Bool_t IsHist3D () const;  ; Bool_t IsHistAll () const;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Opt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPBHistType.html:513,inherit,inherited,513,doc/master/classTPBHistType.html,https://root.cern,https://root.cern/doc/master/classTPBHistType.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TPBReadType Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TPBReadType Class Reference. . Definition at line 33 of file TProofBenchTypes.h. Public Types; enum  EReadType { kReadNotSpecified = 0; , kReadFull = 1; , kReadOpt = 2; , kReadNo = 4; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TPBReadType (EReadType type=kReadOpt);  ;  ~TPBReadType () override;  ; const char * GetName () const override;  Returns name of object. ;  ; EReadType GetType () const;  ; TClass * IsA () const override;  ; Bool_t IsReadFull () const;  ; Bool_t IsReadNo () const;  ; Bool_t IsReadOpt () const;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPBReadType.html:466,inherit,inherited,466,doc/master/classTPBReadType.html,https://root.cern,https://root.cern/doc/master/classTPBReadType.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TPCON Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TPCON Class ReferenceGraphics » 3D Graphics » Basic 3D graphics. ; A polycone. . It has the following parameters:. name: name of the shape; title: shape's title; material: (see TMaterial); phi1: the azimuthal angle phi at which the volume begins (angles are counted counterclockwise); dphi: opening angle of the volume, which extends from phi1 to phi1+dphi; nz: number of planes perpendicular to the z axis where the dimension of the section is given – this number should be at least 2; rmin: array of dimension nz with minimum radius at a given plane; rmax: array of dimension nz with maximum radius at a given plane; z: array of dimension nz with z position of given plane . Definition at line 33 of file TPCON.h. Public Member Functions;  TPCON ();  PCON shape default constructor. ;  ;  TPCON (const char *name, const char *title, const char *material, Float_t phi1, Float_t dphi1, Int_t nz);  PCON shape normal constructor. ;  ;  ~TPCON () override;  PCON shape default destructor. ;  ; virtual void DefineSection (Int_t secNum, Float_t z, Float_t rmin, Float_t rmax);  Defines section secNum of the polycone. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a PCON. ;  ; const TBuffer3D & GetBuffer3D (Int_t reqSections) const override;  Get buffer 3d. ;  ; virtual Float_t GetDhi1 () const;  ; virtual Float_t * GetDz () const;  ; virtual Int_t GetNdiv () const;  ; virtual Int_t GetNumberOfDivisions () const;  ; virtual Int_t GetNz () const;  ; virtual Float_t GetPhi1 () const;  ; virtual Float_t * GetRmax () const;  ; virtual Float_t * GetRmin () const;  ; TClass * IsA () const override;  ; virtual void SetNumberOfDivisions (Int_t p);  Set number of divisions. ;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPCON.html:598,extend,extends,598,doc/master/classTPCON.html,https://root.cern,https://root.cern/doc/master/classTPCON.html,1,['extend'],['extends']
Modifiability,". ROOT: TPGON Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members ; TPGON Class ReferenceGraphics » 3D Graphics » Basic 3D graphics. ; A polygon. . It has the following parameters:. name: name of the shape; title: shape's title; material: (see TMaterial); phi1: the azimuthal angle &phi at which the volume begins (angles are counted counterclockwise); dphi1: opening angle of the volume, which extends from phi1 to phi1+dphi; npdv: number of sides of the cross section between the given phi limits; nz: number of planes perpendicular to the z axis where the dimension of the section is given – this number should be at least 2; rmin: array of dimension nz with minimum radius at a given plane; rmax: array of dimension nz with maximum radius at a given plane; z: array of dimension nz with z position of given plane . Definition at line 30 of file TPGON.h. Public Member Functions;  TPGON ();  PGON shape default constructor. ;  ;  TPGON (const char *name, const char *title, const char *material, Float_t phi1, Float_t dphi1, Int_t npdv, Int_t nz);  PGON shape normal constructor. ;  ;  ~TPGON () override;  PGON shape default destructor. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TPCON;  TPCON ();  PCON shape default constructor. ;  ;  TPCON (const char *name, const char *title, const char *material, Float_t phi1, Float_t dphi1, Int_t nz);  PCON shape normal constructor. ;  ;  ~TPCON () override;  PCON shape default destructor. ;  ; virtual void DefineSection (Int_t secNum, Float_t z, Float_t rmin, Float_t rmax);  Defines section secNum of the polycone. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from poin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPGON.html:575,extend,extends,575,doc/master/classTPGON.html,https://root.cern,https://root.cern/doc/master/classTPGON.html,1,['extend'],['extends']
Modifiability,". ROOT: TPackMgr Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TPackMgr Class ReferencePROOF » PROOF kernel Libraries. ; The PROOF package manager contains tools to manage packages. ; This class has been created to eliminate duplications, and to allow for standalone usage. ; Definition at line 37 of file TPackMgr.h. Public Types; enum  ECheckVersionOpt { kDontCheck = 0; , kCheckROOT = 1; , kCheckGIT = 2; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TPackMgr (const char *dir, const char *key=""L0"");  Create a PROOF package manager. ;  ;  ~TPackMgr () override;  Destroy a TPackMgr instance. ;  ; Int_t Build (const char *pack, Int_t opt=TPackMgr::kCheckROOT);  Method to build a package. ;  ; Int_t Clean (const char *pack);  Clean dir for package 'pack' Return -1 in case of error, 0 otherwise. ;  ; const char * GetDir () const;  ; Int_t GetDownloadDir (TString &dldir);  Method to get the download dir; create if not existing Return -1 in case of error (not found; not created), 0 otherwise. ;  ; void GetEnabledPackages (TString &packlist);  Method to get a semi-colon separated list with the names of the enabled p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPackMgr.html:681,inherit,inherited,681,doc/master/classTPackMgr.html,https://root.cern,https://root.cern/doc/master/classTPackMgr.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TPackageDescription Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; TPackageDescription Class Reference. . Definition at line 158 of file TSessionViewer.h. Public Member Functions; const char * GetName () const override;  Returns name of object. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPackageDescription.html:638,inherit,inherited,638,doc/master/classTPackageDescription.html,https://root.cern,https://root.cern/doc/master/classTPackageDescription.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TPacketizer::TFileStat Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TPacketizer::TFileStat Class Reference. . Definition at line 65 of file TPacketizer.cxx. Public Member Functions;  TFileStat (TFileNode *node, TDSetElement *elem);  ; TDSetElement * GetElement () const;  ; Long64_t GetNextEntry () const;  ; TFileNode * GetNode () const;  ; Bool_t IsDone () const;  ; void MoveNextEntry (Long64_t step);  ; void SetDone ();  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw cl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html:608,inherit,inherited,608,doc/master/classTPacketizer_1_1TFileStat.html,https://root.cern,https://root.cern/doc/master/classTPacketizer_1_1TFileStat.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TPacketizerAdaptive::TFileStat Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TPacketizerAdaptive::TFileStat Class Reference. . Definition at line 75 of file TPacketizerAdaptive.cxx. Public Member Functions;  TFileStat (TFileNode *node, TDSetElement *elem, TList *file);  ; Int_t Compare (const TObject *obj) const override;  Compare abstract method. ;  ; TDSetElement * GetElement () const;  ; Long64_t GetNextEntry () const;  ; TFileNode * GetNode () const;  ; Bool_t IsDone () const;  ; Bool_t IsSortable () const override;  ; void MoveNextEntry (Long64_t step);  ; void Print (Option_t *=0) const override;  This method must be overridden when a class wants to print itself. ;  ; void SetDone ();  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html:882,inherit,inherited,882,doc/master/classTPacketizerAdaptive_1_1TFileStat.html,https://root.cern,https://root.cern/doc/master/classTPacketizerAdaptive_1_1TFileStat.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TPacketizerFile::TIterObj Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TPacketizerFile::TIterObj Class Reference. . Definition at line 74 of file TPacketizerFile.cxx. Public Member Functions;  TIterObj (const char *n, TIter *iter);  ;  ~TIterObj () override;  ; TIter * GetIter () const;  ; const char * GetName () const override;  Returns name of object. ;  ; void Print (Option_t *option="""") const override;  Printf info. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html:609,inherit,inherited,609,doc/master/classTPacketizerFile_1_1TIterObj.html,https://root.cern,https://root.cern/doc/master/classTPacketizerFile_1_1TIterObj.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TPainter3dAlgorithms Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TPainter3dAlgorithms Class ReferenceHistogram Library » Painting classes » Histograms and graphs painting classes. ; The Legos and Surfaces painter class. ; 3D graphics representations package.; This package was originally written by Evgueni Tcherniaev from IHEP/Protvino.; The original Fortran implementation was adapted to HIGZ/PAW by Olivier Couet and Evgueni Tcherniaev.; This class is a subset of the original system. It has been converted to a C++ class by Rene Brun. ; Definition at line 28 of file TPainter3dAlgorithms.h. Public Types; typedef void(TPainter3dAlgorithms::* DrawFaceFunc_t) (Int_t *, Double_t *, Int_t, Int_t *, Double_t *);  ; typedef void(TPainter3dAlgorithms::* LegoFunc_t) (Int_t, Int_t, Int_t &, Double_t *, Double_t *, Double_t *);  ; typedef void(TPainter3dAlgorithms::* SurfaceFunc_t) (Int_t, Int_t, Double_t *, Double_t *);  . Public Member Functions;  TPainter3dAlgorithms ();  Lego default constructor. ;  ;  TPainter3dAlgorithms (Double_t *rmin, Double_t *rmax, Int_t system=1);  Normal default constructor. ;  ;  ~TPainter3dAlgorithms () override;  destructor ;  ; void BackBox (Double_t ang);  Draw back surfaces of surrounding box. ;  ; void ColorFunction (Int_t nl, Double_t *fl, Int_t *icl, Int_t &irep);  Set correspondence between function and color levels. ;  ; void DefineGridLevels (Int_t ndivz);  Define the grid levels drawn in the background of surface and lego plots. ;  ; void DrawFaceGouraudShaded (Int_t *icodes, Double_t xyz[][3], Int_t np, Int_t *iface, Double_t *t);  Draw the faces for the Gouraud Shaded Iso surfaces. ;  ; void DrawFaceMode1 (Int_t *icodes, Double_t *xyz, Int_t np, Int_t *iface, Double_t *t);  Draw face - 1st variant (2 colors: 1st",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPainter3dAlgorithms.html:608,adapt,adapted,608,doc/master/classTPainter3dAlgorithms.html,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html,1,['adapt'],['adapted']
Modifiability,". ROOT: TParallelCoordRange Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TParallelCoordRange Class Reference. ; A TParallelCoordRange is a range used for parallel coordinates plots. ; Definition at line 25 of file TParallelCoordRange.h. Public Types; enum  EStatusBits { kShowOnPad = (1ULL << ( 15 )); , kLiveUpdate = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TParallelCoordRange ();  Default constructor. ;  ;  TParallelCoordRange (TParallelCoordVar *var, Double_t min=0, Double_t max=0, TParallelCoordSelect *sel=nullptr);  Normal constructor. ;  ;  ~TParallelCoordRange () override;  Destructor. ;  ; virtual void BringOnTop ();  Make the selection which owns the range to be drawn on top of the others. ;  ; void Delete (const Option_t *options="""") override;  Delete the range. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute the distance to the primitive. ;  ; void Draw (Option_t *options="""") override;  Draw a TParallelCoordRange. ;  ; void ExecuteEvent (Int_t entry, Int_t px, Int_t py) override;  Execute the entry. ;  ; virtual Double_t GetMax ();  ; virtual Double_t GetMin ();  ; TParallelCoordS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParallelCoordRange.html:581,inherit,inherited,581,doc/master/classTParallelCoordRange.html,https://root.cern,https://root.cern/doc/master/classTParallelCoordRange.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TParallelCoordVar Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TParallelCoordVar Class Reference. ; TParallelCoord axes. ; Class containing a variable for the TParallelCoord.; Options can be defined each axis separately using the right mouse click. These options can be applied to every axes using the editor. Axis width: If set to 0, the axis is simply a line. If higher, a color histogram is drawn on the axis.; Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables are drawn is essential to see the clusters. The axes can be dragged to change their position. A zoom is also available. The logarithm scale is also available by right clicking on the axis. ; Definition at line 24 of file TParallelCoordVar.h. Public Types; enum  EStatusBits { kLogScale = (1ULL << ( 14 )); , kShowBox = (1ULL << ( 15 )); , kShowBarHisto = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TParallelCoordVar ();  Default constructor. ;  ;  TParallelCoordVar (Double_t *val, const char *title, Int_t id, TParallelCoord *gram);  Normal constructor. ;  ;  ~TParallelCoordVar () override;  Destructor. ;  ; void AddRange ()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParallelCoordVar.html:347,variab,variable,347,doc/master/classTParallelCoordVar.html,https://root.cern,https://root.cern/doc/master/classTParallelCoordVar.html,2,['variab'],"['variable', 'variables']"
Modifiability,". ROOT: TParameter< AParamType > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TParameter< AParamType > Class Template ReferenceCore ROOT classes » Base ROOT classes. ; template<class AParamType>; class TParameter< AParamType >Named parameter, streamable and storable. ; Definition at line 35 of file TParameter.h. Public Types; enum  EStatusBits { ;   kMultiply = (1ULL << ( 16 )); , kMax = (1ULL << ( 17 )); , kMin = (1ULL << ( 18 )); , kFirst = (1ULL << ( 19 )); , ;   kLast = (1ULL << ( 20 )); , kIsConst = (1ULL << ( 21 )). };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TParameter ();  ;  TParameter (const char *name, const AParamType &val);  ;  TParameter (const char *name, const AParamType &val, char mergemode);  ; virtual ~TParameter ();  ; Int_t Compare (const TObject *obj) const override;  Compare abstract method. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const AParamType & GetVal () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsConst () const;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *) cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParameter.html:782,inherit,inherited,782,doc/master/classTParameter.html,https://root.cern,https://root.cern/doc/master/classTParameter.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TPave Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TPave Class ReferenceGraphics » 2D Graphics » Basic graphics. ; A TBox with a bordersize and a shadow option. ; The corners of a TPave can be rounded (option ""arc"") More functional objects like TPavelabel, TPaveText derive from TPave. Definition at line 19 of file TPave.h. Public Types; enum  { kNameIsAction = (1ULL << ( 11 )); };  ;  Public Types inherited from TBox; enum  { kCannotMove = (1ULL << ( 12 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TPave ();  Pave default constructor. ;  ;  TPave (const TPave &pave);  Pave copy constructor. ;  ;  TPave (Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize=4, Option_t *option=""br"");  Pave normal constructor. ;  ;  ~TPave () override;  Pave default destructor. ;  ; virtual void ConvertNDCtoPad ();  Convert pave coordinates from NDC to Pad coordinates. ;  ; void Copy (TObject &pave) const override;  Copy this pave to pave. ;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Compute distance from point px,py to a pave. ;  ; void Draw (Option_t *option="""") override;  Draw this pave with its current attributes. ;  ; virtual TPa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPave.html:608,inherit,inherited,608,doc/master/classTPave.html,https://root.cern,https://root.cern/doc/master/classTPave.html,2,['inherit'],['inherited']
Modifiability,". ROOT: TPerfEvent Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; TPerfEvent Class Reference. . Definition at line 39 of file TPerfStats.h. Public Member Functions;  TPerfEvent (TTimeStamp *offset=0);  Constructor. ;  ;  ~TPerfEvent () override;  ; Int_t Compare (const TObject *obj) const override;  Compare method. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void Print (Option_t *option="""") const override;  Dump content of this instance. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPerfEvent.html:828,inherit,inherited,828,doc/master/classTPerfEvent.html,https://root.cern,https://root.cern/doc/master/classTPerfEvent.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TPluginHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Types |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TPluginHandler Class Reference. . Definition at line 103 of file TPluginManager.h. Public Member Functions; Int_t CheckPlugin () const;  Check if the plugin library for this handler exits. ;  ; Longptr_t ExecPlugin (int nargs);  ; template<typename... T> ; Longptr_t ExecPlugin (int nargs, const T &... params);  ; Longptr_t ExecPluginImpl ();  ; const char * GetClass () const;  ; TClass * IsA () const override;  ; Int_t LoadPlugin ();  Load the plugin library for this handler. ;  ; void Print (Option_t *opt="""") const override;  Print info about the plugin handler. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Com",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPluginHandler.html:455,plugin,plugin,455,doc/master/classTPluginHandler.html,https://root.cern,https://root.cern/doc/master/classTPluginHandler.html,3,['plugin'],['plugin']
Modifiability,". ROOT: TPluginManager Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TPluginManager Class ReferenceCore ROOT classes » Base ROOT classes. ; This class implements a plugin library manager. ; It keeps track of a list of plugin handlers. A plugin handler knows which plugin library to load to get a specific class that is used to extend the functionality of a specific base class and how to create an object of this class. For example, to extend the base class TFile to be able to read SQLite files one needs to load the plugin library libRSQLite.so which defines the TRSQLiteServer class. This loading should be triggered when a given URI contains a regular expression defined by the handler.; Plugin handlers can be defined via macros in a list of plugin directories. With $ROOTSYS/etc/plugins the default top plugin directory specified in $ROOTSYS/etc/system.rootrc. Additional directories can be specified by adding them to the end of the list. Macros for identical plugin handlers in later directories will override previous ones (the inverse of normal search path behavior). The macros must have names like <BaseClass>/PX0_<PluginClass>.C, e.g. TSQLServer/P20_TMySQLServer.C, to allow easy sorting and grouping. If the BaseClass is in a namespace the directory must have the name NameSpace@BaseClass as : is a reserved pathname character on some operating systems. Macros not beginning with 'P' and ending with "".C"" are ignored. These macros typically look like: void P10_TDCacheFile(); {; gPluginMgr->AddHandler(""TFile"", ""^dcache"", ""TDCacheFile"",; ""DCache"", ""TDCacheFile(const char*,Option_t*)"");; }; gPluginMgrR__EXTERN TPluginManager * gPluginMgrDefinition TPluginManager.h:289; TPluginManager::AddHandlervoid AddHandler(const char *base, const char *regexp, const char *className, const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPluginManager.html:372,plugin,plugin,372,doc/master/classTPluginManager.html,https://root.cern,https://root.cern/doc/master/classTPluginManager.html,8,"['extend', 'plugin']","['extend', 'plugin']"
Modifiability,". ROOT: TPopupDelayTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TPopupDelayTimer Class Reference. . Definition at line 98 of file TGMenu.cxx. Public Member Functions;  TPopupDelayTimer (TGPopupMenu *p, Long_t ms);  ; Bool_t Notify () override;  Notify when timer times out and reset the timer. ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Start (Long",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPopupDelayTimer.html:477,inherit,inherited,477,doc/master/classTPopupDelayTimer.html,https://root.cern,https://root.cern/doc/master/classTPopupDelayTimer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TPosixCondition Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TPosixCondition Class Reference. . Definition at line 33 of file TPosixCondition.h. Public Member Functions;  TPosixCondition (TMutexImp *m);  Create Condition variable. ;  ; virtual ~TPosixCondition ();  TCondition dtor. ;  ; Int_t Broadcast () override;  Broadcast is like signal but wakes all threads which have called Wait(). ;  ; TClass * IsA () const override;  ; Int_t Signal () override;  If one or more threads have called Wait(), Signal() wakes up at least one of them, possibly more. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t TimedWait (ULong_t secs, ULong_t nanoSecs=0) override;  TimedWait() is given an absolute time to wait until. ;  ; Int_t Wait () override;  Wait for the condition variable to be signalled. ;  ;  Public Member Functions inherited from TConditionImp;  TConditionImp ();  ; virtual ~TConditionImp ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPosixCondition.html:410,variab,variable,410,doc/master/classTPosixCondition.html,https://root.cern,https://root.cern/doc/master/classTPosixCondition.html,1,['variab'],['variable']
Modifiability,". ROOT: TPosixMutex Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; Static Private Attributes |; Friends |; List of all members ; TPosixMutex Class Reference. . Definition at line 28 of file TPosixMutex.h. Public Member Functions;  TPosixMutex (Bool_t recursive=kFALSE);  Create a posix mutex lock. ;  ; virtual ~TPosixMutex ();  TMutex dtor. ;  ; TClass * IsA () const override;  ; Int_t Lock () override;  Lock the mutex. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t TryLock () override;  Try locking the mutex. Returns 0 if mutex can be locked. ;  ; Int_t UnLock () override;  Unlock the mutex. ;  ;  Public Member Functions inherited from TMutexImp;  TMutexImp ();  ; virtual ~TMutexImp ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPosixMutex.html:892,inherit,inherited,892,doc/master/classTPosixMutex.html,https://root.cern,https://root.cern/doc/master/classTPosixMutex.html,2,['inherit'],['inherited']
Modifiability,". ROOT: TPosixThreadFactory Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TPosixThreadFactory Class Reference. . Definition at line 31 of file TPosixThreadFactory.h. Public Member Functions;  TPosixThreadFactory (const char *name=""Posix"", const char *title=""Posix Thread Factory"");  Create Posix thread factory. Also sets global gThreadFactory to this. ;  ; virtual ~TPosixThreadFactory ();  ; TConditionImp * CreateConditionImp (TMutexImp *m) override;  Return a Posix condition variable. ;  ; TMutexImp * CreateMutexImp (Bool_t recursive) override;  Return a Posix Mutex. ;  ; TThreadImp * CreateThreadImp () override;  Return a Posix thread. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TThreadFactory;  TThreadFactory (const char *name=""Unknown"", const char *title=""Unknown Thread Factory"");  TThreadFactory ctor only called by derived classes. ;  ; virtual ~TThreadFactory ();  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPosixThreadFactory.html:638,variab,variable,638,doc/master/classTPosixThreadFactory.html,https://root.cern,https://root.cern/doc/master/classTPosixThreadFactory.html,1,['variab'],['variable']
Modifiability,". ROOT: TPrincipal Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TPrincipal Class ReferenceHistogram Library. ; Principal Components Analysis (PCA) ; The current implementation is based on the LINTRA package from CERNLIB by R. Brun, H. Hansroul, and J. Kubler. The class has been implemented by Christian Holm Christensen in August 2000. Introduction; In many applications of various fields of research, the treatment of large amounts of data requires powerful techniques capable of rapid data reduction and analysis. Usually, the quantities most conveniently measured by the experimentalist, are not necessarily the most significant for classification and analysis of the data. It is then useful to have a way of selecting an optimal set of variables necessary for the recognition process and reducing the dimensionality of the problem, resulting in an easier classification procedure.; This paper describes the implementation of one such method of feature selection, namely the principal components analysis. This multidimensional technique is well known in the field of pattern recognition and and its use in Particle Physics has been documented elsewhere (cf. H. Wind, Function Parameterization, CERN 72-21). Overview; Suppose we have prototypes which are trajectories of particles, passing through a spectrometer. If one measures the passage of the particle at say 8 fixed planes, the trajectory is described by an 8-component vector: ; \[; \mathbf{x} = \left(x_0, x_1, \ldots, x_7\right); \]. in 8-dimensional pattern space.; One proceeds by generating a representative tracks sample and building up the covariance matrix \(\mathsf{C}\). Its eigenvectors and eigenvalues are computed by standard methods, and thus a new basis is obtained for the original 8-dimensional space the expa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPrincipal.html:954,variab,variables,954,doc/master/classTPrincipal.html,https://root.cern,https://root.cern/doc/master/classTPrincipal.html,1,['variab'],['variables']
Modifiability,". ROOT: TProcessEventTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TProcessEventTimer Class Reference. . Definition at line 257 of file TSystem.h. Public Member Functions;  TProcessEventTimer (Long_t delay);  Create async event processor timer. Delay is in milliseconds. ;  ; TClass * IsA () const override;  ; Bool_t Notify () override;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; Bool_t ProcessEvents ();  Process events if timer did time out. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProcessEventTimer.html:841,inherit,inherited,841,doc/master/classTProcessEventTimer.html,https://root.cern,https://root.cern/doc/master/classTProcessEventTimer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProctimeTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TProctimeTimer Class Reference. . Definition at line 141 of file TProofPlayer.cxx. Public Member Functions;  TProctimeTimer (TProofPlayer *p, Long_t to);  ; Bool_t Notify () override;  Handle expiration of the timer associated with dispatching pending events while processing. ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimer",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProctimeTimer.html:522,inherit,inherited,522,doc/master/classTProctimeTimer.html,https://root.cern,https://root.cern/doc/master/classTProctimeTimer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProofChain Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TProofChain Class Reference. . Definition at line 31 of file TProofChain.h. Public Types; enum  { kOwnsChain = (1ULL << ( 19 )); };  ;  Public Types inherited from TChain; enum  EStatusBits { kGlobalWeight = (1ULL << ( 15 )); , kAutoDelete = (1ULL << ( 16 )); , kProofUptodate = (1ULL << ( 17 )); , kProofLite = (1ULL << ( 18 )); };  ; enum  Mode { kWithoutGlobalRegistration; , kWithGlobalRegistration; };  ;  Public Types inherited from TTree; enum  { kSplitCollectionOfPointers = 100; };  ; enum  ESetBranchAddressStatus { ;   kMissingBranch = -5; , kInternalError = -4; , kMissingCompiledCollectionProxy = -3; , kMismatch = -2; , ;   kClassMismatch = -1; , kMatch = 0; , kMatchConversion = 1; , kMatchConversionCollection = 2; , ;   kMakeClass = 3; , kVoidPtr = 4; , kNoCheck = 5; , kNeedEnableDecomposedObj = (1ULL << ( 29 )); , ;   kNeedDisableDecomposedObj = (1ULL << ( 30 )); , kDecomposedObjMask = kNeedEnableDecomposedObj | kNeedDisableDecomposedObj. };  ; enum  EStatusBits { kForceRead = (1ULL << ( 11 )); , kCircular = (1ULL << ( 12 )); , kOnlyFlushAtCluster = (1ULL << ( 14 )); , kEntriesReshuffled = (1ULL << ( 19 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContex",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofChain.html:441,inherit,inherited,441,doc/master/classTProofChain.html,https://root.cern,https://root.cern/doc/master/classTProofChain.html,2,['inherit'],['inherited']
Modifiability,". ROOT: TProofDesc Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TProofDesc Class Reference. . Definition at line 142 of file TProofMgr.h. Public Types; enum  EStatus { kUnknown = -1; , kIdle = 0; , kRunning =1; , kShutdown = 2; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TProofDesc (const char *tag=0, const char *alias=0, const char *url=0, Int_t id=-1, Int_t remid=-1, Int_t status=kIdle, TProof *p=0);  ;  ~TProofDesc () override;  ; Int_t GetLocalId () const;  ; TProof * GetProof () const;  ; Int_t GetRemoteId () const;  ; Int_t GetStatus () const;  ; const char * GetUrl () const;  ; TClass * IsA () const override;  ; Bool_t IsIdle () const;  ; Bool_t IsRunning () const;  ; Bool_t IsShuttingDown () const;  ; Bool_t MatchId (Int_t id) const;  ; void Print (Option_t *opt="""") const override;  Dump the content to the screen. ;  ; void SetProof (TProof *p);  ; void SetRemoteId (Int_t id);  ; void SetStatus (Int_t st);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDesc.html:473,inherit,inherited,473,doc/master/classTProofDesc.html,https://root.cern,https://root.cern/doc/master/classTProofDesc.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProofDrawEntryList Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TProofDrawEntryList Class Reference. . Definition at line 145 of file TProofDraw.h. Public Member Functions;  TProofDrawEntryList ();  ;  ~TProofDrawEntryList () override;  ; void Init (TTree *) override;  See TProofDraw::Init(). ;  ; TClass * IsA () const override;  ; void SlaveBegin (TTree *) override;  See TProofDraw::SlaveBegin(). ;  ; void SlaveTerminate () override;  See TProofDraw::SlaveTerminate(). ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Terminate () override;  See TProofDraw::Terminate(). ;  ;  Public Member Functions inherited from TProofDraw;  TProofDraw ();  Constructor. ;  ;  ~TProofDraw () override;  Destructor. ;  ; void Begin (TTree *) override;  Executed by the client before processing. ;  ; Bool_t Notify () override;  Called when a new tree is loaded. ;  ; Bool_t Process (Long64_t) override;  Executed for each entry. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; int Version () const override;  ;  Public Member Functions inherited from TSelector;  TSelector ();  Default selector ctor. ;  ;  ~TSelector () override;  Selector destructor. ;  ; virtual void Abort (const char *why, EAbort what=kAbortProcess);  Abort processing. ;  ; virtual EAbort GetAbort () const;  ; virtual Int_t GetEntry (Long64_t, Int_t=0);  ; virtual TList * GetInputList () const;  ; const char * GetOption () const override;  ; virtual TList * GetOutputList () const;  ; virtual Long64_t GetStatus () const;  ; virtual void ImportOutput (TList *output);  Imports the content of 'output' in the internal output list. ;  ; TClass * IsA () const override;  ; bool Notify () ov",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawEntryList.html:931,inherit,inherited,931,doc/master/classTProofDrawEntryList.html,https://root.cern,https://root.cern/doc/master/classTProofDrawEntryList.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProofDrawEventList Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TProofDrawEventList Class Reference. . Definition at line 124 of file TProofDraw.h. Public Member Functions;  TProofDrawEventList ();  ;  ~TProofDrawEventList () override;  ; void Init (TTree *) override;  See TProofDraw::Init(). ;  ; TClass * IsA () const override;  ; void SlaveBegin (TTree *) override;  See TProofDraw::SlaveBegin(). ;  ; void SlaveTerminate () override;  See TProofDraw::SlaveTerminate(). ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Terminate () override;  See TProofDraw::Terminate(). ;  ;  Public Member Functions inherited from TProofDraw;  TProofDraw ();  Constructor. ;  ;  ~TProofDraw () override;  Destructor. ;  ; void Begin (TTree *) override;  Executed by the client before processing. ;  ; Bool_t Notify () override;  Called when a new tree is loaded. ;  ; Bool_t Process (Long64_t) override;  Executed for each entry. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; int Version () const override;  ;  Public Member Functions inherited from TSelector;  TSelector ();  Default selector ctor. ;  ;  ~TSelector () override;  Selector destructor. ;  ; virtual void Abort (const char *why, EAbort what=kAbortProcess);  Abort processing. ;  ; virtual EAbort GetAbort () const;  ; virtual Int_t GetEntry (Long64_t, Int_t=0);  ; virtual TList * GetInputList () const;  ; const char * GetOption () const override;  ; virtual TList * GetOutputList () const;  ; virtual Long64_t GetStatus () const;  ; virtual void ImportOutput (TList *output);  Imports the content of 'output' in the internal output list. ;  ; TClass * IsA () const override;  ; bool Notify () ov",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawEventList.html:931,inherit,inherited,931,doc/master/classTProofDrawEventList.html,https://root.cern,https://root.cern/doc/master/classTProofDrawEventList.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProofDrawGraph Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TProofDrawGraph Class Reference. . Definition at line 203 of file TProofDraw.h. Public Member Functions;  TProofDrawGraph ();  ; void Init (TTree *tree) override;  See TProofDraw::Init(). ;  ; TClass * IsA () const override;  ; void SlaveBegin (TTree *) override;  See TProofDraw::SlaveBegin(). ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Terminate () override;  See TProofDraw::Terminate(). ;  ;  Public Member Functions inherited from TProofDraw;  TProofDraw ();  Constructor. ;  ;  ~TProofDraw () override;  Destructor. ;  ; void Begin (TTree *) override;  Executed by the client before processing. ;  ; Bool_t Notify () override;  Called when a new tree is loaded. ;  ; Bool_t Process (Long64_t) override;  Executed for each entry. ;  ; void SlaveTerminate () override;  Executed by each slave after the processing has finished, before returning the results to the client. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; int Version () const override;  ;  Public Member Functions inherited from TSelector;  TSelector ();  Default selector ctor. ;  ;  ~TSelector () override;  Selector destructor. ;  ; virtual void Abort (const char *why, EAbort what=kAbortProcess);  Abort processing. ;  ; virtual EAbort GetAbort () const;  ; virtual Int_t GetEntry (Long64_t, Int_t=0);  ; virtual TList * GetInputList () const;  ; const char * GetOption () const override;  ; virtual TList * GetOutputList () const;  ; virtual Long64_t GetStatus () const;  ; virtual void ImportOutput (TList *output);  Imports the content of 'output' in the internal output list. ;  ; TClass * IsA () const override",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawGraph.html:812,inherit,inherited,812,doc/master/classTProofDrawGraph.html,https://root.cern,https://root.cern/doc/master/classTProofDrawGraph.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProofDrawHist Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TProofDrawHist Class Reference. . Definition at line 97 of file TProofDraw.h. Public Member Functions;  TProofDrawHist ();  ; void Begin (TTree *t) override;  See TProofDraw::Begin(). ;  ; void Init (TTree *) override;  See TProofDraw::Init(). ;  ; TClass * IsA () const override;  ; void SlaveBegin (TTree *) override;  See TProofDraw::SlaveBegin(). ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Terminate () override;  See TProofDraw::Terminate(). ;  ;  Public Member Functions inherited from TProofDraw;  TProofDraw ();  Constructor. ;  ;  ~TProofDraw () override;  Destructor. ;  ; Bool_t Notify () override;  Called when a new tree is loaded. ;  ; Bool_t Process (Long64_t) override;  Executed for each entry. ;  ; void SlaveTerminate () override;  Executed by each slave after the processing has finished, before returning the results to the client. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; int Version () const override;  ;  Public Member Functions inherited from TSelector;  TSelector ();  Default selector ctor. ;  ;  ~TSelector () override;  Selector destructor. ;  ; virtual void Abort (const char *why, EAbort what=kAbortProcess);  Abort processing. ;  ; virtual EAbort GetAbort () const;  ; virtual Int_t GetEntry (Long64_t, Int_t=0);  ; virtual TList * GetInputList () const;  ; const char * GetOption () const override;  ; virtual TList * GetOutputList () const;  ; virtual Long64_t GetStatus () const;  ; virtual void ImportOutput (TList *output);  Imports the content of 'output' in the internal output list. ;  ; TClass * IsA () const over",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawHist.html:895,inherit,inherited,895,doc/master/classTProofDrawHist.html,https://root.cern,https://root.cern/doc/master/classTProofDrawHist.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProofDrawListOfGraphs Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TProofDrawListOfGraphs Class Reference. . Definition at line 257 of file TProofDraw.h. Classes; struct  Point3D_t;  . Public Member Functions;  TProofDrawListOfGraphs ();  ; TClass * IsA () const override;  ; void SlaveBegin (TTree *) override;  See TProofDraw::SlaveBegin(). ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Terminate () override;  See TProofDraw::Terminate(). ;  ;  Public Member Functions inherited from TProofDraw;  TProofDraw ();  Constructor. ;  ;  ~TProofDraw () override;  Destructor. ;  ; void Begin (TTree *) override;  Executed by the client before processing. ;  ; void Init (TTree *) override;  Init the tree. ;  ; Bool_t Notify () override;  Called when a new tree is loaded. ;  ; Bool_t Process (Long64_t) override;  Executed for each entry. ;  ; void SlaveTerminate () override;  Executed by each slave after the processing has finished, before returning the results to the client. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; int Version () const override;  ;  Public Member Functions inherited from TSelector;  TSelector ();  Default selector ctor. ;  ;  ~TSelector () override;  Selector destructor. ;  ; virtual void Abort (const char *why, EAbort what=kAbortProcess);  Abort processing. ;  ; virtual EAbort GetAbort () const;  ; virtual Int_t GetEntry (Long64_t, Int_t=0);  ; virtual TList * GetInputList () const;  ; const char * GetOption () const override;  ; virtual TList * GetOutputList () const;  ; virtual Long64_t GetStatus () const;  ; virtual void ImportOutput (TList *output);  Imports the content of 'output' in the interna",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawListOfGraphs.html:811,inherit,inherited,811,doc/master/classTProofDrawListOfGraphs.html,https://root.cern,https://root.cern/doc/master/classTProofDrawListOfGraphs.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProofDrawListOfPolyMarkers3D Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TProofDrawListOfPolyMarkers3D Class Reference. . Definition at line 281 of file TProofDraw.h. Classes; struct  Point4D_t;  . Public Member Functions;  TProofDrawListOfPolyMarkers3D ();  ; TClass * IsA () const override;  ; void SlaveBegin (TTree *) override;  See TProofDraw::SlaveBegin(). ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Terminate () override;  See TProofDraw::Terminate(). ;  ;  Public Member Functions inherited from TProofDraw;  TProofDraw ();  Constructor. ;  ;  ~TProofDraw () override;  Destructor. ;  ; void Begin (TTree *) override;  Executed by the client before processing. ;  ; void Init (TTree *) override;  Init the tree. ;  ; Bool_t Notify () override;  Called when a new tree is loaded. ;  ; Bool_t Process (Long64_t) override;  Executed for each entry. ;  ; void SlaveTerminate () override;  Executed by each slave after the processing has finished, before returning the results to the client. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; int Version () const override;  ;  Public Member Functions inherited from TSelector;  TSelector ();  Default selector ctor. ;  ;  ~TSelector () override;  Selector destructor. ;  ; virtual void Abort (const char *why, EAbort what=kAbortProcess);  Abort processing. ;  ; virtual EAbort GetAbort () const;  ; virtual Int_t GetEntry (Long64_t, Int_t=0);  ; virtual TList * GetInputList () const;  ; const char * GetOption () const override;  ; virtual TList * GetOutputList () const;  ; virtual Long64_t GetStatus () const;  ; virtual void ImportOutput (TList *output);  Imports the content of 'o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawListOfPolyMarkers3D.html:832,inherit,inherited,832,doc/master/classTProofDrawListOfPolyMarkers3D.html,https://root.cern,https://root.cern/doc/master/classTProofDrawListOfPolyMarkers3D.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProofDrawPolyMarker3D Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TProofDrawPolyMarker3D Class Reference. . Definition at line 221 of file TProofDraw.h. Public Member Functions;  TProofDrawPolyMarker3D ();  ; void Init (TTree *tree) override;  See TProofDraw::Init(). ;  ; TClass * IsA () const override;  ; void SlaveBegin (TTree *) override;  See TProofDraw::SlaveBegin(). ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Terminate () override;  See TProofDraw::Terminate(). ;  ;  Public Member Functions inherited from TProofDraw;  TProofDraw ();  Constructor. ;  ;  ~TProofDraw () override;  Destructor. ;  ; void Begin (TTree *) override;  Executed by the client before processing. ;  ; Bool_t Notify () override;  Called when a new tree is loaded. ;  ; Bool_t Process (Long64_t) override;  Executed for each entry. ;  ; void SlaveTerminate () override;  Executed by each slave after the processing has finished, before returning the results to the client. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; int Version () const override;  ;  Public Member Functions inherited from TSelector;  TSelector ();  Default selector ctor. ;  ;  ~TSelector () override;  Selector destructor. ;  ; virtual void Abort (const char *why, EAbort what=kAbortProcess);  Abort processing. ;  ; virtual EAbort GetAbort () const;  ; virtual Int_t GetEntry (Long64_t, Int_t=0);  ; virtual TList * GetInputList () const;  ; const char * GetOption () const override;  ; virtual TList * GetOutputList () const;  ; virtual Long64_t GetStatus () const;  ; virtual void ImportOutput (TList *output);  Imports the content of 'output' in the internal output list. ;  ; TClass * ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawPolyMarker3D.html:833,inherit,inherited,833,doc/master/classTProofDrawPolyMarker3D.html,https://root.cern,https://root.cern/doc/master/classTProofDrawPolyMarker3D.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProofDrawProfile Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TProofDrawProfile Class Reference. . Definition at line 165 of file TProofDraw.h. Public Member Functions;  TProofDrawProfile ();  ; void Begin (TTree *t) override;  See TProofDraw::Begin(). ;  ; void Init (TTree *) override;  See TProofDraw::Init(). ;  ; TClass * IsA () const override;  ; void SlaveBegin (TTree *) override;  See TProofDraw::SlaveBegin(). ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Terminate () override;  See TProofDraw::Terminate(). ;  ;  Public Member Functions inherited from TProofDraw;  TProofDraw ();  Constructor. ;  ;  ~TProofDraw () override;  Destructor. ;  ; Bool_t Notify () override;  Called when a new tree is loaded. ;  ; Bool_t Process (Long64_t) override;  Executed for each entry. ;  ; void SlaveTerminate () override;  Executed by each slave after the processing has finished, before returning the results to the client. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; int Version () const override;  ;  Public Member Functions inherited from TSelector;  TSelector ();  Default selector ctor. ;  ;  ~TSelector () override;  Selector destructor. ;  ; virtual void Abort (const char *why, EAbort what=kAbortProcess);  Abort processing. ;  ; virtual EAbort GetAbort () const;  ; virtual Int_t GetEntry (Long64_t, Int_t=0);  ; virtual TList * GetInputList () const;  ; const char * GetOption () const override;  ; virtual TList * GetOutputList () const;  ; virtual Long64_t GetStatus () const;  ; virtual void ImportOutput (TList *output);  Imports the content of 'output' in the internal output list. ;  ; TClass * IsA () const override;  ; bool Noti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawProfile.html:877,inherit,inherited,877,doc/master/classTProofDrawProfile.html,https://root.cern,https://root.cern/doc/master/classTProofDrawProfile.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProofDrawProfile2D Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TProofDrawProfile2D Class Reference. . Definition at line 184 of file TProofDraw.h. Public Member Functions;  TProofDrawProfile2D ();  ; void Begin (TTree *t) override;  See TProofDraw::Begin(). ;  ; void Init (TTree *) override;  See TProofDraw::Init(). ;  ; TClass * IsA () const override;  ; void SlaveBegin (TTree *) override;  See TProofDraw::SlaveBegin(). ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Terminate () override;  See TProofDraw::Terminate(). ;  ;  Public Member Functions inherited from TProofDraw;  TProofDraw ();  Constructor. ;  ;  ~TProofDraw () override;  Destructor. ;  ; Bool_t Notify () override;  Called when a new tree is loaded. ;  ; Bool_t Process (Long64_t) override;  Executed for each entry. ;  ; void SlaveTerminate () override;  Executed by each slave after the processing has finished, before returning the results to the client. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; int Version () const override;  ;  Public Member Functions inherited from TSelector;  TSelector ();  Default selector ctor. ;  ;  ~TSelector () override;  Selector destructor. ;  ; virtual void Abort (const char *why, EAbort what=kAbortProcess);  Abort processing. ;  ; virtual EAbort GetAbort () const;  ; virtual Int_t GetEntry (Long64_t, Int_t=0);  ; virtual TList * GetInputList () const;  ; const char * GetOption () const override;  ; virtual TList * GetOutputList () const;  ; virtual Long64_t GetStatus () const;  ; virtual void ImportOutput (TList *output);  Imports the content of 'output' in the internal output list. ;  ; TClass * IsA () const override;  ; boo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawProfile2D.html:883,inherit,inherited,883,doc/master/classTProofDrawProfile2D.html,https://root.cern,https://root.cern/doc/master/classTProofDrawProfile2D.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProofInputHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TProofInputHandler Class Reference. . Definition at line 198 of file TProof.h. Public Member Functions;  TProofInputHandler (TProof *p, TSocket *s);  Constructor. ;  ; Bool_t Notify () override;  Handle input. ;  ; Bool_t ReadNotify () override;  Notify when something can be read from the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TFileHandler;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system file handler list. ;  ; int GetFd () const;  ; virtual Bool_t HasReadInterest ();  True if handler is interested in read events. ;  ; virtual Bool_t HasWriteInterest ();  True if handler is interested in write events. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsReadReady () const;  ; virtual Bool_t IsWriteReady () const;  ; void Remove () override;  Remove file event handler from system file handler list. ;  ; virtual void ResetReadyMask ();  ; void SetFd (int fd);  ; virtual void SetInterest (Int_t mask);  Set interest mask to 'mask'. ;  ; virtual void SetReadReady ();  ; virtual void SetWriteReady ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t WriteNotify ();  Notify when something can be written to the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivate",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofInputHandler.html:608,inherit,inherited,608,doc/master/classTProofInputHandler.html,https://root.cern,https://root.cern/doc/master/classTProofInputHandler.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProofInterruptHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TProofInterruptHandler Class Reference. . Definition at line 185 of file TProof.h. Public Member Functions;  TProofInterruptHandler (TProof *p);  ; Bool_t Notify () override;  TProof interrupt handler. ;  ;  Public Member Functions inherited from TSignalHandler;  TSignalHandler (ESignals sig, Bool_t sync=kTRUE);  Create signal event handler. ;  ; virtual ~TSignalHandler ();  ; void Add () override;  Add signal handler to system signal handler list. ;  ; void Delay ();  ; ESignals GetSignal () const;  ; void HandleDelayedSignal ();  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove signal handler from system signal handler list. ;  ; void SetSignal (ESignals sig);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofInterruptHandler.html:483,inherit,inherited,483,doc/master/classTProofInterruptHandler.html,https://root.cern,https://root.cern/doc/master/classTProofInterruptHandler.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProofLockPath Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TProofLockPath Class Reference. . Definition at line 349 of file TProofServ.h. Public Member Functions;  TProofLockPath (const char *path);  ;  ~TProofLockPath () override;  ; Bool_t IsLocked () const;  ; Int_t Lock ();  Locks the directory. ;  ; Int_t Unlock ();  Unlock the directory. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofLockPath.html:532,inherit,inherited,532,doc/master/classTProofLockPath.html,https://root.cern,https://root.cern/doc/master/classTProofLockPath.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProofLog Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TProofLog Class ReferencePROOF » PROOF kernel Libraries. ; Implementation of the PROOF session log handler. ; Definition at line 32 of file TProofLog.h. Public Types; enum  ELogLocationBit { kLogToBox = (1ULL << ( 16 )); };  ; enum  ERetrieveOpt { kLeading = 0x1; , kTrailing = 0x2; , kAll = 0x3; , kGrep = 0x4; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TProofLog (const char *stag, const char *url, TProofMgr *mgr);  Constructor. ;  ;  ~TProofLog () override;  Destructor. ;  ; void Display (const char *ord=""*"", Int_t from=-10, Int_t to=-1);  Display the content associated with worker 'ord' from line 'from' to line 'to' inclusive. ;  ; TList * GetListOfLogs () const;  ; Int_t Grep (const char *txt, Int_t from=0);  Search lines containing 'txt', starting from line 'from'. ;  ; TClass * IsA () const override;  ; Bool_t LogToBox ();  ; void Print (Option_t *opt=0) const override;  Print head info about the content. ;  ; void Prt (const char *what, Bool_t newline=kTRUE);  Special printing procedure. ;  ; Int_t Retrieve (const char *ord=""*"", TProofLog::ERetrieveOpt o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofLog.html:631,inherit,inherited,631,doc/master/classTProofLog.html,https://root.cern,https://root.cern/doc/master/classTProofLog.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProofMgr Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Static Protected Attributes |; Private Member Functions |; Static Private Member Functions |; Static Private Attributes |; List of all members ; TProofMgr Class ReferencePROOF » PROOF kernel Libraries. ; The PROOF manager interacts with the PROOF server coordinator to create or destroy a PROOF session, attach to or detach from existing one, and to monitor any client activity on the cluster. ; At most one manager instance per server is allowed. ; Definition at line 43 of file TProofMgr.h. Public Types; enum  EServType { kProofd = 0; , kXProofd = 1; , kProofLite = 2; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TProofMgr (const char *url, Int_t loglevel=-1, const char *alias="""");  Create a PROOF manager for the standard (old) environment. ;  ;  ~TProofMgr () override;  Destroy a TProofMgr instance. ;  ; virtual TProof * AttachSession (Int_t, Bool_t=kFALSE);  Dummy version provided for completeness. ;  ; virtual TProof * AttachSession (TProofDesc *, Bool_t=kFALSE);  Dummy version provided for completeness. ;  ; void Close ();  ; virtual Int_t Cp (const char *, const char *=0, const char *=0);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofMgr.html:862,inherit,inherited,862,doc/master/classTProofMgr.html,https://root.cern,https://root.cern/doc/master/classTProofMgr.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProofMonSender::TDSetPlet Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; TProofMonSender::TDSetPlet Class Reference. . Definition at line 43 of file TProofMonSender.h. Public Member Functions;  TDSetPlet (const char *name, TDSet *ds=0);  ;  ~TDSetPlet () override;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofMonSender_1_1TDSetPlet.html:446,inherit,inherited,446,doc/master/classTProofMonSender_1_1TDSetPlet.html,https://root.cern,https://root.cern/doc/master/classTProofMonSender_1_1TDSetPlet.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProofNodeInfo Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TProofNodeInfo Class ReferencePROOF » PROOF kernel Libraries. ; The purpose of this class is to provide a complete node description for masters, submasters and workers. ; Definition at line 32 of file TProofNodeInfo.h. Public Types; enum  ENodeType { kMaster; , kSubMaster; , kWorker; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TProofNodeInfo ();  Default constructor. ;  ;  TProofNodeInfo (const char *str);  Constructor from a string containing all the information in a serialized way. ;  ;  TProofNodeInfo (const TProofNodeInfo &nodeInfo);  Copy constructor. ;  ;  ~TProofNodeInfo () override;  ; void Assign (const TProofNodeInfo &n);  Asssign content of node n to this node. ;  ; const TString & GetConfig () const;  ; const TString & GetId () const;  ; const TString & GetImage () const;  ; const TString & GetMsd () const;  ; const char * GetName () const override;  Returns name of object. ;  ; const TString & GetNodeName () const;  ; ENodeType GetNodeType () const;  ; Int_t GetNWrks () const;  ; const TString & GetOrdinal () const;  ; Int_t GetPerfIndex () c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofNodeInfo.html:609,inherit,inherited,609,doc/master/classTProofNodeInfo.html,https://root.cern,https://root.cern/doc/master/classTProofNodeInfo.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProofOutputFile Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TProofOutputFile Class ReferencePROOF » PROOF kernel Libraries. ; Class to steer the merging of files produced on the workers. ; Definition at line 33 of file TProofOutputFile.h. Public Types; enum  ERunType { kMerge = 1; , kDataset = 2; };  ; enum  EStatusBits { kOutputFileNameSet = (1ULL << ( 16 )); , kRetrieve = (1ULL << ( 17 )); , kSwapFile = (1ULL << ( 18 )); };  ; enum  ETypeOpt { ;   kRemote = 1; , kLocal = 2; , kCreate = 4; , kRegister = 8; , ;   kOverwrite = 16; , kVerify = 32. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TProofOutputFile ();  ;  TProofOutputFile (const char *path, const char *option=""M"", const char *dsname=0);  Constructor with the old signature, kept for convenience and backard compatibility. ;  ;  TProofOutputFile (const char *path, ERunType type, UInt_t opt=kRemote, const char *dsname=0);  Main constructor. ;  ;  ~TProofOutputFile () override;  Main destructor. ;  ; Int_t AdoptFile (TFile *f);  Adopt a file already open. ;  ; const char * GetDir (Bool_t raw=kFALSE) const;  ; TFileCollection * GetFileCollection ();  Get insta",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofOutputFile.html:818,inherit,inherited,818,doc/master/classTProofOutputFile.html,https://root.cern,https://root.cern/doc/master/classTProofOutputFile.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProofOutputList Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TProofOutputList Class ReferencePROOF » PROOF kernel Libraries. ; Derivation of TList with an overload of ls() and Print() allowing to filter out some of the variables. ; Definition at line 26 of file TProofOutputList.h. Public Member Functions;  TProofOutputList (const char *dontshow=""PROOF_*"");  Constructor. ;  ;  ~TProofOutputList () override;  Destructor. ;  ; void AttachList (TList *alist);  Attach to list 'alist'. ;  ;  ClassDefOverride (TProofOutputList, 1);  ; TList * GetDontShowList ();  ; void ls (Option_t *option="""") const override;  List the content of the list. ;  ; void Print (Option_t *option, const char *wildcard, Int_t recurse=1) const override;  Print the collection header and its elements that match the wildcard. ;  ; void Print (Option_t *option, Int_t recurse) const override;  Print the collection header and its elements. ;  ; void Print (Option_t *option, TPRegexp &regexp, Int_t recurse=1) const override;  Print the collection header and its elements that match the regexp. ;  ; void Print (Option_t *option="""") const override;  Print the content of the list. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; void AddAfter (const TObject *after, TObject *obj) override;  Insert object after object after in the list. ;  ; virtual void AddAfter (TObjLink *after, TObject *obj);  Insert object after the specified ObjLink object. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Insert object at position idx in the list. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofOutputList.html:375,variab,variables,375,doc/master/classTProofOutputList.html,https://root.cern,https://root.cern/doc/master/classTProofOutputList.html,1,['variab'],['variables']
Modifiability,". ROOT: TProofPerfAnalysis::TFileInfo Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; TProofPerfAnalysis::TFileInfo Class Reference. . Definition at line 147 of file TProofPerfAnalysis.cxx. Public Member Functions;  TFileInfo (const char *name, const char *srv);  ;  ~TFileInfo () override;  ; Int_t Compare (const TObject *o) const override;  Compare abstract method. ;  ; void Print (Option_t *opt="""") const override;  This method must be overridden when a class wants to print itself. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofPerfAnalysis_1_1TFileInfo.html:661,inherit,inherited,661,doc/master/classTProofPerfAnalysis_1_1TFileInfo.html,https://root.cern,https://root.cern/doc/master/classTProofPerfAnalysis_1_1TFileInfo.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProofPerfAnalysis::TPackInfo Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; TProofPerfAnalysis::TPackInfo Class Reference. . Definition at line 100 of file TProofPerfAnalysis.cxx. Public Member Functions;  TPackInfo (const char *ord, const char *host);  ;  TPackInfo (const char *ord, const char *host, Float_t start, Float_t stop, Long64_t sz, Double_t mbr);  ; void Print (Option_t *opt="""") const override;  Print TNamed name and title. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofPerfAnalysis_1_1TPackInfo.html:622,inherit,inherited,622,doc/master/classTProofPerfAnalysis_1_1TPackInfo.html,https://root.cern,https://root.cern/doc/master/classTProofPerfAnalysis_1_1TPackInfo.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProofPerfAnalysis::TWrkEntry Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; TProofPerfAnalysis::TWrkEntry Class Reference. . Definition at line 135 of file TProofPerfAnalysis.cxx. Public Member Functions;  TWrkEntry (Double_t xx, Double_t er, Double_t mbr, Double_t pt);  ; void Print (Option_t *="""") const override;  This method must be overridden when a class wants to print itself. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to whi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofPerfAnalysis_1_1TWrkEntry.html:568,inherit,inherited,568,doc/master/classTProofPerfAnalysis_1_1TWrkEntry.html,https://root.cern,https://root.cern/doc/master/classTProofPerfAnalysis_1_1TWrkEntry.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProofPerfAnalysis::TWrkInfo Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; TProofPerfAnalysis::TWrkInfo Class Reference. . Definition at line 44 of file TProofPerfAnalysis.cxx. Public Member Functions;  TWrkInfo (const char *ord, const char *name);  ;  ~TWrkInfo () override;  ; Double_t AvgIO ();  ; Double_t AvgRate ();  ; Int_t Compare (const TObject *o) const override;  Compare two TNamed objects. ;  ; void Print (Option_t *="""") const override;  Print TNamed name and title. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Siz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofPerfAnalysis_1_1TWrkInfo.html:664,inherit,inherited,664,doc/master/classTProofPerfAnalysis_1_1TWrkInfo.html,https://root.cern,https://root.cern/doc/master/classTProofPerfAnalysis_1_1TWrkInfo.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProofPerfAnalysis::TWrkInfoFile Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; TProofPerfAnalysis::TWrkInfoFile Class Reference. . Definition at line 118 of file TProofPerfAnalysis.cxx. Public Member Functions;  TWrkInfoFile (const char *ord, const char *name);  ;  ~TWrkInfoFile () override;  ; void Print (Option_t *opt="""") const override;  Print TNamed name and title. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Return si",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofPerfAnalysis_1_1TWrkInfoFile.html:555,inherit,inherited,555,doc/master/classTProofPerfAnalysis_1_1TWrkInfoFile.html,https://root.cern,https://root.cern/doc/master/classTProofPerfAnalysis_1_1TWrkInfoFile.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProofPlayerSlave Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TProofPlayerSlave Class Reference. . Definition at line 372 of file TProofPlayer.h. Public Member Functions;  TProofPlayerSlave (TSocket *socket=0);  ; void HandleGetTreeHeader (TMessage *mess) override;  Handle tree header request. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TProofPlayer;  TProofPlayer (TProof *proof=0);  Default ctor. ;  ;  ~TProofPlayer () override;  Destructor. ;  ; void AddEventsProcessed (Long64_t ev) override;  ; void AddInput (TObject *inp) override;  Add object to input list. ;  ; void AddOutput (TList *out) override;  Incorporate output list (may not be used in this class). ;  ; Int_t AddOutputObject (TObject *obj) override;  Incorporate output object (may not be used in this class). ;  ; void AddQueryResult (TQueryResult *q) override;  Add query result to the list, making sure that there are no duplicates. ;  ; void ClearInput () override;  Clear input list. ;  ; TDrawFeedback * CreateDrawFeedback (TProof *p) override;  Draw feedback creation proxy. ;  ; void DeleteDrawFeedback (TDrawFeedback *f) override;  Delete draw feedback object. ;  ; Long64_t DrawSelect (TDSet *set, const char *varexp, const char *selection, Option_t *option="""", Long64_t nentries=-1, Long64_t firstentry=0) override;  Draw (may not be used in this class). ;  ; void Feedback (TList *objs) override;  Set feedback list (may not be used in this class). ;  ; void FeedBackCanvas (const char *name, Bool_t create);  Create/destroy a named canvas for feedback. ;  ; Long64_t Finalize (Bool_t force=",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofPlayerSlave.html:750,inherit,inherited,750,doc/master/classTProofPlayerSlave.html,https://root.cern,https://root.cern/doc/master/classTProofPlayerSlave.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProofProgressInfo Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; TProofProgressInfo Class Reference. . Definition at line 161 of file TProof.h. Public Member Functions;  TProofProgressInfo (Long64_t tot=0, Long64_t proc=0, Long64_t bytes=0, Float_t initt=-1., Float_t proct=-1., Float_t evts=-1., Float_t mbs=-1., Int_t actw=0, Int_t tsess=0, Float_t esess=0.);  ;  ~TProofProgressInfo () override;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofProgressInfo.html:791,inherit,inherited,791,doc/master/classTProofProgressInfo.html,https://root.cern,https://root.cern/doc/master/classTProofProgressInfo.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProofProgressStatus Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TProofProgressStatus Class ReferencePROOF » PROOF kernel Libraries. ; Container class for processing statistics. ; Definition at line 25 of file TProofProgressStatus.h. Public Types; enum  EStatusBits { kFileNotOpen = (1ULL << ( 15 )); , kFileCorrupted = (1ULL << ( 16 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TProofProgressStatus (Long64_t fEntries=0, Long64_t fBytesRead=0, Long64_t fReadCalls=0, Double_t fProcTime=0, Double_t fCPUTime=0);  Main and default constructor. ;  ; Long64_t GetBytesRead () const;  ; Double_t GetCPUTime () const;  ; Double_t GetCurrentRate () const;  Get current rate. Rteunr the average rate if the current is not defined. ;  ; Long64_t GetEntries () const;  ; Double_t GetLastUpdate () const;  ; Double_t GetLearnTime () const;  ; Double_t GetProcTime () const;  ; Double_t GetRate () const;  ; Long64_t GetReadCalls () const;  ; void IncBytesRead (Long64_t bytesRead);  ; void IncCPUTime (Double_t procTime);  ; void IncEntries (Long64_t entries=1);  ; void IncProcTime (Double_t procTime);  ; void IncReadCalls (Long64_t readCalls);  ; TClass * IsA () const over",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofProgressStatus.html:564,inherit,inherited,564,doc/master/classTProofProgressStatus.html,https://root.cern,https://root.cern/doc/master/classTProofProgressStatus.html,1,['inherit'],['inherited']
Modifiability,. ROOT: TProofQueryResult Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TProofQueryResult Class ReferencePROOF » PROOF kernel Libraries. ; TQueryResult version adapted to PROOF neeeds. ; Definition at line 28 of file TProofQueryResult.h. Public Member Functions;  TProofQueryResult ();  ;  ~TProofQueryResult () override;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TQueryResult;  TQueryResult ();  ;  ~TQueryResult () override;  Destructor. ;  ; void Browse (TBrowser *b=nullptr) override;  To support browsing of the results. ;  ; Long64_t GetBytes () const;  ; TDatime GetEndTime () const;  ; Long64_t GetEntries () const;  ; Long64_t GetFirst () const;  ; Float_t GetInitTime () const;  ; TList * GetInputList ();  ; TObject * GetInputObject (const char *classname) const;  Return first instance of class 'classname' in the input list. ;  ; const char * GetLibList () const;  ; TMacro * GetLogFile () const;  ; Float_t GetMergeTime () const;  ; Int_t GetNumMergers () const;  ; Int_t GetNumWrks () const;  ; const char * GetOptions () const;  ; TList * GetOutputList ();  ; const char * GetParList () const;  ; Float_t GetPrepTime () const;  ; Float_t GetProcTime () const;  ; Float_t GetRecvTime () const;  ; const char * GetResultFile () const;  ; TMacro * GetSelecHdr () const;  ; TMacro * GetSelecImp () const;  ; Int_t GetSeqNum () const;  ; TDatime GetStartTime () const;  ; EQueryStatus GetStatus () const;  ; Float_t GetTermTime () const;  ; Float_t GetUsedCPU () const;  ; TClass * IsA () const override;  ; bool IsArchived () const;  ; virtual bool IsDone () const;  ; bool IsDraw () const;  ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofQueryResult.html:379,adapt,adapted,379,doc/master/classTProofQueryResult.html,https://root.cern,https://root.cern/doc/master/classTProofQueryResult.html,2,"['adapt', 'inherit']","['adapted', 'inherited']"
Modifiability,". ROOT: TProofResources Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TProofResources Class Referenceabstract. . Definition at line 34 of file TProofResources.h. Public Member Functions;  TProofResources ();  ;  ~TProofResources () override;  ; virtual TProofNodeInfo * GetMaster ()=0;  ; virtual TList * GetSubmasters ()=0;  ; virtual TList * GetWorkers ()=0;  ; TClass * IsA () const override;  ; virtual Bool_t IsValid () const;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Comput",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofResources.html:784,inherit,inherited,784,doc/master/classTProofResources.html,https://root.cern,https://root.cern/doc/master/classTProofResources.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProofResourcesStatic Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Static Private Member Functions |; Private Attributes |; List of all members ; TProofResourcesStatic Class ReferencePROOF » PROOF kernel Libraries. ; The purpose of this class is to provide a standard interface to static config files. ; It interprets Proof config files (proof.conf) and sorts the contents into TProofNodeInfo objects. Master info will be placed in fMaster (of type TProofNodeInfo). Submaster info will be put in fSubmasterList (a TList of TProofNodeInfo objects), while workers (and condorworkers) will be placed in fWorkerList (a TList of TProofNodeInfo objects). ; Definition at line 37 of file TProofResourcesStatic.h. Public Types; enum  EInfoType { kNodeType; , kOption; , kHost; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TProofResourcesStatic ();  This ctor is used in TProofServ::Setup() in combination with GetWorkDir() for a quick scan of the config file to retrieve the work directory. ;  ;  TProofResourcesStatic (const char *confDir, const char *fileName);  Using this ctor will retrieve all information in the config file and store it in fMaster, fSubmasterList and fWorkerList, condorwo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofResourcesStatic.html:477,config,config,477,doc/master/classTProofResourcesStatic.html,https://root.cern,https://root.cern/doc/master/classTProofResourcesStatic.html,2,['config'],['config']
Modifiability,". ROOT: TProofServInputHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TProofServInputHandler Class Reference. . Definition at line 216 of file TProofServ.cxx. Public Member Functions;  TProofServInputHandler (TProofServ *s, Int_t fd);  ; Bool_t Notify () override;  Handle this input. ;  ; Bool_t ReadNotify () override;  Notify when something can be read from the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TFileHandler;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system file handler list. ;  ; int GetFd () const;  ; virtual Bool_t HasReadInterest ();  True if handler is interested in read events. ;  ; virtual Bool_t HasWriteInterest ();  True if handler is interested in write events. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsReadReady () const;  ; virtual Bool_t IsWriteReady () const;  ; void Remove () override;  Remove file event handler from system file handler list. ;  ; virtual void ResetReadyMask ();  ; void SetFd (int fd);  ; virtual void SetInterest (Int_t mask);  Set interest mask to 'mask'. ;  ; virtual void SetReadReady ();  ; virtual void SetWriteReady ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t WriteNotify ();  Notify when something can be written to the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofServInputHandler.html:589,inherit,inherited,589,doc/master/classTProofServInputHandler.html,https://root.cern,https://root.cern/doc/master/classTProofServInputHandler.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProofServInterruptHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TProofServInterruptHandler Class Reference. . Definition at line 173 of file TProofServ.cxx. Public Member Functions;  TProofServInterruptHandler (TProofServ *s);  ; Bool_t Notify () override;  Handle this interrupt. ;  ;  Public Member Functions inherited from TSignalHandler;  TSignalHandler (ESignals sig, Bool_t sync=kTRUE);  Create signal event handler. ;  ; virtual ~TSignalHandler ();  ; void Add () override;  Add signal handler to system signal handler list. ;  ; void Delay ();  ; ESignals GetSignal () const;  ; void HandleDelayedSignal ();  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove signal handler from system signal handler list. ;  ; void SetSignal (ESignals sig);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofServInterruptHandler.html:474,inherit,inherited,474,doc/master/classTProofServInterruptHandler.html,https://root.cern,https://root.cern/doc/master/classTProofServInterruptHandler.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProofServLiteInputHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TProofServLiteInputHandler Class Reference. . Definition at line 160 of file TProofServLite.cxx. Public Member Functions;  TProofServLiteInputHandler (TProofServLite *s, Int_t fd);  ; Bool_t Notify () override;  Handle input on the socket. ;  ; Bool_t ReadNotify () override;  Notify when something can be read from the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TFileHandler;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system file handler list. ;  ; int GetFd () const;  ; virtual Bool_t HasReadInterest ();  True if handler is interested in read events. ;  ; virtual Bool_t HasWriteInterest ();  True if handler is interested in write events. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsReadReady () const;  ; virtual Bool_t IsWriteReady () const;  ; void Remove () override;  Remove file event handler from system file handler list. ;  ; virtual void ResetReadyMask ();  ; void SetFd (int fd);  ; virtual void SetInterest (Int_t mask);  Set interest mask to 'mask'. ;  ; virtual void SetReadReady ();  ; virtual void SetWriteReady ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t WriteNotify ();  Notify when something can be written to the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofServLiteInputHandler.html:618,inherit,inherited,618,doc/master/classTProofServLiteInputHandler.html,https://root.cern,https://root.cern/doc/master/classTProofServLiteInputHandler.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProofServLiteInterruptHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TProofServLiteInterruptHandler Class Reference. . Definition at line 72 of file TProofServLite.cxx. Public Member Functions;  TProofServLiteInterruptHandler (TProofServLite *s);  ; Bool_t Notify () override;  Handle urgent data. ;  ;  Public Member Functions inherited from TSignalHandler;  TSignalHandler (ESignals sig, Bool_t sync=kTRUE);  Create signal event handler. ;  ; virtual ~TSignalHandler ();  ; void Add () override;  Add signal handler to system signal handler list. ;  ; void Delay ();  ; ESignals GetSignal () const;  ; void HandleDelayedSignal ();  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove signal handler from system signal handler list. ;  ; void SetSignal (ESignals sig);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html:490,inherit,inherited,490,doc/master/classTProofServLiteInterruptHandler.html,https://root.cern,https://root.cern/doc/master/classTProofServLiteInterruptHandler.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProofServLiteSegViolationHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TProofServLiteSegViolationHandler Class Reference. . Definition at line 137 of file TProofServLite.cxx. Public Member Functions;  TProofServLiteSegViolationHandler (TProofServLite *s);  ; Bool_t Notify () override;  Handle seg violation. ;  ;  Public Member Functions inherited from TSignalHandler;  TSignalHandler (ESignals sig, Bool_t sync=kTRUE);  Create signal event handler. ;  ; virtual ~TSignalHandler ();  ; void Add () override;  Add signal handler to system signal handler list. ;  ; void Delay ();  ; ESignals GetSignal () const;  ; void HandleDelayedSignal ();  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove signal handler from system signal handler list. ;  ; void SetSignal (ESignals sig);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html:502,inherit,inherited,502,doc/master/classTProofServLiteSegViolationHandler.html,https://root.cern,https://root.cern/doc/master/classTProofServLiteSegViolationHandler.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProofServLiteSigPipeHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TProofServLiteSigPipeHandler Class Reference. . Definition at line 95 of file TProofServLite.cxx. Public Member Functions;  TProofServLiteSigPipeHandler (TProofServLite *s);  ; Bool_t Notify () override;  Handle sig pipe. ;  ;  Public Member Functions inherited from TSignalHandler;  TSignalHandler (ESignals sig, Bool_t sync=kTRUE);  Create signal event handler. ;  ; virtual ~TSignalHandler ();  ; void Add () override;  Add signal handler to system signal handler list. ;  ; void Delay ();  ; ESignals GetSignal () const;  ; void HandleDelayedSignal ();  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove signal handler from system signal handler list. ;  ; void SetSignal (ESignals sig);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html:481,inherit,inherited,481,doc/master/classTProofServLiteSigPipeHandler.html,https://root.cern,https://root.cern/doc/master/classTProofServLiteSigPipeHandler.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProofServLiteTerminationHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TProofServLiteTerminationHandler Class Reference. . Definition at line 115 of file TProofServLite.cxx. Public Member Functions;  TProofServLiteTerminationHandler (TProofServLite *s);  ; Bool_t Notify () override;  Handle termination. ;  ;  Public Member Functions inherited from TSignalHandler;  TSignalHandler (ESignals sig, Bool_t sync=kTRUE);  Create signal event handler. ;  ; virtual ~TSignalHandler ();  ; void Add () override;  Add signal handler to system signal handler list. ;  ; void Delay ();  ; ESignals GetSignal () const;  ; void HandleDelayedSignal ();  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove signal handler from system signal handler list. ;  ; void SetSignal (ESignals sig);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void Abst",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofServLiteTerminationHandler.html:497,inherit,inherited,497,doc/master/classTProofServLiteTerminationHandler.html,https://root.cern,https://root.cern/doc/master/classTProofServLiteTerminationHandler.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProofServLogHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TProofServLogHandler Class Reference. . Definition at line 375 of file TProofServ.h. Public Types; enum  EStatusBits { kFileIsPipe = (1ULL << ( 23 )); };  ;  Public Types inherited from TFileHandler; enum  { kRead = 1; , kWrite = 2; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TProofServLogHandler (const char *cmd, TSocket *s, const char *pfx="""");  Execute 'cmd' in a pipe and handle output messages from the related file. ;  ;  TProofServLogHandler (FILE *f, TSocket *s, const char *pfx="""");  Handle available message from the open file 'f'. ;  ;  ~TProofServLogHandler () override;  Handle available message in the open file. ;  ; Bool_t IsValid ();  ; Bool_t Notify () override;  Handle available message in the open file. ;  ; Bool_t ReadNotify () override;  Notify when something can be read from the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TFileHandler;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system fil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofServLogHandler.html:471,inherit,inherited,471,doc/master/classTProofServLogHandler.html,https://root.cern,https://root.cern/doc/master/classTProofServLogHandler.html,2,['inherit'],['inherited']
Modifiability,". ROOT: TProofServSigPipeHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TProofServSigPipeHandler Class Reference. . Definition at line 196 of file TProofServ.cxx. Public Member Functions;  TProofServSigPipeHandler (TProofServ *s);  ; Bool_t Notify () override;  Handle this signal. ;  ;  Public Member Functions inherited from TSignalHandler;  TSignalHandler (ESignals sig, Bool_t sync=kTRUE);  Create signal event handler. ;  ; virtual ~TSignalHandler ();  ; void Add () override;  Add signal handler to system signal handler list. ;  ; void Delay ();  ; ESignals GetSignal () const;  ; void HandleDelayedSignal ();  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove signal handler from system signal handler list. ;  ; void SetSignal (ESignals sig);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofServSigPipeHandler.html:465,inherit,inherited,465,doc/master/classTProofServSigPipeHandler.html,https://root.cern,https://root.cern/doc/master/classTProofServSigPipeHandler.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProofServTerminationHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TProofServTerminationHandler Class Reference. . Definition at line 152 of file TProofServ.cxx. Public Member Functions;  TProofServTerminationHandler (TProofServ *s);  ; Bool_t Notify () override;  Handle this interrupt. ;  ;  Public Member Functions inherited from TSignalHandler;  TSignalHandler (ESignals sig, Bool_t sync=kTRUE);  Create signal event handler. ;  ; virtual ~TSignalHandler ();  ; void Add () override;  Add signal handler to system signal handler list. ;  ; void Delay ();  ; ESignals GetSignal () const;  ; void HandleDelayedSignal ();  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove signal handler from system signal handler list. ;  ; void SetSignal (ESignals sig);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofServTerminationHandler.html:480,inherit,inherited,480,doc/master/classTProofServTerminationHandler.html,https://root.cern,https://root.cern/doc/master/classTProofServTerminationHandler.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TProofVectorContainer< T > Class Template Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TProofVectorContainer< T > Class Template Reference. ; template<typename T>; class TProofVectorContainer< T >; Definition at line 239 of file TProofDraw.h. Public Member Functions;  TProofVectorContainer ();  ;  TProofVectorContainer (std::vector< T > *anVector);  ;  ~TProofVectorContainer () override;  ; std::vector< T > * GetVector () const;  ; TClass * IsA () const override;  ; Long64_t Merge (TCollection *list);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const overr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofVectorContainer.html:862,inherit,inherited,862,doc/master/classTProofVectorContainer.html,https://root.cern,https://root.cern/doc/master/classTProofVectorContainer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TQClass Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Friends |; List of all members ; TQClass Class Reference. . Definition at line 33 of file TQClass.h. Public Member Functions;  TQClass (const char *name, Version_t cversion, const std::type_info &info, TVirtualIsAProxy *isa, const char *dfil=nullptr, const char *ifil=nullptr, Int_t dl=0, Int_t il=0);  ; virtual ~TQClass ();  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TQObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single parameter. ;  ; template<typename... T> ; void EmitVA (const char *signal_name, Int_t, const T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of si",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQClass.html:758,inherit,inherited,758,doc/master/classTQClass.html,https://root.cern,https://root.cern/doc/master/classTQClass.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TQConnectionList Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TQConnectionList Class Reference. ; TQConnectionList is the named list of connections, see also TQConnection class. ; Definition at line 309 of file TQObject.cxx. Public Member Functions;  TQConnectionList (const char *name, Int_t nsigargs);  ; virtual ~TQConnectionList ();  Destructor. ;  ; Bool_t Disconnect (void *receiver=nullptr, const char *slot_name=nullptr);  Remove connection from the list. ;  ; Int_t GetNargs () const;  ; void ls (Option_t *option="""") const override;  List signal name and list all connections in this signal list. ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; void AddAfter (const TObject *after, TObject *obj) override;  Insert object after object after in the list. ;  ; virtual void AddAfter (TObjLink *after, TObject *obj);  Insert object after the specified ObjLink object. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Insert object at position idx in the list. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  Insert object before object before in the list. ;  ; virtual void AddBefore (TObjLink *before, TObject *obj);  Insert object before the specified ObjLink object. ;  ; void AddFirst (TObject *obj) override;  Add object at the beginning of the list. ;  ; virtual void AddFirst (TObject *obj, Option_t *opt);  Add object at the beginning of the list and also store option. ;  ; void AddLast (TObject *obj) override;  Add object at the end of the list. ;  ; virtual void AddLast (TObject *obj, Option_t *opt);  Add object at the end of the list and also s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQConnectionList.html:792,inherit,inherited,792,doc/master/classTQConnectionList.html,https://root.cern,https://root.cern/doc/master/classTQConnectionList.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TQObjSender Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TQObjSender Class Reference. . Definition at line 233 of file TQObject.h. Public Member Functions;  TQObjSender ();  ; virtual ~TQObjSender ();  ; TClass * IsA () const override;  ; virtual void SetSender (void *sender);  ; void SetSenderClassName (const char *sclass="""");  ; void Streamer (TBuffer &) override;  Stream an object of class TQObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TQObject;  TQObject ();  TQObject Constructor. ;  ; virtual ~TQObject ();  TQObject Destructor. ;  ; Bool_t AreSignalsBlocked () const;  ; Bool_t BlockSignals (Bool_t b);  ; virtual void ChangedBy (const char *method);  ; void CollectClassSignalLists (TList &list, TClass *cls);  Collect class signal lists from class cls and all its base-classes. ;  ; Bool_t Connect (const char *signal, const char *receiver_class, void *receiver, const char *slot);  Non-static method is used to connect from the signal of this object to the receiver slot. ;  ; virtual void Connected (const char *);  ; virtual void Destroyed ();  ; Bool_t Disconnect (const char *signal=nullptr, void *receiver=nullptr, const char *slot=nullptr);  Disconnects signal of this object from slot of receiver. ;  ; virtual void Disconnected (const char *);  ; void Emit (const char *signal);  Activate signal without args. ;  ; template<typename T > ; void Emit (const char *signal, const T &arg);  Activate signal with single parameter. ;  ; template<typename... T> ; void EmitVA (const char *signal_name, Int_t, const T &... params);  Emit a signal with a varying number of arguments. ;  ; TList * GetListOfClassSignals () const;  Returns pointer to list of signals of",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQObjSender.html:750,inherit,inherited,750,doc/master/classTQObjSender.html,https://root.cern,https://root.cern/doc/master/classTQObjSender.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TQpLinSolverBase Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; List of all members ; TQpLinSolverBase Class Referenceabstract. ; Implementation of main solver for linear systems. ; Definition at line 66 of file TQpLinSolverBase.h. Public Member Functions;  TQpLinSolverBase ();  Default constructor. ;  ;  TQpLinSolverBase (const TQpLinSolverBase &another);  Copy constructor. ;  ;  TQpLinSolverBase (TQpProbBase *factory, TQpDataBase *data);  Constructor. ;  ;  ~TQpLinSolverBase () override;  ; virtual void ComputeDiagonals (TVectorD &dd, TVectorD &omega, TVectorD &t, TVectorD &lambda, TVectorD &u, TVectorD &pi, TVectorD &v, TVectorD &gamma, TVectorD &w, TVectorD &phi);  Computes the diagonal matrices in the augmented system from the current set of variables. ;  ; virtual void Factor (TQpDataBase *prob, TQpVar *vars);  Sets up the matrix for the main linear system in ""augmented system"" form. ;  ; virtual void JoinRHS (TVectorD &rhs, TVectorD &rhs1, TVectorD &rhs2, TVectorD &rhs3);  Assembles a single vector object from three given vectors . ;  ; TQpLinSolverBase & operator= (const TQpLinSolverBase &source);  Assignment operator. ;  ; virtual void PutXDiagonal (TVectorD &xdiag)=0;  ; virtual void PutZDiagonal (TVectorD &zdiag)=0;  ; virtual void SeparateVars (TVectorD &vars1, TVectorD &vars2, TVectorD &vars3, TVectorD &vars);  Extracts three component vectors from a given aggregated vector. ;  ; virtual void Solve (TQpDataBase *prob, TQpVar *vars, TQpResidual *resids, TQpVar *step);  Solves the system for a given set of residuals. ;  ; virtual void SolveCompressed (TVectorD &rhs)=0;  ; virtual void SolveXYZS (TVectorD &stepx, TVectorD &stepy, TVectorD &stepz, TVectorD &steps, TVectorD &ztemp, TQpDataBase *data);  Assemble right-hand side of augmented system and call SolveCompressed to solve it. ;  ;  Public Member Functions inherited from ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQpLinSolverBase.html:890,variab,variables,890,doc/master/classTQpLinSolverBase.html,https://root.cern,https://root.cern/doc/master/classTQpLinSolverBase.html,1,['variab'],['variables']
Modifiability,". ROOT: TQpVar Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Public Attributes |; Static Protected Member Functions |; Protected Attributes |; List of all members ; TQpVar Class Reference. ; Class containing the variables for the general QP formulation. ; In terms of in our abstract problem formulation, these variables are the vectors x, y, z and s. ; Definition at line 59 of file TQpVar.h. Public Types; enum  EVarBlock { ;   kno_block; , kt_block; , klambda_block; , ku_block; , ;   kpi_block; , kv_block; , kgamma_block; , kw_block; , ;   kphi_block. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TQpVar ();  Default constructor. ;  ;  TQpVar (const TQpVar &another);  Copy constructor. ;  ;  TQpVar (Int_t nx, Int_t my, Int_t mz, TVectorD &ixlow, TVectorD &ixupp, TVectorD &iclow, TVectorD &icupp);  Constructor. ;  ;  TQpVar (TVectorD &x_in, TVectorD &s_in, TVectorD &y_in, TVectorD &z_in, TVectorD &v_in, TVectorD &gamma_in, TVectorD &w_in, TVectorD &phi_in, TVectorD &t_in, TVectorD &lambda_in, TVectorD &u_in, TVectorD &pi_in, TVectorD &ixlow_in, TVectorD &ixupp_in, TVectorD &iclow_in, TVectorD &icupp_in);  Constructor. ;  ;  ~TQpVar () override;  ; virtual Double_t FindBlocking (TQpVar *step, Double_t &primalValue, Double_t &primalStep, Double",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQpVar.html:330,variab,variables,330,doc/master/classTQpVar.html,https://root.cern,https://root.cern/doc/master/classTQpVar.html,3,"['inherit', 'variab']","['inherited', 'variables']"
Modifiability,". ROOT: TQt5Timer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; TQt5Timer Class ReferenceWeb Display » QT5 Web Display. . Definition at line 70 of file rootqt5.cpp. Public Member Functions;  TQt5Timer (Long_t milliSec, Bool_t mode);  ; void Timeout () override;  timeout handler used to process all qt5 events in main ROOT thread ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Star",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQt5Timer.html:484,inherit,inherited,484,doc/master/classTQt5Timer.html,https://root.cern,https://root.cern/doc/master/classTQt5Timer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TQt6Timer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; TQt6Timer Class ReferenceWeb Display » QT6 Web Display. . Definition at line 49 of file rootqt6.cpp. Public Member Functions;  TQt6Timer (Long_t milliSec, Bool_t mode);  ; void Timeout () override;  timeout handler used to process all qt6 events in main ROOT thread ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Star",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQt6Timer.html:484,inherit,inherited,484,doc/master/classTQt6Timer.html,https://root.cern,https://root.cern/doc/master/classTQt6Timer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TQueryDescription Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; TQueryDescription Class Reference. . Definition at line 82 of file TSessionViewer.h. Public Types; enum  ESessionQueryStatus { ;   kSessionQueryAborted = 0; , kSessionQuerySubmitted; , kSessionQueryRunning; , kSessionQueryStopped; , ;   kSessionQueryCompleted; , kSessionQueryFinalized; , kSessionQueryCreated; , kSessionQueryFromProof. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions; const char * GetName () const override;  Returns name of object. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse ob",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQueryDescription.html:624,inherit,inherited,624,doc/master/classTQueryDescription.html,https://root.cern,https://root.cern/doc/master/classTQueryDescription.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TQueryResult Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Friends |; List of all members ; TQueryResult Class ReferenceTree Library. ; A container class for query results. ; Definition at line 41 of file TQueryResult.h. Public Types; enum  EQueryStatus { ;   kAborted = 0; , kSubmitted; , kRunning; , kStopped; , ;   kCompleted. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TQueryResult ();  ;  ~TQueryResult () override;  Destructor. ;  ; void Browse (TBrowser *b=nullptr) override;  To support browsing of the results. ;  ; Long64_t GetBytes () const;  ; TDatime GetEndTime () const;  ; Long64_t GetEntries () const;  ; Long64_t GetFirst () const;  ; Float_t GetInitTime () const;  ; TList * GetInputList ();  ; TObject * GetInputObject (const char *classname) const;  Return first instance of class 'classname' in the input list. ;  ; const char * GetLibList () const;  ; TMacro * GetLogFile () const;  ; Float_t GetMergeTime () const;  ; Int_t GetNumMergers () const;  ; Int_t GetNumWrks () const;  ; const char * GetOptions () const;  ; TList * GetOutputList ();  ; const char * GetParList () const;  ; Float_t GetPrepTime () const;  ; Float_t GetProcTime ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQueryResult.html:564,inherit,inherited,564,doc/master/classTQueryResult.html,https://root.cern,https://root.cern/doc/master/classTQueryResult.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TRWLock Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TRWLock Class Reference. . Definition at line 31 of file TRWLock.h. Public Member Functions;  TRWLock ();  Create reader/write lock. ;  ; virtual ~TRWLock ();  ; TClass * IsA () const override;  ; Int_t ReadLock ();  Obtain a reader lock. Returns always 0. ;  ; Int_t ReadUnLock ();  Unlock reader lock. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t WriteLock ();  Obtain a writer lock. Returns always 0. ;  ; Int_t WriteUnLock ();  Unlock writer lock. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRWLock.html:860,inherit,inherited,860,doc/master/classTRWLock.html,https://root.cern,https://root.cern/doc/master/classTRWLock.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TRadialGradient Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TRadialGradient Class Reference. . Definition at line 124 of file TColorGradient.h. Public Types; enum  EGradientType { kSimple; , kExtended; };  ;  Public Types inherited from TColorGradient; enum  ECoordinateMode { kPadMode; , kObjectBoundingMode; };  ; typedef std::vector< Color_t >::size_type SizeType_t;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TRadialGradient ();  ; const Point & GetCenter () const;  Get center. ;  ; const Point & GetEnd () const;  Get end. ;  ; EGradientType GetGradientType () const;  Get gradient type. ;  ; Double_t GetR1 () const;  ; Double_t GetR2 () const;  Get R2. ;  ; Double_t GetRadius () const;  Get radius. ;  ; const Point & GetStart () const;  Get start. ;  ; TClass * IsA () const override;  ; void SetRadialGradient (const Point &center, Double_t radius);  Set radial gradient. ;  ; void SetStartEndR1R2 (const Point &p1, Double_t r1, const Point &p2, Double_t r2);  Set start and end R1 and R2. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  TColorGradient ();  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRadialGradient.html:428,inherit,inherited,428,doc/master/classTRadialGradient.html,https://root.cern,https://root.cern/doc/master/classTRadialGradient.html,2,['inherit'],['inherited']
Modifiability,". ROOT: TRealData Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TRealData Class Reference. ; The TRealData class manages the effective list of all data members for a given class. ; For example for an object of class TLine that inherits from TObject and TAttLine, the TRealData object for a line contains the complete list of all data members of the 3 classes.; The list of TRealData members in TClass is built when functions like object.Inspect or object.DrawClass are called. ; Definition at line 30 of file TRealData.h. Public Types; enum  EStatusBits { kTransient = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TRealData ();  RealData default constructor. ;  ;  TRealData (const char *name, Long_t offset, TDataMember *datamember);  Constructor to define one persistent data member. ;  ; virtual ~TRealData ();  RealData default destructor. ;  ; void AdoptStreamer (TMemberStreamer *p);  ; TDataMember * GetDataMember () const;  ; const char * GetName () const override;  Returns name of object. ;  ; TMemberStreamer * GetStreamer () const;  Return the associate streamer object. ;  ; Long_t GetThisOffset () const;  ; TClass * IsA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRealData.html:451,inherit,inherits,451,doc/master/classTRealData.html,https://root.cern,https://root.cern/doc/master/classTRealData.html,2,['inherit'],"['inherited', 'inherits']"
Modifiability,". ROOT: TReaperTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TReaperTimer Class Reference. . Definition at line 429 of file TProofServ.h. Public Member Functions;  TReaperTimer (Long_t frequency=1000);  ;  ~TReaperTimer () override;  Destructor. ;  ; void AddPid (Int_t pid);  Add an entry for 'pid' in the internal list. ;  ; Bool_t Notify () override;  Check if any of the registered children has changed its state. ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTReaperTimer.html:600,inherit,inherited,600,doc/master/classTReaperTimer.html,https://root.cern,https://root.cern/doc/master/classTReaperTimer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TRecCmdEvent Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TRecCmdEvent Class ReferenceGUI » Events recorder. ; Class used for storing information about 1 commandline event. ; It means 1 command typed in by user in the commandline, e.g 'new TCanvas'. ; Definition at line 91 of file TRecorder.h. Public Member Functions;  TRecCmdEvent ();  ; const char * GetText () const;  ; ERecEventType GetType () const override;  ; TClass * IsA () const override;  ; void ReplayEvent (Bool_t) override;  ; void SetText (const char *text);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TRecEvent; virtual TTime GetTime () const;  ; TClass * IsA () const override;  ; virtual void SetTime (TTime t);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRecCmdEvent.html:885,inherit,inherited,885,doc/master/classTRecCmdEvent.html,https://root.cern,https://root.cern/doc/master/classTRecCmdEvent.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TRecEvent Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TRecEvent Class ReferenceabstractGUI » Events recorder. ; Abstract class that defines interface for a class storing information about 1 ROOT event. ; Time of event is stored and this event can be replayed. Classes TRecCmdEvent and TRecGuiEvent implements this interface for command line and GUI events respectively. ; Definition at line 48 of file TRecorder.h. Public Types; enum  ERecEventType { kCmdEvent; , kGuiEvent; , kExtraEvent; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions; virtual TTime GetTime () const;  ; virtual ERecEventType GetType () const =0;  ; TClass * IsA () const override;  ; virtual void ReplayEvent (Bool_t showMouseCursor=kTRUE)=0;  ; virtual void SetTime (TTime t);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abst",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRecEvent.html:716,inherit,inherited,716,doc/master/classTRecEvent.html,https://root.cern,https://root.cern/doc/master/classTRecEvent.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TRecExtraEvent Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TRecExtraEvent Class ReferenceGUI » Events recorder. ; class TRecExtraEvent ; Class used for storing information about 1 extra event. It means 1 TPaveLabel or 1 TLatex event produced in the Canvas ; Definition at line 136 of file TRecorder.h. Public Member Functions;  TRecExtraEvent ();  ; TString GetText () const;  ; ERecEventType GetType () const override;  ; TClass * IsA () const override;  ; void ReplayEvent (Bool_t) override;  ; void SetText (TString text);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TRecEvent; virtual TTime GetTime () const;  ; virtual void SetTime (TTime t);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facilit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRecExtraEvent.html:886,inherit,inherited,886,doc/master/classTRecExtraEvent.html,https://root.cern,https://root.cern/doc/master/classTRecExtraEvent.html,2,['inherit'],['inherited']
Modifiability,". ROOT: TRecGuiEvent Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Friends |; List of all members ; TRecGuiEvent Class ReferenceGUI » Events recorder. ; class TRecGuiEvent ; Class used for storing information about 1 GUI event in ROOT. For list of possible GUI events see EGEventType. ; Definition at line 180 of file TRecorder.h. Public Types; enum  EConfigureNotifyType { kCNMove = 0; , kCNResize = 1; , kCNMoveResize = 2; , kCNFilter = 3; };  ; enum  ERootAtoms { kWM_DELETE_WINDOW = 10001; , kROOT_MESSAGE = 10002; };  ;  Public Types inherited from TRecEvent; enum  ERecEventType { kCmdEvent; , kGuiEvent; , kExtraEvent; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions; ERecEventType GetType () const override;  ; TClass * IsA () const override;  ; void ReplayEvent (Bool_t showMouseCursor=kTRUE) override;  Replays stored GUI event. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TRecEvent; virtual TTime GetTime () const;  ; virtual void SetTime (TTime t);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherite",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRecGuiEvent.html:715,inherit,inherited,715,doc/master/classTRecGuiEvent.html,https://root.cern,https://root.cern/doc/master/classTRecGuiEvent.html,2,['inherit'],['inherited']
Modifiability,". ROOT: TRecWinPair Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Friends |; List of all members ; TRecWinPair Class ReferenceGUI » Events recorder. ; Class used for storing of window IDs mapping. ; Remapping of window IDs is needed for replaying events.; ID of original window is stored in fKey.; ID of a new window is stored in fValue. Whenever an event is replayed, its referenced window ID is changed from original to a new one according to the appropriate mapping. ; Definition at line 249 of file TRecorder.h. Public Member Functions;  TRecWinPair (Window_t key, Window_t value);  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &obje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRecWinPair.html:951,inherit,inherited,951,doc/master/classTRecWinPair.html,https://root.cern,https://root.cern/doc/master/classTRecWinPair.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TRepeatTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TRepeatTimer Class Reference. . Definition at line 1866 of file TGNumberEntry.cxx. Public Member Functions;  TRepeatTimer (TGRepeatFireButton *button, Long_t ms);  ; Bool_t Notify () override;  Notify when timer times out and reset the timer. ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void St",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRepeatTimer.html:486,inherit,inherited,486,doc/master/classTRepeatTimer.html,https://root.cern,https://root.cern/doc/master/classTRepeatTimer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TRootBrowser Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TRootBrowser Class ReferenceGUI » Low level GUI widgets. ; This class creates a ROOT object browser, constituted by three main tabs. ; All tabs can 'swallow' frames, thanks to the new method: ExecPlugin(const char *name = 0, const char *fname = 0, const char *cmd = 0, Int_t pos = kRight, Int_t subpos = -1) allowing to select plugins (can be a macro or a command) to be executed, and where to embed the frame created by the plugin (tab and tab element). Examples:; create a new browser:; TBrowser b;; b#define b(i)Definition RSha256.hxx:100; TBrowserUsing a TBrowser one can browse all ROOT objects.Definition TBrowser.h:37; create a new TCanvas in a new top right tab element:; b.ExecPlugin(""Canvas"", 0, ""new TCanvas()"");; create a new top right tab element embedding the TGMainFrame created by the macro 'myMacro.C':; b.ExecPlugin(""MyPlugin"", ""myMacro.C"");; create a new bottom tab element embedding the TGMainFrame created by the macro 'myMacro.C':; b.ExecPlugin(""MyPlugin"", ""myMacro.C"", 0, TRootBrowser::kBottom);; TRootBrowser::kBottom@ kBottomDefinition TRootBrowser.h:121; this browser implementation can be selected via the env Browser.Name in .rootrc, (TRootBrowser or TRootBrowserLite) the default being TRootBrowserLite a list of options (plugins) for the new TRootBrowser is also specified via the env 'Browser.Options' in .rootrc, the default being: FECI; Here is the list of available options:; F: File browser; E: Text Editor; H: HTML browser C: Canvas I: I/O redirection; P: Proof; G: GL viewer . Definition at line 54 of file TRootBrowser.h. Public Types; enum  EInsertPosition { kLeft; , kRight; , kBottom; };  ; enum  ENewBrowserMessages { ;   kBrowse = 11011; , kOpenFile; , kClone; , kH",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootBrowser.html:620,plugin,plugins,620,doc/master/classTRootBrowser.html,https://root.cern,https://root.cern/doc/master/classTRootBrowser.html,2,['plugin'],"['plugin', 'plugins']"
Modifiability,". ROOT: TRootBrowserHistory Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; TRootBrowserHistory Class Reference. . Definition at line 192 of file TRootBrowserLite.cxx. Public Member Functions; void DeleteItem (TGListTreeItem *item);  ; void RecursiveRemove (TObject *obj) override;  Remove object from this collection and recursively remove the object from all other objects (and collections). ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; void AddAfter (const TObject *after, TObject *obj) override;  Insert object after object after in the list. ;  ; virtual void AddAfter (TObjLink *after, TObject *obj);  Insert object after the specified ObjLink object. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Insert object at position idx in the list. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  Insert object before object before in the list. ;  ; virtual void AddBefore (TObjLink *before, TObject *obj);  Insert object before the specified ObjLink object. ;  ; void AddFirst (TObject *obj) override;  Add object at the beginning of the list. ;  ; virtual void AddFirst (TObject *obj, Option_t *opt);  Add object at the beginning of the list and also store option. ;  ; void AddLast (TObject *obj) override;  Add object at the end of the list. ;  ; virtual void AddLast (TObject *obj, Option_t *opt);  Add object at the end of the list and also store option. ;  ; TObject * After (const TObject *obj) const override;  Returns the object after object obj. ;  ; TObject * At (Int_t idx) const override;  Returns the object at position idx. Returns 0 if idx is out of range. ;  ; TObject * Befor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootBrowserHistory.html:546,inherit,inherited,546,doc/master/classTRootBrowserHistory.html,https://root.cern,https://root.cern/doc/master/classTRootBrowserHistory.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TRootBrowserHistoryCursor Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; TRootBrowserHistoryCursor Class Reference. . Definition at line 182 of file TRootBrowserLite.cxx. Public Member Functions;  TRootBrowserHistoryCursor (TGListTreeItem *item);  ; void Print (Option_t *) const override;  This method must be overridden when a class wants to print itself. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootBrowserHistoryCursor.html:540,inherit,inherited,540,doc/master/classTRootBrowserHistoryCursor.html,https://root.cern,https://root.cern/doc/master/classTRootBrowserHistoryCursor.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TRootIconList Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TRootIconList Class Reference. . Definition at line 334 of file TRootBrowserLite.cxx. Public Member Functions;  TRootIconList (TRootIconBox *box=nullptr);  constructor ;  ;  ~TRootIconList () override;  destructor ;  ; void Browse (TBrowser *b) override;  browse icon list ;  ; const TGPicture * GetPicture () const;  ; const char * GetTitle () const override;  Returns title of object. ;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ; void UpdateName ();  composite name ;  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the default constructor TList ()."") ;  ;  TList (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; void AddAfter (const TObject *after, TObject *obj) override;  Insert object after object after in the list. ;  ; virtual void AddAfter (TObjLink *after, TObject *obj);  Insert object after the specified ObjLink object. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Insert object at position idx in the list. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  Insert object before object before in the list. ;  ; virtual void AddBefore (TObjLink *before, TObject *obj);  Insert object before the specified ObjLink object. ;  ; void AddFirst (TObject *obj) override;  Add object at the beginning of the list. ;  ; virtual void AddFirst (TObject *obj, Option_t *opt);  Add object at the beginning of the list and also store option. ;  ; void AddLast (TObject *obj) override;  Add object at the end of the list. ;  ; virtual void AddLast (TObject *obj, Option_t *opt);  Add object at the end ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootIconList.html:814,inherit,inherited,814,doc/master/classTRootIconList.html,https://root.cern,https://root.cern/doc/master/classTRootIconList.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TRootSniffer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Types |; List of all members ; TRootSniffer Class ReferenceHTTP server. ; Sniffer of ROOT objects, data provider for THttpServer. ; Provides methods to scan different structures like folders, directories, files and collections. Can locate objects (or its data member) per name. Can be extended to application-specific classes.; Normally TRootSnifferFull class is used which able to access data from trees, canvases, histograms. ; Definition at line 115 of file TRootSniffer.h. Public Member Functions;  TRootSniffer (const char *name=""sniff"", const char *objpath=""Objects"");  constructor ;  ; virtual ~TRootSniffer ();  destructor ;  ; Bool_t CanDrawItem (const char *path);  Method verifies if object can be drawn. ;  ; Bool_t CanExploreItem (const char *path);  Method returns true when object has childs or one could try to expand item. ;  ; Int_t CheckRestriction (const char *item_name);  Checked if restriction is applied to the item full_item_name should have full path to the item. ;  ; Bool_t CreateItem (const char *fullname, const char *title);  Create item element. ;  ; void CreateOwnTopFolder ();  Create own TFolder structures independent from gROOT This allows to have many independent TRootSniffer instances At the same time such sniffer lost access to all global lists and folders. ;  ; virtual void * FindInHierarchy (const char *path, TClass **cl=nullptr, TDataMember **member=nullptr, Int_t *chld=nullptr);  Search element with specified path Returns pointer on element Optionally one could obtain element class, member description and number of childs. ;  ; TObject * FindTObjectInHierarchy (const char *path);  Search element in hierarchy, derived from TObject. ;  ; const char * GetAutoLoad () const;  return nam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootSniffer.html:550,extend,extended,550,doc/master/classTRootSniffer.html,https://root.cern,https://root.cern/doc/master/classTRootSniffer.html,1,['extend'],['extended']
Modifiability,". ROOT: TRotMatrix Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TRotMatrix Class ReferenceGraphics » 3D Graphics » Basic 3D graphics. ; Manages a detector rotation matrix. ; See class TGeometry. ; Definition at line 28 of file TRotMatrix.h. Public Types; enum  { kReflection = (1ULL << ( 23 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TRotMatrix ();  RotMatrix default constructor. ;  ;  TRotMatrix (const char *name, const char *title, Double_t *matrix);  RotMatrix normal constructor. ;  ;  TRotMatrix (const char *name, const char *title, Double_t theta, Double_t phi, Double_t psi);  RotMatrix normal constructor. ;  ;  TRotMatrix (const char *name, const char *title, Double_t theta1, Double_t phi1, Double_t theta2, Double_t phi2, Double_t theta3, Double_t phi3);  RotMatrix normal constructor defined a la GEANT. ;  ;  ~TRotMatrix () override;  RotMatrix default destructor. ;  ; virtual Double_t Determinant () const;  Returns the value of the determinant of this matrix. ;  ; virtual Double_t * GetGLMatrix (Double_t *rGLMatrix) const;  Convert this matrix to the OpenGL [4x4]. ;  ; virtual Double_t * GetMatrix ();  ; virtual Int_t Ge",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRotMatrix.html:542,inherit,inherited,542,doc/master/classTRotMatrix.html,https://root.cern,https://root.cern/doc/master/classTRotMatrix.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TS3HTTPRequest Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Attributes |; List of all members ; TS3HTTPRequest Class Reference. . Definition at line 45 of file TS3HTTPRequest.h. Public Types; enum  EAuthType { kNoAuth; , kAmazon; , kGoogle; };  ; enum  EHTTPVerb { ;   kGET; , kPOST; , kPUT; , kDELETE; , ;   kHEAD; , kCOPY. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TS3HTTPRequest ();  ;  TS3HTTPRequest (const TS3HTTPRequest &m);  Copy constructor. ;  ;  TS3HTTPRequest (EHTTPVerb httpVerb, const TString &host, const TString &bucket, const TString &objectKey, EAuthType authType, const TString &accessKey, const TString &secretKey);  Default constructor. ;  ; virtual ~TS3HTTPRequest ();  ; const TString & GetAccessKey () const;  ; TString GetAuthType () const;  ; const TString & GetBucket () const;  ; const TString & GetHost () const;  ; EHTTPVerb GetHTTPVerb () const;  ; const TString & GetObjectKey () const;  ; TString GetRequest (TS3HTTPRequest::EHTTPVerb httpVerb, Bool_t appendCRLF=kTRUE);  Returns the HTTP request ready to be sent to the server. ;  ; const TString & GetSecretKey () const;  ; const TString & GetTimeStamp () const;  ; TClass * IsA () const o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTS3HTTPRequest.html:544,inherit,inherited,544,doc/master/classTS3HTTPRequest.html,https://root.cern,https://root.cern/doc/master/classTS3HTTPRequest.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TSBRepeatTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TSBRepeatTimer Class Reference. . Definition at line 73 of file TGScrollBar.cxx. Public Member Functions;  TSBRepeatTimer (TGScrollBar *s, Long_t ms, Int_t inc);  ; Int_t GetSmallInc () const;  ; Bool_t Notify () override;  Notify when timer times out and reset the timer. ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSBRepeatTimer.html:518,inherit,inherited,518,doc/master/classTSBRepeatTimer.html,https://root.cern,https://root.cern/doc/master/classTSBRepeatTimer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TSPlot Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TSPlot Class Reference. ; Legacy Code TSPlot is a legacy interface: there will be no bug fixes nor new developments. Therefore it is not recommended to use it in new long-term production code. But, depending on the context, using TSPlot might still be a valid solution. ; A common method used in High Energy Physics to perform measurements is the maximum Likelihood method, exploiting discriminating variables to disentangle signal from background. The crucial point for such an analysis to be reliable is to use an exhaustive list of sources of events combined with an accurate description of all the Probability Density Functions (PDF).; To assess the validity of the fit, a convincing quality check is to explore further the data sample by examining the distributions of control variables. A control variable can be obtained for instance by removing one of the discriminating variables before performing again the maximum Likelihood fit: this removed variable is a control variable. The expected distribution of this control variable, for signal, is to be compared to the one extracted, for signal, from the data sample. In order to be able to do so, one must be able to unfold from the distribution of the whole data sample.; The TSPlot method allows to reconstruct the distributions for the control variable, independently for each of the various sources of events, without making use of any a priori knowledge on this variable. The aim is thus to use the knowledge available for the discriminating variables to infer the behaviour of the individual sources of events with respect to the control variable.; TSPlot is optimal if the control variable is uncorrelated with the discriminating variables.; A detail description o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSPlot.html:673,variab,variables,673,doc/master/classTSPlot.html,https://root.cern,https://root.cern/doc/master/classTSPlot.html,2,['variab'],['variables']
Modifiability,". ROOT: TSQLClassColumnInfo Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TSQLClassColumnInfo Class Referencefinal. . Definition at line 21 of file TSQLClassInfo.h. Public Member Functions;  TSQLClassColumnInfo ();  ;  TSQLClassColumnInfo (const char *name, const char *sqlname, const char *sqltype);  normal constructor ;  ; const char * GetName () const final;  Returns name of object. ;  ; const char * GetSQLName () const;  ; const char * GetSQLType () const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLClassColumnInfo.html:851,inherit,inherited,851,doc/master/classTSQLClassColumnInfo.html,https://root.cern,https://root.cern/doc/master/classTSQLClassColumnInfo.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TSQLColumnData Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; List of all members ; TSQLColumnData Class ReferencefinalInput/Output Library. . Definition at line 37 of file TSQLStructure.h. Public Member Functions;  TSQLColumnData (const char *name, const char *sqltype, const char *value, Bool_t numeric);  normal constructor of TSQLColumnData class specifies name, type and value for one column ;  ;  TSQLColumnData (const char *name, Long64_t value);  constructs TSQLColumnData object for integer column ;  ;  ClassDefOverride (TSQLColumnData, 1);  ; const char * GetName () const final;  Returns name of object. ;  ; const char * GetType () const;  ; const char * GetValue () const;  ; Bool_t IsNumeric () const;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option=",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLColumnData.html:878,inherit,inherited,878,doc/master/classTSQLColumnData.html,https://root.cern,https://root.cern/doc/master/classTSQLColumnData.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TSQLObjectDataPool Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TSQLObjectDataPool Class ReferenceInput/Output Library. ; XML object keeper class. ; Definition at line 108 of file TSQLObjectData.h. Public Member Functions;  TSQLObjectDataPool ();  ;  TSQLObjectDataPool (TSQLClassInfo *info, TSQLResult *data);  ;  ~TSQLObjectDataPool () override;  Destructor of TSQLObjectDataPool class Deletes not used rows and class data table. ;  ; TSQLResult * GetClassData () const;  ; TSQLRow * GetObjectRow (Long64_t objid);  Returns single sql row with object data for that class. ;  ; TSQLClassInfo * GetSqlInfo () const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLObjectDataPool.html:1012,inherit,inherited,1012,doc/master/classTSQLObjectDataPool.html,https://root.cern,https://root.cern/doc/master/classTSQLObjectDataPool.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TSQLObjectInfo Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TSQLObjectInfo Class ReferenceInput/Output Library. ; Info (classname, version) about object in database. ; Definition at line 26 of file TSQLObjectData.h. Public Member Functions;  TSQLObjectInfo ();  ;  TSQLObjectInfo (Long64_t objid, const char *classname, Version_t version);  ;  ~TSQLObjectInfo () override;  ; const char * GetObjClassName () const;  ; Long64_t GetObjId () const;  ; Version_t GetObjVersion () const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLObjectInfo.html:879,inherit,inherited,879,doc/master/classTSQLObjectInfo.html,https://root.cern,https://root.cern/doc/master/classTSQLObjectInfo.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TSQLResult Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TSQLResult Class Referenceabstract. . Definition at line 31 of file TSQLResult.h. Public Member Functions; virtual ~TSQLResult ();  ; virtual void Close (Option_t *option="""")=0;  ; virtual Int_t GetFieldCount ()=0;  ; virtual const char * GetFieldName (Int_t field)=0;  ; virtual Int_t GetRowCount () const;  ; TClass * IsA () const override;  ; virtual TSQLRow * Next ()=0;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoP",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLResult.html:822,inherit,inherited,822,doc/master/classTSQLResult.html,https://root.cern,https://root.cern/doc/master/classTSQLResult.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TSQLRow Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members ; TSQLRow Class Referenceabstract. . Definition at line 30 of file TSQLRow.h. Public Member Functions; virtual ~TSQLRow ();  ; virtual void Close (Option_t *option="""")=0;  ; virtual const char * GetField (Int_t field)=0;  ; virtual ULong_t GetFieldLength (Int_t field)=0;  ; TClass * IsA () const override;  ; const char * operator[] (Int_t field);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLRow.html:767,inherit,inherited,767,doc/master/classTSQLRow.html,https://root.cern,https://root.cern/doc/master/classTSQLRow.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TSQLServer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Static Protected Attributes |; List of all members ; TSQLServer Class Referenceabstract. . Definition at line 41 of file TSQLServer.h. Public Types; enum  ESQLDataTypes { ;   kSQL_NONE = -1; , kSQL_CHAR = 1; , kSQL_VARCHAR = 2; , kSQL_INTEGER = 3; , ;   kSQL_FLOAT = 4; , kSQL_DOUBLE = 5; , kSQL_NUMERIC = 6; , kSQL_BINARY = 7; , ;   kSQL_TIMESTAMP = 8. };  printf argument for floats and doubles, either ""%f"" or ""%e"" or ""%10f"" and so on More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions; virtual ~TSQLServer ();  ; virtual void Close (Option_t *option="""")=0;  ; virtual Bool_t Commit ();  submit ""COMMIT"" query to database return kTRUE, if successful ;  ; virtual Int_t CreateDataBase (const char *dbname)=0;  ; virtual Int_t DropDataBase (const char *dbname)=0;  ; virtual void EnableErrorOutput (Bool_t on=kTRUE);  ; virtual Bool_t Exec (const char *sql);  Execute sql query. ;  ; virtual TSQLResult * GetColumns (const char *dbname, const char *table, const char *wild=nullptr)=0;  ; virtual TSQLResult * GetDataBases (const char *wild=nullptr)=0;  ; const char * GetDB () const;  ; const char * GetDBM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLServer.html:735,inherit,inherited,735,doc/master/classTSQLServer.html,https://root.cern,https://root.cern/doc/master/classTSQLServer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TSQLTableData Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TSQLTableData Class Reference. . Definition at line 59 of file TSQLStructure.h. Public Member Functions;  TSQLTableData (TSQLFile *f=nullptr, TSQLClassInfo *info=nullptr);  normal constructor ;  ;  ~TSQLTableData () override;  destructor ;  ; void AddColumn (const char *name, const char *sqltype, const char *value, Bool_t numeric);  Add normal column to list of columns. ;  ; void AddColumn (const char *name, Long64_t value);  Add INT column to list of columns. ;  ;  ClassDefOverride (TSQLTableData, 1);  ; const char * GetColumn (Int_t n);  return column value ;  ; Int_t GetNumColumns ();  returns number of columns in provided set ;  ; Bool_t IsNumeric (Int_t n);  identifies if column has numeric value ;  ; TObjArray * TakeColInfos ();  take ownership over colinfos ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLTableData.html:1051,inherit,inherited,1051,doc/master/classTSQLTableData.html,https://root.cern,https://root.cern/doc/master/classTSQLTableData.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TScatter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TScatter Class ReferenceHistogram Library » Graph classes. ; A TScatter is able to draw four variables scatter plot on a single plot. ; The two first variables are the x and y position of the markers, the third is mapped on the current color map and the fourth on the marker size.; The following example demonstrates how it works:; ; void scatter(); {; auto canvas = new TCanvas();; canvas->SetRightMargin(0.14);; gStyle->SetPalette(kBird, 0, 0.6); // define a transparent palette; ; const int n = 175;; double x[n];; double y[n];; double c[n];; double s[n];; ; // Define four random data set; auto r = new TRandom();; for (int i=0; i<n; i++) {; x[i] = 100*r->Rndm(i);; y[i] = 200*r->Rndm(i);; c[i] = 300*r->Rndm(i);; s[i] = 400*r->Rndm(i);; }; ; auto scatter = new TScatter(n, x, y, c, s);; scatter->SetMarkerStyle(20);; scatter->SetTitle(""Scatter plot title;X title;Y title;Z title"");; scatter->GetXaxis()->SetRangeUser(20.,90.);; scatter->GetYaxis()->SetRangeUser(55.,90.);; scatter->GetZaxis()->SetRangeUser(10.,200.);; scatter->Draw(""A"");; }; c#define c(i)Definition RSha256.hxx:101; kBird@ kBirdDefinition TColor.h:118; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TCanvasThe Canvas class.Definition TCanvas.h:23; TRandomThis is the base class for the ROOT Random number generators.Definition TRandom.h:27; TScatter::TScatterTScatter()TScatter default constructor.Definition TScatter.cxx:58; TStyle::SetPalettevoid SetPalette(Int_t ncolors=kBird, Int_t *colors=nullptr, Float_t alpha=1.)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTScatter.html:338,variab,variables,338,doc/master/classTScatter.html,https://root.cern,https://root.cern/doc/master/classTScatter.html,2,['variab'],['variables']
Modifiability,". ROOT: TSecContextCleanup Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TSecContextCleanup Class Reference. . Definition at line 108 of file TSecContext.h. Public Member Functions;  TSecContextCleanup (Int_t port, Int_t proto, Int_t type);  ; virtual ~TSecContextCleanup ();  ; Int_t GetPort () const;  ; Int_t GetProtocol () const;  ; Int_t GetType () const;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSecContextCleanup.html:746,inherit,inherited,746,doc/master/classTSecContextCleanup.html,https://root.cern,https://root.cern/doc/master/classTSecContextCleanup.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TServerSocket Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TServerSocket Class Reference. . Definition at line 42 of file TServerSocket.h. Public Types; enum  { kDefaultBacklog = 10; };  ;  Public Types inherited from TSocket; enum  EInterest { kRead = 1; , kWrite = 2; };  ; enum  EServiceType { kSOCKD; , kROOTD; , kPROOFD; };  ; enum  EStatusBits { kIsUnix = (1ULL << ( 16 )); , kBrokenConn = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TServerSocket (const char *service, Bool_t reuse=kFALSE, Int_t backlog=kDefaultBacklog, Int_t tcpwindowsize=-1);  Create a server socket object for a named service. ;  ;  TServerSocket (Int_t port, Bool_t reuse=kFALSE, Int_t backlog=kDefaultBacklog, Int_t tcpwindowsize=-1);  Create a server socket object on a specified port. ;  ; virtual ~TServerSocket ();  Destructor: cleanup authentication stuff (if any) and close. ;  ; virtual TSocket * Accept (UChar_t Opt=0);  Accept a connection on a server socket. ;  ; TInetAddress GetLocalInetAddress () override;  Return internet address of host to which the server socket is bound, i.e. ;  ; Int_t GetLocalP",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTServerSocket.html:465,inherit,inherited,465,doc/master/classTServerSocket.html,https://root.cern,https://root.cern/doc/master/classTServerSocket.html,2,['inherit'],['inherited']
Modifiability,". ROOT: TSessionDescription Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; TSessionDescription Class Reference. . Definition at line 127 of file TSessionViewer.h. Public Member Functions; const char * GetName () const override;  Returns name of object. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSessionDescription.html:638,inherit,inherited,638,doc/master/classTSessionDescription.html,https://root.cern,https://root.cern/doc/master/classTSessionDescription.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TSessionInputFrame Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TSessionInputFrame Class Reference. . Definition at line 488 of file TSessionViewer.h. Public Member Functions;  TSessionInputFrame (TGWindow *parent, Int_t w, Int_t h);  Constructor. ;  ;  ~TSessionInputFrame () override;  Destructor. ;  ; void AddObject (TObject *obj);  Add object to input list view. ;  ; void Build (TSessionViewer *gui);  Build query input information frame. ;  ; TGLVContainer * GetLVContainer ();  ; TClass * IsA () const override;  ; void RemoveAll () override;  Remove all frames from composite frame. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGCompositeFrame;  TGCompositeFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=0, Pixel_t back=GetDefaultFrameBackground());  Create a composite frame. ;  ;  TGCompositeFrame (TGClient *c, Window_t id, const TGWindow *parent=nullptr);  Create a frame using an externally created window. ;  ;  ~TGCompositeFrame () override;  Delete a composite frame. ;  ; virtual void AddFrame (TGFrame *f, TGLayoutHints *l=nullptr);  Add frame to the composite frame using the specified layout hints. ;  ; void ChangeOptions (UInt_t options) override;  Change composite frame options. Options is an OR of the EFrameTypes. ;  ; virtual void ChangeSubframesBackground (Pixel_t back);  Change background color for this frame and all subframes. ;  ; virtual void Cleanup ();  Cleanup and delete all objects contained in this composite frame. ;  ; virtual TGFrameElement * FindFrameElement (TGFrame *f) const;  Find frame-element holding frame f. ;  ; UInt_t GetDefaultHeight () const override;  ; TGDimension GetDefaultSize () ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSessionInputFrame.html:953,inherit,inherited,953,doc/master/classTSessionInputFrame.html,https://root.cern,https://root.cern/doc/master/classTSessionInputFrame.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TSessionServerFrame Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TSessionServerFrame Class Reference. . Definition at line 180 of file TSessionViewer.h. Public Member Functions;  TSessionServerFrame (TGWindow *parent, Int_t w, Int_t h);  Constructor. ;  ;  ~TSessionServerFrame () override;  Destructor. ;  ; void Build (TSessionViewer *gui);  Build server configuration frame. ;  ; const char * GetAddress () const;  ; const char * GetConfigText () const;  ; Int_t GetLogLevel () const;  ; const char * GetName () const override;  Return unique name, used in SavePrimitive methods. ;  ; Int_t GetPortNumber () const;  ; const char * GetUserName () const;  ; Bool_t HandleExpose (Event_t *event) override;  Handle expose event in server frame. ;  ; TClass * IsA () const override;  ; Bool_t IsSync () const;  ; void OnBtnAddClicked ();  Add newly created session configuration in the list of sessions. ;  ; void OnBtnConnectClicked ();  Connect to selected server. ;  ; void OnBtnDeleteClicked ();  Delete selected session configuration (remove it from the list). ;  ; void OnBtnNewServerClicked ();  Reset server configuration fields. ;  ; void OnConfigFileClicked ();  Browse configuration files. ;  ; Bool_t ProcessMessage (Longptr_t msg, Longptr_t parm1, Longptr_t parm2) override;  Process messages for session server frame. ;  ; void SetAddEnabled (Bool_t on=kTRUE);  ; void SetAddress (const char *str);  ; void SetConfigText (const char *str);  ; void SetConnectEnabled (Bool_t on=kTRUE);  ; void SetLogLevel (Int_t log);  ; void SetName (const char *str) override;  ; void SetPortNumber (Int_t port);  ; void SetSync (Bool_t sync);  ; void SettingsChanged ();  Settings have changed, update GUI accordingly. ;  ; void SetUserName (const char *str);  ; void Streamer (TBuffer &) override;  Stream an obje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSessionServerFrame.html:546,config,configuration,546,doc/master/classTSessionServerFrame.html,https://root.cern,https://root.cern/doc/master/classTSessionServerFrame.html,1,['config'],['configuration']
Modifiability,". ROOT: TShutdownTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TShutdownTimer Class Reference. . Definition at line 416 of file TProofServ.h. Public Member Functions;  TShutdownTimer (TProofServ *p, Int_t delay);  Construtor. ;  ; Bool_t Notify () override;  Handle expiration of the shutdown timer. ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Start ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTShutdownTimer.html:482,inherit,inherited,482,doc/master/classTShutdownTimer.html,https://root.cern,https://root.cern/doc/master/classTShutdownTimer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TSingleShotCleaner Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TSingleShotCleaner Class Reference. . Definition at line 54 of file TTimer.cxx. Public Member Functions;  TSingleShotCleaner ();  ; virtual ~TSingleShotCleaner ();  ; Bool_t Notify () override;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ; void TurnOn () override;  Add the timer to the system timer list. ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSingleShotCleaner.html:612,inherit,inherited,612,doc/master/classTSingleShotCleaner.html,https://root.cern,https://root.cern/doc/master/classTSingleShotCleaner.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TSlave Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; Static Private Member Functions |; Static Private Attributes |; Friends |; List of all members ; TSlave Class ReferencePROOF » PROOF kernel Libraries. ; Class describing a PROOF worker server. ; It contains information like the workers host name, ordinal number, performance index, socket, etc. Objects of this class can only be created via TProof member functions. ; Definition at line 46 of file TSlave.h. Public Types; enum  ESlaveStatus { kInvalid; , kActive; , kInactive; };  ; enum  ESlaveType { kMaster; , kSlave; };  ; enum  EStatusBits { kOutputRequested = (1ULL << ( 15 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  ~TSlave () override;  Destroy slave. ;  ; virtual void Close (Option_t *opt="""");  Close slave socket. ;  ; Int_t Compare (const TObject *obj) const override;  Used to sort slaves by performance index. ;  ; const char * GetArchCompiler () const;  ; Long64_t GetBytesRead () const;  ; Float_t GetCpuTime () const;  ; const char * GetGroup () const;  ; const char * GetImage () const;  ; TFileHandler * GetInputHandler () const;  ; const char * GetMsd () ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSlave.html:899,inherit,inherited,899,doc/master/classTSlave.html,https://root.cern,https://root.cern/doc/master/classTSlave.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TSlaveInfo Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; List of all members ; TSlaveInfo Class Reference. . Definition at line 212 of file TProof.h. Public Types; enum  ESlaveStatus { kActive; , kNotActive; , kBad; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TSlaveInfo (const char *ordinal="""", const char *host="""", Int_t perfidx=0, const char *msd="""", const char *datadir="""");  ; Int_t Compare (const TObject *obj) const override;  Used to sort slaveinfos by ordinal. ;  ; const char * GetDataDir () const;  ; const char * GetMsd () const;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetOrdinal () const;  ; SysInfo_t GetSysInfo () const;  ; TClass * IsA () const override;  ; Bool_t IsEqual (const TObject *obj) const override;  Used to compare slaveinfos by ordinal. ;  ; Bool_t IsSortable () const override;  ; void Print (Option_t *option="""") const override;  Print slave info. ;  ; void SetOrdinal (const char *ord);  ; void SetStatus (ESlaveStatus stat);  ; void SetSysInfo (SysInfo_t si);  Setter for fSysInfo. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSlaveInfo.html:417,inherit,inherited,417,doc/master/classTSlaveInfo.html,https://root.cern,https://root.cern/doc/master/classTSlaveInfo.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TSocket Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Member Functions |; Protected Attributes |; Static Protected Attributes |; Private Member Functions |; Friends |; List of all members ; TSocket Class Reference. . Definition at line 41 of file TSocket.h. Public Types; enum  EInterest { kRead = 1; , kWrite = 2; };  ; enum  EServiceType { kSOCKD; , kROOTD; , kPROOFD; };  ; enum  EStatusBits { kIsUnix = (1ULL << ( 16 )); , kBrokenConn = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TSocket (const char *host, const char *service, Int_t tcpwindowsize=-1);  Create a socket. ;  ;  TSocket (const char *host, Int_t port, Int_t tcpwindowsize=-1);  Create a socket; see CreateAuthSocket for the form of url. ;  ;  TSocket (const char *sockpath);  Create a socket in the Unix domain on 'sockpath'. ;  ;  TSocket (const TSocket &s);  TSocket copy ctor. ;  ;  TSocket (Int_t descriptor);  Create a socket. ;  ;  TSocket (Int_t descriptor, const char *sockpath);  Create a socket. ;  ;  TSocket (TInetAddress address, const char *service, Int_t tcpwindowsize=-1);  Create a socket. ;  ;  TSocket (TInetAddress address, Int_t port, Int_t tcpwindowsize=-1);  Create a socket. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSocket.html:668,inherit,inherited,668,doc/master/classTSocket.html,https://root.cern,https://root.cern/doc/master/classTSocket.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TSocketHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TSocketHandler Class Reference. . Definition at line 39 of file TMonitor.cxx. Public Member Functions;  TSocketHandler (TMonitor *m, TSocket *s, Int_t interest, Bool_t mainloop=kTRUE);  ; TSocket * GetSocket () const;  ; Bool_t Notify () override;  Notify when event occurred on descriptor associated with this handler. ;  ; Bool_t ReadNotify () override;  Notify when something can be read from the descriptor associated with this handler. ;  ; Bool_t WriteNotify () override;  Notify when something can be written to the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TFileHandler;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system file handler list. ;  ; int GetFd () const;  ; virtual Bool_t HasReadInterest ();  True if handler is interested in read events. ;  ; virtual Bool_t HasWriteInterest ();  True if handler is interested in write events. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsReadReady () const;  ; virtual Bool_t IsWriteReady () const;  ; void Remove () override;  Remove file event handler from system file handler list. ;  ; virtual void ResetReadyMask ();  ; void SetFd (int fd);  ; virtual void SetInterest (Int_t mask);  Set interest mask to 'mask'. ;  ; virtual void SetReadReady ();  ; virtual void SetWriteReady ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSocketHandler.html:809,inherit,inherited,809,doc/master/classTSocketHandler.html,https://root.cern,https://root.cern/doc/master/classTSocketHandler.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TSortedList Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TSortedList Class ReferenceCore ROOT classes » Containers. ; A sorted doubly linked list. ; All sortable classes inheriting from TObject can be inserted in a TSortedList. ; Definition at line 28 of file TSortedList.h. Public Member Functions;  TSortedList (Bool_t order=kSortAscending);  ; void Add (TObject *obj) override;  Add object in sorted list. ;  ; void Add (TObject *obj, Option_t *opt) override;  Add object in sorted list. ;  ; void AddAfter (const TObject *, TObject *obj) override;  Insert object after object after in the list. ;  ; void AddAfter (TObjLink *, TObject *obj) override;  Insert object after the specified ObjLink object. ;  ; void AddAt (TObject *obj, Int_t) override;  Insert object at position idx in the list. ;  ; void AddBefore (const TObject *, TObject *obj) override;  Insert object before object before in the list. ;  ; void AddBefore (TObjLink *, TObject *obj) override;  Insert object before the specified ObjLink object. ;  ; void AddFirst (TObject *obj) override;  Add object at the beginning of the list. ;  ; void AddFirst (TObject *obj, Option_t *opt) override;  Add object at the beginning of the list and also store option. ;  ; void AddLast (TObject *obj) override;  Add object at the end of the list. ;  ; void AddLast (TObject *obj, Option_t *opt) override;  Add object at the end of the list and also store option. ;  ; TClass * IsA () const override;  ; Bool_t IsSorted () const override;  ; void Sort (Bool_t=kSortAscending) override;  Sort linked list. ;  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TList;  TList ();  ; The argument is ignored Use the de",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSortedList.html:337,inherit,inheriting,337,doc/master/classTSortedList.html,https://root.cern,https://root.cern/doc/master/classTSortedList.html,1,['inherit'],['inheriting']
Modifiability,". ROOT: TSpectrum2Transform Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TSpectrum2Transform Class ReferenceHistogram Library » Advanced spectra processing classes. ; Advanced 2-dimensional orthogonal transform functions. ; AuthorMiroslav Morhac; Legacy Code TSpectrum2Transform is a legacy interface: there will be no bug fixes nor new developments. Therefore it is not recommended to use it in new long-term production code. But, depending on the context, using TSpectrum2Transform might still be a valid solution. For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.; Class to carry out transforms of 2D spectra, its filtering and enhancement. It allows to calculate classic Fourier, Cosine, Sin, Hartley, Walsh, Haar transforms as well as mixed transforms (Fourier- Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sin-Walsh and Sin-Haar). All the transforms are fast.; The algorithms in this class have been published in the following references:. C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray spectroscopy.NIM A353 (1994) 280-284.; Morhac M., Matousek V., New adaptive Cosine-Walsh transform and its application to nuclear data compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; Morhac M., Matousek V., Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; Morhac M., Matousek V.: Multidimensional nuclear data compression using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51 (2001) 307. . Definition at line 16 of file TSpectrum2Transform.h. Public Types; enum  { ;   kTransformHaar =0; , kTransformWalsh =1; , kTransformC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrum2Transform.html:950,enhance,enhancement,950,doc/master/classTSpectrum2Transform.html,https://root.cern,https://root.cern/doc/master/classTSpectrum2Transform.html,1,['enhance'],['enhancement']
Modifiability,". ROOT: TSpectrumTransform Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TSpectrumTransform Class ReferenceHistogram Library » Advanced spectra processing classes. ; Advanced 1-dimensional orthogonal transform functions. ; AuthorMiroslav Morhac; Legacy Code TSpectrumTransform is a legacy interface: there will be no bug fixes nor new developments. Therefore it is not recommended to use it in new long-term production code. But, depending on the context, using TSpectrumTransform might still be a valid solution. For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.; Class to carry out transforms of 1D spectra, its filtering and enhancement. It allows to calculate classic Fourier, Cosine, Sin, Hartley, Walsh, Haar transforms as well as mixed transforms (Fourier- Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sin-Walsh and Sin-Haar). All the transforms are fast.; The algorithms in this class have been published in the following references:. C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray spectroscopy.NIM A353(1994) 280-284.; Morhac M., Matousek V., New adaptive Cosine-Walsh transform and its application to nuclear data compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; Morhac M., Matousek V., Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; Morhac M., Matousek V.: Multidimensional nuclear data compression using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51 (2001) 307. . Definition at line 18 of file TSpectrumTransform.h. Public Types; enum  { ;   kTransformHaar =0; , kTransformWalsh =1; , kTransformCos =2;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrumTransform.html:946,enhance,enhancement,946,doc/master/classTSpectrumTransform.html,https://root.cern,https://root.cern/doc/master/classTSpectrumTransform.html,1,['enhance'],['enhancement']
Modifiability,". ROOT: TSpider Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TSpider Class Reference. ; Spider class. ; A spider view is a handy way to visualize a set of data stored in a TTree. It draws as many polar axes as selected data members. For each of them, it draws on the axis the position of the present event between the min and max of the data member. Two modes are available:. The spider view: With each points on the axes is drawn a polyline.; The segment view: For each data member is drawn an arc segment with the radius corresponding to the event. The spider plot is available from the treeviewer called by ""atree->StartViewer()"", or simply by calling its constructor and defining the variables to display.; {; TCanvas *c1 = new TCanvas(""c1"",""TSpider example"",200,10,700,700);; TFile *f = new TFile(""$(ROOTSYS)/tutorials/hsimple.root"");; if (!f || f->IsZombie()) {; printf(""Please run <ROOT location>/tutorials/hsimple.C before."");; return;; }; TNtuple* ntuple = (TNtuple*)f->Get(""ntuple"");; TString varexp = ""px:py:pz:random:sin(px):log(px/py):log(pz)"";; TString selectStr = ""px>0 && py>0 && pz>0"";; TString options = ""average"";; TSpider *spider = new TSpider(ntuple,varexp.Data(),selectStr.Data(),options.Data());; spider->Draw();; c1->ToggleEditor();; c1->Selected(c1,spider,1);; return c1;; }; f#define f(i)Definition RSha256.hxx:104; TCanvasThe Canvas class.Definition TCanvas.h:23; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TNtupleA simple TTree restricted to a list of float variables only.Definition TNtuple.h:28; TSpiderSpider class.Definition TSpider.h:40; TSpider::Drawvoid Draw(Option_t *options="""") overrideDraw the spider.Definition TSpider.cxx:454; TSpider::TSpiderTSpider()Default co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpider.html:897,variab,variables,897,doc/master/classTSpider.html,https://root.cern,https://root.cern/doc/master/classTSpider.html,1,['variab'],['variables']
Modifiability,". ROOT: TSplinePoly Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TSplinePoly Class ReferenceHistogram Library. ; Base class for TSpline knot. ; Definition at line 74 of file TSpline.h. Public Member Functions;  TSplinePoly ();  ;  TSplinePoly (Double_t x, Double_t y);  ;  TSplinePoly (TSplinePoly const &other);  ; virtual Double_t Eval (Double_t) const;  ; void GetKnot (Double_t &x, Double_t &y) const;  ; TClass * IsA () const override;  ; TSplinePoly & operator= (TSplinePoly const &other);  Assignment operator. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Double_t & X ();  ; Double_t & Y ();  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSplinePoly.html:941,inherit,inherited,941,doc/master/classTSplinePoly.html,https://root.cern,https://root.cern/doc/master/classTSplinePoly.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TSqlCmdsBuffer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; TSqlCmdsBuffer Class Reference. . Definition at line 787 of file TSQLStructure.cxx. Public Member Functions;  TSqlCmdsBuffer (TSQLFile *f, TSQLClassInfo *info);  ;  ~TSqlCmdsBuffer () override;  ; void AddValues (Bool_t isnorm, const char *values);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option=""""",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSqlCmdsBuffer.html:491,inherit,inherited,491,doc/master/classTSqlCmdsBuffer.html,https://root.cern,https://root.cern/doc/master/classTSqlCmdsBuffer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TSqlRawBuffer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; TSqlRawBuffer Class Reference. . Definition at line 1077 of file TSQLStructure.cxx. Public Member Functions;  TSqlRawBuffer (TSqlRegistry *reg, TSQLClassInfo *sqlinfo);  ;  ~TSqlRawBuffer () override;  ; void AddLine (const char *name, const char *value, const char *topname=nullptr, const char *ns=nullptr);  ; Bool_t IsAnyData () const;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSqlRawBuffer.html:580,inherit,inherited,580,doc/master/classTSqlRawBuffer.html,https://root.cern,https://root.cern/doc/master/classTSqlRawBuffer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TSqlRegistry Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; List of all members ; TSqlRegistry Class Reference. . Definition at line 821 of file TSQLStructure.cxx. Public Member Functions;  TSqlRegistry ();  ;  ~TSqlRegistry () override;  ; Int_t AddLongString (const char *strvalue);  ; void AddRegCmd (Long64_t objid, TClass *cl);  ; void AddSqlCmd (const char *query);  ; void ConvertPoolValues ();  ; void ConvertSqlValues (TObjArray &values, const char *tablename);  ; TSqlCmdsBuffer * GetCmdsBuffer (TSQLClassInfo *sqlinfo);  ; Long64_t GetNextObjId ();  ; void InsertToNormalTable (TSQLTableData *columns, TSQLClassInfo *sqlinfo);  ; Bool_t InsertToNormalTableOracle (TSQLTableData *columns, TSQLClassInfo *sqlinfo);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *opt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSqlRegistry.html:882,inherit,inherited,882,doc/master/classTSqlRegistry.html,https://root.cern,https://root.cern/doc/master/classTSqlRegistry.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TStatistic Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TStatistic Class ReferenceMath » MathCore. ; Statistical variable, defined by its mean and variance (RMS). ; Named, streamable, storable and mergeable. ; Definition at line 33 of file TStatistic.h. Public Member Functions;  TStatistic (const char *name, Int_t n, const Double_t *val, const Double_t *w=nullptr);  Constructor from a vector of values. ;  ;  TStatistic (const char *name="""");  ;  ~TStatistic () override;  TStatistic destructor. ;  ; void Fill (Double_t val, Double_t w=1.);  Increment the entries in the object by one value-weight pair. ;  ; Double_t GetM2 () const;  ; Double_t GetMax () const;  ; Double_t GetMean () const;  ; Double_t GetMeanErr () const;  ; Double_t GetMin () const;  ; Long64_t GetN () const;  ; const char * GetName () const override;  Returns name of object. ;  ; Long64_t GetNeff () const;  ; Double_t GetRMS () const;  ; Double_t GetVar () const;  ; Double_t GetW () const;  ; Double_t GetW2 () const;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; void ls (Option_t *opt="""") const override;  The ls function lists the contents of a class on stdout. ;  ; Int_t Merge (TCollection *in);  Merge implementation of TStatistic. ;  ; void Print (Option_t *="""") const override;  Print the content of the object. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStatistic.html:302,variab,variable,302,doc/master/classTStatistic.html,https://root.cern,https://root.cern/doc/master/classTStatistic.html,1,['variab'],['variable']
Modifiability,". ROOT: TStatsFeedback Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TStatsFeedback Class ReferencePROOF » PROOF kernel Libraries. ; Utility class to display PROOF stats feedback histos during queries. ; Definition at line 32 of file TStatsFeedback.h. Public Member Functions;  TStatsFeedback (TProof *proof=0);  Constructor. ;  ;  ~TStatsFeedback () override;  Destructor. ;  ; void Feedback (TList *objs);  Display feedback. ;  ; const char * GetName () const override;  Returns name of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStatsFeedback.html:959,inherit,inherited,959,doc/master/classTStatsFeedback.html,https://root.cern,https://root.cern/doc/master/classTStatsFeedback.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TStatus Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TStatus Class ReferencePROOF » PROOF kernel Libraries. ; This class holds the status of an ongoing operation and collects error messages. ; It provides a Merge() operation allowing it to be used in PROOF to monitor status in the slaves. No messages indicates success. ; Definition at line 32 of file TStatus.h. Public Types; enum  EProcStatus { kNotOk = (1ULL << ( 15 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TStatus ();  Default constructor. ;  ;  ~TStatus () override;  ; void Add (const char *mesg);  Add an error message. ;  ; void AddInfo (const char *mesg);  Add an info message. ;  ; Int_t GetExitStatus () const;  ; Long_t GetResMemMax (Bool_t master=kFALSE) const;  ; Long_t GetVirtMemMax (Bool_t master=kFALSE) const;  ; TClass * IsA () const override;  ; Bool_t IsOk () const;  ; virtual Int_t Merge (TCollection *list);  PROOF Merge() function. ;  ; const char * NextMesg ();  Return the next message or 0. ;  ; void Print (Option_t *option="""") const override;  Standard print function. ;  ; void Reset ();  Reset the iterator on the messages. ;  ; void SetExitStatus (Int_t est);  ; void SetMemVal",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStatus.html:650,inherit,inherited,650,doc/master/classTStatus.html,https://root.cern,https://root.cern/doc/master/classTStatus.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TStdExceptionHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; List of all members ; TStdExceptionHandler Class Referenceabstract. . Definition at line 172 of file TSysEvtHandler.h. Public Types; enum  EStatus { kSEProceed; , kSEHandled; , kSEAbort; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TStdExceptionHandler ();  Handle standard C++ exceptions intercepted by the TSystem::Run(). ;  ; virtual ~TStdExceptionHandler ();  ; void Add () override;  Add std::exception handler to system handler list. ;  ; virtual EStatus Handle (std::exception &exc)=0;  ; TClass * IsA () const override;  ; Bool_t Notify () override;  Notify when signal occurs. ;  ; void Remove () override;  Remove std::exception handler from system handler list. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStdExceptionHandler.html:434,inherit,inherited,434,doc/master/classTStdExceptionHandler.html,https://root.cern,https://root.cern/doc/master/classTStdExceptionHandler.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TStopTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TStopTimer Class Reference. . Definition at line 169 of file TProofPlayer.cxx. Public Member Functions;  TStopTimer (TProofPlayer *p, Bool_t abort, Int_t to);  Constructor for the timer to stop/abort processing. ;  ; Bool_t Notify () override;  Handle the signal coming from the expiration of the timer associated with an abort or stop request. ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStopTimer.html:586,inherit,inherited,586,doc/master/classTStopTimer.html,https://root.cern,https://root.cern/doc/master/classTStopTimer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TStreamerArtificial Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TStreamerArtificial Class Reference. . Definition at line 449 of file TStreamerElement.h. Public Member Functions;  TStreamerArtificial (const char *name, const char *title, Int_t offset, Int_t dtype, const char *typeName);  ; ROOT::TSchemaRule::ReadFuncPtr_t GetReadFunc ();  ; ROOT::TSchemaRule::ReadRawFuncPtr_t GetReadRawFunc ();  ; TClass * IsA () const override;  ; void SetReadFunc (ROOT::TSchemaRule::ReadFuncPtr_t val);  ; void SetReadRawFunc (ROOT::TSchemaRule::ReadRawFuncPtr_t val);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TStreamerElement;  TStreamerElement ();  Default ctor. ;  ;  TStreamerElement (const char *name, const char *title, Int_t offset, Int_t dtype, const char *typeName);  Create a TStreamerElement object. ;  ; virtual ~TStreamerElement ();  TStreamerElement dtor. ;  ; virtual Bool_t CannotSplit () const;  Returns true if the element cannot be split, false otherwise. ;  ; Int_t GetArrayDim () const;  ; Int_t GetArrayLength () const;  ; TClass * GetClass () const;  ; virtual TClass * GetClassPointer () const;  Returns a pointer to the TClass of this element. ;  ; virtual Int_t GetExecID () const;  Returns the TExec id for the EXEC instruction in the comment field of a TRef data member. ;  ; Double_t GetFactor () const;  ; virtual const char * GetFullName () const;  Return element name including dimensions, if any Note that this function stores the name into a static array. ;  ; virtual const char * GetInclude () const;  ; Int_t GetMaxIndex (Int_t i) const;  ; virtual ULongptr_t GetMethod () const;  ; TClass * GetNewClass () con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerArtificial.html:949,inherit,inherited,949,doc/master/classTStreamerArtificial.html,https://root.cern,https://root.cern/doc/master/classTStreamerArtificial.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TStreamerInfoActions::TActionSequence Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Public Attributes |; Private Member Functions |; List of all members ; TStreamerInfoActions::TActionSequence Class Reference. . Definition at line 177 of file TStreamerInfoActions.h. Classes; struct  SequencePtr;  . Public Types; enum class  EStatusBits { kVectorPtrLooper = (1ULL << ( 14 )); };  ; using SequenceGetter_t = SequencePtr(*)(TStreamerInfo *info, TVirtualCollectionProxy *collectionProxy, TClass *originalClass);  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TActionSequence (TVirtualStreamerInfo *info, UInt_t maxdata, Bool_t isForVecPtr=kFALSE);  ;  ~TActionSequence () override;  ; template<typename action_t > ; void AddAction (action_t action, TConfiguration *conf);  ; void AddAction (const TConfiguredAction &action);  ; void AddToOffset (Int_t delta);  ; void AddToSubSequence (TActionSequence *sequence, const TIDs &element_ids, Int_t offset, SequenceGetter_t create);  ; TActionSequence * CreateCopy ();  ; TActionSequence * CreateSubSequence (const std::vector< Int_t > &element_ids, size_t offset);  ; TActionSequence * CreateSubSequence (const TIDs &element_ids, size_t offset, SequenceGetter_t crea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html:698,inherit,inherited,698,doc/master/classTStreamerInfoActions_1_1TActionSequence.html,https://root.cern,https://root.cern/doc/master/classTStreamerInfoActions_1_1TActionSequence.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TStreamerSTL Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TStreamerSTL Class Reference. . Definition at line 391 of file TStreamerElement.h. Public Member Functions;  TStreamerSTL ();  Default ctor. ;  ;  TStreamerSTL (const char *name, const char *title, Int_t offset, const char *typeName, const char *trueType, Bool_t dmPointer);  Create a TStreamerSTL object. ;  ;  TStreamerSTL (const char *name, const char *title, Int_t offset, const char *typeName, const TVirtualCollectionProxy &proxy, Bool_t dmPointer);  Create a TStreamerSTL object. ;  ; virtual ~TStreamerSTL ();  TStreamerSTL dtor. ;  ; Bool_t CannotSplit () const override;  We can not split STL's which are inside a variable size array. ;  ; Int_t GetCtype () const;  ; const char * GetInclude () const override;  Return the proper include for this element. ;  ; Int_t GetSize () const override;  Returns size of STL container in bytes. ;  ; Int_t GetSTLtype () const;  ; TClass * IsA () const override;  ; Bool_t IsaPointer () const override;  Return true if the data member is a pointer. ;  ; Bool_t IsBase () const override;  Return kTRUE if the element represent a base class. ;  ; void ls (Option_t *option="""") const override;  Print the content of the element. ;  ; void SetCtype (Int_t t);  ; void SetSTLtype (Int_t t);  ; void SetStreamer (TMemberStreamer *streamer) override;  Set pointer to Streamer function for this element NOTE: we do not take ownership. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TStreamerSTL. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TStreamerElement;  TStreamerElement ();  Default ctor. ;  ;  TStreamerElement (const char *name, const char *title, Int_t offset, Int_t dtype, const char *t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerSTL.html:901,variab,variable,901,doc/master/classTStreamerSTL.html,https://root.cern,https://root.cern/doc/master/classTStreamerSTL.html,1,['variab'],['variable']
Modifiability,". ROOT: TStreamerSTLstring Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; List of all members ; TStreamerSTLstring Class Reference. . Definition at line 425 of file TStreamerElement.h. Public Member Functions;  TStreamerSTLstring ();  Default ctor. ;  ;  TStreamerSTLstring (const char *name, const char *title, Int_t offset, const char *typeName, Bool_t dmPointer);  Create a TStreamerSTLstring object. ;  ; virtual ~TStreamerSTLstring ();  TStreamerSTLstring dtor. ;  ; const char * GetInclude () const override;  Return the proper include for this element. ;  ; Int_t GetSize () const override;  Returns size of anyclass in bytes. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TStreamerSTLstring. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TStreamerSTL;  TStreamerSTL ();  Default ctor. ;  ;  TStreamerSTL (const char *name, const char *title, Int_t offset, const char *typeName, const char *trueType, Bool_t dmPointer);  Create a TStreamerSTL object. ;  ;  TStreamerSTL (const char *name, const char *title, Int_t offset, const char *typeName, const TVirtualCollectionProxy &proxy, Bool_t dmPointer);  Create a TStreamerSTL object. ;  ; virtual ~TStreamerSTL ();  TStreamerSTL dtor. ;  ; Bool_t CannotSplit () const override;  We can not split STL's which are inside a variable size array. ;  ; Int_t GetCtype () const;  ; Int_t GetSTLtype () const;  ; Bool_t IsaPointer () const override;  Return true if the data member is a pointer. ;  ; Bool_t IsBase () const override;  Return kTRUE if the element represent a base class. ;  ; void ls (Option_t *option="""") const override;  Print the content of the element. ;  ; void SetCtype (Int_t t);  ; void SetSTLtype (Int_t t);  ; void SetStreamer (TMemberStreamer ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerSTLstring.html:1015,inherit,inherited,1015,doc/master/classTStreamerSTLstring.html,https://root.cern,https://root.cern/doc/master/classTStreamerSTLstring.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TStreamerString Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; List of all members ; TStreamerString Class Reference. . Definition at line 373 of file TStreamerElement.h. Public Member Functions;  TStreamerString ();  Default ctor. ;  ;  TStreamerString (const char *name, const char *title, Int_t offset);  Create a TStreamerString object. ;  ; virtual ~TStreamerString ();  TStreamerString dtor. ;  ; const char * GetInclude () const override;  Return the proper include for this element. ;  ; Int_t GetSize () const override;  Returns size of anyclass in bytes. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TStreamerString. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TStreamerElement;  TStreamerElement ();  Default ctor. ;  ;  TStreamerElement (const char *name, const char *title, Int_t offset, Int_t dtype, const char *typeName);  Create a TStreamerElement object. ;  ; virtual ~TStreamerElement ();  TStreamerElement dtor. ;  ; virtual Bool_t CannotSplit () const;  Returns true if the element cannot be split, false otherwise. ;  ; Int_t GetArrayDim () const;  ; Int_t GetArrayLength () const;  ; TClass * GetClass () const;  ; virtual TClass * GetClassPointer () const;  Returns a pointer to the TClass of this element. ;  ; virtual Int_t GetExecID () const;  Returns the TExec id for the EXEC instruction in the comment field of a TRef data member. ;  ; Double_t GetFactor () const;  ; virtual const char * GetFullName () const;  Return element name including dimensions, if any Note that this function stores the name into a static array. ;  ; Int_t GetMaxIndex (Int_t i) const;  ; virtual ULongptr_t GetMethod () const;  ; TClass * GetNewClass () const;  ; Int_t GetNewType () const;  ; Int_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerString.html:951,inherit,inherited,951,doc/master/classTStreamerString.html,https://root.cern,https://root.cern/doc/master/classTStreamerString.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TStyle Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TStyle Class ReferenceCore ROOT classes » Base ROOT classes | Graphics » Graphics attributes. ; TStyle objects may be created to define special styles. ; By default ROOT creates a default style that can be accessed via the gStyle pointer.; This class includes functions to set some of the following object attributes.; Canvas; Pad; Histogram axis; Lines; Fill areas; Text; Markers; Functions; Histogram Statistics and Titles. All objects that can be drawn in a pad inherit from one or more attribute classes like TAttLine, TAttFill, TAttText, TAttMarker. When the objects are created, their default attributes are taken from the current style. The current style is an object of the classTStyle and can be referenced via the global variable gStyle (in TStyle.h).; ROOT provides two styles called ""Default"" and ""Plain"". The ""Default"" style is created simply by:; auto default = new TStyle(""Default"",""Default Style"");; TStyle::TStyleTStyle()Default constructor.Definition TStyle.cxx:145; The Plain style can be used if you are working on a monochrome display or if you want to get a ""conventional"" Postscript output. These are the instructions in the ROOT constructor to create the Plain style.; auto plain = new TStyle(""Plain"",""Plain Style (no colors/fill areas)"");; ; plain->SetCanvasBorderMode(0);; plain->SetPadBorderMode(0);; plain->SetPadColor(0);; plain->SetCanvasColor(0);; plain->SetTitleColor(0);; plain->SetStatColor(0);; You can set the current style with:; gROOT->SetStyle(style_name);; gROOT#define gROOTDefinition TROOT.h:406; You can get a pointer to an existing style with:; auto style = gROOT->GetStyle(style_name);; styleOption_t Option_t styleDefinition TGWin32VirtualXProxy.cxx:46; You can create additional styles with:; TSty",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStyle.html:722,inherit,inherit,722,doc/master/classTStyle.html,https://root.cern,https://root.cern/doc/master/classTStyle.html,2,"['inherit', 'variab']","['inherit', 'variable']"
Modifiability,". ROOT: TTermInputHandler Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; TTermInputHandler Class Reference. . Definition at line 121 of file TRint.cxx. Public Member Functions;  TTermInputHandler (Int_t fd);  ; Bool_t Notify () override;  Notify implementation. Call the application interupt handler. ;  ; Bool_t ReadNotify () override;  Notify when something can be read from the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TFileHandler;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system file handler list. ;  ; int GetFd () const;  ; virtual Bool_t HasReadInterest ();  True if handler is interested in read events. ;  ; virtual Bool_t HasWriteInterest ();  True if handler is interested in write events. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsReadReady () const;  ; virtual Bool_t IsWriteReady () const;  ; void Remove () override;  Remove file event handler from system file handler list. ;  ; virtual void ResetReadyMask ();  ; void SetFd (int fd);  ; virtual void SetInterest (Int_t mask);  Set interest mask to 'mask'. ;  ; virtual void SetReadReady ();  ; virtual void SetWriteReady ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t WriteNotify ();  Notify when something can be written to the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const ov",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTermInputHandler.html:575,inherit,inherited,575,doc/master/classTTermInputHandler.html,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TThreadFactory Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TThreadFactory Class Referenceabstract. . Definition at line 32 of file TThreadFactory.h. Public Member Functions;  TThreadFactory (const char *name=""Unknown"", const char *title=""Unknown Thread Factory"");  TThreadFactory ctor only called by derived classes. ;  ; virtual ~TThreadFactory ();  ; virtual TConditionImp * CreateConditionImp (TMutexImp *m)=0;  ; virtual TMutexImp * CreateMutexImp (Bool_t recursive)=0;  ; virtual TThreadImp * CreateThreadImp ()=0;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (O",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTThreadFactory.html:893,inherit,inherited,893,doc/master/classTThreadFactory.html,https://root.cern,https://root.cern/doc/master/classTThreadFactory.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TThreadTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; List of all members ; TThreadTimer Class Reference. . Definition at line 203 of file TThread.h. Public Member Functions;  TThreadTimer (Long_t ms=kItimerResolution+10);  Create thread timer. ;  ; Bool_t Notify () override;  Periodically execute the TThread::XAction() method in the main thread. ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTThreadTimer.html:494,inherit,inherited,494,doc/master/classTThreadTimer.html,https://root.cern,https://root.cern/doc/master/classTThreadTimer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TTimeOutTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TTimeOutTimer Class Reference. . Definition at line 76 of file TMonitor.cxx. Public Member Functions;  TTimeOutTimer (TMonitor *m, Long_t ms);  ; Bool_t Notify () override;  This method must be overridden to handle object notification (the base implementation is no-op). ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UIn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTimeOutTimer.html:515,inherit,inherited,515,doc/master/classTTimeOutTimer.html,https://root.cern,https://root.cern/doc/master/classTTimeOutTimer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TTipDelayTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TTipDelayTimer Class Reference. . Definition at line 56 of file TGToolTip.cxx. Public Member Functions;  TTipDelayTimer (TGToolTip *tip, Long_t ms);  ; Bool_t Notify () override;  Notify when timer times out and reset the timer. ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Start (Long_t milliSec=-1, Bool_t singleShot=kFALSE);  Starts the timer with",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTipDelayTimer.html:474,inherit,inherited,474,doc/master/classTTipDelayTimer.html,https://root.cern,https://root.cern/doc/master/classTTipDelayTimer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TToggle Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Private Attributes |; List of all members ; TToggle Class Reference. ; This class defines toggling facility for both - object's method or variables. ; Assume that user provides an object with a two-state field , and methods to Get/Set value of this field. This object enables to switch values via this method when the only thing you know about the field is the name of the method (or method itself) which sets the field. This facility is required in context Pop-Up menu, when the only information about how to toggle a field is a name of methhod which sets it. This class may be also used for toggling an integer variable, which may be important while building universal objects... When user provides a ""set-method"" of name SetXXX this object tries automaticaly find a matching ""get-method"" by lookin for a method with name GetXXX, IsXXX or HasXXX for given object. ; Definition at line 47 of file TToggle.h. Public Member Functions;  TToggle ();  TToggle default constructor. ;  ; TMethodCall * GetGetter () const;  ; virtual Long_t GetOffValue ();  ; virtual Long_t GetOnValue ();  ; TMethodCall * GetSetter () const;  ; virtual Bool_t GetState ();  Returns the state of Toggle according to its current value and fOnValue, returns true if they match. ;  ; virtual Int_t GetValue ();  ; TClass * IsA () const override;  ; virtual Bool_t IsInitialized ();  ; virtual void SetOffValue (Long_t lof);  ; virtual void SetOnValue (Long_t lon);  ; virtual void SetState (Bool_t state);  Sets the value of toggle to fOnValue or fOffValue according to passed argument. ;  ; virtual void SetToggledObject (TObject *obj, TMethod *anymethod);  Initializes it to toggle an object's datamember using this object's method. ;  ; virtual void SetToggledVariable (Int_t &var);  Initializes object",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTToggle.html:360,variab,variables,360,doc/master/classTToggle.html,https://root.cern,https://root.cern/doc/master/classTToggle.html,2,['variab'],"['variable', 'variables']"
Modifiability,". ROOT: TTreeCacheUnzip Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Attributes |; Static Protected Attributes |; Private Member Functions |; Private Attributes |; List of all members ; TTreeCacheUnzip Class ReferenceTree Library. ; A TTreeCache which exploits parallelized decompression of its own content. ; Definition at line 35 of file TTreeCacheUnzip.h. Classes; struct  UnzipState;  . Public Types; enum  EParUnzipMode { kEnable; , kDisable; , kForce; };  ; enum  EUnzipState { kUntouched; , kProgress; , kFinished; };  ;  Public Types inherited from TTreeCache; enum  EPrefillType { kNoPrefill; , kAllBranches; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TTreeCacheUnzip ();  ;  TTreeCacheUnzip (TTree *tree, Int_t buffersize=0);  Constructor. ;  ;  ~TTreeCacheUnzip () override;  Destructor. (in general called by the TFile destructor) ;  ; Int_t AddBranch (const char *branch, bool subbranches=false) override;  Add a branch to the list of branches to be stored in the cache this function is called by TBranch::GetBasket Returns: ;  ; Int_t AddBranch (TBranch *b, bool subbranches=false) override;  Add a branch to the list of branches to be stored in the cache this functi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeCacheUnzip.html:735,inherit,inherited,735,doc/master/classTTreeCacheUnzip.html,https://root.cern,https://root.cern/doc/master/classTTreeCacheUnzip.html,2,['inherit'],['inherited']
Modifiability,". ROOT: TTreeCacheUnzip Class Reference. ; ROOT  ; . v6-32. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Types |; Protected Attributes |; Static Protected Attributes |; Private Member Functions |; Private Attributes |; List of all members ; TTreeCacheUnzip Class ReferenceTree Library. ; A TTreeCache which exploits parallelized decompression of its own content. ; Definition at line 35 of file TTreeCacheUnzip.h. Classes; struct  UnzipState;  . Public Types; enum  EParUnzipMode { kEnable; , kDisable; , kForce; };  ; enum  EUnzipState { kUntouched; , kProgress; , kFinished; };  ;  Public Types inherited from TTreeCache; enum  EPrefillType { kNoPrefill; , kAllBranches; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TTreeCacheUnzip ();  ;  TTreeCacheUnzip (TTree *tree, Int_t buffersize=0);  Constructor. ;  ;  ~TTreeCacheUnzip () override;  Destructor. (in general called by the TFile destructor) ;  ; Int_t AddBranch (const char *branch, bool subbranches=false) override;  Add a branch to the list of branches to be stored in the cache this function is called by TBranch::GetBasket Returns: ;  ; Int_t AddBranch (TBranch *b, bool subbranches=false) override;  Add a branch to the list of branches to be stored in the cache this functio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTTreeCacheUnzip.html:734,inherit,inherited,734,doc/v632/classTTreeCacheUnzip.html,https://root.cern,https://root.cern/doc/v632/classTTreeCacheUnzip.html,2,['inherit'],['inherited']
Modifiability,". ROOT: TTreeDrawArgsParser Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Static Public Attributes |; Protected Member Functions |; Protected Attributes |; List of all members ; TTreeDrawArgsParser Class Reference. ; A class that parses all parameters for TTree::Draw(). ; See TTree::Draw() for the format description. ; Definition at line 29 of file TTreeDrawArgsParser.h. Public Types; enum  EOutputType { ;   kUNKNOWN; , kEVENTLIST; , kENTRYLIST; , kPROFILE; , ;   kPROFILE2D; , kGRAPH; , kPOLYMARKER3D; , kHISTOGRAM1D; , ;   kHISTOGRAM2D; , kLISTOFGRAPHS; , kLISTOFPOLYMARKERS3D; , kHISTOGRAM3D. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TTreeDrawArgsParser ();  Constructor - cleans all the class variables. ;  ;  ~TTreeDrawArgsParser () override;  Destructor. ;  ; bool GetAdd () const;  ; Int_t GetDimension () const;  ; TString const & GetExp () const;  ; Double_t GetIfSpecified (Int_t num, Double_t def) const;  ; Int_t GetNoParameters () const;  ; TString const & GetObjectName () const;  ; TString GetObjectTitle () const;  Returns the desired plot title. ;  ; bool GetOptionSame () const;  ; TObject * GetOriginal () const;  ; Double_t GetParameter (int num) const;  returns num-th parameter from brackets in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeDrawArgsParser.html:772,inherit,inherited,772,doc/master/classTTreeDrawArgsParser.html,https://root.cern,https://root.cern/doc/master/classTTreeDrawArgsParser.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TTreeViewer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Friends |; List of all members ; TTreeViewer Class Reference. ; A graphic user interface designed to handle ROOT trees and to take advantage of TTree class features. ; It uses ROOT native GUI widgets adapted for ""drag and drop"" functionality. in the same session. The following capabilities are making the viewer a helpful tool for analysis:. several trees may be opened in the same session;; branches and leaves can be easily browsed or scanned;; fast drawing of branch expressions by double-clicking;; new variables/selections easy to compose with the built-in editor;; histograms can be composed by dragging leaves or user-defined expressions to X, Y and Z axis items;; the tree entries to be processed can be selected with a double slider;; selections can be defined and activated by dragging them to the 'Cut' item;; all expressions can be aliased and aliases can be used in composing others;; input/output event lists easy to handle;; menu with histogram drawing options;; user commands may be executed within the viewer and the current command can be echoed;; current 'Draw' event loop is reflected by a progress bar and may be interrupted by the user;; all widgets have self-explaining tool tips and/or context menus;; expressions/leaves can be dragged to a 'scan box' and scanned by double-clicking this item. The result can be redirected to an ASCII file;. The layout has the following items:. a menu bar with entries : File, Edit, Run, Options and Help;; a toolbar in the upper part where you can issue user commands, change the drawing option and the histogram name, three check buttons Hist, Rec and Scan.HIST toggles histogram drawing mode, REC enables recording of the last command issued and SCAN enables redirecting of TTree::Scan command",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeViewer.html:446,adapt,adapted,446,doc/master/classTTreeViewer.html,https://root.cern,https://root.cern/doc/master/classTTreeViewer.html,1,['adapt'],['adapted']
Modifiability,". ROOT: TUDPSocket Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Static Protected Attributes |; Private Member Functions |; Friends |; List of all members ; TUDPSocket Class Reference. . Definition at line 37 of file TUDPSocket.h. Public Types; enum  EInterest { kRead = 1; , kWrite = 2; };  ; enum  EServiceType { kSOCKD; , kROOTD; , kPROOFD; };  ; enum  EStatusBits { kIsUnix = (1ULL << ( 16 )); , kBrokenConn = (1ULL << ( 17 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TUDPSocket (const char *host, const char *service);  Create a socket. ;  ;  TUDPSocket (const char *host, Int_t port);  Create a socket; see CreateAuthSocket for the form of url. ;  ;  TUDPSocket (const char *sockpath);  Create a socket in the Unix domain on 'sockpath'. ;  ;  TUDPSocket (const TUDPSocket &s);  TUDPSocket copy ctor. ;  ;  TUDPSocket (Int_t descriptor);  Create a socket. ;  ;  TUDPSocket (Int_t descriptor, const char *sockpath);  Create a socket. ;  ;  TUDPSocket (TInetAddress address, const char *service);  Create a socket. ;  ;  TUDPSocket (TInetAddress address, Int_t port);  Create a socket. ;  ; virtual ~TUDPSocket ();  ; virtual void Close (Option_t *opt="""");  Clos",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUDPSocket.html:658,inherit,inherited,658,doc/master/classTUDPSocket.html,https://root.cern,https://root.cern/doc/master/classTUDPSocket.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TUsrHit Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TUsrHit Class Reference. . Definition at line 4 of file clonesA_Event.h. Public Member Functions;  TUsrHit (Int_t ev=0);  ; virtual ~TUsrHit ();  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUsrHit.html:592,inherit,inherited,592,doc/master/classTUsrHit.html,https://root.cern,https://root.cern/doc/master/classTUsrHit.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TUsrHitBuffer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TUsrHitBuffer Class Reference. . Definition at line 20 of file clonesA_Event.h. Public Member Functions;  TUsrHitBuffer (Int_t maxent=10);  ; virtual ~TUsrHitBuffer ();  ; TUsrHit * AddHit (Int_t ev);  ; void Clear (Option_t *opt="""");  ; Int_t GetBufSize ();  ; TClonesArray * GetCA ();  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *opt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUsrHitBuffer.html:740,inherit,inherited,740,doc/master/classTUsrHitBuffer.html,https://root.cern,https://root.cern/doc/master/classTUsrHitBuffer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TUsrSevtData1 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TUsrSevtData1 Class Reference. . Definition at line 63 of file clonesA_Event.h. Public Member Functions;  TUsrSevtData1 ();  ; virtual ~TUsrSevtData1 ();  ; Int_t GetPileup ();  ; virtual TClass * IsA () const;  ; void SetEvent (Int_t ev);  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMrbSubevent_Caen;  TMrbSubevent_Caen ();  ; virtual ~TMrbSubevent_Caen ();  ; void Clear (Option_t *="""");  ; TUsrHitBuffer * GetHitBuffer ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUsrSevtData1.html:659,inherit,inherited,659,doc/master/classTUsrSevtData1.html,https://root.cern,https://root.cern/doc/master/classTUsrSevtData1.html,2,['inherit'],['inherited']
Modifiability,". ROOT: TUsrSevtData2 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TUsrSevtData2 Class Reference. . Definition at line 80 of file clonesA_Event.h. Public Member Functions;  TUsrSevtData2 ();  ; virtual ~TUsrSevtData2 ();  ; Int_t GetPileup ();  ; virtual TClass * IsA () const;  ; void SetEvent (Int_t ev);  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMrbSubevent_Caen;  TMrbSubevent_Caen ();  ; virtual ~TMrbSubevent_Caen ();  ; void Clear (Option_t *="""");  ; TUsrHitBuffer * GetHitBuffer ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUsrSevtData2.html:659,inherit,inherited,659,doc/master/classTUsrSevtData2.html,https://root.cern,https://root.cern/doc/master/classTUsrSevtData2.html,2,['inherit'],['inherited']
Modifiability,". ROOT: TVector2 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Friends |; List of all members ; TVector2 Class ReferenceMath » Legacy Physics Classes. ; AttentionTVector2 is a legacy class. It is slower and worse for serialization than the recommended superior alternative ROOT::Math::XYVector.; More details can be found in the documentation of the Physics Vectors package. . TVector2 is a general two vector class, which can be used for the description of different vectors in 2D. ; Definition at line 18 of file TVector2.h. Public Types; typedef Double_t Scalar;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TVector2 ();  Constructor. ;  ;  TVector2 (const TVector2 &)=default;  ;  TVector2 (Double_t *s);  Constructor. ;  ;  TVector2 (Double_t x0, Double_t y0);  Constructor. ;  ;  ~TVector2 () override;  ; Double_t DeltaPhi (const TVector2 &v) const;  ; TClass * IsA () const override;  ; Double_t Mod () const;  Return modulo of this vector. ;  ; Double_t Mod2 () const;  ; TVector2 Norm (const TVector2 &v) const;  ; TVector2 & operator*= (Double_t s);  ; Double_t operator*= (TVector2 const &v);  ; TVector2 & operator+= (TVector2 const &v);  ; TVector2 & operator-= (TVector2 const &v);  ; TVe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVector2.html:759,inherit,inherited,759,doc/master/classTVector2.html,https://root.cern,https://root.cern/doc/master/classTVector2.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TVector3 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; Friends |; List of all members ; TVector3 Class ReferenceMath » Legacy Physics Classes. ; AttentionTVector3 is a legacy class. It is slower and worse for serialization than the recommended superior alternative ROOT::Math::XYZVector.; More details can be found in the documentation of the Physics Vectors package. . TVector3 is a general three vector class, which can be used for the description of different vectors in 3D. Declaration / Access to the components; TVector3 has been implemented as a vector of three Double_t variables, representing the cartesian coordinates. By default all components are initialized to zero:; TVector3 v1; // v1 = (0,0,0); TVector3 v3(1,2,3); // v3 = (1,2,3); TVector3 v4(v2); // v4 = v2; TVector3Definition TVector3.h:22; v2@ v2Definition rootcling_impl.cxx:3702; v4@ v4Definition rootcling_impl.cxx:3704; v3@ v3Definition rootcling_impl.cxx:3703; v1@ v1Definition rootcling_impl.cxx:3701; It is also possible (but not recommended) to initialize a TVector3 with a Double_t or Float_t C array.; You can get the basic components either by name or by index using operator():; xx = v1.X(); or xx = v1(0);; yy = v1.Y(); yy = v1(1);; zz = v1.Z(); zz = v1(2);; The member functions SetX(), SetY(), SetZ() and SetXYZ() allow to set the components:; v1.SetX(1.); v1.SetY(2.); v1.SetZ(3.);; v1.SetXYZ(1.,2.,3.);. Non-cartesian coordinates; To get information on the TVector3 in spherical (rho,phi,theta) or cylindrical (z,r,theta) coordinates, the; the member functions Mag() (=magnitude=rho in spherical coordinates), Mag2(), Theta(), CosTheta(), Phi(), Perp() (the transverse component=r in cylindrical coordinates), Perp2() can be used:; Double_t m = v.Mag(); // get magnitude (=rho=Sqrt(x*x+y*y+z*z))); Double_t m2 = v.Mag2(); // get ma",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVector3.html:760,variab,variables,760,doc/master/classTVector3.html,https://root.cern,https://root.cern/doc/master/classTVector3.html,1,['variab'],['variables']
Modifiability,". ROOT: TView3D Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TView3D Class ReferenceGraphics » 3D Graphics » Basic 3D graphics. ; The 3D view class. ; This package was originally written by Evgueni Tcherniaev from IHEP/Protvino.; The original Fortran implementation was adapted to HIGZ/PAW by Olivier Couet and Evgueni Tcherniaev.; This View class is a subset of the original system. It has been converted to a C++ class by Rene Brun.; TView3D creates a 3-D view in the current pad. In this 3D view Lego and Surface plots can be drawn and also 3D polyline and markers. Most of the time a TView3D is created automatically when a 3D object needs to be painted in a pad (for instance a Lego or a Surface plot).; In some case a TView3D should be explicitly. For instance to paint a 3D simple scene composed of simple objects like polylines and polymarkers. The following macro gives an example:; {; auto cV3D = new TCanvas(""cV3D"",""PolyLine3D & PolyMarker3D Window"",200,10,500,500);; ; // Creating a view; TView3D *view = (TView3D*) TView::CreateView(1);; view->SetRange(5,5,5,25,25,25);; ; // Create a first PolyLine3D; TPolyLine3D *pl3d1 = new TPolyLine3D(6);; pl3d1->SetPoint(0, 10, 20, 10);; pl3d1->SetPoint(1, 15, 15, 15);; pl3d1->SetPoint(2, 20, 20, 20);; pl3d1->SetPoint(3, 20, 10, 20);; pl3d1->SetPoint(4, 10, 10, 20);; pl3d1->SetPoint(5, 10, 10, 10);; ; // Create a first PolyMarker3D; TPolyMarker3D *pm3d1 = new TPolyMarker3D(9);; pm3d1->SetPoint( 0, 10, 10, 10);; pm3d1->SetPoint( 1, 20, 20, 20);; pm3d1->SetPoint( 2, 10, 20, 20);; pm3d1->SetPoint( 3, 10, 10, 20);; pm3d1->SetPoint( 4, 20, 20, 10);; pm3d1->SetPoint( 5, 20, 10, 10);; pm3d1->SetPoint( 6, 20, 10, 20);; pm3d1->SetPoint( 7, 10, 20, 10);; pm3d1->SetPoint( 8, 15, 15, 15);; pm3d1->SetMarkerSize(2);; pm3d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTView3D.html:499,adapt,adapted,499,doc/master/classTView3D.html,https://root.cern,https://root.cern/doc/master/classTView3D.html,1,['adapt'],['adapted']
Modifiability,". ROOT: TViewTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TViewTimer Class Reference. . Definition at line 145 of file TGTextView.h. Public Member Functions;  TViewTimer (TGView *t, Long_t ms);  ; Bool_t Notify () override;  Notify when timer times out and reset the timer. ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Start (Long_t milliSec=-1, Bool_t singleShot=kFALSE);  Starts the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTViewTimer.html:485,inherit,inherited,485,doc/master/classTViewTimer.html,https://root.cern,https://root.cern/doc/master/classTViewTimer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TViewUpdateTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TViewUpdateTimer Class Reference. . Definition at line 66 of file TGFSContainer.cxx. Public Member Functions;  TViewUpdateTimer (TGFileContainer *t, Long_t ms);  ; Bool_t Notify () override;  Reset the timer. ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTimerID (UInt_t id=0);  ; virtual void Start (Long_t milliSec=-1, Bool_t singleShot=kFALSE);  Starts the timer with a milliSec timeou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTViewUpdateTimer.html:456,inherit,inherited,456,doc/master/classTViewUpdateTimer.html,https://root.cern,https://root.cern/doc/master/classTViewUpdateTimer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TVirtualBranchBrowsable Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; Static Private Member Functions |; Private Attributes |; Static Private Attributes |; List of all members ; TVirtualBranchBrowsable Class ReferenceTree Library. ; TVirtualBranchBrowsable is a base class (not really abstract, but useless by itself) for helper objects that extend TBranch's browsing support. ; Each registered derived class's generator method is called, which fills all created helper objects into a list which can then be browsed. For details of what these browser helper objects can do, see e.g. TMethodBrowsable, which allows methods to show up in the TBrowser.; Only registered helper objects are created. By default, only TMethodBrowsable, TNonSplitBrowsable, and TCollectionPropertyBrowsable are registered (see RegisterDefaultGenerators). You can prevent any of their objects to show up in the browser by unregistering the generator: TMethodBrowsable::Unregister(); TMethodBrowsable::Unregisterstatic void Unregister()Wrapper for the registration method.Definition TBranchBrowsable.cxx:595; will stop creating browsable method helper objects from that call on. Note that these helper objects are cached (in TBranch::fBrowsables); already created (and thus cached) browsables will still appear in the browser even after unregistering the corresponding generator.; You can implement your own browsable objects and their generator; see e.g. the simple TCollectionPropertyBrowsable. Note that you will have to register your generator just like any other, and that you should implement the following methods for your own class, mainly for consistency reasons: static void Register() {; TVirtualBranchBrowsable::RegisterGenerator(GetBrowsables); }; static void Unregister() {; TVirtualBra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualBranchBrowsable.html:569,extend,extend,569,doc/master/classTVirtualBranchBrowsable.html,https://root.cern,https://root.cern/doc/master/classTVirtualBranchBrowsable.html,1,['extend'],['extend']
Modifiability,". ROOT: TVirtualFitter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TVirtualFitter Class ReferenceabstractHistogram Library. ; Abstract Base Class for Fitting. ; Definition at line 29 of file TVirtualFitter.h. Public Types; typedef void(* FCNFunc_t) (Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag);  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TVirtualFitter ();  Default constructor. ;  ;  ~TVirtualFitter () override;  Cleanup virtual fitter. ;  ; virtual Double_t Chisquare (Int_t npar, Double_t *params) const =0;  ; void Clear (Option_t *option="""") override=0;  Set name and title to empty strings (""""). ;  ; virtual Int_t ExecuteCommand (const char *command, Double_t *args, Int_t nargs)=0;  ; virtual void FixParameter (Int_t ipar)=0;  ; virtual void GetConfidenceIntervals (Int_t n, Int_t ndim, const Double_t *x, Double_t *ci, Double_t cl=0.95);  return confidence intervals in array x of dimension ndim implemented in TFitter and TLinearFitter ;  ; virtual void GetConfidenceIntervals (TObject *obj, Double_t cl=0.95);  return confidence intervals in TObject obj implemented in TFitter and TLinearFitter ;  ; virtual Doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualFitter.html:564,inherit,inherited,564,doc/master/classTVirtualFitter.html,https://root.cern,https://root.cern/doc/master/classTVirtualFitter.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TVirtualGeoConverter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Static Protected Attributes |; List of all members ; TVirtualGeoConverter Class ReferenceThe Geometry Package » Geometry classes. ; Abstract class for geometry converters. ; Definition at line 18 of file TVirtualGeoConverter.h. Public Member Functions;  TVirtualGeoConverter (TGeoManager *geom);  Geometry converter default constructor. ;  ;  ~TVirtualGeoConverter () override;  Geometry converter default destructor. ;  ; virtual void ConvertGeometry ();  ; TClass * IsA () const override;  ; void SetGeometry (TGeoManager *geom);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualGeoConverter.html:937,inherit,inherited,937,doc/master/classTVirtualGeoConverter.html,https://root.cern,https://root.cern/doc/master/classTVirtualGeoConverter.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TVirtualGeoPainter Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Static Protected Attributes |; List of all members ; TVirtualGeoPainter Class ReferenceabstractThe Geometry Package » Geometry classes. ; Abstract class for geometry painters. ; Definition at line 32 of file TVirtualGeoPainter.h. Public Types; enum  EGeoBombOption { kGeoNoBomb = 0; , kGeoBombXYZ = 1; , kGeoBombCyl = 2; , kGeoBombSph = 3; };  ; enum  EGeoVisLevel { kGeoVisLevel = 0; };  ; enum  EGeoVisOption { ;   kGeoVisDefault = 0; , kGeoVisLeaves = 1; , kGeoVisOnly = 2; , kGeoVisBranch = 3; , ;   kGeoVisChanged = 4. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TVirtualGeoPainter (TGeoManager *manager);  Geometry painter default constructor. ;  ;  ~TVirtualGeoPainter () override;  Geometry painter default destructor. ;  ; virtual void AddSize3D (Int_t numpoints, Int_t numsegs, Int_t numpolys)=0;  ; virtual TVirtualGeoTrack * AddTrack (Int_t id, Int_t pdgcode, TObject *particle)=0;  ; virtual void AddTrackPoint (Double_t *point, Double_t *box, Bool_t reset=kFALSE)=0;  ; virtual void BombTranslation (const Double_t *tr, Double_t *bombtr)=0;  ; virtual void CheckBoundaryErrors (Int_t ntracks=1000000, Double_t radius=-1.)=0;  ; virtual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualGeoPainter.html:769,inherit,inherited,769,doc/master/classTVirtualGeoPainter.html,https://root.cern,https://root.cern/doc/master/classTVirtualGeoPainter.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TVirtualMapFile Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TVirtualMapFile Class ReferenceabstractCore ROOT classes » Base ROOT classes. ; Abstract base class for TMapFile. ; This allows Core to handle TMapFile which is implemented in RIO ; Definition at line 27 of file TVirtualMapFile.h. Public Member Functions; virtual void Close (Option_t *option="""")=0;  ; virtual TClass * IsA () const;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualMapFile.html:731,inherit,inherited,731,doc/master/classTVirtualMapFile.html,https://root.cern,https://root.cern/doc/master/classTVirtualMapFile.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TVirtualPacketizer::TVirtualSlaveStat Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; Friends |; List of all members ; TVirtualPacketizer::TVirtualSlaveStat Class Referenceabstract. . Definition at line 157 of file TVirtualPacketizer.h. Public Member Functions; virtual TProofProgressStatus * AddProcessed (TProofProgressStatus *st)=0;  ; Float_t GetAvgRate ();  ; Long64_t GetEntriesProcessed () const;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetOrdinal () const;  ; Double_t GetProcTime () const;  ; TProofProgressStatus * GetProgressStatus ();  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualPacketizer_1_1TVirtualSlaveStat.html:753,inherit,inherited,753,doc/master/classTVirtualPacketizer_1_1TVirtualSlaveStat.html,https://root.cern,https://root.cern/doc/master/classTVirtualPacketizer_1_1TVirtualSlaveStat.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TVirtualPerfStats Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Friends |; List of all members ; TVirtualPerfStats Class ReferenceabstractCore ROOT classes » Base ROOT classes. ; Provides the interface for the PROOF internal performance measurement and event tracing. ; Definition at line 32 of file TVirtualPerfStats.h. Public Types; enum  EEventType { ;   kUnDefined; , kPacket; , kStart; , kStop; , ;   kFile; , kFileOpen; , kFileRead; , kRate; , ;   kNumEventType. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions; virtual ~TVirtualPerfStats ();  ; virtual void FileEvent (const char *slave, const char *slavename, const char *nodename, const char *filename, Bool_t isStart)=0;  ; virtual void FileOpenEvent (TFile *file, const char *filename, Double_t start)=0;  ; virtual void FileReadEvent (TFile *file, Int_t len, Double_t start)=0;  ; virtual Long64_t GetBytesRead () const =0;  ; virtual Long64_t GetNumEvents () const =0;  ; TClass * IsA () const override;  ; virtual void PacketEvent (const char *slave, const char *slavename, const char *filename, Long64_t eventsprocessed, Double_t latency, Double_t proctime, Double_t cputime, Long64_t bytesRead)=0;  ; virtual void PrintBasketIn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualPerfStats.html:677,inherit,inherited,677,doc/master/classTVirtualPerfStats.html,https://root.cern,https://root.cern/doc/master/classTVirtualPerfStats.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TVirtualProofPlayer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; List of all members ; TVirtualProofPlayer Class ReferenceabstractPROOF » PROOF kernel Libraries. ; Abstract interface for the PROOF player. ; See the concrete implementations under 'proofplayer' for details. ; Definition at line 43 of file TVirtualProofPlayer.h. Public Types; enum  EExitStatus { kFinished; , kStopped; , kAborted; };  ; enum  EStatusBits { kIsSubmerger = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TVirtualProofPlayer ();  ;  ~TVirtualProofPlayer () override;  ; virtual void AddEventsProcessed (Long64_t ev)=0;  ; virtual void AddInput (TObject *inp)=0;  ; virtual void AddOutput (TList *out)=0;  ; virtual Int_t AddOutputObject (TObject *obj)=0;  ; virtual void AddQueryResult (TQueryResult *q)=0;  ; virtual void ClearInput ()=0;  ; virtual TDrawFeedback * CreateDrawFeedback (TProof *p)=0;  ; virtual void DeleteDrawFeedback (TDrawFeedback *f)=0;  ; virtual Long64_t DrawSelect (TDSet *set, const char *varexp, const char *selection, Option_t *option="""", Long64_t nentries=-1, Long64_t firstentry=0)=0;  ; virtual void Feedback (TList *objs)=0;  ; virtual Long64_t Finalize (Bool_t force=kFALSE, Bool_t sync=",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualProofPlayer.html:637,inherit,inherited,637,doc/master/classTVirtualProofPlayer.html,https://root.cern,https://root.cern/doc/master/classTVirtualProofPlayer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TVirtualTreePlayer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Static Public Attributes |; Static Private Attributes |; List of all members ; TVirtualTreePlayer Class ReferenceabstractTree Library. ; Abstract base class defining the interface for the plugins that implement Draw, Scan, Process, MakeProxy, etc. ; for a TTree object. See the individual documentations in TTree. ; Definition at line 38 of file TVirtualTreePlayer.h. Public Member Functions;  TVirtualTreePlayer ();  ;  ~TVirtualTreePlayer () override;  Common destructor. ;  ; virtual TVirtualIndex * BuildIndex (const TTree *T, const char *majorname, const char *minorname)=0;  ; virtual TTree * CopyTree (const char *selection, Option_t *option="""", Long64_t nentries=kMaxEntries, Long64_t firstentry=0)=0;  ; virtual Long64_t DrawScript (const char *wrapperPrefix, const char *macrofilename, const char *cutfilename, Option_t *option, Long64_t nentries, Long64_t firstentry)=0;  ; virtual Long64_t DrawSelect (const char *varexp, const char *selection, Option_t *option, Long64_t nentries, Long64_t firstentry)=0;  ; virtual Int_t Fit (const char *formula, const char *varexp, const char *selection, Option_t *option, Option_t *goption, Long64_t nentries, Long64_t firstentry)=0;  ; virtual Int_t GetDimension () const =0;  ; virtual Long64_t GetEntries (const char *)=0;  ; virtual TH1 * GetHistogram () const =0;  ; virtual Int_t GetNfill () const =0;  ; virtual TTreeFormula * GetSelect () const =0;  ; virtual Long64_t GetSelectedRows () const =0;  ; virtual TSelector * GetSelector () const =0;  ; virtual TSelector * GetSelectorFromFile () const =0;  ; virtual Double_t * GetV1 () const =0;  ; virtual Double_t * GetV2 () const =0;  ; virtual Double_t * GetV3 () const =0;  ; virtual Double_t * GetV4 () const =0;  ; virtual Double_t * GetVal (Int_t) const =0;  ; virtual TTreeFormu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualTreePlayer.html:397,plugin,plugins,397,doc/master/classTVirtualTreePlayer.html,https://root.cern,https://root.cern/doc/master/classTVirtualTreePlayer.html,1,['plugin'],['plugins']
Modifiability,". ROOT: TVirtualX Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; List of all members ; TVirtualX Class ReferenceGraphics » Graphics' Backends | Core ROOT classes » Base ROOT classes. ; Semi-Abstract base class defining a generic interface to the underlying, low level, native graphics backend (X11, Win32, MacOS, OpenGL...). ; An instance of TVirtualX itself defines a batch interface to the graphics system. ; Definition at line 46 of file TVirtualX.h. Public Types; enum  EBoxMode { kHollow; , kFilled; };  ; enum  EDrawMode { kCopy = 1; , kXor; , kInvert; };  ; enum  ETextMode { kClear; , kOpaque; };  ; enum  ETextSetMode { kCheck; , kLoad; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TVirtualX ();  ;  TVirtualX (const char *name, const char *title);  Ctor of ABC. ;  ; virtual ~TVirtualX ();  ; virtual Int_t AddPixmap (ULongptr_t pixid, UInt_t w, UInt_t h);  Registers a pixmap created by TGLManager as a ROOT pixmap. ;  ; virtual Int_t AddWindow (ULongptr_t qwid, UInt_t w, UInt_t h);  Registers a window created by Qt as a ROOT window. ;  ; virtual Bool_t AllocColor (Colormap_t cmap, ColorStruct_t &color);  Allocates a read-only colormap entry corresponding to the closest RGB value suppo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualX.html:841,inherit,inherited,841,doc/master/classTVirtualX.html,https://root.cern,https://root.cern/doc/master/classTVirtualX.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TWebCanvasTimer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TWebCanvasTimer Class Reference. . Definition at line 67 of file TWebCanvas.cxx. Public Member Functions;  TWebCanvasTimer (TWebCanvas &canv);  ; Bool_t IsSlow () const;  ; void SetSlow (Bool_t slow=kTRUE);  ; void Timeout () override;  used to send control messages to clients ;  ;  Public Member Functions inherited from TTimer;  TTimer (const char *command, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (Long_t milliSec=0, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ;  TTimer (TObject *obj, Long_t milliSec, Bool_t mode=kTRUE);  Create timer that times out in ms milliseconds. ;  ; virtual ~TTimer ();  ; void Add () override;  ; Bool_t CheckTimer (const TTime &now);  Check if timer timed out. ;  ; TTime GetAbsTime () const;  ; const char * GetCommand () const;  ; TObject * GetObject ();  ; TTime GetTime () const;  ; UInt_t GetTimerID ();  ; Bool_t HasTimedOut () const;  ; TClass * IsA () const override;  ; Bool_t IsAsync () const;  ; Bool_t IsInterruptingSyscalls () const;  ; Bool_t IsRunning ();  This function checks if the timer is running within gSystem (Has been started and did not finish yet). ;  ; Bool_t IsSync () const;  ; Bool_t Notify () override;  Notify when timer times out. ;  ; void Remove () override;  ; void Reset ();  Reset the timer. ;  ; void SetCommand (const char *command);  Set the interpreter command to be executed at time out. ;  ; void SetInterruptSyscalls (Bool_t set=kTRUE);  When the argument is true the a-synchronous timer (SIGALRM) signal handler is set so that interrupted syscalls will not be restarted by the kernel. ;  ; void SetObject (TObject *object);  Set the object to be notified at time out. ;  ; void SetTime (Long_t milliSec);  ; void SetTim",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebCanvasTimer.html:524,inherit,inherited,524,doc/master/classTWebCanvasTimer.html,https://root.cern,https://root.cern/doc/master/classTWebCanvasTimer.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TWebSnapshot Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TWebSnapshot Class ReferenceWeb Display » ROOT 6 Web Display. ; Paint state of object to transfer to JavaScript side. ; Definition at line 20 of file TWebSnapshot.h. Public Types; enum  { ;   kNone = 0; , kObject = 1; , kSVG = 2; , kSubPad = 3; , ;   kColors = 4; , kStyle = 5; , kFont = 6. };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  ~TWebSnapshot () override;  destructor ;  ; Int_t GetKind () const;  ; const char * GetObjectID () const;  ; TObject * GetSnapshot () const;  ; TClass * IsA () const override;  ; void SetObjectID (const std::string &id);  ; void SetObjectIDAsPtr (void *ptr, const std::string &suffix="""");  Use pointer to assign object id - TString::Hash. ;  ; void SetOption (const std::string &opt);  ; void SetSnapshot (Int_t kind, TObject *snapshot, Bool_t owner=kFALSE);  SetUse pointer to assign object id - TString::Hash. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebSnapshot.html:606,inherit,inherited,606,doc/master/classTWebSnapshot.html,https://root.cern,https://root.cern/doc/master/classTWebSnapshot.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TWin32Condition Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Attributes |; List of all members ; TWin32Condition Class Reference. . Definition at line 55 of file TWin32Condition.h. Public Member Functions;  TWin32Condition (TMutexImp *m);  Create Condition variable. ;  ; virtual ~TWin32Condition ();  TCondition dtor. ;  ; Int_t Broadcast () override;  Broadcast is like signal but wakes all threads which have called Wait(). ;  ; TClass * IsA () const override;  ; Int_t Signal () override;  If one or more threads have called Wait(), Signal() wakes up at least one of them, possibly more. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t TimedWait (ULong_t secs, ULong_t nanoSecs=0) override;  TimedWait() is given an absolute time to wait until. ;  ; Int_t Wait () override;  Wait for the condition variable to be signalled. ;  ;  Public Member Functions inherited from TConditionImp;  TConditionImp ();  ; virtual ~TConditionImp ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWin32Condition.html:410,variab,variable,410,doc/master/classTWin32Condition.html,https://root.cern,https://root.cern/doc/master/classTWin32Condition.html,1,['variab'],['variable']
Modifiability,". ROOT: TWin32Mutex Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Types |; Private Attributes |; Friends |; List of all members ; TWin32Mutex Class Reference. . Definition at line 28 of file TWin32Mutex.h. Public Member Functions;  TWin32Mutex (Bool_t recursive=kFALSE);  Create a Win32 mutex lock. ;  ; virtual ~TWin32Mutex ();  TMutex dtor. ;  ; TClass * IsA () const override;  ; Int_t Lock () override;  Lock the mutex. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t TryLock () override;  Try locking the mutex. Returns 0 if mutex can be locked. ;  ; Int_t UnLock () override;  Unlock the mutex. ;  ;  Public Member Functions inherited from TMutexImp;  TMutexImp ();  ; virtual ~TMutexImp ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWin32Mutex.html:880,inherit,inherited,880,doc/master/classTWin32Mutex.html,https://root.cern,https://root.cern/doc/master/classTWin32Mutex.html,2,['inherit'],['inherited']
Modifiability,". ROOT: TWin32ThreadFactory Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; List of all members ; TWin32ThreadFactory Class Reference. . Definition at line 31 of file TWin32ThreadFactory.h. Public Member Functions;  TWin32ThreadFactory (const char *name=""Win32"", const char *title=""Win32 Thread Factory"");  Create Win32 thread factory. Also sets global gThreadFactory to this. ;  ; virtual ~TWin32ThreadFactory ();  ; TConditionImp * CreateConditionImp (TMutexImp *m) override;  Return a Win32 condition variable. ;  ; TMutexImp * CreateMutexImp (Bool_t recursive) override;  Return a Win32 Mutex. ;  ; TThreadImp * CreateThreadImp () override;  Return a Win32 thread. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TThreadFactory;  TThreadFactory (const char *name=""Unknown"", const char *title=""Unknown Thread Factory"");  TThreadFactory ctor only called by derived classes. ;  ; virtual ~TThreadFactory ();  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWin32ThreadFactory.html:638,variab,variable,638,doc/master/classTWin32ThreadFactory.html,https://root.cern,https://root.cern/doc/master/classTWin32ThreadFactory.html,1,['variab'],['variable']
Modifiability,". ROOT: TWinNTSystem Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Static Protected Member Functions |; Private Member Functions |; Static Private Member Functions |; Private Attributes |; List of all members ; TWinNTSystem Class Reference. . Definition at line 58 of file TWinNTSystem.h. Public Types; typedef Bool_t(* ThreadMsgFunc_t) (MSG *);  ;  Public Types inherited from TSystem; enum  EAclicMode { kDefault; , kDebug; , kOpt; };  ; enum  EAclicProperties { kFlatBuildDir = (1ULL << ( 0 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TWinNTSystem ();  ctor ;  ; virtual ~TWinNTSystem ();  dtor ;  ; void Abort (int code=0) override;  Abort the application. ;  ; int AcceptConnection (int sock) override;  Accept a connection. ;  ; Bool_t AccessPathName (const char *path, EAccessMode mode=kFileExists) override;  Returns FALSE if one can access a file using the specified access mode. ;  ; void AddDynamicPath (const char *dir) override;  Add a new directory to the dynamic path. ;  ; void AddFileHandler (TFileHandler *fh) override;  Add a file handler to the list of system file handlers. ;  ; void AddSignalHandler (TSignalHandler *sh) override;  Add a signal handler to list of system signal handlers. ;  ; void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWinNTSystem.html:515,inherit,inherited,515,doc/master/classTWinNTSystem.html,https://root.cern,https://root.cern/doc/master/classTWinNTSystem.html,2,['inherit'],['inherited']
Modifiability,". ROOT: TXMLAttr Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TXMLAttr Class ReferenceInput/Output Library. ; TXMLAttribute is the attribute of an Element. ; It contains the name and the value of the attribute. ; Definition at line 18 of file TXMLAttr.h. Public Member Functions;  TXMLAttr (const char *key, const char *value);  ;  ~TXMLAttr () override;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetValue () const;  ; TClass * IsA () const override;  ; const char * Key () const;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLAttr.html:904,inherit,inherited,904,doc/master/classTXMLAttr.html,https://root.cern,https://root.cern/doc/master/classTXMLAttr.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TXMLEntity Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TXMLEntity Class Reference. . Definition at line 162 of file TXMLEngine.cxx. Public Member Functions;  TXMLEntity ();  is system (file) ;  ;  TXMLEntity (const TString &name, const TString &value, Bool_t sys);  ; Bool_t IsSystem () const;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual void SetTitle (const char *title="""");  Set the title of the TNamed. ;  ; virtual Int_t Sizeof () const;  Re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLEntity.html:478,inherit,inherited,478,doc/master/classTXMLEntity.html,https://root.cern,https://root.cern/doc/master/classTXMLEntity.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TXMLNode Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TXMLNode Class ReferenceInput/Output Library. ; TXMLNode contains a pointer to xmlNode, which is a node under the DOM tree. ; A node can be an Element, an Attribute, a Text Node or a Comment Node. One can navigate the DOM tree by accessing the siblings and parent or child nodes. Also retriving the Attribute or the Text in an Element node. ; Definition at line 20 of file TXMLNode.h. Public Types; enum  EXMLElementType { kXMLElementNode = 1; , kXMLAttributeNode = 2; , kXMLTextNode = 3; , kXMLCommentNode = 8; };  This enum is based on libxml tree Enum xmlElementType. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TXMLNode (_xmlNode *node, TXMLNode *parent=nullptr, TXMLNode *previous=nullptr);  TXMLNode constructor. ;  ;  ~TXMLNode () override;  Destructor. ;  ; TList * GetAttributes ();  Returns a list of node's attribute if any, returns 0 if no attribute. ;  ; TXMLNode * GetChildren ();  Returns the node's child if any, returns 0 if no child. ;  ; const char * GetContent () const;  Returns the content if any, or 0. ;  ; const char * GetNamespaceHref () const;  Returns th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLNode.html:884,inherit,inherited,884,doc/master/classTXMLNode.html,https://root.cern,https://root.cern/doc/master/classTXMLNode.html,1,['inherit'],['inherited']
Modifiability,". ROOT: TXMLParser Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TXMLParser Class ReferenceabstractInput/Output Library. ; TXMLParser is an abstract class which interfaces with Libxml2. ; Libxml2 is the XML C parser and toolkit developed for the Gnome project. The libxml library provides two interfaces to the parser, a DOM style tree interface and a SAX style event based interface. TXMLParser is parent class of TSAXParser and TDOMParser, which are a SAX interface and DOM interface of libxml. ; Definition at line 24 of file TXMLParser.h. Public Member Functions;  TXMLParser ();  Initializes parser variables. ;  ;  ~TXMLParser () override;  Cleanup. ;  ; Int_t GetParseCode () const;  ; const char * GetParseCodeMessage (Int_t parseCode) const;  Returns the parse code message. ;  ; Bool_t GetReplaceEntities () const;  ; Bool_t GetStopOnError () const;  ; Bool_t GetValidate () const;  ; const char * GetValidateError () const;  ; const char * GetValidateWarning () const;  ; TClass * IsA () const override;  ; virtual Int_t ParseBuffer (const char *contents, Int_t len)=0;  ; virtual Int_t ParseFile (const char *filename)=0;  ; void SetReplaceEntities (Bool_t val=kTRUE);  The parser will replace/expand entities. ;  ; void SetStopOnError (Bool_t stop=kTRUE);  Set parser stops in case of error: ;  ; void SetValidate (Bool_t val=kTRUE);  The parser will validate the xml file if val = true. ;  ; virtual void StopParser ();  Stops parsing. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLParser.html:844,variab,variables,844,doc/master/classTXMLParser.html,https://root.cern,https://root.cern/doc/master/classTXMLParser.html,1,['variab'],['variables']
Modifiability,". ROOT: TXMLPlayer Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; List of all members ; TXMLPlayer Class Reference. . Definition at line 25 of file TXMLPlayer.h. Public Member Functions;  TXMLPlayer ();  default constructor ;  ;  ~TXMLPlayer () override;  destructor of TXMLPlayer object ;  ; TClass * IsA () const override;  ; Bool_t ProduceCode (TList *cllist, const char *filename);  Produce streamers for provide class list TList should include list of classes, for which code should be generated. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLPlayer.html:863,inherit,inherited,863,doc/master/classTXMLPlayer.html,https://root.cern,https://root.cern/doc/master/classTXMLPlayer.html,1,['inherit'],['inherited']
