quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Testability,"## Proposed Changes; Added parallel output of Tecplot binary .szplt files.; Updated TecIO source to the latest version. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/656:687,test,test,687,https://su2code.github.io,https://github.com/su2code/SU2/pull/656,1,['test'],['test']
Testability,"## Proposed Changes; Added profiling option through `gprof`. This allows you to profile your SU2 application to see where it spends most of its time and therefore figure out which of your new features could use some better efficiency. . How to enable profiling? Add the flag `-Denable-gprof` to your `meson.py` command and re-configure. . Now you can run SU2 or SU2 AD as normal. However, at the end, a file called `gmon.out` will be generated in your working directory. . In order to get the analysis from the profiling, run `gprof <path/to/SU2/executable> > analysis.txt`. Now, the file `analysis.txt` contains the profiling analysis which you can use to assess the efficiency of your code. Added instructions for enabling and using the gprof option on the su2code.github.io repository under PR #145 ; ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2243:1235,test,test,1235,https://su2code.github.io,https://github.com/su2code/SU2/pull/2243,1,['test'],['test']
Testability,"## Proposed Changes; Added required files for test case VV sandia jet and changed regression.yml to get residual values required for vandv.py; @bigfooted @Cristopher-Morales. (This PR is created to get the residual values for the vandv.py script.); . ## Related Work; -. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2097:46,test,test,46,https://su2code.github.io,https://github.com/su2code/SU2/pull/2097,2,['test'],['test']
Testability,"## Proposed Changes; Added the new files from a previous commit to the Xcode IDE project file. ; There is also a change to printing_toolbox.cpp in Common/src/toolboxes/; - slight modification to the relative path of a include file. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/634:940,test,test,940,https://su2code.github.io,https://github.com/su2code/SU2/pull/634,1,['test'],['test']
Testability,"## Proposed Changes; Adding a warning if a non-zero Reynolds number is used for NS or RANS simulation. Currently the code will diverge will no explanation. ; ; - [ x] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/669:456,test,test,456,https://su2code.github.io,https://github.com/su2code/SU2/pull/669,1,['test'],['test']
Testability,"## Proposed Changes; Adding an implicit flag to prevent segfault while running Roe scheme explicitly.; ; ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/654:680,test,test,680,https://su2code.github.io,https://github.com/su2code/SU2/pull/654,1,['test'],['test']
Testability,"## Proposed Changes; Adding cstdint header to printing_toolbox.hpp. ## Reason; I was building SU2 from source this morning. Running ninja threw an compilation error with a comment to import cstdint in printing_toolbox.hpp since uint8_t is not defined in the scope:. ```; ...; ../SU2_CFD/src/output/filewriter/CParaviewXMLFileWriter.cpp:240:10: error: ‘uint8_t’ was not declared in this scope; 240 | vector<uint8_t> typeBuf(myElem);; | ^~~~~~~; ../SU2_CFD/src/output/filewriter/CParaviewXMLFileWriter.cpp:30:1: note: ‘uint8_t’ is defined in header ‘<cstdint>’; did you forget to ‘#include <cstdint>’?; 29 | #include ""../../../../Common/include/toolboxes/printing_toolbox.hpp""; +++ |+#include <cstdint>; 30 | ; ...; ```; Adding the header solves the issue. . Here some additional information:; OS: Fedora 38; Configuration: MPI, pythonwrapper, autodiff; Compiler: g++ 13.1.1. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2099:1431,test,test,1431,https://su2code.github.io,https://github.com/su2code/SU2/pull/2099,1,['test'],['test']
Testability,"## Proposed Changes; Adding in history output residuals of species flamelet controlling variables for multizone simulations. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2269:816,test,test,816,https://su2code.github.io,https://github.com/su2code/SU2/pull/2269,1,['test'],['test']
Testability,"## Proposed Changes; Adding support to use the external library libROM (https://github.com/LLNL/libROM) for reduced order modeling with SU2. libROM captures solution data and either computes the proper orthogonal decomposition (POD) over the data, or saves the solution ""snapshot"" in an hdf5 file for later POD computation. The POD matrix is also saved in an hdf5 file. ## Related Work; There are a couple projects using libROM:; - For projection-based model order reduction (PROM) in the branch feature_MOR; - It is also being used with the NEMO solver to further test the PROM capabilities; - libROM was used in a prior project that used the POD matrix as input to a neural network (to be published). - libROM also has other features, like help choosing the hyper-parameter nodes (a PROM step) and under development are black-box modeling methods like dynamic mode decomposition (DMD). Please let me know if you have any questions / comments / recommendations!. I have tested this on macOS and linux. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Steps to Compile:. 1. Compile libROM; 2. Compile SU2 with the following meson options:; `./meson.py build --prefix=/your/prefix -Denable-librom=true -Dlibrom_root=/path/to/libROM`; 3. You may need to add the environment variable:; `ex",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1310:565,test,test,565,https://su2code.github.io,https://github.com/su2code/SU2/pull/1310,2,['test'],"['test', 'tested']"
Testability,"## Proposed Changes; Adding the new solver NEMO to the develop branch. The NEMO solver concerns the simulation of hypersonic flows, accounting for thermal nonequilibrium and finite-rate chemistry, following Park's 2Temperature model. The system of equations to solve is the conservation of each chemical species mass, momentum, total energy and vibrational energy. Both inviscid and viscous simulations are available, respectively, solver NEMO_EULER and NEMO_NAVIER_STOKES. ## Related Work; This is a new solver, therefore is mostly new and independent work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [? ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags). I was not able to test this, since these commands do not seem to work with meson/ninja. . - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1006:1041,test,test,1041,https://su2code.github.io,https://github.com/su2code/SU2/pull/1006,2,['test'],['test']
Testability,"## Proposed Changes; Addition and cleanup of isothermal catalytic wall boundary, integration with rest of code. Code optimization of catalytic wall routines, removal of array allocations. Submitting this draft PR primarily to get comments on approach, style, not looking to PR into develop quite yet. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1417:1041,test,test,1041,https://su2code.github.io,https://github.com/su2code/SU2/pull/1417,1,['test'],['test']
Testability,"## Proposed Changes; Addition of a new actuator disk model with a variable load and swirl distributions along disk radius. Contributors:; Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II.; EttoreSaetta, lorenzorusso07, rtogna. ## Related Work; Introduction of new options in the config. file.; Introduction of an additional input file that contains the propeller data.; Introduction of additional c++ functions.; Addition of code lines to existing functions preserving the original actuator disk model. ## PR Checklist; - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1027:861,test,test,861,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027,1,['test'],['test']
Testability,"## Proposed Changes; Addition of multi-layer perceptron class which can be used to evaluate trained multi-layer perceptrons in processes such as thermodynamic state evaluation in data-driven fluid models.; . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. In the Tutorials repository, branch feature_multilayer_perceptron, one can find under ""common/multilayer_perceptron"" some python scripts which demonstrate how to translate a model trained through Tensorflow to an input file compatible with the CLookUp_ANN class. The README.md file in that tutorial folder also lists some important information regarding the functionality of the CLookUp_ANN class, datadriven fluid model, and MLP input file format. . Shall I leave those there or should these be uploaded elsewhere?. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757:1299,test,test,1299,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757,1,['test'],['test']
Testability,"## Proposed Changes; Addition of preferential diffusion model for modeling of hydrogen-rich reactants.; The new features allow for an additional transported scalar; the mixture fraction. This enables the solution process for partially pre-mixed, laminar flame problems, as well as the implementation of preferential diffusion. . A detailed description of the SU2 FGM solver can be found on the SU2 website repository (https://github.com/su2code/su2code.github.io) under feature_new_flamelet. . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2156:1182,test,test,1182,https://su2code.github.io,https://github.com/su2code/SU2/pull/2156,1,['test'],['test']
Testability,"## Proposed Changes; Addresses the compilation time issue (#851) in the way discussed with @talbring in #824.; Plus, I think it is time to bite the bullet and cleanup CConfig, no more .inl, tabs replaced (but the comments still look ok-ish), methods made const when possible.; This will probably cause you issues, but the changes to these files are usually very linear and so, easy to re-apply.; There is no more CCreateMap function, in C++11 braced initialization can be used instead e.g.:; `map<string, string> AverageGroupName = {{""BGS_RES"", ""bgs""},{""RMS_RES"",""rms""},{""MAX_RES"", ""max""}};`. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/853:903,test,test,903,https://su2code.github.io,https://github.com/su2code/SU2/pull/853,1,['test'],['test']
Testability,"## Proposed Changes; Adds epistemic uncertainty quantification capabilities for the SST turbulence model. Details on methodology, implementation, and performance on test cases, are available here: https://arxiv.org/abs/1803.00725; . ## Related Work; NA. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/570:165,test,test,165,https://su2code.github.io,https://github.com/su2code/SU2/pull/570,2,['test'],['test']
Testability,"## Proposed Changes; Adds the simplest type of custom output to all solvers. Add coverage for custom functions in some discrete adjoint cases. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2020:460,test,test,460,https://su2code.github.io,https://github.com/su2code/SU2/pull/2020,1,['test'],['test']
Testability,"## Proposed Changes; After surface deformation, the surface points are checked for self-intersection within the FFD box. If that is the case, a recursive procedure is done to prevent those. After grid deformation, all elements are checked on convexity. If there are nonconvex elements, a procedure is started that starts from the undeformed mesh and recursively changes the deformation magnitude until no nonconvex elements are present. ## Related Work; None that I know of. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. - With respect to the test case: this can be used with virtually any case that has deformation. If the scale in OPT_OBJECTIVE is set to a high enough value, the deformation will be so big that intersections will occur.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1076:1025,test,test,1025,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076,2,['test'],['test']
Testability,"## Proposed Changes; Allow for conjugate heat transfer between solid domains and the modeling of contact resistance. . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] Configuration option for contact resistance at interfaces.; - [x] Communicate contact resistance values between config and CInterface.; - [x] Test grid independence of contact resistance model.; - [x] Test case with both solid-solid and solid-fluid.; - [x] Add test case to regression tests.; - [x] Update documentation.; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2152:541,Test,Test,541,https://su2code.github.io,https://github.com/su2code/SU2/pull/2152,5,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,"## Proposed Changes; Allows specifying an objective function via a math expression using the history outputs and typical math functions.; General cleanup of dead code and output fixes. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1478:537,test,test,537,https://su2code.github.io,https://github.com/su2code/SU2/pull/1478,1,['test'],['test']
Testability,"## Proposed Changes; Allows this type of ""language"" to create new history outputs.; ```; CUSTOM_OUTPUTS= 'mach : Macro{hypot(VELOCITY_X, VELOCITY_Y) / SOUND_SPEED};\; avg_mach : AreaAvg{$mach}[inlet];\; var_mach : AreaAvg{pow($mach - avg_mach, 2)}[inlet];\; dev_mach : Function{sqrt(var_mach)}'; ```. ## Related Work; #1478 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1705:678,test,test,678,https://su2code.github.io,https://github.com/su2code/SU2/pull/1705,1,['test'],['test']
Testability,"## Proposed Changes; Along the lines of #753 and #959 . If this causes someone lots of conflicts when merging, or you have a lot of new code using the old CPoint (that will not compile anymore) it may be helpful to run this python script ([refactor_cpoint.txt](https://github.com/su2code/SU2/files/4608693/refactor_cpoint.txt)) before or after respectively, it was used for 80% of the refactoring done here. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/966:718,test,test,718,https://su2code.github.io,https://github.com/su2code/SU2/pull/966,1,['test'],['test']
Testability,"## Proposed Changes; An option of supersonic inlet profile will be added, the uniform temperature, pressure, and velocity at the inlet for a supersonic inlet BC will be replaced with vertex values. ## Related Work; Modification to related files. ; e.g. CFVMFlowSolverBase.inl, CEulerSolver.cpp, etc.; Recompelling the codes and debugging; Testing using proper cases and doing iterations. ## PR Checklist; - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2325:339,Test,Testing,339,https://su2code.github.io,https://github.com/su2code/SU2/pull/2325,2,"['Test', 'test']","['Testing', 'test']"
Testability,"## Proposed Changes; Another snapshot from #824.; All major routines of CFEASolver (and by association CMeshSolver) now use OpenMP directives.; Parallelization is at the level of each individual routine, i.e. threads are ""started"" locally.; This required avoiding the use of small auxiliary array member variables, as that is not thread safe (multiple threads cannot write to the same location) In doing that I ended up doing some cleanup and so I thought it would be better to move the files, strip spaces, etc., it should make the review easier actually.; I will document to the major changes below. ## Related Work; #824 #789 ; Depends on #834 and #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/843:967,test,test,967,https://su2code.github.io,https://github.com/su2code/SU2/pull/843,1,['test'],['test']
Testability,"## Proposed Changes; As agreed during today's developer's meeting, this PR adds a general square matrix utility to the toolboxes such that it can be used by other people. It is not used in the current source tree of the develop branch and therefore it should not have any affect on current simulations.; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1068:881,test,test,881,https://su2code.github.io,https://github.com/su2code/SU2/pull/1068,1,['test'],['test']
Testability,"## Proposed Changes; As an alternative to `MARKER_HEATFLUX = (heat_flux_marker, q,... )`, this PR adds `MARKER_HEATTRANSFER = (heat_transfer_marker, h, Twall)` to the list of wall boundary conditions where the wall heat flux is computed by q = h*(Twall-Tref). h is the heat transfer coefficient, Tref is to be set by default or by a further option.; ; @bigfooted Is this what you've been thinking of? If so, I'd go ahead adding this to the compressible and the heat solver as well, if not, we should get this right for the incompressible solver first :-). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1226:1148,test,test,1148,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226,1,['test'],['test']
Testability,"## Proposed Changes; As discussed in today's developers meeting. ## Related Work; #1014. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1044:399,test,test,399,https://su2code.github.io,https://github.com/su2code/SU2/pull/1044,1,['test'],['test']
Testability,"## Proposed Changes; Breakup CVariable classes into individual hpp and cpp files, with inlines defined in hpp.; Revise the includes of client classes (CSolver and derived). ## Related Work; Addresses part of #583 ; Preparation for #716. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/725:547,test,test,547,https://su2code.github.io,https://github.com/su2code/SU2/pull/725,1,['test'],['test']
Testability,"## Proposed Changes; Brief update of Xcode; . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1660:641,test,test,641,https://su2code.github.io,https://github.com/su2code/SU2/pull/1660,1,['test'],['test']
Testability,"## Proposed Changes; Changed the wall distance calculation to calculate the distance to the nearest element rather than calculating the distance to the nearest node. This significantly improves the performance of turbulence models for meshes where the mesh doesn't grow perpendicular to the wall. This pull request also contains a simple improvement to the AD recording in CADTElemClass::DetermineNearestElement that significantly reduces memory usage when running the Discrete Adjoint. . This will likely break any regression test that requires a wall distance calculation, i.e. any test that has a turbulence model. Is there a easy way of changing the regression test values that doesn't require manual changing of the values? . ## Related Work; NA. ## PR Checklist. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/604:527,test,test,527,https://su2code.github.io,https://github.com/su2code/SU2/pull/604,4,['test'],['test']
Testability,"## Proposed Changes; Changed the wall distance calculation to calculate the distance to the nearest element rather than calculating the distance to the nearest node. This significantly improves the performance of turbulence models for meshes where the mesh doesn't grow perpendicular to the wall. This pull request also contains a simple improvement to the AD recording in CADTElemClass::DetermineNearestElement that significantly reduces memory usage when running the Discrete Adjoint. This will likely break any regression test that requires a wall distance calculation, i.e. any test that has a turbulence model. Is there a easy way of changing the regression test values that doesn't require manual changing of the values?. (I mistakenly submitted the previous PR to merge with master) . ## Related Work; NA. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/605:525,test,test,525,https://su2code.github.io,https://github.com/su2code/SU2/pull/605,4,['test'],['test']
Testability,"## Proposed Changes; Changes have been made to accomodate very large meshes/data sets.; MPI calls were changed to accomodate values over the limit of INT_MAX, and some standard int variables were changed to unsigned long variables. ## Related Work; Addresses problems raised in issue #949 . ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/980:601,test,test,601,https://su2code.github.io,https://github.com/su2code/SU2/pull/980,1,['test'],['test']
Testability,"## Proposed Changes; Changes in CoDiPack accelerate parallel preaccumulations.; ; ## Related Work; #2039, previous work on hybrid AD. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2092:451,test,test,451,https://su2code.github.io,https://github.com/su2code/SU2/pull/2092,1,['test'],['test']
Testability,"## Proposed Changes; Check for Nan in the monitored values of COutput (was already done for time domain).; For SU2_CFD_AD and SU2_DOT_AD the default MATH_PROBLEM becomes DISCRETE_ADJOINT; When the MATH_PROBLEM is DISCRETE_ADJOINT the linear solver and preconditioner of primal solvers is made the same as the DISCADJ_** ones, i.e. LINEAR_SOLVER and LINEAR_SOLVER_PREC are ignored (see why I think it makes sense in #942, and let me know if you think it doesn't make sense). ## Related Work; #942 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1105:850,test,test,850,https://su2code.github.io,https://github.com/su2code/SU2/pull/1105,1,['test'],['test']
Testability,"## Proposed Changes; Clean up the turbomachinery functions in CEulerSolver.cpp and apply SU2 coding rules. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2155:795,test,test,795,https://su2code.github.io,https://github.com/su2code/SU2/pull/2155,1,['test'],['test']
Testability,"## Proposed Changes; Cleaned up the Riemann boundary condition in CEulerSolver. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2176:768,test,test,768,https://su2code.github.io,https://github.com/su2code/SU2/pull/2176,1,['test'],['test']
Testability,"## Proposed Changes; Cleanup CHeatSolver.cpp; - define loop vars in the loop; - make stuff const auto; - remove unnecessary vars - or move definition&allocation where needed; - some minor logical changes which hopefully are equivalent ( and therefore don't change the reg test 🤞 ); - Fix primal unsteady Heat restarts. @oleburghardt might be interested in these changes ;). Can be seen as a follow up to #1256 of @maxaehle (although I dont specifically fix memory leaks). ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1281:188,log,logical,188,https://su2code.github.io,https://github.com/su2code/SU2/pull/1281,3,"['log', 'test']","['logical', 'test']"
Testability,"## Proposed Changes; Collection of improvements to fix SU2 bugs:; - Inconsistency between NO_DEFORMATION (index 24) and NONE (index = 0). I have updated and sorted the numbering of the design variables and set NO_DEFORMATION to index 0 (for consistency with the rest of the code).; - SU2_GEO was not working properly for 2D cases and the wing slicing routine was extremely expensive for the AD.; - VISUALIZE_DEFORMATION was very expensive and not useful, I have divided VISUALIZE_DEFORMATION between surface VISUALIZE_SURFACE_DEF and volume VISUALIZE_VOLUME_DEF.; - The actuator disk was not working properly when a pressure ratio (total pressures) was prescribed (the restart was not working either).; - The FFD twist design variable was not working properly. ## Related Work; This commit resolves the issues (bugs) described above without adding any extra capabilities to the software. It should be approved as soon as possible because some of the changes directly impact most of the the user's community. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/563:1558,test,test,1558,https://su2code.github.io,https://github.com/su2code/SU2/pull/563,1,['test'],['test']
Testability,"## Proposed Changes; Collection of minor improvements including, typos, warnings, better names, etc.; . ## Related Work; Not related with other PRs. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/541:699,test,test,699,https://su2code.github.io,https://github.com/su2code/SU2/pull/541,1,['test'],['test']
Testability,"## Proposed Changes; Compile-time option (`-Denable-mixedprec=true`) to have single precision linear solves while keeping all other calculations in double precision. Which means that among other things we get the ILU for the price of LU-SGS (memory wise).; This uses the same type-mixing logic used to have a passive matrix in reverse AD builds (thus this feature is also compatible with reverse AD, but not direct).; For the 3D RANS SST case with about 500k nodes I've been using for benchmarking and profiling this gives a 1.19 speedup:; ![image](https://user-images.githubusercontent.com/38071223/82442103-ee2e3900-9a96-11ea-9ab8-fe9fa0842b22.png); This case is very light on the linear solvers (CFL of 20) so this result is actually really good.; There seems to be no compromise in accuracy, the residuals eventually go below -11 (8 orders reduction) in the same number of iterations, and the mesh metrics for this case are not stellar:; ```; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| 36.7556| 89.9375|; | CV Face Area Aspect Ratio| 1.03036| 4477.19|; | CV Sub-Volume Ratio| 1.00693| 97.7189|; +--------------------------------------------------------------+; ```; For purely linear applications like mesh deformation (including SU2_DOT) or linear elasticity, for which the solution is not iterative, an impact on accuracy is expected.; For example deforming a grid of 830k nodes (with stretched cells and all that good stuff) with SU2_DEF using CG+ILU converges like this:; ![image](https://user-images.githubusercontent.com/38071223/82590480-a93cfc00-9b95-11ea-8266-95a5decbf011.png); So it is still possible to converge the linear system to very tight tolerances, but after a certain tolerance the convergence rate becomes worse, that threshold will depend on the size of the problem (larger -> harder to solve) or more formally on ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/989:288,log,logic,288,https://su2code.github.io,https://github.com/su2code/SU2/pull/989,2,"['benchmark', 'log']","['benchmarking', 'logic']"
Testability,"## Proposed Changes; Compute Green-Gauss gradients and limiters via a point-loop (like we do for Least Squares), in the limit this allows one thread per point of parallelization. Parallel regions are started inside the functions and again only the master thread calls MPI routines. Move these routines out of CSolver and make them general to reduce code duplication (compressible/incompressible, solution/primitives), and to improve test-ability (if key areas of the code depend less on large objects we can more easily treat them as units). Introduce a way to create different limiters by defining small details like the limiter function (and its associated constants), or any geometry-based modification. I don't seem to have ""hard"" failures in the regressions but I need to run tests, especially for periodic cases as I had to change the ""communication model"" for the min / max computed for limiters.; I will start documenting anyway. ## Related Work; #789 #824 ; Depends on #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/834:433,test,test-ability,433,https://su2code.github.io,https://github.com/su2code/SU2/pull/834,3,['test'],"['test', 'test-ability', 'tests']"
Testability,"## Proposed Changes; Couple efficiency/functionality improvements to the topology optimization implementation as detailed in TestCases/fea_topology/config.cfg. Edit: This requires c++11 so it will have to go after the PR that enables it. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/752:125,Test,TestCases,125,https://su2code.github.io,https://github.com/su2code/SU2/pull/752,2,"['Test', 'test']","['TestCases', 'test']"
Testability,"## Proposed Changes; Creating new fork to work on the LM feature. Starting from the Develop branch; . ## Related Work; LM feature. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1464:723,test,test,723,https://su2code.github.io,https://github.com/su2code/SU2/pull/1464,1,['test'],['test']
Testability,"## Proposed Changes; Dear all, in this PR there are few modification related to the new fsi interface in python, namely:; * A different treatment for imposed motions. This is actually a first step towards an automatic identification of the aerodynamic transfer functions for state-space models.; * Some changes in the outputs; * The introduction of a test case for this feature. Regarding the last point, I am having issues trying to understand how to appropriately set up the regression. In particular, the fsi interface needs two additional packages to run (libspatialindex and petsc) with their counterparts in python (rtree and petsc4py). @pcarruscag suggested me to add the apt-get lines in the regression.yml file, but I am really not sure where to place them and I do not want to mess it up. ; Further, the files in the tutorial folder cannot be used for this scope. Indeed, in the tutorial, there are the cfg files that can be used to reproduce the same behaviour predicted by the theory of Theodorsen. However, in order to do so, some iterations of fluid only simulation must be performed before the coupling. This takes time so I prepared a test case where the two solvers (fluid and structure) are coupled from the beginning. Unfortunately, the mesh is ignored by git in the TestCase folder, so I am not sure how to make it run. I would really appreciate if you could help me with this last point.; ; ## Related Work; #1124 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1148:351,test,test,351,https://su2code.github.io,https://github.com/su2code/SU2/pull/1148,1,['test'],['test']
Testability,"## Proposed Changes; Dear all,. Here are some updates for the python fsi interface. Namely:. - Better use of mpi4py, using always numpy array (more computationally efficient); - Fix of the restarted coupled simulation; - Automatic use of default values, in case of wrong inputs; - Introduction of a sort of dry run, which actually prints out the mapped modes and the normals of the aerodynamic surface mesh. This is yet another step towards the automatic creation of ROM from aerodynamic response; - Fix of small bugs. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1357:871,test,test,871,https://su2code.github.io,https://github.com/su2code/SU2/pull/1357,1,['test'],['test']
Testability,"## Proposed Changes; Description of `LINEAR_SOLVER_ILU_FILL_IN` wrote Linael instead of Linear .. and that was copied quite a few times; Done using `find ./ -type -f -exec sed -i -e 's/Linael/Linear/g' {} \;` in ./Testcases on Linux. As in none of the appearances the option is not using the default of zero, that option could be removed from all those testcases imo, but I put that up to discussion. As @pcarruscag mentioned in #1195 `[...]simplify the config by removing options that are not needed, this is to make it easier to maintain the testcases if there are changes to some options.`. Feel free to chip any other typos here. . ## Related Work; Seen in #1195 and annoyed me enough to open a PR, but of course not introduced there. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1201:214,Test,Testcases,214,https://su2code.github.io,https://github.com/su2code/SU2/pull/1201,4,"['Test', 'test']","['Testcases', 'test', 'testcases']"
Testability,"## Proposed Changes; Detect when meson can run configuration test or if cross compiling for cgns hdf5 backend; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1508:61,test,test,61,https://su2code.github.io,https://github.com/su2code/SU2/pull/1508,2,['test'],['test']
Testability,"## Proposed Changes; During multigrid prolongation the no-slip (visc.) wall BC are set again. If there is Grid velocity it was multiplied by the 0th solution entry, both inc and compr. For compr flow it is density which is correct but for inc flow that is pressure. That is corrected by overloading.; ; In a little test with `TestCases/unsteady/pitching_naca0015_rans_inc/config_incomp_turb_sa.cfg` the linear solver diverged in the first iteration before, and now it works. Discovered by @pcarruscag and discussed in last weeks DevMeeting, so props to him. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary. *not necessary*; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1194:315,test,test,315,https://su2code.github.io,https://github.com/su2code/SU2/pull/1194,3,"['Test', 'test']","['TestCases', 'test']"
Testability,"## Proposed Changes; Edge coloring tends to perform better than reductions for the hybrid parallel discrete adjoint because it uses less memory and enables the shared reading optimization. This PR puts two additional strategies in place for the discrete adjoint that help with obtaining a coloring before resorting to reductions, making successful coloring more likely. 1. If the requested edge color group size does not produce an efficient coloring, the maximum edge color group size that still produces an efficient coloring is chosen instead. This decision is made per rank.; 2. The discrete adjoint is allowed to use more colors. ## Related Work; work on hybrid parallel AD, like #2039. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2167:1123,test,test,1123,https://su2code.github.io,https://github.com/su2code/SU2/pull/2167,1,['test'],['test']
Testability,"## Proposed Changes; Enable time integration by the explicit Euler scheme for e.g. turbulence solvers, by implementing ``CScalarSolver<>::ExplicitEuler_Iteration``. ## Related Work; This fixes #1432 with respect to explicit Euler. I need the feature for further investigation of #1414. ``CScalarSolver`` was introduced in #1330. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1435:923,test,test,923,https://su2code.github.io,https://github.com/su2code/SU2/pull/1435,1,['test'],['test']
Testability,"## Proposed Changes; Enhance CoolProp model by:; 1. add checkTemperature function to avoid critical temperature.; 2. impose gas phase by shifting temperature slightly.; . ## Related Work; This work is an extension of PR #1947. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2021:784,test,test,784,https://su2code.github.io,https://github.com/su2code/SU2/pull/2021,1,['test'],['test']
Testability,"## Proposed Changes; Enhanced the script discrete_adjoint.py such that in unsteady simulations; - one can execute an ""only adjoint"" run. This requires the solution files of a direct run (option -a True, default is -a False).; - it supports restart solutions. Configure the restart iteration in the config-file as one would in a restartet direct simulation. The script then runs the direct iteration until final time has been reached. Then the adjoint run is performed from final time up to the restart iteration. ; . ## Related Work; None. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/900:850,test,test,850,https://su2code.github.io,https://github.com/su2code/SU2/pull/900,1,['test'],['test']
Testability,"## Proposed Changes; Explore a workaround along the lines of https://github.com/openvswitch/ovs/commit/fa0dfa18d5344c82bc8387b4f79f4257a59d6f58 to fix #2241. ## Related Work; #2241. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2242:613,test,test,613,https://su2code.github.io,https://github.com/su2code/SU2/pull/2242,1,['test'],['test']
Testability,"## Proposed Changes; Extend the MPI+Threads framework to CEulerSolver, CNSSolver and the CTurb***Solver(s).; I can finally start showing what this effort is about in pictures, this is how the relatively small benchmark case from #716 scales on Imperial's cluster:; ![image](https://user-images.githubusercontent.com/38071223/73931463-410d2780-48d0-11ea-855e-8dc87be153f1.png); **C** is for cores, **R** for MPI ranks, and **T** for OpenMP threads per rank. It may not look like much close to the ideal scaling but on 192 cores there are only 2.7k cells per core, and at different level of ""hybridisation"" this is what you get:; ![image](https://user-images.githubusercontent.com/38071223/73931985-3bfca800-48d1-11ea-8676-acef927a1ab5.png). As mentioned in #789 this behaviour is due to the worse quality / quantity of coarse grids that can be generated as the domain is decomposed further and further. **EDIT**; This is **finished for now**, apart from the odd routine that I will document below (and all the boundary conditions) every method called in `SingleGrid_Iteration` and `MultiGrid_Iteration` (including prolongations, smoothings and whatnot) is hybrid parallel.; Threads are started in those functions which means that for a RANS case we enter parallel regions only twice per iteration, this should give minimal overhead, I will update the scalability results once they converge (statistically :) ). I will document the changes by ""themes"" below. ## Related Work; Another snapshot of #824. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/861:209,benchmark,benchmark,209,https://su2code.github.io,https://github.com/su2code/SU2/pull/861,2,"['benchmark', 'test']","['benchmark', 'test']"
Testability,"## Proposed Changes; Extend the Turbulence CFL reduction option, such that it can be used for adaptive CFL too. Turbulence cfl reduction was previously implemented only for a constant cfl, here the treatment is extended also for adaptive cfl. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [] I have added a test case that demonstrates my contribution, if necessary.; - [] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295:1063,test,test,1063,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295,1,['test'],['test']
Testability,"## Proposed Changes; Extends the custom outputs with point probes (nearest point, no interpolation is done). ## Related Work; #1907 cc @DonalMcC. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1909:463,test,test,463,https://su2code.github.io,https://github.com/su2code/SU2/pull/1909,1,['test'],['test']
Testability,"## Proposed Changes; Fix #1190; Prevent possible OpenMP bug for van Albada limiter.; Fix frozen limiter logic, freezing means ""do not compute"", and not ""do not apply"".; Fix limiter outputs for turbulence variables. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1193:104,log,logic,104,https://su2code.github.io,https://github.com/su2code/SU2/pull/1193,2,"['log', 'test']","['logic', 'test']"
Testability,"## Proposed Changes; Fix NEMO inlet BC.; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1882:748,test,test,748,https://su2code.github.io,https://github.com/su2code/SU2/pull/1882,1,['test'],['test']
Testability,"## Proposed Changes; Fix Xcode project and relative paths.; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1145:676,test,test,676,https://su2code.github.io,https://github.com/su2code/SU2/pull/1145,1,['test'],['test']
Testability,"## Proposed Changes; Fix the output of FFD paraview files;; Maybe fix #1123 (@TobiKattmann give it a try if you can); Deprecate VISUALIZE_VOLUME/SURFACE_DEF options for the reasons in #942;; Implements ""HOLD_GRID_FIXED"" for CMeshSolver. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1126:589,test,test,589,https://su2code.github.io,https://github.com/su2code/SU2/pull/1126,1,['test'],['test']
Testability,"## Proposed Changes; Fixed a small memory leak in CConfig by adding CFL_AdaptParam to the destructor of CConfig; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1187:732,test,test,732,https://su2code.github.io,https://github.com/su2code/SU2/pull/1187,1,['test'],['test']
Testability,"## Proposed Changes; Fixed all the compiler warnings in SU2 itself when using -Wpedantic for GNU and some warnings of the tecio library. The only remaining warnings using -Wpedantic now come from the tecio library and are of the type -Wmisleading-indentation and -Wclass-memaccess, the latter coming from the calls to memcpy. However, I think it is up to Tecplot to resolve those ones.; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1092:961,test,test,961,https://su2code.github.io,https://github.com/su2code/SU2/pull/1092,1,['test'],['test']
Testability,"## Proposed Changes; Fixes #857, an error during dry-run. I know @pcarruscag added the fixing commit to his PR #824 already and mentioned it below the issue, i.e. all kudos regarding the first commit go to him. I only changed the omp_structure.hpp of ded9c08e90496634a38b4998d9fe7aa5b72cdcc3 as I guess that bit is enough for this PR. ; Additionally I hinder the dry-run to overwrite the history files, which is kind of annoying. If anyone as an elegant solution to simply check for EXIT_SUCCES in the regression test one could add some dry_run regression tests. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/858:513,test,test,513,https://su2code.github.io,https://github.com/su2code/SU2/pull/858,3,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; Fixes AD compilation of parallel Tecplot binary output.; . ## Related Work; AD build failure noted by Tom Economon on Mac w/ configure command:; ./preconfigure.py --enable-mpi --with-cc=mpicc --with-cxx=mpicxx --enable-autodiff --enable-direct-diff --enable-tecio. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/665:836,test,test,836,https://su2code.github.io,https://github.com/su2code/SU2/pull/665,1,['test'],['test']
Testability,"## Proposed Changes; Fixes a bug introduced in #756 for incompressible FSI cases. ## Related Work; This kind of bugs could be avoided with a strategy as suggested by @pcarruscag in #770. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/897:737,test,test,737,https://su2code.github.io,https://github.com/su2code/SU2/pull/897,1,['test'],['test']
Testability,"## Proposed Changes; Fixes bug that causes rotational grid velocity ramp to not be applied correctly if the ramp is specified in a multizone configuration file. ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2320:854,test,test,854,https://su2code.github.io,https://github.com/su2code/SU2/pull/2320,1,['test'],['test']
Testability,"## Proposed Changes; Following up on #583 this is a restructuring of the fiels related to the driver. In addition I rearranged preprocessing routines in the driver constructor. I added arguments to the calls to make it more clear what the dependencies are and what is allocated. Furthermore I merged all loops over zones and instances into a single loop. This should make it much more readable. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/736:1095,test,test,1095,https://su2code.github.io,https://github.com/su2code/SU2/pull/736,1,['test'],['test']
Testability,"## Proposed Changes; For RIGID_PITCHING movement, add PHASE parameter to angular velocities. Pitching angle: angle=Ampl * sin(Omega * Time + Phase); Original augular velocity: AlphaDot = Omega * Ampl * cos(Omega *Time); Updated angular velocity: AlphaDot = Omega * Ampl * cos(Omega *Time + Phase); . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1656:892,test,test,892,https://su2code.github.io,https://github.com/su2code/SU2/pull/1656,1,['test'],['test']
Testability,"## Proposed Changes; For classical RK4 explict, arent the time coefficients suppose to go (1.0, 0.5, 0.5, 1.0)? The functional step are correct as (1/6, 1/3, 1/3, 1/6). I couldnt use the explicit RK4 on the tutorial to test this because it says SU2 diverges. ; . ## Related Work; Modified time coefficient in classical RK4. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/961:219,test,test,219,https://su2code.github.io,https://github.com/su2code/SU2/pull/961,2,['test'],['test']
Testability,"## Proposed Changes; For pure conjugate heat transfer problems, the temperature at the walls is initialized using the free stream temperature. Using the Isothermal_Temperature[0] for pure CHT problems results in a segmentation fault error. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2281:928,test,test,928,https://su2code.github.io,https://github.com/su2code/SU2/pull/2281,1,['test'],['test']
Testability,"## Proposed Changes; For volume names, we assume that the filename is filename.ext and we strip the extension using find_last_of('.'); But:; 1. This can lead to unwanted file stripping when you want the filename or folder to be volume.a; 2. We already mention in the documentation that the volume filename should be given without an extension. I think we should simply remove the find_last_of lines. There are more of those, for now I have simply removed the one connected to #2074 . ## Related Work; Issue: #2074 . ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2079:833,test,test,833,https://su2code.github.io,https://github.com/su2code/SU2/pull/2079,1,['test'],['test']
Testability,"## Proposed Changes; Found while debugging differences between legacy and new mesh deformation with @Nicola-Fonzi in #1197.; Explained below. ## Related Work; #1197 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1199:519,test,test,519,https://su2code.github.io,https://github.com/su2code/SU2/pull/1199,1,['test'],['test']
Testability,"## Proposed Changes; General cleanup / optimization of the orientation checks.; Plus I tried to detect distorted, rather than flipped, elements separately as the node swaps done in `CPrimalGrid::Change_Orientation` can only fix flipped elements, if they are ""twisted"" changing the orientation does not fix the element, e.g. vtk_pixel vs vtk_quad. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1030:657,test,test,657,https://su2code.github.io,https://github.com/su2code/SU2/pull/1030,1,['test'],['test']
Testability,"## Proposed Changes; Generalize the variables in the CLookUpTable class for use in general look-up cases (not only progress variable-enthalpy).; Add dimension to CLookUpTable class to allow for quasi-3D interpolation (linear interpolation between two trapezoidal maps stacked in the third dimension).; ; I added a unit test as a test case with the quasi-3D table to show the correct use of syntax for 3D look-up operations. ## Related Work; Can be used in feature_multilayer_perceptron in the CDataDrivenFluid fluid model for look-up operations. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1825:319,test,test,319,https://su2code.github.io,https://github.com/su2code/SU2/pull/1825,3,['test'],['test']
Testability,"## Proposed Changes; Hello to everyone,; I added a tutorial for the actuator disk with variable load in the Tutorials repository.; Because of this I changed the regression tests moving from parallel_regression.py to tutorials.py.; Hope this could be useful. ## Related Work; PR from SU2 repository: #1027; PR from su2code.github.io repository: #44; PR from Tutorials repository: #4. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1128:172,test,tests,172,https://su2code.github.io,https://github.com/su2code/SU2/pull/1128,2,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; Hello to everyone,; I would like to propose a slight change in the Actuator Disk with Variable Load function. The change consists in re-writing the computation of the axial, radial and tangential force coefficients by developing the advance ratio term. In this way it is possible to eliminate the explicit dependence with the free-stream velocity.; Thanks to this change, it is possible to simulate the hover condition (free-stream velocity equal to zero) since we eliminated the free-stream velocity from the denominator.; ; In addition, we do not need the input of the advance ratio J, but the RPM of the propeller. This is a draft PR since a validation is needed and will be provided soon. Regards,; Ettore.; TAARG, University of Naples Federico II. ## Related Work; #1027 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1648:1151,test,test,1151,https://su2code.github.io,https://github.com/su2code/SU2/pull/1648,1,['test'],['test']
Testability,"## Proposed Changes; Hello to everyone,; my research group and I are working on the implementation of the CGNS output format.; We think that this could be an useful feature. For the moment, in order to provide the output file in CGNS format you should choose `CGNS` in the `OUTPUT_FILES` option.; This is a first implementation that will need some improvements.; We hope that this could be useful. Authors: Ettore Saetta, Lorenzo Russo, Renato Tognaccini.; TAARG (Theoretical and Applied Aerodynamics Research Group), University of Naples Federico II. ## Related Work. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1131:921,test,test,921,https://su2code.github.io,https://github.com/su2code/SU2/pull/1131,1,['test'],['test']
Testability,"## Proposed Changes; Here I am adding Sutherland's law for viscosity and thermal conductivity for NEMO problems using the native library. Experiments for these types of problems often are run using very low temperatures (~65K). Our current models aren't suited well for these temperature ranges. There is also some general clean up work in the still-not-working Gupta-Yos model and viscous numerics. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1702:993,test,test,993,https://su2code.github.io,https://github.com/su2code/SU2/pull/1702,1,['test'],['test']
Testability,"## Proposed Changes; Here is a funny fix. ## Related Work; #939; #789 fixes a deadlock during restart of unsteady cases (two bugs for the price of one). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/941:463,test,test,463,https://su2code.github.io,https://github.com/su2code/SU2/pull/941,1,['test'],['test']
Testability,"## Proposed Changes; Hi Folks,; I would like your views on something. Many of the convective schemes we have are small variations of each other, and so I was thinking we can maybe have some intermediate numerics classes to make things a bit easier to maintain, quicker to compile etc.; So far I experimented with having a base class for central schemes, the ComputeResidual method is moved to this class and the children classes (Lax, JST, and JST_KE) only implement the artificial dissipation part specific to them.; Similarly AUSM+up(1/2) and SLAU(1/2) only differ in how the mass and pressure fluxes are computed so again a common base for these 4 could be devised. Isolating the computation of mass and pressure fluxes could be an interesting way to compute the Jacobians of these schemes in a hybrid way (currently the Roe Jacobian is used).; There is a very small performance penalty (maybe 1-2% for explicit solution methods) but my reason to be looking at the numerics in the first place is that with some small tweaks to the Jacobians we can probably run most schemes at higher CFL (namely increase the dissipative part of the Jacobian to make the system matrix more diagonal dominant) so for implicit solution methods there would be a speedup.; So, what do you think?; Cheers,; Pedro. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691:1605,test,test,1605,https://su2code.github.io,https://github.com/su2code/SU2/pull/691,1,['test'],['test']
Testability,"## Proposed Changes; Hi all, . This draft PR contains all work on composition dependent fluid properties for multicomponent flow. . What I did so far: . •	Implemented new CFluidScalar class (which inherits from CFluidModel) and can be accessed via a new fluid model: MIXTURE_FLUID_MODEL. ; •	Verified the current implementation by comparing with Fluent. ; •	Added regression test case for two component incomp_rans flow with variable fluid properties. . Future work:. •	Fix variable specific heat capacity and convergence issues in case of axisymmetric flow. ; •	Add possibility to have more than a single transported scalar (i.e. mixture containing more than two components). ; •	Remove flamelet implementation from feature_multicomp in order to have this work self-contained. **Note:** Currently this is a PR into feature_flamelet to make the diff easier. In case there are comments, ideas, foreseeable stepping stones from experience please let me know. . ## Related Work; #1223 by @danielmayer @bigfooted which feature_multicomp currently branches from. ; #1330 by @TobiKattmann which cuts the scalar transport necessary for this work out to merge it separately into develop. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1332:375,test,test,375,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332,2,['test'],['test']
Testability,"## Proposed Changes; Hi all,. - Little change to make streamwise and spanwise periodic simulations possible (in CIncNSSolver.cpp). ; - Some cleanup in CConjugateHeatInterface; - Added a CFVMOutput class that only has a CommonFVMoutput for Volume output (COORD-XYZ (fresh addition), MESH_QUALITY, Multigrid visualization and RANK); - in the output folder(s) there were quite some wrong doxygen `\file <filename>`, i changed that. I renamed `CAdjFlowOutput.hpp` -> `CAdjFlowCompOutput.hpp` as the cpp as that name and that class as well.; - little changes/additions to unst CHT gradient validation case . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1290:1195,test,test,1195,https://su2code.github.io,https://github.com/su2code/SU2/pull/1290,1,['test'],['test']
Testability,"## Proposed Changes; Hi all,. The general idea for this PR can be cited from @pcarruscag in #1226:; ```; The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:. Turbulence solvers;; Heat solver;; Radiation solver;; General passive/active scalar solvers;; Eventual transition solvers;. The starting point would be the current base turbulence solver.; ```; ; Right now the only things I did were (i.e. don't fear the large diff); - create CScalarSolver/Variable files/classes and scalar_convection/diffusion/sources files and fill them with the contents of the CTurb* or turb_* files.; - Make CScalarSolver/Variable the parent class of CTurbSolver/Variable; - Delete pretty much everything from CTurb* or turb_* files except for some constructors. So far it compiled and some local regression testing showed no problems, lets see what the CI pipeline has to say about this. Now with this additional class introduced the actual works begins:; - figure out what is a reasonable interface in CScalar* to unify transported species and turb-models (and the other solvers probably); - code this common interface and push all turb-specific things back into the respective files (that is why I didn't `git mv` ). In order to keep this somewhat limited I would focus on porting the Turbsolvers to the new structure (however that might look, but looking at #1223 is what I'll do first) and maybe a simple transported passive scalar or so. We want the turb solver to be integrated under that Scalar-class which is arguably what most/all people use, that's why I want to have in this work at the beginning. We also have quite a few RANS Testcases so it is directly visible if something in the actual computation is changed. In case there are comments, ideas foreseeable stepping stones from experience please let me know here. ## Related Work; #777 by @economon which is the initial push towards this separate scalar solver class for additionally transported scalars (not",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1330:835,test,testing,835,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330,1,['test'],['testing']
Testability,"## Proposed Changes; Hi all,. The title gives it away. I imagine that piece by piece some commits are chipped in to remove more and more enum numbers. Like that it is more obvious if sth breaks because somewhere someone uses builds on knowing the actual number to do some shenanigans. ; Maybe just removing all in a big blow saves time bit #1220 already shows some limitations. I used the following command (for streamwise periodic in this case) and looked over the results whether I notice sth fishy. Not perfect but might help catchin some easy problems.; ```bash; grep -r 'NO_STREAMWISE_PERIODIC\|PRESSURE_DROP\|STREAMWISE_MASSFLOW\|Streamwise_Periodic_Map\|GetKind_Streamwise_Periodic' SU2_CFD SU2_DOT SU2_GEO SU2_DEF Common --include=*cpp --include=*hpp --include=*inl; ```. So feel free to commit your removals in here and if it breaks and one doesn't want to search for it just revert that and mention the specific enum so that no-one repeats that. Happy enum-removal . ## Related Work; @bigfooted mentioned that a couple of times and #1220 discusses some limitations. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1242:1428,test,test,1428,https://su2code.github.io,https://github.com/su2code/SU2/pull/1242,1,['test'],['test']
Testability,"## Proposed Changes; Hi all,. This PR adds the possibility to write ASCII STL files. Example usage:; `OUTPUT_FILES= (RESTART,PARAVIEW, STL, ...)`; All surfaces in `MARKER_PLOTTING` will be used, just like the surface files. The major problem was to re-process the element connectivity for parallel cases from what the data available after the parallel data sorter does its thing. You'll notice that in the `CSTLFileWriter.cpp` : Part of the code was copied over from the TecIO stuff and modified to our needs. The code probably could be nicer and it could be better documented, but I already forgot some details and it most likely would still be a mess to understand. Big thanks to @talbring for making this code work. I added a simple regression test by `diff`ing against a reference stl-file from in the Testcases repo. I'll add that information [on the website here](https://su2code.github.io/docs_v7/Custom-Output/) once this PR is merged. ## Related Work; Resolves issue #694 (which was marked stale and was closed in the meantime). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/847:747,test,test,747,https://su2code.github.io,https://github.com/su2code/SU2/pull/847,3,"['Test', 'test']","['Testcases', 'test']"
Testability,"## Proposed Changes; Hi all,. This PR implements a passive species transport solver. The passive means, that the mass fraction at each location does not influence any fluid-properties and thereby the mean flow (which reminds me that this is a good sanity check to compare mean flow residuals). A new `CSpeciesSolver` and `CSpeciesVariable` were added based on the `CScalar*` things done in #1330 . Additionally `species_convection/diffusion/sources` were added just as it is the case for the turbulence solver (both based on the general scalar* framework). Please note that prob ~1000 lines are cfg's, README's, helping scripts. . ## Related Work; Preliminary work was done in #1330 with creating a base class for scalar transport equations. #1223 and #1332 already mostly implement the here shown species solver and big chunks were copied over from there, but they are not based on the new CScalarSolver. In order to chunk the work for these branches this PR will not contain any species mixing properties or TableLookUps. . After this PR #1332 will be tackled next. Whether we try to merge develop then into those branches or copy stuff over in a new branch will be seen when we get there. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1388:1544,test,test,1544,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388,1,['test'],['test']
Testability,"## Proposed Changes; Hi all,. this PR removes all trailing whitespaces from `.cpp` `.hpp` `.inl` `.py` `.build ` files using ; `find . -type f -name '*.cpp' -exec sed --in-place 's/[[:space:]]\+$//' {} \+`; in the code root. and all tabs are replaced by 2 spaces for `.cpp` `.hpp` `.inl` files using; `find . -name '*.cpp' ! -type d -exec bash -c 'expand -t 2 ""$0"" > /tmp/e && mv /tmp/e ""$0""' {} \;`; This step of course can lead some misalignment if the person introducing the tab did not have tabs rendered as 2 spaces (e.g. 4 spaces per tab). This is up of course for discussion and can be seen as a test vehicle to get everyones discussion. One can try to merge this to check if merge conflicts are really that bad to handle. Of course there will be conflicts on lines you touched as well. A possible solution to merge conflicts is to apply the commands to your filebase and then merge... then it is quite likely that your only merge conflicts are the ones you have with develop anyway. The rough plan discussed with @talbring is to include automatic checking of trailing whitespaces, tabs, overlong lines and possibly other stuff. . Cheers 🍾 to @WallyMaier who seemed to have to have that on his agenda for quite some time. . **Edit**: Only the restructured C*cpp C*hpp C*inl files are currently cleaned to keep the commit size down. This could be extended to other file chunks in the future. See externals/utils/replace-tabs...sh for a little shell script to get the receive the same results as in this PR. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style. **-> now it should be a bit more**; - [x] I have added a test case that demonstrates my contribution, if necessary. **not necessary**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/808:603,test,test,603,https://su2code.github.io,https://github.com/su2code/SU2/pull/808,2,['test'],['test']
Testability,"## Proposed Changes; Hi all,. volume heatflux output is not non-dimensional which is inconsistent with how the rest of volume output is handled.; Note that the History outputs (like TOTAL_HEATFLUX over a bunch of surfaces) is re-dimensionalized -> Apparently that hasn't bothered too many people until now but generally that might be sth we/I want to change (?) Let me know. I fixed it in a way that follows the current convention. In CConjugateHeatInteface.cpp the required heat_flux is (re)computed on its own so I do not expect a problem there but I will check manually as well; - [ ] Reminder Checkmark to actually do so; If there is other places which might be affected let me know. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109:1005,test,test,1005,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109,1,['test'],['test']
Testability,"## Proposed Changes; Hi all,; ; a wrong index (iZone vs iInst) caused the SU2_SOL module to segfault if nZone > nInst. The geometry container is called with the wrong index in the `CBaseLineSolver::LoadRestart` routine. In SU2_SOL.cpp `&geometry_container[iZone][INST_0]` to `geometry_container[iZone]` are interchangeable, I just thought the 2nd formulation is used more often throughout the code. I cannot guarante though that it now runs for multiple instances, but as far as I know there is no such testcase. Testcase: The PR does not come with a Testcase which would catch the error in the future. In testcases started with parallel_computation.py the SU2_SOL module is called and fails for multizone cases (e.g. Jones_rst.cfg which I tested on) but if the residuals fit the case passes. That circumstance is not tackled in this PR but I heard that this is a know issue. I briefly chatted with @rsanfer about that and I offer my help if this is approached. . Additionally I fixed an error message to contain the correct config-option and added a --disable-tecio option to the preconfigure.py script as it is convenient for me as I build on compute nodes which cannot access the necessary X11 libraries and I couldn't get it to work with tecio enabled :( . If there are comments or requests for changing s.th. let me know. . Best Regards, Tobi. ## Related Work; Please see issue https://github.com/su2code/SU2/issues/568 for more information. There the error is described more detailed there. ## PR Checklist. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/572:503,test,testcase,503,https://su2code.github.io,https://github.com/su2code/SU2/pull/572,6,"['Test', 'test']","['Testcase', 'test', 'testcase', 'testcases', 'tested']"
Testability,"## Proposed Changes; Hi all,; Following a bit the idea of #942 this PR mostly gets rid of stuff. - `WRT_RESIDUALS` unused; - `WRT_LIMITERS` unused; - `WRT_CON_FREQ_DUALTIME` only used in legacy output ... so I thought I just go for it; - removed `SetMeshFile` function as it not used anywhere and CSU2MeshFileWriter is the new cool kid on the block 🛴 ; - Added some options to the config_template which were missing; - Added output of the mpi rank to volume output of (in-)compressible and heat solver. I used that for debugging mostly but it might be interesting for others as well. Yes yes I know, one could think of putting COORDS, MESH_QUALITY (except for FEM) and now RANK into a centralized place to avoid duplication... next PR... I promise ... maybe; - and a few tiny things; - EDIT: yeah and some more options after my initial PR, see CConfig.cpp in `files changed` for all. There is a lot of other things to deprecate so feel free to add here. I have to check the tutorials for these options as well... ✔️ done and open PR (see below) but not merged yet to wait for reviews. This fails to reg tests of tutorials. (p.s. github now has a dark mode, which makes writing this on Thursday nights much nicer 🕶️). ## Related Work; none. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary. **not necessary**; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. **not necessary**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1129:1103,test,tests,1103,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129,2,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; Hi all,; I have implemented the PGOmega S-A turbulence model(TM) which is proposed by Xiao He(2022). This TM enables us to get a more accurate prediction of stall margin which is very important in turbomachinery. This TM has been used in the simulations of ROTOR67, TUDarmstadt single stage compressor, and the validation work is shown in GPPS 2024 conference.; I also added the option related in configuration file.; The paper related is ""He, X., Zhao, F., and Vahdati, M. (September 19, 2022). ""A Turbo-Oriented Data-Driven Modification to the Spalart–Allmaras Turbulence Model."". ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2354:1275,test,test,1275,https://su2code.github.io,https://github.com/su2code/SU2/pull/2354,1,['test'],['test']
Testability,"## Proposed Changes; Hi all,; there is a little bug in the loading of the primal solution for the DiscAdjFluid Iteration for DualTimeStepping 1st order. ; 1. The solution for timestep n-1 should be loaded instead of n-2 -> I added an if statement there.; 2. solution_old is used as a temporary container for the freshly loaded solution. Then the solution which is currently at solution_time_n is pushed to be the ""main"" solution n+1. Afterwards the solution_old is put in the solution_time_n container -> That last step was wrong such that the loaded solution never gets involved. I used the regression test in disc_adj_rans/cylinder which covers DualTimeStepping 2nd order and reused it for a new Testcase which covers 1st order. ; For now, the .travis.yml has a different su2code/Testcases branch in it such that other are not hindered by this PR when running travis. If this PR is merged with the new Testcase, the TestCases repo has to be updated and the .travis.yml needs to be reverted. ; Let me know if adding a new TestCase is OK. I am aware that not every detail can get its own regression test. . I checked my changes against finite differences for that Testcase. I'll post the result below. Additionally I suppressed the output of .csv files in driver_structure.cpp for unsteady simulations if `WRT_CSV_SOL= NO` is set. . Regards, Tobi. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Nothing I know of. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/554:603,test,test,603,https://su2code.github.io,https://github.com/su2code/SU2/pull/554,5,"['Test', 'test']","['TestCases', 'Testcase', 'Testcases', 'test']"
Testability,"## Proposed Changes; Hi everyone! I am starting to implement the Simplified version of the Langtry-Menter transition model following the work in https://doi.org/10.2514/6.2012-672. More updates will follow. ## Related Work; This follows the implementation of the LM model as #1751. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1901:582,test,test,582,https://su2code.github.io,https://github.com/su2code/SU2/pull/1901,1,['test'],['test']
Testability,"## Proposed Changes; Hi everyone, . I have found some inconsistencies with respect to the literature on the implementation of the Menter's SST model. I would like to use this branch as test bench for any corrections/improvements made to the SST model. Implementation errors found:; - Use of production limiter constant in the clipping of the cross-diffusion term for the computation of the F1 blending function in CTurbSSTVariable.cpp. ; - SST naming conventions (V in V2003m should stay for Vorticity production term.). Not yet assessed.; - Wrong cross-diffusion term included into the residual of w in turb_sources.hpp. It should not be only the positive value as considered in the computation of the F1 blending function. As stated in https://doi.org/10.2514/3.12149. ""CDkw is the; positive portion of the cross-diffusion term in Eq (A2)"" pag. 1604. Moreover, a clipping has been introduced for large negative values of this term, as suggested in Peng, Shia-Hui, Peter Eliasson, and Lars Davidson. ""Examination of the shear stress transport assumption with a low-Reynolds number k-omega model for aerodynamic flows."" Eq 17.; - Boundary conditions errors at inlets, following the Issue #1851. A fix has been proposed following @pcarruscag suggestions for the supersonic inlet BC.; - Boundary conditions definitions are different than the ones proposed in TMR. Maybe give the user the choice to use the BCs implemented in SU2 or the ones from TMR. Changes to SST model proposed:; - Inclusion of non modified versions of SST. In this case I think that more work is needed to be sure that the correct terms are taken into account everywhere in the code.; - Give the user the possibility of changing the production limiter for TKE (not essential).; - Change values of default turbulent to laminar viscosity to 1e-2 (NASA TMR reports that it should be in the range of 1e-2 to 1e-5, but in SU2 this is set to 10 as default). . I've seen the proposed changes to the lower limits of k and w in #2323 and I t",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329:185,test,test,185,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329,1,['test'],['test']
Testability,"## Proposed Changes; Hi everyone,. I have been working on the implementation of the DDES formulations for the SST model, following the work in ""Development of DDES and IDDES Formulations for the k-ω Shear Stress Transport Model"" (DOI:10.1007/s10494-011-9378-4). The implementation is easy, whereas the validation may take some time. I am currently working on the backward facing step and I will work on the flatplate too. The choice of the validation test cases is key since the computational cost is quite large, thus if you have any suggestions that may speed up this part then feel free to write them down. . Implemented versions:; - SST-DDES; - SST-IDDES; - SST-SIDDES. I am also working on the Scale Adaptive Simulations (SAS) implementations for SST, following the work in ""ON URANS SOLUTIONS WITH LES-LIKE BEHAVIOUR"", Travis et al., and ""[Evaluation of scale-adaptive simulation for transonic cavity flows"", Babu et al., (https://www.inderscienceonline.com/doi/abs/10.1504/IJESMS.2016.075510). The last one, especially, is quite tricky due to the computation of the velocity laplacian. I tried computing it in Paraview as the divergence of the gradient field and it seems quite similar, but it is the first time that I've touched that section of the code, thus some work might still be needed. Implemented versions:; - SST-SAS_Simple (better naming is necessary), from the article of Travis et al.; - SST-SAS_Complicated (better naming is necessary), it is related to the article from Babu et al. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150:451,test,test,451,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150,1,['test'],['test']
Testability,"## Proposed Changes; Hi, . A small one: For 1 zone heat equation, the primal restart for the adjoint run was missing the solution reset after the CLEAR_INDICES run. Additionally I added a output_precision to the primal Residual Table for the adjoint. My recommendation is to set OUTPUT_PRECISION= 12 (because that is the fixed field Width of the table) and compare those screen residuals to the history output of the comparing primal simulations. I noticed this problem while looking at non-perfect restarts for CHT cases, which I am currently still debugging. I will make an issue for that soon (Edit #1395 ). Note though that the discrepancies seem subtle and a gradient comparison with FD shows and showed good agreement in the past. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1394:1089,test,test,1089,https://su2code.github.io,https://github.com/su2code/SU2/pull/1394,1,['test'],['test']
Testability,"## Proposed Changes; Hi, I found some problems with the implementation of the SA-NEG and SA-NEG-R models wrt to what is described on TMR. Plus, I found a suggestion on the computation of the SHat variable to avoid clipping for negative values (also reported on TMR).; . ## Related Work; - Implementation of new computation of SHat (Jacobian was computed by hand and is somewhat complex. Probably I could derive a simplified formulation); - Added CRot constant for SA-R model; - Modified computation of var.S for the combination SA-NEG-R; - Slightly change the computation of muT from nu_tilde: now muT = 0 if nu_tilde <0. Before it was muT = max(muT, 0.0), which should not always coincide with nu_tilde > 0.; - Not related to SA: added viscous drag as output in the history file. . I should also try to add the maximum value of nu_tilde within the mesh to the history file, although I still have to implement it. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2014:1231,test,test,1231,https://su2code.github.io,https://github.com/su2code/SU2/pull/2014,1,['test'],['test']
Testability,"## Proposed Changes; Hi, I noticed that the mesh quality metrics are not available in the current output structure, so here they are. ; I removed WRT_MESH_QUALITY and just check&set in the configs postprocessing routine.; Compressible, Incompressible, Heat and Mesh Output are added here as the FEM solvers dont have the dual grid as stated in the original PR. . **Bonus issue:** I noticed that Coordinates are not written in the Volume Output for the cases I tested (also the Quickstart) but haven't really figured out why yet. Doesn't matter whether VOLUME_OUTPUT is set with COORDINATES or not at all. I will look into this again but if you have a hint that would be appreciated💐 **Edit:** of course they are written implicitly otherwise on couldn't open a visu file but what do we have the volume output field COORDINATES for then? Maybe I am just blind, but this is not really part of this PR anyway. Cheers, Tobi. ## Related Work; Initial implementation #778 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1104:460,test,tested,460,https://su2code.github.io,https://github.com/su2code/SU2/pull/1104,2,['test'],"['test', 'tested']"
Testability,"## Proposed Changes; I added new output file formats. First of all support for the VTK XML file format ([see this pdf](https://vtk.org/wp-content/uploads/2015/04/file-formats.pdf)) (file ending *.vtu). This adds support for possible compression, portable binary encoding, random access, big endian and little endian byte order, multiple file representation of piece data. I made this the new default format if `PARAVIEW` has been added to `OUTPUT_FILES`. The old *.vtk format can still be used with `PARAVIEW_LEGACY`. However, the main reason for this new format is that it is required for new Multiblock file (*.vtm) output. This file is a simple XML file which defines a data hierarchy in order to represent individual parts of the domain (which are stored as *.vtu files). With this it is possible to directly select and visualize the solution in individual zones and/or on boundaries. This new format can be enabled with `PARAVIEW_MULTIBLOCK` as value for `OUTPUT_FILES`. At the moment all boundaries are written, I might add an option to disable/enable some of them (maybe re-using the `MARKER_PLOTTING` option). In order not to cluster the working directory, the individual *.vtu files are placed in subfolders, since they are more or less opaque to the user. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/845:1818,test,test,1818,https://su2code.github.io,https://github.com/su2code/SU2/pull/845,1,['test'],['test']
Testability,"## Proposed Changes; I am going through the CConfig.cpp file and adding all the options to config_template.cfg that are not there yet.; I have found some options that do not seem to be used in the code, I will remove them.; There are probably also options in config_template.cfg that do not exist anymore, I will remove them as well. ; ## Related Work. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1934:670,test,test,670,https://su2code.github.io,https://github.com/su2code/SU2/pull/1934,1,['test'],['test']
Testability,"## Proposed Changes; I changed the wall distance computation so that it correctly incorporates also viscous walls in other zones. I am not 100% happy where it is implemented, but I have not found a better place for this computation. Furthermore this splits the nice indepedent preprocessing routines in the driver constructor. Nevertheless, I think it should be fine. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/924:918,test,test,918,https://su2code.github.io,https://github.com/su2code/SU2/pull/924,1,['test'],['test']
Testability,"## Proposed Changes; I discovered that the Aachen regression test was actually on its way to divergence. I think this explains why the regression test was behaving inconsistently, although I'm not sure about what caused this problem. I made a new mesh, introduced wall functions as suggested by @joshkellyjak, and switched to second order directly. ; The convergence history is good. See the attached convergence histories obtained with JST starting from scratch with outlet pressure ramp.; ![conv_hist_rotor1](https://github.com/user-attachments/assets/ec30422a-2d31-474e-8b1f-808b95f50599); ![conv_hist_stator1](https://github.com/user-attachments/assets/5f4b27d4-f849-47ef-9ae3-474e18bbd5ce); ![conv_hist_stator2](https://github.com/user-attachments/assets/4f89a191-45bd-47d0-acfc-a384409528c8). I have finally updated the restart files accordingly. ## Related Work; I think these small changes could fix the issues encountered in the past with this test case. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2367:61,test,test,61,https://su2code.github.io,https://github.com/su2code/SU2/pull/2367,4,['test'],['test']
Testability,"## Proposed Changes; I got carried away after the bit I did on #818 (against which this PR should be compared) so I opened a separate PR (I have develop as target branch just to run the tests). @rsanfer I moved, separated, completed the doxy comments, cleaned, etc. all the elasticity numerics classes. I also revised which methods of it are declared in CNumerics and which are for internal use of the CFEAElasticity hierarchy only, let me know what you think. ## Related Work; #583. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/821:186,test,tests,186,https://su2code.github.io,https://github.com/su2code/SU2/pull/821,2,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; I have been implementing for SU2 the radial basis function mesh deformation method with the selection of the control points using a greedy algorithm and a volume reduction technique to reduce the computational cost. The method can be used inside the shape optimization framework when calling SU2_DEF, keeping the standard ELA differentiated by codipack for the mesh sensitivity. ; References:; Abergo, Luca, Myles Morelli, and Alberto Guardone. ""Aerodynamic Shape Optimization Based on Discrete Adjoint and RBF."" Journal of Computational Physics (2023): 111951. M. Morelli, T. Bellosta, A. Guardone, Efficient radial basis function mesh deformation methods for aircraft icing, J. Comput. Appl. Math. (2021) 113492,. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1959:1442,test,test,1442,https://su2code.github.io,https://github.com/su2code/SU2/pull/1959,1,['test'],['test']
Testability,"## Proposed Changes; I have found it useful to be able to adaptively change deltaT using the Python wrapper -- this PR implements that functionality. Instead of `CDriver::GetUnsteadyTimeStep` returning `CConfig::GetTime_Step`, it was updated to return the actual dimensional timestep used in iterations. A new `CDriver::SetUnsteadyTimeStep` function was implemented that updates both `Delta_UnstTimeND` and `Delta_UnstTime` in `CConfig`. A new setter function for `Delta_UnstTime` had to be implemented to do this as well. A quick grep showed me that the only usage of `CConfig::GetTime_Step` appears to be in SU2_SOL, initialization, and outputting in the NonDimTable. However, I did see one usage of it here, which appears to be called every iteration:. https://github.com/su2code/SU2/blob/2c9fbb6cfc0f9dfbb4a1f6afb9cf5004c33b1c25/SU2_CFD/src/integration/CFEM_DG_Integration.cpp#L75. I can update that line if necessary to instead call `CConfig::GetDelta_UnstTime`. I don't _believe_ that there are any additional issues that may be arisen beyond this. ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2190:1748,test,test,1748,https://su2code.github.io,https://github.com/su2code/SU2/pull/2190,1,['test'],['test']
Testability,"## Proposed Changes; I just added a new folder in the Turbomachinery test cases, containing the configuration files for the Aachen turbine test case. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2158:69,test,test,69,https://su2code.github.io,https://github.com/su2code/SU2/pull/2158,3,['test'],['test']
Testability,"## Proposed Changes; I made this in micro steps and the commit messages are fairly detailed, so here I will give only the highlights. Every change is mathematically equivalent.; I claim performance improvements based on the type of cases I run (steady RANS implicit, elasticity), results may vary, so please give this a try. **Cleanup**; - Iterative smoothers (Jacobi, ILU, etc.) are now implemented in CSysSolve as one generic method with the same interface as the Krylov solvers.; - Dead code was removed from CSysMatrix (as requested in #653).; - Duplicated code, mostly dealing with block-block/vector multiplication, was merged.; - Row/column elimination tasks implemented in CSysMatrix (as requested in #658).; - Linelet uses fewer working variables.; - Make a lot of methods private (the diff of matrix_structure.hpp is not going to be pretty...). **Performance**; - Inlined small methods.; - No calls to ""Get/SetBlock"" when the block location is already known (helps ILU and LU_SGS).; - Block inversion done in one go instead of multiple Gaussian eliminations (which used to require repeated upper matrix transformations) (helps Jacobi, Linelet, and ILU).; - Inverted ILU diagonal blocks are stored during ""build"" for use in ""compute"". **Bugs**; - Linelet preconditioner was not working for multiple wall markers. **ToDo**; - I will try to make the MKL optimizations work for the discrete adjoint (I say try because it may require too much creativity with the templates...).; - Get some benchmarks (I don't want you to just take my word for it). ## Related Work; #650, #653, #658. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/700:1495,benchmark,benchmarks,1495,https://su2code.github.io,https://github.com/su2code/SU2/pull/700,2,"['benchmark', 'test']","['benchmarks', 'test']"
Testability,"## Proposed Changes; I never found this scheme to be useful (not an improvement in either accuracy or robustness) and it is not used in any tests. MUSCL_FLOW= YES is currently ignored for centered schemes, if we ever want to change that it would lead to backward compatibility issues, since we now have a chance to break it, I'm disallowing setting MUSCL_FLOW= YES with centered schemes. . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1990:140,test,tests,140,https://su2code.github.io,https://github.com/su2code/SU2/pull/1990,2,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; I removed the calls to SetConsVarGradient in NEMO. It was causing a segfault locally when running any viscous case, though I couldn't produce the issue on other machines. If anyone has an explanation, I'm all ears! These seem to be superfluous anyway. ## Related Work; This is a continuation of PR #1375. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1386:918,test,test,918,https://su2code.github.io,https://github.com/su2code/SU2/pull/1386,1,['test'],['test']
Testability,"## Proposed Changes; I stumbled upon three things, one is a fix, the other two I have questions.; @talbring and someone familiar with the SA and SST solvers please have a look at my comments below. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/718:508,test,test,508,https://su2code.github.io,https://github.com/su2code/SU2/pull/718,1,['test'],['test']
Testability,"## Proposed Changes; I think one sign was flipped in the Jacobian of the CHT boundary.; I replaced the isothermal BC for a stronger(?) alternative (flying by the seat of my pants here, if it's wrong let me know, but the solver converges better like this).; Fixes issues with deforming heat domains by generalising CDiscAdjMeshSolver::SetSensitivity to accept any solver as ""target"" (instead of considering always the ADJFLOW_SOL position in the solver container). ## Related Work; #951 ; #1061 ; (third time lucky I hope...). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1107:878,test,test,878,https://su2code.github.io,https://github.com/su2code/SU2/pull/1107,1,['test'],['test']
Testability,"## Proposed Changes; I tried to do something about the OF's that are not working with the python scripts.; If I got it right, the OF string needs to match the name used for history/screen output, at least to allow the automatically generated history map to be used. ## Related Work; #1075. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1167:642,test,test,642,https://su2code.github.io,https://github.com/su2code/SU2/pull/1167,1,['test'],['test']
Testability,"## Proposed Changes; I will use this draft PR for the work proposed in #789, the idea is to open small (non draft) PR's along the way for major milestones. ## Related Work; #789. ## PR Checklist. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/824:489,test,test,489,https://su2code.github.io,https://github.com/su2code/SU2/pull/824,1,['test'],['test']
Testability,"## Proposed Changes; Implemented updated turboperformance methods and adds improved history ouput of turboperformance variables to match screen output. ## Related Work; Follows on from removal of legacy output - https://github.com/su2code/SU2/pull/2003. Implements improved turboperformance calculations used in feature_turbomachinery_restruct_singlezone - https://github.com/su2code/SU2/pull/1316. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2011:830,test,test,830,https://su2code.github.io,https://github.com/su2code/SU2/pull/2011,1,['test'],['test']
Testability,"## Proposed Changes; Implements some features that will be necessary to eventually replace the elasticity-based mesh deformation. Namely symmetry boundary condition and the use of the DEFORM_LIMIT option to limit how much of the domain is deformed. Reduces the discrete adjoint memory usage by disabling the recording of routines that are not relevant or differentiable. Cleans up some redundant MPI comms in CFEASolver and moves all of them to the methods of that solver (i.e. no more explicit MPI comms in structural integration / iteration). Makes the structural objective functions available as screen/history output under the name COMBO. Improves/fixes the incremental load approach when used for multizone problems. ## Related Work; #919 #594. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/933:1060,test,test,1060,https://su2code.github.io,https://github.com/su2code/SU2/pull/933,1,['test'],['test']
Testability,"## Proposed Changes; Improve the configuration file for the turbulence_models SA Neg test case. With this new config file we should be better able to detect bugs in the code. For instance, with this new config file and number of iterations for the regression test, we will be able to detect bd4021020147e8e03d519cad2ddbaeef10c0bf3d. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1559:85,test,test,85,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559,3,['test'],['test']
Testability,"## Proposed Changes; Improvements in CoDiPack make hybrid AD tape evaluations slightly faster. ## Related Work; follow-on PR for #2208 . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2228:568,test,test,568,https://su2code.github.io,https://github.com/su2code/SU2/pull/2228,1,['test'],['test']
Testability,"## Proposed Changes; Improvements to time averaged history output for dynamic multizone problems, which now also include the structural zone. The averaging logic has been updated to include values only for the final solution in each time iteration. To test the fixes in this PR, time averaged history output has been added to the existing dynamic fsi test case. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1259:156,log,logic,156,https://su2code.github.io,https://github.com/su2code/SU2/pull/1259,4,"['log', 'test']","['logic', 'test']"
Testability,"## Proposed Changes; In `SU2/meson.build`, specify the version of the C standard used when compiling SU2, as C99. It must be at least C99 because of the for loop initial declarations in `externals/cgns/cgnslib.c`. (One could probably use a newer C standard as well.). This change was necessary to compile SU2 on a system where `cc` is the GCC 4.8.5 (from 2015), which used `-std=gnu89` by default. ## Related Work; The change was not necessary in v7.1.0. I suppose it has something to do with the recent CGNS updates (#1500, #1507, ...). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1532:1130,test,test,1130,https://su2code.github.io,https://github.com/su2code/SU2/pull/1532,1,['test'],['test']
Testability,"## Proposed Changes; In a joint collaboration with @rsanfer we discovered that the Prism and Pyramid shape elements used for mesh deformation had some issues, namely:; - The Prism (6 nodes) element had incorrect integration points, and perhaps due to some inconsistency between the ordering of the nodes and the shape function it had ""negative"" stiffness (deform opposite to force). The latter issue was remedied by using negative weights... I tried permuting the integration points but that did not help.; - The Pyramid (5 nodes) had inconsistent integration points and shape functions, it was using pyramid points but degenerate hex functions, this made the element some 20 times more flexible than it should be, pyramid shape functions are used now. My main reason to look into this was to support all element types in the structural solver both for linear and nonlinear analysis, in principle that should be working now, but I still have tests to run. I took the opportunity to refactor the CElement family of classes, now the derived classes only deal with the shape specifics:; - Integration/extrapolation points, shape function and derivatives, are computed and stored at construction.; - Area/Volume computation in undeformed (reference) or deformed (current) coordinates. Generic actions like allocating data and computing gradients are done by the base class. For the latter I included one method for 2D and another for 3D, they only differ in the inversion of the Jacobian but being specialized nDim can be ""hardcoded"" which should allow for more compile time optimization. I expect some regressions to fail, and I will still run more tests to verify the revised elements. I will post those results and add a regression. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consiste",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/681:942,test,tests,942,https://su2code.github.io,https://github.com/su2code/SU2/pull/681,1,['test'],['tests']
Testability,"## Proposed Changes; In a previous PR the SST model implementation in the CTurbSSTSolver was corrected to use the vorticity magnitude to calculate the turbulent viscosity (mu_T). But this change was not copied in the relevant numerics class where mu_T is used to calculate production terms. This is probably going to break all the SST related regression tests, so I will ensure convergence of those cases and update regression values. ; ; ## Related Work; A relevant discussion to have here is whether to update the SST turbulence model according to a 2003 paper by Menter (author of the SST model): [Ten years of industrial experience with the SST turbulence model](http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.460.2814&rep=rep1&type=pdf). It involves tiny changes to coefficients, production limits, and uses strain magnitude instead of the vorticity magnitude to calculate mu_T. The last point means reversing the change that this PR is making. But currently the model is just inconsistent and needs to be corrected. . The changes are supposed to make the model more stable, which has been a cause for concern with the SST model before. Not sure if people have thoughts about altering the original turbulence model. . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/905:354,test,tests,354,https://su2code.github.io,https://github.com/su2code/SU2/pull/905,2,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; In both [the original paper on DDES](https://doi.org/10.1007/s00162-006-0015-0) and [the paper](https://doi.org/10.2514/6.2017-4284) by @EduardoMolina on hybrid RANS/LES in SU2, the calculation for `r_d` uses kinematic viscosity. In SU2, the dynamic viscosity is currently used. This leads to poor behavior if density is not close to 1. This PR exchanges the dynamic viscosity for the kinematic viscosity. ## Related Work; This is part of the changes originally proposed in PR #552. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/575:814,test,test,814,https://su2code.github.io,https://github.com/su2code/SU2/pull/575,1,['test'],['test']
Testability,"## Proposed Changes; In current release of SU2, having, for example, a `MARKER_ISOTHERMAL=(marker, 300)` and `MARKER_PYTHON_CUSTOM=(marker)` causes the BC temperature to be set to a _nondimensional_ value of 300, which is inconsistent with what that marker's value is supposed to mean. This can be seen being set here:. https://github.com/su2code/SU2/blob/b80e4ce0e4fd05afa136af0990a17dd619cdce42/Common/src/geometry/CGeometry.cpp#L2441-L2461. and called for example here:. https://github.com/su2code/SU2/blob/b80e4ce0e4fd05afa136af0990a17dd619cdce42/SU2_CFD/src/solvers/CNSSolver.cpp#L712-L714. This PR nondimensionalizes any custom boundary temperatures or heat fluxes appropriately so that any setting of them does not need to be nondimensionalized manually before, both in `MARKER_ISOTHERMAL` and `MARKER_HEATFLUX` **and** in any Python code setting values of them. ## Related Work; None that I am aware of. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2078:1469,test,test,1469,https://su2code.github.io,https://github.com/su2code/SU2/pull/2078,1,['test'],['test']
Testability,"## Proposed Changes; In order to structure the construction of the solvers a little bit and to remove the dependency of the driver on the solver, I created a static solver factory class. There are routines to create individual instances as well as the whole container. It should be much easier now to see what position in the containers are actually allocated for the different solvers. The `createSolver` routine is a generic one that simply calls `new`. The others have some additional checks or calls for the construction. The idea here was to remove any `if` statements in the `createSolverContainer` routine to ease readability. . If everybody agrees, we could use a similar structure for other classes as well. Let me know what you think. Note from TobiKattmann: This PR depends on #861 . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/881:1493,test,test,1493,https://su2code.github.io,https://github.com/su2code/SU2/pull/881,1,['test'],['test']
Testability,"## Proposed Changes; In some cases we use relative frame for rotor zone to perform URANS, e.g., in aeroelasticity analysis, we want the grid movement comes only from blade deformation. The problem is that the sliding plane in SU2 works only for absolute frame. In relative frame, the grid is not rotating, so the interpolation at sliding interface is not changed as time step is marching. The proposed changes rotate the sliding interface in accordance with physical time steps to perform interpolation. This function is activated only for relative frame. The grid itself is not rotating.; Currently, this is only implemented in CNearestneighbor class, other interpolation method should be changed as well in the near future. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2311:1545,test,test,1545,https://su2code.github.io,https://github.com/su2code/SU2/pull/2311,1,['test'],['test']
Testability,"## Proposed Changes; In trying to understand the algorithm a little better I also tried to improve the documentation and clean up some redundancy. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1372:314,test,test,314,https://su2code.github.io,https://github.com/su2code/SU2/pull/1372,1,['test'],['test']
Testability,"## Proposed Changes; Initialize the omp_partitions vector with the number of points, skip the for loop if the last partition has been calculated. A light-weight checker is added also to verify the partition vector, promote a warning or error message if necessary.; . ## Related Work; Fix #1667 Potential crash for the OpenMP multi-thread running. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1678:939,test,test,939,https://su2code.github.io,https://github.com/su2code/SU2/pull/1678,1,['test'],['test']
Testability,"## Proposed Changes; Instead of computing transposed matrix vector products, which are harder to parallelize with OpenMP, and having special handling for transposed preconditioners, the matrix is transposed in place, then any preconditioner can be applied.; Some tweaks to support better Krylov discrete adjoint. ## Related Work; #1214. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1228:689,test,test,689,https://su2code.github.io,https://github.com/su2code/SU2/pull/1228,1,['test'],['test']
Testability,"## Proposed Changes; Introduce a ""matrix view"" type to avoid ** for example when passing gradients of primitives into the numerics. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1312:484,test,test,484,https://su2code.github.io,https://github.com/su2code/SU2/pull/1312,1,['test'],['test']
Testability,"## Proposed Changes; Introduction of mixture fraction transport equation to flamelet species solver. This allows for solving partially premixed, laminar combustion problems with heat transfer. The controlling variable names are generalized and have to be specified in the configuration file, such that they can be matched to the controlling variable names in the table. ; Additionally, the output writing for the flamelet variables has been generalized such that it can generate all the necessary outputs for any number of controlling variables.; . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2057:1123,test,test,1123,https://su2code.github.io,https://github.com/su2code/SU2/pull/2057,1,['test'],['test']
Testability,"## Proposed Changes; It had mpi problems and others: https://www.cfd-online.com/Forums/su2/236677-mpi-returns-wrong-objective-function-values.html. The target Cp file was also not formatted correctly, the residuals will change because of that. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1311:596,test,test,596,https://su2code.github.io,https://github.com/su2code/SU2/pull/1311,1,['test'],['test']
Testability,"## Proposed Changes; JST with scalar dissipation over predicts drag in friction-dominated problems, the version with matrix dissipation is better. ## Related Work; Depends on #1022. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1056:492,test,test,492,https://su2code.github.io,https://github.com/su2code/SU2/pull/1056,1,['test'],['test']
Testability,"## Proposed Changes; Just a small update of the `Makefile.am` to keep the older build system up to date with the new changes.; ; ## Related Work; Meson is a pretty great build system but as long as we are supporting the older build system (`make`), it needs to be kept updated. This happens fairly often and @pcarruscag brought this to my attention some time ago. Not a big deal, but also would be good practice to check PRs to make sure they still support the older build system. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/898:791,test,test,791,https://su2code.github.io,https://github.com/su2code/SU2/pull/898,1,['test'],['test']
Testability,"## Proposed Changes; Just small changes suggested by @TobiKattmann (Thank you) in #1357. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1359:441,test,test,441,https://su2code.github.io,https://github.com/su2code/SU2/pull/1359,1,['test'],['test']
Testability,"## Proposed Changes; Just your periodic small xcode update, including header search update for mel.hpp. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x ] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.; - [ n/a] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1535:702,test,test,702,https://su2code.github.io,https://github.com/su2code/SU2/pull/1535,1,['test'],['test']
Testability,"## Proposed Changes; Keep track of which points have been moved. ## Related Work; closes #2215 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2216:768,test,test,768,https://su2code.github.io,https://github.com/su2code/SU2/pull/2216,1,['test'],['test']
Testability,"## Proposed Changes; Latest develop: in SU2_CFD/obj/Makefile.am line 113 it needs to be `../src/transfer/physics/CTransfer_BoundaryDisplacements.cpp` instead of `../src/transfer/CTransfer_BoundaryDisplacements.cpp`. ; As travis uses the meson build, the autotools build is not checked anymore. ## Related Work; Introduced by #760 and #769 will fix it but I guess that should be merged quickly as everyone who merges develop and uses autotools will get this error. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/782:774,test,test,774,https://su2code.github.io,https://github.com/su2code/SU2/pull/782,1,['test'],['test']
Testability,"## Proposed Changes; Leaks and stuff, @WallyMaier I did not check if the method is implemented correctly, looked decent on the naca0012. ## Related Work; fix #1161. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1166:517,test,test,517,https://su2code.github.io,https://github.com/su2code/SU2/pull/1166,1,['test'],['test']
Testability,"## Proposed Changes; Let NdFlattener use a wrapped [MPI_Allgatherv](https://www.mpich.org/static/docs/v3.2/www3/MPI_Allgatherv.html) function which checks the number of participating MPI ranks. If there is only one, perform a simple copy operation instead. I hope that this fixes #1893, which I believe to be the result of a bug in MPICH. In my Ubuntu MPICH container, the `[NdFlattener]` test succeeds with these changes. . ## Related Work; #1893 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1897:389,test,test,389,https://su2code.github.io,https://github.com/su2code/SU2/pull/1897,2,['test'],['test']
Testability,"## Proposed Changes; Like for any other command in this file, build_command will add a quote on the left hand side of our command path. So we'll always need another quote on the right hand side. For some reason SOL_FSI, SOL and GEO were missing them, resulting in Errors when attempting to execute them. ## Related Work; Same as #578 but now against develop branch. Sorry for creating a PR against master... ## PR Checklist. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/579:721,test,test,721,https://su2code.github.io,https://github.com/su2code/SU2/pull/579,1,['test'],['test']
Testability,"## Proposed Changes; Make CEdge a class of arrays, instead of using it as an array of classes.; Ended up having to add some const-correctness to CNumerics too.; Forgot to turn off ""auto blank space stripping"" so a few files will show more changes than this actually introduces. ## Related Work; Needed for #789 (to eventually support the SIMD part).; Similar changes to #753.; Fixes a bug in the SST fluid-fluid interface. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/959:733,test,test,733,https://su2code.github.io,https://github.com/su2code/SU2/pull/959,1,['test'],['test']
Testability,"## Proposed Changes; Merge feature_input_output into feature_contiguous_cvariable_PR.; There are some issues to address, I will point them out tomorrow. ## Related Work; #724; #753 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/786:493,test,test,493,https://su2code.github.io,https://github.com/su2code/SU2/pull/786,1,['test'],['test']
Testability,"## Proposed Changes; Minor revision on the header file path. ; ; ## Related Work; May resolve a building issue at building SU2_GEO. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2084:690,test,test,690,https://su2code.github.io,https://github.com/su2code/SU2/pull/2084,1,['test'],['test']
Testability,"## Proposed Changes; Minor update to the output of the elasticity adjoint solver. . ## Related Work; I'm working on some tutorials related to this for version 7.0.3. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/901:716,test,test,716,https://su2code.github.io,https://github.com/su2code/SU2/pull/901,1,['test'],['test']
Testability,"## Proposed Changes; Move a few files, mainly mpi_structure.hpp, remove the .inl and make the mpi functions const correct according to the modern versions of the MPI standard.; Compilation with ancient MPI will probably need -fpermissive. ## Related Work; #583 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1133:615,test,test,615,https://su2code.github.io,https://github.com/su2code/SU2/pull/1133,1,['test'],['test']
Testability,"## Proposed Changes; Move from CGeometry to an interpolation class (solves the ""numerical recipes problem"", let's not do that again...). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1303:489,test,test,489,https://su2code.github.io,https://github.com/su2code/SU2/pull/1303,1,['test'],['test']
Testability,"## Proposed Changes; Move more routines to the FVM flow solver base class.; At the risk of sounding like a broken record, one function means:; One test, one optimization, one debug, one fix.; Implementing new features by copy-paste-modify is like eating your legs to get to the end of a marathon, it ain't gonna work in the long run xD; Cut, Paste, Abstract, Survive. ## Related Work; #1044. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1177:147,test,test,147,https://su2code.github.io,https://github.com/su2code/SU2/pull/1177,2,['test'],['test']
Testability,"## Proposed Changes; Multi-passage or full-annulus simulation is very important for turbomachinery case. For example, say one wants to simulate the circumferential features like rotating-stall or inlet distortion effect. Usually one first conducts single-passage RANS computation, then starts multi-passage or even full-annulus URANS from that converged single-passage solution. To do this in SU2, one meets two problems:; 1) Replicate the single-passage grid to user-defined number of passages (including full-annulus); 2) Replicate the single-passage solution. The proposed changes solve the two above mentioned problems.; This function is one of a series of features that enable SU2 to run URANS for turbomachinery cases, which have been shared to the SU2-Turbo group recently. ; This function has been used for my research for almost one year. If necessary, I could add simple test cases as well. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2312:881,test,test,881,https://su2code.github.io,https://github.com/su2code/SU2/pull/2312,2,['test'],['test']
Testability,"## Proposed Changes; New output to visualize the coarse grids.; It is based on coloring nodes, which is a little difficult to visualize with Paraview since it interpolates to elements, anyway:; ![image](https://user-images.githubusercontent.com/38071223/115119619-4ae4ed00-9fa1-11eb-8974-5cd6000c5b21.png). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1266:659,test,test,659,https://su2code.github.io,https://github.com/su2code/SU2/pull/1266,1,['test'],['test']
Testability,"## Proposed Changes; On the RANS onera m6 case (43k hex grid) the tape for the geometric recording becomes 13% smaller by:; - Computing element CG's together with their contributions to the dual volumes and edge normal vectors;; - Using preaccumulation ""per element"" instead of for each of the individual computations done for each element. On the hybrid grid for the same geometry we have in TestCases the reduction is 32%. Some additional memory reduction is achieved by not storing the primal element face CG's and the edge CG's, these are only needed when building dual volumes and they are easy to recompute with the data already accessed where they are currently needed. ## Related Work; #594. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1159:393,Test,TestCases,393,https://su2code.github.io,https://github.com/su2code/SU2/pull/1159,2,"['Test', 'test']","['TestCases', 'test']"
Testability,"## Proposed Changes; OpDiLib update.; . ## Related Work; Fixes #1368. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1369:662,test,test,662,https://su2code.github.io,https://github.com/su2code/SU2/pull/1369,1,['test'],['test']
Testability,"## Proposed Changes; Optimization of the Preprocessing phase;; Inclusion of the Chapmann-Enskog option for Mutation++. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Work Performed. I have reduced almost by half the time of the preprocessing phase, leading to a ~10% less time per iteration. This was done by:; * Calculate dPdU, dTdU, dTvedU only for the implicit case; * Avoid the calculation of eve_min and eve_max using Mutation++. Instead, return nonphysical if the vibrational temperatures reach the specified minimum and maximum value. Additionally, I have included the option of using Chapmann-Enskog for the calculation of transport equations and thermal conductivity using Mutation++",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1343:742,test,test,742,https://su2code.github.io,https://github.com/su2code/SU2/pull/1343,1,['test'],['test']
Testability,"## Proposed Changes; Pointers are pure evil. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1225:397,test,test,397,https://su2code.github.io,https://github.com/su2code/SU2/pull/1225,1,['test'],['test']
Testability,"## Proposed Changes; Prior to this PR, tape statistics were collected and printed for the tape of thread 0 of rank 0, with special handling for the memory usage of thread 0, which was reduced across MPI processes. This PR extends this to also take OpenMP parallel parts into account (threads other than thread 0), and reduces everything (not only used memory) across MPI processes. ## Related Work; any prior work on hybrid AD. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2235:859,test,test,859,https://su2code.github.io,https://github.com/su2code/SU2/pull/2235,1,['test'],['test']
Testability,"## Proposed Changes; Problem: If a given displacement boundary was cut during partitioning the solver would give wrong results.; Reason: When ""de-singularizing"" the stiffness matrix the column was only being deleted by the rank that owned the corresponding node.; Fix: All ranks delete the column (and update the load vector). Before:; ![image](https://user-images.githubusercontent.com/38071223/53267067-619d9b00-36da-11e9-8feb-5e77d5c7f3ef.png). After:; ![image](https://user-images.githubusercontent.com/38071223/53267075-695d3f80-36da-11e9-93bf-2e18e2e649dc.png). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/658:878,test,test,878,https://su2code.github.io,https://github.com/su2code/SU2/pull/658,1,['test'],['test']
Testability,"## Proposed Changes; Provide a function `CNumerics::ComputeStressTensor` to compute the laminar and turbulent stress tensor. Replace the code blocks currently computing it, which exist at many locations inside the code, by function calls. ## Related Work; ?. ## To be discussed; Is CNumerics the best location for this function? . 4 of the 5 `rans_uq` regression tests fail (in addition to those that failed before the change already). This seems to be due to floating-point errors in `CSourcePieceWise_TurbSST::SetReynoldsStressMatrix`, `CAvgGrad_Base::SetReynoldsStressMatrix`. These little deviations (relative difference around 1e-16) are probably amplified over the 10 iterations, so that the solver takes a notably different path to the steady state solution and the intermediate logarithmic residuals differ. I checked (for the `1c` and `2c` test cases) that the converged solutions are nearly equal though. (I can supply vtu files and plots if requested.); Should I update the stored residual values in `serial_regression.py` then?. Also I am not sure whether I have found all code blocks that can be replaced by the new function. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1127:363,test,tests,363,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127,4,"['log', 'test']","['logarithmic', 'test', 'tests']"
Testability,"## Proposed Changes; Pruned unnecessary files from the Boost archive included with TecIO; Updated .gitgnores in example folders to ignore .szplt files; Eliminated an unnecessary check for an X11 header file that TecIO no longer relies on. ## Related Work; Fine-tuning to Scott Imlay's TecIO update. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/635:609,test,test,609,https://su2code.github.io,https://github.com/su2code/SU2/pull/635,1,['test'],['test']
Testability,"## Proposed Changes; Quick followup on PR #700 to rename the linear algebra files according to class and move them to a dedicated directory.; Trailing spaces have been stripped and EOL's made consistent.; This does not introduce any code changes. ## Related Work; #583; #700 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/729:587,test,test,587,https://su2code.github.io,https://github.com/su2code/SU2/pull/729,1,['test'],['test']
Testability,"## Proposed Changes; Radial Basis Function interpolation for zone to zone transfer without matching meshes.; Main purpose is to use it with the FSI solvers, direct and adjoint. . ## Related Work; Also:; Adds under-relaxation to the adjoint FSI solver to facilitate convergence of strongly coupled problems.; Fixes missing turbulence solver dependencies.; Adds fluid node sensitivities to the output (before they were not set). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555:977,test,test,977,https://su2code.github.io,https://github.com/su2code/SU2/pull/555,1,['test'],['test']
Testability,"## Proposed Changes; Re-adding required files for test case VV sandia jet and changed regression.yml to get residual values required for vandv.py; @bigfooted @Cristopher-Morales. (This PR is created to get the residual values for the vandv.py script.); . ## Related Work. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2100:50,test,test,50,https://su2code.github.io,https://github.com/su2code/SU2/pull/2100,2,['test'],['test']
Testability,"## Proposed Changes; Recompute rho and h instead of reconstructing (for performance). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2356:517,test,test,517,https://su2code.github.io,https://github.com/su2code/SU2/pull/2356,1,['test'],['test']
Testability,"## Proposed Changes; Reduce duplication and maybe make it a bit faster. We were reading the entire mesh file in four passes (open-close, open-close, ...) one for metadata (NDIME, NELEM, etc.) one for points, one for elements, and then one for markers.; Now we have a maximum of 2 (meta + reading) and if the points are listed before the elements we do it in 1 pass (there are some meshes like that in TestCases).; If we need to split actuator disk surfaces there are more passes, don't ask me how many because I'm not going to touch that function (it is probably not used often). We still do a lot of reading for single-file multizone meshes to get to each zone, and usually we put smaller meshes at the end right :sweat_smile: I won't get into that now. ## Related Work; #1345 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1361:401,Test,TestCases,401,https://su2code.github.io,https://github.com/su2code/SU2/pull/1361,2,"['Test', 'test']","['TestCases', 'test']"
Testability,"## Proposed Changes; Register TauWall as preaccumulation input. ## Related Work; #1204 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1374:681,test,test,681,https://su2code.github.io,https://github.com/su2code/SU2/pull/1374,1,['test'],['test']
Testability,"## Proposed Changes; Regression tests will fail (code will not compile) on pedantic warnings, i.e. -Wall -Wextra -Wpedantic -Werror; For external libraries many warnings were manually disabled, because I don't know a better way of not having -Werror defined for them via meson. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1203:32,test,tests,32,https://su2code.github.io,https://github.com/su2code/SU2/pull/1203,2,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; Remove `CSolver::Convective_Residual`, as it does nothing and no derived class overrides it. There is one call in `CIntegration.cpp`, which I would like to replace by an error message. . Note that in the present version, usage of `numerics[CONV_TERM]` would not be thread-safe, it should be `numerics[CONV_TERM + omp_get_thread_num()*MAX_TERMS]` (see also #1214). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1222:977,test,test,977,https://su2code.github.io,https://github.com/su2code/SU2/pull/1222,1,['test'],['test']
Testability,"## Proposed Changes; Remove divergence terms from the source term, use 2003m by default. ## Related Work; Closes #1551. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2062:437,test,test,437,https://su2code.github.io,https://github.com/su2code/SU2/pull/2062,1,['test'],['test']
Testability,"## Proposed Changes; Remove some more duplication, fix some issues, and make the incompressible solvers compatible with OpenMP. ## Related Work; Fix #1175. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1178:508,test,test,508,https://su2code.github.io,https://github.com/su2code/SU2/pull/1178,1,['test'],['test']
Testability,"## Proposed Changes; Remove the legacy output and run turbomachinery cases with the single and multizone drivers.; The special turbomachinery outputs have been lost in the process but folks in the Turbo group are working on re-introducing them under the ""new"" (3 years old already :smile:) output classes. The harmonic balance driver loses very little, it only had one small special output file in the legacy output, we do not have one output per time instance and so the output from all instances is shown on screen and piped to the same history file.; I'm leaving it like this hoping that the vacuum sucks in some new development into HB in SU2.; ; ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2003:968,test,test,968,https://su2code.github.io,https://github.com/su2code/SU2/pull/2003,1,['test'],['test']
Testability,"## Proposed Changes; Remove ununsed multigrid options in cfg file of the new NACA 0012 fixed_values testcase and the SST_SUST testcase, and some other small changes. ## Related Work; Continuation of #1236, comments by @pcarruscag and @TobiKattmann . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1240:100,test,testcase,100,https://su2code.github.io,https://github.com/su2code/SU2/pull/1240,3,['test'],"['test', 'testcase']"
Testability,"## Proposed Changes; Remove unused `CPhysicalGeometry::Local_to_Global_Marker`, `Global_to_Local_Marker`; . ## Related Work; #1110. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1169:726,test,test,726,https://su2code.github.io,https://github.com/su2code/SU2/pull/1169,1,['test'],['test']
Testability,"## Proposed Changes; Remove use of `'U'` mode from Python `open()` function in TestCase.py. . ## Related Work; Issue #2170. Identifies test case that didn't run from `serial_regression.py`. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2171:79,Test,TestCase,79,https://su2code.github.io,https://github.com/su2code/SU2/pull/2171,3,"['Test', 'test']","['TestCase', 'test']"
Testability,"## Proposed Changes; Removing a couple unused variables to quash compiler warnings on Mac.; . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/702:661,test,test,661,https://su2code.github.io,https://github.com/su2code/SU2/pull/702,1,['test'],['test']
Testability,"## Proposed Changes; Reopen #1030 after changes. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1038:359,test,test,359,https://su2code.github.io,https://github.com/su2code/SU2/pull/1038,1,['test'],['test']
Testability,"## Proposed Changes; Replace references to the global MPI communicator `MPI_COMM_WORLD` with `SU2_MPI::GetComm()` where appropriate. This prevents deadlocking in cases where SU2 is given an MPI communicator other than `MPI_COMM_WORLD`, for example when creating an instance of `CDriver` through the Python interface. ## Related Work; Issue #1179 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1180:700,test,test,700,https://su2code.github.io,https://github.com/su2code/SU2/pull/1180,1,['test'],['test']
Testability,"## Proposed Changes; Replacement for a TecIO source file that does not compile with GCC version 9. Functionally identical, just contains shorter lines (more newlines).; . ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/692:746,test,test,746,https://su2code.github.io,https://github.com/su2code/SU2/pull/692,1,['test'],['test']
Testability,"## Proposed Changes; Restarted FGMRES was running to ""LINEAR_SOLVER_ITER"" once, instead of running to ""LINEAR_SOLVER_RESTART_FREQUENCY"" multiple times. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/557:702,test,test,702,https://su2code.github.io,https://github.com/su2code/SU2/pull/557,1,['test'],['test']
Testability,"## Proposed Changes; Run a bunch of loops to nPoint instead of communicating. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1181:430,test,test,430,https://su2code.github.io,https://github.com/su2code/SU2/pull/1181,1,['test'],['test']
Testability,"## Proposed Changes; See below. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1059:342,test,test,342,https://su2code.github.io,https://github.com/su2code/SU2/pull/1059,1,['test'],['test']
Testability,"## Proposed Changes; Setting MUSCL reconstruction in CNEMOEulerSolver to use the minimum limiter val for all primitives, consistent with the feature_NEMO branch, to try and address issues with non-physical points using MUSCL with the NEMO solver in Develop.; . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1428:870,test,test,870,https://su2code.github.io,https://github.com/su2code/SU2/pull/1428,1,['test'],['test']
Testability,"## Proposed Changes; Should not be multiplied by Roe kappa. ## Related Work; #2198 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2339:516,test,test,516,https://su2code.github.io,https://github.com/su2code/SU2/pull/2339,1,['test'],['test']
Testability,"## Proposed Changes; Single and Multizone driver now write restart files for last and second last iteration, if windowed time convergence happend and 2nd order time marching is active.; . ## Related Work; Solve issue #1211. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1237:816,test,test,816,https://su2code.github.io,https://github.com/su2code/SU2/pull/1237,1,['test'],['test']
Testability,"## Proposed Changes; Small PR to fix a memory leak in CConfig by deleting CFL_AdaptParam in the destructor.; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1188:725,test,test,725,https://su2code.github.io,https://github.com/su2code/SU2/pull/1188,1,['test'],['test']
Testability,"## Proposed Changes; Small change in the way an airfoil section is created when the geometry is evaluated. Previously the slicing of the geometry would fail if there were quads on the surface. This PR fixes that and now geometries are correctly evaluated regardless of the type of element on the surface. . It has been tested on a set of oneraM6 grids with different surface elements. All Triangles:; ![image](https://user-images.githubusercontent.com/30271435/70572050-dbacec80-1b53-11ea-82ea-dcb236c3562d.png). Mix of Quads and Triangles; ![image](https://user-images.githubusercontent.com/30271435/70571972-b61fe300-1b53-11ea-8a14-275e9780eebc.png). Mostly Quads; ![image](https://user-images.githubusercontent.com/30271435/70572104-fb441500-1b53-11ea-8bf4-4990331651c4.png). Taking 25 cuts along the span for each of these meshes, the computed airfoil sections are identical. In the image below, you see the 25 slices of the wing taken from all three meshes. Each airfoil section has 3 lines overlaid lines (one from each mesh): . ![image](https://user-images.githubusercontent.com/30271435/70572309-6a216e00-1b54-11ea-8ea8-65df47f2fd78.png). ## Related Work; NA. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/835:319,test,tested,319,https://su2code.github.io,https://github.com/su2code/SU2/pull/835,2,['test'],"['test', 'tested']"
Testability,"## Proposed Changes; Small fix to add the rotating frame coefficients (CT, CQ and CMerit) to the output. ; ; ## Related Work; Issue #957 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/962:689,test,test,689,https://su2code.github.io,https://github.com/su2code/SU2/pull/962,1,['test'],['test']
Testability,"## Proposed Changes; Small fixes and replacing the last ** and *** in CEulerSolver. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1224:436,test,test,436,https://su2code.github.io,https://github.com/su2code/SU2/pull/1224,1,['test'],['test']
Testability,"## Proposed Changes; Small fixes for FFD deformation of FSI problem using SU2_DEF. . - SetMesh_Files which writes the output .su2 file was called only for single zone, which has now been changed to the number of zones in the problem. - When writing the output mesh, SetSU2_MeshASCII closes the file after the first zone but it doesn't get reopened for the second zone. This function is only called by SetMesh_Files in COutput, where the the output file is opened and closed by the master node, therefore it is not necessary to the close the output file inside SetSU2_MeshASCII. . - When writing the deformed surface for the structural mesh, the same file name as the original was used thus overwriting the original file. '_def' has been appended to the filename similar to the fluid only case. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/617:1497,test,test,1497,https://su2code.github.io,https://github.com/su2code/SU2/pull/617,1,['test'],['test']
Testability,"## Proposed Changes; Small follow-on from #2039. Fixes two data races that did not affect the results but polluted the thread sanitizer findings (write-write for value that is not read and read-write for value that is overwritten with itself). ## Related Work; #2039. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2046:825,test,test,825,https://su2code.github.io,https://github.com/su2code/SU2/pull/2046,1,['test'],['test']
Testability,"## Proposed Changes; Small update of the Xcode project. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/832:760,test,test,760,https://su2code.github.io,https://github.com/su2code/SU2/pull/832,1,['test'],['test']
Testability,"## Proposed Changes; Small updates due to changes in libROM API (corresponds to PR https://github.com/LLNL/libROM/pull/80 ). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.; - [ x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1436:723,test,test,723,https://su2code.github.io,https://github.com/su2code/SU2/pull/1436,1,['test'],['test']
Testability,"## Proposed Changes; So I took a common method that folks use to converge multi physics problems expressed as fixed point iterations (the IQN-ILS) and applied it to the inner iterations of the discrete adjoint drivers (single and multizone), it seems to work well... I was having some issues when the primal solver does not converge so well for optimization edge cases, and this keeps the adjoint from diverging.; I'll post some results at some point. Other than storing a number of solution snapshots (20 seems like a good number) the overhead is minimal (and also provided you have Lapack/MKL, compile for OpenMP, with fast-math, and AVX support). ## Related Work; Already has #1015; Resolves #1021 ; Resolves #1025; Resolves #1029. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1020:1045,test,test,1045,https://su2code.github.io,https://github.com/su2code/SU2/pull/1020,1,['test'],['test']
Testability,"## Proposed Changes; So far BC's were done by a single thread, this PR addresses that which required making all that code thread-safe. There is also some duplication-avoiding cleanup.; A batch of regression tests for hybrid parallel (compilation + execution) was added. Boundary conditions are perhaps the easiest places to introduce non-thread-safe code, due to the common pattern of writing into temporary arrays of CSolver (e.g. Solution_i), thus it becomes important to have some tests in place. ## Related Work; Continuation of #789, so far as compressible flow goes we now have ""full coverage"", the only major areas left out (that matter to scalability) are MPI and parts of the initial preprocessing. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/975:207,test,tests,207,https://su2code.github.io,https://github.com/su2code/SU2/pull/975,2,['test'],['tests']
Testability,"## Proposed Changes; Some folks are having issues on Windows: https://www.cfd-online.com/Forums/su2/227916-problem-opening-vtu-file-paraview.html; @talbring and I think it might be the classic ""unsigned long is 32bits on Windows"" problem, maybe this fixes it, I do not have access to a Windows machine, if someone could test this it would be great. ## Related Work; #980; Resolves #1060. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1055:320,test,test,320,https://su2code.github.io,https://github.com/su2code/SU2/pull/1055,1,['test'],['test']
Testability,"## Proposed Changes; Some tests in the `parallel_regression.py` was running in serial with the `SU2_CFD` command this PR changes them to default (`mpirun -np 2 SU2_CFD`). . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1977:26,test,tests,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/1977,2,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; Some tweaks to the new multi-physics discrete adjoint framework plus the beginning of changes required to have FSI adjoints within it. No legacy code has been removed or disabled, yet... All explained below. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/809:539,test,test,539,https://su2code.github.io,https://github.com/su2code/SU2/pull/809,1,['test'],['test']
Testability,"## Proposed Changes; Sorry for the separate PR... we are working to include more solid solvers that can be used with the interface. This PR introduces few modifications that are required to include other solvers. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1363:565,test,test,565,https://su2code.github.io,https://github.com/su2code/SU2/pull/1363,1,['test'],['test']
Testability,"## Proposed Changes; Special signal handling for SIGTERM. When SIGTERM is sent to the solver, we catch it and simply exit the for-loop for the number of iterations. Files will then automatically be saved. ## Related Work; Related to Github discussion #2094 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2110:816,test,test,816,https://su2code.github.io,https://github.com/su2code/SU2/pull/2110,1,['test'],['test']
Testability,"## Proposed Changes; Split `geometry_structure.cpp/hpp` in one file per class, strip spaces, replace tabs, move inlines to .hpp, etc. This depends on #790, the only open PR affected by this is #773, @TobiKattmann I think it should be an easy merge since you only added new code. ## Related Work; #583. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/825:612,test,test,612,https://su2code.github.io,https://github.com/su2code/SU2/pull/825,1,['test'],['test']
Testability,"## Proposed Changes; Test if the ASLR fix (#2241, #2242) is still needed. ASAN and TSAN tests pass without the fix, the issue has probably been fixed in the GitHub runner. ## Related Work; #2241, #2242. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2341:21,Test,Test,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/2341,3,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,"## Proposed Changes; The CRot value was set to 1.0 for the HLPW5 but the standard value is 2.0 as suggested in TMR. Plus, there may be some inconsistencies with the negative branch of SA when used with the R variant. $\hat{S}$ should be used in the computation of the production term when $\hat{\nu}>0$. When $\hat{\nu}<0$, instead, the vorticity $\Omega$ should be used together with the $c_{t3}$ constant. Citing TMR:. ""This model is the same as the ""standard"" version (SA), except that the (SA-R) production term becomes: . $c_{b1}(1-f_{t2})[\hat{S}+C_{rot}min(0,S-\Omega)]\hat{\nu}$. ... However, a negative production term is not acceptable for the negative branch ($\hat{\nu} < 0$) of the (SA-neg) model. If coding (SA-neg-R), a possible C0 continuous production term in the negative (SA-neg-R) branch is the following: . $c_{b1}(1-c_{t3})[\hat{\Omega}+C_{rot}min(0,S-\Omega)]\hat{\nu}$. "". I don't understand if the second production term has to be used everytime SA-neg is considered or only at the points where $\hat{\nu}<0$. If it is already taken into account, then I'll modify the PR. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2352:1785,test,test,1785,https://su2code.github.io,https://github.com/su2code/SU2/pull/2352,1,['test'],['test']
Testability,"## Proposed Changes; The OptimalPropeller script provides the optimal load distribution along the propeller radius using only global parameters based on the inviscid theory of optimal propeller developed by Glauert. It also provides the actuator disk data file needed in input for the ""ACTDISK_TYPE = VARIABLE_LOAD"".; This script is useful in case the user would like to use this actuator disk model, but the propeller details are not available.; In this case, using global parameters (thrust coefficient, radius, hub radius, advance ratio, free-stream velocity and blades number), it allows the use of the model.; Input: interactive.; Output: ActuatorDisk.cfg, containing part of the SU2 .cfg file; ActuatorDisk.dat, containing the propeller load distribution to be read by SU2_CFD. Contributors:; Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II.; EttoreSaetta, lorenzorusso07, rtogna. ## Related Work; #1027 . ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1070:1269,test,test,1269,https://su2code.github.io,https://github.com/su2code/SU2/pull/1070,1,['test'],['test']
Testability,"## Proposed Changes; The PR changes the current limiter routine with the NEMO solver from a conservative variable limiter scheme to limiting on the basis of the primitive variables. This also updates some routines within SU2-NEMO to look/behave/take advantage of the standard SU2 implementations. I also tried tried to remove any other compiler errors. ## Related Work; This was first done with the AUSM scheme by @fmpmorgado. ; This is working towards functional implicit and dual-time capabilities in SU2-NEMO. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1139:1105,test,test,1105,https://su2code.github.io,https://github.com/su2code/SU2/pull/1139,1,['test'],['test']
Testability,"## Proposed Changes; The RHS is defined as the residual instead of the force vector, this is required because in Solve_b the adjoints of the Jacobian are tacitly assumed to be 0, this assumption is only valid if the solution of the primal linear system is 0 and that only happens when the RHS is 0 (e.g. the residual of a converged problem).; In a nutshell linear elasticity is now done like nonlinear, i.e. compute 'delta U' instead of 'U' (even if we only need one 'delta U' in the direct solver). This led to changes in how the RHS for time domain problems is computed (I would appreciate a second pair of eyes especially on those changes).; This fix also adds support for multiple materials in linear elasticity simulations.; I will add a regression test for this if the fix is found to be good. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/571:754,test,test,754,https://su2code.github.io,https://github.com/su2code/SU2/pull/571,2,['test'],['test']
Testability,"## Proposed Changes; The ```CLookUpTable``` class allows for the fast interpolation of unstructured 2D data. It was found that the query time of this class scaled significantly with the number of output variables, indicating inefficiencies in the query process.; ; These inefficiencies came from string comparison routines in the ```GetIndexOfVar``` function of the ```CLookUpTable``` class. By implementing overloaded instances of the look-up functions which retrieve data from data indices directly, the query time efficiency scaling was significantly improved. . Also reduced duplicate code within the ```CLookUpTable``` class. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2214:1302,test,test,1302,https://su2code.github.io,https://github.com/su2code/SU2/pull/2214,1,['test'],['test']
Testability,"## Proposed Changes; The computation was done in two loops to account for period comms in between.; When there are no periodic comms one loop is sufficient, better locality, more effective AD accumulation.; To do this the function was split in two, which is also good. ## Related Work; #594. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1031:602,test,test,602,https://su2code.github.io,https://github.com/su2code/SU2/pull/1031,1,['test'],['test']
Testability,"## Proposed Changes; The conjugate heat variables were not communicated properly between the flow and flamelet solver, resulting in the interface temperature between the fluid and solid to be always maintained at 300 kelvin for flamelet simulations. The changes mainly regard the recognition of the inclusion of energy for flamelet problems for the CHT methods, while in the flamelet solver, the conjugate variables are obtained from the flow solver instead of the flamelet solver itself. ; . ## Related Work; Related work includes the pull requests regarding the flamelet solver, as well as the related regression tests. The latter were obtained with this bug included, so the solution files have to be updated and the residual values in the regression tests have to be updated. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2067:615,test,tests,615,https://su2code.github.io,https://github.com/su2code/SU2/pull/2067,3,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; The current PR serves two purposes. First, it extends the sliding interface capabilities for multi-zone fluid-fluid interfaces to incompressible flows. Until now, these features were only available for compressible flows. For example, take the following case of a viscous flow enclosed by diathermal walls and discretized using two different zones with a permeable, non-matching interface:. ![testcase](https://user-images.githubusercontent.com/8706821/51894668-b6cee100-23a8-11e9-8ee8-4b3d846417b2.png); ![discretization](https://user-images.githubusercontent.com/8706821/51894939-5e4c1380-23a9-11e9-8acb-8ac04d555e2b.png). With the current SU2 implementation, the solution diverges due to the lack of interface boundary conditions. After only 10 iterations, the contours of velocity are:. ![former](https://user-images.githubusercontent.com/8706821/51894620-99017c00-23a8-11e9-938a-d8b0e38fa141.png). With this PR, the problem can be successfully solved with a multizone solution process. The contours of velocity and temperature are now:. ![velocity](https://user-images.githubusercontent.com/8706821/51894679-bdf5ef00-23a8-11e9-9466-d360fdc42733.png); ![temperature](https://user-images.githubusercontent.com/8706821/51894683-bfbfb280-23a8-11e9-8ffe-1901b33677bf.png). and also for unsteady problems. ![unsteady](https://user-images.githubusercontent.com/8706821/51894695-c4846680-23a8-11e9-87f5-35041d71fee4.gif). For the latter case I haven’t yet rotated the inner circle, because there are some missing features for dynamic meshes in the incompressible solver. The previous test case for steady-state flows has been added. One for unsteady flows will be enabled once the new output is in place, as the current output structure makes the regression scripts fail. The previous, however, opened a can of worms, as there were some physics based calls in the parent transfer structure (e.g. `GetnSlidingStates()`, `SetSlidingState()` and `SetnSlidingStates()`) that made the inc",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/638:414,test,testcase,414,https://su2code.github.io,https://github.com/su2code/SU2/pull/638,1,['test'],['testcase']
Testability,"## Proposed Changes; The current code only applies the option WINDOW_START_ITER to the history output, but the flow vars are counted from the first step after the restart. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2251:991,test,test,991,https://su2code.github.io,https://github.com/su2code/SU2/pull/2251,2,['test'],['test']
Testability,"## Proposed Changes; The current file comparison that is used for regression tests, does not feature a possibility to specify a tolerance or a threshold. This PR implements such a feature and does not affect the existing regression tests.; . ## Related Work; Currently, there are no regression tests that make use of this feature and the PR does not include a new test that would use it. However, the feature_new_flamelet branch already uses this feature. This branch here is to split off the feature as it is not related to flamelet models but it is a general feature that can used for a variety of regression tests that use a file comparison. . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [O] I have added a test case that demonstrates my contribution, if necessary.; - [O] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2031:77,test,tests,77,https://su2code.github.io,https://github.com/su2code/SU2/pull/2031,6,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; The doc for `merge` says the function should be skipped if `NUMBER_PART > 1` . The if statement had a typo in it and my models were error in the function. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1739:750,test,test,750,https://su2code.github.io,https://github.com/su2code/SU2/pull/1739,1,['test'],['test']
Testability,"## Proposed Changes; The files of the external CGNS library included with SU2 are upgraded to 4.4 release.; This will allow reading files generated with recent version of CGNS that are currently rejected because SU2 included version is a bit old. ## Related Work; No issue created yet but some users did comment about it. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2179:993,test,test,993,https://su2code.github.io,https://github.com/su2code/SU2/pull/2179,1,['test'],['test']
Testability,"## Proposed Changes; The first work item from #824 is kind of in place code-wise (lots of testing required).; I will use this PR to document the implementation, while continuing the work on the main PR, and to keep the discussion ""encapsulated"". ## Related Work; #789, #824. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830:90,test,testing,90,https://su2code.github.io,https://github.com/su2code/SU2/pull/830,2,['test'],"['test', 'testing']"
Testability,"## Proposed Changes; The following members of `CHeatSolver` were allocated but never freed: `Primitive_Flow_i`, `Primitive_Flow_j`, `HeatFlux_per_Marker`, `AverageT_per_Marker`, `Surface_Areas`, `ConjugateVar`. I propose to correct this in the spirit of #1225, using containers (`std::vector`) instead of pointers. There is a bit of additional cleanup. ## Related Work; #1225 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1256:971,test,test,971,https://su2code.github.io,https://github.com/su2code/SU2/pull/1256,1,['test'],['test']
Testability,"## Proposed Changes; The hybrid parallel implementation uses grid coloring (edge and element) to avoid race conditions when building the residual vector and Jacobian matrix.; Depending on grid size, type, and ordering, it may be difficult to find a good coloring, i.e. providing locality and enough parallelism (all threads getting almost the same number of work chunks to work on per color). This PR extends the use of the ""reducer strategy"" to fine grids (introduced and described in #861 for coarse grids, which before #894 I thought would be the only problematic scenarios) as a fallback strategy that is automatically selected when the coloring efficiency (highlighted below) drops below a threshold value. The reducer strategy can be forced by setting EDGE_COLORING_GROUP_SIZE to 0 (for some cases it seems to give better performance, contrary to the initial assessment from #789).; For element loops (CFEASolver and CMeshSolver, modified in #843) an automatic fallback was also introduced, but using ""locks"" (explained below) as a ""reducer strategy"" would use too much memory, and element loops are more compute intensive (and therefore less affected by the overhead of using these locks). ## Related Work; Part of #789, namely:; Improves scaling of the work from #861 #843 (should help with #894); Fixes a bug from #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/908:1639,test,test,1639,https://su2code.github.io,https://github.com/su2code/SU2/pull/908,1,['test'],['test']
Testability,"## Proposed Changes; The is a first step in updating the output structure in order to make it a little bit more flexible and easier to maintain. The plan is to eventually have a consistent way of defining objective functions and/or define custom output quantities on individual surfaces. . I introduced a new structure to store scalar quantities for the history output. This makes it much easier to filter and loop through a specific subset of fields. Next step is to have per surface values stored in the same structure. Furthermore, creating structure to compute problem-specific outputs like aerodynamic coefficients, time-averaged quantities, surface quantities and so on. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/913:1244,test,test,1244,https://su2code.github.io,https://github.com/su2code/SU2/pull/913,1,['test'],['test']
Testability,"## Proposed Changes; The multizone discrete adjoint driver is extended for dynamic problems. A time loop is added to the multizone DA driver, with additional handling for the external container to store the intermediate values and cumulative sensitivities per time step. @TobiKattmann - the changes to the DA multizone driver have been kept generic, they should be transferrable for CHT problems. Adjoint gradients for both dynamic FSI and dynamic CHT have been verified against finite differences. Dynamic adjoint test case has been added similar to an existing steady FSI test. . ## Related Work; #1259 (time averaged history output); #1174 (velocity transfer at FSI boundary). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1260:515,test,test,515,https://su2code.github.io,https://github.com/su2code/SU2/pull/1260,3,['test'],['test']
Testability,"## Proposed Changes; The objective is to provide a natural (i.e. readable) way to write code that extracts all the performance modern CPU have to offer. As described in the last update of #789 this will require completely different numerics classes, also to address other inefficiencies they have. For now all centered schemes and plain Roe have been ""ported"" (this also adds JST with matrix dissipation).; Most of the auxiliary CNumerics functions were also ported as consequence (inviscid fluxes, Jacobians, and so on) and so implementing new schemes only gets easier. If you want to test this, the new numerics are called for Roe on ideal gas without low Mach corrections (enabled by option USE_VECTORIZATION=YES) and also for centered schemes.; To get good performance on gcc you need the following optimization flags:; `-O2 -funroll-loops -ffast-math -march=?? -mtune=??` Where ?? should be something with AVX (e.g. `haswell`, `skylake`).; There are AVX and AVX512 specific optimizations.; Also the OpenMP simd directive is used, at least on gcc this makes a difference (because it is stubborn at vectorizing) so -Dwith-omp=true when calling meson.py.; You can expect around 30% speedup +- 10% on problems that do not need a lot of linear solver iterations, or more on machines with AVX512. ## Related Work; #789. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1022:586,test,test,586,https://su2code.github.io,https://github.com/su2code/SU2/pull/1022,3,"['stub', 'test']","['stubborn', 'test']"
Testability,"## Proposed Changes; The thread sanitizer analysis of the hybrid AD regression tests is clean, including the tests added in #1966. Given that the deviations observed in the CI pipeline (see #1980) are small, this is probably due to inherent non-determinism like varying orders of atomic updates on adjoint variables. This PR sets the tolerance of the recently added tests to the same tolerance that was already used for the other hybrid AD tests. . ## Related Work; #1966, fixes #1980. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1984:79,test,tests,79,https://su2code.github.io,https://github.com/su2code/SU2/pull/1984,5,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; The velocity component used in the axisymmetric residual is now considered as an input for preaccumulation in the residual computation. When not considered, the use of axisymmetry and the SST model will result in wrong sensitivities when using the discrete adjoint method. I also wanted to note that there does not seem to be any treatment of axisymmetric cases for the SA model. Is this correct or does it make sense to include a warning? We could, for example, do that in the context of this pull request. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1571:1125,test,test,1125,https://su2code.github.io,https://github.com/su2code/SU2/pull/1571,1,['test'],['test']
Testability,"## Proposed Changes; The wall function model of Nichols and Nelson was basically implemented in the same way for the compressible and the incompressible solver. But for the incompressible solver, the frictional heating part does not make sense, so it is removed. In the compressible part, some lines have been moved to make comparison between the comp/incomp model easier. . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1741:949,test,test,949,https://su2code.github.io,https://github.com/su2code/SU2/pull/1741,1,['test'],['test']
Testability,"## Proposed Changes; There was a bug in the CTurbSolver::ComputeUnderRelaxation() that would return a negative UR if the change in solution was too negative (less than the allowable decrease), which could cause the solution to head in the wrong direction. I'm not really sure why the turbulent solver version of this function was written differently than the flow solver (maybe the intention was to have a different allowable increase and decrease but they ended up being the same in the end?), but I changed it to make it consistent with the flow solver version. Also, as I mentioned in #1036, the UR parameters for the flow solver and turbulent solver both took the min of each other and were never reset for steady, meaning it was non-increasing. While on the topic of UR, I was wondering what the community's thoughts are on changing the SST models to use UR instead of solution clipping. The limits seem somewhat arbitrary to me (is there a ref?), and the tests I've done on my mesh adaptation cases have performed well where I've replaced clipping with UR. I realize this is a very limited dataset so if anyone has any strong opinions of why we should be clipping, let me know. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1057:961,test,tests,961,https://su2code.github.io,https://github.com/su2code/SU2/pull/1057,2,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; There were some changes to the config_template options for the DV indices which was not reflected in the python code and the TestCases config files. For example, the index for HICKS_HENNE bumps changed from 1 to 30 in the config_template.cfg file. But this change was not reflected in the python scripts or any of the TestCases config files. This PR fixes this issue. ; . ## Related Work; #733 . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/757:146,Test,TestCases,146,https://su2code.github.io,https://github.com/su2code/SU2/pull/757,3,"['Test', 'test']","['TestCases', 'test']"
Testability,"## Proposed Changes; There were some merge issues in the previous pull request that were causing lots of issues in #2209. Hopefully this is resolved here. . Update to the interface initialisation to enable both mixing plane and sliding interfaces within the same turbomachinery simulation. Addition of mass flow outlet to Giles BC. ## Related Work. This issue solves a problem reported by a number of users, when simulating radial turbomachinery cases a second-order accurate solution cannot be achieved in some cases when using mixing plane interfaces. This is due to circumfrential averaging in regions where the flow exhibits large circumfrential nonuniformity and/or interspace gaps between adjacent blade-rows/zones small. This issue has been reported by @LorenzoFabris, in a presentation at the SU2 Conference 2022 ""Performance Analysis and Shape Optimization of a Radial Compressor with the Open-Source Software SU2"" and by myself. Mass flow outlet included in the PR as requested by users. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2349:1669,test,test,1669,https://su2code.github.io,https://github.com/su2code/SU2/pull/2349,1,['test'],['test']
Testability,"## Proposed Changes; These additions will make it possible to let the discrete adjoint run for the heat solver. They do also include; - some bugfixes within the heat solver,; - a discrete adjoint heat iteration so that the solver could be run stand-alone in the future (e.g. for solids or coupled). As there is no general discrete adjoint driver yet, I wanted to avoid another specific one (e.g. 'CDiscAdjHeatDriver') as I could directly go for the generalized version. It is finished up to 90% and a pull request will be opened once we agreed on these changes. So for the test case protecting this functionality, the heat solver runs weakly coupled to an incompressible flow. Sensitivities have been validated. . ## Related Work; Pull requests for a general multizone adjoint driver will be opened hereafter. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/619:573,test,test,573,https://su2code.github.io,https://github.com/su2code/SU2/pull/619,2,['test'],['test']
Testability,"## Proposed Changes; These are rather smaller changes and fixes so that the unsteady multizone framework can be used for CHT. A test case together with a tutorial (mainly on how - and how easy it is - to turn a steady simulation into an unsteady one) will be added. ## Related Work; [Tutorial](https://github.com/su2code/su2code.github.io/pull/26); [Trailer on Youtube ;-)](https://www.youtube.com/watch?v=MqN8GalSyzk). @TobiKattmann @ScSteffen Please follow this so that we can set up Unsteady Adjoint CHT computations afterwards. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/854:128,test,test,128,https://su2code.github.io,https://github.com/su2code/SU2/pull/854,2,['test'],['test']
Testability,"## Proposed Changes; These are some minor bugfixes that I detected while preparing some tutorials for FEA. ## Related Work; I have prepared the following tutorials:; - [Linear Elasticity](https://su2code.github.io/tutorials/Linear_Elasticity/); - [Linear Dynamics](https://su2code.github.io/tutorials/Linear_Dynamics/); - [Nonlinear Elasticity](https://su2code.github.io/tutorials/Nonlinear_Elasticity/); - [Nonlinear Elasticity with Multiple Materials](https://su2code.github.io/tutorials/Multiple_Material/); - [Static FSI](https://su2code.github.io/tutorials/Static_FSI/). They could be linked to the main tutorials site as soon as these changes are included in a released version (e.g., 7.0.2). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/873:1249,test,test,1249,https://su2code.github.io,https://github.com/su2code/SU2/pull/873,1,['test'],['test']
Testability,"## Proposed Changes; These changes integrate MKL into SU2 linear algebra operations. The changes are guarded by a HAVE_MKL preprocessor flag, and require MKL 2019 Beta or newer, as they use the most recent features designed to optimize small matrix operations. Observe 18% performance improvement on Broadwell systems and 24% performance improvement on Skylake systems. Additionally, change adds call to memcpy in Gauss Elimination since overlapping source/dest would break functionality at a higher level, and memcpy improves performance. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary. -- Not necessary, existing tests cover functionality when HAVE_MKL flag is in place.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/542:1090,test,test,1090,https://su2code.github.io,https://github.com/su2code/SU2/pull/542,2,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; This PR addresses adding in the Jacobians for the NEMO convective, viscous and source terms. Much improvement and testing is still needed, but I was hoping to get feedback on some coding methodologies/strategies to avoid code bloat, etc. I would very much appreciate thoughts and feedback!. ## Related Work; This is a continuation of the recent NEMO improvements/modernization #1343 and #1347 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1356:135,test,testing,135,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356,2,['test'],"['test', 'testing']"
Testability,"## Proposed Changes; This PR adds Wall Model LES (and also Wall Resolved LES) capabilities to SU2. Several wall models were included, including the Equilibrium Algebraic and Adverse Pressure Gradient Wall Models. The Vreman and WALE with constant model coefficients are used to model the subgrid-scales but others SGS models can be easily added.; It is worth noting that the exchange location interpolation for the wall model inputs is not included here (see feature_WallModelLES branch). Thus, the wall model will use the information of the 1st grid point off the wall.; ; ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [X ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1120:1170,test,test,1170,https://su2code.github.io,https://github.com/su2code/SU2/pull/1120,1,['test'],['test']
Testability,"## Proposed Changes; This PR adds a regression testing pipeline based on the new Github actions features (https://github.com/su2code/SU2/actions). It uses docker containers for building and running the tests (https://hub.docker.com/r/su2code/build-su2 and https://hub.docker.com/r/su2code/test-su2, respectively, based on Ubuntu18.04/gcc7.4/OpenMPI2). This has several advantages over the current (Travis based) system:. - Using the containers you can run the building/testing environment locally on your machine. You can even download the compiled binaries produced on github and run them locally to further debug problems.; - It is faster and more flexible. Compiling and running all tests requires ~1h since a lot of things run in parallel now (e.g. building the base, reverse AD and forward AD binaries). There is potential to further speed things up by splitting the test case scripts into several files. All of that requires minimal work. Unfortunately there is no caching using ccache at the moment, but it is likely that github introduces this feature mid of november. ; - Additional tests like unit tests can make use of the same docker containers and can be easily set up by creating a new workflow file.; - We can easily add a deployment step to automatically create releases and/or nightly builds. **Note:** the linked docker containers are **only** for development/testing purposes. Hence we cannot give any support in this regard. For production use it is recommended to use singularity containers. But: the docker containers can be used as basis layers for singularity. I will get back with more information on that topic. ~~I had to change regression test values of two cases since apparently they are compiler dependent.~~ I changed it to the same versions as we have on Travis. There will be some documentation on how to use the containers locally soon. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/806:47,test,testing,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/806,6,['test'],"['test', 'test-', 'testing', 'tests']"
Testability,"## Proposed Changes; This PR adds the capability to simulate the AIR-7 gas model using SU2TCLib for viscous problems. Specific contributions include:; - Fix Gupta-Yos transport models for all flows (including ionized); - inclusion of Coulomb interaction cross sections for ion-ion collisions. Following the implementation detailed in Scalabrin's thesis. ## Related Work; PRs #1497 #1555 . Update to NEMO documentation includes description of GY model, see: https://github.com/su2code/su2code.github.io/pull/116. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1887:1069,test,test,1069,https://su2code.github.io,https://github.com/su2code/SU2/pull/1887,1,['test'],['test']
Testability,"## Proposed Changes; This PR adds the new instance layer to SU2_DOT. This is necessary for running it with multiple zones (right now a wrong allocation causes it to crash).; ; ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/613:486,test,test,486,https://su2code.github.io,https://github.com/su2code/SU2/pull/613,1,['test'],['test']
Testability,"## Proposed Changes; This PR adds the non-constant thermal conductivities to the NEMO output. ## Related Work; Discussion #1888 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1889:687,test,test,687,https://su2code.github.io,https://github.com/su2code/SU2/pull/1889,1,['test'],['test']
Testability,"## Proposed Changes; This PR automates the address sanitizer analysis that lead to the fixes in #2212. I'll make the additions step by step, to see if things in the CI pipeline work as expected. ## Related Work; https://github.com/su2code/Docker-Builds/pull/24, #2212, #2068, #2213. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246:714,test,test,714,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246,1,['test'],['test']
Testability,"## Proposed Changes; This PR breaks up the following files:; 1. grid_movement_structure; 2. adt_structure. It also gets rid of grid_adaptation_structure and the entire SU2_MSH module. These files have not be updated in a long time are are deprecated. None of the new work in mesh adaptation by @bmunguia uses any of these routines. . ## Related Work; #583 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1035:908,test,test,908,https://su2code.github.io,https://github.com/su2code/SU2/pull/1035,1,['test'],['test']
Testability,"## Proposed Changes; This PR changes the Area computation loops with the geometry toolbox. There may be better ways to include the ; toolboxes, and Im happy to change that around.; ; There is a still a lot of dot products, norms, etc. that can be updated. One step at a time. ## Related Work; General Maintenance work. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1137:913,test,test,913,https://su2code.github.io,https://github.com/su2code/SU2/pull/1137,1,['test'],['test']
Testability,"## Proposed Changes; This PR contains fixes for two memory issues. - The first issue regards AD builds. The reinterpret cast of the dynamically allocated char array to an `su2double` array prevents `su2double` default constructor calls. In that case, the memory must be zero initialized in order for the AD index management to work correctly.; - Regarding the second issue, invalid reads occur when the pointers to the local arrays are used later in `CConfig::SetDefaults()` when the arrays are already out of scope. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1077:827,test,test,827,https://su2code.github.io,https://github.com/su2code/SU2/pull/1077,1,['test'],['test']
Testability,"## Proposed Changes; This PR continues the CoDiPack 2 update #1903 after further testing. Fixes a data race. ## Related Work; #1903 . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2009:81,test,testing,81,https://su2code.github.io,https://github.com/su2code/SU2/pull/2009,2,['test'],"['test', 'testing']"
Testability,"## Proposed Changes; This PR fixes a bug in the restart of problems which involve dynamic meshes and turbulence.; Given that the Grid Velocities are written in the restart files after the turbulence variables, the indices must me incremented when the restart file is being read in.; At this moment that does not happen, as the variable index is incremented but later reset, and therefore the GridVel container receives incorrect values. ## Related Work; -. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/618:1007,test,test,1007,https://su2code.github.io,https://github.com/su2code/SU2/pull/618,1,['test'],['test']
Testability,"## Proposed Changes; This PR fixes a couple issues in the nonlinear adaptive CFL scheme. - Convergence of the linear solver was assumed if the residual was greater than 0.5, which is quite large. I replaced this with the linear solver tolerance.; - The sum of nonlinear residuals was never computed for steady since `TimeIter` was used.; - The under-relaxation parameters for the flow solver and turbulent solver both took the min of each other and were never reset for steady, meaning it was non-increasing. @jayantmukho and I wanted to discuss more possible improvements to the scheme. I wanted to open this up before making any actual changes. - Currently there is a check for stalling residuals (the sum over 100 iterations of delta_Res must be > 0.1 Res), but this doesn't protect against increasing residuals. We should implement another check to prevent divergence.; - Instead of computing a single local CFL for flow/turbulence with a reduction factor for turbulence, maybe it would be better to have both solvers make their own call to `AdaptCFLNumber` and compute their own local CFL based on their own ResRMS. I feel like this would make more sense since the solvers are decoupled anyway. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036:1750,test,test,1750,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036,1,['test'],['test']
Testability,"## Proposed Changes; This PR fixes a couple of bugs I found recently. I also adapted the config preprocessing output to reflect the new output and convergence criteria options. . Furthermore it fixes the artifacts mentioned by @TobiKattmann in #774 regarding the Heatflux sensitivity. . Feel free to add any other fixes that you might came across. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/798:914,test,test,914,https://su2code.github.io,https://github.com/su2code/SU2/pull/798,1,['test'],['test']
Testability,"## Proposed Changes; This PR fixes a couple of bugs identified in the incompressible solver:; - In the computation of the FDS fluxes, we need to use DensityInc_i and DensityInc_j in the computation of the preconditioner, instead of Density_i/Density_j, which are not initialized in the function.; - The per-surface output for heatflux and max heatflux was receiving information from an incorrect container. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/588:957,test,test,957,https://su2code.github.io,https://github.com/su2code/SU2/pull/588,1,['test'],['test']
Testability,"## Proposed Changes; This PR fixes an issue in the discrete adjoint multizone driver where adjoints are seeded before sufficient adjoint vector size is guaranteed, resulting in an objective function gradient of zero. The PR also contains other small fixes.; ; ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2112:577,test,test,577,https://su2code.github.io,https://github.com/su2code/SU2/pull/2112,1,['test'],['test']
Testability,"## Proposed Changes; This PR fixes small issues in the meson build system that I noticed during recent work on SU2.; 1. deprecation warnings about `meson.source_root()`; 2. an incorrectly displayed `ninja` command. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2093:532,test,test,532,https://su2code.github.io,https://github.com/su2code/SU2/pull/2093,1,['test'],['test']
Testability,"## Proposed Changes; This PR fixes the version numbers of files and test cases up to the 7.1.1. (Mostly in NEMO) All files should be consistent now, but I may have missed some. . I am not sure if the test cases were intentionally left old, but I can change that. EDIT:; After taking a look through, I used my best judgement regarding what is up-to-date. The biggest issue I had was in the sliding_interface sections where configs for Kind_Interpolation= Weight-Average and Nearest-Neighbor. In this case I assumed that these options or used interchangeably among test cases, that I can update both _NN and _WA. I did similar things for some SST vs SA options. Below are the only cases that Im not sure if they are being used/up-to-date with develop: . fea_fsi/SquareCyl_Beam/; incomp_rans/rough_wall/ [pretty sure this is up-to-date, but not used in regressions]; optimization_euler/steady_inverse_design/; sliding_interface/incompressible_unsteady/ [Commented out, so I left this one alone]; sliding_interface/single_stage/; turbomachinery/centrifugal_*/ . I also went ahead and removed:; rans/naca0012/*_sa_neg [SA_neg is already used in turb_NACA0012_sa.cfg] ?; rans/naca0012/*_sa_binary. ## Related Work; This is a chore. ## PR Checklist; - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x ] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1271:68,test,test,68,https://su2code.github.io,https://github.com/su2code/SU2/pull/1271,3,['test'],['test']
Testability,"## Proposed Changes; This PR goes in line with the driver reorganisation started in #585. At this time, it is the single-zone adjoint driver that is introduced, which inherits from the primal single-zone driver class. Problem properties are set at time of driver instantiation, and routines are mostly opaque to the physics (not yet completely as some further work is required in input/output). The functions are exposed to python so in a later PR the adjoint can also be used with the AD mode enabled. Some old driver classes are already removed. ## Related Work; - Further work by @oleburghardt to follow on the multizone adjoint driver.; - Some features awaiting the input/output restructuring PR by @talbring. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/671:1264,test,test,1264,https://su2code.github.io,https://github.com/su2code/SU2/pull/671,1,['test'],['test']
Testability,"## Proposed Changes; This PR includes a fix that will reenable CHT for compressible flow (unintentionally out of service in v7 so far). A regression test was added to protect this functionality together with some general CHT-related cleanups.; ; ## Related Work; Fixes issue #838 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/839:149,test,test,149,https://su2code.github.io,https://github.com/su2code/SU2/pull/839,2,['test'],['test']
Testability,"## Proposed Changes; This PR incorporates a P1 solver for Radiative Heat Transfer to SU2. The P1 model is a popular 1-equation model to solve the infinite-dimensional Radiative Heat Equation (RHE) that works under the assumption that the energy distribution is linearly isotropic (1). The implementation is general and thought to allow further extension of the radiation solvers in SU2, e.g., to discrete ordinates or partial moment approximations. The solution method is staggered and works in a very similar way to the turbulence models in SU2. . (1) Frank, M., _et al._ (2006), Partial moment entropy approximation to radiative heat transfer. _Journal of Computational Physics 218(1), 1–18._ DOI: [10.1016/j.jcp.2006.01.038](https://doi.org/10.1016/j.jcp.2006.01.038). ## Related Work; - I'm preparing some tutorials at the moment that I hope to have finalised by the time of the release of 7.0.2. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/872:1451,test,test,1451,https://su2code.github.io,https://github.com/su2code/SU2/pull/872,1,['test'],['test']
Testability,"## Proposed Changes; This PR integrates pyBeam, a non-linear open source beam solver, into the SU2 infrastructure as a subproject, and adds support for coupled FSI simulations using SU2's flow solver and pyBeam's structural solver. Tutorials on how to use the implementation will come soon. At this point, only minor changes to the compilation and the python scripts are required. The impact to the core of the code is minor. I will be away for a few days, but please go ahead and have a look/comment/find room for improvement in the meantime :) I will reply to your comments as soon as I'm back to office. I also added a couple of test cases, but I haven't yet found the best way to hook them to our regression test system. I'll definitely look into it before the PR is merged, but due to personal time constraints, it'd be great if this could be integrated for 7.0.3. ## Related Work; This work is the result of a collaboration with @RoccoBombardieri and @crauno from the University Carlos III Madrid. . Please refer to a recent [paper at EUROGEN 2019](https://www.researchgate.net/publication/335972259_Towards_an_open-source_framework_for_aero-structural_design_and_optimization_within_the_SU2_suite) with regards to this work. Full reference will be provided here upon publication in an Springer ECCOMAS book series. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/902:632,test,test,632,https://su2code.github.io,https://github.com/su2code/SU2/pull/902,2,['test'],['test']
Testability,"## Proposed Changes; This PR introduces surface deformation routines in CMeshSolver and enables discrete adjoint calculations for deforming mesh problems. Gradient verification for a pitching airfoil using a deforming mesh is good compared against rigid motion for the same pitching airfoil:. ![image](https://user-images.githubusercontent.com/33747655/70388845-407b1200-19af-11ea-9bf0-e016547197b5.png). ## Related Work; Contains PR #919 which cleaned up legacy FSI and deformation methods ; Builds on work previously discussed in PR #766 ; Includes fix for issue #860 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/833:882,test,test,882,https://su2code.github.io,https://github.com/su2code/SU2/pull/833,1,['test'],['test']
Testability,"## Proposed Changes; This PR introduces the implicit time-stepping capability for viscous problems using NEMO. ; The is a ""clean"" of PR #1356 (which should be closed by the time you read this). Most of the implementation discussion can be found there. Thanks to @pcarruscag for helping modernize the approach taken!. There are also several small fixes throughout addressing some LGTM.com and codefactor issues. Future work will include extracting Jacobians from the Mutation++ to be used with NEMO. As of right now, only the native library can be used with the implementation. ## Related Work; Related PRs include #1356, #1343, and #1347. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1422:1231,test,test,1231,https://su2code.github.io,https://github.com/su2code/SU2/pull/1422,1,['test'],['test']
Testability,"## Proposed Changes; This PR is for fixing #2276. With the observations in #2276 and after discussion with @joshkellyjak, the fix proposed in #2246 is probably the correct one. ## Related Work; #2158, #2246, #2260. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2293:646,test,test,646,https://su2code.github.io,https://github.com/su2code/SU2/pull/2293,1,['test'],['test']
Testability,"## Proposed Changes; This PR refactors the SST model implementation to include (hopefully) the KL, RC, V, m, SUST models. ; Mainly for the models SST-V(m) and SST-Vsust(-m). These tend to be used in higher speed flows. https://turbmodels.larc.nasa.gov/sst.html. A quick summary of some of the changes are:. Adding the""V"" term simply changes the P-term from; `Eddy_Viscosity_i * pow(StrainMag,2)` to; `Eddy_Viscosity_i * pow(VorticityMag,2)`. Adding the ""KL"" source term changes the P-term to; `Eddy_Viscosity_i *StrainMag*VorticityMag`. Adding the ""RC"" term:; Multiplying the P-term by a function, f. . Many of the Options can be used together -> SST-V-sust-m. The NASA TMR doesn't explicitly mention something like SST-2003-V-RC-sust-m,so I don't know if that is a valid permutation. That being said, the amount of options is fairly so I'm not sure the best way to approach this formulation, without unnecessarily bloating the code. Hence this isn't operational yet. Work will need to be done to validate the addition. ## Related Work; This is part of the larger turbulence fixes/additions/modernization efforts seen in #1557. It also addresses some comments in #1551 and #1413. Also as @pcarruscag pointed out below, this falls out in the larger discussion mentioned in #1364. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1560:1631,test,test,1631,https://su2code.github.io,https://github.com/su2code/SU2/pull/1560,1,['test'],['test']
Testability,"## Proposed Changes; This PR removes `CMultiphysicsZonalDriver` from the legacy `CDriver.cpp` and related config options.; It was part of some initial contributions that went into a major driver structure rework. It's now just a leftover which is fully superseded by the new `CMultizoneDriver` anyway. It's meant just as a quick deletion to tidy up the code before the next release.; ; ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/776:696,test,test,696,https://su2code.github.io,https://github.com/su2code/SU2/pull/776,1,['test'],['test']
Testability,"## Proposed Changes; This PR removes python2.7 from the test matrix in travis. We have a lot of development right now and until we have found a better way to speed up regression tests, this is, I think, the best approach to remove that roadblock at the moment:. - There is no real development done in the python framework at the moment; - Usually the incompatibilities between python 2 and 3 can be resolved quite easily.; - Python 2 is marked as deprecated anyway. If you have other thoughts let me know. There might be other ways like the caching feature of travis, but it takes effort and time to modify our system. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/709:56,test,test,56,https://su2code.github.io,https://github.com/su2code/SU2/pull/709,3,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; This PR restructures the CTransfer parent and child classes following discussions in #583 and #725. Given that I already started it in #760, I just went ahead and moved all the remaining classes. It should be compared to `feature_elastic_mesh_solver`. ## Related Work; Depends on #760 and should be merged afterwards. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/769:889,test,test,889,https://su2code.github.io,https://github.com/su2code/SU2/pull/769,1,['test'],['test']
Testability,"## Proposed Changes; This PR started as a collection of small fixes for issues I came across during recent work with SU2, mostly in the build/test system, but then the focus shifted towards general cleanup of the regression tests. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1764:142,test,test,142,https://su2code.github.io,https://github.com/su2code/SU2/pull/1764,3,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; This PR updates codi and medi to the newest version. For externally differentiated functions and preaccumulation it now uses the interfaces provided by codi. . ## Related Work; This fixes #659. . PRs #650 and #653 should be merged in before (I will deal with this next week). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/660:847,test,test,847,https://su2code.github.io,https://github.com/su2code/SU2/pull/660,1,['test'],['test']
Testability,"## Proposed Changes; This PR updates some of the NEMO viscous routines to be more inline with the overall SU2 structure. Hopefully paving the way for an easier merge with turbulence solvers in the future. ## Related Work; This is coming with an effort to update and optimize NEMO, like in #1343. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1347:888,test,test,888,https://su2code.github.io,https://github.com/su2code/SU2/pull/1347,1,['test'],['test']
Testability,## Proposed Changes; This PR will add heat flux to the values that are checked in the regression testing. This should help capture more of the code performance. . ## Related Work; @jtneedels noticed a possible issue of changes made in #1417. This will help avoid any potential unwanted changes.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1698:97,test,testing,97,https://su2code.github.io,https://github.com/su2code/SU2/pull/1698,1,['test'],['testing']
Testability,"## Proposed Changes; This PR will help address issues seen in SU2 when symmetry planes are applied. These include pressure oscillations at sym plane & solid wall interfaces (i.e. blunt bodies). It will also change the implementation of the sym plane in SU2-NEMO to that used by the rest of the code, the template function in CFVMFlowSolverBase.inl.; . ## Related Work; This PR will largely utilize the work done in #1168 by Fabio Morgado. It is in addition to #657. It will address several open issues #1625 and #1125. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1635:1111,test,test,1111,https://su2code.github.io,https://github.com/su2code/SU2/pull/1635,1,['test'],['test']
Testability,"## Proposed Changes; This PR; -changes the name of the class CUserDefinedTCLib to CSU2TCLib (class that refers to the SU2 native fluid model for nonequilibrium flows); -introduces another nonequilibrium fluid model that refers to the support of Mutation++ library. CMutationTCLib class is introduced at the same level of CSU2TCLib, as a child of CFluidModel; -sets up the meson configuration of Mutation++ as a git submodule (since Mutation++ is a cmake library, it needs to be treated as meson subproject). For appropriate review of this PR; 1. please test the link to mutation++ with:; `$./meson.py <build_dir> --prefix=<path_to_su2> -Denable-mpp=true`; and follow the instructions at the end of the meson log; 2. run the regression test in TestCases/nonequilibrium/viscwedge_mpp. ## Related Work; This PR follows a series of PRs to migrate the full NEMO solver to the develop/master branch, with @WallyMaier and @fmpmorgado . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1160:553,test,test,553,https://su2code.github.io,https://github.com/su2code/SU2/pull/1160,5,"['Test', 'log', 'test']","['TestCases', 'log', 'test']"
Testability,"## Proposed Changes; This a initial merge to begin incorporating some modification to the sliding mesh interface which we are planning to improve in the next future. ## Related Work; Mostly performance improvements in the creation of the super mesh for the Weighted Average sliding mesh approach.; ADT is now used to initialize the supermesh construction. Some portions of the code were re-implemented using a smarter algorithm which reduces the code length. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2334:1134,test,test,1134,https://su2code.github.io,https://github.com/su2code/SU2/pull/2334,1,['test'],['test']
Testability,"## Proposed Changes; This a initial merge to begin incorporating some modification to the sliding mesh interface which we are planning to improve in the next future. . ## Related Work; Mostly performance improvements in the creation of the super mesh for the Weighted Average sliding mesh approach.; ADT is now used to initialize the supermesh construction. Some portions of the code were re-implemented using a smarter algorithm which reduces the code length. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2332:1133,test,test,1133,https://su2code.github.io,https://github.com/su2code/SU2/pull/2332,1,['test'],['test']
Testability,"## Proposed Changes; This adds a check for a non-zero/non-negative reynolds number if running NS or RANS. - [x ] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/668:402,test,test,402,https://su2code.github.io,https://github.com/su2code/SU2/pull/668,1,['test'],['test']
Testability,"## Proposed Changes; This adds a check to prevent SU2 continuing diverge/reach extremely large residuals. This seems to be a feature request in both the SU2 issues (#38) and on the CFD-Online forum. . This is similiar to the divergence criteria but is activated at residuals greater than 10^12 . This number can change, it was arbitrarily chosen. ; ; - [ x] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/697:647,test,test,647,https://su2code.github.io,https://github.com/su2code/SU2/pull/697,1,['test'],['test']
Testability,"## Proposed Changes; This adds more AUSM family schemes. . ## Related Work; This is a continuation of PR #1773 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1943:670,test,test,670,https://su2code.github.io,https://github.com/su2code/SU2/pull/1943,1,['test'],['test']
Testability,"## Proposed Changes; This adds the source term for axisymmetry to the residual computation for species transport. The source term is zero for non-axisymmetric cases. . ## Related Work; This builds upon the closed pull request #1762 and is connected to #card-71271518 as an aspect of feature_flamelet. ; The change uses the implementation by @bigfooted on feature_flamelet. The implemented source term was checked against literature/own derivation by @Cristopher-Morales. ; I would like to set up a regression test as soon as #1784 is merged. ## PR Checklist; - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1785:509,test,test,509,https://su2code.github.io,https://github.com/su2code/SU2/pull/1785,2,['test'],['test']
Testability,"## Proposed Changes; This adds/extends the turbulence solver for NEMO. As of right now, there is a lot of repeated code. ; Much testing is still needed, but the base structure is here. I hoping to get some early comments, and ideas of how to reduces the code repetition. ## Related Work; Other feature developments in NEMO, as PR #1356 and PR #1383 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1385:128,test,testing,128,https://su2code.github.io,https://github.com/su2code/SU2/pull/1385,2,['test'],"['test', 'testing']"
Testability,"## Proposed Changes; This allows UQ and NICF features to be used with the vectorized centered schemes.; UQ can also be used with the vectorized Roe scheme, but not NICF as that would not be equivalent to the general Roe implementation.; With this the older implementations were removed as they are never used as boundary numerics. ## Related Work; #1022. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1149:707,test,test,707,https://su2code.github.io,https://github.com/su2code/SU2/pull/1149,1,['test'],['test']
Testability,"## Proposed Changes; This allows one to define a triple physics simulation where structural displacements due to fluid forces are also applied to a heat transfer solid domain ; [example.zip](https://github.com/su2code/SU2/files/4541290/example.zip); but where the temperature of that domain does not influence the elastic response (for now),. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/951:653,test,test,653,https://su2code.github.io,https://github.com/su2code/SU2/pull/951,1,['test'],['test']
Testability,"## Proposed Changes; This change makes it easier to use system-wide Meson and Ninja in order to build SU2 from source. ## Related Work; See issue #1945 for more information. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1951:731,test,test,731,https://su2code.github.io,https://github.com/su2code/SU2/pull/1951,1,['test'],['test']
Testability,"## Proposed Changes; This changes a boolean check in CNEMONumerics.cpp which always seems to be true. This has been causing some segfaults in 10-11 species viscous cases. I suspect this is causes because the Kind_TimeNumScheme is not updated before the numerics constructor. Some work that still needs to be done is confirm/test 10 and 11 species gases do work when the problem is supposed implicit. ; ; ## Related Work; PR#1422. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1482:324,test,test,324,https://su2code.github.io,https://github.com/su2code/SU2/pull/1482,1,['test'],['test']
Testability,"## Proposed Changes; This continues the CoDiPack 2 Update. The multithreading features in CoDiPack have been merged, this PR updates SU2 to the merged CoDiPack version. ## Related Work; #1903 #2009. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2013:516,test,test,516,https://su2code.github.io,https://github.com/su2code/SU2/pull/2013,1,['test'],['test']
Testability,"## Proposed Changes; This draft PR aims to generalize and template the turbulence solver/ scalar solvers to reduce code duplication and allow NEMO access to the turbulence solvers. The ideas were discussed with @pcarruscag, @TobiKattmann and @suargi, ; I am opening up the draft PR very early, so this is very much a work in process. The main idea is use templates to introduce differing variable index values into the Scalar/Turb solvers. ## Related Work; This idea follows PR #1375 and PR #1330. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1392:1090,test,test,1090,https://su2code.github.io,https://github.com/su2code/SU2/pull/1392,1,['test'],['test']
Testability,"## Proposed Changes; This feature allows for computationally efficient through-flow computations for turbomachinery applications in the form of body-force modeling. The body-force model (BFM) generates density, momentum and energy source terms which turn the flow according to the local flow conditions and blade geometry. The blade geometry is defined through the camberline and blade thickness parameters, which are interpolated onto the mesh nodes prior to the solution process. ; Two BFM formulations are currently implemented: Hall (2015) and Thollet (2017). The code is up-to-date with ""develop"", version 7.1.1. ; Upcoming milestones will be MPI integration and coupling with adjoint. The latter will allow for computationally efficient design workflows of turbomachinery components. This will be especially useful for distortion-tolerant machines, as the design variable count and computational requirements are significantly higher than for machines experiencing uniform inflow. ; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1348:1731,test,test,1731,https://su2code.github.io,https://github.com/su2code/SU2/pull/1348,1,['test'],['test']
Testability,"## Proposed Changes; This feature allows of employing cubic equation of state based on the **CoolProp** library's Peng-Robinson backend [1,2]. The present Peng-Robinson fluid model implementation (CPenRobinson.cpp file) requires '_Specific heat ratio_' (_gamma_) as an input which is not always possible to know in advance, especially for organic fluids (refrigerants).; The fluid model (titled as **PR_COOLPROP_GAS** in config file) in the proposed branch is completely free of any '_gamma_' in particular functions and allows of utilizing the spatially variable of isobaric and isochoric specific heats. The full set of available fluids is presented in the **config_template.cfg** file. One must be aware that the reviewed fluid model assumes imposing pure substance in gas phase (no mixtures or multiphase flows). The implemented fluid model improves the thermodynamic consistency however there is performance penalty related to algorithmic overhead. . 1. http://coolprop.org/; 2. https://github.com/CoolProp/CoolProp. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [+ ] I am submitting my contribution to the develop branch.; - [+ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ +] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ +] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1402:1765,test,test,1765,https://su2code.github.io,https://github.com/su2code/SU2/pull/1402,1,['test'],['test']
Testability,"## Proposed Changes; This fix resolves a problem related to mismatched gradients between the forward and reverse mode of AD when considering EFFICIENCY as the objective function. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1074:730,test,test,730,https://su2code.github.io,https://github.com/su2code/SU2/pull/1074,1,['test'],['test']
Testability,"## Proposed Changes; This fixes the update of the dual time step for species transport, enabling transient simulations. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2260:808,test,test,808,https://su2code.github.io,https://github.com/su2code/SU2/pull/2260,1,['test'],['test']
Testability,"## Proposed Changes; This implementation allows the connection of an inlet surface with an outlet surface (e.g. to simulate internal channels inside a model). In order to do so, it has been necessary to create an option OUTLET_TYPE that will be used in the future (e.g. to add a mass flow driver for the outlet - currently only static pressure is implemented - ). To sum up, to connect an inlet with an outlet you should type the following:. % Inlet boundary type (TOTAL_CONDITIONS, MASS_FLOW, SURFACE_OUTLET); INLET_TYPE= SURFACE_OUTLET; % Outlet boundary type (PRESSURE_OUTLET, SURFACE_INLET); OUTLET_TYPE= SURFACE_INLET. In the future, we should be able to specify pressure losses inside the ""pipe"" that connect the surfaces.; ; ## Related Work; This is a new implementation that solves passive flow control problems where we are not interested in creating a complicated mesh inside the main volume to define the internal channels/pipes. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/538:1491,test,test,1491,https://su2code.github.io,https://github.com/su2code/SU2/pull/538,1,['test'],['test']
Testability,"## Proposed Changes; This introduces the implicit solver for the Euler solver with SU2-NEMO. I created this branch/PR for a clean commit history version. ; This PR also does some general cleanup (declaring variables, use of geometry toolbox) to be more consistent in the SU2 style. ## Related Work; This is based on the previous draft PR #1356. And in general work continued from other NEMO cleanups #1343 and #1347. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1399:1009,test,test,1009,https://su2code.github.io,https://github.com/su2code/SU2/pull/1399,1,['test'],['test']
Testability,"## Proposed Changes; This is a ""don't pay for what you don't use"" optimization.; I've disabled implicit time integration during the computation of the MG forcing term. I've also refactored CMultiGridQueue, it had a bad scaling problem because to remove a point from the queue we were doing a linear search followed by vector::erase, both being O(N) operations.; I've put together a queue-type class that allows fast (amortized O(1)) ""seek-and-destroy"" of arbitrary items. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/963:782,test,test,782,https://su2code.github.io,https://github.com/su2code/SU2/pull/963,1,['test'],['test']
Testability,"## Proposed Changes; This is a bugfix for the mesh writer, which was outputting the wrong number of elements when run in parallel. . ## Related Work; [Post on CFD online](https://www.cfd-online.com/Forums/su2-shape-design/224088-segfault-second-dsn-iteration.html#post757055) that made me aware of that problem. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/862:862,test,test,862,https://su2code.github.io,https://github.com/su2code/SU2/pull/862,1,['test'],['test']
Testability,"## Proposed Changes; This is a chore PR to const variables when allowed and to alter loops to prevent declared iterators. This may be unnecessary/overkill. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1923:715,test,test,715,https://su2code.github.io,https://github.com/su2code/SU2/pull/1923,1,['test'],['test']
Testability,"## Proposed Changes; This is a draft pull request for the implementation of a supersonic inlet profile feature. the uniform temperature, pressure, and velocity at the inlet for a supersonic inlet BC will replaced with vertex values. ## Related Work; Modifications to related codes, recompelling it and doing proper tests using supersonic cases.; Iterations. ## PR Checklist. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2326:315,test,tests,315,https://su2code.github.io,https://github.com/su2code/SU2/pull/2326,2,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; This is a follow-up of #798 for minor changes. ; Feel free to add bug fixes and similar for problems that you might came across during testing. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/807:156,test,testing,156,https://su2code.github.io,https://github.com/su2code/SU2/pull/807,2,['test'],"['test', 'testing']"
Testability,"## Proposed Changes; This is a little improvement to the multipoint optimization setup. Currently if you want to run multipoint optimization with restarts, the python scripts only keep track of one restart file (the first of the multipoint conditions). This is acceptable when the multipoint conditions are similar, but does not work when the conditions are very different. For example, if one point is supersonic and the other is subsonic, and the subsonic case is restarted from the supersonic solution, it immediately diverges. . This PR allows the python scripts to keep track of restarts for each point in the multipoint set up. It is robust in the sense that you can start with 0 restart files or some subset of restart files. For example, if you are running a 3 point optimization but only have the restart for one of the points, this will handle that case by starting the other two points from scratch, but keeping track of the restart files after the first design iteration. There is a naming convention that is presumed. The restarts get 'point#' added to its base name. So for example, if the SOLUTION_FILENAME= solution_flow.dat then it will look for files named solution_flow_point0.dat, solution_flow_point1.dat and so on. For adjoints this is solution_adj_point0_cd.dat etc. This naming convention can be tweaked according to comments. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/781:1903,test,test,1903,https://su2code.github.io,https://github.com/su2code/SU2/pull/781,1,['test'],['test']
Testability,"## Proposed Changes; This is a preparation for the upcoming release 7 ""Blackbird"". The schedule is planned like this:. - **08/27**: Pull request opening window ends. PRs with **new features** opened after this date will not be considered for v7.0.0.; - **09/01 - 09/29**: Testing phase. Only PRs with **bugfixes** and remaining PRs opened before **08/27** will be merged during that phase. ; - **09/30**: Release date. Note that we will have a stricter policy for new features for this release: Features with no documentation or tutorial(s) will not be advertised. Please also remember to prepare for #724. . If you have any questions, please let me know. Also if you can offer any help with testing/updating documentation. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/762:272,Test,Testing,272,https://su2code.github.io,https://github.com/su2code/SU2/pull/762,3,"['Test', 'test']","['Testing', 'test', 'testing']"
Testability,"## Proposed Changes; This is a restructuring of the solver classes in the fashion of what has been done for variable classes, output classes etc. Changes include:. - Moving all solver .hpp and .cpp files into individual class specific files; - Moving all inline functions into the header files ; - Some bits of code cleanup. Things still left to be done: . - Updating the IDE files; - Any other things that might come up in the review process. This has mostly just been copying and pasting things around. If there any thing else to address in the solver classes (menial or significant) that would be appropriate to include in this restructuring, let me know in the comments!. ## Related Work; @pcarruscag is already working on the CFEASolver in #843. I have split the files here as well since it was already automated. But I can just merge with his branch in the likely case that his PR is ready for merging before this one. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/849:1477,test,test,1477,https://su2code.github.io,https://github.com/su2code/SU2/pull/849,1,['test'],['test']
Testability,"## Proposed Changes; This is a simple enhancement of the fixed CL mode. Currently the Fixed CL mode only exits when the specified iteration limit is reached. With these changes, the mode is a little more robust and checks for the specified Residual or Cauchy convergence and additionally checks that the CL is converged to the target CL value to within CAUCHY_EPS. I have currently preserved the Finite Differencing that occurs at the end of the Fixed CL mode. I am not sure why this is required and would like to get rid of it if possible. If there is a reason for the finite differencing to calculate dCL/dAlpha, please let me know. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/779:1185,test,test,1185,https://su2code.github.io,https://github.com/su2code/SU2/pull/779,2,['test'],['test']
Testability,"## Proposed Changes; This is a simple re-shuffling to have matrix-vector products (and therefore linear systems) that are aware of periodic connections.; It uses something like:; - A ""`PERIODIC_RESIDUAL`"" communication (sum contributions) applied to the result of matrix-vector products.; - A ""`PERIODIC_IMPLICIT`"" communication (enforce periodicity) applied to the result of preconditioners. It seems to avoid the performance degradation that @TobiKattmann saw when implementing periodicity for heat transfer, and also the issues in issue #1467. However, making the matrix-vector product ""periodicity-aware"" through comms, without modifying the matrix, means that any preconditioner derived from the matrix is not consistent with the product, thus it is a worse preconditioner and more linear iterations are needed for the same reduction in residuals. ## Related Work; Should help #1467; Should avoid #763. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1585:1260,test,test,1260,https://su2code.github.io,https://github.com/su2code/SU2/pull/1585,1,['test'],['test']
Testability,"## Proposed Changes; This is a slight modification to the computation of face normals. Previously, the inputs to SetCoord_CG were swapped depending on whether iPoint < jPoint, but this can result in an inconsistent direction for the normals of each sub-face associated with edge i/j (i.e. for each element connected to edge i/j). This logic is replaced by dotting the sub-face normals with the edge vector from i to j (or j to i if iPoint > jPoint), and flipping the normal if the product is negative. This fix might be needed for the surface elements too, but I was less sure of what's going on in SetBoundControlVolume(). ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1054:335,log,logic,335,https://su2code.github.io,https://github.com/su2code/SU2/pull/1054,2,"['log', 'test']","['logic', 'test']"
Testability,"## Proposed Changes; This is a small one, just saving some memory in the FEA solver by not allocating some unnecessary double structures outside the boundaries. . ## Related Work; General maintenance and improvements. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/663:528,test,test,528,https://su2code.github.io,https://github.com/su2code/SU2/pull/663,1,['test'],['test']
Testability,"## Proposed Changes; This is a solver I have been working on for some time.; The proposed solver is a treatment of the discrete adjoint sensitivities based on the idea of Sobolev gradient smoothing. This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2.; Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One Shot optimization context.; The new solver constructs the necessary operator and solves it using the finite elements features in SU2. It also includes the possibility to take the mesh parameterization into account and smooth the sensitivities w.r.t. the design parameters. I will update this draft and the comments, but I wanted to share this first version. I would be happy if anyone wants to comment on it. The draft needs some steps to be done, including:; - clean up the comments and make them consistent with SU2 style; - remove the dependency on Eigen. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1439:1635,test,test,1635,https://su2code.github.io,https://github.com/su2code/SU2/pull/1439,1,['test'],['test']
Testability,"## Proposed Changes; This is a tiny PR to add a conditional operator in CFlowOutput.cpp to avoid calling to GetNodes() function if the solver is a FEM/DG solver. In one of the early commits (34b0464e898dd167d8a865f47aa630019a5978ac), a call to GetNodes() was added in `CFlowOutput::SetAnalyzeSurface` which calls the function `GetNodes()`. ```const auto flow_nodes = solver[FLOW_SOL]->GetNodes();```. There is an assertion in `GetNodes()` that further mandates the `CVariable` `base_nodes` to be set properly. However, in the FEM/DG solver, the `base_nodes` is defaulted to `nullptr` and we have workarounds in the FEM/DG sovler that does not require a call to `GetNodes()` in other parts of the code (we use elements instead of nodes, so the concept of nodes is not really well-defined in the FEM/DG solver). . At the moment, the develop branch will fail at this line if anyone attempts to use the FEM/DG solver. . E.g., Taking the `hom_euler/NACA0012_5thOrder` test case in the repo gives the following error message:; ```SU2_CFD: ../SU2_CFD/src/output/../../include/solvers/CSolver.hpp:230: const CVariable* CSolver::GetNodes() const: Assertion `base_nodes!=nullptr && ""CSolver::base_nodes was not set properly, see brief for CSolver::SetBaseClassPointerToNodes()""' failed.``` at the pre-processing stage before any computation is done. Hence, a conditional operator is added to avoid this call for DG solvers. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; @vdweide and I are working on a new version of the DG solver that needs this workaround anyway. This is just added for now in case anyone else wants to work on the current version of DG solver available. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1772:413,assert,assertion,413,https://su2code.github.io,https://github.com/su2code/SU2/pull/1772,2,"['assert', 'test']","['assertion', 'test']"
Testability,"## Proposed Changes; This is a very short PR with two quick fixes. The first is a fix for accurate multizone adjoints when multigrid is enabled. Second fix is to re-enable time-averaged history output for incompressible flows (direct differentiation for unsteady, incompressible flow also works again as a result). ## Related Work; N/A. ## PR Checklist. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/965:650,test,test,650,https://su2code.github.io,https://github.com/su2code/SU2/pull/965,1,['test'],['test']
Testability,"## Proposed Changes; This is an update of the feature_Wall_Functions. In fact, it is only a minor contribution to the original implementation by @economon based on the article ""Wall Function Boundary Conditions Including Heat Transfer and Compressibility""; ; ## Related Work; The original implementation was 99% done but, it was not working because of ; - two typos on the original article (eq. 11 and eq. 16). ; - not accounting for a negative nu_tilde (very small value... but, negative). ; - not setting tau_wall to -1 on all the BC but non-slip ones. Apart from those changes, a Newton method has been introduced to compute nu_tilde (it would be important to do the same with the tau_wall computation... it will be done -time depending-), some minor renaming of the functions has been introduced as well as the use of MARKER_WALL_FUNCTIONS (implemented after the original implementation). ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/530:1203,test,test,1203,https://su2code.github.io,https://github.com/su2code/SU2/pull/530,1,['test'],['test']
Testability,"## Proposed Changes; This is further step in restructuring the files. In this PR I splitted the primal_grid_structure and dual_grid_structure. Further I moved the mesh readers in to a separate directory. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/848:904,test,test,904,https://su2code.github.io,https://github.com/su2code/SU2/pull/848,1,['test'],['test']
Testability,"## Proposed Changes; This is mainly to address #721 but it may have good side effects in other areas (see comments below).; Every turbulent testcase will fail and so far I only tested SA and SST on a simple airfoil case. ## Related Work; Addresses #721 ; Should help a bit with #594; May help with #711. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/726:140,test,testcase,140,https://su2code.github.io,https://github.com/su2code/SU2/pull/726,3,['test'],"['test', 'testcase', 'tested']"
Testability,"## Proposed Changes; This is one I have been trying to solve for a while and now found a solution that is not a hack.; Under some circumstances that I do not understand (very case dependent) one of the cross terms (structure w.r.t. fluid) creates spurious values, e.g.:; ![image](https://user-images.githubusercontent.com/38071223/48981547-af503a80-f0ce-11e8-9875-1b9a2d5fd50d.png); The fix I found is to change the recording strategy, instead of making 3 recordings of the structural iteration (one for each set of input variables) this is merged into a single recording.; So from this:; ![image](https://user-images.githubusercontent.com/38071223/48981607-aad85180-f0cf-11e8-9740-dd6f51f249c3.png); To this:; ![image](https://user-images.githubusercontent.com/38071223/48981615-bc215e00-f0cf-11e8-8dd1-c2ae00b3a973.png); So far this has fixed the issue for a range of cases, large to small.; [Here](https://github.com/su2code/SU2/files/2613239/spurious_values.zip) you can see the difference between running the case in the example picture with and without the fix.; . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/615:1381,test,test,1381,https://su2code.github.io,https://github.com/su2code/SU2/pull/615,1,['test'],['test']
Testability,"## Proposed Changes; This is the beginning of the work proposed in #716 .; Comments will follow as work progresses.; I would appreciate if we could keep the restructuring of files that use CVariable heavily for when this is done. ## Related Work; #716. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/753:803,test,test,803,https://su2code.github.io,https://github.com/su2code/SU2/pull/753,1,['test'],['test']
Testability,"## Proposed Changes; This is the first part of a series of PRs which completely refactor the output (and parts of the input). In this one I introduce the sub-config file feature for multizone/multiphysics problems. More information on how it works can be found here:. https://su2code.github.io/docs/Multizone. Note that the automatic deduction of the correct interface type is *not* working at the moment. So the `MARKER_FLUID_INTERFACE` or `MARKER_CHT_INTERFACE` still has to be there at the moment ... Furthermore this changes the way grid movement is specified in the config files. Examples can be found also using the link above or by simply looking at the `sliding_interface` test cases. . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/715:681,test,test,681,https://su2code.github.io,https://github.com/su2code/SU2/pull/715,2,['test'],['test']
Testability,"## Proposed Changes; This new feature aims to get viscosity and conductivity from CoolProp library.; . ## Related Work; This project is an extension of PR #1806. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1819:719,test,test,719,https://su2code.github.io,https://github.com/su2code/SU2/pull/1819,1,['test'],['test']
Testability,"## Proposed Changes; This one's really small, but when running valgrind on some of my adaptation runs, I noticed that a lot of memory was being leaked due to not deleting direct_iteration and direct_output in CDiscAdjSinglezoneDriver.; ; ## Related Work; None that I'm aware of after a cursory look through PRs. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/929:622,test,test,622,https://su2code.github.io,https://github.com/su2code/SU2/pull/929,1,['test'],['test']
Testability,"## Proposed Changes; This project aims to couple the free and open-source thermodynamics library CoolProp with SU2. There are **two advantages:**. 1. More accurate numerical results. ; CoolProp can provide accurate thermodynamics properties (P, T, rho, ect) of commone fluids by either extracting experiment data from published papers, or computing based on the state-of-the-art Helmholtz energy formulations. ; So, thermodynamics properties obtained from CoolProp should be more accurate than those obtained from Van der Waals or peng robinson gas model embedded in SU2. Also, the numerical results should be more accurate.; 2. More user-friendly; To use CoolProp feature, the ony input from the user is the name of fluid. Then all other thermodynamics can be provided by CoolProp.; %FLUID_MODEL = COOLPROP; %FLUID_NAME = nitrogen; ; ## Related Work; This project references the following work:; 1.the work of coupling 'Mutationpp' with SU2.; 4. the pull request of 'Feature nppr gas #1718'. ## PR Checklist. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings.; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] Simulations with the following test fluids succeed: nitrogen, oxygen, carbon dioxide, MM.; - [ ] Currently, this new feature is applied for only Euler flow. For viscous flow, further work need to be done, including viscosity, conductivity from CoolProp. ; - [ ] CoolProp does not support non-dimension.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1782:1284,test,test,1284,https://su2code.github.io,https://github.com/su2code/SU2/pull/1782,1,['test'],['test']
Testability,"## Proposed Changes; This project aims to couple the free and open-source thermodynamics library CoolProp with SU2. There are **two advantages:**. 1. More accurate numerical results. ; CoolProp can provide accurate thermodynamics properties (P, T, rho, ect) of commone fluids by either extracting experiment data from published papers, or computing based on the state-of-the-art Helmholtz energy formulations. ; So, thermodynamics properties obtained from CoolProp should be more accurate than those obtained from Van der Waals or peng robinson gas model embedded in SU2. Also, the numerical results should be more accurate.; 2. More user-friendly; To use CoolProp feature, the ony input from the user is the name of fluid. Then all other thermodynamics can be provided by CoolProp.; %FLUID_MODEL = COOLPROP; %FLUID_NAME = nitrogen; ; ## Related Work; This project references the following work:; 1.the work of coupling 'Mutationpp' with SU2.; 4. the pull request of 'Feature nppr gas #1718'. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings.; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] Simulations with the following test fluids succeed: nitrogen, oxygen, carbon dioxide, MM.; - [x] Currently, this new feature is applied for only Euler flow. For viscous flow, further work need to be done, including viscosity, conductivity from CoolProp. ; - [ ] CoolProp does not support non-dimension.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1806:1284,test,test,1284,https://su2code.github.io,https://github.com/su2code/SU2/pull/1806,2,['test'],['test']
Testability,"## Proposed Changes; This pull request adds the test case that we used for the Fuel paper. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2239:48,test,test,48,https://su2code.github.io,https://github.com/su2code/SU2/pull/2239,2,['test'],['test']
Testability,"## Proposed Changes; This pull request adds the test case that we used for the Fuel paper. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2237:48,test,test,48,https://su2code.github.io,https://github.com/su2code/SU2/pull/2237,2,['test'],['test']
Testability,"## Proposed Changes; This pull request is the second part of plan (B) described in https://github.com/su2code/su2code.github.io/pull/134#issuecomment-1616012091. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2066:479,test,test,479,https://su2code.github.io,https://github.com/su2code/SU2/pull/2066,1,['test'],['test']
Testability,"## Proposed Changes; This pull request removes the old Poisson and Wave solvers, which are currently unsupported, and replaces the legacy heat solver with the FVM heat solver incorporated in #505. ## Related Work; This is an intermediate step before there is a general restructuring of the input and output, currently under development. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/573:887,test,test,887,https://su2code.github.io,https://github.com/su2code/SU2/pull/573,1,['test'],['test']
Testability,"## Proposed Changes; This pull request represents progress towards exposing the mesh deformation routines and their adjoint counterparts to Python through pysu2 and pysu2ad, respectively. This refactorization introduced:. 1. `CDriverBase`; a. Parent class for `CDriver`, `CDeformationDriver`, `CDiscAdjDeformationDriver`; b. Common methods regarding geometry, markers, MPI, etc. 2. `CDeformationDriver` and `CDiscAdjDeformationDriver`. In addition, the `CDeformationDriver` was modified to use the new mesh deformation solver `CMeshSolver`. The integration of `CMeshSolver` required introducing the `numerics_container` and `solver_container`, as well as minor changes to `CMeshSolver` (e.g., `DeformMesh` and `SetMesh_Stiffness`). Both the legacy mesh deformation solver `SU2_DEF` and the newer `CMeshSolver` can be used with these new drivers, depending on how the `DEFORM_MESH` option is set in the SU2 config file. . ## Related Work; These efforts are related to Issue #1262. The purpose of this work is to enable the coupling of SU2 with external solvers like Nastran, particularly for aerostructural MDAO. The goal is to apply this for coupled discrete adjoint sensitivities. . In the future, these driver classes will be extended to include more methods accessible via Python (i.e., for setting or extracting variables, config parameters, etc.). Currently `CDiscAdjDeformationDriver` is not integrated with `CMeshSolver`, but this will be addressed in the future. . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300:1825,test,test,1825,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300,1,['test'],['test']
Testability,"## Proposed Changes; This removes some leftovers from when we deprecated the mesh adaptation.; I had a look at the ""adap"" branches and it seems that the new interface has completely new scripts and these are not needed, @bmunguia correct me if I am wrong. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1153:608,test,test,608,https://su2code.github.io,https://github.com/su2code/SU2/pull/1153,1,['test'],['test']
Testability,"## Proposed Changes; This replaces the bisection method in NEMO to compute the Tve values. The NR solver should be faster and offer some speed up, I believe the ComputeTemperatures function is the slowest in NEMO. So I have some cases running to highlight the speedup (hopefully not a slowdown). From a quick glance, it seems the iteration time is very sensitive to the scaling factor. . Lastly, this will probably destroy the regression tests for NEMO, since our temperatures will be slightly different now. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1627:438,test,tests,438,https://su2code.github.io,https://github.com/su2code/SU2/pull/1627,2,['test'],"['test', 'tests']"
Testability,"## Proposed Changes; This simply adds a quick calculation so the proper value of Reynolds number is displayed when INIT_OPTION=TD_CONDITIONS. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1370:736,test,test,736,https://su2code.github.io,https://github.com/su2code/SU2/pull/1370,1,['test'],['test']
Testability,"## Proposed Changes; This small PR fixes a bug in the ADT that occurs in extreme situations. Basically the less than is replaced by less equal than (and similar for greater than); . ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/640:755,test,test,755,https://su2code.github.io,https://github.com/su2code/SU2/pull/640,1,['test'],['test']
Testability,"## Proposed Changes; This small PR fixes a number of compiler warnings for g++ 8.2 in full debug mode. It should not change any functionality. Also there is a small bug fix in the ADT, where the Jacobian matrix for the containment search inside a quadrilateral was computed wrongly.; . ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/639:859,test,test,859,https://su2code.github.io,https://github.com/su2code/SU2/pull/639,1,['test'],['test']
Testability,"## Proposed Changes; This small PR fixes the interpolation weights of the function CADTElemClass::CoorInTetrahedron. Thanks @monika1387 for bringing that to our attention.; . ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1016:751,test,test,751,https://su2code.github.io,https://github.com/su2code/SU2/pull/1016,1,['test'],['test']
Testability,"## Proposed Changes; This small PR introduces the SST turbulence model with sustaining terms, such that the model is free-stream preserving. Especially for external flows, where the farfield boundary is far away from the body, the turbulent intensity decays from the prescribed free stream values. This is not too much an issue when the model is run in fully turbulent mode, but it becomes important when it is combined with a transition model. It is the intention to add the transition model later on.; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/764:1079,test,test,1079,https://su2code.github.io,https://github.com/su2code/SU2/pull/764,2,['test'],['test']
Testability,"## Proposed Changes; This small PR modifies the error handling, such that the error message is also written when the call to the error handler is not collective. The function CBaseMPIWrapper::Error is not so small anymore, so it may be an idea to move it to the .cpp file instead of inlining it.; ; ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/574:874,test,test,874,https://su2code.github.io,https://github.com/su2code/SU2/pull/574,1,['test'],['test']
Testability,"## Proposed Changes; This small PR reverses the sequence of y+ and muT for Tecplot output files. Now it is consistent with the paraview sequence as well as the actual output.; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/607:753,test,test,753,https://su2code.github.io,https://github.com/su2code/SU2/pull/607,1,['test'],['test']
Testability,"## Proposed Changes; This temporarily disables the compilation of TecIO in travis to reduce the overall runtime of the jobs. We are not checking the tecplot binary output anyway at the moment.; . ## Related Work; -. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/611:765,test,test,765,https://su2code.github.io,https://github.com/su2code/SU2/pull/611,1,['test'],['test']
Testability,"## Proposed Changes; This updates the version of MPP for use in the NEMO solver. . Is there a way to include a MPP test case for the regressions?. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [?] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1935:115,test,test,115,https://su2code.github.io,https://github.com/su2code/SU2/pull/1935,2,['test'],['test']
Testability,"## Proposed Changes; This very small PR fixes the valgrind warning mentioned in issue #1040 ; . ## Related Work; Bug fix for issue #1040 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1041:692,test,test,692,https://su2code.github.io,https://github.com/su2code/SU2/pull/1041,1,['test'],['test']
Testability,"## Proposed Changes; Throw error for LM, print message that BC is the 2020 version. ## Related Work; #1132; #1130. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1157:467,test,test,467,https://su2code.github.io,https://github.com/su2code/SU2/pull/1157,1,['test'],['test']
Testability,"## Proposed Changes; To simplify the maintenance of hybrid parallel SU2, we want to run thread sanitizer tests as part of the CI pipeline. We use thread-sanitizer enabled containers for this. This is work in progress and there are things that need testing, so I want to take it step by step while observing the behaviour of the CI pipeline. ## Related Work; https://github.com/su2code/Docker-Builds/pull/17 and follow-on PRs, #1679. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2068:105,test,tests,105,https://su2code.github.io,https://github.com/su2code/SU2/pull/2068,3,['test'],"['test', 'testing', 'tests']"
Testability,"## Proposed Changes; To simulate a gust in CFD, typically the Field Velocity Method is used. This method prescribes a given velocity on each node and neglects any influence of the aircraft on the gust. The Split Velocity Method is an approach that allows to capture the influence of the aircraft on the gust. . As far a I understand, the Split Velocity Method is only partially implemented in SU2 and isn't used for any gust type because all gust derivatives are zero / commented out in the code. This is in line with Padron et al. (https://doi.org/10.2514/6.2014-3013) who report that ""... combining the GCL with the SVM does not work."". This pull request cleans up / removes the unused code. ## Related Work; The issue was identified during the work on pull request #1954. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2051:1332,test,test,1332,https://su2code.github.io,https://github.com/su2code/SU2/pull/2051,1,['test'],['test']
Testability,"## Proposed Changes; Transferring turbomachinery outputs from legacy format to current format; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2001:802,test,test,802,https://su2code.github.io,https://github.com/su2code/SU2/pull/2001,1,['test'],['test']
Testability,"## Proposed Changes; Try to fix #1219 based on Stephan's insight in #990. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1221:426,test,test,426,https://su2code.github.io,https://github.com/su2code/SU2/pull/1221,1,['test'],['test']
Testability,"## Proposed Changes; Try to improve the configuration detection of hdf5.; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1511:816,test,test,816,https://su2code.github.io,https://github.com/su2code/SU2/pull/1511,1,['test'],['test']
Testability,"## Proposed Changes; Trying to make the python vertex tractions and vertex traction adjoints independent of a specific marker to allow #1174 to go forward without side effects on how FSI is done via the python wrapper at the moment. ## Related Work; #1174 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1197:610,test,test,610,https://su2code.github.io,https://github.com/su2code/SU2/pull/1197,1,['test'],['test']
Testability,"## Proposed Changes; Two bugs related to CoolProp fluid model are found and solved:; 1.Since there is no solver for two phase flow, then I ask CoolProp to assume the flow is single gas phase if the thermodynamics states are located on the liquid-vapor saturation curve.; 2. CoolProp has some issues to update the thermodynamics states if the input pressure is very close critical pressure Pc, see [here](https://github.com/CoolProp/CoolProp/issues/1678). So I let pressure equal to 0.99 Pc if pressure is very close to Pc. ## Related Work; This work is related to PR #1806. ## PR Checklist; - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1947:891,test,test,891,https://su2code.github.io,https://github.com/su2code/SU2/pull/1947,1,['test'],['test']
Testability,"## Proposed Changes; Two small bug fixes that I have encountered.; - One typo that was messing up the` REL_RMS_ADJOINT_*` variables; - One initialization for fixed CL which was missing. ; . ## Related Work; Feel free to add any other bugs to squash. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/816:560,test,test,560,https://su2code.github.io,https://github.com/su2code/SU2/pull/816,1,['test'],['test']
Testability,"## Proposed Changes; Update CGNS external library following recent release, see:; [https://github.com/CGNS/CGNS/releases/tag/v4.0.0](https://github.com/CGNS/CGNS/releases/tag/v4.0.0). ## Related Work; N/A. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/884:516,test,test,516,https://su2code.github.io,https://github.com/su2code/SU2/pull/884,1,['test'],['test']
Testability,"## Proposed Changes; Update CoDiPack, MeDiPack, and OpDiLib. . The CoDiPack updates contains a fix regarding static initialization order in the context of hybrid parallel AD. ## Related Work; previous hybrid AD things. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2206:650,test,test,650,https://su2code.github.io,https://github.com/su2code/SU2/pull/2206,1,['test'],['test']
Testability,"## Proposed Changes; Update CoolProp to v6.5.0 which was recently released. I picked the commit of the release, but newer commits are available. I also ""cleaned up"" a bit the submodule function so that it would become easier to update CoolProp in the future and make the intent of the code clearer. . ## Related Work; CoolProp v6.5.0 has an updated EOS for CO2, with which I am currently playing around. This new version has the same EOS as NIST. It also comes with a variety of bug fixes and improvements. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - The code generates quite a few warning when compiling on Debian 12, which uses GCC12 , but none were introduced in this commit. I tested the compilation using an Apptainer/Singularity container.; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - I changed the Python code, for which I saw no entry in the style guide.; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - I did not run it as I did not know about it, but I do not think it applies for this (though maybe it does); - [ ] I have added a test case that demonstrates my contribution, if necessary.; - Not necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.; - No documentation related to SU2 should be affected. I do have one question which is not directly related to this PR. I have an Apptainer/Singularity container for SU2 which has most of the bells and whistles. I saw that you have docker containers, but for HPC (and normal computers) Docker [can have a large performance penalty](https://www.youtube.com/watch?v=2FPB74YB-ng). Would you like for me to contribute my Apptainer recipes? . Any and all feedback welcome!. P.S: I did not know that ev",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2136:819,test,tested,819,https://su2code.github.io,https://github.com/su2code/SU2/pull/2136,1,['test'],['tested']
Testability,"## Proposed Changes; Update SU2 to a CoDiPack version that contains the fixes discussed in #1087.; . ## Related Work; #1087. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1096:675,test,test,675,https://su2code.github.io,https://github.com/su2code/SU2/pull/1096,1,['test'],['test']
Testability,"## Proposed Changes; Update SU2 to a recent version of CoDiPack. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1903:382,test,test,382,https://su2code.github.io,https://github.com/su2code/SU2/pull/1903,1,['test'],['test']
Testability,"## Proposed Changes; Update SU2 to recent versions of CoDiPack, MeDiPack, and OpDiLib. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2351:518,test,test,518,https://su2code.github.io,https://github.com/su2code/SU2/pull/2351,1,['test'],['test']
Testability,"## Proposed Changes; Update to the interface initialisation to enable both mixing plane and sliding interfaces within the same turbomachinery simulation. Addition of mass flow outlet to Giles BC. ## Related Work; This issue solves a problem reported by a number of users, when simulating radial turbomachinery cases a second-order accurate solution cannot be achieved in some cases when using mixing plane interfaces. This is due to circumfrential averaging in regions where the flow exhibits large circumfrential nonuniformity and/or interspace gaps between adjacent blade-rows/zones small. This issue has been reported by @LorenzoFabris, in a presentation at the SU2 Conference 2022 ""Performance Analysis and Shape Optimization of a Radial Compressor with the Open-Source Software SU2"" and by myself. Mass flow outlet included in the PR as requested by users. TBC:; -Update APU Turbocharger test case and regression test to include this feature, add diffuser and converge 2nd order. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2209:893,test,test,893,https://su2code.github.io,https://github.com/su2code/SU2/pull/2209,3,['test'],['test']
Testability,"## Proposed Changes; Updated Xcode to latest version of develop.; Also re-organized so the files are in ABC order / match Finder so its easier to find things. Thats most of the file diff. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.; - [ n/a] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1405:788,test,test,788,https://su2code.github.io,https://github.com/su2code/SU2/pull/1405,1,['test'],['test']
Testability,"## Proposed Changes; Updated the MLPCpp submodule which is now able to use different scaling methods ([standard](https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.StandardScaler.html#sklearn.preprocessing.StandardScaler), [robust](https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.RobustScaler.html#sklearn.preprocessing.RobustScaler), and [min-max](https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.MinMaxScaler.html#sklearn.preprocessing.MinMaxScaler)) for scaling the neural network inputs and outputs. . ## Related Work; This update relates to the parts of SU2 regarding data-driven simulations (CDataDrivenFluid and CFlameletFluid). . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2369:1137,test,test,1137,https://su2code.github.io,https://github.com/su2code/SU2/pull/2369,1,['test'],['test']
Testability,"## Proposed Changes; Updated the Term2 of the BC Transition model, which eliminates some deficiencies in the previous version.The update is based on:. 1- Cakmakcioglu, S. C., Bas, O., Mura, R., and Kaynak, U., ""A Revised One-Equation Transitional Model for External Aerodynamics,"" AIAA Paper 2020-2706, June 2020, https://doi.org/10.2514/6.2020-2706.; 2- Mura, R. and Cakmakcioglu, S. C., ""A Revised One-Equation Transitional Model for External Aerodynamics - Part I: Theory, Validation and Base Cases,"" AIAA Paper 2020-2714, June 2020, https://doi.org/10.2514/6.2020-2714. which is also presented here: https://turbmodels.larc.nasa.gov/sa-bc_1eqn.html. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1132:1400,test,test,1400,https://su2code.github.io,https://github.com/su2code/SU2/pull/1132,1,['test'],['test']
Testability,"## Proposed Changes; Use Isend instead of Bsend (to avoid having to attach / resize buffers).; Disclaimer: No idea if this is the right way, like a good programmer I got the solution from stackoverflow. ## Related Work; Should fix #1150. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1163:590,test,test,590,https://su2code.github.io,https://github.com/su2code/SU2/pull/1163,1,['test'],['test']
Testability,"## Proposed Changes; Use TIME_STEP and MAX_TIME in the FEA solver instead of DYN_*. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2008:401,test,test,401,https://su2code.github.io,https://github.com/su2code/SU2/pull/2008,1,['test'],['test']
Testability,"## Proposed Changes; Use inlet profile for supersonic inlets.; @ShukaiWang1110 see if this branch works for you. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2327:544,test,test,544,https://su2code.github.io,https://github.com/su2code/SU2/pull/2327,1,['test'],['test']
Testability,"## Proposed Changes; V & V testcase for axisymmetric jet (SST and SA); Reproducing the self-similar jet properties reported in Wygnanski & Fiedler (1969) and Hussein, Capp & George (1994). ## Related Work; Related to #2197 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2335:27,test,testcase,27,https://su2code.github.io,https://github.com/su2code/SU2/pull/2335,2,['test'],"['test', 'testcase']"
Testability,"## Proposed Changes; WIP of the extension of FSI discrete adjoint to time-domain. This originally started with the legacy FSI drivers but is being migrated to the new multizone drivers in this draft.; . ## Related Work; @oleburghardt mentioned unsteady adjoints to follow PR #854 for CHT which will be closely related to this. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/868:877,test,test,877,https://su2code.github.io,https://github.com/su2code/SU2/pull/868,1,['test'],['test']
Testability,"## Proposed Changes; We aim to implement 2 things:; 1. Restart files contain variables that are not necessary for restarts. with the keyword WRT_RESTART_COMPACT= YES we can write compact restart files containing only necessary fields.; 2. Other output contains variables that are not requested (all SOLUTION variables are always written). When WRT_RESTART_COMPACT= YES, we do not automatically write the SOLUTION fields to e.g. paraview.; 3. When WRT_RESTART_COMPACT= NO, we keep the original behavior for backward compatibility. ## Related Work; Mentioned in Issue (request) #2118 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2372:1015,test,test,1015,https://su2code.github.io,https://github.com/su2code/SU2/pull/2372,1,['test'],['test']
Testability,"## Proposed Changes; We need to do something about these 20k lines of legacy.; ATM it is a little hard to see what might need to be ported so I'm trying to remove unused chunks to hopefully make the task easier.; @vdweide it looks like all the legacy output FEM routines are not needed, it that right?. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1115:655,test,test,655,https://su2code.github.io,https://github.com/su2code/SU2/pull/1115,1,['test'],['test']
Testability,"## Proposed Changes; We propose to integrate the latest functionalities of the DG solver into the develop branch. The most important one is the parallel binary output functionality for paraview and tecplot, which is needed for the branch feature_input_output. ## Related Work; This PR is needed to complete the overhaul in the output classes (work of @talbring and @rsanfer) in the feature_input_output branch. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/676:964,test,test,964,https://su2code.github.io,https://github.com/su2code/SU2/pull/676,1,['test'],['test']
Testability,"## Proposed Changes; When accessing the adjoints, bounds checking acquires an internal lock in CoDiPack. This turned out to be a bottleneck in `InitializeAdjoint` and `IterateDiscreteAdjoint`. Therefore, we ensure sufficient size up front and skip the bounds checking. ## Related Work; Previous work on hybrid parallel AD, like #1214, #1284, #1294. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2039:666,test,test,666,https://su2code.github.io,https://github.com/su2code/SU2/pull/2039,1,['test'],['test']
Testability,"## Proposed Changes; When not restarting unsteady problems, set file iteration to 0 (instead of the -1/-2 logic). ## Related Work; https://www.cfd-online.com/Forums/su2/235485-parabolic-velocity-inlet-profile-error.html. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1264:106,log,logic,106,https://su2code.github.io,https://github.com/su2code/SU2/pull/1264,2,"['log', 'test']","['logic', 'test']"
Testability,"## Proposed Changes; While I was writing some documentation on how to set up a basic problem, I noticed that the `PHYSICAL_PROBLEM` had lost its meaning over the the last couple of years and it is hard to explain why it is called like that. It now refers actually to a numerical method that solves a particular problem and not to the physical problem. So I renamed it to `SOLVER`. . Additionally, I removed the `REGIME_TYPE` option and added the incompressible solvers as dedicated values (`INC_EULER`, `INC_RANS`, `INC_NAVIER_STOKES`) for the new `SOLVER` option. The method `GetRegime_Type()` is also removed and it is now explicitly checked for the kind of solvers. This way we remove the implicit assumption that every feature also works with the incompressible solvers. Developers have to deliberately add a check now ... It is a lot of code copy at the moment, but once the restructuring is finished we should be able to remove a lot of it. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/756:1645,test,test,1645,https://su2code.github.io,https://github.com/su2code/SU2/pull/756,1,['test'],['test']
Testability,"## Proposed Changes; With steady computations, the pywrapper call to `SU2Driver.Run()` will run it for the number of iterations in the config file. The first change this PR makes is that a call to `SU2Driver.Preprocess(nIter)` will overwrite the number of inner iterations when the case is not time dependent. We can now do `SU2Driver.Run()` for a single iteration by setting `SU2Driver.Preprocess(1)`. A call to `SU2Driver.Monitor(Iter)` will check the stopping criteria, including the maximum number of iterations. When you have set this to 1 using `SU2Driver.Preprocess(1)`, a call to `SU2Driver.Monitor(0)` will still stop the calculations because we are checking if (iter+1)>=nIter. The second change is that we now check if (iter >= nIter). I also change this behavior for time dependent problems to make this behavior consistent. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1960:1394,test,test,1394,https://su2code.github.io,https://github.com/su2code/SU2/pull/1960,1,['test'],['test']
Testability,"## Proposed Changes; `CSlidingInterface::GetDonor_Variable` needs to access the `Primitive` of flow variables and the `Solution` of turbulent variables. Which one is the case, is currently decided by checking `donor_solution->GetnPrimVar() == 2` (true->turbulent, false->flow). If the SA turbulence model is used, the non-overidden ""virtual placeholder"" `CVariable::GetPrimitive(unsigned long,unsigned long) const` returning zero is incorrectly called. We propose to fix this by additionally checking for `donor_solution->GetnPrimVar() == 1`. ## Related Work; @maxaehle, @mcmorelli, @BeckettZhou, @EduardoMolina. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1344:1205,test,test,1205,https://su2code.github.io,https://github.com/su2code/SU2/pull/1344,1,['test'],['test']
Testability,"## Proposed Changes; `JacobianIndex`, one of the `codi-tape` build options, was prone to misunderstandings since it was not clear whether or not the underlying type supports copy optimizations. There are two options now, `JacobianReuse`, which does not support copy optimizations and is similar to the hybrid AD type in that regard, and `JacobianMultiUse`, which does support copy optimizations and is similar to the default type with linear management in that regard.; ; I took the opportunity to also add options for primal value tapes in a consistent manner, they were there previously but less detailed and commented out. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2107:943,test,test,943,https://su2code.github.io,https://github.com/su2code/SU2/pull/2107,1,['test'],['test']
Testability,"## Proposed Changes; ```; CVariable -> CFlowVariable -> CEulerVariable -> CNSVariable; ```; **Likewise for incompressible and NEMO.**. **CFlowVariable** stores, allocates, and gives access to, primitives, their gradients and limiters, and a few other odd things.; For now this is just cleanup but it can be used to give non-virtual access to these flow variables to other solvers.; For example, the scalar solver #1330 can static_cast or dynamic_cast the nodes of the flow solver to access some quantities more efficiently.; I'll leave that for after #1330 is merged. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1375:735,test,test,735,https://su2code.github.io,https://github.com/su2code/SU2/pull/1375,1,['test'],['test']
Testability,"## Proposed Changes; ```; SetMarkerCustomInletFlowVar0(marker, vertext, val); SetMarkerCustomInletFlowVar1(marker, vertext, val); SetMarkerCustomInletFlowDirection(marker, vertext, xyz); ``` . ## Related Work; #1079 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2296:649,test,test,649,https://su2code.github.io,https://github.com/su2code/SU2/pull/2296,1,['test'],['test']
Testability,"## Proposed Changes; added testcase to check and repair self-intersecting mesh and nonconvex cells after deformation ; ; ## Related Work; fixes #1154, addition to implementation of #1076. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1158:27,test,testcase,27,https://su2code.github.io,https://github.com/su2code/SU2/pull/1158,2,['test'],"['test', 'testcase']"
Testability,"## Proposed Changes; adding basic protection for the case of a nonequilibrium viscous flow with ionization; . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [x ] I have added a test case that demonstrates my contribution, if necessary.; - [x ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1497:723,test,test,723,https://su2code.github.io,https://github.com/su2code/SU2/pull/1497,1,['test'],['test']
Testability,"## Proposed Changes; change limiter to enum class. . Note: For some reason this fixes a problem for the species transport, where the discrete adjoint solver would stop in computelimiters.hpp with the message ""unknown limiter type"". This only happens when a computation is run over more than one node (more than one core is OK though). This is because in CSolver::SetSolution_Limiter, GetKind_SlopeLimit() does not return a valid value for an existing slope limiter. Kind_SlopeLimit is set in CConfig::SetKind_ConvNumScheme, called in CConfig::SetGlobalParam, but this looks OK to me. . I did just notice that in CConfig:: line 3454 we check for MUSCL_Flow, MUSCL_Turb and MUSCL_AdjFlow and MUSCL_AdjTurb, but not for MUSCL_Species or MUSCL_Adj_Species(does not even exist). It looks like there is still something missing here. I do not know why the error ""unknown limiter type"" occured and why it is now fixed by only changing to enum class. ## Related Work; continuing effort to change all enums to enum class. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1550:1604,test,test,1604,https://su2code.github.io,https://github.com/su2code/SU2/pull/1550,1,['test'],['test']
Testability,"## Proposed Changes; fixed a comment bug . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/904:615,test,test,615,https://su2code.github.io,https://github.com/su2code/SU2/pull/904,1,['test'],['test']
Testability,"## Proposed Changes; mini-PR that adds missing privatization to a loop variable. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2350:512,test,test,512,https://su2code.github.io,https://github.com/su2code/SU2/pull/2350,1,['test'],['test']
Testability,"## Proposed Changes; small Fix regarding marker_inlet_species in the CConfig.cpp. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2139:770,test,test,770,https://su2code.github.io,https://github.com/su2code/SU2/pull/2139,1,['test'],['test']
Testability,"## Proposed Changes; small follow-up to #1571, stripping comments and removing some unnecessary options . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1578:698,test,test,698,https://su2code.github.io,https://github.com/su2code/SU2/pull/1578,1,['test'],['test']
Testability,"## Proposed Changes; the GetFluidProblem() function was returning false for the NEMO_RANS solver. And therefore the CFD_ADAPT feature could not be used with the NEMO_RANS solver. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2193:870,test,test,870,https://su2code.github.io,https://github.com/su2code/SU2/pull/2193,1,['test'],['test']
Testability,"## Proposed changes. Dear all,. I am very new to collaboration on a open source project, but I have been working on an update for the FSI computation in python that I think may be useful also for other researcher. Would you mind giving me a feedback about the modifications?. In few words, I have updated the python interface for fluid structure interaction to the new version of SU2, including the new driver, the new mesh deformation methods and few other modifications in the python scripts. It works with python3. As far as the C++ code is concerned, I only added the possibility to separate the symmetry boundary conditions for the fluid solver from the ones of the mesh solver. There is an explanation of this modification in the ReadMe file in SU2_PY/FSI_tools, together with an example of application. . The interface is still general and new structural solvers can be coupled by adding it to the fsi_computation.py file. With the present pull request I only include one structural solver, which provides a coupling with the commercial code Nastran. I added ReadMe files to explain in detail all the modifications and also the keywords to be used in the config files. Finally, there is also a complete test case where the flutter of a flat plate is studied. I am looking forward for your comments. Nicola. ## PR checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124:1210,test,test,1210,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124,2,['test'],['test']
Testability,"## Pull request description; This pull request introduces a series of regression cases for the Spalart-Allmaras turbulence model variations and corrections:. - Baseline; - Negative; - Edwards; - Compressibility; - Compressibility and Edwards; - QCR2000; ; ~~The residuals on the python scripts are wrong. These values are temporary and will be updated once the regression tests are run on the Travis CI system.~~; Since this pull request does not introduce any code modification, the residuals on the python scripts have been updated on commit https://github.com/su2code/SU2/pull/1418/commits/1a1661f6cf51be9cdc3c642a7d0424016c7ea3fc with the Travis Cl (sim_vals (computed)) values. ## Related Work; These tests will be further used to verify the correct implementation of #1413 . - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1418:372,test,tests,372,https://su2code.github.io,https://github.com/su2code/SU2/pull/1418,3,['test'],"['test', 'tests']"
Testability,"## Related Work; 1. I add some code about **CST** to CSurfaceMovement.cpp and it can work well. 2. I add a test case named ""cst"" in **TestCases/deformation**. It contains test case for CST mesh deformation. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2124:107,test,test,107,https://su2code.github.io,https://github.com/su2code/SU2/pull/2124,4,"['Test', 'test']","['TestCases', 'test']"
Testability,"## Related Work; Part of addressing #869 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/891:353,test,test,353,https://su2code.github.io,https://github.com/su2code/SU2/pull/891,1,['test'],['test']
Testability,"## Related Work; oversight in #2293. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2314:468,test,test,468,https://su2code.github.io,https://github.com/su2code/SU2/pull/2314,1,['test'],['test']
Testability,"## Steps to reproduce the underlying issue. Compile SU2 with Clang and `-fsanitize=address` (and possibly `-fno-omit-frame-pointer`), and run the testcases as usual. AddressSanitizer warnings appear in the output (if any). So far, only the tests in serial_regression.py have been analyzed. ## Proposed Changes. Depending on the context of the memory leak, ; - add `delete` / `delete[]` statement; - turn `new`-allocated arrays into `std::vector`s, or; - for one bug caused by a `delete` to a base class pointer, make its destructor `virtual`. . ## Related Work. #2211 and #2213 have been detected in the same way, but I'm not sure how to properly fix them. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [not necessary] I have added a test case that demonstrates my contribution, if necessary.; - [not necessary] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2212:146,test,testcases,146,https://su2code.github.io,https://github.com/su2code/SU2/pull/2212,3,['test'],"['test', 'testcases', 'tests']"
Testability,## Test; Testing a previous commit in the github docker,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1921:3,Test,Test,3,https://su2code.github.io,https://github.com/su2code/SU2/pull/1921,2,['Test'],"['Test', 'Testing']"
Testability,"## V&V; Now we have a regression script dedicated to the V&V examples see #1538; I have added a high-lift case to the website ([here](https://github.com/su2code/su2code.github.io/pull/71), and [here](https://su2code.github.io/vandv/30p30n/)).; I think that to avoid the [issue of outdated files](https://github.com/su2code/VandV/pull/3) in V&V repo, the best strategy is to add only meshes and documentation to the V&V repo (without duplicating the website). Then anything needed to run the case should be put under regression (via the TestCases and SU2 repos as usual).; If the meshes are too large for GitHub, and are not publicly available elsewhere, we can use the SU2 Foundation Google drive. The config files can be forced to remain updated by running them in --dry_run mode in the V&V regressions. So I think the next steps would be:; - Revive the configs of the [other V&V cases](https://github.com/su2code/VandV) and put them under regression.; - Add V&V for other areas. So if you have ever done any V&V of an SU2 feature not covered yet please consider **adding the data to the V&V repo, the results to the website, and creating a minimal regression test** for it. If you have never done any V&V, please consider reviving one of the existing ones.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1487#issuecomment-1032966507:536,Test,TestCases,536,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487#issuecomment-1032966507,2,"['Test', 'test']","['TestCases', 'test']"
Testability,"### Code Verification. I used a case similar to the one detailed in references [1] and [2], with a circular cylinder in high Re flow. It's a circular cylinder with a von-Karman vortex street. There's a couple reasons to not expect exact replication of their results. They used higher-order numerics (5th/3rd), a longer grid in the spanwise direction, structured overset grids, and an SST variant of DES. Here's a figure from reference [2]:. ![travinresults](https://user-images.githubusercontent.com/13340225/42509822-bc677aea-8412-11e8-8285-6e51895258b4.png); ; And here's the results of my rough test:. ![roe_dissipation](https://user-images.githubusercontent.com/13340225/42510382-54f3b516-8414-11e8-9be4-07aafdd2468a.png). As you can see, the central/upwind blending function is doing what it's supposed to do. It's going to 0 in regions with both high vorticity and a fine grid, but goes to 1 in the near-wall RANS regions and in the outer region of the flow. There are a few artifacts around the cylinder, where the grid is fine but the eddy viscosity is still low. I'm talking about the few spots you see around the cylinder. There is a relatively high vorticity there, and the grid is fine, so the values make sense. It's hard to tell if this is due to imperfections in the grid, imperfections in the code implementation, or imperfections in the NTS model itself. ### References. 1. A. Travin, M. Shur, M. Strelets, P. Spalart, Detached-Eddy Simulations Past a Circular Cylinder, Flow Turbul. Combust. 63 (1999) 293–313. doi:10.1023/A:1009901401183.; 2. A. Travin, M.L.Shur, M.K. Strelets, P.R. Spalart, M.L. Shur, Physical and numerical upgrades in the detached-eddy simulation of complex turbulent flows, Adv. LES Complex Flows Proc. Euromech Colloq. 412. (2002) 239–254. doi:10.1007/0-306-48383-1_16.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/552#issuecomment-403806479:598,test,test,598,https://su2code.github.io,https://github.com/su2code/SU2/pull/552#issuecomment-403806479,1,['test'],['test']
Testability,"### Discussed in https://github.com/su2code/SU2/discussions/1715. <div type='discussions-op-text'>. <sup>Originally posted by **AbhijithMoni** July 18, 2022</sup>; Hi,. I'm running the inverse design case available in _`TestCases/optimization_euler/steady_inverse_design`_. While executing `python C:\SU2\bin\shape_optimization.py -f .\inv_NACA0012.cfg`. The following error appears:. ```; Traceback (most recent call last):; File ""C:\SU2\bin\shape_optimization.py"", line 183, in <module>; main(); File ""C:\SU2\bin\shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""C:\SU2\bin\shape_optimization.py"", line 159, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""C:\SU2\bin\SU2\opt\scipy_tools.py"", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\slsqp.py"", line 207, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\slsqp.py"", line 375, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\optimize.py"", line 261, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 140, in __init__; self._update_fun(); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 233, in _update_fun; self._update_fun_impl(); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 137, in update_fun; self.f = fun_wrapped(self.x); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 134, in fun_wrapped; return fun(np.copy(x), *args); File ""C:\SU2\bin\SU2\opt\scipy_tools.py"", line 383, in obj_f; obj_list = project.obj_f(x); ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1725:220,Test,TestCases,220,https://su2code.github.io,https://github.com/su2code/SU2/issues/1725,1,['Test'],['TestCases']
Testability,"### Easter Egg - Mixed Precision; The work proposed above should have the solver run at the speed dictated by the available memory bandwidth (for implicit applications).; Keeping CSysMatrix in single precision, and solving the linear systems also in single precision, should therefore provide a good speedup (probably around 1.5 extra speedup).; Since all the flux computations would still be done in double precision no loss of accuracy would be incurred. However some stability can be lost on meshes with very high aspect ratios, therefore there would be a compile-time switch for this mode and the default would be all doubles (hence the Easter egg designation). This should be relatively easy to do cleanly since the relevant classes are already templated and have ""mixing-type logic"" for when they are used with AD. Except for central schemes, currently we would not gain much by doing it as residual loops are compute-bound and the linear solvers do not use that much time.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-549037701:782,log,logic,782,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-549037701,1,['log'],['logic']
Testability,"% (iSiz+1, len(mesh_sizes), mesh_size)); ; for iSub in range(nSub):; ; config_amg['size'] = mesh_size; config_amg['amg_log'] = 'ite%d.amg.stdout' % (global_iter); ; # Prints; pad_cpt = (""(%d/%d)"" % (iSub+1, nSub)).ljust(9); pad_nul = """".ljust(9); ; if not amg_python : ; ; #--- Load su2 mesh ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- If not using the amg python interface, convert the mesh and make system call; ; su2amg.write_mesh(""current.meshb"", ""current.solb"", mesh); ; if not os.path.exists(""current.solb""):; raise RuntimeError , ""\n##ERROR : Can't find solution.\n""; if not os.path.exists(""current.meshb""):; raise RuntimeError , ""\n##ERROR : Can't find mesh.\n""; ; #--- Get sensor; ; sensor = su2amg.create_sensor(mesh, adap_sensor); su2amg.write_solution(""current_sensor.solb"", sensor); ; if not os.path.exists(""current_sensor.solb""):; raise RuntimeError , ""\n##ERROR : Can't find adap sensor.\n""; ; #--- Run amg; ; sys.stdout.write(""Running amg. Log : %s\n"" % config_amg['amg_log']); ; if os.path.exists(""current.itp.solb""):; os.remove(""current.itp.solb""); ; try :; su2amg.amg_call(config_amg); except:; raise RuntimeError , ""\n##ERROR : Call to AMG failed.\n""; ; if not os.path.exists(config_amg['mesh_out']):; raise RuntimeError , ""\n##ERROR : Mesh adaptation failed.\n""; ; if not os.path.exists(""current.itp.solb""):; raise RuntimeError , ""\n##ERROR AMG: Solution interpolation failed.\n"" ; ; #--- Convert output from Inria mesh format to su2; # Deal with markers; ; save_markers = mesh['markers']; del mesh; ; # Read Inria mesh; mesh = su2amg.read_mesh(config_amg['mesh_out'], ""current.itp.solb""); mesh['markers'] = save_markers; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter ; ; su2amg.write_mesh(current_mesh, current_solution, mesh); ; if not os.path.exists(current_mesh) or not os.path.exists(current_solution) :; raise RuntimeError , ""\n##ERROR : Conversion to SU2 failed.\n"". else : # Use pyAmg interface; ; ; #--- Lo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:9079,Log,Log,9079,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['Log'],['Log']
Testability,"'; ./bootstrap; ./configure; make; make check; '''. We use Boost's unit testing framework<https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies; * The most flexible option; * Involves the most work to setup; * Will lack some of the more advances features of mature unit-testing frameworks. Boost Test. * Can be header only, statically linked, or dynamically linked; * If statically or dynamically linked, then Boost is not very lightweight; * Easy to add if you're already using Boost. Google Test. * Most common unit-testing framework; * Can be easily combined with Google's powerful GMock mocking library; * Compiling and linking can be somewhat painful. Catch2. * Used by FEniCS; * Makes unit tests easily readable with lots of syntactic sugar.; * Has a very sim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:4009,test,tests,4009,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,1,['test'],['tests']
Testability,"(I don't usually build the python wrapper locally); On Ubuntu 18 (GCC 7.5) I can confirm the same problem linking the python wrapper library with default meson options.; However, passing -fPIC in CXXFLAGS and LDFLAGS solves the issue, clang-10 does not have this fPIC problem, and looking around I found other reports of this issue being particular to GCC (https://github.com/xoreaxeaxeax/rosenbridge/issues/1). Maybe in your case the environment variables are not making it to the compiler wrapper? (it looks like you are using a cluster and they can be funny...) Try giving a wrong value to CXXFLAGS (e.g. fPIK), meson should fail when it tests the compiler. So in summary I don't think we should change the defaults of the build system, but I'll ask other devs if they've had the same problem.; I'll change the tittle to make it easier for folks with the same issue to find this.; Please do let us know what solution you find, we may at least add a warning to ours doc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568#issuecomment-1076433714:641,test,tests,641,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568#issuecomment-1076433714,1,['test'],['tests']
Testability,"(both in the FD or AD option). Is it available somewhere? The use I'm interested in is the propagation of the sensitivity of the selected objective function with respect to the boundary grid displacements to the FFD control point displacements. Moreover I have two specific questions:. 1) If, for design optimisation, design variables are the FFD control points, once performed the point inversion (which is usually done only at the beginning of the optimization process), the relation between surface grid nodes and FFD control points is fixed and analytically given by the Bernstein polynomials, once provided the parametric coordinates. Why, then, the need to perform the chain rule with Finite Differences or AD?. 2) SU2_DOT uses, to perform the chain rule, surface adjoint solution(in case of FD) or the volume adjoint solution (in case of AD). These values are provided in output by the SU2_CFD adjoint solver. If printing the solution in CSV format I can read, among others, values such `""Sensitivity_x"",""Sensitivity_y"",""Sensitivity_z"",""Surface_Sensitivity""` on every grid point. Now, these values, trying to give a look inside the code, are addressed as, respectively, sensitivities in x/y/z/normal directions. Are these values the sensitivity of the selected objective function with respect to the grid node displacement?. 3) In file `python_wrapper_structure.cpp` function; `vector<passivedouble> CDriver::GetMeshDisp_Sensitivity(unsigned short iMarker, unsigned long iVertex)` ; also provides boundary displacement sensitivities of the objective function, with the call:; `Disp_Sens[0] = solver->GetNodes()->GetBoundDisp_Sens(iPoint, 0);`. These values are, in effect the sensitivity of the objective function with respect to the grid node displacements as some Finite Difference tests confirmed. Anyway such values are different by the values mentioned above in question 2. Is that correct? Am I misunderstanding the meaning of the CSV adjoint output?. Thanks in advance for the interest!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1017:1884,test,tests,1884,https://su2code.github.io,https://github.com/su2code/SU2/issues/1017,1,['test'],['tests']
Testability,") then a good approach is to ; 1. make your `enum` of choice an `enum class` and remove the associated numbers. ; 2. Rename here if reasonable, i,.e. `ENUM_INLET_TYPE` can be just `INLET_TYPE`. Also the option names to not be redundant so e.g. `INLET_TYPE::PRESSURE_INLET_TYPE` could become `INLET_TYPE::PRESSURE`; 3. Add a `NONE` or `NO_THING` option if needed. Often the global `NONE` option is and that made a lot of people very angry and has been widely regarded as a bad move 🧙 ; 2. then you go to `CConfig.c/hpp` and change the option type and everything there (because in the `CConfig` class the variable is usually defined). Find the `GetKind_yourOption` and search the code base for that `Get` function.; 3. Once all search results and the following function bodies are changed just compile and fix until the code builds; 4. Special care for switch statements: If not all options are present make a `default; break;` line -> otherwise the automated builds will fail on a warning (clang is used, I found gcc does only complain with an additional flag); 4. commit at best just 1 commit with a clear message and push. That makes reverting easier if it fails and introduced some non-obvious error; ; Have fun :). ## Related Work; #1242. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1258:2243,test,test,2243,https://su2code.github.io,https://github.com/su2code/SU2/pull/1258,1,['test'],['test']
Testability,"); ; if not os.path.exists(current_mesh) or not os.path.exists(current_solution) :; raise RuntimeError , ""\n##ERROR : Conversion to SU2 failed.\n"". else : # Use pyAmg interface; ; ; #--- Load su2 mesh ; ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- Create sensor used to drive the adaptation; ; sensor_wrap = su2amg.create_sensor(mesh, adap_sensor); ; mesh['sensor'] = sensor_wrap['solution']; ; sys.stdout.write(' %s Generating adapted mesh using AMG\n' % pad_cpt); ; mesh_new = su2amg.amg_call_python(mesh, config_amg); ; #--- print mesh size; ; sys.stdout.write(' %s AMG done: %s\n' % (pad_nul, su2amg.return_mesh_size(mesh_new))); ; mesh_new['markers'] = mesh['markers']; mesh_new['dimension'] = mesh['dimension']; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter; ; su2amg.write_mesh(current_mesh, current_solution, mesh_new); ; #--- Run su2; ; log = 'ite%d.SU2'%global_iter; stdout_hdl = open('%sstdout'%log,'w') # new targets; stderr_hdl = open('%sstderr'%log,'w'); ; success = False; val_out = [False]; ; sys.stdout.write(' %s Running CFD\n' % pad_nul); ; try: # run with redirected outputs; ; sav_stdout, sys.stdout = sys.stdout, stdout_hdl ; sav_stderr, sys.stderr = sys.stderr, stderr_hdl; ; current_solution_ini = ""ite%d_ini.dat"" % global_iter; os.rename(current_solution, current_solution_ini); ; config_cfd.MESH_FILENAME = current_mesh; config_cfd.CONV_FILENAME = ""ite%d_history"" % global_iter; config_cfd.SOLUTION_FLOW_FILENAME = current_solution_ini; config_cfd.RESTART_FLOW_FILENAME = current_solution; ; config_cfd.RESIDUAL_REDUCTION = float(adap_res[iSiz]); config_cfd.EXT_ITER = int(adap_ext_iter[iSiz]); ; config_cfd.WRT_BINARY_RESTART = ""NO""; config_cfd.READ_BINARY_RESTART = ""NO""; ; SU2_CFD(config_cfd); ; if not os.path.exists(current_solution) :; raise RuntimeError , ""\n##ERROR : SU2_CFD Failed.\n""; ; ; except:; sys.stdout = sav_stdout; sys.stderr = sav_stderr; raise; ; sys.stdout = sav_stdout; sys.stderr = sav_",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:10883,log,log,10883,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,2,['log'],['log']
Testability,"*(Note: I am prototyping a new format for a PR template with this submission. We can set a default template in the repo to help guide new contributors and to make future code reviews easier. Please also comment on this general format/idea or share any suggestions to improve.)*. ## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR is a joint effort with @clarkpede for specifying inlet profiles from a file within the C++ code. For now, it is nearest neighbor, but interpolation can be added in the future. If no file is present, a template file will be generated for your modification (ASCII file, one row per DOF on each inlet marker). It works in parallel and for any number of inlet markers. It operates similarly to restarts: there is a single file reader in CSolver, a single file writer in COutput, and solver-specific load functions in the child solver classes. Therefore, this structure can be expanded in the future for data on any marker type in any solver. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #467 ; Interacts with work by @tobadavid @oleburghardt . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/516:1783,test,test,1783,https://su2code.github.io,https://github.com/su2code/SU2/pull/516,1,['test'],['test']
Testability,"**2D PERIODIC BOUNDARY CONDITIONS - DIVERGENT SOLUTION**; Different test cases have been investigated in order to solve 2D-boundary conditions problems. While translational periodic boundary conditions set up perfectly worked and provided consistent results, rotational periodic boundary conditions set up lead to a divergent solution. ; The meshes have been realized with Ansys Fluent Mesher, then converted into .CGNS (adf) file format using ICEM CFD. **To Reproduce**. The investigated scenario can be better visualized thanks in the following image:; ![2021-12-22 (2)](https://user-images.githubusercontent.com/96534491/147110477-ace3e92c-225d-4973-9675-8fd6f57a8404.png). Eventually, it was possible to observe the non-convergence of 2D rotational periodic boundary conditions solutions.; The divergent behavior above mentioned cannot be traced to deceleration effects with respect to the fluid domain, since different ratios inlet/outlet have been simulated and the solution behavior itself has never changed. The solver crashes after 245 iterations, approximately. Considering that 2D translational periodic boundary condition problems are converging, it is suggested that this behavior might be traced to a bug. . In order to reproduce the simulation, here attached the .cfg file:; [Cone.txt](https://github.com/su2code/SU2/files/7763374/Cone.txt); _(according to github, I cannot upload .CGNS file to this report)_. **Desktop:**; - **OS:** Microsoft Windows 10 64bit; - **C++ compiler and version:** g++ (GCC) 1.42.0; - **MPI implementation and version:** OpenMPI 10.1.12498.18; - **SU2 Version:** v7.2.1 Blackbird",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1472:68,test,test,68,https://su2code.github.io,https://github.com/su2code/SU2/issues/1472,1,['test'],['test']
Testability,**All tests pass for both python 2.7 and python 3.2**; See [travis tests](https://travis-ci.org/gbaty/SU2/builds/123336107) that include both py2 and py3. Sorry again for my mistakes and thanks again for your work on docs and your answers. ; I don't know how i missed regression test link only two comments above :(,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-210503165:6,test,tests,6,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-210503165,3,['test'],"['test', 'tests']"
Testability,"**Bug**; ```; PS C:\Users\qiang_zhang\Desktop\TestCases\SU2> ./ninja.exe -C C:\Users\qiang_zhang\Desktop\TestCases\SU2\build install; ninja: Entering directory `C:\Users\qiang_zhang\Desktop\TestCases\SU2\build'; [1/767] Linking target externals/cgns/hdf5/H5detect.exe; FAILED: externals/cgns/hdf5/H5detect.exe; ""gcc"" -o externals/cgns/hdf5/H5detect.exe externals/cgns/hdf5/H5detect.exe.p/H5detect.c.obj ""-Wl,--allow-shlib-undefined"" ""-Wl,-O1"" ""D:/Anaconda/Library/lib/z.lib"" ""-Wl,--start-group"" ""-lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi"" ""-Wl,--subsystem,console"" ""-lkernel32"" ""-luser32"" ""-lgdi32"" ""-lwinspool"" ""-lshell32"" ""-lole32"" ""-loleaut32"" ""-luuid"" ""-lcomdlg32"" ""-ladvapi32"" ""-Wl,--end-group""; D:/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi; collect2.exe: error: ld returned 1 exit status; [10/767] Compiling C object externals/cgns/hdf5/libsu2hdf5.a.p/H5Pint.c.obj; ninja: build stopped: subcommand failed.; ```. **To Reproduce**. I can sucess configure su2:; ![image](https://user-images.githubusercontent.com/29271051/159446256-dc866db4-9199-42d0-86b4-c38839753dd3.png); ![image](https://user-images.githubusercontent.com/29271051/159446307-354518f6-3382-401b-80c9-ac9e72f3d224.png). Then, I want to compile it by:; ```; ./ninja.exe -C C:\Users\qiang_zhang\Desktop\TestCases\SU2\build install; ```; And the bug is reported:. ```; cannot find -lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi; ```; However, I have install the `msmpisdk.msi` and `msmpisetup.exe`. . ![image](https://user-images.githubusercontent.com/29271051/159446649-f606a381-0896-461c-bd09-9e0b9243ce2e.png). **Desktop (please complete the following information):**; - OS: win10; - C++ compiler and version: as the recommanded `gcc version 8.1.0 (x86_64-posix-seh-rev0, Built by MinGW-W64 project)`; - MPI implementation and version: as the recommanded v10.1.2; - SU2 Version: Proj",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1570:46,Test,TestCases,46,https://su2code.github.io,https://github.com/su2code/SU2/issues/1570,3,['Test'],['TestCases']
Testability,"**Describe the bug**. During the regression tests of #1977, I noticed that some runs weirdly does not pass the test. After the third attempt regression test passed successfully. . Please see the attempts https://github.com/su2code/SU2/actions/runs/4480654814/jobs/7883573846 `hybrid_regression_AD.py`. . Looks weird to me.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1980:44,test,tests,44,https://su2code.github.io,https://github.com/su2code/SU2/issues/1980,3,['test'],"['test', 'tests']"
Testability,"**Describe the bug**. Here is a description of the bug, and possible fix... Using the FAN_FACE_MACH boundary condition, which is implemented in the `CEulerSolver.cpp`, the `Inflow_Mach_old` returned is 0.0, causing the computation of the updated pressure to be incorrect. In practice, this drives the pressure lower and lower until it becomes negative. To find this, I added debug statements to `SU2_CFD/src/solvers/CEulerSolver.cpp` where the FAN_FACE_MACH BC logic is to iterate on the outflow pressure. . // cout << endl << ""PRINTING DEBUG INFO FOR FAN_FACE_MACH"" << endl;; // cout << ""Rank = "" << rank << endl;; // cout << ""Kind_Engine_Inflow = "" << Kind_Engine_Inflow << endl;; // cout << ""Target_Inflow_Mach = "" << Target_Inflow_Mach << endl;; // cout << ""Inflow_Pressure_old = "" << Inflow_Pressure_old << endl;; // cout << ""Inflow_Mach_old = "" << Inflow_Mach_old << endl;; // cout << ""Inflow_Pressure_inc = "" << Inflow_Pressure_inc << endl;; // cout << ""Inflow_Pressure = "" << Inflow_Pressure << endl;. which resulted in the output:. PRINTING DEBUG INFO FOR FAN_FACE_MACH; Rank = 1; Kind_Engine_Inflow = 1; Target_Inflow_Mach = 0.64; Inflow_Pressure_old = 2.36396; Inflow_Mach_old = 0; ... So it seems the main issue is that in the `config` the `Inflow_Mach` quantity is never getting updated. I _believe_ this should happen in `src/solvers/CEulerSolver.cpp` starting at line 2855 `if (Engine) { ... ` . Here, a call to `config->SetInflow_Mach(iMarker_Inlet, Inlet_Mach_Total[iMarker_Inlet]);` is completely missing. I'm not familiar with the code base, so I'm not sure if it is supposed to be updated elsewhere. However, inserting that line appears to fix the problem and the above logic around FAN_FACE_MACH begins working as expected. **Reproduce**; Perhaps the only thing about my problem worth mentioning is it is ran as axisymmetric. I'm running RANS, with the SST model. . **Desktop (please complete the following information):**; - OS: [e.g., Linux (Centos 7)]; - C++ compiler and versi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1607:461,log,logic,461,https://su2code.github.io,https://github.com/su2code/SU2/issues/1607,1,['log'],['logic']
Testability,"**Describe the bug**. Hi SU2 developers,. I will consider this as a possible bug until I hear the opinion of the SU2 community. As a validation test case for turbulence models, I am running the NASA Hump test case (https://turbmodels.larc.nasa.gov/nasahump_val.html). However, the results obtained from the develop and master branch are quite different, specially the pressure distribution over the hump. The same difference also appears when other numerical scheme is used (SLAU2 instead of Roe). On the other hand, the skin friction seems not be affected. Please see attached figures. Also, I attached the plot of the residual over iterations, showing that all simulations converged nicely. Firstly, I thought that this was related to pull request #670 but I ran the same case with an older version of the dev branch and the results were identical. This suggest that the difference started from pull requests that were merged before #670. I also attached the config and mesh files if someone wants to reproduce. Thanks to Danah Park (PhD student) for pointed me out. I appreciate your time and feedback. Best,. Eduardo. ![rans_cf_compare-branch_roe](https://user-images.githubusercontent.com/9790985/61551958-7113dc80-aa0b-11e9-8074-7d754d36a99c.png); ![rans_cf_compare-branch_slau2](https://user-images.githubusercontent.com/9790985/61551959-7113dc80-aa0b-11e9-83c2-918d89d26f07.png); ![rans_cp_compare-branch_roe](https://user-images.githubusercontent.com/9790985/61551960-71ac7300-aa0b-11e9-9f1a-e1be993377cb.png); ![rans_cp_compare-branch_slau2](https://user-images.githubusercontent.com/9790985/61551962-71ac7300-aa0b-11e9-80c6-2ee9390e61f9.png); ![rans_rho0Res_compare-branch](https://user-images.githubusercontent.com/9790985/61551963-71ac7300-aa0b-11e9-962a-7ea04a98ecd4.png). **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; [hump_ddes_full.su2.gz](https://github.com/su2code/SU2/files/3412065/hump_ddes_full.su2.gz); [turb_SA_hum",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735:144,test,test,144,https://su2code.github.io,https://github.com/su2code/SU2/issues/735,2,['test'],['test']
Testability,"**Describe the bug**. I found a bug while testing the SST model.; I'm trying to simulate the high Mach number flat plate case. The flow condition is below. Temperature (K) | Unit Re (1/m) | Mach | Pressure | Wall Temperature(K); -- | -- | -- | -- | --; 800 | 4.9×10^6 | 6.1 | 12100 | 300. After calculation, I check the flow field, including the boundary. But, the inlet boundary is not the same flow conditions I imposed. ; Here is the comparison of other models using the same flow conditions. . ![image](https://user-images.githubusercontent.com/50565314/208847631-a3ced0ab-7a70-45ee-b67e-41314b2ddfb1.png). ![image](https://user-images.githubusercontent.com/50565314/208847743-6f08eb96-ea5e-4ac5-a50a-0d980f33c547.png). So, I tried to find the cause. . When deriving the RANS equation from the energy equation, the turbulent kinetic energy(TKE) is derived from the kinetic energy of Total Energy(E) as shown below.; ![image](https://user-images.githubusercontent.com/50565314/208849564-da4f1b0a-ff2f-4732-911a-b1ed2a4ca1c8.png). In the boundary condition and initialization part, k is considered depending on whether or not the SST model is used for Total Energy. In CEulerSolver.cpp ; `bool tkeNeeded = (turbulent && config->GetKind_Turb_Model() == TURB_MODEL::SST);`; `if (tkeNeeded) { Energy_FreeStream += Tke_FreeStream; }; config->SetEnergy_FreeStream(Energy_FreeStream);`; `if (tkeNeeded) Energy_FreeStreamND += Tke_FreeStreamND;`. But In the flux calculation part, when calculating the speed of sound(a), using the total enthalpy(H). But, in this part consider only the kinetic energy. . Expressed mathematically ; ![image](https://user-images.githubusercontent.com/50565314/208861650-92b8cad6-5a1f-4742-952b-30d0187ae28b.png). but in the SU2 code using below. ![image](https://user-images.githubusercontent.com/50565314/208861902-ff614d53-d07e-4237-a04d-73a49ad5a55c.png). The speed of sound always has a slightly high value because TKE is not subtracted. See ""roe.cpp"" line 119 ~ 149. ; `",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851:42,test,testing,42,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851,1,['test'],['testing']
Testability,"**Describe the bug**. Periodic boundary conditions work well for steady problems and dual-time-stepping. But when I try to use time-stepping (not dual-time-stepping), the periodic boundary condition shows some artifacts. For a problem that's homogeneous in the periodic direction, the transient solution is not homogeneous in the periodic direction. **To Reproduce**. To verify the problem, I looked at the ""navierstokes/poiseuille"" test case. This case is homogeneous in the y direction, and has periodic boundaries. Instead of treating it as a steady-state problem, I did time-marching wit simple time-stepping. I then compared the results with the same simulation on v6.2.0 (before PR #652 changed the periodic boundaries). The y-momentum is very similar in both cases. However, the x-momentum shows inhomogeneity on the develop branch:. ![comparison](https://user-images.githubusercontent.com/13340225/63468140-bc674380-c42c-11e9-976a-ba94def43bd8.gif). Here are the files to recreate my test case:; [periodic_timestepping.tar.gz](https://github.com/su2code/SU2/files/3527333/periodic_timestepping.tar.gz). **My Analysis**. One of my colleagues pointed out that `CSolver::InitiatePeriodicComms` and `CSolver::CompletePeriodicComms` only communicate the residual and the Jacobian of point ""i"" with respect to point ""i"". The Jacobian of point ""i"" with respect to point ""j"" is *not* communicated. This means that a different problem is being passed to the linear solver at the periodic nodes. In v6.2.0, a halo node approach was used, so the linear solver problem was identical for all nodes along a homogeneous direction. If this analysis is correct, then this could be fixed by communicating the full Jacobian (with respect to all neighbors) at the periodic points. **Desktop**; - OS: Ubuntu 18.04; - C++ compiler and version: icc 19.0.2.187; - MPI implementation and version: mpich2/3.2; - SU2 Version: develop branch",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/763:433,test,test,433,https://su2code.github.io,https://github.com/su2code/SU2/issues/763,2,['test'],['test']
Testability,"**Describe the bug**. The serial regression test `p1rad`, which runs SU2_CFD on [TestCases/radiation/p1model/configp1.cfg](https://github.com/su2code/SU2/blob/f9f7a0111f7ffd5b4b3a4c7fd165878eea69a7af/TestCases/radiation/p1model/configp1.cfg#L50), has a heap-buffer-overflow in [`CConfig::GetWall_Emissivity`](https://github.com/su2code/SU2/blob/f9f7a0111f7ffd5b4b3a4c7fd165878eea69a7af/Common/src/CConfig.cpp#L9614) according to Clang's address sanitizer. . According to my printf debugging, `nMarker_Emissivity` is `2` and `Wall_Emissivity` is `{""left"", ""right""}` (matching the cfg file), but `CRadP1Solver::BC_Marshak` calls `GetWall_Emissivity` with the marker string `""upper""`. . **Bug report checklist**; - [X] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [X] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [X] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; Ubuntu 22.04 with Clang++ 16.0.6, MPI disabled, SU2 at current `develop` branch, commit f9f7a0111f7ffd5b4b3a4c7fd165878eea69a7af.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2211:44,test,test,44,https://su2code.github.io,https://github.com/su2code/SU2/issues/2211,3,"['Test', 'test']","['TestCases', 'test']"
Testability,"**Describe the bug**. You will have to bear with me, I might get some of this wrong, I am not entirely sure what is going on here so I will try and include as much information as possible. Using the tape tagging method developed by @oleburghardt in #2343 and presented at the most recent SU2 Conference, a run of the full tape reveals that a variable used in a preaccumulation output is not properly recorded. The variable is the `val` in the function `PassiveAssign` in `CSysMatrix.hpp` line 215. `FORCEINLINE static ScalarType PassiveAssign(const SrcType& val) {; return SU2_TYPE::GetValue(val);; }`. Following the call stack of the error reveals that the problem variables in `val` are the jacobian components calculated in the Roe and JST scheme (these are the two options I have tested). It is possible to resolve this error by simply moving the stopping of the preaccumulation region from before the call to `updateLinearSystem` in the `ComputeFlux` method of both these schemes, to after, as show below. `/*--- Update the vector and system matrix. ---*/. updateLinearSystem(iEdge, iPoint, jPoint, implicit, updateType,; updateMask, flux, jac_i, jac_j, vector, matrix);. /*--- Stop preaccumulation. ---*/. stopPreacc(flux);`. However, whilst this resolve the error in this location, the next error appears in the Giles boundary condition. Here the two jacobian components within the residual object are not recorded correctly in the preaccumulation output region also. This in `CEulerSolver.cpp:6556`. `/*--- Compute the residual using an upwind scheme ---*/; auto residual = conv_numerics->ComputeResidual(config);. /*--- Update residual value ---*/; LinSysRes.AddBlock(iPoint, residual);`. I have tried simpy adding these components as preacc outputs however they are SIMD arrays and the datatype cannot be converted using the existing implementation. . I am not sure what is going on here, or the next steps to resolve this problem. Any further assistance would be greatly appreciated, thank ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2368:784,test,tested,784,https://su2code.github.io,https://github.com/su2code/SU2/issues/2368,1,['test'],['tested']
Testability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. As I used SU2 develop version for shape optimization, it gave a keyerror in TestCase ; disc_adj_rans/naca0012, ; shape_optimization.py -f turb_NACA0012_sa.cfg; and disc_adj_rans/cylinder,; shape_optimization.py -f cylinder_Windowing.cfg. I have compiled SU2 with AD enabled. ; Also try disc_adj_turbomachinery/transonic_stator_2d, gave the same error.; I would like to know if I make some mistakes to run the testcases. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. Found: mesh_cylinder.su2; New Project: ./; Traceback (most recent call last):; File ""/home/wkholy/su2/bin/SU2/io/config.py"", line 164, in __getitem__; return super(Config,self).__getitem__(k); KeyError: 'OPT_OBJECTIVE'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/home/wkholy/su2/bin/shape_optimization.py"", line 183, in <module>; main(); File ""/home/wkholy/su2/bin/shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""/home/wkholy/su2/bin/shape_optimization.py"", line 155, in shape_optimization; project = SU2.opt.Project(config,state); File ""/home/wkholy/su2/bin/SU2/opt/project.py"", line 114, in __init__; def_objs = config['OPT_OBJECTIVE']; File ""/home/wkholy/su2/bin/SU2/io/config.py"", line 166, in __getitem__; raise KeyError('Config parameter not found: %s' % k); KeyError: 'Config parameter not found: OPT_OBJECTIVE'. **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v6.2.0]. Ubuntu 20.04; C++ gcc version 9.4.0; SU2 version 7.3.1 develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1714:261,Test,TestCase,261,https://su2code.github.io,https://github.com/su2code/SU2/issues/1714,2,"['Test', 'test']","['TestCase', 'testcases']"
Testability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Hi,. I am currently using SU2 to do some test cases for AIAA 1st Stability and Control Workshop. These cases need to run with a fixed-Cl as the DPW6 cases did. When I tried to use the knobs “FIXED_CL_MODE= YES” and “TARGET_CL= 0.50” in the .cfg input file to run these cases, the Cl change always got some odd significant jumps even though the AoA change was quite small and then the computations diverged after a while. . I am not sure if I used a correct way for the fixed-Cl computations (no optimization and design needed). I know some reported research did use SU2 for DPW6 cases with fixed-Cls. . Thank you very much!. Wei. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; % %; % SU2 configuration file %; % Case description: CRM model for S&C workshop %; % Author: %; % Institution: %; % Date: %; % File Version 7.1.1 ""Blackbird"" %; % %; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%. % ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%; %; % Physical governing equations (EULER, NAVIER_STOKES,RANS,; % WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,; % POISSON_EQUATION) ; SOLVER= RANS; %; % Specify turbulence model (NONE, SA, SA_NEG, SST); KIND_TURB_MODEL= SST; %; % Mathematical problem (DIRECT, CONTINUOUS_ADJOINT, DISCRETE_ADJOINT); MATH_PROBLEM= DIRECT; %; % Restart solution (NO, YES); RESTART_SOL= YES; %; % System of measurements (SI, US); % International system of units (SI): ( meters, kilograms, Kelvins,; % Newtons = kg m/s^2, Pascals = N/m^2, ; % Density = kg/m^3, Speed = m/s,; % Equiv. Area = m^2 ); % United States customary units (US): ( inches, slug, Rankines, lbf = slug ft/s^2, ; % p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1297:226,test,test,226,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297,1,['test'],['test']
Testability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. I am running a WMLES channel flow test case with grid size 102 x 31 x 52 = 164424 nodes. When running the problem on a large number of cores, e.g. 128 cores, SU2 fails during the preprocessing step. Running valgrind gives the error; ![image](https://user-images.githubusercontent.com/41386609/97629439-580a2180-19eb-11eb-9e9f-023fc96c05aa.png); which for my version corresponds to this line; ![image](https://user-images.githubusercontent.com/41386609/97629473-66f0d400-19eb-11eb-89c8-9b677c720240.png); It seems that theres a mismatch on the receiver end. The problem disappears if I use smaller number of cores, e.g. 64, and everything will look normal (solution converges and SU2 exit normally). The actual number of MPI cores that triggers the bug seems to be problem dependent. I also ran a couple of finer grids but started to see the bug with 64 cores. For these finer mesh, reducing to a smaller number like 48 cores makes the problem disappear again. Similar problem has been observed by @clarkpede and mentioned in pecos-hybrid/su2#53 but he was using an older version of SU2 (v6.2.0). I should mention another common thing is that we are both using periodic boundary conditions. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; [wmles_chan_re5200.zip](https://github.com/su2code/SU2/files/5461150/wmles_chan_re5200.zip); (Reminder: This has to be ran with very large number of cores though. I see the problem with 128 cores). **Desktop (please complete the following information):**; - OS: CentOS Linux release 7.6.1810; - C++ compiler and version: gcc/6.3.0 ; - MPI implementation and version: openmpi/3.1.2; - SU2 Version: v7.0.3",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1099:219,test,test,219,https://su2code.github.io,https://github.com/su2code/SU2/issues/1099,1,['test'],['test']
Testability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Python wrapper hangs on Set_MPI_ActDisk in CEulerSolver.cpp line 1091 ""SU2_MPI::Barrier(MPI_COMM_WORLD);""; If the SU2_CFD is called without python wrapper, it runs ok. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. Go to the test case solver, choose the propeller one and run the following script. mpirun -np 2 python launch_su2.py --parallel -f propeller.cfg; [launch_su2.py.txt](https://github.com/su2code/SU2/files/5762218/launch_su2.py.txt). There is no issue when SU2_CFD is called directly:; mpirun -np 2 SU2_CFD propeller.cfg. **Desktop (please complete the following information):**; - OS: [Ubuntu 16.04.6 LTS]; - C++ compiler and version: [g++ (GCC) 9.3.0]; - MPI implementation and version: [OpenMPI 4.0.5]; - SU2 Version: [develop]; - Python Version: 3.6.12; - MPI4Py Version: 3.0.3. In order to fully reproduce the error one can try running the following commands under Anaconda Python Manager, although the same error appears using the default ubuntu python3 and openmpi compilers :; ->conda create -n su2code python=3.6; ->conda activate su2code; ->conda install -c conda-forge c-compiler compilers cxx-compiler openmpi swig mpi4py numpy scipy. Install SU2 with the following script:. #!/bin/bash; export CC=/path/anaconda3/envs/su2code/bin/mpicc; export CXX=/path/anaconda3/envs/su2code/bin/mpicxx; export CXXFLAGS=${CXXFLAGS}:""-lmpi""; rm -rf SU2/build; rm -rf SU2_exec_dev/bin; cd SU2; ./meson.py build -Denable-pywrapper=true -Dcustom-mpi=true --prefix=/path/SU2_exec_dev; ./ninja -C build install",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1150:472,test,test,472,https://su2code.github.io,https://github.com/su2code/SU2/issues/1150,1,['test'],['test']
Testability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. This issue is a follow-up of a discussion here: https://www.cfd-online.com/Forums/su2/241889-rotating_frame-grid-velocity-correct-flow-physics-wrong.html. Summary: To calculate an aircraft during pitch-up as a steady Euler simulation, I use the dynamic / moving mesh module with GRID_MOVEMENT= STEADY_TRANSLATION and/or ROTATING_FRAME and set the farfield mach number = 0.0. The results look fine, but when reading the nodal forces f_xyz on the surface via pysu2 and GetFlowLoad(), I now receive NaNs... My first idea was that maybe the forces are calculated from the pressure coefficients, which show ""strange"" values in Tecplot, probably due to the division by V_inf=0.0. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; I derived a test case from the Naca0012 example and added a short python script that should reproduce the NaNs in line 66.; [testcase_dynamic_mesh.zip](https://github.com/su2code/SU2/files/8396025/testcase_dynamic_mesh.zip). **Desktop (please complete the following information):**; - OS: Red Hat Enterprise Linux Workstation 7.9; - C++ compiler and version: mpicc (gcc 4.8.5 ""gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-44)""); - MPI implementation and version: MPICH 3.4.2; - SU2 Version: 7.3.0 ""Blackbird""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1588:980,test,test,980,https://su2code.github.io,https://github.com/su2code/SU2/issues/1588,1,['test'],['test']
Testability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*; I say ""newer ubuntu linux distributions"" cause that's what I have, but this is probably due to some compiler/glibc change that will affect all newer systems that upgrade glibc.; When compiling with -Denable-tests=true, we are using catch2.hpp from the externals/ folder. This catch version is v2.11.1. However, the behavior of glibc(? what I understood from some bug reports) changed somewhere last year, specifically MINSIGSTKSZ became non-constant, leading to the following errors below. To prevent this issue, catch needs to be upgraded to version>2.13.5. In my case, recompiling with the system version of catch2-2.13.8-1 was sufficient to be able to compile again. . ```; FAILED: UnitTests/test_driver.p/test_driver.cpp.o ; /usr/bin/mpicxx.mpich -IUnitTests/test_driver.p -IUnitTests -I../UnitTests -ISU2_CFD/src -I../SU2_CFD/src -ICommon/src -I../Common/src -I../externals/CLI11 -I../externals/cgns/adf -I../externals/cgns/adfh -Iexternals/cgns -I../externals/cgns -Iexternals/cgns/hdf5 -I../externals/cgns/hdf5 -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -I../externals/mel -I../externals/catch2 -I/usr/include/x86_64-linux-gnu/mpich -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wnon-virtual-dtor -Wextra -std=c++11 -O3 -fPIC -Wno-empty-body -Wno-unused-parameter -Wno-deprecated-declarations -Wno-non-virtual-dtor -DHAVE_CGNS -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -MD -MQ UnitTests/test_driver.p/test_driver.cpp.o -MF UnitTests/test_driver.p/test_driver.cpp.o.d -o UnitTests/test_driver.p/test_driver.cpp.o -c ../UnitTests/test_driver.cpp; In file included from /usr/include/signal.h:328,; from ../externals/catch2/catch.hpp:7955,; from ../UnitTests/test_driver",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1724:392,test,tests,392,https://su2code.github.io,https://github.com/su2code/SU2/issues/1724,1,['test'],['tests']
Testability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*; I try to build SU2 from source on cluster. but it failed in Generating 'SU2_PY/pySU2/_pysu2.so.p/pySU2.cxx'. The log of meson build info is like the figure shows; ![image](https://user-images.githubusercontent.com/54931653/165111891-b9f26f7f-efe4-4e08-a7af-0945f916748a.png); ![image](https://user-images.githubusercontent.com/54931653/165111974-25211d0c-72e0-401e-8619-ab8c30163fd5.png); ![image](https://user-images.githubusercontent.com/54931653/165112038-98e00c96-c2fb-4662-b98d-6b7a9be4581a.png); ![image](https://user-images.githubusercontent.com/54931653/165112129-cd00f7ef-1195-4a39-86a5-608fb0b036eb.png); ![image](https://user-images.githubusercontent.com/54931653/165112177-4dbef8c9-cb54-48ec-9787-6ef7213ce934.png). when using ninja, it shows the error like the figure show; ![image](https://user-images.githubusercontent.com/54931653/165111571-a795012b-e0f4-4fb7-9f87-f78c67242a2f.png). **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; The meson command for build is; ./meson.py build -Dcustom-mpi=true -Denable-pywrapper=true --prefix=$HOME/SU2_prefix . **Desktop (please complete the following information):**; - OS: [Red Hat 8.5.0-4]())); - C++ compiler and version: [gcc 8.5.0]; - MPI implementation and version: [intel MPI]; - SU2 Version: [ v7.3.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1617:298,log,log,298,https://su2code.github.io,https://github.com/su2code/SU2/issues/1617,1,['log'],['log']
Testability,"**Describe the bug**; *Reference case and expectations*; After many, many tries, the Caradonna-Tung test case seems to ""converge"" towards a non-physical solution. The flow creates a vortex around the blade instead of generating a downward jet as one can expect (https://www.nas.nasa.gov/SC08/v22_2.html). The case simulates a propeller with a compressible Euler solver. *Main issue*; The outlet, pressure outlet, or farfield boundary conditions seems to destabilize after some iterations due to the high speed gradient on the outlet face. To get into more details, there is a vortex forming ring forming near of the outlet creating a inflow at the center. The BC seems to build on this inflow up to a point where the flow destabilizes the solution and diverges or pushes the flow to make a ring around the propeller. *Case setup and context*; To put some context the current case tries to simulate the flow-field generated by a blade/propeller in a hover state in order to compute the thrust. The blade is surrounded by a cylinder. The markers for each surfaces are:; -""inlet"" for the top of the cylinder; -""farfield"" for the sides of the cylinder; -""outlet"" for the bottom of the cylinder. The blade has been divided into 4 surfaces which have the following self explanatory marker names:; - ""propellerUpperSurface""; - ""propellerLowerSurface""; - ""propellerRightTip""; - ""propellerLeftTip"". Many combinations of the possible boundary conditions setup were tested for the ""inlet"", ""farfield"" and ""outlet"" markers. Furthermore the Inlet BC were tried with many different vertical speeds (vx=0/0.001/0.01/0.1/1/10). Simulations with the inlet, farfield and outlet as TOTAL_INLET, FARFIELD, OUTLET and EULER and some (not all) combination between these BC were tried. The mesh was generated with Salome-Meca. It is a tetrahedral mesh. I have a script that permits to change the domain size with ease. So from the mesh perspective it is fairly easy to test different mesh sizes and domain sizes.; Generally ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1669:100,test,test,100,https://su2code.github.io,https://github.com/su2code/SU2/issues/1669,1,['test'],['test']
Testability,"**Describe the bug**; 1.; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. When I tried to run the TestCases/disc_adj_turbomachinery/transonic_stator_2D, it showed the error.; Seem the error was reported in https://github.com/su2code/SU2/issues/889.; But in version 7.3.1, it still has similar issues.; May I ask how to use updateHistoryMap.py to add custom objectives? Thanks. raceback (most recent call last):; File ""/usr/local/bin/shape_optimization.py"", line 183, in <module>; main(); File ""/usr/local/bin/shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""/usr/local/bin/shape_optimization.py"", line 155, in shape_optimization; project = SU2.opt.Project(config,state); File ""/usr/local/bin/SU2/opt/project.py"", line 129, in __init__; group = historyOutFields[this_obj]['GROUP']; KeyError: 'ENTROPY_GENERATION'. 2; When I run the case in TestCases/turbomachinery/axial_stage_2D, the value for Total-Total Eff is increased with the total iterative step. When I set Number of total iterations = 3000, the EFF is increased than Number of total iterations =1000. But the pressure ratio remains unchanged. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. TestCases/turbomachinery/axial_stage_2D. **Desktop (please complete the following information):**; - OS: [e.g., Linux (Ubuntu 20.04)]; - C++ compiler and version: [e.g., g++ (GCC) 9.4.0]; - MPI implementation and version: [e.g., OpenMPI 4.0.3]; - SU2 Version: [e.g., v7.3.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1628:213,Test,TestCases,213,https://su2code.github.io,https://github.com/su2code/SU2/issues/1628,3,['Test'],['TestCases']
Testability,"**Describe the bug**; A compiler warning brought me to this routine.; The logic to check for convexity of 3D elements seems flawed, I left two comments in the code in #1167 (it will be in develop soon enough) of what seems odd about it.; I think this routine was introduced in #1076, and it seems the intention is to check the volume of the tet associated with each corner of an element, a similar method is used in CPhysicalGeometry::Check_IntElem_Orientation. I am not planning to fix this myself :)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1171:74,log,logic,74,https://su2code.github.io,https://github.com/su2code/SU2/issues/1171,1,['log'],['logic']
Testability,"**Describe the bug**; After defining the FFD box correctly, using SU2_DEF, the *shape_optimization.py* script was launched to perform adjoint optimization of an internal flow over airfoil. The following error is printed out by SU2:; [SU2_error.txt](https://github.com/su2code/SU2/files/10999828/SU2_error.txt). The .cfg file attached below is largely inspired by the Onera test case already published in the tutorial collection. ; However, I checked the code looking for some issues that my configuration might have caused and I couldn't find any (to my knowledge). It seems the solver has issues converting to float-type variable my text indications for DV_PARAM option. Moreover, I tried to ""play"" with the values related to DV_PARAM and no difference was noted. The same issue was experienced both in version 7.5.0 and 7.5.1 regardless of running a pre-compiled version (Microsoft) or the built-from-source version (Ubuntu). **To reproduce**. [airfoil.txt](https://github.com/su2code/SU2/files/10999881/airfoil.txt); *Mesh file extension is not supported for upload*. **Bug report checklist**. - [ ✓] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [ ✓] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [ ✓] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: Ubuntu 20.04.0 & Microsoft; - C++ compiler and version: g++ 9.4.0; - MPI implementation and version: Open MPI 4.0.3; - SU2 Version: v7.5.1 & v7.5.0. *Thank you in advance for your help.*",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1970:373,test,test,373,https://su2code.github.io,https://github.com/su2code/SU2/issues/1970,1,['test'],['test']
Testability,"**Describe the bug**; Attempting to run SU2 in dryrun mode (with ""-d"" flag) fails when compiled with debug flags:. ```; SU2_CFD_SERIAL_DEBUG: ../Common/src/linear_algebra/../../include/geometry/dual_grid/../../toolboxes/graph_toolbox.hpp:268: const Index_t* CCompressedSparsePattern<Index_t>::outerPtr() const [with Index_t = long unsigned int]: Assertion `!empty() && ""Sparse pattern has not been built.""' failed.; Aborted (core dumped); ```; Seems to run ok with release build. **To Reproduce**; Compile code with debug flags and run with dryrun option. **Desktop (please complete the following information):**; - OS: Arch Linux (kernel 5.6.10); - C++ compiler and version: gcc v. 9.3.0; - MPI implementation and version: openmpi 4.0.3; - SU2 Version: v. 7.0.4, branch: develop, commit: 31e55ed9f5f13762e939cd44650e34d6e4d5f0f7",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/988:346,Assert,Assertion,346,https://su2code.github.io,https://github.com/su2code/SU2/issues/988,1,['Assert'],['Assertion']
Testability,"**Describe the bug**; Building SU2 with building options -Denable-pywrapper and -Dwith-mpi, The meson error occured.; Please let me know if anyone knows what to do. The part of meson-log.txt is below:. > Message: Boost sources found.; Program swig found: YES (/usr/bin/swig); Running command: /---/---/---/work/SU2/venv/bin/python3 -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; /---/---/---/work/SU2/venv/lib/python3.7/site-packages/mpi4py/include. > --- stderr ---. > Message: Using mpi4py from /---/---/---/work/SU2/venv/lib/python3.7/site-packages/mpi4py/include; Pkg-config binary for 1 is cached.; Determining dependency 'python-3.7m' with pkg-config executable '/usr/bin/pkg-config'; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --modversion python-3.7m` -> 0; 3.7; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --cflags python-3.7m` -> 0; -I/data/home/yamazaki/soft/Python-3.7.9/build/include/python3.7m; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_ALLOW_SYSTEM_LIBS]: 1; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --libs python-3.7m` -> 0; -L/---/---/---/soft/Python-3.7.9/build/lib -lpython3.7m; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --libs python-3.7m` -> 0; -L/---/---/---/soft/Python-3.7.9/build/lib -lpython3.7m; WARNING: extract_all_objects called without setting recursive; keyword argument. Meson currently defaults to; non-recursive to maintain backward compatibility but; the def",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1672:183,log,log,183,https://su2code.github.io,https://github.com/su2code/SU2/issues/1672,1,['log'],['log']
Testability,"**Describe the bug**; Coupling a turbomachinery simulation with a structural mechanic simulation seems to result in an segmentation error. I have tested the case by turning off the turbomachinery settings and it runs perfectly. However when applying markers to the inlet and outlet of the section, it returns the error. . Case: radial turbine, where i would like to calculate the stress on the blades. . _Attached: config files and log ._ ; fsi.cfg -> multiphysical file to couple both zones; rotor.cfg -> describing the compressible flow in the rotor section; blade.cfg -> structural analysis . **Bug report checklist**; - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). . **Desktop:**; - OS: Ubuntu 20.04 LS (WSL); - C++ compiler and version: 9.4.0; - MPI implementation and version: 4.0.3; - SU2 Version: 7.5.1. **Files**; [fsi.txt](https://github.com/su2code/SU2/files/12079269/fsi.txt); [configBlade.txt](https://github.com/su2code/SU2/files/12079270/configBlade.txt); [configRotor.txt](https://github.com/su2code/SU2/files/12079271/configRotor.txt); [log.txt](https://github.com/su2code/SU2/files/12079360/log.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2085:146,test,tested,146,https://su2code.github.io,https://github.com/su2code/SU2/issues/2085,4,"['log', 'test']","['log', 'tested']"
Testability,"**Describe the bug**; During the last weeks of 2021, two different periodic flow scenarios have been investigated ( #1523 ).; While setting the periodic boundary conditions, the 2D-divergent wedge case solution seemed to be negatively affected even after the precious suggestions and corrections received in the quoted discussion. . Consequently, different test cases have been simulated again to avoid any possible mistake.; Scenarios investigated are better explained here below:; - **Rectangular Duct** . _2D case_ ; ![2022-03-13 (3)](https://user-images.githubusercontent.com/96534491/158036413-52921fc0-3ae9-464c-b9f9-1ef6b4075ecf.png). _3D case_ ; ![2022-03-13 (5)](https://user-images.githubusercontent.com/96534491/158036422-9fba20d1-9757-40a2-93f6-e4b05aeac2de.png). - **Divergent Wedge**. _2D case_ ; ![2022-03-13 (2)](https://user-images.githubusercontent.com/96534491/158036446-959ee5d1-f394-48c5-8ce6-383a1dc8d3a6.png). _3D case_ ; ![2022-03-13 (12)](https://user-images.githubusercontent.com/96534491/158036910-39f879f2-3c74-4735-b416-212f17181933.png). Meshes have been realized with ICEM CFD, then correctly converted into .cgns (adf) format. The results obtained are the following:. - 2D Rectangular Duct (Translational Periodicity) --> **Converged**; - 3D Rectangular Duct (Translational Periodicity) --> **Converged**; - 2D Divergent Wedge (Rotational Periodicity) --> _**Diverged**_; - 3D Divergent Wedge (Rotational Periodicity) --> **Converged**. It is suggested that this solution behavior might be traced to a bug.; It has also been observed that the converged simulations are providing consistent results only for the following convective scheme and time discretization settings: . CONV_NUM_METHOD_FLOW = ROE; MUSCL_FLOW = NO; TIME_DISCRE_FLOW = EULER_IMPLICIT. **To Reproduce the simulations**. _2D Rectangular Duct_; [channel2D.txt](https://github.com/su2code/SU2/files/8238476/channel2D.txt). _3D Rectangular Duct_; [channel3D.txt](https://github.com/su2code/SU2/files/8238",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1562:357,test,test,357,https://su2code.github.io,https://github.com/su2code/SU2/issues/1562,1,['test'],['test']
Testability,"**Describe the bug**; Hello everyone, . I'm trying to study the secondary flows around a compressor stator blade. To do so, I need to simulate the 3d blade, the hub and the shroud (as shown in the picture below).; ![blade](https://user-images.githubusercontent.com/24920252/140755903-23c7ad28-3b91-4476-9eae-8907b20a8bf7.png). To simplify a bit the problem, the geometry is assumed to be constant along the span. Therefore, a hybrid mesh is used on a 2d surface and is extruded along the span. The following pictures represented a global view of the test case, the hybrid mesh and the mesh distribution for the extrusion:. ![global](https://user-images.githubusercontent.com/24920252/140758176-d1e5da98-5e54-457e-9a80-92878a1e88ba.png); ![2dmesh](https://user-images.githubusercontent.com/24920252/140756176-4560688b-1c6c-42e7-b404-95589764acad.png). ![extrusion](https://user-images.githubusercontent.com/24920252/140756190-d5a423b7-c172-4fff-9fe3-53ed0364756e.png). As we can see, the mesh is refined near the two walls (the hub/shroud) to get a y+ of 1 and here starts my issue. . While I can retrieve a correct y+ near the blade, I have trouble to get a y+ lower than 65 near the walls. At y+ = 65, SU2 runs and converges to some results. For y+ < 65, SU2 raises a segmentation fault at this location: ; ![segfault](https://user-images.githubusercontent.com/24920252/140756620-db3ed08f-05cd-4811-b037-642a221ea501.png); Here are the results of the gdb analysis. It seems that the seg faut comes from the Giles BC part of the initialisation of the turbo data containers. Especially those lines (CEulerSolver.cpp line 435-436). `CkInflow[iMarker].resize(nSpanWiseSections,2*geometry->GetnFreqSpanMax(INFLOW)+1) = complex<su2double>(0.0,0.0);`. `CkOutflow1[iMarker].resize(nSpanWiseSections,2*geometry->GetnFreqSpanMax(OUTFLOW)+1) = complex<su2double>(0.0,0.0);`. but I don't understand why. ![issue](https://user-images.githubusercontent.com/24920252/140783485-0d856d2a-7353-468f-aeab-c78b742d8582.p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1429:550,test,test,550,https://su2code.github.io,https://github.com/su2code/SU2/issues/1429,1,['test'],['test']
Testability,"**Describe the bug**; Hello to everyone,; my research group and I found some differences in the computation of the skin friction coefficient between the JST and ROE schemes near the symmetry plane.; The difference is that when using the JST scheme, there is a gradient of the skin friction coefficient at the symmetry plane.; I expect that on the symmetry plane there would be no gradient. This issue is present only for the skin friction coefficient.; We found this difference for a straight wing, but we reproduced the same issue for the SU2 test case OneraM6.; <img src=""https://user-images.githubusercontent.com/53580993/101330251-ab855000-3872-11eb-90df-561ddfe3ed38.png"" width=""400"" height=""400""> <img src=""https://user-images.githubusercontent.com/53580993/101330317-be982000-3872-11eb-9b55-4fa87e55bef6.png"" width=""400"" height=""400"">. For the case of our straight wing, maybe it could be more clear, so here is the comparison for our case.; <img src=""https://user-images.githubusercontent.com/53580993/101330692-36fee100-3873-11eb-8638-827bc9008128.png"" width=""400"" height=""400""> <img src=""https://user-images.githubusercontent.com/53580993/101330706-3bc39500-3873-11eb-8d35-bc28fe432ffc.png"" width=""400"" height=""400"">. I think that there could be a problem on the symmetry plane boundary condition when using the JST scheme.; This issue is present since SU2 V6.2.0 until the latest release 7.0.8.; Thank you in advance for your help. **To Reproduce**; To reproduce the problem you can use the OneraM6 test case in the TestCases folder, just changing the scheme between ROE and JST. **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 20.04.1 LTS); - C++ compiler and version: gcc 9.3.0; - MPI implementation and version: mpich 3.3.2; - SU2 Version: from 6.2.0 to 7.0.8",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1125:544,test,test,544,https://su2code.github.io,https://github.com/su2code/SU2/issues/1125,3,"['Test', 'test']","['TestCases', 'test']"
Testability,"**Describe the bug**; Hi, ; 1. compile SU2 with debug flags and autodiff; 2. run /Testcases/coupled_cht/incomp_2d with SU2_CFD_AD; 3. segfault coming from `partial_sort` in CNearestNeighbor.cpp ll. 142-147. The actual segfault is down in the stl std::__adjust_heap 🤷 . The problem occurs with another CHT problem of mine but I suspect it is a related to multizone in general. The segfault does not occur when using `KIND_INTERPOLATION= RADIAL_BASIS_FUNCTION`. As I used only gcc I am not sure whether it might be an stl bug (or feature because the code is wrong) so trying with clang or intel might be worth a shot. I know I had this issue already quite some time ago but forgot about it. . If you know sth about it plz let me know 📣 👂 . **To Reproduce**; described above. **Desktop (please complete the following information):**; - OS: Manjaro and RHLES; - C++ compiler and version: gcc 5.3.0 and 10.2.0; - MPI implementation and version: 3.1.6 and 4.0.4; - SU2 Version: latest develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1123:82,Test,Testcases,82,https://su2code.github.io,https://github.com/su2code/SU2/issues/1123,1,['Test'],['Testcases']
Testability,"**Describe the bug**; Hi,all.; I encountered a failure when I was running a unit test. **To Reproduce**; Here are my reproduction steps; ```; mkdir build && cd build; meson ../ -Denable-tests=true; ninja -j16 -v; ninja test ; ```; This is the error message of the self-test use case.; ```; [0/1] Running all tests.; 1/1 Catch2 test driver FAIL 0.07s exit status 1; >>> MALLOC_PERTURB_=195 /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/UnitTests/test_driver; ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― ✀ ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; test_driver is a Catch v2.11.1 host application.; Run with -? for options. -------------------------------------------------------------------------------; SIMD DOUBLE; -------------------------------------------------------------------------------; ../UnitTests/Common/vectorization.cpp:71; ............................................................................... ../UnitTests/Common/vectorization.cpp:82: FAILED:; CHECK( t[1] == 7 ); with expansion:; 0.0 == 7. ===============================================================================; test cases: 19 | 18 passed | 1 failed; assertions: 75 | 74 passed | 1 failed. ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. Summary of Failures:. 1/1 Catch2 test driver FAIL 0.07s exit status 1. Ok: 0; Expected Fail: 0; Fail: 1; Unexpected Pass: 0; Skipped: 0; Timeout: 0. Full log written to /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/meson-logs/testlog.txt. ```. **Desktop (please complete the following information):**; - OS: linux-centos8-aarch64; -",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1331:81,test,test,81,https://su2code.github.io,https://github.com/su2code/SU2/issues/1331,6,['test'],"['test', 'tests']"
Testability,**Describe the bug**; I expect a restart file to be generated by running SU2. If I include Turbomachinery markers it is not generating a restart file. I am using the transonic_stator 2D case in the Testcases directory. **To Reproduce**; The config and mesh files can be found at: ; https://mailuc-my.sharepoint.com/:f:/g/personal/baigan_mail_uc_edu/EumoIwGRZqRChSZ8NvdQpyoBPgBXZpnS_xVrPDuzZYHkxA?e=SXJov7. One config file has Turbo markers and the other has Turbo markers commented. You just have to run the two config files and see the difference. **Desktop (please complete the following information):**; - OS: [ OpenSuse 15.1]; - C++ compiler and version: [g++ > 7]; - MPI implementation and version: [N/A]; - SU2 Version: [v7.0],MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/831:198,Test,Testcases,198,https://su2code.github.io,https://github.com/su2code/SU2/issues/831,1,['Test'],['Testcases']
Testability,"**Describe the bug**; I faced some non determinism in #1892 which I traced back to spurious values of walll roughness.; I tried running UB sanitizer and valgrind, the latter finds one memory error when accessing the flatner, but theres nothing while it's built.; The ndflatner unit test also fails on my machine, both in release and debug builds. Given the complexity of that class, and it only being used in one place, I just wrote alternative code.; @maxaehle can you investigate the issue?. **Desktop (please complete the following information):**; - ubuntu 22 + gcc + mpich (standard packages)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1893:282,test,test,282,https://su2code.github.io,https://github.com/su2code/SU2/issues/1893,1,['test'],['test']
Testability,"**Describe the bug**; I met an error while running the test case [centrifugal blade](https://github.com/su2code/SU2/tree/master/TestCases/turbomachinery/centrifugal_blade) which gives. ```; Error in ""void CConfig::SetConfig_Parsing(std::istream&)"": ; -------------------------------------------------------------------------; Line 139 MARKER_NRBC: invalid option name. Check current SU2 options in config_template.cfg.; Line 141 MIXING_PROCESS_TYPE: invalid option name. Check current SU2 options in config_template.cfg.; Line 155 MARKER_TURBO_PERFORMANCE: invalid option name. Check current SU2 options in config_template.cfg.; GRID_MOVEMENT: invalid option value YES. Check current SU2 options in config_template.cfg.; Line 172 GRID_MOVEMENT_KIND: invalid option name. Check current SU2 options in config_template.cfg.; Line 178 ROTATION_RATE_X: invalid option name. Check current SU2 options in config_template.cfg.; Line 178 ROTATION_RATE_Y: invalid option name. Check current SU2 options in config_template.cfg.; Line 178 ROTATION_RATE_Z: invalid option name. Check current SU2 options in config_template.cfg.; ```. **To Reproduce**; Another case that gives me the same problem is the [centrifugal stage](https://github.com/su2code/SU2/tree/master/TestCases/turbomachinery/centrifugal_stage) test case. **Desktop (please complete the following information):**; - OS: [Linux (Ubuntut 16.04 LTS)]; - C++ compiler and version: [g++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0]; - SU2 Version: [v7]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1086:55,test,test,55,https://su2code.github.io,https://github.com/su2code/SU2/issues/1086,4,"['Test', 'test']","['TestCases', 'test']"
Testability,"**Describe the bug**; I noticed I was converging to quite different solutions when MUSCL is on v. off for a much larger case I am doing using SU2 with SST-2003m, so I created a smaller 2D case to test out why this may be occurring. Below is a screenshot of one of the meshes, where the pinkish line indicates a value for an interface that I plot heat fluxes from. I have generated several meshes with increasing level of refinement from A to D. ![image](https://github.com/su2code/SU2/assets/116454159/4d04287e-b111-45b5-96dd-6b9cc5f18217). It appears that there may be either a misunderstanding on my part with the implementation of SST-V2003m w/ MUSCL, or that a bug exists in SU2 for it. I got very unusual and different results when using MUSCL vs. not. To further look into this, I also completed additional simulations using `KIND_TURB_MODEL=SA`, which got me much more reasonable-looking results. Please see the plots below:. ![image](https://github.com/su2code/SU2/assets/116454159/e5d80bbd-9bc2-4f3c-a6e2-bb5dfc43336b); ![image](https://github.com/su2code/SU2/assets/116454159/3804bdf1-7f99-4584-9683-cfbfd7dfa916). Lastly, here is the config file:; [config.txt](https://github.com/su2code/SU2/files/12155765/M6_LowRe.txt). Note that the ""MUSCL=ON"" in the plots indicate the solution for both `MUSCL_FLOW=YES` and `MUSCL_TURB=YES`. That is the only difference between config files. Also, I tried using `MARKER_RIEMANN`, `MARKER_OUTLET`, and `MARKER_SUPERSONIC_OUTLET` on the outlets with no success on fixing this discrepancy, so I believe it is not related to the boundary conditions. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [X] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [X] Updating to the newest version of SU2 (either develop, master, or th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2088:196,test,test,196,https://su2code.github.io,https://github.com/su2code/SU2/issues/2088,1,['test'],['test']
Testability,"**Describe the bug**; I'd like to use the FFD shape optimization feature of SU2. From a geometrical point of view the domain is very similar to the ""2 way mixing channel optimization"" tutorial example. I've therefore followed the steps of this tutorial and tested the mesh deformation with some dummy values. The result of the deformation can be seen here:; ![grafik](https://user-images.githubusercontent.com/42602495/211366671-1344820b-87f6-429f-b1d4-c396a6467440.png). The lower halve of the picture shows the original, undeformed mesh. The upper halve contains in green the original FFD box (ffd_box_0.vtk), in white the deformed FFD box and the deformed mesh (volume_deformed_0000.vtu) in blue/white. From the definition of the deformation I'd expect that the cells outside the FFD box to remain largely unchanged. Instead, here the largest deformations occur. Following the mixer-example the FFD information was added to the mesh by running SU2_DEF with a config file containing this information:; ```; %%%%%%%%%%%%%%% FFD definition %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; FFD_DEFINITION = (BOX, \; 0.012, 0.0005, 0.0,\; 0.080, 0.0005, 0.0,\; 0.080, 0.0035, 0.0,\; 0.012, 0.0035, 0.0 ); FFD_DEGREE= (4, 1, 0); FFD_CONTROL_POINT; DV_KIND = FFD_SETTING; DV_MARKER = (NS_Resonator_Wall, NS_ResonatorTip_Wall); DV_PARAM = (1.0); ```. This added the following info to the mesh:; ```; FFD_NBOX= 1; FFD_NLEVEL= 1; FFD_TAG= BOX; FFD_LEVEL= 0; FFD_DEGREE_I= 4; FFD_DEGREE_J= 1; FFD_BLENDING= BEZIER; FFD_PARENTS= 0; FFD_CHILDREN= 0; FFD_CORNER_POINTS= 4; 0.012 0.0005; 0.08 0.0005; 0.08 0.0035; 0.012 0.0035; FFD_CONTROL_POINTS= 20; 0 0 0 0.012 0.0005 -0.5; 0 0 1 0.012 0.0005 0.5; 0 1 0 0.012 0.0035 -0.5; 0 1 1 0.012 0.0035 0.5; 1 0 0 0.029 0.0005 -0.5; 1 0 1 0.029 0.0005 0.5; 1 1 0 0.029 0.0035 -0.5; 1 1 1 0.029 0.0035 0.5; 2 0 0 0.046 0.0006 -0.5; 2 0 1 0.046 0.0005 0.5; 2 1 0 0.046 0.0036 -0.5; 2 1 1 0.046 0.0035 0.5; 3 0 0 0.063 0.0007 -0.5; 3 0 1 0.063 0.0005 0.5; 3 1 0 0.063 0.0037 -0.5; 3 1 1 0.06",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1879:257,test,tested,257,https://su2code.github.io,https://github.com/su2code/SU2/issues/1879,1,['test'],['tested']
Testability,"**Describe the bug**; In #1104 I re-enabled the mesh quality output originally implemented in #778. In some cases the output for all 3 metrics is 0 in the domain and just on the boundary actual values are computed. If you know more, have hints feel free to join. Even an info if it runs works for your case might help cornering the problem. I haven't looked in depth into this but already wanted to open this such that you know :building_construction: . The output for the Quickstart for example is fine: :+1: ; ![image](https://user-images.githubusercontent.com/31306376/99533521-53130f00-29a6-11eb-8c01-b7951322740e.png). Testcases/incomp_navierstokes/bend in comparison exhibits the mentioned problem: :-1: ; ![image](https://user-images.githubusercontent.com/31306376/99533921-ea786200-29a6-11eb-9315-3aa3b9b0287b.png). **To Reproduce**; Run the bend Testcase using the additional config entry `VOLUME_OUTPUT= (MESH_QUALITY)`. **Desktop (please complete the following information):**; This already occurred on multiple platforms with different OS compiler and MPI version so I consider this to be actual problem in the code; - SU2 Version: latest develop [18 Nov 2020]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1109:624,Test,Testcases,624,https://su2code.github.io,https://github.com/su2code/SU2/issues/1109,2,['Test'],"['Testcase', 'Testcases']"
Testability,**Describe the bug**; Ninja build with -Denable-autodiff=true or -Denable-directdiff=true failed.; Build success with both option = false. **To Reproduce**; set either -Denable-autodiff=true or -Denable-directdiff=true and rebuild. **Desktop (please complete the following information):**; - OS: Macosx BigSur; - C++ compiler and version: clang-1200.0.32.29; - MPI implementation and version: OpenMPI 4.0.5 [via homebrew]; - SU2 Version: 7.1.0 [via git]. Attached are the logs for ninja build and meson.py --reconfigure; Cheers; bakakouhai. [ninja.log](https://github.com/su2code/SU2/files/6038336/ninja.log); [meson.log](https://github.com/su2code/SU2/files/6038339/meson.log),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1209:472,log,logs,472,https://su2code.github.io,https://github.com/su2code/SU2/issues/1209,5,['log'],"['log', 'logs']"
Testability,"**Describe the bug**; The rotating frame grid velocities are not set properly if used in 2-D. This is due to the error in SetRotationalVelocity routine in CGeomtery class (Cgeometry.cpp line 3881). The loop counter to find the Omega only goes upto nDim and in 2-D any rotation about the Z-axis is not considered. . **To Reproduce**; https://github.com/su2code/SU2/tree/master/TestCases/turbomachinery/centrifugal_blade is an example of a test case using rotating frame simulations in 2-D. Some of the turbomachinery options did not work for me, so I changed the turbomachinery markers to simple inlet and outlet just to get something running in this [config file.](https://github.com/su2code/SU2/files/4158761/centrifugal_blade.txt). The fix is fairly straightforward to change the loop counter to 3 in line 3891, but I wasn't sure if it is appropriate to make a PR for just this. Is it possible to add it into one of the existing ones?. Regards,; Akshay",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/860:376,Test,TestCases,376,https://su2code.github.io,https://github.com/su2code/SU2/issues/860,2,"['Test', 'test']","['TestCases', 'test']"
Testability,"**Describe the bug**; The values of Total CT, CQ and CMerit are computed by the flow solvers but are never written on the screen or the history file. These coefficients belong to the ROTATING_FRAME group and I am not able to find this in any of the output classes. I can see functions for aero coefficients and marker_analyze, is there an equivalent function for these coefficients?. **To Reproduce**; Any problem run with rotating frame. For ex, I have attached an example cfg file here; [centrifugal_blade.txt](https://github.com/su2code/SU2/files/4542348/centrifugal_blade.txt). The mesh is from TestCases/turbomachinery/centrifugal_blade/su2mesh.su2. - SU2 Version: v7.0.3",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/957:599,Test,TestCases,599,https://su2code.github.io,https://github.com/su2code/SU2/issues/957,1,['Test'],['TestCases']
Testability,"**Describe the bug**; This is something I have noticed multiple times when running with JST on RANS cases: If the CFL number is increased (>5) the density residual stops changing and the solution essentially stalls: . ![image](https://user-images.githubusercontent.com/30271435/65646456-01444400-dfb0-11e9-9c77-59d3458ceb92.png). I am digging into the JST implementation to see what is going on but haven't had any luck so far. Is this something that other people have experienced and have an explanation for? . Changing the LINEAR_SOLVER_PREC sometimes helps. In this flatplate case ILU does better but for other simulations this stalling will persist. Adaptive CFL will almost certainly mess things up (even #790). Sidenote, is there a rule of thumb for which LINEAR_SOLVER_PREC and LINEAR_SOLVER to use?. **To Reproduce**; This was on the basic flatplate test case that is available with the repo. Including files here for completeness ; [flatplate_jst_Sa.tar.gz](https://github.com/su2code/SU2/files/3655187/flatplate_jst_Sa.tar.gz). If the CFL is set to 5, the solution converges as expected. But if it is increased to 8, it stops moving. . **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 16.04.11); - C++ compiler and version: g++ (GCC) 5.4.0; - MPI implementation and version: openmpi 1.10.2; - SU2 Version: v6.2.0 develop. This has been replicated on a variety of systems",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/793:858,test,test,858,https://su2code.github.io,https://github.com/su2code/SU2/issues/793,1,['test'],['test']
Testability,"**Describe the bug**; We noticed that the symmetry boundary condition is showing a different behavior between sequential and parallel run. With the parallel run, the skin friction lines become parallel to the symmetry wall. We reproduced the issue on a naca0012 profile extruded between two slip walls. . ![cfx_comp1](https://user-images.githubusercontent.com/91184648/157279610-e77efb04-25bd-4b8c-a0cf-fd7bf16b2b1c.png); ![cfx_comp2](https://user-images.githubusercontent.com/91184648/157279687-843f22fe-ebe9-46b6-8338-485592922b31.png); ![cfx_comp3](https://user-images.githubusercontent.com/91184648/157279704-55fed159-ed8f-4252-a15d-28331ad6096c.png). The convergence of the residuals is not good and is similar between sequential and parallel run. The drag coefficient is also taking a long time to stabilize. During convergence, the skin friction lines are much more deviated at the cell touching the slip wall but it improves with iterations (for both sequential and parallel runs).; ![Residuals convergence](https://user-images.githubusercontent.com/91184648/157280437-d688be87-8833-405f-bed6-a2dc6c5ef338.png); ![Drag coefficient convergence](https://user-images.githubusercontent.com/91184648/157281353-99dc49b0-bbfa-49dc-8386-0fcc97dd8e85.png). **To Reproduce**; The extruded NACA0012 profile testcase is provided in this archive.; [naca0012.zip](https://github.com/su2code/SU2/files/8207844/naca0012.zip). **Desktop (please complete the following information):**; - OS: Linux Red Hat ELS 6.5; - C++ compiler and version: intel/2018.0.1; - MPI implementation and version: intelmpi/2018.0.1; - SU2 Version: v7.3.0. Thank you for looking at this issue and for any help.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1558:1304,test,testcase,1304,https://su2code.github.io,https://github.com/su2code/SU2/issues/1558,1,['test'],['testcase']
Testability,"**Describe the bug**; When I try to create the OpenMP version of the adjoint solver with the Intel compiler, I get compiler error in opdi. Here are a couple of examples, which are all of the same error type. ../SU2/externals/opdi/include/opdi/backend/macro/dataTools.hpp(39): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(parallelData). ../SU2/externals/opdi/include/opdi/backend/macro/implicitBarrierTools.hpp(41): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(implicitBarrierStack). ../SU2/externals/opdi/include/opdi/logic/omp/adjointAccessControl.hpp(47): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(currentAdjointAccess). **To Reproduce**; Use the following build options (I don't think the mkl option is needed, but that is what I used). export CXX=mpiicpc; export CC=mpiicc; export CXXFLAGS=""-O2""; export CFLAGS=""-O2"". ./meson.py ../Build_MKL --prefix=/home/whatever -Denable-mkl=true -Dcustom-mpi=true -Dwith-omp=true -Denable-autodiff=true -Denable-directdiff=true; ./ninja -C ../Build_MKL install. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - C++ compiler and version: Intel 19.1.0.166 20191121; - MPI implementation and version: Intel MPI; - SU2 Version: Latest develop version",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1273:628,log,logic,628,https://su2code.github.io,https://github.com/su2code/SU2/issues/1273,1,['log'],['logic']
Testability,"**Describe the bug**; When running under valgrind I get the following error message from valgrind for the develop version. ==46590== Invalid read of size 1; ==46590== at 0x8C9CA5: CConfig::SetConfig_Parsing(std::istream&) (CConfig.cpp:2836); ==46590== by 0x8C9A6E: CConfig::SetConfig_Parsing(char*) (CConfig.cpp:2797); ==46590== by 0x8A98F1: CConfig::CConfig(char*, unsigned short) (CConfig.cpp:205); ==46590== by 0x1BD2FA: main (SU2_CFD.cpp:99); ==46590== Address 0x5eae8ef is 1 bytes before a block of size 161 alloc'd. **To Reproduce**; Take e.g. the config file of rae2822 rans test case and run under valgrind. To avoid a lot of MPI warnings, create the sequential executable. **Desktop (please complete the following information):**; - Operating system: Ubuntu 18.04; - C++ compiler and version: g++ (GCC) 8.4.0; - MPI implementation and version: sequential; - SU2 Version: 7.0.5",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1040:582,test,test,582,https://su2code.github.io,https://github.com/su2code/SU2/issues/1040,1,['test'],['test']
Testability,"**Description of the issue**; Hello everybody,. I'm currently running the same testcase (Unsteady Euler ONERAM6 AoA=3deg) on two different versions of SU2 ( version 6.0.1 and 6.2.0). What I noticed is a different evolution in time of coefficients, Cl and Cd as given in the figure. Both the codes look at convergence and the input files (despite the version of the code being different) are the same. I attach the two screen outputs for comparison. I'm running SU2_CFD through the **parallel_computation.py** with only one core (using different number of cores doesn't affect the result anyway). <img width=""1437"" alt=""Screenshot 2019-11-28 at 17 53 42"" src=""https://user-images.githubusercontent.com/23583209/69819810-539c1e00-1208-11ea-902e-10f816f8a9ed.png"">. [Summary_singlecore_6_2_0.txt](https://github.com/su2code/SU2/files/3902407/Summary_singlecore_6_2_0.txt); [Summary_singlecore_6_0_1.txt](https://github.com/su2code/SU2/files/3906057/Summary_singlecore_6_0_1.txt). **To Reproduce the problem**; To reproduce the problem I attach the config files. The mesh is available in the repository: **mesh_ONERAM6_inv.su2**. Note: both versions are/were on the develop branches. Latest one is up to date. [config_CFD_6_0_1.txt](https://github.com/su2code/SU2/files/3906061/config_CFD_6_0_1.txt); [config_CFD_6_2_0.txt](https://github.com/su2code/SU2/files/3902415/config_CFD_6_2_0.txt). Im running the two versions on different machines with same specs:; **Details for the new version**; - OS: [Ubuntu 16.04.6 LTS]; - C++ compiler and version: [g++ 5.4.0]; - MPI implementation and version: [Open MPI 1.10.2]; - SU2 Version: [v6.2.0]. **Details for the old version**; - OS: [Ubuntu 16.04.6 LTS]; - C++ compiler and version: [g++ 5.4.0]; - MPI implementation and version: [Open MPI 1.10.2]; - SU2 Version: [v6.0.1]. Thank you and best,; Rocco",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828:79,test,testcase,79,https://su2code.github.io,https://github.com/su2code/SU2/issues/828,1,['test'],['testcase']
Testability,"**Description**. The Coupled RHT-CFD Adjoint test in the serial_regression_AD.py is designed to compare the calculated gradient file with a reference.; Yet the routine run_filediff() is never called for this test, only the routine run_test(). I tried to modify the reference file 'of_grad_cd.csv.ref' and checked it on my local machine. The output still shows that the test has passed, even though the calculated gradient file and the reference file are different. **To Reproduce**; Change the reference values in the file 'of_grad_cd.csv.ref' and run serial_regression.py. This might be a bug in this test. Can you check if the test fails in the automated tests if a wrong reference gradient file is used?. **Desktop (please complete the following information):**. OS: Linux - Fedora; C++ compiler and version: g++ (GCC) 11.2.1; MPI implementation and version: Open MPI; SU2 Version: 7.2.1. Thanks and Best Regards,; Thomas",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1431:45,test,test,45,https://su2code.github.io,https://github.com/su2code/SU2/issues/1431,6,['test'],"['test', 'tests']"
Testability,"**Disclaimer**; The performance numbers that follow are based on simple implementations of the methods, I do not claim any of my implementations or choice of methods to be optimal. If you know better speak up.; The data is from the case used to benchmark #753 (see #716), it is by no means an extensive collection of different grid types. I will share code and data with anyone who wants to repeat the tests on the condition they post detailed results. With that out of the way :) ... ### Green-Gauss Gradients. This is the plain edge-loop version of the code with boundary contributions omitted for simplicity:; ```C++; void computeGradients(size_t nEdge,; size_t nPoint,; size_t nVar,; size_t nDim,; const vector<pair<size_t,size_t> >& connectivity,; const Matrix& area,; const vector<double>& volume,; const Matrix& phi,; VectorOfMatrix& grad); {; grad.setZero();. for(size_t iEdge=0; iEdge<nEdge; ++iEdge); {; size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. for(size_t iVar=0; iVar<nVar; ++iVar); {; double phi_ave = 0.5*(phi(iPoint,iVar)+phi(jPoint,iVar));. for(size_t iDim=0; iDim<nDim; ++iDim); {; double flux = phi_ave*area(iEdge,iDim);. grad(iPoint,iVar,iDim) += flux;; grad(jPoint,iVar,iDim) -= flux;; }; }; }. for(size_t iPoint=0; iPoint<nPoint; ++iPoint); for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t iDim=0; iDim<nDim; ++iDim); grad(iPoint,iVar,iDim) /= volume[iPoint];; }; ```; This is more or less what SU2 does with minor differences on how the edges (`connectivity`) and area are stored, there is no vectorization nor easy way to make the loop parallel, this will be the reference for execution times. Suppose now that due to a perfect storm the number of variables is 4, here is how with a few pragmas we get gcc to vectorize:; ```C++; template<size_t nVar>; void computeGradients_impl(size_t nEdge,; size_t nPoint,; size_t nDim,; const vector<pair<size_t,size_t> >& connectivity,; const Matrix& area,; const vector<double>& volume,; con",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:245,benchmark,benchmark,245,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,2,"['benchmark', 'test']","['benchmark', 'tests']"
Testability,"**Is your feature request related to a problem? **; PR #1076 is missing documentation and a testcase. This is the PR where we check the mesh validity after a mesh deformation.; Specifically, we check if a mesh is self-intersecting. **Describe the solution you'd like**; A testcase explaining and showing the usage of the method (config options and description) should be added. ; A testcase is available from the thesis of L.Tol: https://pure.tue.nl/ws/portalfiles/portal/165889356/0894988_Tol.pdf",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1154:92,test,testcase,92,https://su2code.github.io,https://github.com/su2code/SU2/issues/1154,3,['test'],['testcase']
Testability,"**Is your feature request related to a problem? Please describe.**. I've noticed, that the flow solutions of SU2 have changed shortly before launch of version 7.0.0. In detail, I've computed an unsteady flow field around an airfoil with high angle of attack and its design sensitivities. Whereas the sensitivities computed with the old version exhibited periodic behaviour, the sensitivities computed with the new version explode and show somehow chaotic behaviour. ; Above sensitivities where computed using the `direct_differentiation.py` script. ; Naturally an adjoint sensitivity computation with the newer version fails to converge. In the older version, adjoint and direct sensitivities match. . By older version, I mean before commit https://github.com/su2code/SU2/commit/56ee75 ,; and by newer version, I mean after commit https://github.com/su2code/SU2/commit/714d7e9 . Somewhere between these two commits, the unit tests for (unsteady) flows have been adjusted, so I think this is where the change happened. . **Describe the solution you'd like**. Is it possible to provide an option to switch to the old behavior of SU2 in the sense of this flow computation?; What was the reason for this change, so to say?. I think @BeckettZhou and @talbring might be interested in this. . ** Files to reproduce the issue**. I've attached two .zip files. One contains the an example of the older code and one contains the example of the newer code. You can see that both .cfg files are identical. To emphasize the issue, compare the time dependent DRAG and D_DRAG of both history.csv files, that are provided. [01_older.zip](https://github.com/su2code/SU2/files/4493235/01_older.zip); [02_newer.zip](https://github.com/su2code/SU2/files/4493236/02_newer.zip). Kind regards,; Steffen",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/940:925,test,tests,925,https://su2code.github.io,https://github.com/su2code/SU2/issues/940,1,['test'],['tests']
Testability,"**Is your feature request related to a problem? Please describe.**. The currently implemented wall model for SA is not working robustly, and needs be modified for incompressible flows. The model has not been implemented for SST but can easily be implemented from the SA wall model. The SA wall model implementation in @EduardoMolina 'feature_WallModelLES' works well with almost no modifications and the implementation can be based on this version. . **Describe the solution you'd like**; Current implementation of wall model extended to incompressible flows for SA and SST.; Also needed is proper computation of y+ and wall shear stress in output files.; Validation test case replicating literature performance. Currently available to me: Buice & Eaton Diffuser. **Describe alternatives you've considered**; -. **Additional context**; I performed a preliminary implementation and validation for isothermal walls (Buice & Eaton diffuser).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1155:667,test,test,667,https://su2code.github.io,https://github.com/su2code/SU2/issues/1155,1,['test'],['test']
Testability,**Is your feature request related to a problem? Please describe.**; Initial inlet profile writing needs a regression test for mpi+ multiple inlets (e.g. primitive venturi case).; @danielmayer we can do this with your PR in place.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2002:117,test,test,117,https://su2code.github.io,https://github.com/su2code/SU2/issues/2002,1,['test'],['test']
Testability,"**Is your feature request related to a problem? Please describe.**; Per our previous discussion with @pcarruscag, [in this pull request](https://github.com/su2code/su2code.github.io/pull/99), the Barth-Jesperson flux limiter is actually implemented as the Venkat limiter. This ticket is noting the issue so it can be resolved at a later date. **Describe the solution you'd like**; An implementation of the BARTH_JESPERSON limiter. . **Describe alternatives you've considered**; Complete removal of the BARTH_JESPERSON limiter option to avoid confusion in the future. **Additional context**; To demonstrate the issue, we have modified the [flow over a cylinder test case](https://github.com/su2code/SU2/blob/master/TestCases/navierstokes/cylinder/lam_cylinder.cfg). The SLOPE_LIMITER_FLOW option was set to ""VENKATAKRISHNAN"" (VENKAT_LIMITER_COEFF = 0.0), ""BARTH_JESPERSON"", and ""NONE."" The results of these are shown below. Both VENKATAKRISHNAN and BARTH_JESPERSON yielded exactly the same results, and NONE was different. These results demonstrate that the limiters are implemented as described above. Flow over a cylinder test case. Results were extracted along a line at y=0 across the center of the domain:; This issue ticket written in collaboration with @tomtom252525; ![Limiter_Comp](https://user-images.githubusercontent.com/112184708/205416320-c5c45bcd-5157-4e3f-bfd1-2e9849e2a8e4.jpg); ![Momentum_Comp](https://user-images.githubusercontent.com/112184708/205416327-7eb3b01c-2eff-4f5a-953c-80cdc1820ef2.jpg)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1841:660,test,test,660,https://su2code.github.io,https://github.com/su2code/SU2/issues/1841,3,"['Test', 'test']","['TestCases', 'test']"
Testability,"**Is your feature request related to a problem? Please describe.**; Split the temporal and spatial discretization method in solver class. . **Describe the solution you'd like**; Now the time-stepping method functionality is still part of the solver class, which means that for each new solver the same logic of time-stepping needs to be defined once more. Most of the time, the definition is abundant because the logic is almost the same for every equation as long as you already get the spatial residual. . One can control which solver to use the corresponding time-stepping method just in `integration_structure.cpp` rather than define the function `ImplicitEuler_Iteration` again in the solver class. Because the temporal discretization can be independent to some extent from the spatial discretization method. In that way, the methods would be more general for various situations.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/784:302,log,logic,302,https://su2code.github.io,https://github.com/su2code/SU2/issues/784,2,['log'],['logic']
Testability,"**Is your feature request related to a problem? Please describe.**; This is more a question. Has anybody tried to use the parallel binary IO for large files, i.e. larger than 2 Gb? Especially for the reading of the restart files I expect problems, as MPI_Type_indexed uses standard ints for computing the offsets. **Describe the solution you'd like**; A test, or a confirmation from somebody, to check if parallel binary IO of large files works fine. **Describe alternatives you've considered**; None. If large files give problems we should consider alternative constructions with MPI IO that do work. I expect that people will run into this limit soon (if not already now). **Additional context**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/696:354,test,test,354,https://su2code.github.io,https://github.com/su2code/SU2/issues/696,1,['test'],['test']
Testability,"**Is your feature request related to a problem? Please describe.**; When building the AD version of SU2 with the Intel compiler a lot of warnings are given. Most of these warnings are of the type. warning #2196: routine is both ""inline"" and ""noinline"". The files where the warnings come from are; externals/codi/include/codi/tapes/modules/tapeBaseModule.hpp; externals/codi/include/codi/tapes/chunkVector.hpp; externals/codi/include/codi/tools/data/jacobian.hpp. The total number of warnings is roughly 3000, so any other information is very difficult to pick up. **Describe the solution you'd like**; Remove either the inline or noline, if possible. **Describe alternatives you've considered**; We can ignore the warning, if you think it is not a relevant one. However, I cannot judge that. **Additional context**; I can provide more information, e.g. the entire log file of the build process.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1087:864,log,log,864,https://su2code.github.io,https://github.com/su2code/SU2/issues/1087,1,['log'],['log']
Testability,"**Observed behaviour**; Thread sanitizer tests in the CI pipeline fail across PRs, e.g. #2158, with errors along the lines; ```; FATAL: ThreadSanitizer: unexpected memory mapping 0x7d81770ae000-0x7d8177500000; ```. **Background and possible causes**. There is some incompatibility between sanitizers and high degrees of address space layout randomization (https://github.com/google/sanitizers/issues/1716), it seems to be triggered by a combination of too recent kernel and/or too old LLVM and affects also github runners (https://github.com/actions/runner-images/issues/9491). **Possible fixes**. From what I understand in https://github.com/actions/runner-images/issues/9491 the corresponding parameters will be adapted in the runner, but it seems that there is also a workaround at the level of the workflow (https://github.com/openvswitch/ovs/commit/fa0dfa18d5344c82bc8387b4f79f4257a59d6f58).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2241:41,test,tests,41,https://su2code.github.io,https://github.com/su2code/SU2/issues/2241,1,['test'],['tests']
Testability,"**The Bug**; In 2D test cases, (I tested an unsteady RANS flow), setting the option VOLUME_OUTPUT = VORTEX_IDENTIFICATION has no effect. This means, the output field ""vorticity"" is not written to the .vtk (or other output) file. Checking the source code, i thing that this is caused by the following lines of code in `src/output/CFlowCompOutput.cpp.`, Line 404 : . ` if (nDim == 3) { ; `; `AddVolumeOutput(""VORTICITY_X"", ""Vorticity_x"", ""VORTEX_IDENTIFICATION"", ""x-component of the vorticity vector""); ` ; `AddVolumeOutput(""VORTICITY_Y"", ""Vorticity_y"", ""VORTEX_IDENTIFICATION"", ""y-component of the vorticity vector"");`; `AddVolumeOutput(""Q_CRITERION"", ""Q_Criterion"", ""VORTEX_IDENTIFICATION"", ""Value of the Q-Criterion"");; }`. Then, in 2D, we have only `VORTICITY_Z` written to the VolumeOutput. I believe, that somewhere else, the executable must fail by writing `VORTICITY_Z` due to missing `VORTICITY_X`. **To Reproduce**; Execute `direct_differentiation.py -f 0_naca0012.cfg -n 4` to repoduce the issue.; Files are attached below.; [reproducible_vorticity_issue.zip](https://github.com/su2code/SU2/files/4493025/reproducible_vorticity_issue.zip). **Desktop:**; - OS: Manjaro 19.0.2 ; - C++ compiler and version: gcc 9.3.0; - MPI implementation and version: mpirun (Open MPI) 4.0.3; - SU2 Version: 9.0.2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/939:19,test,test,19,https://su2code.github.io,https://github.com/su2code/SU2/issues/939,2,['test'],"['test', 'tested']"
Testability,"**This PR was created to trigger the CI pipeline, no merging intended.**. I noticed differences between results of regression tests, when running them on my system and by the Github CI pipeline. Let me check whether according to the CI pipeline, the wall roughness was actually always 0 before my bugfix in #1286. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1292:126,test,tests,126,https://su2code.github.io,https://github.com/su2code/SU2/pull/1292,2,['test'],"['test', 'tests']"
Testability,"*If this is a general question or difficulty building/using the code, please open a ""Discussion"" instead.*. **Describe the bug**; This might be linked to issue #2086; I am building SU2 with both Terminal and using a build system called EasyBuild.; On terminal everything went seamlessly. The issue is on EasyBuild. The meson configs are not pulling in the external files. I had to clone it recursively. None of the following options were activated in my tests, so the external files should have been added . ```; --no-codi do not download own copy of CoDiPack; --no-medi do not download own copy of MeDiPack; --no-opdi do not download own copy of OpDiLib; --no-mpp do not download own copy of Mutationpp; --no-coolprop do not download own copy of CoolProp; --no-mel do not download own copy of MEL; --no-mlpcpp do not download copy of MLpCpp; ```. **HPC; - OS:Centos7; - C++ compiler and version: [e.g., g++ (GCC) 12.2]; - MPI implementation and version: [e.g., OpenMPI 4.1.4]; - SU2 Version: 7.0.6",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2363:454,test,tests,454,https://su2code.github.io,https://github.com/su2code/SU2/issues/2363,1,['test'],['tests']
Testability,", over that the linear solvers will struggle.; Practical issues with the feature:; - Requires ad-hoc scripting to use with an optimizer, so far the L-BFGS-B from Scipy together with a penalty formulation has served me well. Technical issues with the implementation:; - Scalability. A filter is applied to the densities to avoid numerical issues such as hinges, and checkerboards, and to ensure minimum feature size and mesh independence. My implementation, although parallel, requires all ranks to get a copy of global information, namely the connectivity and the element centroid coordinates. The ranks get this in compact format, so it is not super expensive (100MB per rank per million hexahedrons) and definitely not an issue for the problem size the linear solvers and preconditioners can currently handle.; - Output. Currently this is done at every iteration of the adjoint solver into a file (only the master rank writes the file) mainly because I did not see an easy way to output element values using the output class, everything else is computed at the nodes. So not perfect but a nice feature to have (I think). Feedback is welcome on any of these issues (or others you see!). If all goes well (with my PhD) I will address these issues as I plan to use this for large-ish problems. I added an example case to explain the new options, the large files will be in the Testcases repo. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/595:1596,Test,Testcases,1596,https://su2code.github.io,https://github.com/su2code/SU2/pull/595,2,"['Test', 'test']","['Testcases', 'test']"
Testability,", unit testing allows the testing; > of small bits of behavior, ideally using isolated bits of code. It is not; > intended to replace validation testing or formal verification tests.; > Instead, it serves a unique purpose. Consider the three following use cases:; >; > - You're developing a new feature, and you want to test it to see if; > it works. You could do a full simulation, but that takes a lot of time and; > computing power. You want to check if your new behavior behaves as you; > suspect before you throw a lot of resources at it.; > - You submit a PR and discover that one of the regression tests has; > failed. But...why? You know that something is broken, but its hard to track; > down what broke. You want more granular test coverage that can demonstrate; > what broke.; > - You are fixing a very small bug. You know that you should prove that; > your bug fix worked, but it doesn't seem logical to dedicate an entire; > validation case to one small bug fix. You want to write a small test for a; > small fix.; >; > In all of these cases, unit testing fills a unique role. Unit testing; > increases time spent in development, but decreases the amount of time spent; > in bug-fixing and maintaining.; >; > For more information, see this relevant Stack Exchange question.; > <https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>; > What do I propose?; >; > My research group at UT Austing has implemented a unit testing framework; > on our branch, which we're happy with. Some choices were arbitrary, and; > some choices were made based on our development environment. Those choices; > may be different for other groups. Here's what we have done:; >; > The unit testing framework is compiled and run using autotools. For more; > information on autotool's setup, see their documentation; > <https://www.gnu.org/software/automake/manual/html_node/Tests.html>.; > Since autotools is the build system for SU2, this involves min",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:3060,test,test,3060,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,1,['test'],['test']
Testability,"- Adding multipoint design capability based on the Stability Functions python script example. I can add an example in test cases (if you are interested).; - Adding some consistency in CL, CD, CSF vs. Clift, CDrag, CSidyForce in the python scripts.; - Detecting a bug in fluid interface and updating custom obj. function capability",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/406:118,test,test,118,https://su2code.github.io,https://github.com/su2code/SU2/pull/406,1,['test'],['test']
Testability,"- Not mission critical but in the raw logs each line has some lengthy timestamp. Is it possible to get rid of that?. `2019-10-29T14:12:02.9434263Z sim_vals (computed): -1.293870, 4.141024, -0.002288, 0.008868`; - Can you say a few words about resources we get from github? #parallelcores/processes, time-per-month. ; - Sidenote: It is actually quite nice that build and run are in separate logs",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/806#issuecomment-547502029:38,log,logs,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/806#issuecomment-547502029,2,['log'],['logs']
Testability,"-------------------- Surface grid deformation ----------------------; Performing the deformation of the surface grid. ----------------------- Volumetric grid deformation ---------------------; Performing the deformation of the volumetric grid. # FGMRES residual history. # Residual tolerance target = 4.14044e-11. # Initial residual norm = 15.8102. ```; 0 1; 50 2.17385e-06; 100 1.08998e-10; ```. # FGMRES final (true) residual:. # Iteration = 105: |res|/|res0| = 3.50764e-11. Non-linear iter.: 1/1. Linear iter.: 105. Min. area: 4.1019e-08. Error: 5.54565e-10. ----------------------- Write deformed grid files -----------------------; Merging grid connectivity.; Merging grid coordinates.; Writing volume mesh file.; Writing surface mesh file.; Writing .su2 file.; Adding any FFD information to the SU2 file. Completed in 1.039217 seconds on 1 core. ------------------------- Exit Success (SU2_DEF) ------------------------. [image]https://cloud.githubusercontent.com/assets/5167760/9294056/7be9439a-440f-11e5-862f-742246ef1565.png; SU2_DEF: output when deforming with all markers included:. ------------------------- Surface grid deformation ----------------------; Performing the deformation of the surface grid.; No surface deformation (scaling, rotation, or translation). ----------------------- Volumetric grid deformation ---------------------; Performing a translation of the volumetric grid.; Translational displacement: (1, 0, 0). ----------------------- Write deformed grid files -----------------------; Merging grid connectivity.; Merging grid coordinates.; Writing volume mesh file.; Writing surface mesh file.; Writing .su2 file.; Adding any FFD information to the SU2 file. Completed in 0.716938 seconds on 1 core. as far as I can tell the regression test failure is the same as for the current develop branch; I'll update this pull request whenever that is resolved. —; Reply to this email directly or view it on GitHubhttps://github.com/su2code/SU2/pull/187#issuecomment-131578218.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/187#issuecomment-132065067:3272,test,test,3272,https://su2code.github.io,https://github.com/su2code/SU2/pull/187#issuecomment-132065067,1,['test'],['test']
Testability,"--; Flux | Roe-FDS | L2ROE; Gradient | Least Squares Cell Based | WEIGHTED_LEAST_SQUARES; Spatial Discretization Flow | Third-order MUSCL | MUSCL_FLOW; Spatial Discretization Turbulence | First-order Upwind | MUSCL_NO. <!--EndFragment-->; </body>. </html>; The CFL number is set constant value. Some high-resolution grid-level results are missed because I don't have enough computational resources.; Here is Result. T3A : . ![image](https://user-images.githubusercontent.com/50565314/180910576-f6ebcaca-eafe-47bf-8e97-e5ea90033991.png); ![image](https://user-images.githubusercontent.com/50565314/180909770-0bceb6e3-2b1a-4112-bfd8-51b45d7ea082.png); ![image](https://user-images.githubusercontent.com/50565314/180909897-2eb4d123-68f5-4e0b-b09a-c201c7a5d8ad.png); ![image](https://user-images.githubusercontent.com/50565314/180909936-f5766fd8-a5b3-428e-9ed4-bfe43de9f911.png). T3A-: ; The gird test result is not converged, but It's enough to compare the model. ![image](https://user-images.githubusercontent.com/50565314/180910790-a68881b3-9be6-45c4-aab3-333665d90798.png); ![image](https://user-images.githubusercontent.com/50565314/180910812-12dd3fa9-7c04-4319-845e-b37628752b2c.png); ![image](https://user-images.githubusercontent.com/50565314/180910818-4cdb2b80-d0fd-4303-9f25-d3b2f6b4fe6b.png); ![image](https://user-images.githubusercontent.com/50565314/180910823-88a0d2bd-3439-4318-a749-44867e259436.png). NLF : ; AoA 0 case is shown. In this case, the flow separation occurred on the upper surface. So, not fully converged, and I show only Fine level grid results according to the number of iterations. ; ![image](https://user-images.githubusercontent.com/50565314/180913288-e8d3bc9c-f153-4889-a2ea-d2527f81f897.png); Zoom to the separation region : ; ![image](https://user-images.githubusercontent.com/50565314/180913656-410185d5-2466-41a6-b074-6f0dbeb8afea.png). Now I'm testing on effect of the numerical schemes and other options like CONV_NUM_METHOD_FLOW, MUSCL_TURB, CFL, and CFL_ADAPT.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1194936824:3438,test,testing,3438,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1194936824,1,['test'],['testing']
Testability,". It uses docker containers for building and running the tests (https://hub.docker.com/r/su2code/build-su2 and https://hub.docker.com/r/su2code/test-su2, respectively, based on Ubuntu18.04/gcc7.4/OpenMPI2). This has several advantages over the current (Travis based) system:. - Using the containers you can run the building/testing environment locally on your machine. You can even download the compiled binaries produced on github and run them locally to further debug problems.; - It is faster and more flexible. Compiling and running all tests requires ~1h since a lot of things run in parallel now (e.g. building the base, reverse AD and forward AD binaries). There is potential to further speed things up by splitting the test case scripts into several files. All of that requires minimal work. Unfortunately there is no caching using ccache at the moment, but it is likely that github introduces this feature mid of november. ; - Additional tests like unit tests can make use of the same docker containers and can be easily set up by creating a new workflow file.; - We can easily add a deployment step to automatically create releases and/or nightly builds. **Note:** the linked docker containers are **only** for development/testing purposes. Hence we cannot give any support in this regard. For production use it is recommended to use singularity containers. But: the docker containers can be used as basis layers for singularity. I will get back with more information on that topic. ~~I had to change regression test values of two cases since apparently they are compiler dependent.~~ I changed it to the same versions as we have on Travis. There will be some documentation on how to use the containers locally soon. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/806:1092,test,tests,1092,https://su2code.github.io,https://github.com/su2code/SU2/pull/806,2,['test'],['tests']
Testability,". To add new output to screen or history people just copied what was there and modified it to suit there own needs. This resulted in a lot of if/switch statements and was hard to read ... one reason for this was that we have not really used an object oriented structure for the output. Despite rearranging everything into separate classes, here is a non-exhaustive list of new features and changes:. - Fully customizable screen, history and volume output; - New multizone screen output; - New flexible way so set convergence criteria (any residual and/or coefficient can be used as a monitor); - Consistent naming of iteration variables (TIME_ITER, OUTER_ITER, INNER_ITER); - Consistent file naming options (RESTART_FILENAME, SOLUTION_FILENAME); - On-the-fly writing of all visualization files; - New Singlezone and Multizone drivers are now used by default. Note that this is a very big change. And i apologize for any inconvenience and troubles that this might cause. I can only maintain features covered by the regression tests. So please test it with your cases and let me know if anything is missing (especially in the output). . I will create documentation for all the new features soon. If you want to test it already, please let me know, I need some feedback. . User Documentation on the changes:; https://su2code.github.io/docs/Solver-Setup; https://su2code.github.io/docs/Custom-Output; https://su2code.github.io/docs/Guide-to-v7/. ## Related Work; #715 is already included in this PR and should be merged before. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724:1214,test,tests,1214,https://su2code.github.io,https://github.com/su2code/SU2/pull/724,1,['test'],['tests']
Testability,". You see pressure contour lines:; ![compr_half_cyl_p](https://user-images.githubusercontent.com/31306376/53201756-19707100-3625-11e9-9cb6-8a62fcd6787e.JPG). 2. Incompressible half cylinder in channel, navier-stokes, no turb-model, velocity inlet pressure outlet. You see zebra shaded pressure contour lines:; ![p_incomp_2d](https://user-images.githubusercontent.com/31306376/53201787-2e4d0480-3625-11e9-8537-f1ca5ef39f9d.JPG). 3. 3D incompressible pin setup, SST turb model. You see Pressure-contour lines but more important are the velocity vectors. In the current code they have a normal component and therefore a (non-irrelevant) flux over the symmetry boundary:; ![closeup_vectors](https://user-images.githubusercontent.com/31306376/53201975-9c91c700-3625-11e9-95b7-8337cc159a23.jpg). Additional to that I tested in rotated domains such that the symmetry plane does not coincide with one of the axis. I tested the Navier-Stokes ONERA-M6 with SA turb-model and although this PR achieves a considerable lower velocity in symmetry-normal direction than current develop, it is still quite large. I suspect it is due to general ""bad"" convergence (2-3 orders of magnitude) of that case. ; So, I encourage everyone that has a well converging compressibe 3D case with symmetry plane to test that or to send it to me. Every regression test with symmetry plane in it will fail, so I didn't change the values yet. From what I have seen, only these are failing. I will correct these (fml) and commit if everyone is alright with the implementation otherwise. . Let me know if you have any comments/suggestions etc., or if you tested with your cases and can confirm (or not) that this PR is correct (that would be awesome). Cheers, Tobi. ## Related Work; None known to me. ## PR Checklist; I will check the warnings based on travis output and report. No new testcase is necessary in my opinion. Edit 25.02.: I checked the warnings for a serial and parallel build using the log-files of travis, comparing mine w",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/657:2849,test,tested,2849,https://su2code.github.io,https://github.com/su2code/SU2/pull/657,1,['test'],['tested']
Testability,"... well ... let me quickly stop the air strike on your position :D; somehow it managed to exactly fail the streamwise periodic stuff (as they were added more recently then it makes sense); I did not check check the release management 👍 so thanks for the info. > There was zero chance of breaking any testcases with those changes. I thought that as well, but I wouldn't be the first time I thought that and was proven otherwise ... :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1249#issuecomment-811453771:301,test,testcases,301,https://su2code.github.io,https://github.com/su2code/SU2/pull/1249#issuecomment-811453771,1,['test'],['testcases']
Testability,"..654ba3dfc207e25c31da9c09860224ad4044a610), which was the original branch merged in #724. . Unfortunately, given that during this time both #753 and #774 were merged, the tests are failing now. Particularly, the disc_adj_fsi case runs into a segfault in `CDiscAdjSolver::ExtractAdjoint_CrossTerm_Geometry`, when trying to execute ; `geometry->node[iPoint]->GetAdjointCoord(Solution_Geometry);`. . I believe this is related to the changes to the index based recording introduced in #774, as the code was running before into the same problem in `CDiscAdjSolver::ExtractAdjoint_CrossTerm`, and now goes beyond this point having changed the Get routine into `direct_solver->GetNodes()->GetAdjointSolution_intIndexBased(iPoint,Solution);`. Currently, there is no `GetAdjointCoord_intIndexBased` or similar available, and its implementation requires some constructs for the indices. Therefore, I would like to ask for support from @oleburghardt and @pcarruscag to make this work with their changes. ## Related Work; #724 involuntarily removed the discrete adjoint FSI cases from the regression tests.; Branch [fix_discadjfsi](https://github.com/su2code/SU2/tree/fix_discadjfsi) successfully recovers the functionality removed.; #774 introduced relevant changes to the adjoint solver that are making.; #753 was merged and, although I tried to adapt to it, I can't guarantee it's working correctly. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803:1478,test,tests,1478,https://su2code.github.io,https://github.com/su2code/SU2/pull/803,2,['test'],"['test', 'tests']"
Testability,".2019.09.005); 2.) Wally - A full refactoring of the AUSM schemes within NEMO; 3.) Removal of AUSMPW+ scheme; ; ## Related Work; This work is a follow-up and a cleaner version of the work in the branch **feature_NEMO_AUSMPLUSM**. I will delete both branches after merge. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary. ### Benchmark. I have conducted a comparison between the AUSM and AUSM+M for a 2D axisymmetric non-equilibrium flow over a cylinder with a 0.1 meter diameter and a freestream of M=24, P = 10.23 N and T = 224.5 K. ![image](https://user-images.githubusercontent.com/29612207/192250118-eb074187-3002-468a-8406-b01047c790bd.png); The left image represents the converged 2nd order solution using AUSM+M and the right image using the standard AUSM scheme. The new AUSM+M scheme enables to get rid of the pressure oscillations near the stagnation area. ![image](https://user-images.githubusercontent.com/29612207/192250632-85b64454-c54c-4815-8664-f72fc17d705d.png); Temperature at the stagnation line (solid line is AUSM+M and dashed line is AUSM). ![image](https://user-images.githubusercontent.com/29612207/192250763-ee3b96db-b42f-4ebe-a256-bcb9043ecb24.png); ![image](https://user-images.githubusercontent.com/29612207/192250910-2fae95b2-eea9-4b78-96d3-0f80bb02486e.png); Pressure at the stagnation line and clo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1773:1217,Benchmark,Benchmark,1217,https://su2code.github.io,https://github.com/su2code/SU2/pull/1773,1,['Benchmark'],['Benchmark']
Testability,".; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find more in-depth documentation there. ### I still don't understand unit tests. Where can I learn more?. I highly recommend reading at least one of these two books:. + ""Working Effectively with Legacy Code,"" by Michael Feathers; + ""Modern C++ Programming with Test-Driven Devel",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:2718,test,test,2718,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,1,['test'],['test']
Testability,".; Some people wrote code that tested almost nothing. And it would get; through code review that way. Eventually, I added coverage analysis to the check in that exposed this; practice that gave a false assurance that things were ok. More when I can think a bit more on this and get to a real keyboard!. Pat. On Wed, Jun 5, 2019 at 1:50 PM Juan Jose Alonso <jjalonso@stanford.edu>; wrote:. > Clark,; >; > Thanks for putting this idea out there. In my experience, unit testing; > has been an intrinsic part of the the modus operandi in many multi-physics; > codes at DoE and has been well worth the additional effort. In cases where; > it makes sense (as described by Clark and in the Stack Exchange discussion); > I would advocate for using it moving forward. There may also be some; > issues that arise multiple times in existing code where a retroactive; > application of unit testing may also make sense. I am copying Pat Miller,; > formerly with DoE, who may have more experience on whether such unit; > testing approaches were useful/worth the investment in some major codes he; > worked on.; >; > Best,; >; > Juan; >; >; > On Jun 4, 2019, at 2:14 PM, Clark Pederson <notifications@github.com>; > wrote:; >; > I propose adding a unit-testing framework and unit-tests to SU2. After; > chatting with @economon <https://github.com/economon>, I've decided to; > move the discussion here to get additional input.; > What is unit testing?; >; > For those not familiar with unit testing, unit testing allows the testing; > of small bits of behavior, ideally using isolated bits of code. It is not; > intended to replace validation testing or formal verification tests.; > Instead, it serves a unique purpose. Consider the three following use cases:; >; > - You're developing a new feature, and you want to test it to see if; > it works. You could do a full simulation, but that takes a lot of time and; > computing power. You want to check if your new behavior behaves as you; > suspect before you throw ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:1582,test,testing,1582,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,1,['test'],['testing']
Testability,".; Thank you for all your support and work in this.; But I do have one query, is anytime the SU2 team worked on averaging mean; flow data (or even perturbations) to avoid huge memory issues with large; LES dumped files in SU2? I mean we are doing averaging but for a large; number of files locally offline is challenging so we are wondering if you; have anything like that during the simulation SU2 can dump averaged mean; flow for a number of iterations?; Please advise if any work or anything closer worked upon which we can use; or take it from there.; Thank you in advance for your help!. On Wed, May 27, 2020 at 8:32 PM Eduardo Molina <notifications@github.com>; wrote:. > Hi Monika,; >; > We are in the V&V process of a new wall model LES implementation. Also, I; > took the opportunity to start fixing the RANS wall function since it will; > share the same code structure with the WMLES part, i.e. replace the wall; > shear stress in the NS fluxes.; >; > We didn’t extensively test the RANS wall functions, only very limited test; > cases. It will be great if you could run your own cases using the following; > branch:; >; > https://github.com/su2code/SU2/tree/feature_WallModelLES <; > https://github.com/su2code/SU2/tree/feature_WallModelLES>; >; > Please let me know if you need additional help and looking forward to hear; > from you.; >; > Best,; >; > Eduardo; >; >; >; > > On 27 May 2020, at 11:30, monika1387 <notifications@github.com> wrote:; > >; > >; > > Sure Juan! I would like to. Because I was running on RANS but I am; > working; > > on LES to make this wall functions work which is not working either.; > > Please let us know how we can support and work to get this working for; > LES; > > simulation (wall models in SU2).; > >; > > On Wed, May 27, 2020 at 12:29 PM Juan J. Alonso <; > notifications@github.com>; > > wrote:; > >; > > > Monika,; > > >; > > > There is a chance we could work together on this…Eduardo Molina; > (copied); > > > co-advised a short project last year ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-648243104:1071,test,test,1071,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-648243104,2,['test'],['test']
Testability,"/21182966/28308831-b937bf76-6ba7-11e7-9108-e8a2ab959b74.png). Then I noticed a difference in SENS_GEO (which is the second term of the upper equation, right?) between compressible and incompressible. . ![image](https://user-images.githubusercontent.com/21182966/28310143-bb28c42a-6bab-11e7-8c14-8409b6b12027.png). So if the scale is adjusting current step size the step of dC and SENS_GEO represents the second term, then the SENS_GEO would change when the scale is changed. But this is not the case for incompressible and compressible. . In short, the only noticeable change, due to scaling, occurs in deformation folder of DSN_002. But this is after the optimization step, which is really confusing. Scaling adjusts the current step size and because it can not find a sufficient decrease it is halving the dv_value. But then one should expect different values in the adjoint folder for different scale factors, right?. I hope you can use this information and can tell me whether it is a correct behavior of the optimizer. I should also note that I did not make use of constraints, just as in the test case. I read that the optimizer will switch from optimization procedure. I think this should not matter because of the test case. . I attached also the configure files (compressible (working, scale= 0.01) and incompressible (not working, scale =0.01)) and the mesh file, which is in both cases the same file. [compressible_cfg.txt](https://github.com/su2code/SU2/files/1155421/compressible_cfg.txt); [incompressible_cfg.txt](https://github.com/su2code/SU2/files/1155427/incompressible_cfg.txt); [mesh_300_su2.txt](https://github.com/su2code/SU2/files/1155430/mesh_300_su2.txt). I hope I provide enough information so that one can clarify the behavior of the optimizer. I also appreciate if one can tell me which variables have to be kept in mind. I really want to learn from this and if more information is needed, I really do not mind to provide it. Many thanks in advance!. Floris van der Schuur",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/409#issuecomment-316018103:3638,test,test,3638,https://su2code.github.io,https://github.com/su2code/SU2/issues/409#issuecomment-316018103,2,['test'],['test']
Testability,"/user-images.githubusercontent.com/46273732/74617122-a3003500-50f9-11ea-9a0f-1db78a9d4d04.png); ![Tt comparsion](https://user-images.githubusercontent.com/46273732/74617123-a3003500-50f9-11ea-9f86-decee9d097b4.png); ![Turb comparsion](https://user-images.githubusercontent.com/46273732/74617124-a4316200-50f9-11ea-8e10-bc7dcbb0e8c6.png). I am also attaching my python plotting results in case someone wants to reproduce the graphs and/or look at the equations in detail. [plotting_script.txt](https://github.com/su2code/SU2/files/4217388/plotting_script.txt). Please note that the inlet file was created with random fluctuating values to ensure correct inlet interpolation is happening. Some values and patterns may look unrealistic. Additionally, note that Akima can extrapolate values as well but will display a warning if it is doing so. Linear will only do interpolation and will exit if the inlet file does not have the specific radius data. However, it will show on the console which radius data is missing so the user can add it. Also, currently, the flow should be in z-direction only. I don't know how to find the flow direction through any built-in method in SU2 during run. If you can tell me that I can update the code to support any flow direction. During interpolation, it will display that flow direction must be in z-direction to avoid any mistake by the user. Thanks,; Aman. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/815:4869,test,test,4869,https://su2code.github.io,https://github.com/su2code/SU2/pull/815,1,['test'],['test']
Testability,"0507725_polimi_it/EUswl9Jw0XhIuozrOjXqX6sBdscM30lRZ7mwMZcr5anvyA?e=41db5P. One recent result is the application of the transition model to the Sickle wing test case for -2.67° of the angle of attack. SST+LM2015; ![Results](https://user-images.githubusercontent.com/43813346/195149921-6e85c1c7-2fc8-47e9-b935-246081ea17fd.png). SA+LM2015; ![Results](https://user-images.githubusercontent.com/43813346/195152304-e81c92f3-35da-4c50-9cd8-e5528c644cde.png). The lower surface is represented on the left, whereas the upper surface is on the right. At the moment the wind tunnel walls have not been taken into account. This can explain the spanwise shift of the transition with respect to the experimental results. More results are incoming. . Please, any suggestions on how to clean up the code or on how to make it more efficient are very well accepted. More comments to the code will be added in the following days. Especially to the declaration of some functions. I know that it is not the most good-looking code right now but I preferred uploading it now such that others can use it even if it is not really clean. . ## Related Work; Work is related to the PR #1751. It extends it to SA turbulence model and includes cross-flow effects (LM2015) and turbulence index computations. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1788:4326,test,test,4326,https://su2code.github.io,https://github.com/su2code/SU2/pull/1788,1,['test'],['test']
Testability,"06821/51894695-c4846680-23a8-11e9-87f5-35041d71fee4.gif). For the latter case I haven’t yet rotated the inner circle, because there are some missing features for dynamic meshes in the incompressible solver. The previous test case for steady-state flows has been added. One for unsteady flows will be enabled once the new output is in place, as the current output structure makes the regression scripts fail. The previous, however, opened a can of worms, as there were some physics based calls in the parent transfer structure (e.g. `GetnSlidingStates()`, `SetSlidingState()` and `SetnSlidingStates()`) that made the incompressible CHT cases run into problems. . So I’ve also taken the chance to move some initialization and some calls to the specific physics-based transfer structures, making use of the polymorphism of the transfer code. This way the parent class remains opaque to the physics. At the same time, I cleaned up some long-time unused routines, made the Broadcast_Data the default for zone interfaces, and removed the MATCHING_MESH option as it is just a particular case of Nearest Neighbour. ## Related Work. - Complements the sliding interface feature by @LaSerpe in #389 by adding the corresponding functions to the incompressible flow solver. - Removes MATCHING_MESH option as discussed with @pcarruscag in #597. - Removes some compilation warnings due to unused variables. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/638:3324,test,test,3324,https://su2code.github.io,https://github.com/su2code/SU2/pull/638,1,['test'],['test']
Testability,"1. Initially I was trying to restart the unsteady FSI from the steady flow solution over the initially undeformed structure. I noticed that the case diverged when I tried to use 2nd order dual time-stepping and the case worked when I used 1st order dual time-stepping.; 2. Then I encountered a new problem when I tried to restart the case from the FSI solutions after 1900 time steps and it diverged. I tried the restart files of time iteration 1890 and it still diverged without iterations. ; 3. Surprisingly, when I tried to restart using the restart file from time iteration 10, iterations started without an immediate divergence. Please advise on what could be going wrong.; Thank You; Sangeet. I have attached the case folder with all required restart files.; [testing.zip](https://github.com/su2code/SU2/files/6464073/testing.zip)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1287:766,test,testing,766,https://su2code.github.io,https://github.com/su2code/SU2/issues/1287,2,['test'],['testing']
Testability,"2-440f-11e5-8681-b68318da0ce7.png). SU2_DEF output when only ""airfoil"" marker included:. ``` c++; ------------------------- Surface grid deformation ----------------------; Performing the deformation of the surface grid. ----------------------- Volumetric grid deformation ---------------------; Performing the deformation of the volumetric grid. # FGMRES residual history; # Residual tolerance target = 4.14044e-11; # Initial residual norm = 15.8102; 0 1; 50 2.17385e-06; 100 1.08998e-10; # FGMRES final (true) residual:; # Iteration = 105: |res|/|res0| = 3.50764e-11. Non-linear iter.: 1/1. Linear iter.: 105. Min. area: 4.1019e-08. Error: 5.54565e-10. ----------------------- Write deformed grid files -----------------------; Merging grid connectivity.; Merging grid coordinates.; Writing volume mesh file.; Writing surface mesh file.; Writing .su2 file.; Adding any FFD information to the SU2 file. Completed in 1.039217 seconds on 1 core. ------------------------- Exit Success (SU2_DEF) ------------------------; ```. ![image](https://cloud.githubusercontent.com/assets/5167760/9294056/7be9439a-440f-11e5-862f-742246ef1565.png); SU2_DEF: output when deforming with all markers included:. ``` c++; ------------------------- Surface grid deformation ----------------------; Performing the deformation of the surface grid.; No surface deformation (scaling, rotation, or translation). ----------------------- Volumetric grid deformation ---------------------; Performing a translation of the volumetric grid.; Translational displacement: (1, 0, 0). ----------------------- Write deformed grid files -----------------------; Merging grid connectivity.; Merging grid coordinates.; Writing volume mesh file.; Writing surface mesh file.; Writing .su2 file.; Adding any FFD information to the SU2 file. Completed in 0.716938 seconds on 1 core.; ```. as far as I can tell the regression test failure is the same as for the current develop branch; I'll update this pull request whenever that is resolved.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/187#issuecomment-131578218:2039,test,test,2039,https://su2code.github.io,https://github.com/su2code/SU2/pull/187#issuecomment-131578218,1,['test'],['test']
Testability,"2357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; 14368 Vertex ; 3 Boundary Vertices ; 58189 Tetrahedra ; 1 Triangles ; 0 Edges ; 1 Surface(s) ; % Output subdom.meshb Mesh ndimn=3, mpoin=14368, melem=58189, mface=1; Corners 0 Required 0 ; ## ERROR : TETRAHEDRON 2 BOUNDARY FACE 1 2; 9 IS MISSING ; ## ERROR : TETRAHEDRON 4 BOUNDARY FACE 3 7; 2324 IS MISSING ; ···; ## ERROR: FEFLO.A: 16740 BOUNDARY FACES ARE MISSING ; CHECK YOUR MESH . ## FATAL ERROR: FEFLOA: INITIAL OR CURRENT MESH HAS AN INCONSISTANT TOPOLOGY . Thank you for using feflo.a . ```; Which in turn creates an invalid `amg.su2` mesh in the `adap/ite0 folder`, which triggers the fault.; I'm a bit puzzled as the domain is very simple, and the `log.out` is going well (with no complains of SU2 about any negative volume or trias with wrong normals). The mesh is only made of TRIAS and TETRAS, it should work in principle.; Am I missing something in the setup / mesh? I know you have little control on the `amg.out`, but maybe there some special hint that I'm missing. . Btw the final error in the terminal is but I think the problem arises before reaching `flo.csv` file:; ```; Traceback (most recent call last):; File ""/usr/local/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/usr/local/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/usr/local/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/usr/local/bin/SU2/run/amg.py"", line 464, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.csv' -> 'flo_ini.csv'. ```; Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-623572280:2217,log,log,2217,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-623572280,1,['log'],['log']
Testability,"4/180909770-0bceb6e3-2b1a-4112-bfd8-51b45d7ea082.png); ![image](https://user-images.githubusercontent.com/50565314/180909897-2eb4d123-68f5-4e0b-b09a-c201c7a5d8ad.png); ![image](https://user-images.githubusercontent.com/50565314/180909936-f5766fd8-a5b3-428e-9ed4-bfe43de9f911.png). T3A-: ; The gird test result is not converged, but It's enough to compare the model. ![image](https://user-images.githubusercontent.com/50565314/180910790-a68881b3-9be6-45c4-aab3-333665d90798.png); ![image](https://user-images.githubusercontent.com/50565314/180910812-12dd3fa9-7c04-4319-845e-b37628752b2c.png); ![image](https://user-images.githubusercontent.com/50565314/180910818-4cdb2b80-d0fd-4303-9f25-d3b2f6b4fe6b.png); ![image](https://user-images.githubusercontent.com/50565314/180910823-88a0d2bd-3439-4318-a749-44867e259436.png). NLF : ; AoA 0 case is shown. In this case, the flow separation occurred on the upper surface. So, not fully converged, and I show only Fine level grid results according to the number of iterations. ; ![image](https://user-images.githubusercontent.com/50565314/180913288-e8d3bc9c-f153-4889-a2ea-d2527f81f897.png); Zoom to the separation region : ; ![image](https://user-images.githubusercontent.com/50565314/180913656-410185d5-2466-41a6-b074-6f0dbeb8afea.png). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751:4641,test,test,4641,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751,1,['test'],['test']
Testability,"8372309 fixed the `MPI_Allgatherv` function used in a non-MPI build. Before, it ignored the displacement (which is 1 for the index arrays). This was revealed by experiments with the CI pipeline in #1292. Now the tests succeed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1286#issuecomment-850382531:212,test,tests,212,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-850382531,1,['test'],['tests']
Testability,"88-5 for SST and https://doi.org/10.2514/6.1992-439 for SA. Validation test cases will be uploaded in the following days. . The most important results can be found in the pdf of my presentation at the SU2 Conference 2022. https://polimi365-my.sharepoint.com/:b:/g/personal/10507725_polimi_it/EUswl9Jw0XhIuozrOjXqX6sBdscM30lRZ7mwMZcr5anvyA?e=41db5P. One recent result is the application of the transition model to the Sickle wing test case for -2.67° of the angle of attack. SST+LM2015; ![Cf](https://user-images.githubusercontent.com/43813346/203034422-5a7fb987-208c-4da6-8282-5c912e671dbc.png). SA+LM2015; ![Cf](https://user-images.githubusercontent.com/43813346/203034460-7719f3ce-6674-4281-83fd-82ce064c452a.png). The lower surface is represented on the left, whereas the upper surface is on the right. At the moment the wind tunnel walls have not been taken into account. This can explain the spanwise shift of the transition with respect to the experimental results. More results are incoming. . Please, any suggestions on how to clean up the code or on how to make it more efficient are very well accepted. . ## Related Work; Work is related to the PR #1751. It extends it to SA turbulence model and includes cross-flow effects (LM2015) and turbulence index computations. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1810:3196,test,test,3196,https://su2code.github.io,https://github.com/su2code/SU2/pull/1810,1,['test'],['test']
Testability,": 100% (6/6), done.; remote: Total 81 (delta 45), reused 46 (delta 44), pack-reused 31; Unpacking objects: 100% (81/81), done.; From https://github.com/su2code/SU2; * branch develop -> FETCH_HEAD; 0811066f4..cf91b7cf4 develop -> origin/develop; Merge made by the 'recursive' strategy.; Common/include/blas_structure.hpp | 2 +-; Common/include/matrix_structure.hpp | 2 +-; Common/src/adt_structure.cpp | 11 +-; Common/src/blas_structure.cpp | 27 ++--; Common/src/fem_geometry_structure.cpp | 2 +-; Common/src/geometry_structure.cpp | 131 ++++++++++++++-----; Common/src/matrix_structure.cpp | 14 +-; Common/src/wall_model.cpp | 4 +-; SU2_CFD/src/output_structure.cpp | 2 +-; SU2_IDE/Xcode/SU2_CFD.xcodeproj/project.pbxproj | 166 ++++++++++++------------; SU2_IDE/Xcode/SU2_DEF.xcodeproj/project.pbxproj | 144 ++++++++++++++++----; SU2_IDE/Xcode/SU2_DOT.xcodeproj/project.pbxproj | 130 +++++++++++--------; SU2_IDE/Xcode/SU2_GEO.xcodeproj/project.pbxproj | 74 ++++++++++-; SU2_IDE/Xcode/SU2_MSH.xcodeproj/project.pbxproj | 124 ++++++++++++++++--; SU2_IDE/Xcode/SU2_SOL.xcodeproj/project.pbxproj | 62 +++++----; TestCases/parallel_regression.py | 26 ++--; TestCases/parallel_regression_AD.py | 4 +-; TestCases/serial_regression.py | 24 ++--; TestCases/serial_regression_AD.py | 2 +-; 19 files changed, 659 insertions(+), 292 deletions(-); Jairos-Mac-mini:SU2 jaspe$ git push origin feature_force_read_target_on_AD; To https://github.com/su2code/SU2.git; ! [rejected] feature_force_read_target_on_AD -> feature_force_read_target_on_AD (fetch first); error: failed to push some refs to 'https://github.com/su2code/SU2.git'; hint: Updates were rejected because the remote contains work that you do; hint: not have locally. This is usually caused by another repository pushing; hint: to the same ref. You may want to first integrate the remote changes; hint: (e.g., 'git pull ...') before pushing again.; hint: See the 'Note about fast-forwards' in 'git push --help' for details.; Jairos-Mac-mini:SU2 jaspe$",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-438029731:2736,Test,TestCases,2736,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-438029731,4,['Test'],['TestCases']
Testability,": `ON|OFF`; * `SU2_ENABLE_PARMETIS`: `ON|OFF`, only available when `SU2_ENABLE_MPI` is `ON`; * `SU2_PARMETIS_CPPFLAGS`: flags to pass when compiling Parmetis; * `SU2_ENABLE_TECIO`: `ON|OFF`; * `SU2_TECIO_CPPFLAGS`: flags to pass when compiling Tecio and TecioMPI; * `SU2_TECIOMPI_CPPFLAGS`: flags to pass when compiling TecioMPI, requires `SU2_ENABLE_MPI`. There is an additional variable that is recognized by CMake scripts - `DEBUG`, turning it `ON` enables additional `STATUS` messages, mainly to check that correct include directories, compile definitions and linked libraries were set up correctly. The remaining options like install location and compilers are handled by CMake. Tested this on Ubuntu with CMake 3.15.5 and everything except `pySU2ad` wrapper compiles. Haven't tested on earlier CMake versions so there might be bugs with them but they should be easy to resolve if any. I have based the CMake scripts on autotools scripts so there's no Pastix/Blas options yet. [FindBLAS](https://cmake.org/cmake/help/latest/module/FindBLAS.html), [FindPastix](https://github.com/eigenteam/eigen-git-mirror/blob/master/cmake/FindPastix.cmake), [FindScotch](https://github.com/eigenteam/eigen-git-mirror/blob/master/cmake/FindScotch.cmake). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814:4264,test,test,4264,https://su2code.github.io,https://github.com/su2code/SU2/pull/814,1,['test'],['test']
Testability,":. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On ever",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:1157,test,tested,1157,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['test'],['tested']
Testability,"; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the build machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the build machine: c++ ld.bfd 2.30; None of 'CC' are defined in the environment, not changing global flags.; None of 'CFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity testing C compiler: gcc; Is cross compiler: False.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:3288,test,testing,3288,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['test'],['testing']
Testability,"; ```; -Denable-cuda=true; ```; And activate the functions using the following Config File Option; ```; ENABLE_CUDA=YES; ```. ## NOTE ON IMPLEMENTATION. I've decided to go with a single version of the code where the CPU and GPU implementations co-exist in the same linear solver and can be disabled or switched using a combination of Meson and Config File options. This is why I have defined three classes - one over-arching class that is named CExecutionPath that has two child classes - CCpuExecution and CGpuExecution. These child classes contain the correct member function for each path - CPU or GPU functioning. . All of this could also be easily achieved with an if statement that switches between the two - but that particular implementation will access and run the statement for each call. In our case once a Matrix Vector Product object is created, it will immediately know whether to use CPU or GPU mode of execution. . Recommendations are most welcome to improve or make this implementation better. ## PR Checklist. Warning Levels do come (only at level 3) but they are all of the following type. ```; style of line directive is a GCC extension; ```. The documentation for compiling with CUDA needs to be added by forking the SU2 site repo and adding the relevant changes to it? Or do I need to contact someone to change things on the site itself?. DOxygen Documentations and config template are all updated. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2346:2528,test,test,2528,https://su2code.github.io,https://github.com/su2code/SU2/pull/2346,1,['test'],['test']
Testability,"; dep_targets.extend(self.guess_external_link_dependencies(linker, target, commands, internal)); File ""F:\suflow\resources\softwares\SU2\externals\meson\mesonbuild\backend\ninjabackend.py"", line 2907, in guess_external_link_dependencies; search_dirs, static_patterns); File ""F:\suflow\resources\softwares\SU2\externals\meson\mesonbuild\backend\ninjabackend.py"", line 2848, in guess_library_absolute_path; trial = CCompiler._get_file_from_list(self.environment, trial); File ""F:\suflow\resources\softwares\SU2\externals\meson\mesonbuild\compilers\mixins\clike.py"", line 1036, in _get_file_from_list; if p.is_file():; File ""C:\Users\zeng\AppData\Local\Programs\Python\Python37\lib\pathlib.py"", line 1387, in is_file; return S_ISREG(self.stat().st_mode); File ""C:\Users\zeng\AppData\Local\Programs\Python\Python37\lib\pathlib.py"", line 1183, in stat; return self._accessor.stat(self); OSError: [WinError 123] 文件名、目录名或卷标语法不正确。: 'C:\\ProgramData\\chocolatey\\lib\\mingw\\tools\\install\\mingw64\\bin\\..\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\libC:\\Program Files (x86)\\Microsoft SDKs\\MPI\\Lib\\x64\\msmpi.a'. I noticed that other people on Github have also raised this issue, but they are on the second step `ninja -C build install` when I got this error on the first step `py meson.py build`. so the solve solutions are not work for me. For issue #1471 I found this silimar proplem between 7.3.1. thanks！. **To Reproduce**; Please provide a config file and mesh for a minimal example that recreates the problem.; [meson-log.txt](https://github.com/su2code/SU2/files/12335918/meson-log.txt); [meson-info.json.txt](https://github.com/su2code/SU2/files/12335924/meson-info.json.txt). **Desktop (please complete the following information):**; OS: [win11 ]; C++ compiler and version: [ g++ (GCC) 8.1.0]; MPI implementation and version: [Microsoft MPI v10.1.2]; SU2 Version: [v7.5.1]. **Other informations:**; the full console output : [console.txt](https://github.com/su2code/SU2/files/12335982/console.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2106:2678,log,log,2678,https://su2code.github.io,https://github.com/su2code/SU2/issues/2106,2,['log'],['log']
Testability,; mkdir build && cd build; meson ../ -Denable-tests=true; ninja -j16 -v; ninja test ; ```; This is the error message of the self-test use case.; ```; [0/1] Running all tests.; 1/1 Catch2 test driver FAIL 0.07s exit status 1; >>> MALLOC_PERTURB_=195 /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/UnitTests/test_driver; ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――― ✀ ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; test_driver is a Catch v2.11.1 host application.; Run with -? for options. -------------------------------------------------------------------------------; SIMD DOUBLE; -------------------------------------------------------------------------------; ../UnitTests/Common/vectorization.cpp:71; ............................................................................... ../UnitTests/Common/vectorization.cpp:82: FAILED:; CHECK( t[1] == 7 ); with expansion:; 0.0 == 7. ===============================================================================; test cases: 19 | 18 passed | 1 failed; assertions: 75 | 74 passed | 1 failed. ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――. Summary of Failures:. 1/1 Catch2 test driver FAIL 0.07s exit status 1. Ok: 0; Expected Fail: 0; Fail: 1; Unexpected Pass: 0; Skipped: 0; Timeout: 0. Full log written to /home/spack-stage/root/spack-stage-su2-7.1.1-bqiorkxs5upvexredf2f5ips46h2nruy/spack-src/spack-build/meson-logs/testlog.txt. ```. **Desktop (please complete the following information):**; - OS: linux-centos8-aarch64; - C++ compiler and version: gcc version 8.3.1 20191121 (Red Hat 8.3.1-5) (GCC); - MPI implementation and version: none; - SU2 Version: 7.1.1,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1331:1340,test,test,1340,https://su2code.github.io,https://github.com/su2code/SU2/issues/1331,6,"['assert', 'log', 'test']","['assertions', 'log', 'logs', 'test', 'testlog']"
Testability,"<img width=""431"" alt=""Screenshot 2021-02-15 165247"" src=""https://user-images.githubusercontent.com/60700515/107968189-553d3780-6fae-11eb-88a1-e3fee844f05b.png"">. The error was spotted while updating the old python routines to the new drivers/mesh solver. In particular, the test case in py_wrapper folder, related to a flat plate plunging up and down, showed a different coefficient of lift as computed using the old and new mesh solver. I attach here the comparison of the coefficient of lift history for three cases:. * The legacy mesh solver, after the modification in this PR; * The new mesh solver; * The legacy mesh solver, before the modification. The first two are completely coincident",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1199#issuecomment-779313505:274,test,test,274,https://su2code.github.io,https://github.com/su2code/SU2/pull/1199#issuecomment-779313505,1,['test'],['test']
Testability,"=1/3 gives a third-order approximation to the derivative at the node (the value used in the Piperno limiter to achieve 4th order dissipation). The reasons for these additions are; - The Piperno limiter is implemented in Inria's Wolf solver and seems to be used in a lot of their mesh adaptation work (see these references for [Euler](https://hal.inria.fr/hal-02378738v2/document) and [RANS](https://hal.inria.fr/tel-01962318/file/these_archivage_3570223.pdf)); - Some preliminary tests with the Piperno limiter have converged solutions on triangulated BL meshes that @jayantmukho and I couldn't get to converge with other limiters in SU2 (e.g. triangulated DSMA661 meshes from TMR); - The MUSCL parameter exists in other solvers (FUN3D, CFL3D, Wolf) and is used by the NASA codes for many of the TMR cases (e.g. CFL3D uses 1/3 and FUN3D uses 1/2 for the DSMA661 case). Further testing still needs to be done on the effect of the MUSCL parameter with other limiters, but leaving the value as default won't affect any of the test cases. ## Relevant config parameters; Piperno limiter:; ```; SLOPE_LIMITER_FLOW= PIPERNO; ```; MUSCL parameter:; ```; % Parameter to control upwinding in MUSCL extrapolation; % Kappa = 1/3 for Piperno limiter, Default = 0 otherwise; MUSCL_KAPPA= 0.0; ```. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1050:2554,test,test,2554,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050,1,['test'],['test']
Testability,"> * From the history output it seems that the maximum CFL value is not being reached, even for small CFL values the update seems to stop one step before max. There was a small factor applied to keep it above and below the CFL min and max (1.001, 0.999), respectively. But I have removed that, since it is not necessary. Btw, I have added the ability to print the min/max time step, and min/max/avg CFL to the screen by adding MIN_DELTA_TIME, MAX_DELTA_TIME, MIN_CFL, MAX_CFL, AVG_CFL to the SCREEN_OUTPUT. > * I still see some residual oscillations with high CFL values (100-1000), I think the issue is that despite the oscillations the linear solver still converges fine, and so the reduction never kicks in. There are reduction checks for both the linear and nonlinear residuals, but they likely still need some tuning (the factors were just empirical from my tests). I am also finding in my tests that if I am having trouble with a particular RANS case, sometimes it is most effective to turn off the adaption and go for a fixed CFL of 250, 500, or even 1000, if stable (don't forget you may need NUM_METHOD_GRAD_RECON= LEAST_SQUARES for that to be stable).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-541376224:862,test,tests,862,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-541376224,2,['test'],['tests']
Testability,"> * Not mission critical but in the raw logs each line has some lengthy timestamp. Is it possible to get rid of that?; > ; > `2019-10-29T14:12:02.9434263Z sim_vals (computed): -1.293870, 4.141024, -0.002288, 0.008868`. I don't think so. Maybe they'll add that in the future. > * Can you say a few words about resources we get from github? #parallelcores/processes, time-per-month. 20 concurrent jobs. There is no limitation in the time-per-month for public repositories. Every job has 2 cores, 7GB of memory and 14GB of disk space. Source:; https://help.github.com/en/github/automating-your-workflow-with-github-actions/about-github-actions#usage-limits; https://help.github.com/en/github/automating-your-workflow-with-github-actions/virtual-environments-for-github-actions#supported-virtual-environments-and-hardware-resources",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/806#issuecomment-547509688:40,log,logs,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/806#issuecomment-547509688,1,['log'],['logs']
Testability,"> * the badge does not work [here](https://github.com/su2code/SU2/tree/new_testing_system) the badge is not rendered and the link is dead. I get to a `Not Found` page. The badge is for the develop branch. But the tests never ran so far for that branch, thats why there is no badge yet. > * My only docker-knowledge is literally an 8min [youtube](https://www.youtube.com/watch?v=pGYAg7TMmp0) video I just watched so I might have gotten s.th. wrong, but: where are the Dockerfiles (probably small textfiles again) for build and test? The two images on hub.docker.com are already ... well images, so fairly large. The beauty of travis was also that the .travis.yml file contains everything necessary to build and run in a rather straightforward to understand manner -> and therefore one was able to quickly change things here and there. Are those Dockerfiles intended to go [here](https://github.com/su2code/build-action)? The Dockerfiles should go into some sort of version control right?. I am gonna remove the build_action repo. I created that because I thought it would be needed. But its not anymore. Good point about the files. Actually forgot to add them to the repo :+1: The nice thing is the only thing executed in the container is a bash script that you can run also without docker, in case you need to.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/806#issuecomment-547363908:213,test,tests,213,https://su2code.github.io,https://github.com/su2code/SU2/pull/806#issuecomment-547363908,2,['test'],"['test', 'tests']"
Testability,"> ; > ; > @CatarinaGarbacz thanks for pushing your changes! I have left some comments and questions.; > ; > A bigger question I have is if there is a more general way to deal with SU2_INTERP, making it usable for all of develop. Just answering @WallyMaier comment, this should be possible by changing the file **fem_interpolation_structure.cpp** and change the function call:. output = COutputFactory::CreateOutput(**NEMO_NAVIER_STOKES**, input_config_container[ZONE_0],nDim);. So we have to replace **NEMO_NAVIER_STOKES** to something like **config[val_iZone]->GetKind_Solver()**.; ; I have not tested this change, but I tested changing it for NAVIER_STOKES, and it was able to interpolate the baseline SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1160#issuecomment-760110555:596,test,tested,596,https://su2code.github.io,https://github.com/su2code/SU2/pull/1160#issuecomment-760110555,2,['test'],['tested']
Testability,"> ; > ; > @TobiKattmann any idea about what may be happening with the unsteady cht tutorial?. Oh man I am so sorry, It was already failing in #1290 that was merged 3 days ago by me. So it is not your problem @Nicola-Fonzi . . Let me explain how that happened (not to justify that or anything): I wanted to move the unsteady CHT case to the tutorial.py file because it is, in fact, a tutorial. As I didn't have a PR open that time I put that into #1226 because it fit into the PR-scope. The PR was not worked on ever since so I now thought I just squeeze it into #1290 to have that covered.; The testcase was not failing in #1226 so I cherry-picked that into #1290 and obviously didn't check if it still works. Code Factor was always giving me red-crosses for all the commits so I didn't pay much attention to that :( 👎 . I apologize again and will fix that asap and see what is going on",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1295#issuecomment-859532720:595,test,testcase,595,https://su2code.github.io,https://github.com/su2code/SU2/pull/1295#issuecomment-859532720,1,['test'],['testcase']
Testability,"> ; > ; > Found a bug where I get a deadlock for a big case while writing. Have to look into it to see whether its a problem on our cluster or in the code. If someone could test the vtu/vtm output on a big case (> 32 cores), that would be also very helpful. I don't have these problems. I ran the coupled_cht/incomp_2d case on 32 and 56 cores (28 cores/node) without any issues.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/845#issuecomment-576555730:173,test,test,173,https://su2code.github.io,https://github.com/su2code/SU2/pull/845#issuecomment-576555730,1,['test'],['test']
Testability,"> ; > ; > Hi Lennaert, I've un-commented the items 'added a testcase' and 'added documentation'. We can use the testcase that you've worked on, and we can use one of your presentations as documentation, but it needs to be put somewhere. With respect to the test case and documentation: I have tried to find the best location to put this, but I could not find this. How can this be done best?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1076#issuecomment-741601970:60,test,testcase,60,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-741601970,3,['test'],"['test', 'testcase']"
Testability,"> ; > ; > I'll adapt one of the existing Testcases to use this feature. Well that was a lie. I thought it would be a good idea to adapt the 2D cht streamwise periodic case but I forgot that the used mesh is used for a streamwise periodic primal, FD and DA case as well as HeatTransfer BC Testcase (and that is a bit of work tbh). And for the periodic BC I had to change the mesh (adding new markers). As we do not have a single standalone (always run in a CHT setup) heat-equation Testcase, I went ahead and cut out the solid zone only and made that a Testcase. I already merged the gmsh geo and .su2 over at su2code/Testcases/pull/76 . If this is not liked I can of course do sth different. Note that the new Testcase takes ~2s to complete its 750 iterations until convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1382#issuecomment-927735843:41,Test,Testcases,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382#issuecomment-927735843,6,['Test'],"['Testcase', 'Testcases']"
Testability,"> ; > ; > Thanks for that @dkavolis, I will put all that in a memory allocation toolbox as it may be useful somewhere else. Where in boost did you get it from so I can reference it?; > We will need a volunteer to test it on Mac and Win32, I do not have access to any of those platforms.; > ; > Is the aligned_alloc from stdlib OK for Win64?. `std::aligned_alloc` is C++17 addition but MSVC does not have it (https://developercommunity.visualstudio.com/solutions/473365/view.html), it didn't work with MinGW as well. Have a look at https://github.com/boostorg/align, in `detail` folder. On windows, the aligned memory has to be freed by `_aligned_free` instead of `free` due to old runtime implementation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/813#issuecomment-554401239:213,test,test,213,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-554401239,1,['test'],['test']
Testability,"> ; > ; > That's really strange: The hybrid AD testcase `discadj_incomp_turb_NACA0012_sst` was ok after commit [c68cf13](https://github.com/su2code/SU2/commit/c68cf13552bc1412b98bda281a92f0b4bd4799ba), then I changed the stored residuals of unrelated testcases in [9d8f194](https://github.com/su2code/SU2/commit/9d8f194eeb4523440b51b3ff4c08018492974198) and the testcase fails... I'll run clang-format now, let's see what happens ;). I had a similar thing over at the flamelet branch and a re-run of the regression tests solved that :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1346#issuecomment-898880576:47,test,testcase,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-898880576,4,['test'],"['testcase', 'testcases', 'tests']"
Testability,"> ; > ; > When the tests have run, I'll ignore this annoying CodeFactor test and merge, right?. 👍 Yep, I guess this `Complex code` without any further detail of codeFactor is a bug or sth",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1222#issuecomment-792577785:19,test,tests,19,https://su2code.github.io,https://github.com/su2code/SU2/pull/1222#issuecomment-792577785,2,['test'],"['test', 'tests']"
Testability,"> > > Hi @sun5k, could you please add also the configuration files to reproduce these results? I would try to run these simulations too with my implementation of the transition model.; > > > Thank you in advance!; > > ; > > ; > > Hi @rois1995 Of course! However, I'm still under testing, so I can't guarantee the result if the numerical scheme or the other options are changed. Which configuration file would you want?; > > By any chance, are you implementing or developing a transition model? Can you tell me what model you are willing to use if it's a model implementation? My next goal is to implement the AFT model or the k-w-gamma model, but I'm trying to implement a k-w-gamma model because it seems like the AFT model is being implemented by the other developer.; > ; > If you could send me the config files for the T3A, T3A- and NLF test cases it would be awesome!; > ; > I have implemented the same model as yours, the LM model, in parallel to you 'cause I needed it for some simulations. I also tried implementing the same version but related to the SA turbulence model, however it still is bothering me that I cannot seem to get good results on it.; > ; > If you want, I also tried the prolate spheroid test-case with good results. If you need I can give the configs and the meshes. The only thing about this test-case is that it is more related to the cross-flow transition, thus it needs to be implemented, which I think I'll do in these days.; > ; > I think that the k-w-gamma model is the way to go right after the implementation of the LM model since it has lots of equations in common. Do you think that you need another class for it or you will write on the same classes that you have already built (like the CTransLMSolver)?. The test case(T3A, T3A-, and NLF-0416) configuration files were uploaded to my git repository. Here is the [link](https://github.com/sun5k/SU2/tree/develop/TestCases/transition ). Suggestions for the prolate spheroid test-case is appreciated. However, my t",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1201919830:279,test,testing,279,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1201919830,2,['test'],"['test', 'testing']"
Testability,"> > Hi @rois1995 any progress? Would be very interesting to add this to develop, looking forward to using it actually.; > ; > Hi @bigfooted, unfortunately I do not have enough time/computational power to perform a proper validation. I only tried something with a NACA0021 at 17 deg and 60 deg and they were promising, at least for the DDES implementation. The SAS ones are not that good. I'll upload some post-processing as soon as I have the time to do so. Hi @rois1995, I believe there is an error or a typo in the Babu's paper in the Q_SAS source term and in turn in your implementation, which may be the reason for the poor performance in SAS results. . ![image](https://github.com/user-attachments/assets/5791d344-967a-4cc5-b512-457b7fe61435). This term changes units depending on the output of the max function, which doesn't make any sense. I believe the terms in the max function should be divided by omega^2 and k^2 instead of omega and k, respectively. Which is exactly how it is done in [https://resolver.tudelft.nl/uuid:5d23e2a6-5675-450d-bf3d-1dd40d736cae](url). I will try some of the benchmark cases in these papers when I have the time. Let me know what you think.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150#issuecomment-2447067474:1099,benchmark,benchmark,1099,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150#issuecomment-2447067474,1,['benchmark'],['benchmark']
Testability,"> > Hi @sun5k, could you please add also the configuration files to reproduce these results? I would try to run these simulations too with my implementation of the transition model.; > > Thank you in advance!; > ; > Hi @rois1995 Of course! However, I'm still under testing, so I can't guarantee the result if the numerical scheme or the other options are changed. Which configuration file would you want?; > ; > By any chance, are you implementing or developing a transition model? Can you tell me what model you are willing to use if it's a model implementation? My next goal is to implement the AFT model or the k-w-gamma model, but I'm trying to implement a k-w-gamma model because it seems like the AFT model is being implemented by the other developer. If you could send me the config files for the T3A, T3A- and NLF test cases it would be awesome!. I have implemented the same model as yours, the LM model, in parallel to you 'cause I needed it for some simulations. I also tried implementing the same version but related to the SA turbulence model, however it still is bothering me that I cannot seem to get good results on it. . If you want, I also tried the prolate spheroid test-case with good results. If you need I can give the configs and the meshes. The only thing about this test-case is that it is more related to the cross-flow transition, thus it needs to be implemented, which I think I'll do in these days. I think that the k-w-gamma model is the way to go right after the implementation of the LM model since it has lots of equations in common. Do you think that you need another class for it or you will write on the same classes that you have already built (like the CTransLMSolver)?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1198926920:265,test,testing,265,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1198926920,4,['test'],"['test', 'test-case', 'testing']"
Testability,"> > Hi Lennaert, I've un-commented the items 'added a testcase' and 'added documentation'. We can use the testcase that you've worked on, and we can use one of your presentations as documentation, but it needs to be put somewhere.; > ; > With respect to the test case and documentation: I have tried to find the best location to put this, but I could not find this. How can this be done best?. should we add a testcase to the SU2/TestCases/incomp_navierstokes repository?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1076#issuecomment-741713220:54,test,testcase,54,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-741713220,5,"['Test', 'test']","['TestCases', 'test', 'testcase']"
Testability,"> > Hi, I can build this new feature and run simulation with; > > VISCOSITY_MODEL= COOLPROP CONDUCTIVITY_MODEL= CONSTANT_COOLPROP; > > But the building process on github failed.; > > I need your help :); > > Thank you.; > ; > I suggest to click on 'Details' next to each of the regression tests and see why it fails. I saw that there are at least 2 different errors, one was for instance 'coolprop.h' not found. You are right, I am trying to solve these errors one by one. Thank you for your help.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1819#issuecomment-1312476704:289,test,tests,289,https://su2code.github.io,https://github.com/su2code/SU2/pull/1819#issuecomment-1312476704,1,['test'],['tests']
Testability,"> > I'm thinking about reusing the SST test case ([axisymmetric_rans/air_nozzle](https://github.com/su2code/SU2/tree/master/TestCases/axisymmetric_rans/air_nozzle)) so that the same mesh can be used. Would that be fine ?; > ; > That's a quite specific testcase. How did you test the implementation? Do you have some simple results for the turbulent axisymmetric jet? We know that the results for round jets are not super good for standard SA, but at least we know what the result should look like, here on p.32 - 35 they test SA for the round jet and compare to the Wygnanski & Fiedler measurements: https://www.researchgate.net/publication/24296213_Turbulence_Modeling_Validation_Testing_and_Development; > ; > The domain is just a rectangle so pretty simple to set up.; > ; > You could also use the V&V test that we have, but it is a variable density jet: https://su2code.github.io/vandv/SANDIA_jet/. I did some tests on a supersonic jet, since I already had the files, but it's a quite complex case so it's not that good to verify the implementation. I will look into the simpler cases you mentioned !",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2197#issuecomment-1891046092:39,test,test,39,https://su2code.github.io,https://github.com/su2code/SU2/pull/2197#issuecomment-1891046092,7,"['Test', 'test']","['TestCases', 'test', 'testcase', 'tests']"
Testability,"> > That's really strange: The hybrid AD testcase `discadj_incomp_turb_NACA0012_sst` was ok after commit [c68cf13](https://github.com/su2code/SU2/commit/c68cf13552bc1412b98bda281a92f0b4bd4799ba), then I changed the stored residuals of unrelated testcases in [9d8f194](https://github.com/su2code/SU2/commit/9d8f194eeb4523440b51b3ff4c08018492974198) and the testcase fails... I'll run clang-format now, let's see what happens ;); > ; > I had a similar thing over at the flamelet branch and a re-run of the regression tests solved that :). Seems to be like that here as well:; After e95cdfa, only `transonic_stator` in `hybrid_regression_AD.py` failed.; After 475c697, only `discadj_incomp_turb_NACA0012_sa` in `hybrid_regression_AD.py` failed.; After b704f9e no test in `hybrid_regression_AD.py` failed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1346#issuecomment-899299081:41,test,testcase,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-899299081,5,['test'],"['test', 'testcase', 'testcases', 'tests']"
Testability,"> @Cristopher-Morales What's going on with the multizone test setup?. I have updated the multizone restart file, I will update the residuals of this test case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1956#issuecomment-1459990724:57,test,test,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/1956#issuecomment-1459990724,2,['test'],['test']
Testability,"> @Cristopher-Morales can you check if bounded scalar works for you for this setup with compressible flow? I activated it and it seems to work fine for the small testcase that you sent. It is much better than scalar upwind. ![species_transport](https://github.com/su2code/SU2/assets/98025159/23a52867-3467-443d-b935-01c9aa34d30c); Hi, yes it works much better, specially if we refine the mesh towards the walls.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2266#issuecomment-2067695749:162,test,testcase,162,https://su2code.github.io,https://github.com/su2code/SU2/pull/2266#issuecomment-2067695749,1,['test'],['testcase']
Testability,"> @Cristopher-Morales you can change the file .github/workflows/regression.yml to point to your branch with updated restarts (look for -c develop in that file). I thought I had commented this but maybe I forgot to press comment xD. Hi Pedro, I have updated the restart test cases. Please let me know if something else is missing. Thank you so much in advance!!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1796#issuecomment-1317329239:269,test,test,269,https://su2code.github.io,https://github.com/su2code/SU2/pull/1796#issuecomment-1317329239,1,['test'],['test']
Testability,"> @EvertBunschoten That's great, thanks!; > ; > Can you first make sure that the regression tests run again? Now, all existing flamelet regression tests fail. The regression tests for flamelet now complete nominally again",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2057#issuecomment-1623821187:92,test,tests,92,https://su2code.github.io,https://github.com/su2code/SU2/pull/2057#issuecomment-1623821187,3,['test'],['tests']
Testability,> @EvertBunschoten even if the performance isn't great this is a pretty small change so I think we can merge it. Do you have time to wrap it up and add a simple regression test?. I just added a test case and tutorial under the TestCases and Tutorials repo under the same branch name. I'm also writing a short tutorial on the SU2 website repo.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2152#issuecomment-2271237145:172,test,test,172,https://su2code.github.io,https://github.com/su2code/SU2/pull/2152#issuecomment-2271237145,3,"['Test', 'test']","['TestCases', 'test']"
Testability,"> @PENGYAN777 great thanks for the fixes. What more do you need to do on this PR? From the SU2 side we just need you to add a regression test. You will need to change /.github/workflows/regression.yaml to enable compilation with CoolProp for one of the config sets (BaseMPI) and then add a test to parallel_regression.py; > ; > **NOTE** If you need to add a new mesh file, do not commit the mesh in the code repo, instead open a PR to the TestCases repo with the mesh. I think there are **two more things** I can do, to improve this new feature. 1. Now this new feature can only work for inviscid flow since the viscosity and conductivity are still obtained from Sutherland model or other default models. My next step is to let SU2 get viscosity and conductivity from CoolProp then this new feature can also apply for viscous flow. 2. For subcritical flow, it is possible for flow to enter two-phase region while CoolProp need distribution of phases to compute speed of sound. Since SU2 does not have two-phase flow solver, I plan to let SU2 choose Peng-Robinson model for subcritical flow and CoolProp for supercritical mode. Do you have any suggestion?. Once I finish these two functions and get approved from you, then I will add the regression test as you advised. Thank you for your help.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1782#issuecomment-1287649621:137,test,test,137,https://su2code.github.io,https://github.com/su2code/SU2/pull/1782#issuecomment-1287649621,4,"['Test', 'test']","['TestCases', 'test']"
Testability,"> @alecappiello Any news from your side?. Sorry for my late reply. Unfortunately, I don't have great news. ; I've done some tests locally, but I couldn't find a reason why the Aachen test case should behave differently. . I have tried restarting the calculation by means of feature_asan from:; - Aachen restart files obtained with better convergence of SU2_CFD; - Aachen restart files obtained with a setup of the CFD calculation similar to the Jones turbine, that is, same turbulence model, spacial fourier disable for the giles bc.; In both cases I still get a big jump in the residuals, although smaller in the second case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2100690327:124,test,tests,124,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2100690327,2,['test'],"['test', 'tests']"
Testability,"> @alecappiello The Aachen turbine case is in the `feature_asan` branch since [046de67](https://github.com/su2code/SU2/pull/2246/commits/046de6798bad6ffc7205993df7fa253730cd8f9f), could it be that you tested with an older version of the branch?. Hi @jblueh, I double-checked and you're right. Sorry for that. I'm installing the right one now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2064504194:201,test,tested,201,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2064504194,1,['test'],['tested']
Testability,"> @alecappiello develop is updated with a fix for the thread sanitizer issue, it should fix your CI pipeline once you merge it into your branch. Thanks a lot! I've just done it and tsan tests are indeed not failing anymore!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2158#issuecomment-2003325587:186,test,tests,186,https://su2code.github.io,https://github.com/su2code/SU2/pull/2158#issuecomment-2003325587,1,['test'],['tests']
Testability,"> @antares190 running some more tests, I'm not sure that the adapted grid is still on the surface any more, especially on the trailing edge. Or perhaps it is, but it has lost associativity with its neighbour? This also seems to be the case for the fuselage, where cells seem to be jumping to the opposite side of the aircraft. Did you experience this issue too?; > ![interior_ite1](https://user-images.githubusercontent.com/16842258/105381127-053eaf80-5c52-11eb-8781-707c6438432c.png); > ; > Regarding separating zones, do you mean through SU2's multizone? In this case, did you apply the aircraft surface as a separate zone? Or a 'core' region around the aircraft? Thanks for your thoughts! Kind regards, Tim. When I was referring to separated zones I mean in the mesh, so I'm not referring to SU2 multizone. This is an example I took online (it is apparently a structured hexa mesh, so not the best example for mesh adaptation, hexa not supported), but I hope it explains the different zones at mesher level.; By defining different zones for top and bottom of the wing (and wing tip), the edges, leading and trailing as well as the one on the tip will be maintained after mesh adaptation.; In your case I would also suggest to split the body in body top and body bottom so to prevent (or reduce) artifacts in the trailing cone. ![image](https://user-images.githubusercontent.com/41752169/105387785-2e414f00-5c16-11eb-9284-1d18c9a5981f.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-764812340:32,test,tests,32,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764812340,1,['test'],['tests']
Testability,"> @bigfooted reports that the Aachen turbine case in current develop is not deterministic (see [here](https://github.com/su2code/SU2/pull/2260#issuecomment-2054161066) and [here](https://github.com/su2code/SU2/actions/runs/8658658261/attempts/1)), that could be an issue, too. If it is due to memory issues, the changes in this PR might fix this. I'm not sure about what is the cause of this poorly deterministic behaviour. I can imagine that the convergence level of the restart plays a role. I'll be running some tests with better converged restart files and let you guys know",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2064540001:515,test,tests,515,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2064540001,1,['test'],['tests']
Testability,"> @danielmayer where does the python script for FADO go? here or in the Testcases repository?. Good question. I think the purpose of the TestCases repo is to separate large files that don't change much from the code base. Since those scripts are small, I would lean towards putting them in the SU2 repo. Another option is to add them as a new test case to FADO, but that adds another layer of complexity. What do you think? What does @pcarruscag think?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2239#issuecomment-2018796774:72,Test,Testcases,72,https://su2code.github.io,https://github.com/su2code/SU2/pull/2239#issuecomment-2018796774,3,"['Test', 'test']","['TestCases', 'Testcases', 'test']"
Testability,"> @jayantmukho You can modify the routine CFlowOutput::WriteVolume_Output() in order to disable the writing of the files. Yes, I thought that would be the easiest place to make the change. But unfortunately, this gets ignored when the `CSingleZoneDriver` runs `SetResult_Files` and forces the output with the `force_writing` option. `StopCalc` passed into this function for `force_writing` and that is basically always true at this point in the case of steady RANS since the `CFluidIteration` has just finished running `Solve()`. An easy way to fix this would be to add `force_writing` to the input of `WriteVolume_Output`. I can preserve the behavior in the `COutput::WriteVolume_Output` but add some logic for the fixed CL mode in the `CFlowOutput::WriteVolume_Output`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/780#issuecomment-540650002:702,log,logic,702,https://su2code.github.io,https://github.com/su2code/SU2/pull/780#issuecomment-540650002,1,['log'],['logic']
Testability,"> @jblueh are the tsan tests using a special version of CoDi?; > ; > ```; > Note: switching to 'refs/pull/2158/merge'.; > ; > You are in 'detached HEAD' state. You can look around, make experimental; > M	externals/codi; > ```; > ; > Does it need some kind of update?. No, CoDi should be fine. Tsan does not need a special version of CoDi and the correct commit is checked out a couple of lines below the quoted ones. Tsan is failing in other PRs, too. There seems to be a general issue with tsan and github runners, I am looking into it right now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2158#issuecomment-1999529180:23,test,tests,23,https://su2code.github.io,https://github.com/su2code/SU2/pull/2158#issuecomment-1999529180,1,['test'],['tests']
Testability,"> @kursatyurt Hello, thank you so much for the lead.; > ; > Our initial scope mostly involved writing our own kernels and I did explore some libraries at the start - I was planning on using CUSP as well but my main concern was its lack of being updated to the newly compatible versions of the toolkit. cuSolver and cuBLAS do exist, but I chose to go ahead with a ""simple"" kernel implementation to have more control. I also felt that if I could keep the block size of the grid in optimal territory then they could be just as fast as those options (please do correct me if my reading of the literature or the situation was incorrect). To learn the basics, it's a good idea, but for large-scale projects, I prefer using existing libraries if possible.; Those libraries generally exploit state-of-the-art solution like mixed-precision computing. A gaming GPU is not way faster than a good CPU in double precision, but way faster in single precision, most of them have 64:1 ratio, however server class GPU have 2:1 ratio. Also when available they use vendor libraries like cuBLAS or hipBLAS. It is always nice to have you only care about connection and somebody else handle the solver as performant as possible. In future probably they will provide more and more solvers and it will be automagically works. It is kind of light-weight too, not a huge dependency like Trilinos or PETSc. ; > ; > I was not aware of Ginkgo and I will surely give it a go and try to produce some comparative results. I am currently super busy for this month and will get to working on the code with some delay.; > ; > Again, thank you for the lead!. I can test on various GPUs (P100/V100/A100 and 4070Mobile) on single node multi-gpu etc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2346#issuecomment-2397803409:1629,test,test,1629,https://su2code.github.io,https://github.com/su2code/SU2/pull/2346#issuecomment-2397803409,1,['test'],['test']
Testability,"> @pcarruscag , kindly change the name of restart_flow.dat to solution_flow.dat for Inviscid supersonic flow past a ramp in a channel #122 pull request (merged) case. That's why regression failed this time (could not find restart file solution_flow.dat). Or perhaps I can change the restart file name to restart_flow.dat itself for passing the regression test (may not be a good practice)?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2006#issuecomment-1501031509:355,test,test,355,https://su2code.github.io,https://github.com/su2code/SU2/pull/2006#issuecomment-1501031509,1,['test'],['test']
Testability,> @suargi An update to the TestCases repo renamed a folder for the visc_cone. I have a PR open to fix the problem ---> Should be fixed now. Thanks @WallyMaier. Now serial and parallel regression test work smoothly.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1418#issuecomment-958192673:27,Test,TestCases,27,https://su2code.github.io,https://github.com/su2code/SU2/pull/1418#issuecomment-958192673,2,"['Test', 'test']","['TestCases', 'test']"
Testability,> @suargi Just a service note on the hybrid_regression_AD.py reg tests that fail: They seem to sometimes fail due to mood swings or idk. So if you Re-run them in the `Checks` tab above or merge the latest develop they might not fail on you. Thank you @TobiKattmann. I will keep it in mind!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1362#issuecomment-908181718:65,test,tests,65,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-908181718,1,['test'],['tests']
Testability,"> @sun5k @rois1995 we now have 2 PR's on the same subject. This one is already reviewed, and I am not keen on wasting work (mine and others). The way I see it this PR followed the way we encourage for contributions to SU2, draft PR, etc, and thus it should be integrated. So, @sun5k can you finish the little things missing here? That way PR #1788 can then build on top of this. Oh, @rois1995 has significant progress in the LM model. I didn't know about this progress because I missed the SU2 conference in 2022. Now, I'm making the V&V and tutorial cases in my [repository](https://github.com/sun5k/su2code.github.io/blob/master/_vandv/LM_transition.md). So, at least tomorrow, I will PR to V&V, Tutorials, and TestCases. After PR of the V&V, Tutorials, and TestCases, I thought almost done about this PR #1751. Is there anything else I should do with this PR #1751?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751#issuecomment-1275423001:713,Test,TestCases,713,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751#issuecomment-1275423001,2,['Test'],['TestCases']
Testability,"> @sun5k please take care of the two comments above from my last review, and add regressions for your 2 tutorials (see what is done in TestCases/tutorials.py. Then I think we can merge this PR!. I'm seeing TestCases/tutorials.py. I have some questions about the code.; In the tutorials.py in transition flat plate for the BC model. . tutorial_trans_flatplate = TestCase('transitional_flatplate_tutorial'); tutorial_trans_flatplate.cfg_dir = ""../Tutorials/compressible_flow/Transitional_Flat_Plate""; tutorial_trans_flatplate.cfg_file = ""transitional_BC_model_ConfigFile.cfg""; tutorial_trans_flatplate.test_iter = 0; tutorial_trans_flatplate.test_vals = [-22.021786, -15.330766, 0.000000, 0.023952] #last 4 columns; tutorial_trans_flatplate.su2_exec = ""mpirun -np 2 SU2_CFD""; tutorial_trans_flatplate.timeout = 1600; tutorial_trans_flatplate.tol = 0.00001; tutorial_trans_flatplate.no_restart = True; test_list.append(tutorial_trans_flatplate). I guess, ; ""tutorial_trans_flatplate.test_iter"" is a number of iterations,; ""tutorial_trans_flatplate.su2_exec"" is the command for SU2_CFD,; ""tutorial_trans_flatplate.timeout"" is the maximum program running time, ; ""tutorial_trans_flatplate.tol"" is a tolerance for convergence criteria,; ""tutorial_trans_flatplate.no_restart"" is a restart option. . I can't understand this whole sentence.; ""tutorial_trans_flatplate.test_vals = [-22.021786, -15.330766, 0.000000, 0.023952]"". Could you explain what's meaning?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751#issuecomment-1294467724:135,Test,TestCases,135,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751#issuecomment-1294467724,3,['Test'],"['TestCase', 'TestCases']"
Testability,"> And #include <array> worked for me. Didn't think too much of it, but I also don't have a PC or; >Linux readily available to test on another OS. I assumed it's a clang thing. As far as I can tell, the only place were the #include <array> statement is found is in CConfig.hpp. And that include file is not included directly in adt_structure.hpp, so it seems logical that you get this warning. However, it compiles just fine on Linux, so maybe that is done implicitly? Anyway, it does not hurt to add the #include <array> statement.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/981#issuecomment-627125934:126,test,test,126,https://su2code.github.io,https://github.com/su2code/SU2/pull/981#issuecomment-627125934,2,"['log', 'test']","['logical', 'test']"
Testability,"> Aside from my last two comments, and the possibility I broke the code :), this looks ready. Is this missing anything, or is it ready to merge?. Thank you so much @pcarruscag for your feedback. there is one thing left, it is about the residuals of the test case (species2_primitiveVenturi_mixingmodel.cfg) that I added in the previous pull request, they have changed exceeding in some outputs the tolerance 0.00001 with respect to the values stored in the parallel_regression.py, however the test case converges very well, so could it be possible to modify the values stored in that test case in order to not have this discrepancy between values stored and computed? Thank you so much in advance!!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1690#issuecomment-1194029520:253,test,test,253,https://su2code.github.io,https://github.com/su2code/SU2/pull/1690#issuecomment-1194029520,3,['test'],['test']
Testability,"> Below you can find a transitional test case using B-C model implemented in SU2:; > https://su2code.github.io/tutorials/Transitional_Flat_Plate/. Samet, nice to meet you! Thank you for your suggestion! I have learned this model in current SU2 version. B-C model can provide quite good results in many teatcases.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/502#issuecomment-446631804:36,test,test,36,https://su2code.github.io,https://github.com/su2code/SU2/issues/502#issuecomment-446631804,1,['test'],['test']
Testability,"> Check if you need to update the config template or any doc on the website. It would also be good to modify an existing test case to exercise this feature. Thank you so much for your comment. Yes, I will update the website with this additional feature. I will modify one of the existing test cases in this pull request.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1953#issuecomment-1463418485:121,test,test,121,https://su2code.github.io,https://github.com/su2code/SU2/pull/1953#issuecomment-1463418485,2,['test'],['test']
Testability,"> Could you elaborate more on this?? Let me explain a typical scenario I would go through (picking BCs as an example):; > ; > * I should be able to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; > ; > * BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; > ; > * Now, switching between my custom BC types and the standard ones only requires to edit the config file. For example, the inlet BC of the SA turbulence model is defined in CTurbSASolver::BC_Inlet(); We can place this definition in a separate file bcinit.cpp and dynamically link this file so you have a libbcinit.so file. SU2 knows about libbcinit.so and BC_Inlet() at compile time. ; In your testcases directory, you can put a copy of bcinit.cpp and redefine the boundary condition BC_Inlet. If you change the boundary condition, you only compile bcinit.cpp in your testcase directory and create a libbcinit.so in your testcase directory. You then make sure that when SU2 is looking for dynamically linked libraries, it searches your testcase directory before it searches the SU2 installation directory. . As you see, this can be used for redefining existing (at compile time) functions and modifying its content. I find it especially useful for creating custom initial conditions. If you want to create a completely new custom boundary condition BC_Custom(), it is probably easiest to predefine this structure and create a custom_bc option in the config file. In a CFD problem, there are only a limited number of possibilities (for types of boundary conditions, and systems of equations), so I'm not sure when a BC_Custom() is useful, or when the tipping point is where self-registering classes will become useful for its implementation. Recompiling the code completely takes maybe 2 minutes for me, so I never saw compiling times as a problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665:848,test,testcases,848,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665,1,['test'],['testcases']
Testability,"> Does anyone know why we get this random failures from travis?; > ; > > No output has been received in the last 20m0s, this potentially indicates a stalled build or something wrong with the build itself.; > ; > It does not seem to be related with a particular test case... Unfortunately that happens a lot lately. Haven't figured out what the reason is. I assume its something with MPI on the virtual machines in Travis. Hard to debug though, I can test a different MPI version maybe...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-543570100:261,test,test,261,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-543570100,2,['test'],['test']
Testability,"> Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the code is fixed to make the test pass.; > What frameworks are available?; >; > For a unit testing framework, here are the most popular options, with the; > following pros and cons:; > Roll-your-own; >; > - Requires no external dependencies; > - The most flexible option; > - Involves the most work to setup; > - Will lack some of the more advances features of mature unit-testing; > frameworks.; >; > Boost Test; >; > - Can be header only, statically linked, or dynamically linked; > - If statically or dynamically linked, then Boost is not very; > lightweight; > - Easy to add if you're already using Boost; >; > Google Test; >; > - Most common unit-testing framework; > - Can be easily combined with Google's powerful GMock mocking library; > - Compiling and linking can be somewhat painful; >; > Catch2; >; > - Used by FEniCS; > - Makes unit tests easily readable with lots of syntactic sugar.; > - Has a very simple syntax; > - Is header-only; > - Requires C++11 compilation; > - Not as feature rich as Google Test or Boost Test; >; > Questions; >; > - How do developers feel about adding unit tests to SU2?; > - If a unit-testing framework were added to SU2, would you actually; > use it?; > - Do developers hav",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:5478,test,testing,5478,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['test'],['testing']
Testability,"> For `mpirun -n 2` and `mpiexec -n 2` I get another kind of error, I'll further investigate this. I had a look at the following part of the output:. Setting the multigrid structure.; +-------------------------------------------+; | MG Level| CVs|Aggl. Rate| CFL|; +-------------------------------------------+; | 0| 14165| 1/1.00| 2.5|; | 1| 3892| 1/3.64| 1.96566|; | 2| 1031| 1/3.77| 1.51755|; | 3| 276| 1/3.74| 1.17777|; | 4| 70| 1/3.94| 0.889704|; | 5| 19| 1/3.68| 0.695288|. So I think that MGLEVEL=6 is too high, it makes the coarsest mesh have too few points. We should choose e.g. MGLEVEL=4 for testing. The `turb_SA_RAE2822.cfg` with MGLEVEL=4, MGCYCLE=FULLMG_CYCLE runs without error with `mpirun -n 2`. With `mpirun -n 3`, I get an error sometimes. I think this is related to the third issue / #1430 .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1362#issuecomment-964332198:603,test,testing,603,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-964332198,1,['test'],['testing']
Testability,"> Great! I did not run flamelet + CHT in a full optimization loop, yet. My next step is to validate gradients and add a regression test for the adjoint of flamelet + CHT.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1917#issuecomment-1447237033:131,test,test,131,https://su2code.github.io,https://github.com/su2code/SU2/pull/1917#issuecomment-1447237033,1,['test'],['test']
Testability,"> Hello. Can you add a test case about AUSMPLUSUP or AUSMPLUSUP2? I installed SU2 6.2.0 and used it to simulate two-dimensional lid-driven cavity flow. When I set 'CONV_NUM_METHOD_FOLW' to be 'AUSMPLUSUP' or 'AUSMPLUSUP2', it shows 'Error in ''void CSoLver::SetResidual_RMS(CGeometry*, CConfig*):' and 'MPI_ABORT was invoked on rank 0 in communicator MPI_COMM_WORLD'. But when I set it to be other schemes like AUSM, ROE or so, it runs. Maybe if there is a test case, I can find where is my mistake. Thank you. _Originally posted by @cjz667 in https://github.com/su2code/SU2/pull/628#issuecomment-522633022_. @cjz667, there are a couple of examples in PR #691, specifically here: https://github.com/su2code/SU2/pull/691#issuecomment-502193463; Which may not run with v6.2 but should work with the current develop version.; In any case can you please upload your config?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/761:23,test,test,23,https://su2code.github.io,https://github.com/su2code/SU2/issues/761,2,['test'],['test']
Testability,"> Here is a smaller [testcase](https://drive.google.com/open?id=1FK8ijEEh8vbtKEeoqX7Qd0h_yj3U6m7a). It is an existing SU2 test case converted while adding MIXED elements. @MicK7 : does this test work for you? We could consider replacing the existing SU2 mesh with your CGNS mesh for that regression test (that way we keep overhead down by not adding a new test, but get more CGNS coverage).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-526380290:21,test,testcase,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-526380290,5,['test'],"['test', 'testcase']"
Testability,"> Hi @TobiKattmann; > ; > Thank you for making lots of suggestions. I'm out of town now, so I'll address those once I get back later this week.; > ; > > > Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in CPhysicalGeometry::MatchNearField,; > > > the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have; > > > real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance; > > > exceeding 1e-1.; > > ; > > ; > > Concerning this: I understand this nearfield marker as an internal ""boundary"" which does not alter the usual solution process at all. It is just added to compute some interesting quantity one. So the Nearfield marker needs to be in the mesh right, at the end like all other boundary markers? As such it is defined using mesh points and therefore there should be no discrepancies between nearfield marker nodes and mesh nodes? Am i correct with that, if not please enlighten me what is actually happening :); > ; > Yes, nearfield marker is just used to extract required physical quantities and should not alter the usual solution process at all. There should be no discrepancies between nearfield marker nodes and mesh nodes. I haven't checked this part of the code for a while but if I remember correctly, the ""Bad match..."" message is shown if there is discrepancy between a nearfield marker node and the nearest mesh node that is NOT on nearfield boundary. I did more investigations. This ""Bad match..."" message is output in `CPhysicalGeometry::MatchNearField` and this function has `SetDonorPoint`. However, currently there is no `GetDonorPoint` except for periodic boundary condition. I don't believe this is used any more. I went back in history and found out that `GetDonorPoint` exists in `CGridAdaptation::SetHomothetic_Adaptation2D` in ver.6.2.0. I suspect this is for grid adaptation to ma",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-898991111:203,test,tested,203,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-898991111,1,['test'],['tested']
Testability,"> Hi @sun5k, could you please add also the configuration files to reproduce these results? I would try to run these simulations too with my implementation of the transition model.; > ; > Thank you in advance!. Hi @rois1995 Of course! ; However, I'm still under testing, so I can't guarantee the result if the numerical scheme or the other options are changed.; Which configuration file would you want?. By any chance, are you implementing or developing a transition model? ; Can you tell me what model you are willing to use if it's a model implementation? My next goal is to implement the AFT model or the k-w-gamma model, but I'm trying to implement a k-w-gamma model because it seems like the AFT model is being implemented by the other developer.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1198403061:261,test,testing,261,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1198403061,1,['test'],['testing']
Testability,"> Hi Ale, can you add the mesh (from the workshop I presume) to the Testcases repo with a restart file and then use that to run a coupled iterations for regression testing? We may need to wait for the turbo outputs PR. Hi Pedro, I'm adding them now. ; Yes, configs and mesh are from the tutorial, although I slightly amended the config to make it work with develop (just one config input commented), so that we don't need to wait for that PR. In fact, I added the folder to develop. For the regresstion testing (sorry for the silly question, I'm a bit of a novice), is it enough to run the single test case or should I do the proper regression test with provided python script?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2158#issuecomment-1792594463:68,Test,Testcases,68,https://su2code.github.io,https://github.com/su2code/SU2/pull/2158#issuecomment-1792594463,5,"['Test', 'test']","['Testcases', 'test', 'testing']"
Testability,"> Hi, I can build this new feature and run simulation with; > ; > VISCOSITY_MODEL= COOLPROP CONDUCTIVITY_MODEL= CONSTANT_COOLPROP; > ; > But the building process on github failed.; > ; > I need your help :); > ; > Thank you. I suggest to click on 'Details' next to each of the regression tests and see why it fails. I saw that there are at least 2 different errors, one was for instance 'coolprop.h' not found.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1819#issuecomment-1312462930:288,test,tests,288,https://su2code.github.io,https://github.com/su2code/SU2/pull/1819#issuecomment-1312462930,1,['test'],['tests']
Testability,"> Hi,; > I made the Cygwin build installation instruction example. I just checked my SU2_CFD.exe and it is 625MB as well. Nevertheless, I have no clue why this is the case and how to solve that.; > ; > For reference I attach my config.log file.; > ; > [config.log](https://github.com/su2code/SU2/files/3483335/config.log). According to the configure file(line 2726), try 'make install-strip' after 'make'. ; The exe will be smaller than before after adding the strip option.; The following link may help. Just have a look at faq 6.3.; https://www.cygwin.com/faq.html; Good luck.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/754#issuecomment-519762878:235,log,log,235,https://su2code.github.io,https://github.com/su2code/SU2/issues/754#issuecomment-519762878,3,['log'],['log']
Testability,"> Hi,; > I made the Cygwin build installation instruction example. I just checked my SU2_CFD.exe and it is 625MB as well. Nevertheless, I have no clue why this is the case and how to solve that.; > ; > For reference I attach my config.log file.; > ; > [config.log](https://github.com/su2code/SU2/files/3483335/config.log). The fllowing link may help us; https://stackoverflow.com/questions/1042773/gcc-c-hello-world-program-exe-is-500kb-big-when-compiled-on-windows-how",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/754#issuecomment-519737756:235,log,log,235,https://su2code.github.io,https://github.com/su2code/SU2/issues/754#issuecomment-519737756,3,['log'],['log']
Testability,"> I can't understand this whole sentence. ""tutorial_trans_flatplate.test_vals = [-22.021786, -15.330766, 0.000000, 0.023952]"". This is the line with the nr of iterations, residuals, etc. If you run the case, you will see them printed to the screen. The values in *.test_vals should match with the values on the screen that you get at iteration number *.test_iter; The test values are read from the end to the beginning, so if the array contains only one value, this should be the last value that is reported by SU2. In the example that you give for the tutorial_trans_flatplate, there are 4 values, which should match the last 4 values printed by SU2. By the way, you can run python serial_regression.py or any of the other regression tests on your local machine to see what it does, although for some cases you might see a difference in residuals due to differences with the version compiled for github/docker. If you want to run the regression test exactly in the same environment as on github, you need to use docker.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751#issuecomment-1294520123:368,test,test,368,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751#issuecomment-1294520123,3,['test'],"['test', 'tests']"
Testability,"> I do not have a good grasp on the performance of each scheme. I fear that may be a much time-intensive task, particularly since these all are implicit at the moment. I'm thinking just run this test case out to convergence for each scheme then comparing convergence histories. That way if any don't converge, we know we're not grandfathering in broken cases/schemes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1885#issuecomment-1381005993:195,test,test,195,https://su2code.github.io,https://github.com/su2code/SU2/pull/1885#issuecomment-1381005993,1,['test'],['test']
Testability,> I do not know why a regression test from hybrid_regression_AD.py has failed. But it has nothing to do with this pull request. Therefore I think we can merge it. Yep sometimes certain cases of hybrid-reg-ad fail ... sometimes they don't :) ; That is why they are not a hard requirement for a merge. Usually I take a look nonetheless to not overlook sth.; So feel free to merge 👍,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1559#issuecomment-1070787684:33,test,test,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1070787684,1,['test'],['test']
Testability,"> I just found a heap buffer overflow in the interface code, mentioning it here in case it is related [#2246 (comment)](https://github.com/su2code/SU2/pull/2246#issuecomment-2034404720). I ran your test case with the fixes from #2246 and the address sanitizer, it still shows the behaviour that you describe and the address sanitizer did not detect anything else. So it's probably not related to the aforementioned overflow.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2255#issuecomment-2042496683:198,test,test,198,https://su2code.github.io,https://github.com/su2code/SU2/issues/2255#issuecomment-2042496683,1,['test'],['test']
Testability,> I wonder why the 'chore' label was removed by @talbring as I would categorize this PR as such?. First of all: the topic should be a little bit more descriptive if it should be listed in the change log. Second: there was already a `no_changelog`. Having both makes no sense and actually I don't know what the release drafter is doing then :D,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/818#issuecomment-555443890:199,log,log,199,https://su2code.github.io,https://github.com/su2code/SU2/pull/818#issuecomment-555443890,1,['log'],['log']
Testability,"> I'd prefer to have DIRECT_TEMPERATURE_ROBIN_HEATFLUX as the default and ""hide"" the rest as developer's options for the moment. Ok, makes sense if the results differ and need some more testing to not add it to the config_template. . > you're very welcome to have a look over it! :-). I'll do my very best 👴",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/839#issuecomment-577167743:186,test,testing,186,https://su2code.github.io,https://github.com/su2code/SU2/pull/839#issuecomment-577167743,1,['test'],['testing']
Testability,"> I'll be running some tests with better converged restart files and let you guys know. @alecappiello As the restart files were not obtained with the changes in this branch, maybe they are no longer consistent and need to be updated?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2064585720:23,test,tests,23,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2064585720,1,['test'],['tests']
Testability,"> I'm thinking about reusing the SST test case ([axisymmetric_rans/air_nozzle](https://github.com/su2code/SU2/tree/master/TestCases/axisymmetric_rans/air_nozzle)) so that the same mesh can be used. Would that be fine ?. That's a quite specific testcase. How did you test the implementation? Do you have some simple results for the turbulent axisymmetric jet? We know that the results for round jets are not super good for standard SA, but at least we know what the result should look like, here on p.32 - 35 they test SA for the round jet and compare to the Wygnanski & Fiedler measurements:; https://www.researchgate.net/publication/24296213_Turbulence_Modeling_Validation_Testing_and_Development. The domain is just a rectangle so pretty simple to set up. You could also use the V&V test that we have, but it is a variable density jet:; https://su2code.github.io/vandv/SANDIA_jet/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2197#issuecomment-1889612505:37,test,test,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/2197#issuecomment-1889612505,6,"['Test', 'test']","['TestCases', 'test', 'testcase']"
Testability,"> I've also wondered about whether the Jacobians (even dF/dU) should be evaluate at the reconstructed state (as currently done) or at the un-reconstructed... This can be easily tested in #1022 (the reconstruction is inside the numerics). @pcarruscag coming back to this, is the plan with #1022 to exclusively use CNumericsSIMD, or keep the USE_VECTORIZATION option and have both Roe implementations available? I was thinking of merging feature_simd_numerics into this branch, and was wondering if I'd need to implement the reconstruction Jacobian for both Roe implementations or if I should just stick to CNumericsSIMD.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1050#issuecomment-699080843:177,test,tested,177,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050#issuecomment-699080843,1,['test'],['tested']
Testability,"> If anyone as an elegant solution to simply check for EXIT_SUCCES in the regression test one could add some dry_run regression tests. This can be added to the meson tests simply enough. In other words, you could add it alongside the unit tests. You can read more about meson tests [here](https://mesonbuild.com/Unit-tests.html). If you add `SU2_CFD` as a test executable with the dry run option as a command line argument, then meson will do the dry run and mark it as failing if it does not receive `EXIT_SUCCESS`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/858#issuecomment-581945210:85,test,test,85,https://su2code.github.io,https://github.com/su2code/SU2/pull/858#issuecomment-581945210,7,['test'],"['test', 'tests']"
Testability,"> If the mesh is not moving, why are you rotating the search coordinates?. I'm so sorry for the belated response! I was trying to debug and test the new feature and to give a proper pull-request.; As for the question:; Because we are using rotating frame for rotor. In rotating frame we consider the rotating effect by adding source terms in governing equations so that the mesh movement is spared. But when we transfer data between rotor and stator for unsteady simulation, the rotor side has to be rotated to match the reality. The rotor is actually rotating, so as the flow phenomena, like rotor wakes passing through the interface. Otherwise, we will see non-rotating wakes in the stator frame of reference. Every time step, the matching grid points between two sides need to be updated as well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2173#issuecomment-1951929669:140,test,test,140,https://su2code.github.io,https://github.com/su2code/SU2/pull/2173#issuecomment-1951929669,1,['test'],['test']
Testability,"> If this is too large for either of the above it should go into V&V, I guess that is how it was used for the paper?. I suggest we add this to the regression tests, put the mesh in the testcases repo, and add additional scripts and results to the V&V and create a V&V page pointing to the paper and showing some main results.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2239#issuecomment-2067695366:158,test,tests,158,https://su2code.github.io,https://github.com/su2code/SU2/pull/2239#issuecomment-2067695366,2,['test'],"['testcases', 'tests']"
Testability,"> If you add it to the tutorials test suite... and it runs in < 5min, or it covers a few of the commonly untested options, I'd say go for it. Ok!. ; > Out of curiosity, do you use the windowing feature to discard a few initial time steps?. No not directly. The idea and motivation was, that I didn't want to wait until the transient phase of the flow field is computed. So I use a precomputed restart file, which serves as a better ""inital guess"" than freestream values. Then, so the idea, the transient phase is skipped for the first design, and it is at least shortened for other designs. This way, we safe CPU time.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/964#issuecomment-627769844:33,test,test,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/964#issuecomment-627769844,1,['test'],['test']
Testability,"> Interesting that only one of the tests fails - to be honest I was expecting all the turbomachinery tests to fail, does this solve the heap overflow?. Hi all, I've just tried to run the Aachen parallel regression test locally (code from SU2 [feature_asan](https://github.com/su2code/SU2/tree/feature_asan), restart files from SU2/TestCases) and I get a pretty different outcome than the PR here. residuals I get locally:; | 9| -15.378838| -15.209087| -15.081009| -13.857694| -12.724170| -10.052202|. residuals I see as a result of the regression test:; | 9| -9.511426| -8.866578| -9.325615| -7.546349| -7.420281| -4.042154|. Also, [feature_asan](https://github.com/su2code/SU2/tree/feature_asan) doesn't have any Aachen_turbine folder among the testcases.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2056744532:35,test,tests,35,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2056744532,6,"['Test', 'test']","['TestCases', 'test', 'testcases', 'tests']"
Testability,"> Is anything else needed here @jblueh ?. Let's merge if the tests still pass, I can add further changes in another PR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2351#issuecomment-2372062403:61,test,tests,61,https://su2code.github.io,https://github.com/su2code/SU2/pull/2351#issuecomment-2372062403,1,['test'],['tests']
Testability,> Is it ready to merge?. From my side yes :) Can you though make sure the reg test run and report here in the PR correctly. I am not really what happened there. I started a re-run of all the jobs so if that runs like usual feel free to merge :+1:,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1559#issuecomment-1070582529:78,test,test,78,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1070582529,1,['test'],['test']
Testability,"> Is this testable somehow? Maybe a filediff regression that produces the example file?. Yes, when @danielmayer has merged the PR where we can compare output files, we can compare an existing inlet.dat with the newly created example_inlet.dat. I'll put that on the to-do list (I'll create an issue).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1999#issuecomment-1495786303:10,test,testable,10,https://su2code.github.io,https://github.com/su2code/SU2/pull/1999#issuecomment-1495786303,1,['test'],['testable']
Testability,"> It looks fine for me, I am wondering why the Aachen turbo test case fails with this update. I reran the regression and it passed, so it looks like some regression tests are not very deterministic.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2260#issuecomment-2054161066:60,test,test,60,https://su2code.github.io,https://github.com/su2code/SU2/pull/2260#issuecomment-2054161066,2,['test'],"['test', 'tests']"
Testability,"> Just one comment: I see that you have made some changes so that everything compiles now with meson on Windows, Mac, and Linux. Is it possible to add these as compilation tests to our regression workflow now for Mac and Windows, so we at least catch any build errors on those platforms? This would be a nice feature we do not have yet (and has caused some issues in the past). We could do that. But I don't think that it adds enough value and just increases regression test runtime. I would say for now it is enough that it runs when there is a push to develop.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/813#issuecomment-553524933:172,test,tests,172,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-553524933,2,['test'],"['test', 'tests']"
Testability,"> Just put the default definition of the function in a dynamically linked library and when you want to use a different definition of this function, just point your library path to your custom library in e.g. your testcases directory. Could you elaborate more on this?? Let me explain a typical scenario I would go through (picking BCs as an example):; - I should be able to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; - BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; - Now, switching between my custom BC types and the standard ones only requires to edit the config file. As I understand,; - Dynamically loading a library specified in the config file at runtime is easy. ""dlopen"" is there, and possibly more sophisticated libraries?; - The issue is that there is no way to ""select"" the new BC because it was not known at compile-time.; - Most of the code is built around the assumption of ""knowing things"" at compile time. So a series of if statements checking the setting in the config file was the way to go. If the setting in the config says EULER; The Euler BC gets picked up. But what if it says Custom_EULER?. I got distracted by some other stuff. But here is the thing:; - All BCs should inherit from a Base Class (Assuming BCs are classes to begin with); - The selection mechanism will rely on the custom BC class registering itself to a Factory automatically.; - Through the magic of templates and macro expansion, it's possible to easily add the custom BC to the map of known BCs (Yet to be implemented). If this interests you and if you think there is a decent chance of incorporating this design into the code, please let me know. I will give this a higher priority :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-679979421:213,test,testcases,213,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-679979421,1,['test'],['testcases']
Testability,> LGTM! Thanks for doing this!; > ; > Could you possibly post a before and after of a basic test case?. before and after for the residuals? Or for the solution?. Here are the residuals for the serial regression of the axisymmetric viscous cone: . ![image](https://user-images.githubusercontent.com/44848904/142783736-0769b2e3-cce5-4c45-83b8-b25961cd1a66.png),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1428#issuecomment-974716725:92,test,test,92,https://su2code.github.io,https://github.com/su2code/SU2/pull/1428#issuecomment-974716725,1,['test'],['test']
Testability,"> LGTM, I think what is proposed in #770 could help prevent this kind of bugs. Probably it could help as one could painlessly add special entries to such a bit field that will remove the `||`'s from the code, even for minor examples like this. I'll leave this as draft for a while because I'd like to test some more compressible stuff in terms of reference values, non-dimensionalization and so on. It's a good opportunity.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/839#issuecomment-567479668:301,test,test,301,https://su2code.github.io,https://github.com/su2code/SU2/pull/839#issuecomment-567479668,1,['test'],['test']
Testability,"> Line 78 TURBO_PERF_KIND: invalid option name. Check current SU2 options in config_template.cfg. I am not so familiar with the turbomachinery implementation so I hope somebody else will chime in, but this option was deprecated. Maybe have a look at the testcases/turbomachinery folder that we have, there might be a testcase that matches what you would like to do, maybe transonic_stator_2D?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2204#issuecomment-1912805019:254,test,testcases,254,https://su2code.github.io,https://github.com/su2code/SU2/issues/2204#issuecomment-1912805019,2,['test'],"['testcase', 'testcases']"
Testability,> Modify one of the testcases to exercise this please (even if we don't have a way to check it is doing the right thing). I'll update the documentation as well,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1552#issuecomment-1080852262:20,test,testcases,20,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1080852262,1,['test'],['testcases']
Testability,> Mpi4 is not compatible with the version of pastix we support.; > And you have to compile scotch and pastix according to the instructions in TestCases/pastix_support/ before compiling SU2. Just followed the pastix instructions from the testcase directory. compilation stops at 443/1058 saying error Cannot use PaStiX with forward mode AD. Picture:; ![image](https://user-images.githubusercontent.com/24353606/128684248-2aae9693-806b-421c-9c13-b2fedbcbe5f1.png). So what am I missing? Also is PasTiX necessary for me to run/use all solvers needed for tutorials/test cases?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1349#issuecomment-895069863:142,Test,TestCases,142,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349#issuecomment-895069863,3,"['Test', 'test']","['TestCases', 'test', 'testcase']"
Testability,> Mpi4 is not compatible with the version of pastix we support.; > And you have to compile scotch and pastix according to the instructions in TestCases/pastix_support/ before compiling SU2. Thanks for the clarification! I use Mpi4 for most of my programs so that's why I built it that way. I followed this guide for pastix: https://solverstack.gitlabpages.inria.fr/pastix/md_docs_doxygen_chapters_Pastix_Runtime.html. So I build pastix 6.X.X. I will check the test cases directory though for the instructions. Also how does changing openmpi change c++ command line option ? . Thanks 😊,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1349#issuecomment-894838291:142,Test,TestCases,142,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349#issuecomment-894838291,2,"['Test', 'test']","['TestCases', 'test']"
Testability,"> Nice work already! If you click on 'Details' at the right of the failed Regression and Unit Testing cases you will see why they fail. I think one of the first things to do is go through these error messages ('variable may be used uninitialized', etc) and fix them so the regression tests will run. Thank you! I am in the middle of doing it. Hopefully, there are not that many issues.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1810#issuecomment-1308632788:94,Test,Testing,94,https://su2code.github.io,https://github.com/su2code/SU2/pull/1810#issuecomment-1308632788,2,"['Test', 'test']","['Testing', 'tests']"
Testability,"> No problem :) the hybrid parallel should be fixed (it was a parallel section inside another).; > Have you had a chance to look into the other issue I think I saw? Namely the structural velocity being transferred is not updated once per outer iteration, but rather once per time step which makes it lag (that is what it looks but I might be wrong, I explained it better on my Feb 7 comment). Thanks for the fix for the hybrid parallel reg test! The dynamic fsi test cases were the only remaining ones which was expected, this has been updated now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-822107852:440,test,test,440,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-822107852,2,['test'],['test']
Testability,"> Only thing not addressed yet is the symmetry BC for the turbulence models (we prob need to add something similar). TobiKattmann : do you have time to look at that as part of this PR? Or shall we do that separately?. The implementation for the turbulence models is correct as is. No flux is considered for the convective and viscous fluxes by inserting the symmetry conditions directly in the FV derivation. Convective fluxes vanish as velocity*normal=0, viscous fluxes vanish by grad(transported scalar)*n=0 on the symmetry faces of the boundary. Above I denoted that as ""direct flux"" approach. ; (I will attach an updated pdf here later). Although the ""reflected state"" approach is a more proactive approach and might be beneficial for convergence. Could be worth a shot if somebody really has an issue here, for now I leave it as is. **NEXT STEP** I will update the Regression test values at the failing cases. For cases with a restart (either primal or adjoint computations) I will update the restart_file and upload these in a seperate Testcases branch.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/657#issuecomment-468263411:881,test,test,881,https://su2code.github.io,https://github.com/su2code/SU2/pull/657#issuecomment-468263411,2,"['Test', 'test']","['Testcases', 'test']"
Testability,"> Please modify the existing CoolProp test case to use the models, or add a new one. I add a new config file to include the CoolProp viscosity and conductivity model. I use the same mesh, so no new mesh is required.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1819#issuecomment-1326751620:38,test,test,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/1819#issuecomment-1326751620,1,['test'],['test']
Testability,"> Putting changes to the non-NEMO solvers in this PR is s.th. we could do as the normal-vector and gradient changes should be equal but it would delay the whole PR and a lot of Reg-tests would have changes. They are exactly the same type of solver, we should not have two types of symmetry.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1168#issuecomment-765027438:181,test,tests,181,https://su2code.github.io,https://github.com/su2code/SU2/pull/1168#issuecomment-765027438,1,['test'],['tests']
Testability,"> Regressions for other SST options, and an update of the documentation, including the warning we talked about. Which other SST options do you mean? or do you mean V2003m compressible/incompressible and serial/parallel?; for sustaining and uq we already have regression tests",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1560#issuecomment-1117310587:270,test,tests,270,https://su2code.github.io,https://github.com/su2code/SU2/pull/1560#issuecomment-1117310587,1,['test'],['tests']
Testability,"> So I am closing this for now. It will be announced when this model becomes available. Hello, vdweide. Thank you for your attention and this contribution. Did you ever try some testcases? I am a beginner SU2 user. Can you maybe give us a configure file about S-K transition flat plate using LM model? Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/502#issuecomment-446515213:178,test,testcases,178,https://su2code.github.io,https://github.com/su2code/SU2/issues/502#issuecomment-446515213,1,['test'],['testcases']
Testability,"> Thank you Yes we plan on contributing more, this commit was more of a test run just to understand the process. I added Dr Yair Mor Yossef and myself as Authors, per your request. However I do not see a button anywhere that says merge pull request (even before changing Authors.md). It should be below this message,You should see the list of 'things that need to be green': Changes Approved, Conversations resolved, and then Checks passed. At the moment I am writing this, the checks are still running. Below the Checks you should see the button ""Squash and Merge"". Once all checks have passed, you can press that button.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295#issuecomment-2221211665:72,test,test,72,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295#issuecomment-2221211665,1,['test'],['test']
Testability,"> Thank you for the detective work @yiren6 👍 We may need to consider changing the extension for OSX or create a symbolic link during the installation process. @patelha57 can you try the solution that yieren6 found?; > ; > As for the crash, I realize now that you are using the branch from PR #1300, it looks like that memory leak was fixed by @aa-g here [b2ddd96](https://github.com/su2code/SU2/commit/b2ddd9666b76b80ce5ce485b58dc5f97a27420b8) (at least that line 558 changed). When using code from a pull request you can have a look at the regression tests #1300 (bottom of the page) to get an idea if some issues might still be work in progress. Hey Pedro! Yup, we worked side-by-side to figure this issue out, we're actually labmates (small world!). I can also confirm that `pysu2` & `pysu2ad` are imported without errors on my OSX laptop. My environment is:. - Homebrew package manager; - GCC GNU compiler 11.2.0; - Python 3.9.12; - OpenMPI 4.1.3; - mpi4py 3.1.3; - swig 4.0.2. To summarize, the main change was to add `name_suffix: 'so'` option to `/SU2_PY/pySU2/meson.build`. This forces the output of `_pysu2.so` & `_pysu2ad.so` instead of OSX default of `_pysu2.dylib` & `_pysu2ad.dylib` for shared libraries.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1606#issuecomment-1107649598:552,test,tests,552,https://su2code.github.io,https://github.com/su2code/SU2/issues/1606#issuecomment-1107649598,1,['test'],['tests']
Testability,"> Thank you for the feedback but for 99% of cases it is easier for users if we download the dependencies for them. The philosophy behind SU2 has always been to provide as much of a self contained package as possible. But this check will allow users to use external dependencies just fine, as long as they happen to use an external 0.61.1?. ... I am not entirely sure I understand the issue here. You want to make it *easier* for users by downloading the dependencies, so you make it harder if they went and got their own dependencies? If someone has gone to the effort of getting their own dependencies instead of using your documented meson.py, it would seem like that inherently means they are the 1% of use cases and you could probably just leave them to it. Is the issue rather that only Meson 0.61.1 has been tested to work?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1945#issuecomment-1450921338:814,test,tested,814,https://su2code.github.io,https://github.com/su2code/SU2/issues/1945#issuecomment-1450921338,1,['test'],['tested']
Testability,"> Thanks for the fast reply! I changed the hardcoded 2 (just as a remark: the hardcoded values also appear in the calculations), added myself as an author and inserted some lines for throwing an error if the issue in #1565 occurs. I did not know exactly where to put it best.; > ; > Concerning a regression test: I strongly support the idea of introducing an axisymmetric regression test. However, I was using a testcase from @bigfooted , and I never set up such a test case on my own. There do not seem to be any axisymmetric pipe setups in the Testcases folder so far. @bigfooted , could we maybe use your mesh for the jet flow test case and, if necessary, switch to a standard flow setup?. Yes, you can use that mesh. It can be used for pipe flow setup and jets with coflows, so we can reuse it in different testcases as well if needed. But any simple rectangular mesh is fine, so a mesh from the existing testcases as @pcarruscag mentions would also work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1571#issuecomment-1075656956:307,test,test,307,https://su2code.github.io,https://github.com/su2code/SU2/pull/1571#issuecomment-1075656956,8,"['Test', 'test']","['Testcases', 'test', 'testcase', 'testcases']"
Testability,"> Thanks for the suggestion and I am preparing for a test. As far as I understand it, I just find that to get the absolute value of r_ij ( showed in the highest equation) in this part of code is unnecessary. The cross-product operation is to find the grid vector mostly parallel to the vorticity vector and the absolute value may cause a nonphysical recognition. @EduardoMolina, I don't know if I got it wrong and wish more guidance,.; > ; > ```; > for (auto iDim = 0u; iDim < nDim; iDim++){; > delta[iDim] = fabs(coord_j[iDim] - coord_i[iDim]);; > }; > ```. Hi Shihe,. I checked the implementation and I think it is correctly done. You do need the absolute value (i.e., delta has a unit of [m] or equivalent) to keep the correct dimension of nu_t based on a Smagorinsky-type SGS model. You may find the appendix of this paper useful for your understanding of delta_omg: [https://doi.org/10.1007/s00162-011-0240-z](https://doi.org/10.1007/s00162-011-0240-z). Also note that delta_omg does not always outperforms its peers - vorticity may not be aligned to the rotation axis of a local vortex (e.g., in rotating reference frame, in attached boundary layer, to name a few), in which case the physical meaning of delta_omg becomes vague. See also my work for a brief review of DES-type methods and some applications: [https://doi.org/10.1115/1.4052019](https://doi.org/10.1115/1.4052019)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1462#issuecomment-990220976:53,test,test,53,https://su2code.github.io,https://github.com/su2code/SU2/issues/1462#issuecomment-990220976,1,['test'],['test']
Testability,"> Thanks. Is it possible to target only some paths for formatting? I'm concerned about making life too difficult for developers, and we cannot break lines in some files because we parse them to generate some python code. Having only some paths we would then include more files over time until we cover everything. @pcarruscag ; The hook options of pre-commit hooks are [here](https://pre-commit.com/index.html#pre-commit-configyaml---hooks) . As far as I understand yes it is possible with the `files` option (AFAIK it is a regex pattern) another option is excluding some directories now I only exclude the `external` directory. . I look at the regression test the values seem okay but the test fails is this due to wrappers? If you tell me which directories should be omitted, I would adjust it quickly. In general, we can also disable column limit/wrapping from `clang-format` but it is probably not the best option.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1948#issuecomment-1455246335:656,test,test,656,https://su2code.github.io,https://github.com/su2code/SU2/pull/1948#issuecomment-1455246335,2,['test'],['test']
Testability,"> That seems to have confused git, maybe because of line endings on some testcases or something. you prob mean that some files a ""rewritten"" completely. Hm seems to happen whenever a file ends on WRT_CONV_FREQ and does not have the default value.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1129#issuecomment-743480026:73,test,testcases,73,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-743480026,1,['test'],['testcases']
Testability,"> That would be a nice addition! Can you also add a testcase (this flat plate testcase) for each of the cases, and add the cfg + regression tests to this repository? Maybe do the regression test on one of the coarsest meshes. Best would be to have set it up with a restart file that is completely converged. Hi @bigfooted. . I made regression test on ""parallel_regression.py"". Should I make extra regression test on ""hybrid_regression.py"" and ""serial_regression.py""?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2271#issuecomment-2089942823:52,test,testcase,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/2271#issuecomment-2089942823,6,['test'],"['test', 'testcase', 'tests']"
Testability,"> The change log entries are categorized depending on the labels feature, fix, chore for new features, bug fixes and maintenance. If you don't want your PR listed, add the label no_changelog.; So remember to always add a label to your PR (maybe we will automate that soon)!. That describes it pretty well in my opinion. . I'll close this issue in a day or so... maybe someone had the same question and didn't read the PR description yet as well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/822#issuecomment-555021114:13,log,log,13,https://su2code.github.io,https://github.com/su2code/SU2/issues/822#issuecomment-555021114,1,['log'],['log']
Testability,"> The computed values of `discadj_arina2k` in `hybrid_regression_AD` are suspiciously close to the expected values in `parallel_regression_AD`. Could the reference values be wrong? If I test with `-Denable-mixedprec=false` locally, the same holds true for `discadj_fea`. I just saw that `discadj_arina2k` was addressed in #1311, so I suppose that its reference values are indeed outdated.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1294#issuecomment-874694144:186,test,test,186,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-874694144,1,['test'],['test']
Testability,"> The logic when computing the Laplacians (used for 4th order dissipation) is that for points on a physical boundary, only other physical boundaries are considered when adding solution differences.; > I think this is to avoid adding very large differences for wall points. However when we have a point at a wall-symmetry intersection, the wall point will receive contributions from the symmetry points since that is also a ""physical boundary"".; > That is my hypothesis anyway, anyone care to run some tests? :). Thanks you for the hint, I am running some tests using different values of the 4th order dissipation coefficient for the OneraM6 test case.; Lowering this value, as expected, increase the oscillations of the JST scheme. Anyway the problem is still there.; What looks strange to me is that this difference is present only for the skin friction coefficient and not for the other variables.; Is it possible that the problem is due to the computation of the Cf?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1125#issuecomment-742483637:6,log,logic,6,https://su2code.github.io,https://github.com/su2code/SU2/issues/1125#issuecomment-742483637,4,"['log', 'test']","['logic', 'test', 'tests']"
Testability,"> The message will look like this:; > ; > ```; > The FFD box 'BLADE_BOX' is not properly defined. The first 4 points must be listed counter; > clockwise, such that applying the right-hand rule results in a vector into the box.; > This is according to the VTK hexahedron ordering:; > 7 +----+ 6 ; > /| /| ; > 4 +----+5| ; > |3+--|-+ 2 ; > |/ |/ ; > 0 +----+ 1 ; > The CCW convention also applies in 2D, where only the bottom face is specified.; > ```. Thank you Pedro. ; However, for the diffuser scenario, I set up the FFD Box applying the right-hand rule to both surfaces (point the third component to the inside FFD box volume from each surface):. ![Screenshot (162)](https://github.com/su2code/SU2/assets/96534491/c50d22e2-f1af-4285-97aa-9a800f0a3ac3). It worked perfectly and mesh is deforming but it is the opposite for the second sets of points compared to what you've done. I don't know if this can help you.; Feel free to attach the updated version of SU2, I'll be happy to test it (I'm currently running it on Ubuntu).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2025#issuecomment-1547731020:982,test,test,982,https://su2code.github.io,https://github.com/su2code/SU2/issues/2025#issuecomment-1547731020,1,['test'],['test']
Testability,> The test would go in UnitTests; How can the unit tests be compiled and run locally?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1637#issuecomment-1140281575:6,test,test,6,https://su2code.github.io,https://github.com/su2code/SU2/pull/1637#issuecomment-1140281575,2,['test'],"['test', 'tests']"
Testability,"> There are 2 cases in the testcases repository, both are using the Euler solver. Maybe also check if your case is running correctly with the settings from those testcases. Earlier, I was defining the mesh movement for the static zone as:. ` GRID_MOVEMENT= NONE `. since it was stationary. However, after checking the test cases, I found that the stator zones should also be defined as moving as. ```; GRID_MOVEMENT= RIGID_MOTION; MOTION_ORIGIN= 0.0 0.0 0.0; ROTATION_RATE = 0.0 0.0 0.0 ; ```. even though the mesh stays stationary. In that case, the unphysical flow results I presented earlier vanished. Earlier, I tried the cylinder test case with the inner zone having . ```; GRID_MOVEMENT= RIGID_MOTION; MOTION_ORIGIN= 0.0 0.0 0.0; ROTATION_RATE = 0.0 0.0 0.0; ```. and the outer zone having; ` GRID_MOVEMENT= NONE `. where the simulation gave physically viable results. I guess the zone interface may not accurately work if the `GRID_MOVEMENT` options of the neighbouring zones do not match while one of the zones has a non-zero movement. However, I have not simulated any other test cases. Also, the sliding_interface/rotating_cylinders test case diverges with the given .cfg files. At around the 775th time step, I received the following error message:. `SU2 has diverged (Residual > 10^20 detected). `. However, it works just fine if the simulations are done in subsonic flow (e.g. `MACH_NUMBER= 0.1`) while keeping the rest of the configuration the same.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2255#issuecomment-2051695181:27,test,testcases,27,https://su2code.github.io,https://github.com/su2code/SU2/issues/2255#issuecomment-2051695181,6,['test'],"['test', 'testcases']"
Testability,"> Wait for the regression tests to pass, and if they pass you can merge this PR. Thank you. But I think I do not have the right to merge this PR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1806#issuecomment-1311980332:26,test,tests,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/1806#issuecomment-1311980332,1,['test'],['tests']
Testability,"> Yes but it would be kind of you to check if a feature of a future release is going in the direction of what you need. Compiled libraries would be easy to handle via pkg config. . Ah, I did not understand that this is something you were already working on and were asking me to test, I thought you were suggesting to use develop to install the software on our production cluster. I should not have assumed that, it's just something that is unfortunately quite frequent in the field of scientific software (just use the head of the git repo). I did not have any clone of the repo, so did not see that script (only the one in `legacy`) initially. . ```; $ ./preconfigure.py --help; usage: preconfigure.py [-h] [--with-own-meson] [--no-codi] [--no-medi]; [--no-opdi] [--no-mpp] [--no-coolprop] [--no-mel]; [--no-mlpcpp]. optional arguments:; -h, --help show this help message and exit; --with-own-meson download own copies of Meson and Ninja; --no-codi do not download own copy of CoDiPack; --no-medi do not download own copy of MeDiPack; --no-opdi do not download own copy of OpDiLib; --no-mpp do not download own copy of Mutationpp; --no-coolprop do not download own copy of CoolProp; --no-mel do not download own copy of MEL; --no-mlpcpp do not download copy of MLpCpp; ``` . It seems like to go in the right direction. Is there a plan to provide options to specify how to find installed copies of those ? Something like `--medi=/path/to/installed/medi` and such ? pkgconfig or other auto-detection mechanisms usually work, but sometimes it doesn't, and explicit workarounds sometimes help. . I also don't see other packages that end up in externals, such as `metis`, `parmetis`, `autotools`, `catch2`. I am not sure how those are used (or if they are used), but I noticed folders for them in the `externals` folder. Is there a plan to allow using external versions of those ?. > But your choices of words sound a bit unfriendly so I honestly don't care, we can also close the issue until the next re",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086#issuecomment-1645726352:279,test,test,279,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086#issuecomment-1645726352,1,['test'],['test']
Testability,"> Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in CPhysicalGeometry::MatchNearField, ; the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have ; real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance ; exceeding 1e-1. Concerning this: I understand this nearfield marker as an internal ""boundary"" which does not alter the usual solution process at all. It is just added to compute some interesting quantity one. So the Nearfield marker needs to be in the mesh right, at the end like all other boundary markers? As such it is defined using mesh points and therefore there should be no discrepancies between nearfield marker nodes and mesh nodes? Am i correct with that, if not please enlighten me what is actually happening :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-897754020:50,test,tested,50,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-897754020,1,['test'],['tested']
Testability,"> You do -Denable-tests=true and then you get `test_driver_*` executables. Thanks, I added a working example, but it obviously needs some work.; @danielmayer it just reads a local lookup table and interpolates a value.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1637#issuecomment-1141499248:18,test,tests,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/1637#issuecomment-1141499248,1,['test'],['tests']
Testability,"> as described in the turbulence models page. @pcarruscag I am unaware of this page (not the [website](https://su2code.github.io/docs_v7/Theory/#turbulence-modeling), not a [su2code team](https://github.com/orgs/su2code/teams) :shrug: ). Can you tell me where to find it. > By the way, for the regression tests, I will need help as I do not have a linux machine to work with; can not compile the code properly... @sametcaka just the `Schubauer Klebanoff` Testcase is failing for serial and parallel regression and [tutorials](https://su2code.github.io/tutorials/Transitional_Flat_Plate/) which you can lookup via the checks-tab above. It would be a matter of updating the regression test values for this very case (so no big deal) if the results for the updated code are what you expect.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1132#issuecomment-743926162:305,test,tests,305,https://su2code.github.io,https://github.com/su2code/SU2/pull/1132#issuecomment-743926162,3,"['Test', 'test']","['Testcase', 'test', 'tests']"
Testability,"> hi @BerkeCan97, thank you for your correction and for helping with the verification part. Indeed, that term seems really wrong, thus I expect that your correction would improve the results. However, the link that you have provided for the corrected version is broken, can you fix it please?; > ; > Regarding the test-cases, we were trying to run the NACA0021 at 60deg AoA, but with relatively poor results. Maybe we should start with the flatplate and the mixing layer proposed originally in the implementation of the DDES formulation coupled to the SA model in https://www.researchgate.net/profile/Cleber-Spode-2/publication/318143234_Hybrid_RANSLES_Calculations_in_SU2/links/59c07bfba6fdcca8e56fe3c3/Hybrid-RANS-LES-Calculations-in-SU2.pdf (or any other test-case in the paper you proposed, but I am not able to read that). Fixed it! I think we can start with flat plate and maybe BFS. It might take a week or so for me to get anything done though.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150#issuecomment-2447186748:314,test,test-cases,314,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150#issuecomment-2447186748,2,['test'],"['test-case', 'test-cases']"
Testability,"> make the SST model exactly the SST2003m model according to the NASA website. Does it make sense to change the existing SST model rather than just adding the 2003m-version alongside of the 1994-version? Maybe rename to `SST-1994` and `SST-2003m`, that makes it transparent. One could even keep `SST` while adding a warning that `SST` will be deprecated in the future and that `SST-1994` is the equivalent successor. The upside of doing it like that is that it wouldn't interfere that much with peoples cases (only little cfg change necessary to produce the same results) and it would be much less work for you to change all the regression tests. And although the 2003-version is supposed to be an update to the 1994 version, I would bet there are people who prefer the 1994 version by choice. After all, when the Ancients first implemented SU2 they chose 1994 despite the 2003 version being around for 10 years already. I would be ok with switching to 2003m completely but I dont see really see the benefit as it means more work for everybody (right?).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1557#issuecomment-1060630539:640,test,tests,640,https://su2code.github.io,https://github.com/su2code/SU2/pull/1557#issuecomment-1060630539,1,['test'],['tests']
Testability,"> question: the chat we had about including gamma in the numerics, so we don't need an overload function, will be included in this PR? I think it should. Yeah, that's in the works. I wanted to get the rest of this up in the mean time. It should be a matter of doing a couple of Get/Set and some testing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1117#issuecomment-736747294:295,test,testing,295,https://su2code.github.io,https://github.com/su2code/SU2/pull/1117#issuecomment-736747294,1,['test'],['testing']
Testability,"> the off-PR comments can be integrated in this PR to clear that up a bit. If not that is OK as well. It's more than OK, the CHT implementation suffers a bit from being a single person's project.. you're very welcome to have a look over it! :-). > Can you add that option to the config_template.cfg together with that description, the valid inputs and the default. Actually I'm hesitating a bit adding it to the config template right now. I'd prefer to have `DIRECT_TEMPERATURE_ROBIN_HEATFLUX` as the default and ""hide"" the rest as developer's options for the moment.; The reason simply is that those different methods need to checked and validated against each other before we make them public.; E.g. I figured that for the incompressible CHT test case from the repo, there is a severe gap between the heatfluxes obtained from the ""averaged"" approach and the direct one, see below. ![heatflux_convergence](https://user-images.githubusercontent.com/22639394/72885197-bb9e4a80-3d07-11ea-9fad-a4d709dc511e.png). That needs to be cleared up first...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/839#issuecomment-577108935:744,test,test,744,https://su2code.github.io,https://github.com/su2code/SU2/pull/839#issuecomment-577108935,1,['test'],['test']
Testability,"?. For those not familiar with unit testing, unit testing allows the testing of small bits of behavior, ideally using isolated bits of code. It is not intended to replace validation testing or formal verification tests. Instead, it serves a unique purpose. Consider the three following use cases:. * You're developing a new feature, and you want to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; * You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; * You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this relevant Stack Exchange question.<https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>. What do I propose?. My research group at UT Austing has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for bu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:2011,test,test,2011,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,1,['test'],['test']
Testability,"?. For those not familiar with unit testing, unit testing allows the testing of small bits of behavior, ideally using isolated bits of code. It is not intended to replace validation testing or formal verification tests. Instead, it serves a unique purpose. Consider the three following use cases:. + You're developing a new feature, and you want to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; + You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; + You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this [relevant Stack Exchange question.](https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes). ## What do I propose?. Our research group at UT Austin has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see [their documentation](https://www.gnu.org/software/automake/manual/html_node/Tests.html). Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:1188,test,test,1188,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['test'],['test']
Testability,"@ALL we are aiming to complete this work (see Tom's comment on the 20th of May) **within 3 months**.; In so doing we will also **discontinue the legacy build system** (pending some testing on machines without internet connection). So, if you have branches with large changes to existing files, bring them to develop ASAP to minimize conflicts.; If you have new files, the conflicts will be less severe (just include paths probably). I will try to script this file movement and subsequent meson updates, so that in the worst case folks can do the same modifications on their branches automatically and then merge the also modified develop.; But, because we also **want to put clangformat in place**, I REALLY encourage you to merge your work into develop soon!; It is the perfect time to give your code to the world and also to give code reviews to your fellow SU2'ers. I'll come back with updates and reminders. P.S. 3 months, tick-tock tick-tock :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-733803863:181,test,testing,181,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-733803863,1,['test'],['testing']
Testability,"@AmauryBilocq Initial tests do show that Giles BC is giving errors however, the Riemann is working just fine. Unfortunately, I do not have access to my workstation these days and cannot deep-dive into the problem. Possibly, next week I will be able to give you a more detailed view of the problem. @pcarruscag If you are able to find some leads in the meantime do let me know. Thanks !",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1429#issuecomment-1025414575:22,test,tests,22,https://su2code.github.io,https://github.com/su2code/SU2/issues/1429#issuecomment-1025414575,1,['test'],['tests']
Testability,"@AmauryBilocq Thanks for your post. Can you please check that you are actually not running out of memory, as that can also raise such errors? Second, if Giles BC is the issue I think you will still be able to run the case with Riemann which is a bit simpler than Giles. Can you also test that?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1429#issuecomment-1025177015:283,test,test,283,https://su2code.github.io,https://github.com/su2code/SU2/issues/1429#issuecomment-1025177015,1,['test'],['test']
Testability,"@BeckettZhou I think that's a good idea. Just to make sure I understand the BANC model: for cases that have large mesh sizes, we provide configuration files, and visualization of the results (comparisons to higher fidelity data and/or to other solvers). If someone would like to run the case for themselves, they would contact the custodian and the custodian is obligated to provide the meshes. The next step would be to start the github repo. @economon Is it possible to start the repo under the su2code umbrella? Is that something you could start and people can start compiling validation test cases, and their results?. Cheers, ; Jayant",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-425961143:591,test,test,591,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-425961143,1,['test'],['test']
Testability,@ChristianBauerEng Thanks for the opening the PR. In order for the reg tests to run you need to fix the compiler warnings first as we dont allow for any additional warnings (in the primal-only builds at least). You might want to add `--warnlevel=3` to the meson build command to have those on your machine.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1548#issuecomment-1047003088:71,test,tests,71,https://su2code.github.io,https://github.com/su2code/SU2/pull/1548#issuecomment-1047003088,1,['test'],['tests']
Testability,@Corentinthomee can you add a testcase? otherwise please update AUTHORS.md so we can merge,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2197#issuecomment-2267597275:30,test,testcase,30,https://su2code.github.io,https://github.com/su2code/SU2/pull/2197#issuecomment-2267597275,1,['test'],['testcase']
Testability,"@Cristopher-Morales Can you check if this fixes the issue for you? This works for the testcase that you gave me (2D compressible channel flow).; There is still a (compared to develop) very small local change in pressure but I think this is because at the inlet, the radial velocity is not zero and close to the wall the radial velocity component is not negligible, this is I think why the pressure locally is still not completely homogeneous.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2266#issuecomment-2059974281:86,test,testcase,86,https://su2code.github.io,https://github.com/su2code/SU2/pull/2266#issuecomment-2059974281,1,['test'],['testcase']
Testability,@Cristopher-Morales Can you check what is happening with the failed species regression test? Is this the original regression test from the previous PR?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1690#issuecomment-1173421621:87,test,test,87,https://su2code.github.io,https://github.com/su2code/SU2/pull/1690#issuecomment-1173421621,2,['test'],['test']
Testability,@Cristopher-Morales What's going on with the multizone test setup?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1956#issuecomment-1459799712:55,test,test,55,https://su2code.github.io,https://github.com/su2code/SU2/pull/1956#issuecomment-1459799712,1,['test'],['test']
Testability,"@Cristopher-Morales any things left for this PR? If PASSIVE_SCALAR is changed to SPECIES_TRANSPORT, and if you have confirmed that the nondimensionalization works correctly, then from my side it will be good to go. You can put a tutorial and regression test for the adjoint optimization in the next PR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1762#issuecomment-1264289112:253,test,test,253,https://su2code.github.io,https://github.com/su2code/SU2/pull/1762#issuecomment-1264289112,1,['test'],['test']
Testability,@Cristopher-Morales can you check if bounded scalar works for you for this setup with compressible flow? I activated it and it seems to work fine for the small testcase that you sent. It is much better than scalar upwind.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2266#issuecomment-2067688789:160,test,testcase,160,https://su2code.github.io,https://github.com/su2code/SU2/pull/2266#issuecomment-2067688789,1,['test'],['testcase']
Testability,@DoctorRobertT this is now merged in develop. Please check out the testcase in Testcases/species_transport/multizone and let us know of any other missing functionality. Thanks!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1818#issuecomment-1322560896:67,test,testcase,67,https://su2code.github.io,https://github.com/su2code/SU2/issues/1818#issuecomment-1322560896,2,"['Test', 'test']","['Testcases', 'testcase']"
Testability,"@EduardoMolina : Nice results! Thanks for the comments. You are seeing more warnings bc I did in fact change the tolerance that controls the warning. But, note that this tolerance only controls when to print the warnings, so the matches should have still be the same (nearest neighbor after transformation). . The reason is that the new implementation assumes a 1-to-1 matching of the nodes and surface elements on either side of the periodic face. To be consistent, the points/faces on either side should match exactly so that they can be summed into a complete dual control volume (this assumption is made in the implementation and the partial residuals are summed as such). Nice catch on the fem_solver check. I will add that to the conditional. Thanks for the review @rsanfer. I will submit the final version shortly and if the tests pass, I would propose we merge this one first, if alright with @pcarruscag (the reason being that I would likely need your help to update the implementation for templating in the end anyway :) ).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/652#issuecomment-485930910:832,test,tests,832,https://su2code.github.io,https://github.com/su2code/SU2/pull/652#issuecomment-485930910,1,['test'],['tests']
Testability,"@EduardoMolina ; I ran the [channel_2D](https://github.com/su2code/SU2/files/3346960/channel_2D.zip) and the; [supersonic_vortex_shedding](https://github.com/su2code/SU2/files/3346962/supersonic_vortex_shedding.zip) testcases with a tighter tolerance on the linear solver to make sure the differences were not due to some change in number of iterations.; Some differences do accumulate over time but they are very small, for the channel_2D the final density field differs by 1e-6 at most (which is the output precision).; For the supersonic vortex shedding differences are greater, 2e-4 on average and up to 0.01 maximum, but the case is also larger and runs for longer. If I restart the case for a 6th time-step (from the same restart files) the initial residuals are the same.; I will update the other two cases when #700 gets merged as they changed there too.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-507391680:216,test,testcases,216,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-507391680,1,['test'],['testcases']
Testability,"@EvertBunschoten @danielmayer @Cristopher-Morales We should now work towards getting this polished and merged into develop without adding additional functionality or changing the regression test. If you make any changes, make sure that it does not change the regression tests by running them locally on your machine first. We have a bunch of regression tests now, you can download the testcases branch, and use the feature_new_flamelet branch for testing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1917#issuecomment-1447805407:190,test,test,190,https://su2code.github.io,https://github.com/su2code/SU2/pull/1917#issuecomment-1447805407,5,['test'],"['test', 'testcases', 'testing', 'tests']"
Testability,"@EvertBunschoten Thank you for not leaving us with all these alarming red crosses in the regression tests too long :-); This week I will work on a small pywrapper addition to deal with initial conditions, then we can get rid of the flame-specific initialization. That will reduce the PR by a couple of hundred lines and even add functionality. But I'll create a separate PR for this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1330519424:100,test,tests,100,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1330519424,1,['test'],['tests']
Testability,"@EvertBunschoten That's great, thanks! . Can you first make sure that the regression tests run again? Now, all existing flamelet regression tests fail.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2057#issuecomment-1605005417:85,test,tests,85,https://su2code.github.io,https://github.com/su2code/SU2/pull/2057#issuecomment-1605005417,2,['test'],['tests']
Testability,@EvertBunschoten even if the performance isn't great this is a pretty small change so I think we can merge it.; Do you have time to wrap it up and add a simple regression test?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2152#issuecomment-2269672071:171,test,test,171,https://su2code.github.io,https://github.com/su2code/SU2/pull/2152#issuecomment-2269672071,1,['test'],['test']
Testability,"@EvertBunschoten there was a bug that I noticed this week. When we get the enclosing triangle of the lookup point, we sometimes fail to get a proper intersection using set_intersection. We can then take one of the adjacent triangles instead. I only noticed it for one very specific lookup table and setup, so it is a pretty rare occurrence. ; [edit] this was for a 2D case, that I tested.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2057#issuecomment-1636876314:381,test,tested,381,https://su2code.github.io,https://github.com/su2code/SU2/pull/2057#issuecomment-1636876314,1,['test'],['tested']
Testability,"@EvertBunschoten, are there any known TO-DO's for this PR besides updating the regression test?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1697#issuecomment-1321244193:90,test,test,90,https://su2code.github.io,https://github.com/su2code/SU2/pull/1697#issuecomment-1321244193,1,['test'],['test']
Testability,@FlorianDm @economon and everyone else. I have merged Florian's derivation with my earlier derivation. I have added the gradients with respect to viscosity. @jtneedels is running some tests on it currently. I can push those changes to this branch so everyone can look over them...what do you all think?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1095#issuecomment-727636668:184,test,tests,184,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-727636668,1,['test'],['tests']
Testability,"@JSmith36 , I am wondering why the direct differentiation test case fails. Do you have any idea what the reason could be ? My guess would be something in the grid movement has changed that causes that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/412#issuecomment-318407413:58,test,test,58,https://su2code.github.io,https://github.com/su2code/SU2/pull/412#issuecomment-318407413,1,['test'],['test']
Testability,"@JedrzejMosiezny . The reason why the mesh and config files are split into separate repos is the following: ideally we want to have the test cases being closely coupled to the current version of the code as config options change quite frequently. However, the mesh files are simply too big to have them in the main repo (it takes too much time to check them out etc.). So a compromise was to still leave the config files in the main repo in order for them to stay up-to-date. We thought that the information [here](https://github.com/su2code/SU2/wiki/Test-Cases) would be quite clear for the user on how to merge config and mesh files. Following this instructions should avoid having to search for the mesh files manually. Let us know if you think different. @economon could you add Jędrzej to the dev team here on github ? Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485#issuecomment-355152833:136,test,test,136,https://su2code.github.io,https://github.com/su2code/SU2/pull/485#issuecomment-355152833,2,"['Test', 'test']","['Test-Cases', 'test']"
Testability,"@LaSerpe thank you for your comments.; @rsanfer please accept the PR I made for the TestCases repo first, that way I can uncomment the test instructions when I push the changes Giulio requested.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555#issuecomment-423931446:84,Test,TestCases,84,https://su2code.github.io,https://github.com/su2code/SU2/pull/555#issuecomment-423931446,2,"['Test', 'test']","['TestCases', 'test']"
Testability,"@MarcoFossati @monika1387 @economon I've been working with Adrien Loseille from INRIA to bring Vic's old fork (referenced above) up to date with develop. Check out [feature_adap](https://github.com/su2code/SU2/tree/feature_adap). It uses goal-oriented (adjoint-based) adaptation instead of feature-based (just based on Mach or pressure) that Vic's fork used. Some things to note:; 1. It's currently only tested on Euler (it uses a Hessian of the Euler fluxes so it might work for NS/RANS, but probably not) (@WallyMaier and I also extended it to TNE2 in [feature_amgtne2](https://github.com/su2code/SU2/tree/feature_amgtne2) but the source terms are giving us trouble on adapted meshes); 2. It requires AD support since it uses the discrete adjoint to weigh the Euler flux Hessians; 3. I did all my testing with the AMG executable since pyAMG doesn't have all the features I currently need, but I just updated the branch to use pyAMG. I just tested the new interface with an airfoil and it seems to be working, but there might still be some bugs. You'll want to run mesh_adaptation_amg.py with the following options:; **ADAP_SIZES:** list of mesh complexities for each adaptive level. This is correlated to mesh size, but picking good values requires some playing around; **ADAP_SUBITE:** number of adaptations performed at each adaptive level. If set to (2,3) for example, it will run 2 adaptive iterations to try to reach ADAP_SIZES[0], and 3 iterations to try to reach ADAP_SIZES[1]; **ADAP_EXT_ITER:** number of iterations used by SU2_CFD and SU2_CFD_AD for each adaptive level; **ADAP_RESIDUAL_REDUCTION:** order of magnitude residual reduction for SU2_CFD and SU2_CFD_AD for each adaptive level; **ADAP_SENSOR:** currently only works for GOAL; **ADAP_HMAX:** maximum cell size (m); **ADAP_HMIN:** minimum cell size (m); **ADAP_HGRAD:** gradation coefficient (>1) used by AMG during mesh smoothing. A larger value corresponds to larger allowed gradient in mesh size. E.g. for the RAE2822 I used:;",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504675574:404,test,tested,404,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504675574,3,['test'],"['tested', 'testing']"
Testability,@MaxSagebaum Finished building with both option = true without error. Thank you for the fix. I can now try to connect SU2 with paraBlade.; Do I have to run git commands again to be back on default branch?. Attached are the new meson and ninja log.; They are from the last cycle:; python meson.py --reconfigure build -Denable-directdiff=true | tee meson.log; ./ninja -C build install | tee ninja.log; I forgot to rename them so the -Denable-autodiff parts were overwritten. Thank you.; [ninja.log](https://github.com/su2code/SU2/files/6041732/ninja.log); [meson.log](https://github.com/su2code/SU2/files/6041731/meson.log),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1209#issuecomment-785738303:243,log,log,243,https://su2code.github.io,https://github.com/su2code/SU2/issues/1209#issuecomment-785738303,7,['log'],['log']
Testability,"@TobiKattmann , thanks for the regression test. The unsteady grid motion simulations work with the updates to the ALE formulation. The rotating frame is solved as a steady problem with an added source term, an initial implementation of which has been implemented for the incompressible solver but that is still a work in progress and probably outside the scope of this PR as it stands, so I've added an error catch.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/767#issuecomment-527542828:42,test,test,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/767#issuecomment-527542828,1,['test'],['test']
Testability,"@TobiKattmann : nice catch, thanks for the effort to debug this one. I have also been seeing this in the regressions. . @rsanfer or @arubino : do you have a case that you used for testing the new instance index, possibly with multiple zones including harmonic balance?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/568#issuecomment-416806343:180,test,testing,180,https://su2code.github.io,https://github.com/su2code/SU2/issues/568#issuecomment-416806343,1,['test'],['testing']
Testability,"@TobiKattmann ; I have added `README.md` to the testcase folder. Let me know what you think. I'm not exactly sure what I should write as expected outcome for discrete adjoint solver. Ultimately, it is used for shape optimization, so getting a better objective function is what I need to confirm but I cannot run a complete shape optimization in the test case with only a few iterations. What do you usually look for to confirm adjoint calculation is working as expected?. > I would highly appreciate if you add a little `README.md` to your testcase folder and explain a bit what that testcase is meant to showcase and what one is meant to see/look out for/expected outcome and just a hint how to use it (if that is explained in the cfg then just mention that). This will help down the road for anyone that wonders or has to fix a failing reg test and wonders what this is all about. You might also mention the PR number 1329 in there. Doesn't need to be a long text.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-894628152:48,test,testcase,48,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894628152,5,['test'],"['test', 'testcase']"
Testability,"@TobiKattmann @pcarruscag: I tried to follow all of your proposals in the new branch `fix_turb_fixed_values`. I removed the multigrid stuff from the NACA 0012 SST_SUST and fixed_values cfg, but not of the pure SST one. And I added verification of LINSOL_RESIDUAL and RMS_DENSITY to all the three tests. We can open a new PR or merge this in an existing one. Would you like to also remove the adjoint stuff from the cfgs? And right now the fixed_values test does not start from a restart solution, could that be a problem?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1236#issuecomment-802803608:296,test,tests,296,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236#issuecomment-802803608,2,['test'],"['test', 'tests']"
Testability,"@TobiKattmann I tried to keep the option where the default value was not used.; ```python; import os. rootDir = ""."". old = ""WRT_CON_FREQ""; new = ""SCREEN_WRT_FREQ_INNER""; default = 1. for dirName, subdirList, fileList in os.walk(rootDir):; ; for fileName in fileList:; if not "".cfg"" in fileName:; continue. with open(os.path.join(rootDir,dirName,fileName),""r"") as f:; lines = f.readlines(). newLines = []; i = 0;; while i < len(lines)-1:; if lines[i+1].startswith(old):; if not lines[i].startswith(""%"") or len(lines[i]) < 5:; newLines.append(lines[i]). val = lines[i+1].split(""="")[1]; ; if int(val) != default:; newLines.append(new+""=""+val); i += 1; else:; newLines.append(lines[i]); #end; i += 1; #end. if not lines[-1].startswith(old):; newLines.append(lines[-1]). with open(os.path.join(rootDir,dirName,fileName),""w"") as f:; f.writelines(newLines); #end; #end; ```. That seems to have confused git, maybe because of line endings on some testcases or something.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1129#issuecomment-743453197:939,test,testcases,939,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-743453197,1,['test'],['testcases']
Testability,@TobiKattmann Just test whether it works and gives the same results. The regression test should be added still with the old driver. I will adapt it accordingly.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/767#issuecomment-527185086:19,test,test,19,https://su2code.github.io,https://github.com/su2code/SU2/pull/767#issuecomment-527185086,2,['test'],['test']
Testability,@TobiKattmann Thanks for sharing! I will be testing this part of the code with our test case soon.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1382#issuecomment-927571088:44,test,testing,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382#issuecomment-927571088,2,['test'],"['test', 'testing']"
Testability,"@TobiKattmann please put at least a couple of the failing cases under the microscope, see if the convergence rate is the same starting from scratch, if the converged results are the same with wildly different number of cores and so on.; I know it is a pain but we have been tricked by small changes in the past, and for things related with parallelization 2 core regressions can easily give false positives.; I will run some independent tests myself and look into airfoil_fsi_rbf and discadj_fsi_airfoil for you.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-524663117:437,test,tests,437,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-524663117,1,['test'],['tests']
Testability,"@TobiKattmann you can select the commits for which you want to see changes, if that is not good enough I give you (or anyone else) license to revert my changes here, they'll be carried over to #821 so no problems there :); I did not merge test your PR by the way, this cleanup you started is needed (and it will get done come hell or high water). ""Squash and merge"" and you are done.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/818#issuecomment-555052921:239,test,test,239,https://su2code.github.io,https://github.com/su2code/SU2/pull/818#issuecomment-555052921,1,['test'],['test']
Testability,@WallyMaier @CatarinaGarbacz just checked with the testcases Wally provided. All of them pass,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1343#issuecomment-892095823:51,test,testcases,51,https://su2code.github.io,https://github.com/su2code/SU2/pull/1343#issuecomment-892095823,1,['test'],['testcases']
Testability,"@WallyMaier @jtneedels @pcarruscag Following @CatarinaGarbacz suggestion, I have decided to do a PR directly to develop. It's missing some regression tests which have SYM_MARKER. I was expecting the thermalbath to be different, but it's strange for the flatplate not to pass since I only intended to modify the symmetry BC related to NEMO. Will check on that this afternoon.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1168#issuecomment-763603592:150,test,tests,150,https://su2code.github.io,https://github.com/su2code/SU2/pull/1168#issuecomment-763603592,1,['test'],['tests']
Testability,@WallyMaier can you check Kato-Launder and vorticity and add a regression test?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1560#issuecomment-1117433791:74,test,test,74,https://su2code.github.io,https://github.com/su2code/SU2/pull/1560#issuecomment-1117433791,1,['test'],['test']
Testability,"@WallyMaier, @pcarruscag I will double check the 2003m model and run a couple of cases. At this moment (for this PR) we can add a regression test for 2003m for the flat plate. I can add some more testcases later for the tutorials and V&V in separate PRs (I have some additional cases with measurements like the Stanford diffuser from Eaton, the 90 degree bend from Sudo and the axisymmetric jet from Hussein).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1560#issuecomment-1105128696:141,test,test,141,https://su2code.github.io,https://github.com/su2code/SU2/pull/1560#issuecomment-1105128696,2,['test'],"['test', 'testcases']"
Testability,@aeroamit I think the code should be performing. I think running your tests on the axisymmetric branch would helpful to get the effort pushed in :),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1063#issuecomment-736696152:70,test,tests,70,https://su2code.github.io,https://github.com/su2code/SU2/issues/1063#issuecomment-736696152,1,['test'],['tests']
Testability,"@alecappiello The Aachen turbine case is in the `feature_asan` branch since [046de67](https://github.com/su2code/SU2/pull/2246/commits/046de6798bad6ffc7205993df7fa253730cd8f9f), could it be that you tested with an older version of the branch?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2061389038:199,test,tested,199,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2061389038,1,['test'],['tested']
Testability,"@antares190 running some more tests, I'm not sure that the adapted grid is still on the surface any more, especially on the trailing edge. Or perhaps it is, but it has lost associativity with its neighbour? This also seems to be the case for the fuselage, where cells seem to be jumping to the opposite side of the aircraft. Did you experience this issue too?; ![interior_ite1](https://user-images.githubusercontent.com/16842258/105381127-053eaf80-5c52-11eb-8781-707c6438432c.png). Regarding separating zones, do you mean through SU2's multizone? In this case, did you apply the aircraft surface as a separate zone? Or a 'core' region around the aircraft? Thanks for your thoughts! Kind regards, Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-764777223:30,test,tests,30,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764777223,1,['test'],['tests']
Testability,"@arubino sorry about that, I mistakenly thought I was only changing files that effected an old test that had already been commented out on the develop branch - I'm going to go ahead and revert the files now so that things will pass. ; In order to make things run smoothly, do you mind also commenting out the failing test during your pull request? That way I can re-activate it during my pull request.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/382#issuecomment-288219239:95,test,test,95,https://su2code.github.io,https://github.com/su2code/SU2/pull/382#issuecomment-288219239,2,['test'],['test']
Testability,"@auzbaig I put a fix for this in #824, please test it with your cases, if you use harmonic balance test that too as the fix should affect it as well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/831#issuecomment-570058167:46,test,test,46,https://su2code.github.io,https://github.com/su2code/SU2/issues/831#issuecomment-570058167,2,['test'],['test']
Testability,@bakakouhai I tested this on my machine and in my OpenMPI version (4.0.4) they still exist. Therefore I can currently can not reproduce this myself and I would like to use you as a guinea pig. I made the fixes to MeDiPack in the branch bugfix/mpi4_0. Could you please checkout this branch and try if it works now? ; ```; cd <SU2 dir>/externals/medi; git fetch; git checkout bugfix/mpi4_0; ```. Thanks.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1209#issuecomment-785697793:14,test,tested,14,https://su2code.github.io,https://github.com/su2code/SU2/issues/1209#issuecomment-785697793,1,['test'],['tested']
Testability,"@bakakouhai Thank you for testing this, I will merge the branch into the master now. > Do I have to run git commands again to be back on default branch?; You just changed the branch of MeDiPack. SU2 is still on the default.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1209#issuecomment-785746062:26,test,testing,26,https://su2code.github.io,https://github.com/su2code/SU2/issues/1209#issuecomment-785746062,1,['test'],['testing']
Testability,@bigfooted please open a PR to add the testcases @tollennaert mentioned you have.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1076#issuecomment-750520217:39,test,testcases,39,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-750520217,1,['test'],['testcases']
Testability,"@bigfooted thanks for adding a reg test :+1: I guess you forgot to push the .cfg here to the code and the mesh (+table?) to the Testcases repo :) You would do me a great favor by adding every residual, linear solver output and all relevant Objective Functions which are special this combustion simulation, to the screen output and therefore to the reg test to make any changes more obvious",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1223#issuecomment-951356684:35,test,test,35,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-951356684,3,"['Test', 'test']","['Testcases', 'test']"
Testability,@bmunguia yes. I am actually using Eduardo's work and I branched off from Eduardo's WMLES branch. So what you are suggesting is probably the root casue here. Do you know if there is any quick way to test this?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1099#issuecomment-719069221:199,test,test,199,https://su2code.github.io,https://github.com/su2code/SU2/issues/1099#issuecomment-719069221,1,['test'],['test']
Testability,"@bmunguia: Great! Is this work planned to be updated in the develop branch at some point? Since you have put in the effort to get it updated, it would be great to get it under regression testing to protect it once you are happy with the changes. Just let us know if there's anything we can do to help coordinate. Sounds like you might already be discussing w/ @MarcoFossati",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-505164187:187,test,testing,187,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-505164187,1,['test'],['testing']
Testability,"@chesiv (and also @timjim333) I confirm that the output you described is the expected one. In the *.cfg file I also make sure to add CSV tabular output management, as well as ASCII outputs.; `TABULAR_FORMAT= CSV`; `OUTPUT_FILES= RESTART_ASCII`. The python script to run the case with mesh adaptation is :; `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`; The python script handles all the folder structure, initialization, mesh adaptation(s), sub iteration(s).; 1. At first it removes the contents of an `adap` folder.; 2. creates `adap\ini` and starts the initialization run (with the original mesh).; 3. creates `adap\ite0` and based on the solution of the initialization run adapts the mesh with the given goal. As @bmunguia explained, have a look at the end of `amg.out` if anything doesn't go as expected. . > The only actual information I get from amg.log is usually in the last line ; > `NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477`; > which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. 4. repeats the subite as specified by the user. ; 5. At the end of the run the final results will be copied to the parent directory, as well as an history_adap.csv file which will store the output of the final iteration of the initialization and each mesh adaptation. To answer @chesiv question, in the `adap\ite0` you will find an `adap.su2` file which is the adapted mesh. The configuration file is modified (so to get the new mesh and restart from the previous iterations solution.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-750490818:878,log,log,878,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-750490818,1,['log'],['log']
Testability,"@clarkpede ; Thank you for catching this. I think a messed up something here while I was merging my implementation to the current version! Please be aware that the papers of Travin et al. and Strelets et al. also have some typographical errors, see the papers of:. Zhixiang Xiao, Jian Liu, Jingbo Huang, and Song Fu. ""Numerical Dissipation Effects on Massive Separation Around Tandem Cylinders"", AIAA Journal, Vol. 50, No. 5 (2012), pp. 1119-1136. ; https://arc.aiaa.org/doi/abs/10.2514/1.J051299 ; Mockett, ""A Comprehensive Study of Detached Eddy Simulation"" PhD Thesis. Regarding the DDES test cases, I agree that Travis will not handle any meaningful 3D test case. Do you have any suggestion? By now, all I can do is to test it outside. . Best,. Eduardo.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/532#issuecomment-388169276:499,Mock,Mockett,499,https://su2code.github.io,https://github.com/su2code/SU2/pull/532#issuecomment-388169276,4,"['Mock', 'test']","['Mockett', 'test']"
Testability,"@clarkpede @EduardoMolina : yep, the issue is that the periodic and MPI communications are tangled up together in the current implementation. The main issue occurs when there are periodic points that are also ghost nodes. . Ideally the periodic and MPI would be separated, and the periodic communications would happen first so that all periodic BCs are synchronized before trying to send across partitions. Right now, the comms are mixed, so sometimes, we send old data at periodic points to their matching pair, which then gets updated in a later MPI comm. Therefore, the second call you have added to the MPI resends the periodic update to with the correct data that was updated with MPI in the first call. I hope this is clear.. Anyway, please go with this change as you have it. All of the MPI and periodic comms will be replaced with a cleaner/separated version right after v6.2.0 (you can see what I am working on in feature_mpi_periodic). I will likely need some help testing that soon :).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/649#issuecomment-463711280:975,test,testing,975,https://su2code.github.io,https://github.com/su2code/SU2/pull/649#issuecomment-463711280,1,['test'],['testing']
Testability,"@clarkpede Great, thanks for the details. I see your point. In general, vortex shedding cases are indeed challenging to match with the experiments, but that's what makes them interesting at the end. For a start, I am aiming to obtain comparable behaviours with both the compressible and the incompressible unsteady solvers under similar settings, rather than matching with experiments; mostly as an acceptance test as well. I am now working with standard SST turbulence model, but if you could share some simple meshes/cfg files to have a first go with hybrid RANS/LES, I would really appreciate it. > Good catch. I just pushed a commit that adds SetMaxLength calculations in all the instances I could find where the geometry updates. Thanks for the fix!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/552#issuecomment-404097397:410,test,test,410,https://su2code.github.io,https://github.com/su2code/SU2/pull/552#issuecomment-404097397,1,['test'],['test']
Testability,@clarkpede Thanks for the fix. It is working as expected. I don't think any 'complex' test is required to test this. It is reading the inlet file name and linking it to all the desired folders. That's all that's required. Maybe you can open a pull request into develop for this.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/970#issuecomment-628674077:86,test,test,86,https://su2code.github.io,https://github.com/su2code/SU2/issues/970#issuecomment-628674077,2,['test'],['test']
Testability,"@clarkpede We could add use that feature probably. But we have to check that essentially for all available solvers, so maybe it makes more sense to put it to the regression tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/858#issuecomment-581957725:173,test,tests,173,https://su2code.github.io,https://github.com/su2code/SU2/pull/858#issuecomment-581957725,1,['test'],['tests']
Testability,@clarkpede Yep you are right :+1: I like this PR. Removing code by still keeping the same functionality. As soon as the regression tests pass we can merge it in. Do you think you can submit the other PR some time next week ? So that we have it for the 6.2.0 release ?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/626#issuecomment-461109183:131,test,tests,131,https://su2code.github.io,https://github.com/su2code/SU2/pull/626#issuecomment-461109183,1,['test'],['tests']
Testability,"@cvencro & @talbring, Ok Testcase added using the old driver for serial and parallel regression. Residuals are identical for both drivers new & old (which should resolve your question @rsanfer, right?). In the Testcase .cfg the new driver options are commented out such that switching is a matter of (un)commenting lines. I put up a PR for the Testcase here https://github.com/su2code/TestCases/pull/36 and if the regression tests pass I would merge the Testcase PR and revert the .travis.yml. Update: su2code/Testcases is merged. So once my comment above concerning rotating frame is addressed this could be merged from my point of view.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/767#issuecomment-527351447:25,Test,Testcase,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/767#issuecomment-527351447,7,"['Test', 'test']","['TestCases', 'Testcase', 'Testcases', 'tests']"
Testability,"@cvencro, @TobiKattmann You probably have test case ready to go. Would you mind writing a small tutorial? Because at the moment we have no unsteady cases there ...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/767#issuecomment-524348109:42,test,test,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/767#issuecomment-524348109,1,['test'],['test']
Testability,@danielmayer @Cristopher-Morales @EvertBunschoten ; All functionality is in place and we have a nice coverage with the current regression tests. I have removed the [WIP] and 'draft' label.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1917#issuecomment-1466248356:138,test,tests,138,https://su2code.github.io,https://github.com/su2code/SU2/pull/1917#issuecomment-1466248356,1,['test'],['tests']
Testability,"@danielmayer @EvertBunschoten @Cristopher-Morales I ran the scripts that we have for the species transport validation (from @TobiKattmann). Primal restart, adjoint restart and the comparison between adjoint and finite difference gradients all seem to work fine for the current PR. I will add some additional regression tests this week to make sure we do not break anything while polishing the code (specifically adding an axisymmetric case and a CHT case).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1356751936:319,test,tests,319,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1356751936,1,['test'],['tests']
Testability,"@danielmayer @EvertBunschoten looks like axisymmetric cases are working for flamelets, as well as conjugate heat transfer. I think all functionality is now in place. I still have to add a regression test for axisymmetry.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1917#issuecomment-1443912686:199,test,test,199,https://su2code.github.io,https://github.com/su2code/SU2/pull/1917#issuecomment-1443912686,1,['test'],['test']
Testability,"@danielmayer @mheimgartner @bigfooted @EvertBunschoten please note that `CScalarSolver`, `CScalarVariable` and `scalar_sources/convection/diffusion` were renamed to (basically just extended by *Legacy) `CScalarLegacySolver`, `CScalarLegacyVariable` and `scalarLegacy_sources/convection/diffusion`. So all files that you are used to do now have the `Legacy` addition in their names as I introduced the same/similar files in #1330. The 'new' ones are really new in the sense that they form the general base for scalar transport and I will create a `CSpecies*` family of files to incorporate the species transport. So right now both concepts are present in the same branch but the Legacy will be subsequently removed/replaced by the new stuff. . In any case: merge with the upstream feature_flamelet on github regularly. Add Testcases so that these subsequent merges do not introduce any problems I am unable to see otherwise. And if you want to push a commit here please get in touch shortly with me first.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1223#issuecomment-925781391:822,Test,Testcases,822,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-925781391,1,['Test'],['Testcases']
Testability,"@danielmayer @pcarruscag There is still one testcase that is failing, the cht_ad case. But when I run the regression test on the cluster, on my own machine or on my own machine inside a docker, they all pass. It only fails on github. Don't know what's going on here...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1917#issuecomment-1573704890:44,test,testcase,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/1917#issuecomment-1573704890,2,['test'],"['test', 'testcase']"
Testability,@danielmayer where does the python script for FADO go? here or in the Testcases repository?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2239#issuecomment-2002610677:70,Test,Testcases,70,https://su2code.github.io,https://github.com/su2code/SU2/pull/2239#issuecomment-2002610677,1,['Test'],['Testcases']
Testability,"@drewkett, in version 7.0.3 the hybrid solver should work better, it auto detects if it is not able to get enough parallelization and switches to an alternative approach (there is a warning message when this happens).; The alternative approach (which at least on hex-dominant grids is not worse) can also be forced with `EDGE_COLORING_GROUP_SIZE= 0`. I've been daily driving this version of the code for the past month without issues, if you find any do let us know. Also, to some extent I replicated these findings of SU2 slowing down when using ethernet interconnects, the machines I have access to with this kind of network are shared so I did not try to benchmark (as repeatability is an issue) but it does slow down quite a bit as soon as more than one node is involved.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-606535236:658,benchmark,benchmark,658,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-606535236,1,['benchmark'],['benchmark']
Testability,@economon : thanks. pr #260 pass travis tests.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-208809286:40,test,tests,40,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-208809286,1,['test'],['tests']
Testability,@economon ; I had a look at the only test case that was still failing - looks that everything is alright. This is the pressure delta after 200 iterations:. ![schubauer](https://user-images.githubusercontent.com/22639394/39260962-411efb7a-48bb-11e8-89ed-7a5e0df3ca42.png). So it seems that it's still a transition model regression test and didn't turn into something else :smiley: I will change the values in a minute.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/514#issuecomment-384324818:37,test,test,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/514#issuecomment-384324818,2,['test'],['test']
Testability,"@economon Dr. Alonso emailed me saying that ""We used [grid adaptation] successfully in tetrahedral meshes, but I do not believe the hexahedral adaptation was ever fully functional."" That matches my experience with a few tests I ran.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/492#issuecomment-355796132:220,test,tests,220,https://su2code.github.io,https://github.com/su2code/SU2/pull/492#issuecomment-355796132,1,['test'],['tests']
Testability,@economon I have personally installed SU2 software (from versions 3 to 6) in our cluster without problems. I think the issues could be because of lack of C11 features. I tried to run a sample code with aligned_alloc and I had problems with both Intel and GCC compilers. I'll test this again. I think I'll have to install gcc myself. Regards; Suman,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-620724039:275,test,test,275,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620724039,1,['test'],['test']
Testability,"@economon I need to fix and test a few things before I push the branch to an internal branch. But I should be able to finish by the end of the next week. If you're looking to improve the C++ inlet profile specification I started, then I'd like to get some feedback on the overall design. There are several different ways to handle this, and I chose what I thought was most logical. I want to make sure that my design choices match your use cases and SU2's design. Should I post a summary here, or would you prefer that I email you?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/467#issuecomment-366493237:28,test,test,28,https://su2code.github.io,https://github.com/su2code/SU2/issues/467#issuecomment-366493237,2,"['log', 'test']","['logical', 'test']"
Testability,"@economon I tested a couple of simpler problems at subsonic speeds, including the ONERA M6 case at M=0.8395. There's occasionally a difference of one iteration out of about 20. Usually the current develop branch is the one that requires more iterations, but not always. I included a snapshot from my tests on the ONERA M6 case at CFL=30. ![convergence_comparison](https://user-images.githubusercontent.com/13340225/48648855-6c97af80-e9b6-11e8-863a-56dfdf0903c8.png). I don't have a good supersonic, viscous test problem, but I suspect the differences in convergence won't be huge there either. This sign change affects a single term out of many and a single component of a 4x4 or 5x5 Jacobian. My take is that the differences are there, but they are very small. I wouldn't have noticed the problem myself if I hadn't been refactoring the code to enable some changes on our end.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/609#issuecomment-439538677:12,test,tested,12,https://su2code.github.io,https://github.com/su2code/SU2/issues/609#issuecomment-439538677,3,['test'],"['test', 'tested', 'tests']"
Testability,"@economon I was envisioning something similar to the TestCases folder. With v&v cases grouped according to what they are testing. Something along the lines of: . 1) Inviscid Simulations: ; a) 2D Inviscid bump; b) 2D oblique shocks interaction; c) ...; 2) RANS simulations: ; a) Flatplate; b) NACA0012; c) ...; 3) Unsteady simulations:; a) Square Cylinder; b) ...; 4) Turbomachinary: ; a) ... And so on. Each of the directories would have sub-directories for different mesh sizes, with configuration files for each mesh level that have optimized parameters for best results. So for example if we are talking about the NACA0012 case, we would have something along the lines of: . a) NACA0012; i) 113 x 33; ii) 225 x 65 ; iii) 449 x 129; iv) ... This way we have a family of meshes and configuration files that are specifically built for the purpose of validating the code and comparing with other solvers. I might be useful to compress meshes that are larger than a certain size (say 10MB). We should also put a limit on the size of a single mesh that the repository can handle (say 50MB?). . Within the home directory, the README file should list all the cases in the repository, who the custodian of the test case is (person with meshes in case the meshes are too large), and which version it was last run on. . I thought about splitting it up into Verification cases and Validation cases, but I thought it would be more informative and intuitive to split up according to the physics of the simulations. My thinking might be limited because that's how I have seen the TestCases folder organized, so any other suggestions are welcome. I think it is imperative that this is accompanied with a section on the SU2 website that showcases just the results of the validation test cases (grid convergence studies, residual reductions etc) and links to the v&v repo appropriately. This way, if people are just inquisitive about SU2's performance, they can get a quick snapshot of the results, without the need ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-426026053:53,Test,TestCases,53,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-426026053,2,"['Test', 'test']","['TestCases', 'testing']"
Testability,"@economon I'm documenting my thoughts on mocking here, partially in response to you but also for any collaborators. The biggest hurdle with mocking frameworks is that they usually require versatile abstract base classes and depedency inversion. SU2 is relatively good at that with solvers, variables, and numerics. But classes like CConfig are completely incompatible with mocking. CGeometry seems to be somewhere in the middle. Mocking can also be [overused](https://testing.googleblog.com/2013/05/testing-on-toilet-dont-overuse-mocks.html). I agree, mocking is a great tool, and has its legitimate uses. [Martin Fowler](https://www.martinfowler.com/articles/mocksArentStubs.html#TheDifferenceBetweenMocksAndStubs) recommends mocking in at least two use cases:; > One is if you're spending a lot of time debugging when tests fail because they aren't breaking cleanly and telling you where the problem is...The second area is if your objects don't contain enough behavior, mockist testing may encourage the development team to create more behavior rich objects. But I believe we can get pretty far just with what we have, and start including mocking as needed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850#issuecomment-621842313:41,mock,mocking,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-621842313,13,"['Mock', 'mock', 'test']","['Mocking', 'mocking', 'mockist', 'mocksArentStubs', 'testing', 'testing-on-toilet-dont-overuse-mocks', 'tests']"
Testability,"@economon No, this looks good to me. It is merge-ready, from my perspective. I chatted with @talbring, and in a future PR we would like to add a simple set of classes to use with unit tests. For example, I've created a ""one-point geometry"" class for use in some of my tests. But I think that we should keep the PRs as incremental as possible. PSA: If anyone else wants to review this PR, they are welcome to. It is no longer a WIP.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850#issuecomment-620382001:184,test,tests,184,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-620382001,2,['test'],['tests']
Testability,@economon Thanks for separating the mesh reader! I think having the possibility to implement analytic meshes can be really beneficial for future testing.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-520774819:145,test,testing,145,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-520774819,1,['test'],['testing']
Testability,@economon There is nothing new in v4 as you have noticed. Some parallelization issue in CGNS library are being investigated and I hope it can be fixed in 4.1 to get CGNS parallel writing in SU2 at some point. Thus no new feature to take advantage from. I think that CGNS multizone was desactivated for the 7.0 release but could be reenabled since the issue was on the ParaView parallel writer. It would be helpful for turbomachinery cases but will require an additional test. ( [This one](https://drive.google.com/drive/folders/1FK8ijEEh8vbtKEeoqX7Qd0h_yj3U6m7a) is still available but may need an update ),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/884#issuecomment-588153738:470,test,test,470,https://su2code.github.io,https://github.com/su2code/SU2/pull/884#issuecomment-588153738,1,['test'],['test']
Testability,@economon can we merge this one soon? It would make reviewing the output changes easier (which already contain this branch).; You and @MicK7 could still update testcases before the release.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-526541234:160,test,testcases,160,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-526541234,1,['test'],['testcases']
Testability,"@economon for the regression test of this PR travis in failing in the TestCases repository, I guess for time limit. Do they have different time limits?. I would propose to merge that PR https://github.com/su2code/TestCases/pull/17) so that we can close this one once the reg test is passing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/445#issuecomment-339132520:29,test,test,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/445#issuecomment-339132520,4,"['Test', 'test']","['TestCases', 'test']"
Testability,"@economon it does work with python 2.7, I have not tried multiple versions of python 3, just 3.7. The failure occurs with the python script and does not get to the point where it starts executing SU2_DEG. The minimum example to reproduce the error is:. ```; from mesh_deformation import mesh_deformation as su2Deform; su2Deform( ""testing.cfg"" ); ```; using [testing.cfg](https://github.com/su2code/SU2/files/2635991/testing.txt), but with a txt extension.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/620#issuecomment-443434414:330,test,testing,330,https://su2code.github.io,https://github.com/su2code/SU2/issues/620#issuecomment-443434414,3,['test'],['testing']
Testability,"@economon should we have one file per logical group with all the required includes, so that elsewhere you can still write ""#include numerics"" instead of having to include all one by one?. @clarkpede that would require passing a ""matrix"" of CConfigs like we do for numerics and so on right? Which would mean making things virtual and so the inlines would not be inline anymore (I think). I like the idea of breaking up the blob... but.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-501213869:38,log,logical,38,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-501213869,1,['log'],['logical']
Testability,"@economon to your question above:; > Thanks again, @davetaflin !; > ; > Just a couple of comments/questions first in the review. Also, when users use SU2_SOL to generate solution files (instead of during runtime with your new implementation), will the older serial implementation still behave as expected for writing Tecplot files?. SU2_SOL still calls COutput::SetBaselineResult_Files, which, for TECPLOT_BINARY output, calls SetTecplotBinary_DomainMesh and SetTecplotBinary_DomainSolution. These are unchanged here, and in my testing, continue to output mesh and solution .szplt files (changed by Scott Imlay to .szplt from .plt).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/656#issuecomment-469378927:528,test,testing,528,https://su2code.github.io,https://github.com/su2code/SU2/pull/656#issuecomment-469378927,1,['test'],['testing']
Testability,"@economon, I expect to run into problems for grids containing around 250 million DOFs, depending a bit on how many variables you store in the restart file. We can definitely do this test with a dummy grid. As you added this to the RPSVV group, let's close this issue here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/696#issuecomment-500965914:182,test,test,182,https://su2code.github.io,https://github.com/su2code/SU2/issues/696#issuecomment-500965914,1,['test'],['test']
Testability,"@economon, from the config files in the V&V folder, it seems like you ran without adaptive CFL and without the unweighted LSQ. The main difference between the V&V runs and these ones is that I don't use any slope limiter. In the V&V cases the `SLOPE_LIMITER_TURB= VENKATAKRISHNAN` option was used. . There are some other differences: ; 1. I use adaptive CFL; 2. I use `REF_DIMENSIONALIZATION= FREESTREAM_PRESS_EQ_ONE`; 3. Linear solver settings are slightly different. For the V&V runs the following are used: ; ```; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-15; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 25; ```; For my runs, I used the settings you had suggested in #790 : ; ```; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-10; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 10; ```; 4. For the SST runs, I did not specify these options that you used in the V&V case: ; ```; % Free-stream turbulence intensity for the SST model; < FREESTREAM_TURBULENCEINTENSITY = 0.00038729; < %; < % Free-strem turbulence to laminar viscosity ratio for the SST model; < FREESTREAM_TURB2LAMVISCRATIO = 0.009; ```; I have attached the config files I used. I am still working on confirming all the regression tests, everything seems to be reasonable thus far. . [flatplate_configs.zip](https://github.com/su2code/SU2/files/4336003/flatplate_configs.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/905#issuecomment-599337194:1396,test,tests,1396,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-599337194,1,['test'],['tests']
Testability,"@economon, yeah it is ready. The regression is a file diff that has 10k lines (only 100kB though), is it ok to have the reference file in the code repo or should I move it to testcases?; No that script is not in the PR, I can try to put a minimal version together.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/595#issuecomment-437582019:175,test,testcases,175,https://su2code.github.io,https://github.com/su2code/SU2/pull/595#issuecomment-437582019,1,['test'],['testcases']
Testability,"@erangit That agrees with my setup; the computational interconnect is rdma and the file systems are a mix of NFS and FUSE (issue on both). I have run additional benchmarks to ensure that MPI-IO is functional, it is. I ran NPB3.4 BT-IO and encountered no issues (utilizes MPI_File_open etc; link: https://www.nas.nasa.gov/publications/npb.html).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-624645764:161,benchmark,benchmarks,161,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-624645764,1,['benchmark'],['benchmarks']
Testability,"@fertinaz the problem is that the pkg_config name for MPICH is not ""mpi"" which is what meson is configured to look for...; It is ""mpich"", please see my reply from 23 of May, it is very simple to edit the meson.build script to look for ""mpich"" instead of ""mpi"".; I have used this on numerous machines and the code works fine...; Whatever you do, please do not follow the advice to use 6.2.0, we have all worked extremely hard to make v7.x much faster, fix bugs, and add nice features... Unfortunately we cannot test every combination of compiler, operating system, and libraries.; I'm sure that somewhere, someone has fixed similar problems, sadly not all fixes make it back into the code. Other alternatives, some of which folks have suggested on this thread.; - Use ""custom-mpi"" mode, you will need to set some environment variables (CC=mpicc CXX=mpicxx etc. see above); - Use the legacy build system (i.e. follow the instructions for 6.2.0 but with the 7.0.7 code) be sure to add ""-DNDEBUG"" to the CXXFLAGS environment variable.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721322008:510,test,test,510,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721322008,1,['test'],['test']
Testability,"@fpalacios : there were two main issues with the regressions. Both are time out problems if Travis waits for over 10 minutes without any console output. The first was that we need to flush the output for Python 3 for each regression test, otherwise there is too long between cases and sometimes it fails. The second is that sometimes it takes too long to download the test cases, so I have added the keywords 'travis_wait 90' in the call to the entire python script in .travis.yml in order to extend the 10 minute restriction to 90 min. We still need to reduce the time for the tests overall, but it seems to be stable for the time being.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/519#issuecomment-381217217:233,test,test,233,https://su2code.github.io,https://github.com/su2code/SU2/pull/519#issuecomment-381217217,3,['test'],"['test', 'tests']"
Testability,"@fredericodpc if you find a way I'd be interested to hear how you did it! In my testing, it seems to work for 2D but not 3D.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-846597057:80,test,testing,80,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-846597057,1,['test'],['testing']
Testability,"@hlkline That's a good point about the regression tests ensuring that the v&v results will be unlikely to change. If we have the same residuals for all the test cases, it isn't a stretch to say that the final results of the v&v cases will stay the same. But sometimes the test values for the regression tests are changed during development and then we lose the guarantee. . From the viewpoint of being rigorous, I agree with the suggestion to run the v&v cases before a major release like 7.0 and also with @erangit on keeping track of the last version that they were run for. I am unsure about holding the people who add the test cases responsible for re-running them. Circumstances change, and access to resources change. That may make it hard for people to run the v&v cases. . I also think it is a good idea to have the effort be collaborative so people can add cases. My concern is about size limits that github has on repositories. Some of the mesh files are going to be massive, especially given that we want to perform grid convergence studies. We will soon be over the size limit. I am not sure about how to get around that. Suggestions would be great!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423291806:50,test,tests,50,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423291806,5,['test'],"['test', 'tests']"
Testability,"@hlkline the regression tests are now failing, but I checked the develop and that is also also failing. I guess this is due to the recent updates of the TestCases repository. Do you have any suggestion (I saw you pushed some changes in the testcase repo)? Maybe I can comment the failing testcase before your PR? I tried to modify the regression script according to #385, but there are some files missing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/382#issuecomment-288101658:24,test,tests,24,https://su2code.github.io,https://github.com/su2code/SU2/pull/382#issuecomment-288101658,4,"['Test', 'test']","['TestCases', 'testcase', 'tests']"
Testability,"@jaspe55 : I have just cleaned up a couple of things and can confirm that your mesh file is there. However, we are missing the converged solution file (solution_flow.dat) and the target Cp file for inverse design. Similar to the process for the mesh, can you please upload the solution file to the TestCases repo and the target Cp file to the SU2 code repo (alongside the config file)? Once the files are present, we can update the regression values in the serial_regression_AD.py and parallel_regression_AD.py files, and this PR will be ready to merge.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-456240798:298,Test,TestCases,298,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-456240798,1,['Test'],['TestCases']
Testability,"@jaspe55 : I see that you have added the residual check for the python regression script, but I do not see the config file, target file, or mesh. The config file and target file should be placed in SU2/TestCases/disc_adj_euler/arina2k/ (according to your path in the regression script), and the mesh placed in the TestCases/disc_adj_euler/arina2k/ directory in the TestCases repository here (develop): https://github.com/su2code/TestCases/tree/develop. Don't forget to 'git add' the files to make sure they are included on push. We can help diagnose any segfaults with the files.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-447209397:202,Test,TestCases,202,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-447209397,4,['Test'],['TestCases']
Testability,@javsu : can you try the change in the develop branch directly? It was working for me there with the config in the test cases repo (other than changing EXT_ITER -> ITER). You can also be more aggressive with the CFL in that config.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/997#issuecomment-633126402:115,test,test,115,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-633126402,1,['test'],['test']
Testability,"@jayantmukho : I am seeing two possible reasons for the test failure.. . 1. There are changes noted to some of the autotools files that I don't normally expect. Did you run the ./bootstrap script locally in order to update the Python script install list? If not you may want to try again, since we should see minimal changes recorded in the commit. 2. The logs report that externals/codi changed, but I don't think anything should be modified from there. Can you please revert any changes in that directory?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/570#issuecomment-417523118:56,test,test,56,https://su2code.github.io,https://github.com/su2code/SU2/pull/570#issuecomment-417523118,2,"['log', 'test']","['logs', 'test']"
Testability,"@jayantmukho If the upload size limit on Github is an issue, and I suspect it likely will be for these large 3D meshes, we can follow the BANC model -- the researchers who conducted the corresponding V&V cases are named custodians of these test case with explicit understanding that data will be shared upon request. This way, the data resides with a particular SU2 dev group or groups and need not be uploaded. However, I think the config files and all other info necessary for other users to replicate the test cases must be uploaded. Best,; Beckett",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423295060:240,test,test,240,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423295060,2,['test'],['test']
Testability,"@jayantmukho The fix in PR in #921 is done. Whereas the shape optimization restart did not work before, it does work now, at least on the two test cases I checked. The only thing missing is a regression test, to make sure bugs like that don't happen again. So I agree that it should be merged soon while the long-term refactoring occurs. As for post-processing, the objective function calculation can be quite complex in the use-cases Beckett and I have encountered. That's why it's run as a post-processing step, rather than updated continuously during runtime. But I agree that those types of changes can be limited to the C++ side of the code, with minimal changes to the python wrappers. So it may not be relevant to the current refactoring.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/923#issuecomment-607975492:142,test,test,142,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607975492,2,['test'],['test']
Testability,"@jayantmukho, can we merge in this one or do you prefer to wait until the data for CHT test case has been confirmed?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/605#issuecomment-435574030:87,test,test,87,https://su2code.github.io,https://github.com/su2code/SU2/pull/605#issuecomment-435574030,1,['test'],['test']
Testability,"@jayantmukho, is it possible to plot the wall distance for both cases as well as the difference in wall distance? Furthermore, what is the grid you used for this test case? Do you expect large differences in the wall distances between both formulations?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/605#issuecomment-436165257:162,test,test,162,https://su2code.github.io,https://github.com/su2code/SU2/pull/605#issuecomment-436165257,1,['test'],['test']
Testability,"@jblueh are the tsan tests using a special version of CoDi?; ```; Note: switching to 'refs/pull/2158/merge'. You are in 'detached HEAD' state. You can look around, make experimental; M	externals/codi; ```; Does it need some kind of update?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2158#issuecomment-1999358487:21,test,tests,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/2158#issuecomment-1999358487,1,['test'],['tests']
Testability,"@jhowison : thanks for the extra effort to clean things up. It is very important to have community involvement, and it's a very nice contribution! Nice to see you and @arubino work together on this too. We'll merge once the tests pass.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/445#issuecomment-342591090:224,test,tests,224,https://su2code.github.io,https://github.com/su2code/SU2/pull/445#issuecomment-342591090,1,['test'],['tests']
Testability,"@joshkellyjak The memory access violation described [here](https://github.com/su2code/SU2/pull/2246#issuecomment-2034404720) does not occur unconditionally, it depends on the test case. The iterations of the inner loop for `jSpan == 0` and `jSpan == nSpanDonor - 1` (that we removed in the fix) only have an effect if the if-conditions in the loop body evaluate to `true`. I checked this for the serial test cases in the test file's ""turbomachinery"" section. - `aachen_turbine_restart`: iterations both with `jSpan == 0` and `jSpan == nSpanDonor - 1` have an effect, the latter trigger the memory access violations; - `jones_turbocharger_restart`: some iterations with `jSpan == 0` have an effect, but iterations for larger `jSpan` usually overwrite the results; also, the case `jSpan == 0` does not trigger the memory access violation; - `axial_stage2D`: the problematic code is not executed by this test case; - `transonic_stator_restart`: the problematic code is not executed by this test case. I think these observations point to why only the Aachen test case had address sanitizer findings, and why only the results of the Aachen test case were affected by the attempted fix. The other test cases basically ""do not care"" whether we do the extra iterations. @alecappiello Regarding your earlier question about the restart file. Restart files are to some extent specific to the version of SU2 they were obtained with, in the sense that newer versions of SU2 can behave differently if they use an old restart file. I was wondering if this is the case here, too. If the memory access violation had manifested itself in the restart file, a version of SU2 with the memory access violation fixed could give different results. The observations above point to why only the Aachen test case is affected.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2276#issuecomment-2127703507:175,test,test,175,https://su2code.github.io,https://github.com/su2code/SU2/issues/2276#issuecomment-2127703507,9,['test'],['test']
Testability,"@jtneedels the testcases currently failing are my fault, they will be fixed in a minute.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1162#issuecomment-759607026:15,test,testcases,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/1162#issuecomment-759607026,1,['test'],['testcases']
Testability,"@maxaehle as far as I see there are no further comments from pedro or me, so if you merge develop + pass the reg test feel free to merge this. (of course if you also have no further plans with this PR); Thanks again for this contribution!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1435#issuecomment-976418121:113,test,test,113,https://su2code.github.io,https://github.com/su2code/SU2/pull/1435#issuecomment-976418121,1,['test'],['test']
Testability,"@mheimgartner first of all congrats to this openend PR. For the builds in the tests, compiler warnings are treated like errors. I.e. the code compiles and works on your side but the test-builds won't if certain warnings are present (like unused variables). ; For more information where to look, see the `Details` button next to the individual builds. Click and wait a moment ... that will automatically scroll down for you. ; The failing builds will be for the same code bits probably, so looking at BaseNoMPI for the start should suffice. To look in the `Details` and change code from there might be tedious so you can see the warnings locally by setting `./meson.py <your build folder> ... --warnlevel=3 ...`. Work through the warnings until there are none left -> commit the changes and push. That will probably calm the compiler-warnings-are-errors gods and grant you access to the regression test",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1332#issuecomment-885546022:78,test,tests,78,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-885546022,3,['test'],"['test', 'test-builds', 'tests']"
Testability,"@mheimgartner it would be helpful to compare the full residual history of the two regression Testcases before and after this last commit. (you prob already have the ""old"" histories and just have to do 2 new ones, you know best how the case beahaves etc). The commit I added will fail the regression test but I strongly believe the Pseudo-time update, convective and viscous Jacobians were wrong. . A reason this went unnoticed might be because the densities were O(1), so disregarding them in the solution update after the Linear Solver acts some kind of Relaxation Factor (which can be larger 1 depending whether density < or > 1). And I guess that could be fixed via CFL or this CFLReductionFactor anyway.; The Jacobians were taking with respect to Y alone, which is not correct. They have to be taken with respect with rho*Y, the transported variable imo. The conv Jacobian is arguably the most important one (and tested alone showed the biggest lift in residual improvement). ; I briefly checked the BC's and DualTimeRes for this Jacobian problem. For the BC's I found no hand-derived Jacobians and DualTimeRes seems ok (but is not used afaik).; Note that if one got a case to convergence(=> Res ~=0) the Jacobians and pseudo time derivative do not matter of course at that point. So comparing fully converged solution should show only marginal/no differences. A little test showed mild benefits after 10 iter with the C6_vel_inl (but only 5 LinSolIter ... aint nobody got time for 50). old; Iter| rms p ....... | rms u ....... | rms v ......... | rms scalar; 10| -5.707858| -4.397627| -4.445825| -5.408779|; new; 10| -5.701236| -4.405045| -4.460350| -5.473466|",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1332#issuecomment-906774447:93,Test,Testcases,93,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-906774447,4,"['Test', 'test']","['Testcases', 'test', 'tested']"
Testability,"@oleburghardt @talbring This PR fixes the multicore heat-flux-sensitivitiy issues. Tested with the tutorial made by ole. Good job. I added a commit that fixes the error-message if you want to have tecplot-binary output but compiled using the --disable-tecio flag. It caused a compile time error ... it is behind a preprocessor statement #ifndef HAVE_TECIO, so this thing is only seen when using the --disable-tecio flag.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/798#issuecomment-541239861:83,Test,Tested,83,https://su2code.github.io,https://github.com/su2code/SU2/pull/798#issuecomment-541239861,1,['Test'],['Tested']
Testability,"@oleburghardt I figured why `direct_solver->GetNodes()->GetAdjointSolution_intIndexBased(iPoint,Solution)` was being executed, but as the FSI problem is multi-zone adjoint, it is required that `config->GetMultizone_Problem() = true` even when we are not using the driver `CDiscAdjMultizoneDriver`. . There is, of course, the possibility to set a specific boolean for these test cases in particular, but I think that would over-complicate the code. Else, it should be possible to extend the index based to the rest of the features required (geometry and structural solvers), which would be my preferred option.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542204060:373,test,test,373,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542204060,1,['test'],['test']
Testability,"@pcarruscag , @HahsFilip . Do the hybrid tests need an update? Do any of you have any idea about why they are failing?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2095#issuecomment-1815584974:41,test,tests,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/2095#issuecomment-1815584974,1,['test'],['tests']
Testability,"@pcarruscag ,; I have modified the **cfg** file and it passed the test with ```mpirun -n 2 SU2_DEF naca0012.cfg```.; I also modified **AUTHORS.md** and **parallel_regression.py**",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2124#issuecomment-1703569096:66,test,test,66,https://su2code.github.io,https://github.com/su2code/SU2/pull/2124#issuecomment-1703569096,1,['test'],['test']
Testability,@pcarruscag . Fell free to check and merge. I will refactor screen outputs later in the logging implementation,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1988#issuecomment-1491542559:88,log,logging,88,https://su2code.github.io,https://github.com/su2code/SU2/pull/1988#issuecomment-1491542559,1,['log'],['logging']
Testability,"@pcarruscag . Of course I can make the test case available. Could you give me your email address, such that I can send you a link?; The typical size of the matrices is problem dependent. You can profile the gemm calls by adding the -DPROFILE flag to the compiler options. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-462245462:39,test,test,39,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-462245462,1,['test'],['test']
Testability,"@pcarruscag ; Hi, I have opened a PR #2124 and add a **cst** test case to **TestCases/deformation/**",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2123#issuecomment-1703393986:61,test,test,61,https://su2code.github.io,https://github.com/su2code/SU2/issues/2123#issuecomment-1703393986,2,"['Test', 'test']","['TestCases', 'test']"
Testability,"@pcarruscag ; [config-and-makefile-for-scotch-and-pastix.zip](https://github.com/su2code/SU2/files/6959270/config-and-makefile-for-scotch-and-pastix.zip). So very good news, I compiled successfully on Fedora 34 using GCC-11.2 and OpenMPI-4.1.1 using Scotch-6.0.6 and Pastix-5.2.3. I have attached the relevant config and make-file with my relevant edits for reference. Newer openmpi works if you are willing to edit the CCFLAGS pointing to their bin, lib and include file. Currently had no issues running test cases such as fea and aeroelastic. However I don't know which one specifically uses pastix so i can test that but if you do know, let me know. I disabled forward mode ad during meson config so I didn't run into the error. I also enabled shared libraries for both scotch and pastix. . Looking forward to your response =)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1349#issuecomment-895748919:505,test,test,505,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349#issuecomment-895748919,2,['test'],['test']
Testability,"@pcarruscag @WallyMaier ; I think I've adressed most of what you spotted in the latest commits. Thanks for taking so much care - you already helped me a lot getting everything ready to enter the main version, especially concerning the just-for-development adaptions that I had forgotten about. @TobiKattmann ; I sneaked in another commit for primal CHT that _might_ help with your issue. I'm still running tests that might confirm my guesswork. (Though you can already try it by setting `CHT_ROBIN= NO` which will then just directly apply heat fluxes.) I'm coming back to this once I'm sure about it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/774#issuecomment-538411667:406,test,tests,406,https://su2code.github.io,https://github.com/su2code/SU2/pull/774#issuecomment-538411667,1,['test'],['tests']
Testability,@pcarruscag @aeroamit I do not have a good test case. But am currently looking for one. Let me know if y'all find a good.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-500227831:43,test,test,43,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-500227831,1,['test'],['test']
Testability,"@pcarruscag @martin-g I'm not sure how the regressions should run using the AARCH64 tests. I made some changes, but everything is still passing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1698#issuecomment-1175704815:84,test,tests,84,https://su2code.github.io,https://github.com/su2code/SU2/pull/1698#issuecomment-1175704815,1,['test'],['tests']
Testability,@pcarruscag All of the things look reasonable. The long-term goal would be to really have a generic interface for the linear solvers (at least that was my goal) so that we don't have to distinguish between mesh deformation and flow solution anymore inside of the CSysSolve class. Rather we pass objects for the solver and preconditioner and other options to the constructor. We can merge this in as soon as the tests pass.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/650#issuecomment-474871738:411,test,tests,411,https://su2code.github.io,https://github.com/su2code/SU2/pull/650#issuecomment-474871738,1,['test'],['tests']
Testability,@pcarruscag Any idea what this formatting test is and why it is not running?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2371#issuecomment-2449763159:42,test,test,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/2371#issuecomment-2449763159,1,['test'],['test']
Testability,"@pcarruscag Both Akima and Linear capabilities are working totally as expected. No seg faults or any other kind of errors. I have to carry out some regression tests and post processing now to confirm everything is working fine. I am so greatly thankful for your help. I have converted this pull request from Draft to Open. Tests are failing with MPI issues, if you can help me with that it will be great. Although I am running on MPI on my CentOS system on 4 cores it works fine. I would be adding comments with all the methods explaining their purpose plus leveling my branch with most recent develop. Thanks again!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/815#issuecomment-586033819:159,test,tests,159,https://su2code.github.io,https://github.com/su2code/SU2/pull/815#issuecomment-586033819,2,"['Test', 'test']","['Tests', 'tests']"
Testability,"@pcarruscag Coming back to our discussion a while ago, it should do MPI now (at least for my testcases it does). I'll clean it up and probably remove Eigen completely.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1217#issuecomment-863186117:93,test,testcases,93,https://su2code.github.io,https://github.com/su2code/SU2/pull/1217#issuecomment-863186117,1,['test'],['testcases']
Testability,@pcarruscag I can change one of the existing testcases to have a validation,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1500#issuecomment-1016864662:45,test,testcases,45,https://su2code.github.io,https://github.com/su2code/SU2/pull/1500#issuecomment-1016864662,1,['test'],['testcases']
Testability,@pcarruscag I guess the last to changes were in the equivalent area computation routine so they shouldn't alter the result of 'discadj_incomp_cylinder' in hybrid_regression_AD? Why does it fail?. In the flamelet PR I am currently fixing all regression tests and conflicts and I noticed in one of the recent runs that hybrid_regression_AD failed for a case which I couldn't explain at all. Rerunning the regression tests without any code modification solved that problem... so there seems to be some non-deterministic behavior maybe. @jblueh have you noticed such behaviour over at #1294 ?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-898476956:252,test,tests,252,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-898476956,2,['test'],['tests']
Testability,@pcarruscag I have a small file with two zones here: https://github.com/MicK7/TestcaseStage37; It is the classical NASA stage 37 (https://www.turbostream-cfd.com/case-studies/nasa-stage-37-stall-inception) but the file is 149 Mo. Do you think the size would not be too big to have it as a testcase ?; Sorry for replying on a closed PR ...,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1566#issuecomment-1083628547:289,test,testcase,289,https://su2code.github.io,https://github.com/su2code/SU2/pull/1566#issuecomment-1083628547,1,['test'],['testcase']
Testability,@pcarruscag I would not call that an avoidable bug considering the fact that the regression test passed.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/751#issuecomment-518274692:92,test,test,92,https://su2code.github.io,https://github.com/su2code/SU2/pull/751#issuecomment-518274692,1,['test'],['test']
Testability,"@pcarruscag In this PR, I have a problem with running the regression tests, because it can not find my branch, as can be seen in the figure below:; ![image](https://github.com/su2code/SU2/assets/115089238/cd327674-5ba1-463e-814c-6219f9fda4e2); I believe it might be related to the fact that I'm creating a PR from a created fork of the SU2 repository, instead of just having an own branch in the su2code/SU2 repository. So, the branch I'm in is located in sjhbtue/SU2. Could this indeed be the problem or do you think I can still solve it in a different way? Thanks in advance!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2100#issuecomment-1665575888:69,test,tests,69,https://su2code.github.io,https://github.com/su2code/SU2/pull/2100#issuecomment-1665575888,1,['test'],['tests']
Testability,@pcarruscag Of course! I already looked at `channel ` and `oneram6` case more detailed also with up to 28 cores. Computed from freestream conditions to convergence I found that the difference in convergence is only a handful of iterations. I will post some residual comparisons for one or two cases. I also want to look a bit more detailed at supersonic wedge and at least one incompressible case. ; And all the cases with big deltas and the filediff cases need special treatment (and a more in depth look) anyway...; Thanks for testing your cases as well! Helps a lot,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-524819658:529,test,testing,529,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-524819658,1,['test'],['testing']
Testability,@pcarruscag Thanks for approving the pull request. Your advice has been immensely important for me to complete this. I hope this is merged timely to avoid any further changes with the develop branch. I will update the config template and add a test case to the repo soon.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/815#issuecomment-589673332:244,test,test,244,https://su2code.github.io,https://github.com/su2code/SU2/pull/815#issuecomment-589673332,1,['test'],['test']
Testability,"@pcarruscag Thanks for the cleanup. I have made a [pull request](https://github.com/su2code/TestCases/pull/72) to update solution file for the test case. You have deleted codes that create WeightNF.dat so I have deleted it from python codes as well. (I tried to push as a suggestion but it didn't work as I expected). > I think nearfield was a kind of internal interface between two boundaries with the same points, so not a ""do nothing"" group of points but more like an actuator disk without any jump. I thought so when I was trying to make it work in ver.6 but, when I tried with mesh with two boundaries with the same points, it didn't work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1351#issuecomment-899276864:92,Test,TestCases,92,https://su2code.github.io,https://github.com/su2code/SU2/pull/1351#issuecomment-899276864,2,"['Test', 'test']","['TestCases', 'test']"
Testability,@pcarruscag The PR is ready for review!; There are two regression tests which always fail - https://github.com/su2code/SU2/runs/7019382870?check_suite_focus=true; `polar_naca0012` in `serial_regression.py` and `parallel_regression.py`. The computed values are different in each run :-/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1619#issuecomment-1164226451:66,test,tests,66,https://su2code.github.io,https://github.com/su2code/SU2/pull/1619#issuecomment-1164226451,1,['test'],['tests']
Testability,"@pcarruscag The aarch64 related changes are almost done!. There are few tests which fail with this error, e.g. serial_regression.py:; ```; ==================== Start Test: turb_naca0012_3c ====================; /github/workspace/tests/TestCases/rans_uq/naca0012; turb_naca0012_3c: FAILED; Output for the failed case; execution command: SU2_CFD turb_NACA0012_uq_3c.cfg.autotest > turb_NACA0012_uq_3c.cfg.log 2>&1; ERROR: The code was not able to get to the ""Begin solver"" section.; ERROR: The iteration number 10 could not be found.; CPU architecture=aarch64; test_iter=10; test_vals (stored): -5.584300, 0.931352, 0.248990, -0.109405; sim_vals (computed): ; delta_vals: ; test duration: 0.00 min; ==================== End Test: turb_naca0012_3c ====================. Error in ""void CConfig::SetConfig_Parsing(std::istream&)"": ; -------------------------------------------------------------------------; Line 26 SST_OPTIONS: invalid option name. Check current SU2 options in config_template.cfg.; Did you mean FFD_ITERATIONS?. ------------------------------ Error Exit -------------------------------; ```. Any idea what could be the reason this to fail only on ARM64 ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1619#issuecomment-1138415499:72,test,tests,72,https://su2code.github.io,https://github.com/su2code/SU2/pull/1619#issuecomment-1138415499,7,"['Test', 'log', 'test']","['Test', 'TestCases', 'log', 'test', 'tests']"
Testability,@pcarruscag The build passes now after updating the regression tests expectations!. Should I continue working on this PR for the ARM64 part or should we merge it (without the new `regressions-arm64.yml`) and do the rest in another PR ?. Also what is your opinion on the change for the `warnlevel` ? Without it it is not possible to compile HDF5,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1619#issuecomment-1131615310:63,test,tests,63,https://su2code.github.io,https://github.com/su2code/SU2/pull/1619#issuecomment-1131615310,1,['test'],['tests']
Testability,"@pcarruscag Wait, why did you merge this when the last commit made so many regression tests fail? I guess you did you not wait until they were finished? Not cool though and I hope this was not intentional; From what I've seen it is not super obvious how the tests are linked (especially the parallel_AD ones) but the commit is not that big so I only really suspect the removed enum entries of all ....",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1249#issuecomment-811434977:86,test,tests,86,https://su2code.github.io,https://github.com/su2code/SU2/pull/1249#issuecomment-811434977,2,['test'],['tests']
Testability,"@pcarruscag Yes, completely forgot about this. I can probably bring the functionality back in without using or waiting for #774 to make the regression test pass. I'll talk to @rsanfer next week to split the config files into the new multi-zone format.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-538361577:151,test,test,151,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-538361577,1,['test'],['test']
Testability,"@pcarruscag done, it's merged in already so you can uncomment your test case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555#issuecomment-423941651:67,test,test,67,https://su2code.github.io,https://github.com/su2code/SU2/pull/555#issuecomment-423941651,1,['test'],['test']
Testability,"@pcarruscag thanks for the comments. I have fixed most of them I think. . In general, I think the PR is ready to be reviewed. I will think of a decent test case and add it soon.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-655174580:151,test,test,151,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-655174580,1,['test'],['test']
Testability,"@pcarruscag, I agree with you it will be hard to beat the MKL (running at 60 percent peak for most of the gemm calls for the DG-solver), but if you don't have any performance loss, that would already be nice, as it improves readability. Furthermore, the performance of the DG solver in combination with the discrete adjoint is horrible, because it relies on my very naive implementation of the matrix products. So it would already be something if we can get an improvement there, although we do not use the DG adjoint solver (yet). . For me the easiest way to test things out for the DG-solver would actually be in SU2 itself. @economon put some nice profiling routines in there for the gemm calls, which can be used without any additional work to test eigen. @pcarruscag (or somebody else), could you create a branch in which eigen is downloaded in the external directory? I think I can manage from there. Thanks,. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459952137:560,test,test,560,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459952137,2,['test'],['test']
Testability,"@pcarruscag, everything looks to be working as it should. As soon as the last regression test goes through (it failed due to a connection time out), it can be merged in.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/603#issuecomment-435128510:89,test,test,89,https://su2code.github.io,https://github.com/su2code/SU2/pull/603#issuecomment-435128510,1,['test'],['test']
Testability,"@pcarruscag, sorry for the delay I had to get my life together a bit after the conference :). I think I have the correct changes, I have changed the tests and removed unused lines. Filip",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2095#issuecomment-1793386585:149,test,tests,149,https://su2code.github.io,https://github.com/su2code/SU2/pull/2095#issuecomment-1793386585,1,['test'],['tests']
Testability,"@pcarruscag: I'm in the process of creating a test case for the 3D gust. To do so, I created a CFD mesh for a simple, rectangular 3m wing with a NACA0012 profile. The mesh has a size of 13.7 Mb and a restart solution is 16.3 Mb plus 5.5 Mb (.csv and .dat). Do you think that is acceptable?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1545475126:46,test,test,46,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1545475126,1,['test'],['test']
Testability,"@pcarruscag: the approach to use different gradient methods for the convective and viscous terms is relatively common across codes. If it is a computational cost concern, this can be addressed by fusing the kernels. . However, the bigger issue at hand is the other comment that is made in the article about the choice between LSQ and WLSQ/GG for 2nd-order upwind reconstructions: while less accurate, the former is much more robust, while the latter two usually require limiters just to obtain a stable solution on stretched RANS-type meshes, even for flows where we do not expect shocks/discontinuities. The problem with always requiring a limiter is that they stall convergence due to chatter, which apart from the obvious problems, also causes issues for the adjoint. I think everyone has experienced this. Hence the compromise to use both gradients as I note above, which is also stated on p. 9 of Anderson and Bonhaus ""An Implicit Upwind Algorithm for Computing Turbulent Flows on Unstructured Grids."" In that paper they mention an additional interesting point that, in their numerical tests, LSQ outperforms WLSQ/GG for reconstructing nonlinear data at interfaces on highly-stretched meshes. Note the WLSQ/GG gradients are used for the viscous terms, which is important for accuracy. This type of approach is still applied in FUN3D. . If there are any accuracy concerns, we can also address those via our typical verification tools. I agree that we should continue along the path of looking at grid quality issues and how they impact the numerics (potentially adding some grid-based corrections / limiting), but I think the proposed approach in this PR will serve us well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-532883592:1091,test,tests,1091,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-532883592,1,['test'],['tests']
Testability,"@petebachant: the paper that I linked earlier on this thread had some fairly simple examples similar to the one you propose.. different flat plates and so on with varying y^+. You can likely reuse the grid(s) in the TestCases repo. @vdweide: it was very simple in this first implementation. It checks for a single boolean for whether or not to apply wall functions (WALL_FUNCTIONS= YES or NO, https://github.com/su2code/SU2/blob/43b8a4015c4b09b01d78e4243d32011c663c2b70/SU2_CFD/src/solver_direct_mean.cpp#L15339), and then assumes they should be applied to all no-slip walls (heat flux or isothermal, https://github.com/su2code/SU2/blob/43b8a4015c4b09b01d78e4243d32011c663c2b70/SU2_CFD/src/solver_direct_mean.cpp#L16653). This could of course be made more specific for individual markers using a config structure like MARKER_MONITORING to list them, or by making a dedicated BC type for it potentially.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-327308587:216,Test,TestCases,216,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-327308587,1,['Test'],['TestCases']
Testability,"@rsanfer , I deleted CFEAFSIBoundVariable and kept its data in CFEABoundVariable because:; - It would require two vertex maps to be build, one for vertices another for interfaces.; - It would be less efficient memory wise, the vertex map is size O(N) the number of vertices is O(N^(2/3)) in the worst case, which means eventually having two maps is worse.; - Most FSI cases have a large interface and small fixed boundaries, allocating FSI tractions for the latter is not so bad. I also removed CDiscAdjMeshVariable, as it was empty, and kept only its ""Bound"" counterpart. With this vertex allocation / mapping strategy we always need to instantiate the ""Bound"" version of the class so if the intermediates are empty they can be omitted. Please review the changes and if you have some more thorough tests run them or send them over to me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/753#issuecomment-526546118:799,test,tests,799,https://su2code.github.io,https://github.com/su2code/SU2/pull/753#issuecomment-526546118,1,['test'],['tests']
Testability,"@rsanfer I'm using a test case from Ref [1], which doesn't exactly match the test case matching the figure I gave from Ref [2]. In Ref [1], they ran a whole ensemble of tests at various resolutions, corrections, and inflow/initial conditions. Some of the tests involved laminar separation, while others involved turbulent separation. I did not pick one of the Re = 50,000 cases because those cases involve laminar separation. Travin *et. al.* used a special nonuniform initial condition to promote laminar separation, which I viewed as overly complicated for the purposes of these tests. Instead, I picked a turbulent separation case at Re = 1.4 x 10^5 (roughly matching TS1 from Ref [1]). If you want more details/grids/cfg files, I can certainly provide them. Yes, I used the unsteady compressible solver. But I'm unsure if the circular cylinder case provides a good test case for the unsteady incompressible solver. I did very little with this test case in terms of a proper validation. The references I listed went to great lengths to ensure that the numerical results were consistent with experiments. It seems like a challenging test case. There were a lot of improvements I should have made if I were also trying to get consistent results. For example, my spanwise length was too short, and I didn't look into the impact of the rotation correction for the SA model. I skipped these improvements in the interest of time, since I wasn't aiming for validation, but rather a simple acceptance test.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/552#issuecomment-403850762:21,test,test,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/552#issuecomment-403850762,9,['test'],"['test', 'tests']"
Testability,"@rsanfer testcase is in. I used the Knowles material model, I don't think there was a regression for it.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/681#issuecomment-497805949:9,test,testcase,9,https://su2code.github.io,https://github.com/su2code/SU2/pull/681#issuecomment-497805949,1,['test'],['testcase']
Testability,"@snow54 I think the solution file for your testcase will have to be updated, can you have a look please to make sure the discrete adjoint still works?; This should also fix the problems you had with the Venkatakrishnan limiter.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1351#issuecomment-899099971:43,test,testcase,43,https://su2code.github.io,https://github.com/su2code/SU2/pull/1351#issuecomment-899099971,1,['test'],['testcase']
Testability,@suargi An update to the TestCases repo renamed a folder for the visc_cone. I have a PR open to fix the problem ---> Should be fixed now.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1418#issuecomment-958158548:25,Test,TestCases,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/1418#issuecomment-958158548,1,['Test'],['TestCases']
Testability,@suargi Just a service note on the hybrid_regression_AD.py reg tests that fail: They seem to sometimes fail due to mood swings or idk. So if you Re-run them in the `Checks` tab above or merge the latest develop they might not fail on you,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1362#issuecomment-907513414:63,test,tests,63,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-907513414,1,['test'],['tests']
Testability,"@sun5k please take care of the two comments above from my last review, and add regressions for your 2 tutorials (see what is done in TestCases/tutorials.py. Then I think we can merge this PR!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751#issuecomment-1293016206:133,Test,TestCases,133,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751#issuecomment-1293016206,1,['Test'],['TestCases']
Testability,"@talbring ; Really sorry for troubling you again. I followed your suggestions to install singularity (3.3.0) and use the su2.sif you shared with me. I run `mpirun -n 24 su2.sif SU2_CFD inv_NACA0012.cfg`. It failed to work. see the log file. ; [su2.sif.log](https://github.com/su2code/SU2/files/3424842/su2.sif.log). The reason should be the OpenMPI version. But I also have installed openmpi-4.0.1 and add ; ```; export PATH=$PATH:$HOME/openmpi/bin; export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/openmpi/lib; ```; to my `.bashrc` file. But when I run `mpirun --version`, the output is; ```; mpirun (Open MPI) 1.10.2. Report bugs to http://www.open-mpi.org/community/help/; ```. The OS on my computer is ubuntu 16.04. Could you give me some suggestions to solve this problem ? I google for this but failed to find a good way. Best.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/739#issuecomment-514460795:231,log,log,231,https://su2code.github.io,https://github.com/su2code/SU2/issues/739#issuecomment-514460795,3,['log'],['log']
Testability,"@talbring @economon Thanks to you both!!. I could realise most of your remarks. To summarize the leftovers:. 1. Concerning the intersecting code with your heat extension to the incompressible solver - should we already find common function names or do we align them once they will be merged?; 1. Concerning the numerics class CSourceHeating: I think I will remove it for now, as I don't have any use or test case for it anyway.; 1. I will wait for your agreement on the FEM solver, if that's alright.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/505#issuecomment-372674121:403,test,test,403,https://su2code.github.io,https://github.com/su2code/SU2/pull/505#issuecomment-372674121,1,['test'],['test']
Testability,"@talbring I agree with your assessment of Boost. I think it's a heavyweight solution to a lightweight use-case. We could always include just the unit-testing header (they offer a header-only version), but ""people may want to use more and more features of boost,"" as you point out. If we as developers want to add Boost as a formal dependency for SU2, then that seems like a fine route. But I have the feeling that many developers do not want to add a Boost dependency. Honestly, Boost UTF doesn't offer anything that we can't get from Google Test. Catch2 is definitely the simplest and easiest of the unit-testing frameworks I listed. The only sticking point is that it requires c++03, and that the full-feature version requires C++11.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-500393344:150,test,testing,150,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-500393344,3,"['Test', 'test']","['Test', 'testing']"
Testability,"@talbring Last I heard, @EduardoMolina was going to run a test on this branch to check it. Aside from that, there's nothing left to complete on my side.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/577#issuecomment-423204225:58,test,test,58,https://su2code.github.io,https://github.com/su2code/SU2/pull/577#issuecomment-423204225,1,['test'],['test']
Testability,"@talbring Sorry for not being more specific. The config file is actually into; `TestCases/optimization_rans/pitching_oneram6/turb_ONERAM6.cfg`. If this configs are actually not supposed to be there, I could make a pull request removing them.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/391#issuecomment-300515238:80,Test,TestCases,80,https://su2code.github.io,https://github.com/su2code/SU2/pull/391#issuecomment-300515238,1,['Test'],['TestCases']
Testability,@talbring Tested win64 and win64-mpi and ran the QuickStart for both. In GitBash win64 worked right away and for win64-mpi I had to install the msmpi stuff as described on the [website](https://su2code.github.io/docs_v7/Build-SU2-Windows/ ). linux64 works on our system but for linux64-mpi there are some missing libraries or so which are required ..,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/813#issuecomment-557060097:10,Test,Tested,10,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-557060097,1,['Test'],['Tested']
Testability,"@talbring That was a good point about placement. I was able to move this implementation to a function called `FixedCL_Convergence()` in the euler solver class. It also allowed me to make it a little more robust. Since it still requires information about the convergence that is calculated in the integration container, the method has to be called `CFluidIteration::Iterate()`. I included the details of the implementation in the Constant CL tutorial on the website. That is in a pull request for the website. Consequently, that [pull request ](https://github.com/su2code/su2code.github.io/pull/16) needs to be approved first so that the regression test for this one can pass. This is because of a change in options in the Fixed CL mode.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/780#issuecomment-534420006:648,test,test,648,https://su2code.github.io,https://github.com/su2code/SU2/pull/780#issuecomment-534420006,1,['test'],['test']
Testability,"@talbring any way to bypass codefactor when the errors are not due to the changes introduced in the PR?. Edit: Nevermind, it's passing now, you should be able to merge after the tests pass.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/983#issuecomment-660351424:178,test,tests,178,https://su2code.github.io,https://github.com/su2code/SU2/pull/983#issuecomment-660351424,1,['test'],['tests']
Testability,"@talbring, is it easy to add such a test to configure? I have no idea how to do this to be honest?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/574#issuecomment-419802820:36,test,test,36,https://su2code.github.io,https://github.com/su2code/SU2/pull/574#issuecomment-419802820,1,['test'],['test']
Testability,"@talbring: thanks for adding the regressions. One iteration is perfect just to check they're running, if they have the originals still being tested in the TestCases. I think the idea of having the written tutorials/documentation for the test cases in the main repository is a very good one, for several reasons. In particular, it will make it easier for people to add documentation, and we could eventually even test for its existence in Travis or make it a strict requirement for PRs in the future. My only concern at the moment is making sure that they look ""nice"" when viewed and that the links are easy to update/follow. We should probably add a title at the top of each tutorial markdown file now (above the first image), since the titles from the wiki page are missing. The image files should be moved from the website repo (su2code.github.io/github_wiki/) to these Tutorials folders. Another idea is to put a top-level ""Tutorials"" markdown file that will be linked from the wiki at the root Tutorials/ directory so that one only has to update the links to new tutorials in that file in the main repo, rather than always updating both the main repo and manually updating the wiki too. Any other ideas for making this seamless and user-friendly are most welcome! Let me know if you need any help.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485#issuecomment-355216605:141,test,tested,141,https://su2code.github.io,https://github.com/su2code/SU2/pull/485#issuecomment-355216605,4,"['Test', 'test']","['TestCases', 'test', 'tested']"
Testability,"@talbring: thanks for sharing the failing test case for the incompressible problem. This all seems to be working for me now. Can you please take a look when you have a chance to make sure it is ok for you now too? Otherwise, I think this PR is almost ready once the tests pass.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/328#issuecomment-264104142:42,test,test,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/328#issuecomment-264104142,2,['test'],"['test', 'tests']"
Testability,"@thw1021 Like I already said in the comment in the other issue https://github.com/su2code/SU2/issues/738#issuecomment-513870126 : No one can give you support when running OpenMPI in a docker container since it is not officially supported. The only suggestion I have is to use singularity. If you want to test it, install it and you can download su2.sif I created here: https://drive.google.com/open?id=1SaZDloevjj8rFDG2x3Lh05nhTuKHakDK",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/739#issuecomment-514085935:304,test,test,304,https://su2code.github.io,https://github.com/su2code/SU2/issues/739#issuecomment-514085935,1,['test'],['test']
Testability,"@vdweide : I have not hit this issues yet, although I have not been paying too close of attention to the file size (although I have used some large ones). We can make a quick test of this with free stream through a very large cube mesh. . This also goes hand in hand with large mesh support, in my mind, since you won't care about the restart files if you can't get your large mesh loaded :). We can add this to the list for the RPSVV group.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/696#issuecomment-500946690:175,test,test,175,https://su2code.github.io,https://github.com/su2code/SU2/issues/696#issuecomment-500946690,1,['test'],['test']
Testability,"@vdweide I've attached the SU2 output and the valgrind output running on 2 processes, i.e.: `mpirun -n 2 --use-hwthread-cpus valgrind /opt/su2/SU2v7_adap/bin/SU2_CFD test.cfg`; [su2_out_2.txt](https://github.com/su2code/SU2/files/5776324/su2_out_2.txt); [valgrind_out_2.txt](https://github.com/su2code/SU2/files/5776325/valgrind_out_2.txt). I also tried with 30 processes but valgrind gave up after stating that there were too many errors. Sorry, I'm not so familiar with what to look out for. I'm guessing that something showing in the leak summary is a bad thing? Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156#issuecomment-755334566:166,test,test,166,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-755334566,1,['test'],['test']
Testability,"@vdweide ok I think I safeguarded the required areas, if you could test this it would be great as I do not have these libraries.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/603#issuecomment-435066556:67,test,test,67,https://su2code.github.io,https://github.com/su2code/SU2/pull/603#issuecomment-435066556,1,['test'],['test']
Testability,"@vdweide, I hacked the configuration scripts to clone Eigen into externals and added the required search paths and flags in configure.ac. I also put an include in blas_structure just to test and looks ok.; I suggest we both work on this branch (feature_test_eigen) and create a PR once we have a ""demo"" working.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-460055024:186,test,test,186,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-460055024,1,['test'],['test']
Testability,"@vdweide, of relevance to performance I used -O3 -march=native -DNDEBUG. That last one disables the assertions the container class performs to detect out of bounds accesses.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-524534304:100,assert,assertions,100,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-524534304,1,['assert'],['assertions']
Testability,"A `grep -R CustomBoundaryTemperature .` and `grep -R CustomBoundaryHeatFlux .` doesn't seem to show anything done for the incompressible solver, and also doesn't appear to be an option here at least:; https://github.com/su2code/SU2/blob/db21a33291a6ac17cdf85c61625c3b87441149c6/SU2_CFD/src/solvers/CIncNSSolver.cpp#L350-L372. However, I _might_ have missed a spot here:. https://github.com/su2code/SU2/blob/db21a33291a6ac17cdf85c61625c3b87441149c6/Common/src/geometry/CMultiGridGeometry.cpp#L960-L994. but my _guess_ is that it's fine since values from here are re-nondimensionalized from the above commits. Please let me know if not however - I am not familiar with the specifics of multigrid and its implementation. Note that the commits above presume that values specified in `CustomBoundaryTemperature` and `CustomBoundaryHeatFlux` in `CGeometry` are dimensional, regardless if SU2 is in nondimensional mode. It might make more sense to have these be nondimensional and just ensure that incoming default values from a `MARKER_ISOTHERMAL` and `MARKER_HEATFLUX` are nondimensionalized appropriately, but in my opinion it is more straightforward to have users set dimensional temperatures and heat fluxes. However, then it would also make sense to return dimensional heat fluxes and temperatures as well for Python custom walls which I am not sure is currently how it is done. Apologies for the long explanation, but curious to hear your input on this. I will look into why one of the regression tests failed and get back to you.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2078#issuecomment-1633160181:1497,test,tests,1497,https://su2code.github.io,https://github.com/su2code/SU2/pull/2078#issuecomment-1633160181,1,['test'],['tests']
Testability,"A crash may occur when the number of threads is larger than the number of points in OpenMP mode. For example, a boundary condition marker has a few edge elements, and the model runs on a 10-core CPU (20 threads). . One of the crash places is at ; `; InverseDiagonalBlock_ILUMatrix(end-1, &invM[(end-1)*nVar*nVar]);; `; The value `end-1` could be a random value due to the skipped value assignment in vector `omp_partitions`. . It seems that the logic for setting and using `omp_partitions` needs to be revised. The reproducing script is provided. . Win11 + VS2022; SU2 7.3.1. [omp_crash_su2.cfg.txt](https://github.com/su2code/SU2/files/8905694/omp_crash_su2.cfg.txt); [mesh.su2.txt](https://github.com/su2code/SU2/files/8905687/mesh.su2.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1667:445,log,logic,445,https://su2code.github.io,https://github.com/su2code/SU2/issues/1667,1,['log'],['logic']
Testability,"A good way to test this is to mirror the grid and run the full geometry. I guess the kink in the Cf will disappear for JST. That means that the symmetry boundary condition treatment can be improved, because you want to reproduce the solution for the full geometry exactly when using a symmetry plane.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1125#issuecomment-742023920:14,test,test,14,https://su2code.github.io,https://github.com/su2code/SU2/issues/1125#issuecomment-742023920,1,['test'],['test']
Testability,"A little gradient validation using the added Testcase (comp euler, 150 timesteps, pitching airfoil, FFD points as DV, Efficiency obj function). . ![gradient](https://user-images.githubusercontent.com/31306376/65078088-96d24900-d99c-11e9-9fef-1fd1a73dd759.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/766#issuecomment-532394741:45,Test,Testcase,45,https://su2code.github.io,https://github.com/su2code/SU2/pull/766#issuecomment-532394741,1,['Test'],['Testcase']
Testability,A regression test is now added in the TestCases repo. Can we please merge the TestCase PR [#62](https://github.com/su2code/TestCases/pull/62) first? Then we can uncomment the new test in parallel_regression_AD.py to include it in the checks.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1260#issuecomment-839237997:13,test,test,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/1260#issuecomment-839237997,5,"['Test', 'test']","['TestCase', 'TestCases', 'test']"
Testability,"A similar issue was mentioned during the conference (Van-Albada behaving better), having done some testing recently my opinion is the following:; - Contrary to Venkatakrishnan, the Van-Albada limiter is always ""active"" even in relatively smooth regions.; - Node-based limiters take the minimum value over neighbors, whereas edge-based limiters use two limiter values per edge. Therefore Van-Albada is more conservative and also more differentiable (no min function).; One could experiment with:; - Computing the minimum value over neighbors using a differentiable function.; - Trying the edge-based approach with the Venkatakrishnan-type limiter functions.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/917#issuecomment-643830700:99,test,testing,99,https://su2code.github.io,https://github.com/su2code/SU2/issues/917#issuecomment-643830700,1,['test'],['testing']
Testability,Aachen Turbine Test Case,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2276:15,Test,Test,15,https://su2code.github.io,https://github.com/su2code/SU2/issues/2276,1,['Test'],['Test']
Testability,About the jacobian I could not find a situation where it made a difference (I tried a lot) so I commented it out. The residual itself does matter however. I added a test case which uses the same mesh as the NICFD nozzle tutorial. It is an axisymmetric transonic air nozzle without a shock. Pretty much any change to the axisymmetric flow or turbulence residuals would break it. i created a pull request on the test cases repo develop branch https://github.com/su2code/TestCases/pull/59 but then I just went ahead and merged it into develop since there is no review policy,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1195#issuecomment-779895711:165,test,test,165,https://su2code.github.io,https://github.com/su2code/SU2/pull/1195#issuecomment-779895711,3,"['Test', 'test']","['TestCases', 'test']"
Testability,About the new CodeFactor issues: I aligned the x86_64 and aarch64 testVals so it is easier (for the naked eye) to compare the differences. But now CodeFactor complains about the extra spaces before the `=`. Should I remove the extra spaces or this could be configured to silent it somewhere ?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1619#issuecomment-1138426539:66,test,testVals,66,https://su2code.github.io,https://github.com/su2code/SU2/pull/1619#issuecomment-1138426539,1,['test'],['testVals']
Testability,"Access the solution files? I'm not sure if that is possible, the runners are not persisted after the tests. But updating the results based on the test logs is fine.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2024#issuecomment-1540286746:101,test,tests,101,https://su2code.github.io,https://github.com/su2code/SU2/pull/2024#issuecomment-1540286746,3,"['log', 'test']","['logs', 'test', 'tests']"
Testability,"According to the MPI standard the macro MPI_VERSION should be defined. However, even if it is not defined, the MPI_Ibarrier will not be called. This is exactly what you want. I'll push these changes shortly and see if the regression tests go through.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/574#issuecomment-419898440:233,test,tests,233,https://su2code.github.io,https://github.com/su2code/SU2/pull/574#issuecomment-419898440,1,['test'],['tests']
Testability,"Adaption of the interpolation method NearestNeighbor to turbomachinery applications when rotating frame is used. ## Proposed Changes; *If the flow is solved in a rotating frame, the grid is not actutally rotating. But the interpolation for a sliding interface should be done with an actually rotated boundary. The proposed changes add the function of rotating grid points on the boundary of a zone solved in rotating frame before the interpolation is executed. Currently, this is only implemented in CNearestneighbor class, other interpolation method should be changed as well in the near future.*. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ yes ] I am submitting my contribution to the develop branch.; - [ yes ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ yes ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2173:1299,test,test,1299,https://su2code.github.io,https://github.com/su2code/SU2/pull/2173,1,['test'],['test']
Testability,Add Python framework regression tests to Travis CI,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/228:32,test,tests,32,https://su2code.github.io,https://github.com/su2code/SU2/issues/228,1,['test'],['tests']
Testability,Add Unit Testing to SU2,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:9,Test,Testing,9,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['Test'],['Testing']
Testability,"Add tests for SU2_DEF, SU2_DOT, etc. to Travis CI",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/229:4,test,tests,4,https://su2code.github.io,https://github.com/su2code/SU2/issues/229,1,['test'],['tests']
Testability,Add turbulent bend to regression tests,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1898:33,test,tests,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/1898,1,['test'],['tests']
Testability,Add unit-testing framework to SU2,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:9,test,testing,9,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,1,['test'],['testing']
Testability,Add unsteady cht adjoint testcase,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1288:25,test,testcase,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/1288,1,['test'],['testcase']
Testability,Added Test Cases for discrete adjoint and a couple of other changes to the preconfiguration.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/192:6,Test,Test,6,https://su2code.github.io,https://github.com/su2code/SU2/pull/192,1,['Test'],['Test']
Testability,Added a regression test case for the low Mach number reconstruction. Uses the same mesh as the existing cylinder_lam test case.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/232:19,test,test,19,https://su2code.github.io,https://github.com/su2code/SU2/pull/232,2,['test'],['test']
Testability,Added regression tests for SU2 design features,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/254:17,test,tests,17,https://su2code.github.io,https://github.com/su2code/SU2/pull/254,1,['test'],['tests']
Testability,Added regression tests for some of the SU2 design features,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/253:17,test,tests,17,https://su2code.github.io,https://github.com/su2code/SU2/pull/253,1,['test'],['tests']
Testability,Added the following system calls during the update/build phase to the serial and parallel regression python scripts in order to force testing of the develop branch:. $ git fetch; $ git checkout develop; $ git pull origin develop,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/75#issuecomment-59000470:134,test,testing,134,https://su2code.github.io,https://github.com/su2code/SU2/issues/75#issuecomment-59000470,1,['test'],['testing']
Testability,Adding Basic Test Case and CGeometry Unit Tests,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1012:13,Test,Test,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/1012,2,['Test'],"['Test', 'Tests']"
Testability,Adding Python 3.7 to test environments in light of #620.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/622:21,test,test,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/622,1,['test'],['test']
Testability,Adding V&V case compos. dep. model to test cases.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2097:38,test,test,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/2097,2,['test'],['test']
Testability,Adding logger to SU2,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1991:7,log,logger,7,https://su2code.github.io,https://github.com/su2code/SU2/issues/1991,1,['log'],['logger']
Testability,Adding some additional residual convergence plots sampled from our test cases. Still some work to do to integrate #724 and clean up regressions. ![residual_convergence](https://user-images.githubusercontent.com/4896083/66072901-fa737f00-e523-11e9-9369-92bbea23f1bb.png); ![residual_convergence](https://user-images.githubusercontent.com/4896083/66072920-03645080-e524-11e9-858a-dc7c310a673b.png); ![residual_convergence](https://user-images.githubusercontent.com/4896083/66072950-1414c680-e524-11e9-80eb-0c4b4a5c0aa7.png),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-537630224:67,test,test,67,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-537630224,1,['test'],['test']
Testability,Address sanitizer tests in the CI pipeline,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246:18,test,tests,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246,1,['test'],['tests']
Testability,"Adds a general body force source term implementation to the Finite Volume flow solver, which is particularly useful for pressure-driven / gravity / channel problems, for instance. . Also includes a simple 2D Poiseuille flow case with an analytic solution for testing the body force and periodic implementations.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/380:259,test,testing,259,https://su2code.github.io,https://github.com/su2code/SU2/pull/380,1,['test'],['testing']
Testability,"After a correction to the regression tests, this is now ready for review.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/385#issuecomment-287489570:37,test,tests,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/385#issuecomment-287489570,1,['test'],['tests']
Testability,"After a meeting with @TobiKattmann, I have decided to change NEMO BC_EULER_WALL to match the one in CEulerSolver.cpp, where the velocity vector and gradients are corrected. Euler boundary condition is now called inside the symmetry plane boundary condition, before performing the residual correction; This way, I believe I am assuring for all the vector quantities to be parallel to the symmetry plane and guaranteeing the condition of symmetry according to _Jiri Blazek's - ""Computational fluid dynamics: principles and applications""_ . However, calling Euler function does not appear to substantially change the the solution substantially in the test I have made so far.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1168#issuecomment-764975018:648,test,test,648,https://su2code.github.io,https://github.com/su2code/SU2/pull/1168#issuecomment-764975018,1,['test'],['test']
Testability,"After choosing final default values and updating test case results, we will add some documentation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2323#issuecomment-2230259172:49,test,test,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/2323#issuecomment-2230259172,1,['test'],['test']
Testability,"After hibernating on this over the winter, I finally had some time to put some work into this. I am in the process of running a number of cases. So far I have results for 2 RANS cases with mesh convergence studies. These can be seen at https://github.com/su2code/VandV . The repo contains the relevant meshes and configuration files for each mesh level. It might not be necessary to have the different config files since the only changes between them are CFL numbers and mesh filenames. We can discuss this. . The folder for each case also has a README.md file that presents the test case and some of the relevant results. This displays the information nicely in the repository page, and is a decent mock up of how it would look, if we decide to put it on the website. . I just wanted to share this to get initial reactions to how I have set the repo up. I haven't included any discussion about the actual results either, but that is something that can be added.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-470729235:579,test,test,579,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-470729235,2,"['mock', 'test']","['mock', 'test']"
Testability,"After looking for testcases to modify, I think it is better to have the modified testcase in addition to, and not besides, the original one. Other users might want to build their cfg file on top of the original testcase cfg file, and could be surprised by the additional feature.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1236#issuecomment-801285967:18,test,testcases,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236#issuecomment-801285967,3,['test'],"['testcase', 'testcases']"
Testability,After some testing I can report the following:. - With Jacobian contributions disabled convergence is greatly increased and on-par with the isothermal/heat flux configurations; - After around 12800 timesteps the solution diverges and SU2 crashes.; - For some reason the global flowfield is drastically different between convective and isothermal/adiabatic cases. As the convective case is somewhere between adiabatic and isothermal conditions this should not be the case. Here you can see a comparison of pressure between convective case (top) and isothermal case (bottom). The only difference is the type of boundary of the conical walls.; ![Comparison](https://github.com/su2code/SU2/assets/42602495/068a78c8-f469-4c6f-b80a-b594a5b79190). The same comparison by temperature:; ![Temperature](https://github.com/su2code/SU2/assets/42602495/022682f8-89a7-4a41-a004-1cfff96e6f70). I'm a bit lost as to what's happaning here...,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1872#issuecomment-1648290476:11,test,testing,11,https://su2code.github.io,https://github.com/su2code/SU2/issues/1872#issuecomment-1648290476,1,['test'],['testing']
Testability,"After updating solution and before communications, the normal component is subtracted from the velocity of the sym wall. ## Related Work; https://github.com/su2code/SU2/pull/1168, https://github.com/su2code/SU2/pull/657, https://github.com/su2code/SU2/issues/1625, https://github.com/su2code/SU2/issues/1125,https://github.com/su2code/SU2/discussions/2169. The symmetry BC in SU2 is waiting for further implementation, for scalar vars and vectors. ; But first of all, we should ensure that the wall normal velocity is zero for the sym BC. ; When we run an unsteady simulation with sym BC such as the following A-airfoil cases, the spanwise velocity on the spanwise sym BC has a distribution that we donot want to see. (Free stream velocity is 0.15 and the spanwise velocity can exceed 0.01 (the ±0.001 in the figure is to show more clearly) where it should be zero.); And this PR is to ensure the zero normal velocity.; ![1](https://github.com/su2code/SU2/assets/58663453/ca4f99e8-909e-4468-95bc-4a594ba31ed0); ![2](https://github.com/su2code/SU2/assets/58663453/c35c7f1b-eca3-4da5-9828-0ef786f829eb). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2174:1773,test,test,1773,https://su2code.github.io,https://github.com/su2code/SU2/pull/2174,1,['test'],['test']
Testability,"Agreed that it is a bit different... . I would add one practical comment for consideration: it is worth checking whether the main restriction we have is related to approximations in the Jacobian that limit the effective CFL we can use or whether the convergence of the linear solver itself is a problem (speed or complete lack of convergence). A quick test without resorting to another library is to increase the fill-in for ILU-preconditioned GMRES, which is very expensive/slow but should converge difficult problems, and to check how high we can take the CFL when allowing each nonlinear iteration to converge to a tight tolerance in the linear solver, say 1e-14 (you can output the linear solver residuals to verify convergence). If we can take the CFL higher with a more performant linear solver, then it could be worth the effort to try other options. If the CFL must remain low for stability, then perhaps we should look at the quality of the Jacobians we construct to see if we can improve, or even try exact Jacobians with AD if we can afford it. A more advanced CFL ramping strategy could also be helpful here to get us closer to a solution before trying to aggressively converge. Just some options to try - it is an important topic and it would be good to isolate the primary restriction.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-460811699:352,test,test,352,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-460811699,1,['test'],['test']
Testability,"Agreed that libraries are great as long as they are optional - sometimes we need them for highly specialized tasks. Btw, is it possible to use your wrapper for other external solvers? For example, it might be worth testing with PETSc again soon for performance reasons. I would encourage making a single base interface for external solvers that talks to the existing structure in SU2, which never needs to change, and then creating the implementations for each solver that adapts the particular solver data structures to the fixed interface (similar with the grid readers and output routines). Is this easy to do now?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771#issuecomment-524932838:215,test,testing,215,https://su2code.github.io,https://github.com/su2code/SU2/pull/771#issuecomment-524932838,1,['test'],['testing']
Testability,"Agreed that the style needs some attention. I am open to ideas about this. You may have noticed that I integrated Codacy recently to test it out: https://www.codacy.com. We have the style guide, but honestly, it's not getting much attention. We should automate checks or have scripts that automatically enforce style constraints. Vera++ sounds interesting in this regard. A little while back, @rsanfer and I had been working on indentation issues with the uncrustify tool. Should we open this as an issue and get some input? Find volunteers to look into these things?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/426#issuecomment-323636235:133,test,test,133,https://su2code.github.io,https://github.com/su2code/SU2/pull/426#issuecomment-323636235,1,['test'],['test']
Testability,"Agreed, but unfortunately, I think we need to modify how we currently have the test cases set up, because we have a chicken & egg problem. Both of these pull requests require changes to the configs that live in the other repo. Those need to be modified first for the tests to pass, but it seems unsustainable to require commits to separate repos to test the pull requests (this makes this very valuable feature tough to use). We might want to move the configs back into the SU2 repo so that folks can update their tests with their code commits. This way, we will see the green light and accept. On Jul 29, 2015, at 3:31 PM, Brendan Tracey <notifications@github.com<mailto:notifications@github.com>> wrote:. In general, you can wait for Travis to give the green light before merging into develop. This way develop stays working. In addition, when done merging usually I delete the branch to keep things clean. —; Reply to this email directly or view it on GitHubhttps://github.com/su2code/SU2/pull/185#issuecomment-126116253.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/185#issuecomment-126116991:79,test,test,79,https://su2code.github.io,https://github.com/su2code/SU2/pull/185#issuecomment-126116991,4,['test'],"['test', 'tests']"
Testability,"Agreed, it's already big as it is, so merging this PR with the 3D table is going to be a mess. Besides we need to add a ton of tests still",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1327916072:127,test,tests,127,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1327916072,1,['test'],['tests']
Testability,"Agreed, this sounds great. Thanks for working on this! Just let us know if we can be of any help while you're making progress. We'll try to get those Python regression tests into Travis CI asap...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-195838454:168,test,tests,168,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-195838454,1,['test'],['tests']
Testability,"Ah got it, I have no explanation for that. But the fact that you need CFL of 1 for the fluid tells me the flow conditions are challenging.; Also Poisson ratio of 0.37 on the structural side makes it harder to converge, you can try compiling SU2 with PaStiX which guarantees you can solve the structural problem (instructions are in TestCases/pastix_support/). It is not possible to do that in SU2, however, to some extent, dual-time methods are already a form of subcycling, in each inner iteration you are advancing in pseudo-time.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1287#issuecomment-840652006:332,Test,TestCases,332,https://su2code.github.io,https://github.com/su2code/SU2/issues/1287#issuecomment-840652006,1,['Test'],['TestCases']
Testability,"Ah sorry,; SU2_DOT mostly only uses OpenMP in the passive linear system, I'm not sure if @thomasdick Sobolev smoother has some recorded part that involves OpenMP.; For the python wrapper I usually set the number of threads with env var OMP_NUM_THREADS It may be a bit confusing for most users having to specify the number of threads when instantiating the driver :thinking: ; I think disc_adj_flow would be the easiest to adapt. Those tests print a sensitivity at a particular vertex of a marker to be checked by the regression script, so you would have to make sure that's only printed on one rank (for parallel AD).; disc_adj_fea should also be fine for hybrid AD.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1966#issuecomment-1470288877:435,test,tests,435,https://su2code.github.io,https://github.com/su2code/SU2/pull/1966#issuecomment-1470288877,1,['test'],['tests']
Testability,"Ah! Cool, sure open a new PR @maxaehle.; What adjoint stuff? file names and so on?; I think removing irrelevant options would be make the tests clearer, there are lots with Roe and JST options specified and vice versa which probably confuses new users.; I'm not so sure about removing all defaults thought... On one hand it would serve as regression for the default values set by CConfig, on the other it hides the tuning parameters of some methods... but then again those are more or less documented now.; :shrug:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1236#issuecomment-804035589:138,test,tests,138,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236#issuecomment-804035589,1,['test'],['tests']
Testability,"Ah! Ok!. Thank you, again. Kind regards,. Jairo. > On Feb 1, 2019, at 13:02, Thomas D. Economon <notifications@github.com> wrote:; > ; > Was just waiting for the tests to finish. Merging now. Thanks again for the effort; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/600#issuecomment-459772171>, or mute the thread <https://github.com/notifications/unsubscribe-auth/Ac180l_JvmEVR9mvZNTQjygJa9GdV-CJks5vJGUggaJpZM4X34F2>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-459809638:162,test,tests,162,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-459809638,1,['test'],['tests']
Testability,"Ah, I wasn't aware of the corrected version. Thanks for pointing out my mistake. The corrected version does make more sense, and the main changes seem to be:. + Changing the location of the sqrt in the definition of `Lturb`; + Changing `ch3` from 0.5 to 2.0; + Clarifying that S and Omega should have a factor of sqrt(2). As for code verification, I would propose using one of the cases examined by Travin, Stretlets, Mockett, or Xiao for comparison. We know that they got a nice range of values for the blending constant on their tests with DDES. The cases I can see where they explicitly show the results of the blending function are:. + Circular cylinder at Re = 50,000 (Travin _et al._ 2002); + Tandem cylinders at Re = 166,000 (Xiao _et al._ 2012); + NACA0021 airfoil in deep stall (Mockett 2009). The tricky thing is that the value of the blending constant is determined by the flow solution, which is determined by the solver. So the values we obtain will be dependent both on the version of DDES used and the nature of the code. We can't expect to match any of these papers exactly. We could also use a simpler flow, such as fully developed channel flow or a flat plate boundary layer. The tradeoff would be simplicity for ease of comparison.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/532#issuecomment-388189377:418,Mock,Mockett,418,https://su2code.github.io,https://github.com/su2code/SU2/pull/532#issuecomment-388189377,3,"['Mock', 'test']","['Mockett', 'tests']"
Testability,"Ah, that fixed the issue then. The HB regression test passes now. We can; merge it in. On Sat, Jan 7, 2017 at 1:01 PM, Tim Albring <notifications@github.com>; wrote:. > There was an error in the division operator :) can you try it again ?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/351#issuecomment-271109937>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AHenIK6GKLPFfL18m-Y1b3AoOtTMC0A4ks5rP_0-gaJpZM4Lck3G>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/351#issuecomment-271122793:49,test,test,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/351#issuecomment-271122793,1,['test'],['test']
Testability,"Ah, yes, I see the problem. You're probably right. Have the configs (and test results) in the SU2 repository, and keep the meshes in the test repository. . Thanks for the explanation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/185#issuecomment-126117513:73,test,test,73,https://su2code.github.io,https://github.com/su2code/SU2/pull/185#issuecomment-126117513,2,['test'],['test']
Testability,"Alex, Heather,. Thanks for commenting and straightening this out. Since this is a frequently asked question, I have added a new section in the documentation on how to use the test cases, which will hopefully clear things up more in the future: https://github.com/su2code/SU2/wiki/Test-Cases. Tom",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/222#issuecomment-171108493:175,test,test,175,https://su2code.github.io,https://github.com/su2code/SU2/issues/222#issuecomment-171108493,2,"['Test', 'test']","['Test-Cases', 'test']"
Testability,"All done @economon , I also added a quick start type example, so if anyone wants to try this just go into TestCases/fea_topology/quick_start and call topology_optimization.py",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/595#issuecomment-441436869:106,Test,TestCases,106,https://su2code.github.io,https://github.com/su2code/SU2/pull/595#issuecomment-441436869,1,['Test'],['TestCases']
Testability,"All good from my side. The tests are passing and I managed to compile (and cross check) the regression test cases for the discrete adjoint FEA and FSI both in my workstation at Imperial and even running in WSL (which I find amazing that SU2 runs in there). In this latest case, I used the openSUSE Leap 42.3 app for windows and the (pretty old) gcc 4.8.5 compilers shipped along. It worked. From my side, this is ready to go. I'll remove the block straight away. . Thanks, Tim and Max, for the efforts!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/473#issuecomment-354459150:27,test,tests,27,https://su2code.github.io,https://github.com/su2code/SU2/pull/473#issuecomment-354459150,2,['test'],"['test', 'tests']"
Testability,"All regression test values are corrected and for restarted/adjoint cases (euler/oneram6, disc_adj_heat, disc_adj_euler/arina2k) the solution_flow.dat was replaced. The respective Testcases branch is here https://github.com/su2code/Testcases/tree/bugfix_BC-sym-plane . From my side this PR could be merged (after merging the Testcases branch and reverting .travis.yml).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/657#issuecomment-469173101:15,test,test,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/657#issuecomment-469173101,4,"['Test', 'test']","['Testcases', 'test']"
Testability,"All testcases run for only a few steps, not entirely to convergence, the purpose is really just to detect change.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124#issuecomment-746403241:4,test,testcases,4,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-746403241,1,['test'],['testcases']
Testability,"All tests are now passing, except CodeFactor. But I guess that was there even before I implemented anything. @bigfooted : Thanks for your commit.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1799#issuecomment-1295381693:4,test,tests,4,https://su2code.github.io,https://github.com/su2code/SU2/pull/1799#issuecomment-1295381693,1,['test'],['tests']
Testability,"All the TestCases seem broken when I try to run SU2 4.1 compiled from source. When I run the serial_regression.py and parallel_regression.py scripts, I get error messages like . There is no geometry file (GetnZone))!. and mesh files like mesh_ONERAM6_turb_hexa_43008.su2 appear to be missing. When I copy one of these from a 4.0 sample directory (where everything worked) and rerun the test case manually by typing something like. mpirun -n 2 /mit/su2_v4.1/bin/SU2_CFD config_CFD.cfg. it works. Something seems to be missing that generates the mesh files but I'm no SU2 expert, I just install it for the real users. Thanks for any help. ```; Alex; ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/222:8,Test,TestCases,8,https://su2code.github.io,https://github.com/su2code/SU2/issues/222,2,"['Test', 'test']","['TestCases', 'test']"
Testability,All the regression and unit tests are passing now!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750#issuecomment-1942905083:28,test,tests,28,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750#issuecomment-1942905083,1,['test'],['tests']
Testability,"All, . Regarding the steady test cases, Embraer folks published a paper of their efforts to validate SU2 using the DPW and HLPW geometries (https://doi.org/10.2514/6.2018-2845 <https://doi.org/10.2514/6.2018-2845>) in the last AVIATION. I think that they will be happy to contribute with the meshes and config files. . Also, I can contribute with some unsteady cases. I think that the Backward Facing Step and the Tandem Cylinder test cases are a good start. Best,. Eduardo; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/issues/581#issuecomment-423207120>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AJVmCdByjE1ogiSKp7fIos58GcRe-Rdlks5uc6e0gaJpZM4Ww0V4>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423260699:28,test,test,28,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423260699,2,['test'],['test']
Testability,"All,. I looked a bit more through Eigen and, indeed, the performance is pretty impressive and generally better than MKL and Atlas (the self-tuned implementation of LAPACK) ant most/all matrix sizes. I agree with comments made by @pcarruscg that having a standard for matrix operations throughout the source would clean up /simplify the code considerably and, since it does not seem to impact the AD approach, it should be pursued. It sounds like a quick test branch like @vdweide is suggesting makes sense. A quick driver code to test the performance of the Eigen routines vs MKL makes sense too. The only thing that @vdweide should comment on is how much work it would be to change the LAPACK/BLAS based implementation in the DG-FEM solver to the interface that Eigen exposes. Best,. Juan. On Feb 1, 2019, at 4:19 AM, Edwin van der Weide <notifications@github.com<mailto:notifications@github.com>> wrote:. Would it be an idea to create a branch to test things out and make a decision based on the results? It would be interesting to see the performance for e.g. the dense matrix multiplications in the DG-solver compared to Intel's MKL. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/643#issuecomment-459705131>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxM1gm0iy_FeGBMFzxVQnYFFzEHt4ks5vJDDlgaJpZM4adbAo>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459845576:454,test,test,454,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459845576,3,['test'],['test']
Testability,"All,. Of course, another approach to verifying which sign is correct is to do an analytic differentiation (using CoDi?) or simply using complex-step on the residual calculation routine to get exact Jacobians (for a particular state) and confirm the correct sign. This does require some code extraction / refactoring to perform the test, but it has the benefit that you would know exactly what the correct answer is for the specific residual implementation. Best,. Juan. On Nov 16, 2018, at 11:03 AM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. As Jacobians affect convergence rate and not accuracy, you could do a quick test of the same problem with the current version and the sign flipped to see if there is measurable difference in the convergence rate. If yes, then it should give you a hint about which direction. If no, then we should still correct it, but prob don't need to put in too much effort. @clarkpede<https://github.com/clarkpede> : I'm interested in your unit testing set up... —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/609#issuecomment-439493827>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxInSS3cmLF8iFkD22AoYAp0G3G2yks5uvwvxgaJpZM4YeD9V>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/609#issuecomment-439500791:331,test,test,331,https://su2code.github.io,https://github.com/su2code/SU2/issues/609#issuecomment-439500791,3,['test'],"['test', 'testing']"
Testability,"All,. Regarding the wall function specification, if we are going to settle on a standard way that could work for both the FV and DG-FEM solvers, it might be good to think about some modifiers that can later allow for a generality of approaches. We can make a distinction between wall functions and wall models, but this is subject to discussion…in essence both are performing similar duties, but people should express their opinions. With that said, how about a boolean such as USE_WALL_FUNCTIONS / USE_WALL_MODEL (YES or NO) with an optional argument WALL_FUNCTION_TYPE / WALL_MODEL_TYPE that can taken one of many pre-specified values that can be added as these options are developed and tested? Certainly options like STANDARD_WALL_FUNCTION, ADAPTIVE_WALL_FUNCTION, SCALABLE_WALL_FUNCTION, compressible and incompressible versions, and even EQUILIBRIUM_WALL_MODEL and NONEQUILIBRIUM_WALL_MODEL are things that are likely to be in the code in the near future. Thoughts?. Juan. On Sep 5, 2017, at 2:27 PM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. @petebachant<https://github.com/petebachant>: the paper that I linked earlier on this thread had some fairly simple examples similar to the one you propose.. different flat plates and so on with varying y^+. You can likely reuse the grid(s) in the TestCases repo. @vdweide<https://github.com/vdweide>: it was very simple in this first implementation. It checks for a single boolean for whether or not to apply wall functions (WALL_FUNCTIONS= YES or NO, https://github.com/su2code/SU2/blob/43b8a4015c4b09b01d78e4243d32011c663c2b70/SU2_CFD/src/solver_direct_mean.cpp#L15339), and then assumes they should be applied to all no-slip walls (heat flux or isothermal, https://github.com/su2code/SU2/blob/43b8a4015c4b09b01d78e4243d32011c663c2b70/SU2_CFD/src/solver_direct_mean.cpp#L16653). This could of course be made more specific for individual markers using a config structure like MARKER_MONITORING to list the",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-327313634:690,test,tested,690,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-327313634,1,['test'],['tested']
Testability,"All,. Thanks for getting this going. My two cents:. 1. Indeed, while these V&V cases and the TestCases directory / repo are not identical, there is some overlap…some of the TestCases are definitely validation cases too. We can continue to add test cases to the TestCases repo, knowing that only a subset of those cases belong in the V&V list. 2. An important aspect of the V&V is the convergence of the solution as the mesh is refined. As Jayant knows well, this can help us catch bugs. This means that a well-constructed V&V suite needs to include a series of meshes (of increasing density), the corresponding configuration files, and the actual experimental data (or other numerical data from runs on different solvers). I strongly agree with the suggestions made that (a) the entire V&V suite needs to be run before every major release (with configuration files updated), (b) that this should be linked form the main SU2 page, (c) that the 2014 AIAA paper (and Tom’s AVIATION 2018 paper) should serve as a starting point, (d) that the NASA TMR website can give us ideas of additional access, and (e) that the SU2 V&V page should be managed within GitHub.com<http://GitHub.com> so the entire community can edit / add to this / these page/s to continue to grow the number of cases and their relevance. Best,. Juan. On Sep 20, 2018, at 3:02 AM, Ruben Sanchez <notifications@github.com<mailto:notifications@github.com>> wrote:. Thanks, Pedro, I think that's a great idea. As you mention, we would have to work out the logistics as this would require quite a bit of implication from the community, but the extra burden on the release would be compensated by avoiding big ""updating"" operations every now and then. Also as most users only work with the released versions, so it's a way to ensure they always know what updates have happened / which new features are available. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://git",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423207120:93,Test,TestCases,93,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423207120,4,"['Test', 'test']","['TestCases', 'test']"
Testability,"All,. The following page has performance comparisons between eigen and mkl (and others):. http://eigen.tuxfamily.org/index.php?title=Benchmark. They are dated 2011, so they are a bit old, but if the quoted performance is real, I would say it is a no-brainer to switch to eigen. If the performance tests (for at least simple things like daxpy and gemm) could be repeated to verify the numbers, that would help us make a final decision. Best,. Juan. On Feb 2, 2019, at 1:58 AM, Edwin van der Weide <notifications@github.com<mailto:notifications@github.com>> wrote:. @pcarruscag<https://github.com/pcarruscag>, I agree with you it will be hard to beat the MKL (running at 60 percent peak for most of the gemm calls for the DG-solver), but if you don't have any performance loss, that would already be nice, as it improves readability. Furthermore, the performance of the DG solver in combination with the discrete adjoint is horrible, because it relies on my very naive implementation of the matrix products. So it would already be something if we can get an improvement there, although we do not use the DG adjoint solver (yet). For me the easiest way to test things out for the DG-solver would actually be in SU2 itself. @economon<https://github.com/economon> put some nice profiling routines in there for the gemm calls, which can be used without any additional work to test eigen. @pcarruscag<https://github.com/pcarruscag> (or somebody else), could you create a branch in which eigen is downloaded in the external directory? I think I can manage from there. Thanks,. Edwin. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/643#issuecomment-459952137>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxCgydwy1nS3qPJvyCMJXLXWNMSFsks5vJWEkgaJpZM4adbAo>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459986613:133,Benchmark,Benchmark,133,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459986613,4,"['Benchmark', 'test']","['Benchmark', 'test', 'tests']"
Testability,"All: I have temporarily disabled the regressions for the TestCases repository (the main SU2 repository regressions are still active). The time limit for that repository is only 50 min., as opposed to the 70 min. that we received for the SU2 repo by special request, so it fails essentially every time due to exceeding the limit. Rather than maintain a separate repository in Travis CI for the TestCases repo, I propose that we implement a way to trigger the main repository regression tests with a change to the TestCases repo. This type of dependent build of downstream repos seems possible by using something like the following:. https://github.com/mernst/plume-lib/blob/master/bin/trigger-travis.sh. What do folks think? Anyone interested in helping with this?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/459:57,Test,TestCases,57,https://su2code.github.io,https://github.com/su2code/SU2/issues/459,4,"['Test', 'test']","['TestCases', 'tests']"
Testability,"Allows weighted sum of objectives to be evaluated with the discrete adjoint. (Previously available only with continuous adjoint); A test case is added for this functionality in serial_regression_AD.py. Also includes:; related clean-up and standardization, such as making sure that a redundancy check inside python functions does the appropriate thing when multiple objectives are used (previously would duplicate some analyses during optimization). ; treating surface heatflux per-surface (making this more similar to how surface forces are treated) so that if multiple surfaces are included only the one specified as being monitored will be used in the objective function. ; removal of some unused variables that turned up during compiler checks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/312:132,test,test,132,https://su2code.github.io,https://github.com/su2code/SU2/pull/312,1,['test'],['test']
Testability,"Alright everyone, this PR is now ready to get merged from my point of view. If there are further concerns regarding particular Testcases please let me know. @pcarruscag did you check airfoil_fsi_rbf and discadj_fsi_airfoil? If yes, your (dis-)approval for this PR would be appreciated (of course from everyone else as well). . I would like to get this integrated before #790 and I would recommend @economon not to start changing reg-test values before this is merged. The code still fixes the initial Issue #735",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-536618994:127,Test,Testcases,127,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-536618994,2,"['Test', 'test']","['Testcases', 'test']"
Testability,Alright let's close this one. We can test it again when OpDiLib supports the Intel compiler.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1273#issuecomment-832191063:37,test,test,37,https://su2code.github.io,https://github.com/su2code/SU2/issues/1273#issuecomment-832191063,1,['test'],['test']
Testability,"Alright, Heat-Transfer BC is good to go. Code factor does its usual thing with Complex code but the rest is green. ; Was a bit more than I anticipated but now there is a compressible version as well alongside the incompressible. . An incompressible Testcase was added which briefly explains expected results in the extreme ends of heat transfer coefficient values. What's is left to do for me is to update and merge su2code/su2code.github.io/pull/26 ,In there i will drop a comment or two that advertises the HeatTransfer bc. Thanks @oleburghardt for kicking this off, @pedro for the review and advise and @bigfooted for some chats behind the scenes",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1226#issuecomment-890359244:249,Test,Testcase,249,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-890359244,1,['Test'],['Testcase']
Testability,"Alright, let's do the following, for now please exclude:; Common/include/CConfig.hpp; Common/include/option_structure.hpp; Common/src/CConfig.cpp; externals; legacy; SU2_CFD <- This one will cause conflicts for many branches so we should do it in steps; subprojects; TestCases (or if you can target only the .cfg in this directory it is also fine). Please wait for #1903 and #1951 to be merged.; Add yourself to AUTHORS.md and thank you for automating the formatting.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1948#issuecomment-1465073454:267,Test,TestCases,267,https://su2code.github.io,https://github.com/su2code/SU2/pull/1948#issuecomment-1465073454,1,['Test'],['TestCases']
Testability,"Alright, so my above hunch was correct: that there was an assumption of dictionary key order. I switched that variable over to an ordered bunch and I believe all the tests are passing, despite one of them timing out. After addressing that, the entire repo (including the wrapper) should now be compatible with both Python 2 and Python 3, and is setup to be tested with both.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-340193114:166,test,tests,166,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-340193114,2,['test'],"['tested', 'tests']"
Testability,"Alright, the su2code/Testcases repo is already merged, .travis.yml is reverted. If there are no further request than this can be merged from my standpoint. ; Big thanks to @cvencro for the collaboration :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/766#issuecomment-534026640:21,Test,Testcases,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/766#issuecomment-534026640,1,['Test'],['Testcases']
Testability,"Alright. There's a thorny part of this merge that needs to be resolved. I would like the decisions reviewed before I proceed to make any more changes. The differences between revision d1e3a18 and revision e6e6e6b are very small, aside from an extra test file. But revision d1e3a18 fails the regression tests and revision e6e6e6b passes the regression tests. Specifically, it's only the CHT incompressible case that's failing. The test results show:. test_vals (stored): 0.000000, 0.000000, -7.685301, -12947.783696; sim_vals (computed): 0.000000, 0.000000, -7.685301, -12947.783678 ; delta_vals: 0.000000, 0.000000, 0.000000, 0.000018. It's only the total heat flux that's different, and it's only off by 1E-7%. I believe that these changes are due to floating-point errors. To check and make sure nothing is going crazy, I ran the test case under both the develop and the PR branches. When I compared the solution files, I couldn't find any points where the solution differed by more than 0.0003%. The differences seem to be very small. The two differences between revision d1e3a18 and revision e6e6e6b can be summarized as follows:. 1. In the `CNumerics::GetViscousIncProjJacs()` calculation on the develop branch, a quantity called `theta` is calculated. `theta` is the magnitude of the `val_normal` parameter, squared. The catch is that `val_normal` is passed as a unit vector (named `UnitNormal` in `CAvgGradInc_Flow::ComputeResidual`). So `theta` should always be equal to one, with some floating point errors. In the failing revision, the value is set explicitly to one. In the passing revision, the magnitude is calculated explicitly. I checked, and the difference between `theta` and 1.0 is always of the order 1E-16 or less.; 2. The second change affects where the area is multiplied into the Jacobian. When the area is multiplied at a later stage, very small differences in the calculated quantities appear. I don't like revision e6e6e6b, and I would like to revert it. The question then is",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/626#issuecomment-444655022:249,test,test,249,https://su2code.github.io,https://github.com/su2code/SU2/pull/626#issuecomment-444655022,5,['test'],"['test', 'tests']"
Testability,"Also we still strongly suggest to open Draft Pull Request as soon as possible in the development process even if it still far from being ready. This way discussions can start earlier, potential conflicts can be solved together, regression tests run and you are reminded to frequently merge with develop!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/582#issuecomment-548250496:239,test,tests,239,https://su2code.github.io,https://github.com/su2code/SU2/issues/582#issuecomment-548250496,1,['test'],['tests']
Testability,"Also works for me now! Thanks for fixing this. ~~Travis failed due to reaching the maximum time for a job. The usual time the serial test take in other PRs is like 45 min, but this one was killed after 1h 9 min. Is there something that could go wrong in the non-mpi case ?~~. ~~I just restarted the tests to see whether it occurs again.~~ . Now it has passed. If it happens again, simply restart the job in Travis ...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/328#issuecomment-264239270:133,test,test,133,https://su2code.github.io,https://github.com/su2code/SU2/pull/328#issuecomment-264239270,2,['test'],"['test', 'tests']"
Testability,Also: I see that discrete adjoint cases fail with a segmentation fault. But this does not happen on my local machine if I run the testcase. Not sure what is going on here.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1784#issuecomment-1304311840:130,test,testcase,130,https://su2code.github.io,https://github.com/su2code/SU2/pull/1784#issuecomment-1304311840,1,['test'],['testcase']
Testability,"Although a minor change, I think this will help SU2 stay up-to-date documentation wise with future updates. Staying ahead of documentation in future PRs will prevent further lag, in my opinion. ### Related work; I think this begins to address the documentation woes mentioned the issue #775 . - [x ] I am submitting my contribution to the develop branch.; - [N/A] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [N/A ] My contribution is commented and consistent with SU2 style.; - [ N/A] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/799:595,test,test,595,https://su2code.github.io,https://github.com/su2code/SU2/pull/799,1,['test'],['test']
Testability,"An algebraic transition model that relies on local information, herein named as BC model, is added. The model uses Spalart-Allmaras model as the baseline model. BC model does not solve for any transport equations as in LM model, but instead, it uses the already transported S-A variable, nu_t. The model achieves its purpose by modifying the production term of the S-A. IMPORTANT: A research paper is written about our model, and submitted to ASME Journal of Fluids Engineering, and currently it is under review. If you need detailed information regarding to the model, please contact me from sametcakmakcioglu@gmail.com. Under the TestCases folder, I have added three test cases. Feel free to test the transition model for your own test cases. I also have T106 turbine cascade test case with successful results, and I can share it with you if requested. Please do not hesitate to contact me if you have more test cases (especially 3-D transition cases) that you would like me to solve. I would be more than happy to hear back your comments/suggestions. . Sincerely, ; Samet C. Cakmakcioglu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326:632,Test,TestCases,632,https://su2code.github.io,https://github.com/su2code/SU2/pull/326,6,"['Test', 'test']","['TestCases', 'test']"
Testability,"An important, but currently missing, component of our current testing/quality assurance procedures, in my opinion. I would use it. For example, checking the output of the ComputeResidual() functions in each of the numerics classes are obvious candidates for this. I can think of many other ""units"" throughout the code, but this is another open discussion for the scope. @clarkpede could you give a couple of examples for the selection of the units in your use cases?. No experience w/ the other frameworks. As we now include some Boost for Tecio anyway, could be another opportunity to consolidate. As for PRs, this is open for me.. we discussed the +/- of requiring docs and tests in PRs at the developers meeting. There are pros and cons to be sure. Would like to hear what others think too.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499209118:62,test,testing,62,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499209118,2,['test'],"['testing', 'tests']"
Testability,"An update here. I did some digging and saw there was a previous PR #1168, where Fabio looked at this issue and implemented a fix for NEMO about 1.5 years ago. It looks like the results were great, but the PR never got merged in. If I pull the most recent commit and run this test case on it, it looks like it solves the issue. . It sounds like we might be able to address this by merging this branch into current Develop and opening a new PR. @TobiKattmann Thoughts on this approach?; ![image](https://user-images.githubusercontent.com/44848904/167740530-c2e23dc5-a264-4d80-8cf1-66b4396cccc7.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1625#issuecomment-1123007487:275,test,test,275,https://su2code.github.io,https://github.com/su2code/SU2/issues/1625#issuecomment-1123007487,1,['test'],['test']
Testability,"An update. I put in 10G ethernet cards with a small 10G switch. This kind of networking is definitely beyond my expertise, but I tested point to point bandwidth and latency and it seems like I get the full 10Gbps and latency seems to be 4 times better than my 1G cards. Its faster but the 4 machine numbers are still slower than the 1 machine numbers. Here are the new timings on Mesh 1 for completeness. - 8 process (1 machine x 8 threads) => 13.1s/iteration; - 8 process (2 machine x 4 threads) => 12.7s/iteration; - 16 process (1 machine x 16 threads) => 8.4s/iteration; - 16 process (2 machines x 8 threads) => 7.5s/iteration; - 16 process (4 machines x 4 threads) => 9.3s/iteration; - 32 process (2 machines x 16 threads) => 5.8s/iteration; - 64 process (4 machines x 16 threads) => 9.2s/iteration. On Mesh 2 the larger mesh, the 64 process time went from 40s on the 1G networking to 15.8s on 10G networking. So on the larger mesh, the scalability seems to be pretty good. . I'm certainly not an expert in high speed networking so I expect someone with more knowledge could get more out of my equipment and/or would know where the bottleneck is on the smaller mesh. . In looking around online, it seems like i should probably put in infiniband equipment instead for this purpose. Anyway, thanks for the help. If I decide to try and put in infiniband, I'll update this. Otherwise, if there's anything else that you want me to try on my hardware at some point let me know.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-594201448:129,test,tested,129,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-594201448,1,['test'],['tested']
Testability,"And a few other changes in constants. I am absolutely fine with that but I do not have bandwidth to update all the regression tests, re-run validation tests, etc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1551#issuecomment-1059529142:126,test,tests,126,https://su2code.github.io,https://github.com/su2code/SU2/issues/1551#issuecomment-1059529142,2,['test'],['tests']
Testability,"And here is a simple test case demonstrating potential use. A major benefit of the supersonic inlet is being able to model supersonic propulsion systems, such as a scramjet, where the propulsion system exit boundary is modeled as a supersonic inlet, with distinct properties from the farfield flow conditions. Here we have a two dimensional test case demonstrating the interaction of exhaust flow with free-stream flow at the exit plane of a 2D scramjet system. Flow conditions adapted from [A Design Method for Three-Dimensional Scramjet Nozzles with Shape Transition](https://arc-aiaa-org.stanford.idm.oclc.org/doi/abs/10.2514/1.B38293); Jens Kunze, Michael K. Smart, and Rowan Gollan; Journal of Propulsion and Power 2022 38:1, 3-17. <img width=""1262"" alt=""image"" src=""https://user-images.githubusercontent.com/44848904/211415971-b6122204-0d95-43ca-903b-d60fd6326c39.png"">",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1862#issuecomment-1375043856:21,test,test,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/1862#issuecomment-1375043856,2,['test'],['test']
Testability,And the addition of a mesh and restart files is done in https://github.com/su2code/TestCases/pull/101,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1651#issuecomment-1141158667:83,Test,TestCases,83,https://su2code.github.io,https://github.com/su2code/SU2/pull/1651#issuecomment-1141158667,1,['Test'],['TestCases']
Testability,"And why is your Test repo so large?; Perhaps some data files would be happier living elsewhere?. I'm thinking that if your Tests load large mesh files, for example, these mesh files could be placed in a data repository (like Figshare, Data Dryad, Zenodo), and your configuration files for each test could fetch the data it needs. I would imagine that the input data does not change often (or perhaps ever?) and one permalink and DOI is better suited for data than a version-controlled repo.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/152#issuecomment-72739420:16,Test,Test,16,https://su2code.github.io,https://github.com/su2code/SU2/issues/152#issuecomment-72739420,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,Another major memory clean up in geometry partitioning. Just for testing...,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/259:65,test,testing,65,https://su2code.github.io,https://github.com/su2code/SU2/pull/259,1,['test'],['testing']
Testability,"Antonio,. I have been trying to figure the error message out, but I have been unsuccessful. I've only modified serial_regression.py and parallel_regression.py. Is there a file where turbulent_hb needs to be defined or does the code read the names from the test case repository?. We may want to change structure of HB test case folder since there are now two cases. The turbulent case has a sub-directory in there but the inviscid does not. Jason",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/445#issuecomment-336948272:256,test,test,256,https://su2code.github.io,https://github.com/su2code/SU2/pull/445#issuecomment-336948272,2,['test'],['test']
Testability,"Antonio,. We will see if this check passes with corrections to .py files, but the mesh file is sitting in a pull request in TestCases repository. I could not add to that repository as part of this pull request. I have a feeling both checks are going to fail unless they can access each other. Jason",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/445#issuecomment-337577313:124,Test,TestCases,124,https://su2code.github.io,https://github.com/su2code/SU2/pull/445#issuecomment-337577313,1,['Test'],['TestCases']
Testability,"Any ideas on a good test case(s) to ensure the implementation is correct? Maybe the RANS flat plate case at one Re that puts us in the wall-resolved regime, one with y+ ~10, and one with y+ ~ 50? I haven't taken a look at that particular case--just wondering if it might work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-307663093:20,test,test,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-307663093,1,['test'],['test']
Testability,Any update on a testcase to add to the PR?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2197#issuecomment-1932317610:16,test,testcase,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/2197#issuecomment-1932317610,1,['test'],['testcase']
Testability,"Are the compiler wrappers, mpicc and mpicxx, also installed? When I look in your log file it mentions ; ./configure: line 3362: /usr/bin/mpicxx: No such file or directory",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738#issuecomment-513849210:81,log,log,81,https://su2code.github.io,https://github.com/su2code/SU2/issues/738#issuecomment-513849210,1,['log'],['log']
Testability,Are there any duplicate files here? Perhaps the regression tests could copy in the files from tutorials before running to avoid having redundant information.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485#issuecomment-353223445:59,test,tests,59,https://su2code.github.io,https://github.com/su2code/SU2/pull/485#issuecomment-353223445,1,['test'],['tests']
Testability,Are you sure you're using the config file that corresponds to the current develop or master ? Because I don't see these options in TestCases/rans/oneram6/turb_oneram6.cfg,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/391#issuecomment-300510899:131,Test,TestCases,131,https://su2code.github.io,https://github.com/su2code/SU2/pull/391#issuecomment-300510899,1,['Test'],['TestCases']
Testability,"As Jacobians affect convergence rate and not accuracy, you could do a quick test of the same problem with the current version and the sign flipped to see if there is measurable difference in the convergence rate. If yes, then it should give you a hint about which direction. If no, then we should still correct it, but prob don't need to put in too much effort. @clarkpede : I'm interested in your unit testing set up...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/609#issuecomment-439493827:76,test,test,76,https://su2code.github.io,https://github.com/su2code/SU2/issues/609#issuecomment-439493827,2,['test'],"['test', 'testing']"
Testability,"As a second note: we are aware that even the 70 min. time limit is causing problems for new PRs and other branches that are using Travis CI individually. . One option is to ""parallelize"" the builds by decomposing the current regression scripts into more scripts with fewer tests each. However, this only addresses part of the problem, as the compilation step is taking the most time and is currently done within each script. We could consider compiling with lower optimization, etc., to get the cost down, but I am open to ideas on this front too.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/459#issuecomment-339748432:273,test,tests,273,https://su2code.github.io,https://github.com/su2code/SU2/issues/459#issuecomment-339748432,1,['test'],['tests']
Testability,"As for the question I raised, Dr. Alonso mentioned the problem in an email he sent me. He said, ""We used [grid adaptation] successfully in tetrahedral meshes, but I do not believe the hexahedral adaptation was ever fully functional."". That matches my experience with a few tests I ran. After playing around a little, it seems like adaptivity for hexahedra was only partially finished. Many sections of the are implemented, but there seem to be both bugs and unfinished implementation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/487#issuecomment-355796302:273,test,tests,273,https://su2code.github.io,https://github.com/su2code/SU2/issues/487#issuecomment-355796302,1,['test'],['tests']
Testability,"As identified by @LaSerpe during conversation in pull request https://github.com/su2code/SU2/pull/312, there is a bug in the develop branch somewhere during the merge of the solution for the parallel fsi2d test case, which may be related to recent changes in SU2_SOL. . Error output can be seen in: https://travis-ci.org/su2code/SU2/jobs/165118367. Fix should include the addition or modification of a regression test case to catch similar errors in the future. My suggestion for where to start: go back in the builds until you get to one that does not have this error, and check out what the difference in the SU2_SOL routines are there.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/313:206,test,test,206,https://su2code.github.io,https://github.com/su2code/SU2/issues/313,2,['test'],['test']
Testability,"As it appears that the developer group does not have a Cent8 cluster on which to test, is there a particular set of compiler inputs you would like me to use so that this issue can be resolved?; Reminder, no other code has any issues with our MPI setup, this includes benchmarks, other CFD codes, and mellanox test cases.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-644788621:81,test,test,81,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-644788621,3,"['benchmark', 'test']","['benchmarks', 'test']"
Testability,"As it does not interfere with the rest of the code I guess nothing speaks against merging this.; Couple of things though:; - the badge does not work [here](https://github.com/su2code/SU2/tree/new_testing_system) the badge is not rendered and the link is dead. I get to a `Not Found` page. ; - My only docker-knowledge is literally an 8min [youtube](https://www.youtube.com/watch?v=pGYAg7TMmp0) video I just watched so I might have gotten s.th. wrong, but: where are the Dockerfiles (probably small textfiles again) for build and test? The two images on hub.docker.com are already ... well images, so fairly large. The beauty of travis was also that the .travis.yml file contains everything necessary to build and run in a rather straightforward to understand manner -> and therefore one was able to quickly change things here and there. Are those Dockerfiles intended to go [here](https://github.com/su2code/build-action)? The Dockerfiles should go into some sort of version control right?. Speeding up ""time-to-finished-regression-test"" is really cool though. 👍 . 🐳 Take these two whales as a sign of gratitude 🐋",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/806#issuecomment-547358706:529,test,test,529,https://su2code.github.io,https://github.com/su2code/SU2/pull/806#issuecomment-547358706,2,['test'],['test']
Testability,"As mentioned previously I would be surprised if the fix implemented in c97610b is the source of the issue as I would expect the other turbomachinery cases to fail as well. Looking at the testcase there would be two things I would try. 1. Converge the solution very tightly, however I expect that this may be difficult, save the converged solution. Restart the solver and run for 1 iteration and compare the results of the two. Inspect the solution and see if there is anything obvious, this may give a hint as to where the problem lay. Maybe also include linear solver information in the output to see if the desired convergence is being achieved in the initial iterations. 2. Furthermore inspect the residuals of the initial converged solution as it approaches the restart point, a jump in residuals could indicate that the solver is not converging smoothly before the termination of the initial solution. I suggest maybe increasing the value of ENTROPY_FIX_COEFF, say 0.1 and see what happens. If you can't converge the solution tightly in point 1, apply the increased entropy fix in point 2 and retry. If you would like @alecappiello once you have tried this we can organise a call to discuss early next week.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2276#issuecomment-2100775569:187,test,testcase,187,https://su2code.github.io,https://github.com/su2code/SU2/issues/2276#issuecomment-2100775569,1,['test'],['testcase']
Testability,"As mentioned, these all use the same geometry, and I happy to discuss inclusion of different test cases. Also, I noticed that mutation++ does have a regression case, do we not compile M++ for regression builds?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1885#issuecomment-1380464828:93,test,test,93,https://su2code.github.io,https://github.com/su2code/SU2/pull/1885#issuecomment-1380464828,1,['test'],['test']
Testability,"As promised (drag) gradient comparison:; The blue curve represent the current develop branch with the bug. Bugfix and FinDiff are hopefully self-explanatory. The results are taken from my Testcase, so it is really small (10 timesteps), i.e. for a longer running case the gradient deviates a lot more.; Let me know if you want some other comparisons :). ![image](https://user-images.githubusercontent.com/31306376/42903371-ea872c84-8ad1-11e8-83cc-79eee425f7ca.png). ![image](https://user-images.githubusercontent.com/31306376/42903349-db15c2e2-8ad1-11e8-87c9-ac8fac4b07be.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/554#issuecomment-406049839:188,Test,Testcase,188,https://su2code.github.io,https://github.com/su2code/SU2/pull/554#issuecomment-406049839,1,['Test'],['Testcase']
Testability,"As requested, here's an example of a unit test that I made. For context: There's a couple of different modes for the Roe-low-dissipation convective blending. If one of the ""DUCROS"" modes is selected, then the Ducros sensor values are used. Otherwise, they're ignored. Before commit [ac8b3bf](https://github.com/su2code/SU2/commit/ac8b3bf7636cc66ca7f47e15935942a6598e1a9f), the `SetRoe_Dissipation` function checked to see if the sensor values were valid regardless of the type of blending selected. Commit [ac8b3bf](https://github.com/su2code/SU2/commit/ac8b3bf7636cc66ca7f47e15935942a6598e1a9f) changed the behavior to only check the sensor values if they will be used. The unit test sets the convective blending to `NTS`, feeds invalid sensor values into `SetRoe_Dissipation` and checks the output. ```cpp; // Used to set the Roe-low-dissipation option; void WriteCfgFile(unsigned short nDim, const char* filename,; std::string blending) {; std::ofstream cfg_file;. cfg_file.open(filename, ios::out);; cfg_file << ""PHYSICAL_PROBLEM= NAVIER_STOKES"" << std::endl;; cfg_file << ""ROE_LOW_DISSIPATION= "" << blending << std::endl;. cfg_file.close();; }. BOOST_AUTO_TEST_CASE(BadSensorsAllowedForNTS) {. /*--- Setup ---*/. const unsigned short nDim = 3;. /*--- Set up the config class for the test ---*/; char cfg_filename[100] = ""convective_blending_test.cfg"";; WriteCfgFile(nDim, cfg_filename, ""NTS"");; CConfig* config = new CConfig(cfg_filename, SU2_CFD, 0, 1, 2, VERB_NONE);; std::remove(cfg_filename);. /*--- Inputs ---*/; const su2double dissipation_i = 0.4;; const su2double dissipation_j = 0.6;; const su2double sensor_i = NAN; // Intentionally unphysical:; const su2double sensor_j = NAN; // Intentionally unphysical:. /*--- Outputs ---*/; su2double dissipation;. /*--- Test ---*/. CNumerics numerics;; numerics.SetRoe_Dissipation(dissipation_i, dissipation_j,; sensor_i, sensor_j,; dissipation, config);. const su2double tolerance = std::numeric_limits<su2double>::epsilon();; BOOST_CHECK_CLOSE_F",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499999225:42,test,test,42,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499999225,2,['test'],['test']
Testability,"As stated in #1384 some hybrid parallel AD regression tests failed.; The regression test `visc_cone` has also failed with `ERROR: The code was not able to get to the ""Begin solver"" section.` for both serial_regression.py and parallel_regression.py.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1418#issuecomment-957314740:54,test,tests,54,https://su2code.github.io,https://github.com/su2code/SU2/pull/1418#issuecomment-957314740,2,['test'],"['test', 'tests']"
Testability,As there were 256 WRT_CON_FREQ in the Testcases i removed that using:; `find . type f \( -name '*.cfg' \) -exec sed --in-place '/WRT_CON_FREQ/d' {} \+`; `find . type f \( -name '*.cfg' \) -exec sed --in-place '/Writing convergence history frequency/d' {} \+`,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1129#issuecomment-743413892:38,Test,Testcases,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-743413892,1,['Test'],['Testcases']
Testability,At first glance this looks like a valid solution to me - if you want to open a pull request we can compare the regression test run to see if the performance changes (and of course if any regression tests break).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/252#issuecomment-208087862:122,test,test,122,https://su2code.github.io,https://github.com/su2code/SU2/issues/252#issuecomment-208087862,2,['test'],"['test', 'tests']"
Testability,"At the moment I am having trouble with a test case, thus it is still not ready to merge. I'll try to fix it as soon as possible.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1810#issuecomment-1311715717:41,test,test,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/1810#issuecomment-1311715717,1,['test'],['test']
Testability,"At this stage, I'd like to add only the functionality of reading and interpolating a lookuptable, without immediately implementing a combustion solver that uses it. ; I'd like to add a small verification test, would this be implemented in the MMS?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1637#issuecomment-1128197949:204,test,test,204,https://su2code.github.io,https://github.com/su2code/SU2/pull/1637#issuecomment-1128197949,1,['test'],['test']
Testability,Avoid using File_close followed by File_delete in case the file already exists.; Simply use File_open in overwrite mode. @oleburghardt @WallyMaier @TobiKattmann if you could test this on clusters you have access to it would be great :pleading_face: ; Try it both writing over existing files and creating new ones and running on multiple nodes please.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1342:174,test,test,174,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342,1,['test'],['test']
Testability,"Awesome! Thanks for testing, I can only imagine the hassle of setting this up on Windows.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1055#issuecomment-669277905:20,test,testing,20,https://su2code.github.io,https://github.com/su2code/SU2/pull/1055#issuecomment-669277905,1,['test'],['testing']
Testability,"Awesome, close to 1.5 was what I saw on the skylake architecture too (albeit the consumer version).; Thanks for testing again, without the DNDEBUG flag every access to CVariable is an if statement basically. That flag is now set by default when building with meson.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-524806934:112,test,testing,112,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-524806934,1,['test'],['testing']
Testability,"Axisymmetric fixes in progress by Wally / Florian. Will repeat the test (axisymmetric) once fixes are done, I am closing it for now....",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1063#issuecomment-736684085:67,test,test,67,https://su2code.github.io,https://github.com/su2code/SU2/issues/1063#issuecomment-736684085,1,['test'],['test']
Testability,Bad Termination - Running in parallel with CGNS mesh format < test case/euler/wedge >,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/40:62,test,test,62,https://su2code.github.io,https://github.com/su2code/SU2/issues/40,1,['test'],['test']
Testability,"Based on paper - . ## Proposed Changes. - AUSM+ -up2 scheme has been implemented. - Likely to perform better for high speed flows (author claims - Robustness against shock anomalies as good as Van leer scheme (less carbuncle prone) while it resolves contact discontinuity/boundary layer sharply/accurately. Smooth representation of heating etc.). - Reference- ""Towards a shock-stable and accurate hypersonic heating computations: A new pressure flux for AUSM scheme, authors- Kitamura, Shima, JCP 245 2013"". ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/631:1212,test,test,1212,https://su2code.github.io,https://github.com/su2code/SU2/pull/631,1,['test'],['test']
Testability,Basically this is just #260 rebased onto the current `develop`. I suspect some changes to `TestCase.py` may have been lost while fixing merge conflicts.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424:91,Test,TestCase,91,https://su2code.github.io,https://github.com/su2code/SU2/pull/424,1,['Test'],['TestCase']
Testability,"Below is a new testcase, laminar flow around a cylinder. In the line figure I show the normal velocity on the axis y=0, with the solid red line the results from develop. The dashed line is with only the new Green-Gauss correction. It always leads to an improvement. These 2 results were obtained with an undisturbed grid. I then distort the grid a bit (as seen in the contour plot) and rerun the GG correction and I get the green line. Still an improvement, but a bit more bumps on the line.; I then correct the edge normals as done in CPhysicalGeometry. I then get the jagged line shown.; The correction using the residuals in BC_Sym_Plane seems to be ill-defined because the final converged solution depends on the initial solution [so I do not show tests with it here, I kept the original bc_sym_plane]. ; ![Screenshot_cylinder](https://github.com/su2code/SU2/assets/7050568/a16db8e1-78c5-482b-a91a-4b0d59b52f0d)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2194#issuecomment-1891845061:15,test,testcase,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/2194#issuecomment-1891845061,2,['test'],"['testcase', 'tests']"
Testability,Below you can find a transitional test case using B-C model implemented in SU2:; https://su2code.github.io/tutorials/Transitional_Flat_Plate/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/502#issuecomment-446518663:34,test,test,34,https://su2code.github.io,https://github.com/su2code/SU2/issues/502#issuecomment-446518663,1,['test'],['test']
Testability,"Best wishes,. Juan. > On Jun 18, 2020, at 1:27 AM, SaettaE <notifications@github.com> wrote:; > ; > Proposed Changes; > ; > Addition of a new actuator disk model with a variable load and swirl distributions along disk radius.; > ; > Contributors:; > Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II.; > EttoreSaetta, lorenzorusso07, rtogna.; > ; > Related Work; > ; > Introduction of new options in the config. file.; > Introduction of an additional input file that contains the propeller data.; > Introduction of additional c++ functions.; > Addition of code lines to existing functions preserving the original actuator disk model.; > ; > PR Checklist; > ; > [X ] I am submitting my contribution to the develop branch.; > My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; > [ X] My contribution is commented and consistent with SU2 style.; > I have added a test case that demonstrates my contribution, if necessary.; > I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/su2code/SU2/pull/1027 <https://github.com/su2code/SU2/pull/1027>; > Commit Summary; > ; > Update config_template.cfg; > File Changes; > ; > M config_template.cfg <https://github.com/su2code/SU2/pull/1027/files#diff-2c2f226c0183e7633cf165c6d3862450> (5); > Patch Links:; > ; > https://github.com/su2code/SU2/pull/1027.patch <https://github.com/su2code/SU2/pull/1027.patch>; > https://github.com/su2code/SU2/pull/1027.diff <https://github.com/su2code/SU2/pull/1027.diff>; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/1027>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AA5FFRGLBAHYBVTV3GBSLATRXHFYXANCNFSM4OBLB3CQ>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1027#issuecomment-646145454:1408,test,test,1408,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027#issuecomment-646145454,1,['test'],['test']
Testability,"Beyoncé's rule of programming, if you like it put a test on it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1555#issuecomment-1059553290:52,test,test,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/1555#issuecomment-1059553290,1,['test'],['test']
Testability,Both Gupta-Yos and WBE are now capable of running with ionization for the viscous simulations using both explicit and implicit time integration. Initial testing at Mach 10 and Mach 15 by @WallyMaier show promising results for GY.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1887#issuecomment-1399671477:153,test,testing,153,https://su2code.github.io,https://github.com/su2code/SU2/pull/1887#issuecomment-1399671477,1,['test'],['testing']
Testability,"Both the unit test and case are running without MPI, `SU2_CFD -t 1 primal.cfg` but with 2 or 4 threads it seemed easier to reproduce.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1893#issuecomment-1385695339:14,test,test,14,https://su2code.github.io,https://github.com/su2code/SU2/issues/1893#issuecomment-1385695339,1,['test'],['test']
Testability,Bringing this branch up to date with current develop branch. ; Various deallocation changes; Some regression tests fail but all run. (previously was not the case),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174:109,test,tests,109,https://su2code.github.io,https://github.com/su2code/SU2/pull/174,1,['test'],['tests']
Testability,Bug in config.py prevents asserts from providing correct error message,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/141:26,assert,asserts,26,https://su2code.github.io,https://github.com/su2code/SU2/issues/141,1,['assert'],['asserts']
Testability,"Bumping this thread... Files are now starting to be divided in several PRs, but we should set a clear policy for this. Seems that the consensus is to carry one class per file, move the inlines to the headers, and create subfolders where possible (i.e., have a more flat hierarchy in the src directory based on logical groups such as numerics, geometry, solvers, etc). We do not have a clear naming convention yet, but if it is one class per file, then an option is simply the class name. Am I capturing the current consensus correctly? Anything I am missing? Naming preferences?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-500945013:310,log,logical,310,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-500945013,1,['log'],['logical']
Testability,By the way please give the PR a more descriptive title that reflects the transition fix and the column names feature.; So that folks know what to expect from the change log.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1268#issuecomment-823643419:169,log,log,169,https://su2code.github.io,https://github.com/su2code/SU2/pull/1268#issuecomment-823643419,1,['log'],['log']
Testability,"By the way, I can fork the TestCases repo and commit the grid files etc myself, if it would be much better. Please let me know.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-265136741:27,Test,TestCases,27,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-265136741,1,['Test'],['TestCases']
Testability,"By the way, I have another set up updates for you guys to consider that are; beyond the scope of this pull request. Let me know if you are waiting on me; to close the pull request or if you can do that. I put the recommended changes for the structure of config.py file in a gist; https://gist.github.com/spendres/7bbe6eb60fac1f2f148a that separates the; low level config errors validation. I also created a few unit test cases to; allow a controlled build up of regex checks without risk of breaking; previous bug fixes. Let me know. Steve. On Sat, Jan 10, 2015 at 11:34 PM, Steven Endres spendres@gmail.com wrote:. > thanks for the commands; > ; > On Sat, Jan 10, 2015 at 11:54 AM, Trent Lukaczyk <notifications@github.com; > ; > > wrote:; > > ; > > so now the file is being committed as deleted... please roll back to this; > > commit; > > spendres@6cbddbe; > > https://github.com/spendres/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520; > > ; > > here are the commands you can use --; > > Reset the index to the desired tree; > > ; > > git reset 6cbddbe; > > https://github.com/su2code/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520; > > Move the branch pointer back to the previous HEAD; > > ; > > git reset --soft HEAD@{1}; > > ; > > git commit -m ""Revert to 6cbddbe; > > https://github.com/su2code/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520; > > ""; > > Update working copy to reflect the new commit; > > ; > > git reset --hard; > > ; > > —; > > Reply to this email directly or view it on GitHub; > > https://github.com/su2code/SU2/pull/144#issuecomment-69462490.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/144#issuecomment-69498342:416,test,test,416,https://su2code.github.io,https://github.com/su2code/SU2/pull/144#issuecomment-69498342,1,['test'],['test']
Testability,"By the way, you are doing a great job with the HB. And, sorry to comment out your subroutine. I'm using #ifdef CHECK_AD (line 3670, driver structure.cpp). For the time being, I have also commented out the regression test.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/325#issuecomment-260104666:216,test,test,216,https://su2code.github.io,https://github.com/su2code/SU2/pull/325#issuecomment-260104666,1,['test'],['test']
Testability,"CGNS file older than 4.0 release have a high ram memory usage. ## Proposed Changes. Add a small message to help users understand that SU2 is eating their RAM with old CGNS files.; ; ## Related Work. See: #1378 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1479:804,test,test,804,https://su2code.github.io,https://github.com/su2code/SU2/pull/1479,1,['test'],['test']
Testability,"Can someone validate the Conjugate Heat Transfer test case? Perhaps @oleburghardt ? I included the CHT_WALL_INTERFACE in the list of markers that are used for the wall distance computation, but that was not present in the original implementation. I can run the test case, but I don't know what to validate the case against.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/605#issuecomment-435402614:49,test,test,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/605#issuecomment-435402614,2,['test'],['test']
Testability,"Can you modify the default such that nothing changes for the existing test cases? You can then add a new test case to the repository with the modified limits. ; As users get more familiar with this feature, this feature then be gradually introduced into other testcases and tutorials. It is also important to add some documentation to the website.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2323#issuecomment-2229142118:70,test,test,70,https://su2code.github.io,https://github.com/su2code/SU2/pull/2323#issuecomment-2229142118,3,['test'],"['test', 'testcases']"
Testability,Can you post a little bit more information? And have a look also at the full log.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1019#issuecomment-640538238:77,log,log,77,https://su2code.github.io,https://github.com/su2code/SU2/issues/1019#issuecomment-640538238,1,['log'],['log']
Testability,Caradonna_tung test case is not initialazing solution,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/997:15,test,test,15,https://su2code.github.io,https://github.com/su2code/SU2/issues/997,1,['test'],['test']
Testability,"Certainly - I think that the newer regression tests that diff two files rather than using the values listed in the regression scripts are all inviscid, so I think this should just be a matter of updating the values in the regression scripts, and I can help out over email as well. ; If you haven't already seen it, there are some notes in the wiki as well: https://github.com/su2code/SU2/wiki/Running-Regression-Tests",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/301#issuecomment-241507891:46,test,tests,46,https://su2code.github.io,https://github.com/su2code/SU2/issues/301#issuecomment-241507891,2,"['Test', 'test']","['Tests', 'tests']"
Testability,"Change HEATFLUX to TOTAL_HEATFLUX in output files so that optimization works correctly with OPT_OBJECTIVE= TOTAL_HEATFLUX; ; Additionally, a small change to updateHistoryMap.py has been made (a ""/"" in a path was missing), and historyMap.py has been modified by running updateHistoryMap.py. This fixes [#946](https://github.com/su2code/SU2/issues/946). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch. - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/947:901,test,test,901,https://su2code.github.io,https://github.com/su2code/SU2/pull/947,1,['test'],['test']
Testability,Change in the deformation regression tests,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/430:37,test,tests,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/430,1,['test'],['tests']
Testability,Changed Flow into Turb for limiter Test,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/403:35,Test,Test,35,https://su2code.github.io,https://github.com/su2code/SU2/pull/403,1,['Test'],['Test']
Testability,Changes that are necessary in a follow-up PR:; - [ ] Move regression tests to parallel regression and hybrid reg. Maybe the 4 cases can be split over those.; - [ ] Find similarities between IncNS and NS TauWallWF implementation and make it a common implementation. . Please add to this post other things (I am fine with others editing this),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1360#issuecomment-937761007:69,test,tests,69,https://su2code.github.io,https://github.com/su2code/SU2/pull/1360#issuecomment-937761007,1,['test'],['tests']
Testability,"Charanya,. thanks for the detailed answer. Let me ask you some more info. Apparently, you where able to reproduce the results I had comparing the two code versions simply using different boundary conditions on the latest code version. Can you specify me how?. Tobi,. In the meanwhile, to narrow down the problem, I ran also a couple tests in 2D to seek confirmation. For the (Euler) **pitching_NACA64A010.cfg** test case in the repository I rerun the same test at AoA of 1 deg and removing the pitching (no mesh deforming). I attach config files and summaries relative to the test cases. [config_CFD_6_2_0.txt](https://github.com/su2code/SU2/files/3938858/config_CFD_6_2_0.txt); [Summary_6_2_0.txt](https://github.com/su2code/SU2/files/3938859/Summary_6_2_0.txt); [config_CFD_6_0_1.txt](https://github.com/su2code/SU2/files/3938863/config_CFD_6_0_1.txt); [Summary_6_0_1.txt](https://github.com/su2code/SU2/files/3938865/Summary_6_0_1.txt). In this case the situation is definitely better as the two solvers give the same results. It looks like it is an issue related to the 3D case. <img width=""1220"" alt=""Screenshot 2019-12-09 at 11 27 27"" src=""https://user-images.githubusercontent.com/23583209/70424365-f316a780-1a77-11ea-8f68-4fc83e188ed7.png"">. I also quote Charanya in saying that it is definitely good that convergence to same values is reached but the transient response is fundamental and holds physical/mathematical values (I think of Wagner et similia) :). I would also suggest to add a regression test in this sense. Best, ; Rocco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-563150217:333,test,tests,333,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563150217,5,['test'],"['test', 'tests']"
Testability,"Check out the branch [fix_inlet_file_shape_opt](https://github.com/su2code/SU2/tree/fix_inlet_file_shape_opt). There's just one commit that differs from develop (921e85b9d7d9c152c131874a84f3534caf5705c2). I tested it on a simple case, and it seemed to work. But I don't have any more complex test cases to test it on. All my ""complex"" test cases involve other features not merged with develop. You can either merge that branch or (if your branch is not up to date with develop) cherry-pick the commit.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/970#issuecomment-627095055:207,test,tested,207,https://su2code.github.io,https://github.com/su2code/SU2/issues/970#issuecomment-627095055,4,['test'],"['test', 'tested']"
Testability,"Clark,. Thanks for putting this idea out there. In my experience, unit testing has been an intrinsic part of the the modus operandi in many multi-physics codes at DoE and has been well worth the additional effort. In cases where it makes sense (as described by Clark and in the Stack Exchange discussion) I would advocate for using it moving forward. There may also be some issues that arise multiple times in existing code where a retroactive application of unit testing may also make sense. I am copying Pat Miller, formerly with DoE, who may have more experience on whether such unit testing approaches were useful/worth the investment in some major codes he worked on. Best,. Juan. On Jun 4, 2019, at 2:14 PM, Clark Pederson <notifications@github.com<mailto:notifications@github.com>> wrote:. I propose adding a unit-testing framework and unit-tests to SU2. After chatting with @economon<https://github.com/economon>, I've decided to move the discussion here to get additional input. What is unit testing?. For those not familiar with unit testing, unit testing allows the testing of small bits of behavior, ideally using isolated bits of code. It is not intended to replace validation testing or formal verification tests. Instead, it serves a unique purpose. Consider the three following use cases:. * You're developing a new feature, and you want to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; * You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; * You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to writ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:71,test,testing,71,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,6,['test'],"['testing', 'tests']"
Testability,Cleaning up test cases suite,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1845:12,test,test,12,https://su2code.github.io,https://github.com/su2code/SU2/pull/1845,1,['test'],['test']
Testability,Cleanup/fix regression tests and other small fixes,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1764:23,test,tests,23,https://su2code.github.io,https://github.com/su2code/SU2/pull/1764,1,['test'],['tests']
Testability,Closer. It was just a versioning problem with the autotools. Looks like all we need to do now is clean up some old options left in the test case config files causing them to fail.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/208#issuecomment-152448207:135,test,test,135,https://su2code.github.io,https://github.com/su2code/SU2/pull/208#issuecomment-152448207,1,['test'],['test']
Testability,"Codefactor is just complainig about the usual CIncEulerSolver. All other test pass, so I'll merge this and continue in Part III. ; Coming to a repository near you soon. 🎦",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1258#issuecomment-824099355:73,test,test,73,https://su2code.github.io,https://github.com/su2code/SU2/pull/1258#issuecomment-824099355,1,['test'],['test']
Testability,"Commit 1bc9649 reverts my changes to those residuals in `hybrid_regression.py` which were covered by the regression tests already before. (Oddly enough, on my system the residuals of `SU2_CFD -t 2` were different from those computed by the Github pipeline. Maybe this is due to floating-point discrepancies when arithmetic operations are rearranged?)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1240#issuecomment-804683415:116,test,tests,116,https://su2code.github.io,https://github.com/su2code/SU2/pull/1240#issuecomment-804683415,1,['test'],['tests']
Testability,Compile SU2 with Mutation++ for regression tests,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1935:43,test,tests,43,https://su2code.github.io,https://github.com/su2code/SU2/pull/1935,1,['test'],['tests']
Testability,"Complete update of the engine and actuator disk boundary conditions, including a new regression test (propeller.cfg).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/318:96,test,test,96,https://su2code.github.io,https://github.com/su2code/SU2/pull/318,1,['test'],['test']
Testability,"Concerning the Regression tests: ; All failing test have a symmetry plane and are based on the inc-/compressible solver (so far so good). ; They are all based on the comparing the SU2 output, not by a file-diff like some AD cases do with the of_grad.dat file. That makes updating the regression test quite easy :) .; The difference between computed and stored values mostly quite small, apart from cases where a restart is done. I could change the solution_flow.dat where necessary if wanted.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/657#issuecomment-467130865:26,test,tests,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/657#issuecomment-467130865,3,['test'],"['test', 'tests']"
Testability,"Concerning the Regression tests: @talbring added a check for every testcase whether it exits successfully. Like this, `SU2_CFD -d` passes succesfully when it exits with `EXIT_SUCCESS` (i.e. returns 0). That is the only check, the actual output is not checked.; For quite some reg-tests e.g. with parallel_computation.py the SU2_SOL part silently failed which then causes the particular reg-test to fail. ""Silently"" because the test_values from the successful SU2_CFD match and that was the only criteria until now. Additionally we found a little bug where steady primal multizone restarts wouldn't work. That is fixed as well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/858#issuecomment-582469516:26,test,tests,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/858#issuecomment-582469516,4,['test'],"['test', 'testcase', 'tests']"
Testability,"Could be a data race, thanks for reporting @kursatyurt. Last I ran the thread sanitizer during the CoDiPack 2 update, nothing came up at the time. The failing test is the recently added `pywrapper_CFD_AD_MeshDisp`. I'll look into it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1980#issuecomment-1480981399:159,test,test,159,https://su2code.github.io,https://github.com/su2code/SU2/issues/1980#issuecomment-1480981399,1,['test'],['test']
Testability,"Currently I am not using multigrid. I tried with with 20 cores and 2 threads and it almost results in the same rate of convergence of the simulation with only 20 cores. I also tried going back to a couple of commits, right after the merge of the develop branch and it does not diverge on 40 cores. Starting from that commit I only slightly changed the computation of the stress tensor, which does not involve new mpi communications, thus I don't understand why it should lead to divergence. I will look further into this. EDIT. I encounter non-deterministic convergence running the same testcase on the same machine consecutive times. Sometimes it diverges and other times it goes through all of the iterations. It may be related to Issue #2259. I tried with a combination of 4C10T and 20C2T (C = cores, T = threads).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2338570505:587,test,testcase,587,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2338570505,1,['test'],['testcase']
Testability,"Data\Local\Programs\Python\Python39\python.exe; Build Options: -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Denable-cgns=true '-Dprefix=D:\Programme\SU2-7.1.1\bin'; Python system: Windows; The Meson build system; Version: 0.54.999; Source dir: D:\Programme\SU2-7.1.1; Build dir: D:\Programme\SU2-7.1.1\build; Build type: native build; None of 'PKG_CONFIG_PATH' are defined in the environment, not changing global flags.; None of 'PKG_CONFIG_PATH' are defined in the environment, not changing global flags.; Project name: SU2; Project version: 7.1.1 ""Blackbird""; None of 'CC' are defined in the environment, not changing global flags.; None of 'CFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity testing C compiler: gcc; Is cross compiler: False.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe; C compiler for the build machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the build machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'C",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:1161,test,testing,1161,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['test'],['testing']
Testability,"Dear @IndianaStokes,. First of all, I would like to thank you for the many contributions you are giving to SU2. I have just a question? Did you test this improvement in convergence rate with both JST and Roe 2nd order limiter?. regards . sv",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/448#issuecomment-334288538:144,test,test,144,https://su2code.github.io,https://github.com/su2code/SU2/pull/448#issuecomment-334288538,1,['test'],['test']
Testability,"Dear @WenyinWei: presently Mutation is already fully linked to SU2 and is not only something that will allow to deal nicely with chemical reactions, but it presently also used to get all the species/mixture thermochemical properties (including ions and free electrons) and to address thermal non equilibrium (i.e. multiple-temperatures) by incorporating characteristic vibrational and electronic temperatures for various species. We still have not pushed the latest developments in NEMO-TNE2 since we are finalizing some verification and validation test cases and producing appropriate documentation to be added on the SU2 webpage. @srcopela already created a nice substrate for all these features now we are trying to put this up to speed with the latest SU2 versions and capabilities and go beyond that with additional capabilities. Introducing MHD is definitely something on our roadmap, but something that will come after we have completed our merging of TNE2+NEMO and we have one solid feature with thermochemical nonequilibrium.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/741#issuecomment-515662933:549,test,test,549,https://su2code.github.io,https://github.com/su2code/SU2/issues/741#issuecomment-515662933,1,['test'],['test']
Testability,"Dear Dr Albring,. I just followed the procedures and included the files to create a test case to SU2_CFD_AD [a coarse mesh, a TargetCp.dat and a config file for an Arina nozzle. The coarse mesh is a 2000 triangles one; which is enough to give us an idea of the shockwave location and the geometry modifications. The next mesh I have would be an ~85000 elements which gives us a good information on the 27th function call]. ; I had some segmentation faults during long jobs: Is there some recommended tuning I can do on OS/HW or SU2 in order to minimize them?. With kind regards,. Jairo. > On Dec 7, 2018, at 09:45, Jairo Paes Cavalcante Filho <jairo.pcfilho@gmail.com> wrote:; > ; > Hello Dr. Albring,; > ; > Yes! Sorry for the delay due some internal presentations and events here.; > I just finished a small model and successfully tested it on openSUSE. I expect to upload it today.; > ; > With kind regards,; > ; > Jairo; > ; >> On Dec 7, 2018, at 06:35, Tim Albring <notifications@github.com <mailto:notifications@github.com>> wrote:; >> ; >> Hi Jairo,; >> ; >> what is the status here ? Is it possible to provide a simpler (smaller) case ?; >> ; >> —; >> You are receiving this because you were mentioned.; >> Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/600#issuecomment-445175541>, or mute the thread <https://github.com/notifications/unsubscribe-auth/Ac180u4PogeqhPW9rrfY4mW705IYKjvhks5u2jZpgaJpZM4X34F2>.; >> ; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-445429636:84,test,test,84,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-445429636,2,['test'],"['test', 'tested']"
Testability,"Dear Dr Economon and fellows,. Thank you for the remarks.; I have included reference to index INST_0 to the code in the local branch,; and compiled it in a MacOS (El Capitán):; Successfull compilation for Inverse Design Cp & Inverse Design HeatFlux.; External METIS lib caused eight warnings on arguments of abs() function:; Suggestion is to use *llabs*() instead of *abs*(). Please see appended; extract.; I am running a local test now, which uses Inverse Design Cp; and as soon as; it finishes, I will update the remote too, so we can continue the tests. With kind regards,. Jairo. CC libmetis/libmetis_a-mincover.o. *../../../externals/metis/libmetis/parmetis.c:311:15: **warning: **absolute; value*. * function 'abs' given an argument of type 'long long' but has; parameter of*. * type 'int' which may cause truncation of value [-Wabsolute-value]*. mindiff = abs(pwgts[0]-pwgts[1]);. * ^*. *../../../externals/metis/libmetis/parmetis.c:311:15: **note: *use function; 'llabs'. instead. mindiff = abs(pwgts[0]-pwgts[1]);. * ^~~*. llabs. *../../../externals/metis/libmetis/parmetis.c:336:17: **warning: **absolute; value*. * function 'abs' given an argument of type 'long long' but has; parameter of*. * type 'int' which may cause truncation of value [-Wabsolute-value]*. newdiff = abs(pwgts[to]+vwgt[higain] - (pwgts[from]-rinfo[higain].... * ^*. *../../../externals/metis/libmetis/parmetis.c:336:17: **note: *use function; 'llabs'. instead. newdiff = abs(pwgts[to]+vwgt[higain] - (pwgts[from]-rinfo[higain].... * ^~~*. llabs. *../../../externals/metis/libmetis/parmetis.c:540:15: **warning: **absolute; value*. * function 'abs' given an argument of type 'long long' but has; parameter of*. * type 'int' which may cause truncation of value [-Wabsolute-value]*. mindiff = abs(pwgts[0]-pwgts[1]);. * ^*. *../../../externals/metis/libmetis/parmetis.c:540:15: **note: *use function; 'llabs'. instead. mindiff = abs(pwgts[0]-pwgts[1]);. * ^~~*. llabs. *../../../externals/metis/libmetis/parmetis.c:583:17",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-436789848:428,test,test,428,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-436789848,2,['test'],"['test', 'tests']"
Testability,"Dear Dr. Economon, . I just uploaded the mentioned files. I hope everything may be ok now. With kind regards,. Jairo. > On Jan 21, 2019, at 22:31, Thomas D. Economon <notifications@github.com> wrote:; > ; > @jaspe55 <https://github.com/jaspe55> : I have just cleaned up a couple of things and can confirm that your mesh file is there. However, we are missing the converged solution file (solution_flow.dat) and the target Cp file for inverse design.; > ; > Similar to the process for the mesh, can you please upload the solution file to the TestCases repo and the target Cp file to the SU2 code repo (alongside the config file)? Once the files are present, we can update the regression values in the serial_regression_AD.py and parallel_regression_AD.py files, and this PR will be ready to merge.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/600#issuecomment-456240798>, or mute the thread <https://github.com/notifications/unsubscribe-auth/Ac180tLXcO2Ht3-J3rmwCWlPKQutyTiUks5vFmoEgaJpZM4X34F2>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-456794388:541,Test,TestCases,541,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-456794388,1,['Test'],['TestCases']
Testability,"Dear Dr. Economon,. I have uploaded a non-empty file (Arina2Kmesh.su2) to the develop branch and I was able to see the updated file in https://github.com/su2code/TestCases/tree/develop/disc_adj_euler/arina2k <https://github.com/su2code/TestCases/tree/develop/disc_adj_euler/arina2k>; Please find a glance of the evidence in the file appended to this note.; I realised that the uploading was effective after I committed it.; So I believe that now things are in the proper places. With kind regards,. Jairo. > On Dec 19, 2018, at 05:15, Thomas D. Economon <notifications@github.com> wrote:; > ; > I have just uploaded an empty file as a placeholder for your mesh, @jaspe55 <https://github.com/jaspe55>. Can you please try to update your local copy of the develop branch from the TestCases repository and then overwrite the empty file with your mesh? You can find the file in TestCases/disc_adj_euler/arina2k/, or view in the browser here:; > ; > https://github.com/su2code/TestCases/tree/develop/disc_adj_euler/arina2k <https://github.com/su2code/TestCases/tree/develop/disc_adj_euler/arina2k>; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/600#issuecomment-448506828>, or mute the thread <https://github.com/notifications/unsubscribe-auth/Ac180g1pVX8bgD1AMR-pDrH4PM5AKAbcks5u6fWmgaJpZM4X34F2>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-448831006:162,Test,TestCases,162,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-448831006,6,['Test'],['TestCases']
Testability,"Dear Dr. Economon,. I just finished the run on AD with the files you have adjusted and it did; converge. I also have successfully run some simple inverse design tests; with a limit on the number of cycles.; Thank you very much for your guidance and help. With kind regards,. Jairo. On Wed, Jan 30, 2019 at 2:13 PM Thomas D. Economon <notifications@github.com>; wrote:. > *@economon* approved this pull request.; >; > LGMT. Thanks @jaspe55 <https://github.com/jaspe55>; >; > Just one request: I have adjusted the number of iterations for the; > regression test and updated the residual values in the python script. I; > also had to move around some files. Can you please run the case (to; > convergence) and verify that the results are what you expect? Note that the; > config file and target Cp are in the code repository and the mesh and; > solution file are in the testcases repository. If everything looks ok, then; > this is ready to be merged.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/600#pullrequestreview-198200089>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/Ac180hqzVnSUPCnSBkQrTPfIv0kIltygks5vIdKrgaJpZM4X34F2>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-459568514:161,test,tests,161,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-459568514,3,['test'],"['test', 'testcases', 'tests']"
Testability,"Dear Dr. Economon,. Thank you again for your guidance.; The git add, git commit and git push commands worked as expected.; The only problem I had was when I tried to upload the mesh file to https://github.com/su2code/TestCases/tree/develop/disc_adj_euler: <https://github.com/su2code/TestCases/tree/develop/disc_adj_euler:> I wanted to upload a folder “arina2k”, whose contents is the mesh file (.su2). I could not just upload the folder name: the system appears to be waiting for an actual file name. When I choose the file name inside that folder , it appears that the system would upload the file within the repository, but 'discarding’ its folder name, so I would have an ‘orphaned’ file there. I tried also to create a file (which would be my folder name), but again, I am prompted with an editor in order to write an actual file, using directly the browser. I believe that there is a simple way to upload a sub-directory/filename, but i could not realize it. With kind regards,. Jairo. > On Dec 14, 2018, at 01:26, Thomas D. Economon <notifications@github.com> wrote:; > ; > @jaspe55 <https://github.com/jaspe55> : I see that you have added the residual check for the python regression script, but I do not see the config file, target file, or mesh. The config file and target file should be placed in SU2/TestCases/disc_adj_euler/arina2k/ (according to your path in the regression script), and the mesh placed in the TestCases/disc_adj_euler/arina2k/ directory in the TestCases repository here (develop): https://github.com/su2code/TestCases/tree/develop <https://github.com/su2code/TestCases/tree/develop>. Don't forget to 'git add' the files to make sure they are included on push. We can help diagnose any segfaults with the files.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/600#issuecomment-447209397>, or mute the thread <https://github.com/notifications/unsubscribe-auth/Ac180hTDp",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-447475363:217,Test,TestCases,217,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-447475363,2,['Test'],['TestCases']
Testability,"Dear Heather,; I am analyzing a propeller of an UAV. I have static thrust measurements such that when I used Euler results I got 3.5 lbf thrust as compared to the measured 6 lbs. My next step was to perform an NS equation with SA turb model. I got 7 times over predicted results such that the mesh has a Y+ of less than 1. Then I thought of doing an SST but was not long enough that it gave me error with divergence. I have been setting up my SST case as per the tutorial example of NACA0012. However, I do not happen to see any entry with regards to eddy frequency etc. (usually required by SST) in the config file. Any guidance will be great.; Thanks; Jehan; From: Heather Kline notifications@github.com; To: su2code/SU2 SU2@noreply.github.com ; Sent: Tuesday, May 12, 2015 11:43 AM; Subject: [SU2] Feature deallocation (#174). Bringing this branch up to date with current develop branch. ; Various deallocation changes; Some regression tests fail but all run. (previously was not the case); You can view, comment on, or merge this pull request online at:;   https://github.com/su2code/SU2/pull/174; Commit Summary; - Updated GetEngine_Properties; - Fix to the last commit; - Small bug; - Merge branch 'develop' into feature_MPI; - merging; - SU2_SOL and SU2_CFD are working; - Preliminary, but complete, implementation of SU2_DEF; - More updates; - Working version; - Complete implementation (validate); - Working version of SU2_DEF; - Final push before moving to the develop branch; - New MPI (removing SU2_PRT); - Merged in Ben's ParMETIS integration and fixed some conflicts.; - Merge branch 'benkirk-parmetis_integration' into feature_MPI; - ParMETIS geometry routines have been copied over but are not activated yet.; - Small change to ParMETIS include.; - ParMETIS can now be activated for testing (PARMETIS=YES in config).; - Updated MG; - Updated EA subrotuine; - Small fix; - Fixing memory leak; - Fixing memory leaks; - Dev release v.3.2.6; - Increasing MAX_NUMBER_MARKER; - Working versi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:939,test,tests,939,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,1,['test'],['tests']
Testability,"Dear Jyothi,; thanks, I managed to download all files correctly.; I noticed that in your config file you are using the MARKER_FSI_INTERFACE option, which is actually outdated (currently it should read MARKER_ZONE_INTERFACE), so I am assuming that you are not running the latest version of the develop branch.; First, I would suggest you to update SU2 on your local server, as the issue might have been solved in one of the latest updates.; Indeed, I was able to run the test case and the output files look good using the latest version. By the way, I had troubles using the SA turbulence model (a segmentation fault which I have to investigate further, but the case run just fine using the SST model). Let me know if you still get the ""nan"" issue in the output files using the latest version of the develop branch. cheers,; Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/417#issuecomment-317780215:470,test,test,470,https://su2code.github.io,https://github.com/su2code/SU2/issues/417#issuecomment-317780215,1,['test'],['test']
Testability,"Dear SU2 Team Members,. I've been trying to optimize bluff bodies geometries with the shape_optimization script, but I wasn't able to restart any optimization with restart files from previous simulations. This causes too much computational time to be expended to reach a periodic condition of the flow (starting from freestream). Is it possible to implement this kind of restart for unsteady flow optimization? I've looked for answers at the forúm, doing test simulations and at the tutorial's commentary section, but this feature seems to not exist. During my tests, I found out that the script doesn't recognize restart files with dual-time step indexes. When the script doesn't find a restart file, it starts from freestream condition, setting the config file inside the first direct simulation folder with the command ""RESTART_SOL=NO"". This problem can be bypassed by making a copy of one restart file and renaming it without its index. Then the script runs until it reaches other index problems with the output files. This also can be solved by renaming files while the script goes, but it still crashes at the end of the first design cycle.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/909:455,test,test,455,https://su2code.github.io,https://github.com/su2code/SU2/issues/909,2,['test'],"['test', 'tests']"
Testability,"Dear SU2 developers,. I'm trying to set up a FFD box however, after having run the SU2_DEF command, I noticed that no FFD_SURFACE_POINTS are crated in the mesh_out.su2 file. I tried this successfully with SU2 v7 but repeating the same procedure with SU2 v5 lead to the problem. What can be the cause of such a problem? Is the procedure to create the FFD box the same between SU2 v7 and v5?. I tested the following .cfg file with the mesh mesh_NACA0012_inv.su2 and it's not working. ```; % ----------------------- DESIGN VARIABLE PARAMETERS --------------------------%; %; % Kind of deformation (NO_DEFORMATION, TRANSLATION, ROTATION, SCALE,; % FFD_SETTING, FFD_NACELLE; % FFD_CONTROL_POINT, FFD_CAMBER, FFD_THICKNESS, FFD_TWIST; % FFD_CONTROL_POINT_2D, FFD_CAMBER_2D, FFD_THICKNESS_2D, FFD_TWIST_2D,; % HICKS_HENNE, SURFACE_BUMP); DV_KIND= FFD_SETTING; % ; % Marker of the surface in which we are going apply the shape deformation; DV_MARKER= ( airfoil ); %; % Parameters of the shape deformation; DV_PARAM= ( MAIN_BOX, 3.0, 4.0, 0.0, 0.0); %; % Value of the shape deformation; DV_VALUE= 0.0; %; %; % ------------------------ GRID DEFORMATION PARAMETERS ------------------------%; DEFORM_LINEAR_ITER= 250; %; %; % -------------------- FREE-FORM DEFORMATION PARAMETERS -----------------------%; %; % Tolerance of the Free-Form Deformation point inversion; FFD_TOLERANCE= 1E-10; %; % Maximum number of iterations in the Free-Form Deformation point inversion; FFD_ITERATIONS= 500; %; % FFD box definition: 3D case (FFD_BoxTag, X1, Y1, Z1, X2, Y2, Z2, X3, Y3, Z3, X4, Y4, Z4,; % X5, Y5, Z5, X6, Y6, Z6, X7, Y7, Z7, X8, Y8, Z8); % 2D case (FFD_BoxTag, X1, Y1, 0.0, X2, Y2, 0.0, X3, Y3, 0.0, X4, Y4, 0.0,; % 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0); FFD_DEFINITION= (MAIN_BOX,-0.1, 0.2, 0, 1.1, 0.2, 0, 1.1, -0.2, 0, -0.1, -0.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0); %; % FFD box degree: 3D case (x_degree, y_degree, z_degree); % 2D case (x_degree, y_degree, 0); FFD_DEGREE= ( 6 , 1, 0 ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1250:393,test,tested,393,https://su2code.github.io,https://github.com/su2code/SU2/issues/1250,1,['test'],['tested']
Testability,"Dear SU2 developers,. This PR is a long effort to add Hybrid RANS/LES capabilities, specially the Delayed Detached Eddy Simulation with Grey area mitigation and low dissipation schemes proper to unsteady flows. Summary of the contribution:. - Delayed DES:; - Standard SGS; - Vorticity SGS; - Shear Layer Adapted SGS. - Several low dissipation functions:; - DDES FD; - Ducros' shock sensor; - NTS adaptive. - Variants of SA turbulence model:; - Compressibility correction; - Edwards and Chandra; - QCR 2000 (Quadratic constitutive relation). - Low dissipation schemes:; - Low dissipation Roe.; - Low Mach Roe.; - Simple low dissipation AUSM (SLAU and SLAU2). I added only a small regression test for 2D DDES, travis can not handle even the smallest 3D test case that I have. Suggestions are welcome. Best,. Eduardo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/490:690,test,test,690,https://su2code.github.io,https://github.com/su2code/SU2/pull/490,2,['test'],['test']
Testability,"Dear SU2 users,. I continued the investigation and managed to track down the source of the problem.; The issues I face with SU2 appear when my wing geometry has several airfoils across the span. I ran several cases with supercritical airfoils and NACA 4 digits airfoils. As soon as the airfoil was changing along the span, SU2 had troubles computing the projected and wetted area of the wing, an attaining a correct solution. To better illustrate the issue, I attached a SU2 .cfg file (dummy.txt) and Gmsh .geo file (dummy_mesh.txt) to this post.; The geometry is the same as in the previous post except that I used 3 different airfoils along the span. That is, I replaced the NASA SC(2)-0712 by the {NASA SC(2)-0714, NASA SC(2)-0712, NASA SC(3)-0712}.; These airfoils are similar, so I expected to recover similar results. However, I observed that:; - SU2 computed the wrong z-projected area : 23.1 m^2 instead of 38 m^2,; - the y+ of the first cell is way too high in certain regions (see attached image, grey zones are the area where y+<1),; - the Cp distribution if not looking good (makes sense with those values of y+), see attached file. I am unsure if the problem appears because Gmsh has trouble in generating this kind of mesh or because SU2 has trouble reading it. Any ideas are welcome. Thank you again,; Adrien. ![cp](https://user-images.githubusercontent.com/39187559/43064280-c076a5e2-8e5e-11e8-84e5-602d1ee27ea2.png); ![y](https://user-images.githubusercontent.com/39187559/43064281-c09a1f86-8e5e-11e8-82b9-4c4fddc7d470.png); [dummy_mesh.txt](https://github.com/su2code/SU2/files/2218394/dummy_mesh.txt); [dummy.txt](https://github.com/su2code/SU2/files/2218395/dummy.txt); [log.txt](https://github.com/su2code/SU2/files/2218411/log.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/533#issuecomment-406973884:1691,log,log,1691,https://su2code.github.io,https://github.com/su2code/SU2/issues/533#issuecomment-406973884,2,['log'],['log']
Testability,"Dear all, . ; As I mentioned at the dev meeting earlier this week, regarding V&V, I already have joint plans; with Eduardo Molina to look at a number of turbulent benchmark cases using his (E)DDES; implementation (eg. square cylinder, tandem cylinders, massively separated NACA0012/21, etc). ; The next step after that would be to use my FWH implementation to compute farfield noise and compare them to the BANC workshop cases. NASA folks are very open to share the BANC data. ; We will likely be able to obtain the European VALIANT project data too.; I am on a short vacation right now but will start iterating with Eduardo on this next week ; when I am back in the office. . Best,. Beckett",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423286251:163,benchmark,benchmark,163,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423286251,1,['benchmark'],['benchmark']
Testability,"Dear all, ; I have added a pdf file here that includes some test case results obtained with our BC transition model. These zero pressure gradient and variable pressure gradient flat plate test cases are very popular for model validation. I have also included Eppler E387 airfoil results. I would appreciate if you have any 3-D test case and share it with me.; Looking forward to hear your feedback. ; Sincerely,; Samet. [BC_model_TestCaseResults.pdf](https://github.com/su2code/SU2/files/562425/BC_model_TestCaseResults.pdf)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-257360833:60,test,test,60,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-257360833,3,['test'],['test']
Testability,"Dear all,. I temporarily removed the test case because there were a couple of fix to do before. If you still think the test case for this feature may be important, I think a separate PR is more appropriate, as there will be the need to discuss about the best way to incorporate it. In the meantime, I included a fix on the outputs that allow to print grid velocities in the output files using the new mesh deformation solver and a small fix on the restart from the python side. Looking forward for your comments!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1148#issuecomment-766893504:37,test,test,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/1148#issuecomment-766893504,2,['test'],['test']
Testability,"Dear all,. This PR resolves an issue with the updated restart logic. Further, it also provides a couple of modifications which will be required in a future PR aimed at the automatic identification of the aerodynamic system. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1295:62,log,logic,62,https://su2code.github.io,https://github.com/su2code/SU2/pull/1295,2,"['log', 'test']","['logic', 'test']"
Testability,"Dear all,. as many of you know, we have been working for quite a while in the development of the FSI solver within SU2. So far, we have been using a separate branch; however, this branch has grown quite big (almost 200 commits!) and it's probably time to merge it with the develop branch. This way, other folks can start using the new code infrastructure for multi-physics problems, while reducing the hassle for everyone in future pull requests from our side. . This pull request includes, among others:; 1. Multi-physics support and improvements: ; - CTransfer structure with MPI support for parallel multi-zone simulations.; - CTransfer subclasses for physical definition of multi-physics interaction variables.; - CInterpolator structure with support for interpolation algorithms.; 2. A FEM structural solver aiming to deal with geometrical and material nonlinearities.; 3. A BGS driver structure for FSI problems.; 4. General bug fixes and improvements for unsteady problems with dynamic meshes.; 5. New configuration options required for the different kinds of problems tackled. If all the tests pass, I will add some regression tests, once the mesh files and solution files have been added to the TestCases repository. Please note that this version of the code is still under development, and we are currently working on further improvements in the efficiency and the capabilities of the solver. We intend to include these further developments by the time of the next release of the code. . Cheers,. Ruben",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/234:1096,test,tests,1096,https://su2code.github.io,https://github.com/su2code/SU2/pull/234,3,"['Test', 'test']","['TestCases', 'tests']"
Testability,"Dear all,. this pull request adds to SU2 the capabilities required to compute fully-coupled adjoint sensitivities in FSI problems, as described in the following paper: . Sanchez _et al._ (2017), Coupled Adjoint-Based Sensitivities in Large-Displacement Fluid-Structure Interaction using Algorithmic Differentiation, _Int. J. Numer. Meth. Engng._, https://doi.org/10.1002/nme.5700. Additionally, it incorporates new features such as an element-based description of structural properties, new material models, or electromechanical actuation. . Although this pull request involves a large number of commits, I have been working hard over the last weeks to minimize the impact on the contributions of others. Moreover, most of the changes only involve the structural of coupled FSI solvers, and new driver/iteration structures have been incorporated to maximize code flexibility. . Additional features, improvements to the input/output definition, regression tests, and documentation and tutorials will be coming soon, once the merge is successful. Kind regards,. Ruben Sanchez",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/452:955,test,tests,955,https://su2code.github.io,https://github.com/su2code/SU2/pull/452,1,['test'],['tests']
Testability,"Dear developers,; I am trying to install SU2 in docker ubuntu 18.04 container so that I can easily share with partner. But I failed to compile the code with following errors:; ```; (base) root@a5502ebdff64:/home/SU2# ./configure --prefix=/home/SU2/SU2_Install CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/bin/mpicc --with-cxx=/usr/bin/mpicxx; checking build system type... x86_64-pc-linux-gnu; checking host system type... x86_64-pc-linux-gnu; checking target system type... x86_64-pc-linux-gnu; checking for a BSD-compatible install... /usr/bin/install -c; checking whether build environment is sane... yes; checking for a thread-safe mkdir -p... /bin/mkdir -p; checking for gawk... no; checking for mawk... mawk; checking whether make sets $(MAKE)... yes; checking whether make supports nested variables... yes; checking whether make supports nested variables... (cached) yes; checking for style of include used by make... GNU; checking whether the C++ compiler works... no; configure: error: in `/home/SU2':; configure: error: C++ compiler cannot create executables; See `config.log' for more details; ```; I am sure that I have installed gcc/g++ successfully. You can see; ```; (base) root@a5502ebdff64:/home# gcc --version; gcc (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0; Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; ```; ```; (base) root@a5502ebdff64:/home# g++ -o hello hello.cc; (base) root@a5502ebdff64:/home# ./hello ; Hello, World!; ```; I have uploaded the `config.log` file. Could you give me some suggestions, please?; [config.log](https://github.com/su2code/SU2/files/3418183/config.log)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738:1080,log,log,1080,https://su2code.github.io,https://github.com/su2code/SU2/issues/738,4,['log'],['log']
Testability,"Dear developers,; I met a strange problem when running SU2 in parallel in a docker container. Could you give me some suggestions, please ?. When I run `mpirun --allow-run-as-root -n 24 SU2_CFD inv_NACA0012.cfg` in the container, there is no `flow.dat` file. I found a solution at #268. But the output information seems very strange. See ; [SU2_docker_container.log](https://github.com/su2code/SU2/files/3420075/SU2_docker_container.log). I also have run SU2 in parallel on the host machine with `mpirun -n 24 SU2_CFD inv_NACA0012.cfg`. Everything seems fine and I can get `flow.dat` file without extra actions. The output is ; [SU2_host_machine.log](https://github.com/su2code/SU2/files/3420093/SU2_host_machine.log). The outputs of these two cases are very different. Maybe #738 can help a little. Best.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/739:361,log,log,361,https://su2code.github.io,https://github.com/su2code/SU2/issues/739,4,['log'],['log']
Testability,"Dear friends of the Heat Solver and Periodic Boundary conditions, . I feared no exhausting work and added periodic BC to the Heat Solver. Stock up your supplies, cancel meetings for today and dive into the diff to review this piece. Ok for real, I don't know if that is all that has to be done? I did some early testing with mixed results, I noticed that I had to turn down CFL for the solid zone (1e4 in non-periodic case-> 1) to get a solution that seems to respect the periodicity. If the CFL is too large then I get some spurious temperature and weird residual pattern. Any comments are appreciated. This was just a first shot so Im gonna do more digging on that issue. ## Related Work; Periodic bc was initially implemented in #652 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1382:312,test,testing,312,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382,2,['test'],"['test', 'testing']"
Testability,"Dear,. I have recently installed SU2 v3.0 64bit (pre-compiled from SU2 download) on a Windows 7 x64 single_threded and installed python2.7.6 (winPython_amd64) also tried python3.3. I have installed SU2 as c:\SU2 (no spaces as in program files installation).; When I tried to run the test case of turb_RAE2822 at command prompt: . Code:; python ""c:\su2\shape_optimization.py"" -f turb_rae2822.cfg; Follwing error displayed:. Traceback (most recent call last):; File ""shape_optimization.py"", line 26, in <module>; import_su2; File ""_init_.py"", line 13, in <module>; if 'libedit' in readline._doc_. Type Error: argument of type 'nonetype' is not iterable. How can it be solved?; What is the appropriate version of python?; One more thing that I have found that SU2 is slower than Fluent, i tried naca0012 test case, how can it be sppedy?. ---. Best Regards; Ali",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/25:283,test,test,283,https://su2code.github.io,https://github.com/su2code/SU2/issues/25,2,['test'],['test']
Testability,"Did you expect that your introduced changes fail the regression test for fsi related cases? If so, could you point out what bits are responsible; Edit: ; Well so one part is d949cbe i.e. relaxation applied to velocities as well. but that did not change the dyn fsi adjoint case. That prob are the changes from b7f5b05 in CMeshSolver where LinSysSol is not set to zero anymore (WIthout knowing more of that solver: was that a bug before?)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1284#issuecomment-845188906:64,test,test,64,https://su2code.github.io,https://github.com/su2code/SU2/pull/1284#issuecomment-845188906,1,['test'],['test']
Testability,Different results on the same testcase of unsteady ONERA (v6.0.1 vs v6.2.0),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828:30,test,testcase,30,https://su2code.github.io,https://github.com/su2code/SU2/issues/828,1,['test'],['testcase']
Testability,Discussion #2213 is about fixes for the address sanitizer detections in the `harmonic_balance` and `hb_rans_preconditioning` test cases (see https://github.com/su2code/SU2/actions/runs/8422887468/job/23065483005?pr=2246).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2018520875:125,test,test,125,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2018520875,1,['test'],['test']
Testability,Divergence optimization NACA0012 inviscid test-cases,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/170:42,test,test-cases,42,https://su2code.github.io,https://github.com/su2code/SU2/issues/170,1,['test'],['test-cases']
Testability,"Do not merge yet - pull request submitted mainly for regression tests, and to aid in discussion of changes.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/258:64,test,tests,64,https://su2code.github.io,https://github.com/su2code/SU2/pull/258,1,['test'],['tests']
Testability,"Do you have a particular case that you can share ? Because for me it seems to work, at least for provided test cases.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/296#issuecomment-248906088:106,test,test,106,https://su2code.github.io,https://github.com/su2code/SU2/issues/296#issuecomment-248906088,1,['test'],['test']
Testability,Do you have a testcase that demonstrates this implementation? Can you reproduce and compare to the validation plots published by Xiao He? I think you have shared some similar results with us before.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2354#issuecomment-2341330478:14,test,testcase,14,https://su2code.github.io,https://github.com/su2code/SU2/pull/2354#issuecomment-2341330478,1,['test'],['testcase']
Testability,Do you think a test case for this is necessary?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1236#issuecomment-800279488:15,test,test,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236#issuecomment-800279488,1,['test'],['test']
Testability,"Do you understand why two regressions test are failing with a exclamation mark?. > On Mar 26, 2018, at 11:11 AM, Thomas D. Economon <notifications@github.com> wrote:; > ; > Thanks for sorting this out @hlkline <https://github.com/hlkline> and @fpalacios <https://github.com/fpalacios>. Once this and the other PR that I have open for ""memory fixes"" are ready and merged, why don't we put out a small maintenance release, v6.0.1?; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/519#issuecomment-376260268>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AccuRkIhOxa7Zm6t9u5OxUuquRym_1gZks5tiS9mgaJpZM4S4O1W>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/519#issuecomment-376544604:38,test,test,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/519#issuecomment-376544604,1,['test'],['test']
Testability,"Documenting the plan discussed in our developers call this morning here:; * Put header and sources together ; * Remove separation between Common/, SU2_CFD/, etc.; * Each major folder becomes a library (geometry/, solvers/, etc.); * Keep some subdirectories in major folders (e.g., solvers/flow/); * Set up include paths in the meson build system to make #include statements clean in the source; * Will prob require removing automake as part of this, which can’t build these libraries in parallel. Still need to finish separating files first. Tasks:; * @talbring - iteration classes; * @jayantmukho - grid adaptation, ADT structure, grid movement; * @pcarruscag - AD structure, folders for fem_\* ; * @economon - fluid model. Somewhat related:; * Run a test to see how many formatting-related conflicts result from running clang-format on and then diffing two fairly different branches (@pcarruscag). Please add anything else I am missing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-631567733:752,test,test,752,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-631567733,1,['test'],['test']
Testability,"Does anyone know why we get this random failures from travis?. > No output has been received in the last 20m0s, this potentially indicates a stalled build or something wrong with the build itself. It does not seem to be related with a particular test case...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-543128540:246,test,test,246,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-543128540,1,['test'],['test']
Testability,Does the code run?; What happens if you use ./meson.py instead of just meson?; What happens if you call the unit test executables directly (they will be in the meson build folder)?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1859#issuecomment-1367814260:113,test,test,113,https://su2code.github.io,https://github.com/su2code/SU2/issues/1859#issuecomment-1367814260,1,['test'],['test']
Testability,Does this support a type of CGNS that we didn't before? If so can you add a small test?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1500#issuecomment-1016783113:82,test,test,82,https://su2code.github.io,https://github.com/su2code/SU2/pull/1500#issuecomment-1016783113,1,['test'],['test']
Testability,"Don't add meshes to the code repo, we have TestCases for that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1765#issuecomment-1255435996:43,Test,TestCases,43,https://su2code.github.io,https://github.com/su2code/SU2/pull/1765#issuecomment-1255435996,1,['Test'],['TestCases']
Testability,"Don't mind the failing parallel_regression.py, that is due to https://github.com/su2code/TestCases/pull/91 . The correct residuals will be pushed with https://github.com/su2code/SU2/pull/1530. It is the 3D streamwise periodic case where I changed a wrong NDIME in the mesh. But I guess merging is blocked as parallel_regression.py is required :grimacing:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1532#issuecomment-1027966091:89,Test,TestCases,89,https://su2code.github.io,https://github.com/su2code/SU2/pull/1532#issuecomment-1027966091,1,['Test'],['TestCases']
Testability,"Dr. Economon, ; As far as I understand, in order to create skin friction lines (or surface streamlines), shear stress components are needed. In the tecplot outputs, I do not have these. So I could not figure out how to do that yet.; Also, I have read many studies abouth the NREL test case, and unfortunately the experimental data does not include skin friction measurements. In addition, the skin friction line plots in these studies seem to have inconsistencies compared to eachother.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-260619381:280,test,test,280,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-260619381,1,['test'],['test']
Testability,"Dr. Economon,. I have tried to add Schubauer-Klebanoff natural transition case for regression tests as you requested.; In my forked code under develop branch, I have the .cfg file in ""Schubauer_Klebanoff"" folder under ""TestCases/transition"" folder, so the config file directory should be correctly set. However, about a month ago, Dr. Albring moved grid.su2 file somewhere else that I could not locate now, so I am not sure how the regression test code will locate the grid file :) Just in case, I am attaching the grid file that I used for regression test. . Should there be any problem, please let me know.; [grid.zip](https://github.com/su2code/SU2/files/633737/grid.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-265131364:94,test,tests,94,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-265131364,4,"['Test', 'test']","['TestCases', 'test', 'tests']"
Testability,"Dr. Economon,; I have added the necessary files to the develop branch of TestCases repo and created a pull request.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-265696471:73,Test,TestCases,73,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-265696471,1,['Test'],['TestCases']
Testability,"Dr. Economon,; It turns out that the latest version of the SU2 prints the outputs that I needed (Cfx Cfy and Cfz). So, I created the surface streamlines, along with pressure coefficient distributions for comparison, and you can find it in the attached document . There are also some results from other studies in the literature in the attached document. ; It seems to me that, the NREL case may not be the best case for validating our model. Comparing the results in the literature, none of the surface streamlines agree well with eachother. In the absence of experimental data, it is difficult to tell which one is more reasonable. I would be happy if you would also comment on these results.; Also, I wonder what the next step is. Is there anything else that you require us to do before merging the model into the master code? I think if the transition model was released officially, the community may apply the transition model to different test cases that we may not heard of or the proprietary ones. . Samet; [BC_Transition_NREL_PhaseVI.pdf](https://github.com/su2code/SU2/files/603139/BC_Transition_NREL_PhaseVI.pdf)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-261886757:944,test,test,944,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-261886757,1,['test'],['test']
Testability,"During the change to the multizone config, the values in the history files for the turbomachinery cases are not being written anymore for the develop branch. The files are created as well as the header, but no values are written during every WRT_CON_FREQ iteration. Is there a marker that I need to add? I checked it with the APU_turbocharger testcase, nothing is written there as well.. - SU2 Version: [current develop branch @ commit 27f3875 ]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/746:343,test,testcase,343,https://su2code.github.io,https://github.com/su2code/SU2/issues/746,1,['test'],['testcase']
Testability,"Enabled it for develop again. Otherwise no test runs. Changed settings in travis to not build on pushes, only on PRs. Should save some computational work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/709#issuecomment-502061004:43,test,test,43,https://su2code.github.io,https://github.com/su2code/SU2/pull/709#issuecomment-502061004,1,['test'],['test']
Testability,Error centrifugal_blade test case,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1086:24,test,test,24,https://su2code.github.io,https://github.com/su2code/SU2/issues/1086,1,['test'],['test']
Testability,"Every simulation starts from zero. I also tried the third grid level and these are the results after seven runs. ![NonDeterministicRMSk_Level3](https://github.com/user-attachments/assets/52870ba5-5c46-4a27-b741-641a4ab54919). Runs 2, 6 and 7 diverge at different iterations while Run 4 converges to the desired residual value (log(RMS(Res_rho)) < -11.5). Running on 4 cores and 10 threads is a problem in this case? Or has the same problems of using 40 cores?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2340142780:327,log,log,327,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2340142780,1,['log'],['log']
Testability,Everything is up-to-date. I just need to update the TestCase folder....not sure what that order is...,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1326#issuecomment-882945414:52,Test,TestCase,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/1326#issuecomment-882945414,1,['Test'],['TestCase']
Testability,"Everything seems to be fine. The test cases run smoothly. I have been following the conversation with Rocco, I will now contact him to understand how to avoid duplication and how to best integrate our works",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124#issuecomment-743747473:33,test,test,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-743747473,1,['test'],['test']
Testability,Example was not running due to AssertionError: Config file has multiple specifications of CFL_ADAPT_PARAM; Duplicated entry of CFL_ADAPT_PARAM removed,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/391:31,Assert,AssertionError,31,https://su2code.github.io,https://github.com/su2code/SU2/pull/391,1,['Assert'],['AssertionError']
Testability,"Extra space. ## Proposed Changes; There was an extra space. ## Related Work; Compute polar did not work when I tried to vary the mach number only. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1039:697,test,test,697,https://su2code.github.io,https://github.com/su2code/SU2/pull/1039,1,['test'],['test']
Testability,"FFD box fix to avoid ambiguous definition of nonplanar faces . ## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; The FFD box is defined using quadrilateral faces. These faces can in principle be non-planar. To avoid ambiguity, we define a supporting middle node and divide each face into 4 triangles. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1742:1050,test,test,1050,https://su2code.github.io,https://github.com/su2code/SU2/pull/1742,1,['test'],['test']
Testability,"FULLMG_CYCLE produces segmentation faults in different ways:. 1. When using the SST turbulent solver; 2. When running in parallel (mpirun/mpiexec). This PR tries to fix these segmentation faults. ## Proposed Changes; **First issue**; In CTurbSSTSolver::CTurbSSTSolver() we do not initialize the residual nor the solution if we are using a FULLMG_CYCLE, producing a segmentation fault. I have included a line of code to consider the FULLMG_CYCLE scenario. **Second issue**; This issue is not related to mpi _per se_ but to domain partitioning.; In CMultiGridGeometry::CMultiGridGeometry() is computed the ratio between the number of points in the finest grid and a given coarse grid level. If this ratio is below 2.5 (I do not know why do we make this evaluation neither the reason why exactly 2.5) a multigrid level is removed (without warning the user!?), see lines 629-632. For a few cases that I have tested, when running in parallel certain grid levels have a ratio below 2.5 hence are removed. This does not happen when running in serial.; In CMultiGridIntegration::MultiGrid_Iteration() the index of the ""finest grid"" is then required and the system of equations at the ""finest grid"" level is intended to be solved. This index is set by default with the number multigrid levels specified by the user on the config file. In case that multigrid levels have been removed, when trying to access to the ""finest level"" mesh in CMultiGridIntegration::MultiGrid_Iteration() that level does not exist and produces a segmentation fault. To solve this issue:; - Stop removing multigrid levels in CMultiGridGeometry::CMultiGridGeometry() or improve the function. Why do we need to check whether the ratio is below a certain level? We should just check if the coarse level is empty, i.e., no control volumes.; - When removing a MG level in CMultiGridGeometry::CMultiGridGeometry() subtract one to the index of the finest grid, i.e., config->SubtractFinestMesh();. What are your thoughts?. After solving the p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1362:904,test,tested,904,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362,1,['test'],['tested']
Testability,"FYI - if you look at the full regtest log, there are a couple of tests failing silently - looks like on the SOL step such that when it checks the values it's still getting a match, but there is an error output. I checked, and this same problem occurs on the current develop branch, so it is not this PR causing the problem. . Since this fixes an urgent performance issue as far as I'm concerned we can merge this in despite that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/340#issuecomment-264673401:38,log,log,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/340#issuecomment-264673401,2,"['log', 'test']","['log', 'tests']"
Testability,FYI: the new Travis CI regression tests for the Python scripts are now live in the develop branch. Hope this helps with your testing.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-205452587:34,test,tests,34,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-205452587,2,['test'],"['testing', 'tests']"
Testability,Feature Python Wrapper - Test cases,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/298:25,Test,Test,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/298,1,['Test'],['Test']
Testability,Feature low mach reconstruct - regression test case,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/232:42,test,test,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/232,1,['test'],['test']
Testability,Feature test case fuel,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2237:8,test,test,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/2237,2,['test'],['test']
Testability,"Fetched developed branch and ran serial_regression.py. Got case FAILED with GCC for ls89_sa, centrifugal_blade, centrifugal_stage.; With INTEL compiler on same platform get passed for ls89_sa, centrifugal_blade, centrifugal_stage but failed for statbeam3d. Strange are the differences for naca0012_def and most of the brick-tests with intel. They converge in significant fewer steps and are marked FAILED.; Is it worthwhile to investigate the differences between GCC and Intel for the brick-cases?; I'am asking, because I'm gone look to fasten calculations up with optimizations in the existing code for single core and perhaps MPI. Far goal, but really far, may be using GPUs as well. Currently I have a 15% improvement single core for RANS from the Comp&Fluids_129 paper. But of course the calculations should not only be faster but correct as well.; Regards, Josef",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/347:324,test,tests,324,https://su2code.github.io,https://github.com/su2code/SU2/issues/347,1,['test'],['tests']
Testability,"First cut at fixing the failing tests, along with adding a whole new set of mesh deformation tests.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/280:32,test,tests,32,https://su2code.github.io,https://github.com/su2code/SU2/pull/280,2,['test'],['tests']
Testability,"First of all, my apologies for the mistake in creating the pull request to the master. Supersonic outflow non reflecting boundary condition has been implemented and tested in this branch. The implementation follow the approach proposed by Giles. This was a mandatory preparatory step for the implementation of the mixing plane interface, that is needed for the simulations of multi-stage turbines and compressors. cheers",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/189:165,test,tested,165,https://su2code.github.io,https://github.com/su2code/SU2/pull/189,1,['test'],['tested']
Testability,Fix Aachen turbine test case,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2293:19,test,test,19,https://su2code.github.io,https://github.com/su2code/SU2/pull/2293,1,['test'],['test']
Testability,Fix SIMD unit test for platforms where the SIMD size reverts to 1,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1610:14,test,test,14,https://su2code.github.io,https://github.com/su2code/SU2/pull/1610,1,['test'],['test']
Testability,Fix Symmetry/Euler marker preprocessing logic with deforming markers,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1933:40,log,logic,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/1933,1,['log'],['logic']
Testability,Fix aachen testcase,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2367:11,test,testcase,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/2367,1,['test'],['testcase']
Testability,Fix cpu arch returned value in TestCase.py,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2163:31,Test,TestCase,31,https://su2code.github.io,https://github.com/su2code/SU2/pull/2163,1,['Test'],['TestCase']
Testability,Fix parallel FSI SU2_SOL for regression test,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/315:40,test,test,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/315,1,['test'],['test']
Testability,Fix restart logic in python FSI,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1295:12,log,logic,12,https://su2code.github.io,https://github.com/su2code/SU2/pull/1295,1,['log'],['logic']
Testability,Fix some screen output and frozen limiter logic,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1193:42,log,logic,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/1193,1,['log'],['logic']
Testability,Fix tests,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/190:4,test,tests,4,https://su2code.github.io,https://github.com/su2code/SU2/pull/190,2,['test'],['tests']
Testability,"Fix to multi-functional optimization, addition of regression test. ; This re-introduces functionality that was previously added in https://github.com/su2code/SU2/pull/385. . (it was accidentally effected by someone else's pull request that appears to have been based on an outdated version of develop - if work you merged ~Feb-July has mysteriously disappeared I can privately point you to the relevant pull request to aid in fixing that)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/494:61,test,test,61,https://su2code.github.io,https://github.com/su2code/SU2/pull/494,1,['test'],['test']
Testability,Fix windows builds and test turning on OpenBLAS in serial tests,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1858:23,test,test,23,https://su2code.github.io,https://github.com/su2code/SU2/pull/1858,2,['test'],"['test', 'tests']"
Testability,Fixed an error for the Coupled RHT-CFD Adjoint test in serial_regression_AD.py,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1437:47,test,test,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/1437,1,['test'],['test']
Testability,"Fixed at least one failed test, but there are still many print statements left to fix:. ![image](https://user-images.githubusercontent.com/4604869/29169275-3be68e88-7da1-11e7-9d78-4f9a39727257.png). Hopefully this can be fixed up and merged before a bunch of new Python 3 incompatible code is added!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-321530610:26,test,test,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-321530610,1,['test'],['test']
Testability,"Fixed initial guess for the Newton search of the quadrilateral. ## Proposed Changes; This small PR fixes the initial guess for the Newton algorithm to determine the parametric coordinates of the quadrilateral.; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/608:788,test,test,788,https://su2code.github.io,https://github.com/su2code/SU2/pull/608,1,['test'],['test']
Testability,Fixed-lift mode often fails for viscous flows. Needs more testing/verification.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/59:58,test,testing,58,https://su2code.github.io,https://github.com/su2code/SU2/issues/59,1,['test'],['testing']
Testability,"Fixes #1588; cc @ArneVoss ; I have not fully tested the python wrapper forces, but they should be ok for dimensional simulations.; This is WIP until I add a regression test.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1595:45,test,tested,45,https://su2code.github.io,https://github.com/su2code/SU2/pull/1595,2,['test'],"['test', 'tested']"
Testability,"Folks,. I replaced the matrix multiplication in the DG solver (gemm in terms of BLAS) with the functionality provided by Eigen. It was very easy and it gives a very readable code. . I ran a couple of tests and, unfortunately, the preliminary conclusion is that you only get good performance if you let Eigen use an optimized BLAS implementation. In my case I used MKL. Compared to directly calling the MKL, there is an overhead of around 10 percent, which is still acceptable. However, if you do not use MKL and let Eigen do the matrix multiplication itself, the performance drops a factor of 7 for the test I carried out, which is a representative 3D test case. This factor is observed for both for the Intel and GNU compiler. It is still a factor 2 faster than my naive implementation though. So it looks like, at least for the DG solver, it is an absolute necessity to use an optimized BLAS implementation, unless there are some magic options in Eigen to make the gemm functionality faster. Using an optimized BLAS implementation in combination with Eigen is fine when doubles are used, i.e. when the solver is run in analysis mode. However, for the discrete adjoint solver the situation is a bit more complicated and we may have to come up with something better than just let Eigen handle the matrix multiplications. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-462075284:200,test,tests,200,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-462075284,3,['test'],"['test', 'tests']"
Testability,"Folks,. This is indeed a very important capability for many different applications: from interpolation of solutions from coarser grids to finer grids, to querying an unsteady solution, to implementing numerical error estimates…and many others. It is important that the search / interpolation routines work when interpolating between grids where some points in the target grid may fall outside of the source grid and, therefore some notion of distance to the wall is needed. Fortunately, Edwin van der Weide had worked on an interpolation library that @sravya91 (who received her PhD yesterday at our graduation ceremony and is now working at NVIDIA) used in her work. Jayant Mukhopadhaya and Brian Munguia have also been testing/improving the library. Perhaps everyone can comment on current status and we can create a small task force to see what still needs to be done and who can do what?. Best,. Juan. On Jun 17, 2019, at 10:36 AM, Clark Pederson <notifications@github.com<mailto:notifications@github.com>> wrote:. I'm going to jump on this too. Is anyone working on solution interpolation (from one mesh to another)? @sravya91<https://github.com/sravya91>, are you still working on this? Did PR #672<https://github.com/su2code/SU2/pull/672> introduce any capabilities to address interpolation? This seems to be a common request from SU2 users: [1]<https://www.cfd-online.com/Forums/su2/213321-su2-solution-interpolation.html> [2]<https://www.cfd-online.com/Forums/su2/215920-use-coarse-grid-flow-solution-initial-solution-fine-grid.html>. I've used some pretty rough python scripts to do solution interpolation in the past, and it would be nice to have some SU2 C++ code that could perform the same task. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/466?email_source=notifications&email_token=AA5FFRGCPYI5KNVQZ7GB5F3P27DQZA5CNFSM4EB5RB6KYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/466#issuecomment-502783107:721,test,testing,721,https://su2code.github.io,https://github.com/su2code/SU2/issues/466#issuecomment-502783107,1,['test'],['testing']
Testability,"Following my proposal in the last comment:. I disabled travis to run on develop, instead I set it master. BUT: in addition I set up a cron job in travis, so that at least once every week develop is tested. What do you say ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/709#issuecomment-502038526:198,test,tested,198,https://su2code.github.io,https://github.com/su2code/SU2/pull/709#issuecomment-502038526,1,['test'],['tested']
Testability,"For clarification: you mean removing a Testcase from the active regression tests to get faster turnaround from travis, the Testcase-files can stay probably.; The person who put it in place most likely had some feature which (s)he wanted to test. The path can give the purpose of the case away, but not necessarily as it is purely the files. If you (or someone else) have a Testcase in mind which can go out or can be modified I would be thankful. Choosing myself is rather arbitrary. Just as an additional idea: I removed README.md from the gitignore list of the Testcases in a branch and my plan is to shortly explain what the cases are intended to test specifically [Link](https://github.com/su2code/SU2/tree/feature_periodic_streamwise/TestCases/incomp_navierstokes/streamwise_periodic) (Note: The Readme there is not done at all, but it shows the idea kinda)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-515505274:39,Test,Testcase,39,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-515505274,8,"['Test', 'test']","['TestCases', 'Testcase', 'Testcase-files', 'Testcases', 'test', 'tests']"
Testability,"For my part, this is ready to be merged in once su2code/TestCases#34 goes through. Only the transonic stator restart case is failing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/670#issuecomment-511499499:56,Test,TestCases,56,https://su2code.github.io,https://github.com/su2code/SU2/pull/670#issuecomment-511499499,1,['Test'],['TestCases']
Testability,"For some reason there are now unit tests failing in the CGeometry_Test (assertions: 11 passed, 4 failed). Not sure why this now happens.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1637#issuecomment-1154438104:35,test,tests,35,https://su2code.github.io,https://github.com/su2code/SU2/pull/1637#issuecomment-1154438104,2,"['assert', 'test']","['assertions', 'tests']"
Testability,"For the V&V, I had a look at the turbulent flat plate case.I think we should create a couple of python scripts to run the cases and produce the figures from the result automatically. It should then be easy to create different figures, comparing SA and SST, SST1994 vs SST2003, etc. . Maybe somebody already has some scripts to produce the V&V figures? . We can split the flat plate V&V into compressible/incompressible and SA/SST. When this looks good, we can modify the regression test results.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1560#issuecomment-1084341767:482,test,test,482,https://su2code.github.io,https://github.com/su2code/SU2/pull/1560#issuecomment-1084341767,1,['test'],['test']
Testability,"For the g++ compiler the following compiler flags are pretty good.; -g -Wall -Wextra -Wno-unused-parameter -Wno-empty-body. As @economon said, do this both in sequential and parallel mode. BTW, when the regression tests go through this PR can be merged in as far as I am concerned.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/598#issuecomment-430136086:214,test,tests,214,https://su2code.github.io,https://github.com/su2code/SU2/pull/598#issuecomment-430136086,1,['test'],['tests']
Testability,"For the time being, lets use Gitter to communicate! Its free and you can simply log in with your github account. https://gitter.im/su2code/community",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/645#issuecomment-515048317:80,log,log,80,https://su2code.github.io,https://github.com/su2code/SU2/issues/645#issuecomment-515048317,1,['log'],['log']
Testability,"For what it's worth, it's very easy to dynamically link files to SU2, for instance if you want to add custom boundary conditions or source terms. Just put the default definition of the function in a dynamically linked library and when you want to use a different definition of this function, just point your library path to your custom library in e.g. your testcases directory. If this is all you want, you can do that without any additional libraries. This is more or less the same way as e.g. ANSYS Fluent does it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-679950110:357,test,testcases,357,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-679950110,1,['test'],['testcases']
Testability,"Found a bug where I get a deadlock for a big case while writing. Have to look into it to see whether its a problem on our cluster or in the code. If someone could test the vtu/vtm output on a big case (> 32 cores), that would be also very helpful.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/845#issuecomment-576388025:163,test,test,163,https://su2code.github.io,https://github.com/su2code/SU2/pull/845#issuecomment-576388025,1,['test'],['test']
Testability,"From a quick skim it looks like it's failing due to small differences in residual values, which is not unexpected here.; Those can be updated in the regression test scripts in SU2/TestCases/ in order to pass the tests, otherwise LGTM",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/612#issuecomment-440467191:160,test,test,160,https://su2code.github.io,https://github.com/su2code/SU2/pull/612#issuecomment-440467191,3,"['Test', 'test']","['TestCases', 'test', 'tests']"
Testability,From my perspective this is finished. As mentioned above I will add a testcase with Mean-flow+SST+2Species for 2 inlets over at #1388 once this is merged.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1427#issuecomment-965125694:70,test,testcase,70,https://su2code.github.io,https://github.com/su2code/SU2/pull/1427#issuecomment-965125694,1,['test'],['testcase']
Testability,"Giulio,. Great work. I think this is a fantastic general contribution to the code. Now that you know the test case results, can you please verify again that everything is working as you expect, and update the regression test residual values here on this pull request? Once everything looks good, we'll merge it in. T",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/243#issuecomment-189917000:105,test,test,105,https://su2code.github.io,https://github.com/su2code/SU2/pull/243#issuecomment-189917000,2,['test'],['test']
Testability,"Good Morning,. I'm from Chair of Thermal Engineering of Poznań University of Technology.; In August 2017 my colleague and I attended SU2 Summer School in; Kaiserslautern and met the Sci-Comp team developing the SU2. I think moving the main tutorials to the main repository is a good idea. We; declared to contribute some validation cases and written tutorials and; having this in main repository will ease the process of adding/modifying; the docs to a simple pull request. I also have a suggestion regarding the Test Cases and Tutorial files. I; apologize if this is the wrong place or this has been discussed already,; but still will give it a try:; - Test cases folder from SU2/su2code repository shall be moved to the; SU2/TestCases repository. Rationale: this makes one repository to store the; test case *.cfg files and mesh files.; - There shall be a TestCases/Mesh folder to store all the meshes needed for; Test Cases files, without subdivisions for RANS, Euler etc subfolders.; Considering that multiple test cases use the same mesh and all the mesh; files are distinct, this solution generates one place to store all the mesh; files. Should a user perform a test case, he/she will find the mesh by name; referenced in the *.cfg file instead searching thru multiple folders. This; will also help avoiding unnecessary copies of mesh files.; - The same should be done for Tutorial files: Tutorial/Mesh folder for; storing meshes (duplicating these few files from TestCases/Mesh should not; be a problem IMO, but will really help a new user to get up to speed with; SU2); - I have no clear opinion on where the Tutorial files folder should be; stored. But considering moving written tutorials to main repository i think; that tutorial files should also be stored in main SU2/su2code repository. Best regards and Happy New Year; Jędrzej. 2017-12-30 23:45 GMT+01:00 Tim Albring <notifications@github.com>:. > What do you think of moving the written tutorials also to the main; > repository ? Then",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485#issuecomment-354736415:513,Test,Test,513,https://su2code.github.io,https://github.com/su2code/SU2/pull/485#issuecomment-354736415,6,"['Test', 'test']","['Test', 'TestCases', 'test']"
Testability,"Good to know, thank you for testing it.; I'll close this issue once the PR is merged.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1287#issuecomment-849763505:28,test,testing,28,https://su2code.github.io,https://github.com/su2code/SU2/issues/1287#issuecomment-849763505,1,['test'],['testing']
Testability,"Great idea! Below are some links to databases that I know of. I'd be happy to contribute. . (Some) CFD companies run very large regression tests that can take a long time to complete. Typically, you do not put validation test cases in a regression test (and run it up to convergence) because it will just take too long. A regression test should be <30s or so. ; At a certain point there *will* be validation test cases that will take a couple of weeks to run. If you want to make sure that the validation tests are up-to-date and will run with the current version, create a regression test for it: create a coarse mesh setup for it and run it for only 10 iterations and check the residuals. ; Having said that, it will be nice if there is a general 'run' script that will run all subcases of a single validation case to construct the entire validation and validate the final results with the known/stored solutions.; -nijso. ercoftac database:; http://cfd.mace.manchester.ac.uk/ercoftac/index.html; nparc database:; https://www.grc.nasa.gov/WWW/wind/valid/archive.html; cfl3d V&V database:; https://cfl3d.larc.nasa.gov/Cfl3dv6/cfl3dv6_testcases.html; V&V database for turbulence models:; https://turbmodels.larc.nasa.gov/; drag prediction workshop:; https://aiaa-dpw.larc.nasa.gov/; some cfd-online V&V links: ; https://www.cfd-online.com/Wiki/Validation_and_test_cases; https://www.cfd-online.com/Links/refs.html#validation; reacting flow database:; https://www.sandia.gov/TNF/abstract.html",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-426239437:139,test,tests,139,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-426239437,7,['test'],"['test', 'tests']"
Testability,"Great to see this, and thanks for all of the effort. Your preparation really showed at the developers meeting. Is it possible for you to also share your multi zone CHT example from the dev meeting slides in this branch? I would like to do a few tests with a concrete case to try it out.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/585#issuecomment-424220665:245,test,tests,245,https://su2code.github.io,https://github.com/su2code/SU2/pull/585#issuecomment-424220665,1,['test'],['tests']
Testability,"Great! Assuming they pass the tests, please go ahead and merge in #350 and then this (#351).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/351#issuecomment-271141410:30,test,tests,30,https://su2code.github.io,https://github.com/su2code/SU2/pull/351#issuecomment-271141410,1,['test'],['tests']
Testability,"Great!; As an FYI, we are planning on adding regression scripts which cover more of the python code features, so there may be a delay while we get those implemented and running prior to merging your pull request. ; For the existing regression tests, you can run those on your own machine using the scripts within the TestCases/ folder. (There is also more information on the wiki). It will also be helpful to refer to our developer docs in the wiki: https://github.com/su2code/SU2/wiki/Developer-Docs",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-195812062:243,test,tests,243,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-195812062,2,"['Test', 'test']","['TestCases', 'tests']"
Testability,"Great!; Thank you very much.; With kind regards,. Jairo. On Thu, Nov 1, 2018 at 5:10 PM Thomas D. Economon <notifications@github.com>; wrote:. > No problem at all. I think the issue was that others had merged the; > changes into develop here from the web interface and those changes needed; > to be pulled down into your local copy before you could push the changes to; > .travis.yml up.; >; > I have just made the change, and I see the tests are now running! We'll; > get back with a review soon.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/600#issuecomment-435170261>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/Ac180sQoMHXa2p4ICO_ef6f3QXOmhII_ks5uq1U_gaJpZM4X34F2>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-435250485:437,test,tests,437,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-435250485,1,['test'],['tests']
Testability,"Great, thanks @MicK7. It is a bit big to have as a regression test just for this, but we can certainly use it to test the 1 or 2 lines we need to change to enable multizone cgns, are you planing to make those changes?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1566#issuecomment-1083674187:62,test,test,62,https://su2code.github.io,https://github.com/su2code/SU2/pull/1566#issuecomment-1083674187,2,['test'],['test']
Testability,"Great, we needed this! Do you have a testcase that we can use as a regression test to add to the PR?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2197#issuecomment-1889504191:37,test,testcase,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/2197#issuecomment-1889504191,2,['test'],"['test', 'testcase']"
Testability,"Great. I have seen it stall sometimes, but usually a restart is fine. Btw, as I mentioned in other comments, we now have a total of 70 minutes for our tests in Travis CI. It's not a long term solution, but it will hold us over for some time. We have a bit of a logjam with pull requests right now. We'll merge in some of the smaller ones / bug fixes first, but then I'll get this one merged in the near future.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/328#issuecomment-264955471:151,test,tests,151,https://su2code.github.io,https://github.com/su2code/SU2/pull/328#issuecomment-264955471,2,"['log', 'test']","['logjam', 'tests']"
Testability,"Great. Sorry for the delay. Just merged those in under the TestCases repo, so let's rerun the tests here and see if everything passes, ok? I'll restart it now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-267193489:59,Test,TestCases,59,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-267193489,2,"['Test', 'test']","['TestCases', 'tests']"
Testability,Happy to report that with this branch it is now possible to run a calculation with over 1 billion grid points. I ran freestream through a 1029^3 hexa CGNS grid of a cube as a test.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-523804120:175,test,test,175,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-523804120,1,['test'],['test']
Testability,"Hard to tell if it solves the issue once and for all since that random behaviour was pretty rare.; After initializing those values to zero I was no longer able to reproduce the issue on my machine. ; By the way, on another branch I have (feature_driver_prototype) this issue was always occurring, after this modification it disappeared in that branch too, so I'm pretty confident we fixed it. As far as I know, among all the reg tests, that random behaviour was affecting only the flat plate case.; Are you aware of any other test I can check that are showing this issue?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/316#issuecomment-253175711:429,test,tests,429,https://su2code.github.io,https://github.com/su2code/SU2/pull/316#issuecomment-253175711,2,['test'],"['test', 'tests']"
Testability,"Harmonic balance source term is preconditioned using matrix presented in Thomas et al. AIAA 2009-4270. This allows stable CFL number to go from near 1.0 up to at least 6.0. I have not tested beyond that. Once merge is successful, I will create a regression test. Jason",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/445:184,test,tested,184,https://su2code.github.io,https://github.com/su2code/SU2/pull/445,2,['test'],"['test', 'tested']"
Testability,"Have a look at a9466bb158ca8675352bf3b4b887cbf82b7f28ff for a suggestion on how to disable OpDiLib within the scope of the existing build options (casually tested). To clarify the AD implications: If you use OpDiLib, you will have atomic adjoints where no shared reading optimizations are applied, even with `-t 1`. Disabling OpDiLib - if we add that option - will amend this. The presence of `_OPENMP`, however, makes SU2 use the thread-safe CoDiPack type and enables thread-safety augmentations in CoDiPack. Therefore, a reverse AD + OpenMP - OpDiLib build is not the same as a classical serial reverse AD build that is vectorized one way or the other. If we add this, reverse AD + OpenMP - OpDiLib should also print an error for `-t 2` or higher. Since I am not 100% sure about it yet, could you clarify again what it is that you want to achieve in the end, and why?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1294#issuecomment-891257890:156,test,tested,156,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-891257890,1,['test'],['tested']
Testability,"Have you checked that the solution (post-processed) looks OK, using the parallel script and more then 1 processor? Unfortunately, the fact that the reg tests are passing is not always enough. Just let me know if you can!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/344#issuecomment-267087493:152,test,tests,152,https://su2code.github.io,https://github.com/su2code/SU2/pull/344#issuecomment-267087493,1,['test'],['tests']
Testability,"Hello !. I have been trying to run the NICFD nozzle case of the tutorials with CO2 instead of MDM, using the Peng-Robinson equation of state. However, I get some disturbance near the wall, that eventually cause the simulation to crash. I have run a few tests and this is what I was able to deduce:. -The disturbance occurs when the flow is transonic/supersonic, not if the flow stays subsonic.; -The disturbance does not appear when an Euler wall condition is imposed, but it appears when a heat-flux (no slip) condition is imposed. ; -It does not appear when using the ideal gas model. ; -It will appear either with a non structured mesh or a structured one. ; -It appears even if y+ < 1 ; -It will occur even at low CFL numbers (smaller than 1) when using the Euler implicit scheme.; -It does not seem to occur when using the Euler explicit scheme, though I still have to make tests to be 100% sure. [simulation_files.zip](https://github.com/su2code/SU2/files/8921759/simulation_files.zip); ![Mach](https://user-images.githubusercontent.com/77575610/174147396-e478810f-e10f-4a50-840d-d1c7929c2c3f.png); ![Pressure](https://user-images.githubusercontent.com/77575610/174147404-8a6ca8c7-32d4-43ce-b3a3-355595c28975.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1670:253,test,tests,253,https://su2code.github.io,https://github.com/su2code/SU2/issues/1670,2,['test'],['tests']
Testability,"Hello Charanya, Tobi,. I've finally performed some validation runs trying to tackle the Boundary condition issue which was recognized by @TobiKattmann as the source of discrepancy in unsteady Euler simulations between the old version and the new version. My validation test case relies on the ONERA M6 model I originally used to point out the issue. The test consists in imposing a deformation of the wing boundary which resembles a bending mode of the wing (starting from an already converged steady state). Such input deformation is provided in time in the shape of a blended-step. For the considered mode, forces are recorded in the fashion of the popular (within an aeroelastic context) Generalized Aerodynamic Force (GAF) coefficient in time. A Fourier Transform allows me to recast the GAF in the frequency domain where I can compare the same value with the ones extracted by the Doublet Lattice Method on a geometrically equivalent panel mesh. Simulation is performed at mach 0.8(~ V_inf = 272.3 m/s ) and AoA = 0. In the figure here you can see the time domain GAF vs time as calculated by old SU2 (v 6.0.1), new SU2 (v6.2.0) enforcing the old boundary condition as suggested previously by @cvencro and new SU2 with the new boundary condition. . ![Time](https://user-images.githubusercontent.com/23583209/72831582-75070c80-3c83-11ea-94fc-06ebbffe9f18.jpg). You can notice how at approx 0.0023 sec the blended step is fully developed. Now, despite some small differences between the old SU2 version and the new with enforced old boundary conditions (that are due, among other things, to small changes in the mesh deformation algorithm that I have noticed) you can notice the big difference in the application of the two boundary conditions. . I also attach a couple zooms of the signal: first at time 0 which gives the GAF for the steady initial simulation and second for the converged values. It can be seen how (even if less important) some discrepancies are found here as well.; ![Time_zoom]",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-576826669:269,test,test,269,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-576826669,2,['test'],['test']
Testability,"Hello Dr. Albring,. Yes! Sorry for the delay due some internal presentations and events here.; I just finished a small model and successfully tested it on openSUSE. I expect to upload it today. With kind regards,. Jairo. > On Dec 7, 2018, at 06:35, Tim Albring <notifications@github.com> wrote:; > ; > Hi Jairo,; > ; > what is the status here ? Is it possible to provide a simpler (smaller) case ?; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/600#issuecomment-445175541>, or mute the thread <https://github.com/notifications/unsubscribe-auth/Ac180u4PogeqhPW9rrfY4mW705IYKjvhks5u2jZpgaJpZM4X34F2>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-445209093:142,test,tested,142,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-445209093,1,['test'],['tested']
Testability,"Hello Dr. Economon,; ; At this moment, I am running a case which is lighter but sill not very simple (I am running it on a Mac with four cores, and it will finish by Monday, I suspect). As soon as it successfully completes, I will work on a simpler sample case in order to include it in the test suite, willing God. With kind regards,. Jairo. > On Nov 16, 2018, at 16:12, Thomas D. Economon <notifications@github.com> wrote:; > ; > Thanks, @jaspe55 <https://github.com/jaspe55> ! LGTM. I don't think we have any tests for the inverse design capability. Do you have a very simple test case that we can put into the regressions for this capability? I think you are working on a nozzle design.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/600#issuecomment-439496260>, or mute the thread <https://github.com/notifications/unsubscribe-auth/Ac180nOm5nOlpnYLID7YMRQeFOsAZQJYks5uvw4MgaJpZM4X34F2>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-439506935:291,test,test,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-439506935,3,['test'],"['test', 'tests']"
Testability,"Hello Dr. Economon,; I have been busy for some time, and just had chance to submit my transition model here on GitHub. Before starting the NREL case, I decided to check the caradonna_tung test case to see how to set grid movement configurations etc.. Although I have successfully run the case with euler equations, I could not do so with the navier-stokes equations as the case stopped running with error ""Convective scheme not implemented (turbulent)"". This is why I could not solve the NREL test case. If I am missing something, would you please help me on the issue?. Samet",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-257389300:188,test,test,188,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-257389300,2,['test'],['test']
Testability,"Hello Eduardo, . Sure! I will run my case and will let you know. ; Thank you for the information! . Monika Chauhan ; Sent from my iPhone. > On 27-May-2020, at 8:32 PM, Eduardo Molina <notifications@github.com> wrote:; > ; > ﻿; > Hi Monika,; > ; > We are in the V&V process of a new wall model LES implementation. Also, I took the opportunity to start fixing the RANS wall function since it will share the same code structure with the WMLES part, i.e. replace the wall shear stress in the NS fluxes. ; > ; > We didn’t extensively test the RANS wall functions, only very limited test cases. It will be great if you could run your own cases using the following branch: ; > ; > https://github.com/su2code/SU2/tree/feature_WallModelLES <https://github.com/su2code/SU2/tree/feature_WallModelLES>; > ; > Please let me know if you need additional help and looking forward to hear from you.; > ; > Best,; > ; > Eduardo; > ; > ; > ; > > On 27 May 2020, at 11:30, monika1387 <notifications@github.com> wrote:; > > ; > > ; > > Sure Juan! I would like to. Because I was running on RANS but I am working; > > on LES to make this wall functions work which is not working either.; > > Please let us know how we can support and work to get this working for LES; > > simulation (wall models in SU2).; > > ; > > On Wed, May 27, 2020 at 12:29 PM Juan J. Alonso <notifications@github.com>; > > wrote:; > > ; > > > Monika,; > > >; > > > There is a chance we could work together on this…Eduardo Molina (copied); > > > co-advised a short project last year on wall functions which made some; > > > progress but did not finalize an implementation. It may be a better; > > > starting point. Eduardo, can you comment where that code went?; > > >; > > > I am also copying Matt S. who is interested in wall function; > > > implementations in SU2. Perhaps we can get everyone on the same page to get; > > > these working in the baseline state…and then improve them in various ways?; > > >; > > > Best,; > > >; > > > Juan; > > >; > >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-635021148:529,test,test,529,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-635021148,2,['test'],['test']
Testability,"Hello Pedro,; I am one of the developers of the BC model itself, and I have implemented it to the SU2 back in 2016 which was first available to the users on v5 ""Raven"" . We updated the model based on the suggestions of some experts in the field, and created the BCM version several months ago. I am using the updated version for months on my pc without any issues.; By the way, for the regression tests, I will need help as I do not have a linux machine to work with; can not compile the code properly...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1132#issuecomment-743751685:397,test,tests,397,https://su2code.github.io,https://github.com/su2code/SU2/pull/1132#issuecomment-743751685,1,['test'],['tests']
Testability,"Hello SU2 developers, ; I tried to build from source the new SU2 v7.0.5 by following the quick compilation guide but after the command. `./meson.py build`. I received the following error. ```; Downloading CoDiPack '501dcf0305df147481630f20ce37c2e624fb351f'; Downloading MeDiPack 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Downloading meson '29ef4478df6d3aaca40c7993f125b29409be1de2'; Downloading ninja '52649de2c56b63f42bc59513d51286531c595b44'; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.54.999; Source dir: /home/roby/SU2/SU2v7; Build dir: /home/roby/SU2/SU2v7/build; Build type: native build; Project name: SU2; Project version: 7.0.5 ""Blackbird""; C compiler for the host machine: cc (gcc 5.4.0 ""cc (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C linker for the host machine: cc ld.bfd 2.26.1; C++ compiler for the host machine: c++ (gcc 5.4.0 ""c++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C++ linker for the host machine: c++ ld.bfd 2.26.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.29.1); Run-time dependency MPI for c found: YES 1.10.2; Run-time dependency MPI for cpp found: YES 1.10.2; Message: Extracting boost ... externals/tecio/meson.build:6:2: ERROR: Command ""/usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio"" failed with status 1. A full log can be found at /home/roby/SU2/SU2v7/build/meson-logs/meson-log.txt; ```. Best regards",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1019:1692,log,log,1692,https://su2code.github.io,https://github.com/su2code/SU2/issues/1019,3,['log'],"['log', 'logs']"
Testability,"Hello SU2 users and developers,. Begin this year I noticed that the dv_value of an incompressible optimization case is not adjusted by the SLSQP optimizer, but is just halving for each function call. I executed th; e following test cases, to narrow the possibilities and to possibly detect the problem. . First I took a compressible test case to see the deformation behavior of a compressible case; the behavior was as suspected. ; The next step is the change of regime type: compressible to incompressible, which results into a wrong behavior of the dv_value (halving for each function call). ; Subsequently I changed the regime from incompressible to compressible and I changed only the velocity (not the Reynolds number) from Mach 0.7-> 0.07; dv_value worked as suspected. ; As last I ran the compressible case with Mach 0.07 and I changed Reynolds from 6.5e6 -> 1.6e6, which results in a wrong behavior (halving for each function call). It seems to be a bug, because it is an unsuspected behavior and I do not see any relation between the regime type and the adjoint equations. I tried to find it in the code for weeks, however I could not find it. Can someone please tell me why the optimization process behaves in this way for incompressible flows. . I saw many updates of SU2 to the adjoint scripts and to shape_optimization.py. Now I am wondering whether this behavior has been taken into account during the update. So whether the incompressible optimizer will work properly after I have updated the SU2 package. I really look forward to a solution or reply!. Kind regards,. Floris van der Schuur",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/409:227,test,test,227,https://su2code.github.io,https://github.com/su2code/SU2/issues/409,2,['test'],['test']
Testability,"Hello Tim. Thank you for the quick reply. ; Since I'm a new SU2 user, I firstly tried to build it from source in the quickest possible way so I didn't really do much. I've just run the command `./meson.py build` wihout modifying anything. Furthermore I tried on two different machines and I got the same error. ; Here the last part of the meson-log.txt but unfortunately it doesn't add more information about the problem. ```; Compiler stderr:; ; Run-time dependency MPI for cpp found: YES 1.10.2; Running command: /usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/check_dir.py boost; --- stdout ---. --- stderr ---. Message: Extracting boost ...; Running command: /usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio; --- stdout ---; /home/roby/SU2/SU2v7/externals/tecio. --- stderr ---; Traceback (most recent call last):; File ""/home/roby/SU2/SU2v7/meson_scripts/extract_file.py"", line 38, in <module>; extract_tar(infile, P.outpath, True); File ""/home/roby/SU2/SU2v7/meson_scripts/extract_file.py"", line 24, in extract_tar; with tarfile.open(fn) as z:; File ""/usr/lib/python3.5/tarfile.py"", line 1557, in open; return func(name, ""r"", fileobj, **kwargs); File ""/usr/lib/python3.5/tarfile.py"", line 1655, in bz2open; compresslevel=compresslevel); File ""/usr/lib/python3.5/bz2.py"", line 102, in __init__; raise TypeError(""filename must be a str or bytes object, or a file""); TypeError: filename must be a str or bytes object, or a file. externals/tecio/meson.build:6:2: ERROR: Command ""/usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio"" failed with status 1.; ```. Thank you for the assistance",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1019#issuecomment-640548489:345,log,log,345,https://su2code.github.io,https://github.com/su2code/SU2/issues/1019#issuecomment-640548489,1,['log'],['log']
Testability,"Hello Tobi, Charanya,. thanks for the efforts. Your results are highly encouraging! I'd like to run in the following days the ONERA FSI test case on my framework for a triple check. Only think is that I was working on a branch on Ruben Sanchez's fork of the code. Can some pro git user tell me how to pull from the `fix_gridvel` on the main repo? Otherwise @TobiKattmann, you were mentioning about adding few lines to the CEulerSolver.cpp? Can you be more detailed about that? Of course I guess these changes need to be used without forcing the old BC in solver_direct_mean.cpp as Charanya was doing. Best",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-634597641:136,test,test,136,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-634597641,1,['test'],['test']
Testability,"Hello Tobi,. Thanks for your quick reply! I'll address you doubts as follows. > I used this mesh <Testcases>/control_surface/mesh_ONERAM6_inv.su2 and the boundary marker names are a bit different in the mesh, compared to your provided config (WING vs LOWER_SIDE, UPPER_SIDE, TIP + SYMMETRY vs SYMMETRY_FACE). . Yeah, the mesh you are mentioning is the same. I simply united the TIP, LOWER_SIDE and UPPER_SIDE under the marker tag WING. > The initial transient through the domain based on the initial values is unphysical to some extend and if e.g. 'steady state' results are the same for both code versions .... the problem is not that big. Although it differs quite a bit in the temporal evolution tbh; In the results (also in the mail) it looks a bit like it approaches a steady state for Cl and CD. So maybe 1000 timesteps will tell us a bit more 🤔. I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings.; [Summary_steady_6_0_1.txt](https://github.com/su2code/SU2/files/3906039/Summary_steady_6_0_1.txt); [Summary_steady_6_2_0.txt](https://github.com/su2code/SU2/files/3906010/Summary_steady_6_2_0.txt). Regarding the unsteady case, I'm aware that this test may have little physics behind (especially if comparing the first timesteps) but I wanted to investigate the reason :). Results are too different and I think these might be one of the reasons behind some discrepancies I'm encountering in my FSI framework. ; My framework for FSI features a restart from a steady solution at t=0 and an unsteady simulation with imposed boundary of the wing marker. The discrepancies in that case are huge and are clearly wrong. I went back to the root and found this weird behaviour comparing the two versions so I thought this might be one cause. > Another thing: There is no tag 6.0.2 😕 ... 6.0.1 and then 6.1.0.. Yep you are right, the version is definitely 6.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-559850074:98,Test,Testcases,98,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-559850074,1,['Test'],['Testcases']
Testability,"Hello Tom,. Thanks for responding. I have been trying to recreate the problem on smaller meshes, but so far, no luck. However, I am seeing a problem that may be _related_ on a smaller mesh. This is occurring with the latest commit (c093a62a2b) of develop:. When compiled with mpi and buildtype of either release or debug, when attempting to restart a DDES, I am getting the following:. 1) Compiled in release mode: segmentation faults following ""initialize jacobian structure (SA model)""; 2) Compiled in debug mode: ; ```; | Total Time| 1| 1| s| 1|; | Time Step| 1.25e-06| 1| s| 1.25e-06|; +------------------------------------------------------------------------------+; Initialize Jacobian structure (Navier-Stokes). MG level: 0.; Initialize Jacobian structure (SA model).; SU2_CFD_MPI_DEBUG: ../SU2_CFD/src/output/../../../Common/include/geometry/../toolboxes/C2DContainer.hpp:294: const Scalar_t& container_helpers::AccessorImpl<Index_t, Scalar_t, StorageType::ColumnMajor, AlignSize, 0, 1>::operator()(Index_t) const [with Index_t = long unsigned int; Scalar_t = double; long unsigned int AlignSize = 64]: Assertion `i>=0 && i<m_rows' failed.; ```; This problem appears on a relatively small (~7 million cell) mesh of the same geometry as the larger one I mentioned in my initial post. Running the simulation in serial mode runs successfully and does not produce any errors. I have put the RANS result, mesh, and DDES configure file and restart files on a shared folder:. https://drive.google.com/open?id=1IDpK_0xYktI-lbG-ozre9Sf_3ksC7xtt. Any/all help is greatly appreciated. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/949#issuecomment-620295725:1111,Assert,Assertion,1111,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-620295725,1,['Assert'],['Assertion']
Testability,"Hello Wally, do you know anyone has a TestCase config of HEAT_EQUATION_FVM? I have not found such one in the TestCases folder.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/783#issuecomment-526993716:38,Test,TestCase,38,https://su2code.github.io,https://github.com/su2code/SU2/issues/783#issuecomment-526993716,2,['Test'],"['TestCase', 'TestCases']"
Testability,"Hello all,. As a first step towards developing the pressure based system, I was looking at the Poisson solver currently in the code. Is there any active development going on in Poisson problem. From what I understand it was developed for electric potential problems. ; Is there some documentation or test case?. Cheers,; Akshay.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/429#issuecomment-345704308:300,test,test,300,https://su2code.github.io,https://github.com/su2code/SU2/issues/429#issuecomment-345704308,1,['test'],['test']
Testability,"Hello all,. My apologies for taking so much time to respond. As much as I would have liked to finish this part of the project nicely, I am afraid I must come to the conclusion that I have taken on too many responsibilities to finish the code andfinalize the pull request. I have attached a pptx to this comment that explains a little more about how the procedures work, the ""allow edits by maintainers"" box is checked. If you have any questions for me I will still be available to answer them, but I am not able to actively work on this anymore. The test cases should be available for @bigfooted, is it possible for you to place them where they are required?. As for the depth that was mentioned in an earlier comment of @TobiKattmann : the depth is an option that can be used as a stopping criterion. For every iteration without problems the recursion depth is increased. This way, it can be used as a measure for how close to the limit you are going to stop, as opposed to stopping after the maximum amount of iterations. [invalidGridPrevention.pptx](https://github.com/su2code/SU2/files/5728453/invalidGridPrevention.pptx)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1076#issuecomment-749404976:550,test,test,550,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-749404976,1,['test'],['test']
Testability,"Hello everybody:; I would like to have more informations about the correct usage of discrete Adjoint when the fluid domain contains two different zones.; I tried to run a discrete Adjoint simulation using the test case ""Axial_stage_2D"" (inside the turbomachinery sub-directory); the cfg file has been modified in order to allow the adjoint calculation, Hick-Henne bumps have been set on both surfaces of the blades but when I tried to run the simulation there have been several problems:; - firstly, SU2_DEF in stand-alone mode seems to disregard the second part of the mesh (the rotor);; - when I tried to apply a deformation just on the statoric part, the DEF module placed Hicks-Henne bumps on the surface but in positions which were incoherent with the ones specified into the configuration file.; - I used the Python script but even in that case, the effective bump position was different from the expected one.; - Using the Python script discrete_adjoint.py with nzones =2 (specified through the -z 2 flag), two different history-files (history_direct_0.dat, history_direct_1.dat) are sistematically generated by the CFD module (one for each zone) but when the next module (CFD_AD) is called, it tries to find a single history file named ""history_direct.dat"", which does not exist, and consequently displays an error and stops. A similar thing happens when running finite_difference.py. Is there a documentation that I can use to correctly set a multi-zone Adjoint? Does a similar note exist for the correct setting of bump placement?; Thanks a lot!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/630:209,test,test,209,https://su2code.github.io,https://github.com/su2code/SU2/issues/630,1,['test'],['test']
Testability,"Hello everyone,. I am starting to work on adding inlet file interpolation capabilities in SU2. I currently have a spanwise PT and TT distribution (r vs PT or TT) for an inlet boundary for a Stator (periodic, turbomachinery case). I want to carry out a spanwise interpolation at the inlet vertices. I can write a program to read an inlet file for a new format (r vs PT or TT). Then I want to 1D interpolate this data against the radii of all the vertices on the inlet face. The best way is to generate a **piecewise 1D interpolation function** that can return the value of the interpolated data at that radius. I have done this before in python using 'interp1D'. I have found the following library for C++ that does have this capability:. http://people.math.sc.edu/Burkardt/cpp_src/pwl_interp_1d/pwl_interp_1d.html. which will require _'The PWL_INTERP_1D test code needs the R8LIB and TEST_INTERP libraries._'. I hope these libraries will be integrated with SU2 without any issue. However, it would be better if I can use some of the built-in interpolation capabilities in SU2 like what I found in 'interpolation_structure.cpp'. I also look forward to extending this capability for 2D interpolation(that is, in r and theta). It would be very helpful if someone who has worked with interpolation before can point to a function that is capable of generating a piecewise interpolation function that could work for my case or can pitch in any idea related to this. Thanks!. @vdweide @clarkpede @economon @juanjosealonso @sravya91 @bmunguia @jayantmukho",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/791:854,test,test,854,https://su2code.github.io,https://github.com/su2code/SU2/issues/791,1,['test'],['test']
Testability,"Hello everyone,. I encountered an error in the writing of a CGNS file when no nodes are associated to a given rank. It usually happens when small grids are employed and the simulation is performed on more than one core. have uploaded at the following link the mesh and the config used to reproduce the error. https://polimi365-my.sharepoint.com/:f:/g/personal/10507725_polimi_it/Ekl88a3uOKhMu4uCLRy3tHIBNNo6_3oMTNiZq97NB6ztDw?e=Hu8pqe. Notice that, if only one heatflux marker is selected to print the results onto, then it does not work when 2 or more cores are used. On the other hand, if both of the heatflux markers are used then it works in parallel. To solve this issue I just added a check on the number of local points in the function CCGNSFileWriter::WriteField. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2178:1443,test,test,1443,https://su2code.github.io,https://github.com/su2code/SU2/pull/2178,1,['test'],['test']
Testability,"Hello everyone,. We are trying to use SU2-pyamg on the server. ; We followed the installation steps on SU2 website and did not face any compilation error. . Steps we followed:; 1. Download the file with git (""Install a custom version of SU2"" section in https://pyamg.saclay.inria.fr/pyamg.html); 2. cd SU2; 3. ./bootstrap; 4. ./configure --prefix=$HOME/SU2 --enable-mpi --with-cc=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicc --with-cxx=/opt/intel/compilers_and_libraries_2019.5.281/linux/mpi/intel64/bin/mpicxx CXXFLAGS=""-O3"" ; 5. make -j 8 ; 6. make install. Then we added the following lines to bashrc file:. export PYTHONPATH=""/usr/lib64/python2.7/site-packages""; export SU2_RUN=""$HOME/su2-installed/bin""; export SU2_HOME=""$HOME/SU2""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. We downloaded example file from pyamg website:; https://pyamg.saclay.inria.fr/pyamgexamples.html (Adaptive 3D ONERA M6 wing example). During running, we encountered the following error:. $HOME/su2-installed/bin/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 4 > out.txt &; [1] 166739; [user@host pyamg-su-test]$ Traceback (most recent call last):; File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/home/eduline/su2-installed/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/home/eduline/su2-installed/bin/SU2/run/amg.py"", line 212, in amg; pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); **UnboundLocalError: local variable 'pyamg' referenced before assignment**. Python version is 2.7.5 and we installed pyamg by running ""sudo pip install pyamg"". . Any help would be appreciated. Best regards,. Mirac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948:1139,test,test,1139,https://su2code.github.io,https://github.com/su2code/SU2/issues/948,1,['test'],['test']
Testability,"Hello everyone. I am working with SU2 on the feature_adap branch and have come across an issue during the execution of the mesh adaptation script. After following the standard installation procedure and verifying the installation (the exact same steps that @chesiv presented), I encountered a problem when running the mesh_adaptation_amg.py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:974,log,log,974,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809,1,['log'],['log']
Testability,Hello guys!. @ShiheJia Could you please elaborate why do you think it is a bug? Did you tested the code?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1462#issuecomment-988287976:88,test,tested,88,https://su2code.github.io,https://github.com/su2code/SU2/issues/1462#issuecomment-988287976,1,['test'],['tested']
Testability,"Hello guys, I have a proposal to make some numerical tests automatically compared with standard analytical results, requiring the deviation of specific physical variables to be in an allowable range. So that such numerical result bias error could be detected in time accurately after every time the numerical algorithm changes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735#issuecomment-514969680:53,test,tests,53,https://su2code.github.io,https://github.com/su2code/SU2/issues/735#issuecomment-514969680,1,['test'],['tests']
Testability,"Hello!. ## Proposed Changes; To continue current work being done on different transition models, I am working at the implementation of the eN model for low-turbulence external aerodynamics as proposed by James G. Goder and Mark D. Maughmer ([10.2514/1.J052905](https://arc.aiaa.org/doi/10.2514/1.J052905)). This model incorporates a new transport equation to describe the growth of the maximum Tollmien-Schlichting instability amplitude in the presence of a boundary layer.; ; ## Related Work; This work will be set-up in the same way as the LM model is in https://github.com/su2code/SU2/pull/1751 (which was also generally speaking how I had set up my own LM transition implementation) to make sure merging in a later stage will be easier. ## Roadmap; I am hoping to achieve a working implementation of the eN transition method. This work will be done as finishing part of my master thesis. We will have to see if I have time to completely finish the V&V phase due to time restrictions. I have already done quite some work on implementing and verifying the LM method on a private branch and results show mixed results, especially at higher Re numbers (mentioned also by Menter et all.). Thus the step is made to see how these LM results will compare to eN results. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1765:1823,test,test,1823,https://su2code.github.io,https://github.com/su2code/SU2/pull/1765,1,['test'],['test']
Testability,"Hello!. I am new to SU2 and I'm having trouble running the incompressible turbulent RANS NACA0012 test case on SU2 in Windows.; I have downloaded the binary excecutables SU2 v7.3.0 and my simulation seems to stop after 250 iterations with the error:. _Error in""bool CFileWriter::OpenMPIFile(std::__cxx11::string)"":; Unable to open file restart_flow.dat_. At first I thought that perhaps my MPI I/O was causing this error to occur, however this error also appears when I run the case in serial.; I have had a look at the SU2 documentation and on this forum and so far I haven't been able to find a similar error happening for anyone else. I am not sure how to go about fixing this issue so any help is appreciated. I have attatched the configuration file and screenshots from Windows Powershell to this post and the mesh I am using is n0012_897-257.su2.; Let me know if I need to clarify any further details. Thank you!. **Desktop (please complete the following information):**; - OS: Windows 10.0.19043; - C++ compiler and version: g++ MinGW-W64 8.1.0; - MPI implementation and version: Microsoft MPI v10.1.2 ; - SU2 Version: v 7.3.0 'Blackbird'; [turb_NACA0012_sa.txt](https://github.com/su2code/SU2/files/8005251/turb_NACA0012_sa.txt); ![SU2_error_1](https://user-images.githubusercontent.com/99037921/152580001-7c7670fd-b5ca-4667-a4f5-16350cb67378.png); ![SU2_error_2](https://user-images.githubusercontent.com/99037921/152580035-fe0d1954-2044-4767-a4f8-47effb1d1082.png); ![SU2_error_3](https://user-images.githubusercontent.com/99037921/152580030-60da648d-4d96-451c-8449-e17b4a04e01d.png); ![SU2_error_4](https://user-images.githubusercontent.com/99037921/152580021-abb070b1-9d94-4649-a265-c9ad35a678d3.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1537:98,test,test,98,https://su2code.github.io,https://github.com/su2code/SU2/issues/1537,1,['test'],['test']
Testability,"Hello!. Last week I ran a optimizing case, this time I optimized the efficiency of an airfoil (2D). ; According to @hlkline , the Python scripts automatically recognize the kind of objective and automatically distinguished the objectives which have to be minimized from the ones which have to be maximized. There is no need to scale the objective function by a negative symbol to change the optimizer from a minimum to maximum case, this is all done by the Python scripts, right?; However in my case the objective function values are all negative in the log.txt file, but not in the history file. Furthermore after 18 NIT, the optimizer stops and says that an positive directional derivative for line-search is found. Which should because otherwise the efficiency won't increase. Can you guys have a look at the log and history file, because I don't think the optimizer gives a right output (the FC of the log.txt and of the history file do not agree, it goes wrong between FC 56 and FC 67). ; I appreciate your help!. Kind regards,. Floris . [history_project.txt](https://github.com/su2code/SU2/files/1018645/history_project.txt); [log.txt](https://github.com/su2code/SU2/files/1018647/log.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/395:554,log,log,554,https://su2code.github.io,https://github.com/su2code/SU2/issues/395,5,['log'],['log']
Testability,"Hello, . We are attempting to provide compilation instructions for one of our users who wishes to use SU2 on our HPC clusters. We use spack to provide library access, including to openmpi. When we use meson and ninja, we run into a linker error: /opt/spack/opt/spack/linux-centos7-nehalem/intel-19.0.3/zlib-1.2.11-zjmi5fwzodf5iizukl7aptz2eexrcblo/lib: file not recognized: Is a directory. The path is provided by pkg-config and the spack provided .pc file. We don't see any errors in the zlib .pc and that package is used frequently in other compilations. As a workaround, we used the version 6 installation procedure on the version 7 source. This produced runnable binaries. Could you let me know if this will fail to produce binaries that meson and ninja would have?. qsub -I -q debug -l nodes=1:ppn=8; on the compute node:; cd into the SU2 git repo then,; module load python-3.7.2-intel-19.0.1-zj5ljxy ; module load openmpi-3.1.5-gcc-9.3.0-cc2bj5i # for gcc mpi compilers.; ./configure --prefix=<install destination> --enable-mpi --with-cc=$(which mpicc) --with-cxx=$(which mpicxx); make -j 8 # compile the code using all 8 cores; make install # copy the binaries to the installation destination; Then, assuming the input file is in the same directory as the SU2_CFD executable I ran it on 8 cores with mpirun:; mpirun -np 8 $PWD/SU2_CFD lam_cylinder.cfg . I got what looked like reasonable output but is are there unit tests I can run to test the installation. Thanks very much for any guidance you can offer. . Matthew",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1037:1423,test,tests,1423,https://su2code.github.io,https://github.com/su2code/SU2/issues/1037,2,['test'],"['test', 'tests']"
Testability,"Hello, I am no expert on this but I guess it might not take any work. See https://www.cfd-online.com/Forums/su2/229392-high-temperature-flow.html and links therein, and TestCases/nicf/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1065#issuecomment-670842197:169,Test,TestCases,169,https://su2code.github.io,https://github.com/su2code/SU2/issues/1065#issuecomment-670842197,1,['Test'],['TestCases']
Testability,"Hello, I meet a problem:meson test failed about su2@master on canetos8_aarch64.; ```console; [root@bigdata spack-build]# ls; Common SU2_CFD SU2_DEF SU2_DOT SU2_GEO SU2_PY SU2_SOL UnitTests build.ninja compile_commands.json externals meson-info meson-logs meson-private; [root@bigdata spack-build]# meson test; ninja: Entering directory `/home/stage/root/spack-stage-su2-master-6pqdoqje4yuyseje7lkxnucdij7l5njz/spack-src/spack-build'; ninja: no work to do.; 1/1 Catch2 test driver FAIL 0.01s exit status 1; >>> MALLOC_PERTURB_=206 /home/stage/root/spack-stage-su2-master-6pqdoqje4yuyseje7lkxnucdij7l5njz/spack-src/spack-build/UnitTests/test_driver. Ok: 0; Expected Fail: 0; Fail: 1; Unexpected Pass: 0; Skipped: 0; Timeout: 0. Full log written to /home/stage/root/spack-stage-su2-master-6pqdoqje4yuyseje7lkxnucdij7l5njz/spack-src/spack-build/meson-logs/testlog.txt; ```; testlog details:; [testlog.txt](https://github.com/su2code/SU2/files/10323737/testlog.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1859:30,test,test,30,https://su2code.github.io,https://github.com/su2code/SU2/issues/1859,10,"['log', 'test']","['log', 'logs', 'test', 'testlog']"
Testability,"Hello, thank you for posting the patch. I did an initial test yesterday (replaced CParallelFileWriter with this version, and re-compiled (./ninja build install)) and it got hung for >12 hrs on jacobian initialization. I am presently restarting the systems to ensure nothing else is interacting with SU2 prior to attempting the run again. I will let you know how it goes on today's run.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1342#issuecomment-891801906:57,test,test,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342#issuecomment-891801906,1,['test'],['test']
Testability,"Hello,. I have a hyperthreaded 6-core machine (12 processors available) but I have the following issue when I try to specify `parallel_computation.py -n 12`. ; ```; tjim@t3500:/opt/su2/SU2/TestCases/rans/oneram6$ parallel_computation.py -n 12 -f turb_ONERAM6.cfg ; Traceback (most recent call last):; File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 116, in <module>; main(); File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 67, in main; options.compute ); File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 94, in parallel_computation; info = SU2.run.CFD(config) ; File ""/opt/su2/SU2v6.0.0/bin/SU2/run/interface.py"", line 122, in CFD; run_command( the_Command ); File ""/opt/su2/SU2v6.0.0/bin/SU2/run/interface.py"", line 302, in run_command; raise exception(message); SU2.EvaluationFailure: Path = /opt/su2/SU2/TestCases/rans/oneram6/,; Command = mpirun -n 12 /opt/su2/SU2v6.0.0/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '1'; --------------------------------------------------------------------------; There are not enough slots available in the system to satisfy the 12 slots; that were requested by the application:; /opt/su2/SU2v6.0.0/bin/SU2_CFD. Either request fewer slots for your application, or make more slots available; for use.; --------------------------------------------------------------------------; ```; It works if `-n 6` is used instead but then only half of the availalbe processes are being used. I'm not sure if this is a bug with parallel_computation.py (or just a ""feature"" which has not yet been implemented) but using SU2 6.0.0, not all my processing threads can be used when using OpenMPI 3.0.0. I think this is due to the fact that it's not possible to pass `--use-hwthread-cpus` to `mpirun` as is mentioned on the StackOverflow page, [here](https://stackoverflow.com/questions/48835603/unable-to-use-all-cores-with-mpirun). As a workaround, have tried; `tjim@t3500:/opt/su2/SU2/TestCases/rans/oneram6$ mpirun --use-hwthread-cpus",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/526:189,Test,TestCases,189,https://su2code.github.io,https://github.com/su2code/SU2/issues/526,2,['Test'],['TestCases']
Testability,"Hello,. I have been debugging the differences between the two versions. I found 5 differences that lead to slightly different results. Two of them have been verified to be an improvement of physical modelling. The other 3 I am still trying to figure out. Could you please run the same tests with MUSCL_FLOW=NO and see if you're still facing this issue?. I see that the MUSCL reconstruction is one of the 3 things that have been modified and not sure if could be the cause of the problem or not. I will keep working on understanding the impact of the other 2 things. When you do this - could you please save the simulation output log of both versions and send those back to me too (in this way I'll have a better feeling of what is happening to the residuals throughout the simulation)? We can just focus on the invbb case to make it simpler.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2026#issuecomment-1562975684:285,test,tests,285,https://su2code.github.io,https://github.com/su2code/SU2/issues/2026#issuecomment-1562975684,2,"['log', 'test']","['log', 'tests']"
Testability,"Hello,. I have been using SU2 NEMO to run cases for steady, inviscid, hypersonic flow around blunt objects. Previously I have been able to successfully run cases using SU2 version 7.1.1. However, I have been running into residual stalling with the newer versions (7.4.1 and 7.5.1). Recently, I tried two different meshes which worked for me before (TestCases/euler/bluntbody/blunt_91.su2 and a RAM C-II mesh I previously used). I also tried updating the confguration file to match selections in TestCases/nonequilibrium/invwedge_ausm.cfg but I still face this issue. I have attached the relevant files here. Please let me know if this is a solver issue or if I need to change any selections in the configuration file. ; [residual_stalling.zip](https://github.com/su2code/SU2/files/11425983/residual_stalling.zip)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2026:349,Test,TestCases,349,https://su2code.github.io,https://github.com/su2code/SU2/issues/2026,2,['Test'],['TestCases']
Testability,"Hello,. I just tried to run the sliding_interface/channel_2D case, which has 3 zones (0,1,2) in the grid file. The configuration file I used is same as in TestCase, and the only thing I changed is the OUTPUT_FORMAT set to TECPLOT format. The solution output file for zone 1 is not corrected, and a lot of terms in flow_1_*.dat file are 2.502053e-316. Anyone has idea about this issue?. Thanks!. ![bug](https://user-images.githubusercontent.com/20882368/27462920-abbe023e-57f6-11e7-9842-b15b864d79d8.png); ![bug1](https://user-images.githubusercontent.com/20882368/27462924-affcbde0-57f6-11e7-8fa5-8400a5ba6f40.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/402:155,Test,TestCase,155,https://su2code.github.io,https://github.com/su2code/SU2/issues/402,1,['Test'],['TestCase']
Testability,"Hello,. I'm pretty new to python and, in general, to the logic of parallel computation. ; I'm trying to run in **parallel** the routine fsi_computation.py. Even if (as much as I noticed) the parallel computation feature is already built in the structure of the code I'm not able to do it. Moreover, I find the structure of the routine sensitively different than the one of parallel_computation.py in which, for example, I can actually choose the number of processor I can use for the run. Dose anybody know if the feature is actually implemented in fsi_computation.py and, in case, how to set it?. Thanks!. NB: I'm currently using the version of the code provided in the branch **feature_pyWrapper** which, as it was already told me, is the up-to-date version for the the python tools.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/457:57,log,logic,57,https://su2code.github.io,https://github.com/su2code/SU2/issues/457,1,['log'],['logic']
Testability,"Hello,. So, to clarify, there were two issues:. 1) With the old commit (382e82f), we were seeing the assertion failure at line 1881 of numerics_structure.cpp, but only with the very large mesh (180 million cells). 2) With the newer commit (c093a62), we were seeing the assertion failure at line 294 of C2DContainer.hpp, which was occurring even with smaller meshes (7 million cells). The solution to (2) appears to be to change `geometry->node[iPoint]->GetnNeighbor()` to `geometry->node[iPoint]->GetnPoint()` at line 3759 of CEulerSolver.cpp, in the `CEulerSolver::SetUpwind_Ducros_Sensor()` method. I made this change locally, and attempted to run on our large mesh. Issue (2) seems to be fixed, but we still run into issue (1). I have now gone through the read restart routines, and have found a potential issue:. For reference, the restart file for our large mesh with averaging data included consists of:; 39 fields * 75,107,967 points = 2,929,210,713 variable values (which is larger than `INT_MAX`). Beginning at line 3931 of CSolver.cpp, in method `CSolver::Read_SU2_Restart_Binary(...)`, we have the following:. ```; int *blocklen = new int[geometry->GetnPointDomain()];; int *displace = new int[geometry->GetnPointDomain()];; int counter = 0;; for (iPoint_Global = 0; iPoint_Global < geometry->GetGlobal_nPointDomain(); iPoint_Global++ ) {; if (geometry->GetGlobal_to_Local_Point(iPoint_Global) > -1) {; blocklen[counter] = nFields;; displace[counter] = iPoint_Global*nFields;; counter++;; }; }; MPI_Type_indexed(geometry->GetnPointDomain(), blocklen, displace, MPI_DOUBLE, &filetype);; ```; The problem here is that for our case, where `iPoint_Global` can get up to 75,107,967 and `nFields` = 39, the value assigned to `displace[counter]` in the loop can over-run `INT_MAX`. This would result in potential garbage / incorrect displace values being passed to `MPI_Type_indexed(...)`. Unfortunately, simply changing `displace` to a `long int *` won't work, as the expected argument type for `",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/949#issuecomment-622026420:101,assert,assertion,101,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-622026420,2,['assert'],['assertion']
Testability,"Hello,; Sorry for a very very late comment, but if I did not get it wrong, it seems like the turbulence intensity value specified in the config file is now multiplied by 100 in the turb_sources.cpp at line 143 after this commit. . Generally, the users tend to use the percent value (because nearly every paper on the subject talk in percentages) for turbulence intensitirs, so for example, if the experimental conditions say 3% for the turbulence intensity, the option in the config file should be 3.0. But now with this 100* modification, the users must enter 0.03, is that correct? . If it is correct, then transition test case/tutorial config files should be updated as well. Because the transition onset correlations (Menter or Abu-Ghannam) uses the percent value. . All in all, however, I suggest that we should remove the factor of 100, so the value in the config file is in percentages directly, as it was before. . Regards,; Samet",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1267#issuecomment-971340179:620,test,test,620,https://su2code.github.io,https://github.com/su2code/SU2/pull/1267#issuecomment-971340179,1,['test'],['test']
Testability,"Hello. Can you add a test case about AUSMPLUSUP or AUSMPLUSUP2? I installed SU2 6.2.0 and used it to simulate two-dimensional lid-driven cavity flow. When I set 'CONV_NUM_METHOD_FOLW' to be 'AUSMPLUSUP' or 'AUSMPLUSUP2', it shows 'Error in ''void CSoLver::SetResidual_RMS(CGeometry*, CConfig*):' and 'MPI_ABORT was invoked on rank 0 in communicator MPI_COMM_WORLD'. But when I set it to be other schemes like AUSM, ROE or so, it runs. Maybe if there is a test case, I can find where is my mistake. Thank you.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/628#issuecomment-522633022:21,test,test,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/628#issuecomment-522633022,2,['test'],['test']
Testability,"Hello. I have been trying to work with test case ""Caradonna_tung"". I have obtained the latest config file and mesh file i believe. Hovewer, when i run the solver, it gives value ""zero"" for everything and seemingly converged after only 10 iterations. I believe i could not initialize the solver. Can anyone help me with it ? Thank you. [caradonna_tung.zip](https://github.com/su2code/SU2/files/4664054/caradonna_tung.zip)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/997:39,test,test,39,https://su2code.github.io,https://github.com/su2code/SU2/issues/997,1,['test'],['test']
Testability,"Hello.; After installing latest version 7.0.5 SU2, test case,rotating_caradonna_tung, giving me vtu output files. I cant open it in tecplot or paraview. How can i change the output format ?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1033:51,test,test,51,https://su2code.github.io,https://github.com/su2code/SU2/issues/1033,1,['test'],['test']
Testability,"Hello; I'm so glad to see that the su2 meeting has been so productive!; To address Eran's concern, maybe it would be more reasonable to run v&v on; major releases only, aka 7.0 but not 7.1, and I agree that keeping a record; of the most recent version checked is a good idea-and as necessary minor; releases could be tested, as suggested by individual developers. The regression tests should ensure that the v&v results will be unlikely to; be changed. One thing we can do to reduce that risk further would be to; introduce regression tests that compare solution files rather than the; terminal output alone. I can take a stab at that if there's no other; volunteers- probably only needs to be a couple of critical tests, the file; diff may be slightly more expensive than currently, but given the increase; in test precision and detail I think it would be worth it. H. On Thu, Sep 20, 2018, 1:46 PM erangit <notifications@github.com> wrote:. > Hi All; > I’m a bit worried about the logistics related to checking this v&v data; > base for every new release.; > Unlike the tutorials, these cases, by their nature will be large and will; > require long integrations(the 2D cases might not fall on this category).; > This means also that significant computational resources will be required; > for this evaluation (about twice a year for a growing list of cases). Is it; > practical?; > The only way that I think that it might work is that each contributor will; > be responsible for checking the casesthat he has introduced, before each; > release. Being a voluntary institution, this can not be enforced (and we do; > not want to enforce). How about trying to be less demanding:; > In each validation case there will be a statement about the last version; > that it was checked with and the responsible contributor. Each contributor; > will receive a recommendation to check his cases before a new release, and; > will be able to do that and update the OK label also after the release.; > Less waterpro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423283690:317,test,tested,317,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423283690,6,"['log', 'test']","['logistics', 'test', 'tested', 'tests']"
Testability,"Here a fluid-only case that somewhat quickly converges. Contains the mesh, 1 cfg for primal and adjoint and a little bash-script where the path to the SU2 binaries has to be adapted to fit your system. The idea was to first run primal and adjoint with vanilla develop and then the same with the new code. I left the log-files of my run in there as well for a quick look . If there is something else I can do let me know. . [new-per-bc-test.tar.gz](https://github.com/su2code/SU2/files/8408958/new-per-bc-test.tar.gz)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1585#issuecomment-1087404188:316,log,log-files,316,https://su2code.github.io,https://github.com/su2code/SU2/pull/1585#issuecomment-1087404188,3,"['log', 'test']","['log-files', 'test']"
Testability,Here is a smaller [testcase](https://drive.google.com/open?id=1FK8ijEEh8vbtKEeoqX7Qd0h_yj3U6m7a). It is an existing SU2 test case converted while adding MIXED elements.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-515786563:19,test,testcase,19,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-515786563,2,['test'],"['test', 'testcase']"
Testability,"Here is the patch from the develop branch. As I stated before, this adds the 'increment-progress' logic to the vertex export process; this causes the sub-progress bar to shows the progress of the vertex export for a more accurate experience. Thanks again,. Ethan Alan",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/72#issuecomment-56592650:98,log,logic,98,https://su2code.github.io,https://github.com/su2code/SU2/pull/72#issuecomment-56592650,1,['log'],['logic']
Testability,"Here's a follow-up pull request for fixing some lingering memory problems in SU2 v6.0.0. This is the same as PR #507, except I fixed the problem that was making the regression tests fail. For redundancy, I'll repeat a little of PR #507. Here's a summary of the changes in this PR: . + Sets default for `ilu_fill_in` to 0 to prevent uninitialized value bugs on destruction of `CSysMatrix`; + Adds deallocation of some turbomachinery variables; + Adds NULL initialization and deallocation of some of the new markers. There's also a few other memory issues in v6.0.0 I haven't fixed:. + `RefOriginMoment_X`, `_Y`, and `_Z` can be zero-length arrays in corner cases, and yet the program still tries to read from them.; + `Periodic_Center`, `Periodic_Rotation`, and `Periodic_Translate` are sometimes leaked at the end of the program.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/510:176,test,tests,176,https://su2code.github.io,https://github.com/su2code/SU2/pull/510,1,['test'],['tests']
Testability,"Here's the crash info for the build with debug flags. No difference with/out the wrapper.; [QuickStartLog_Debug.txt](https://github.com/su2code/SU2/files/4583003/QuickStartLog_Debug.txt); I'm currently testing on the QuickStart case. I have 2 different types of machines which exhibit the same behavior. They are both using mellanox interconnects using their hpcx package and openmpi 4.0.2 (another system without mellanox but with openmpi 4.0.2 works fine; though that's also on Cent7 instead of Cent8). For the two types of systems with issues, one set is running with Intel Golds and 92GB/node and the other set is running on AMD EPYCs with 256GB/node. Interesting point; I can check with the OpenMPI folks on what might cause an external library (mellanox libraries) to cause file opening to fail.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-624242391:202,test,testing,202,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-624242391,1,['test'],['testing']
Testability,"Hey @EduardoMolina ,; Yes, I guess it would be good if you can test if this actually fixes your validation Testcase. Maybe also adding the case as regression/validation case could be an idea as there is currently none to my knowledge. ; MfG, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-515225353:63,test,test,63,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-515225353,2,"['Test', 'test']","['Testcase', 'test']"
Testability,"Hey @maxaehle , if you don't want to make further changes you can hit the merge if you like, once the tests pass.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1240#issuecomment-810867952:102,test,tests,102,https://su2code.github.io,https://github.com/su2code/SU2/pull/1240#issuecomment-810867952,1,['test'],['tests']
Testability,"Hey @pcarruscag . > What about running the solution you propose only on subfolders. Sure, I would be ok with that. If everyone agrees on this, then it is better to do it in steps than not. And of course If there is good evidence that it messes up peoples merges than we better not do it. > your second command replaces tabs by 4 spaces not 2. oh right, I need to check whether I ran the command with 2 spaces and copied the 4 spaces command over from stack overflow. I changed the command for now. Hmmm...looking at the commit I am rather certain that it is 1tab=2spaces in the commit I did. > I still don't think changing 50k lines in one PR is a good practice. Me neither. It also kindof makes `git blame ` harder to use on those lines. If someone has a nicer way then I am keen to hear that. @economon ; > good to put it into a script like externals/fix_line_endings.sh [...] I think you guys were going to run some tests on branches. I will prepare both over the weekend and commit/report :). Cheers all, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/808#issuecomment-551070233:919,test,tests,919,https://su2code.github.io,https://github.com/su2code/SU2/pull/808#issuecomment-551070233,1,['test'],['tests']
Testability,"Hey @sun5k, I fell in the same trap I am afraid, as I should have replied sooner... As for the work: I started to work on a private version so that I could experiment with the code and Github, because I was not experienced with both. In there I, too, based the implementation of the LM version on the old version of the LM transition of SU2 6.3.0. My original plan was to work on my private version until I understood enough to open a Pull request and continue from there, but you were just a little faster :). So that is why I just continued with my own version. I am now at the point of running tests to compare with the original flatplate simulations. I am getting some promising results, but am still checking whether they are correct. What is your status? Are you still working on this pr? And, if I may ask, what is your main goal with the code? Do you want to use the transition model or are you more focused on the implementation and merging with the main SU2 branch? And lastly, would it be beneficial for us to combine our time, code and results to work on this pr together? :). Thanks in advance!; Richard",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1496#issuecomment-1083251414:597,test,tests,597,https://su2code.github.io,https://github.com/su2code/SU2/pull/1496#issuecomment-1083251414,1,['test'],['tests']
Testability,"Hey Guys,. I fixed the Riemann BC to work also with grid movement and updated the entropy fix of the GeneralRoe scheme. The testcases failing are only the ones in the folder nicf (as expected). After the merge i will update the value of the regression tests!. cheers!!!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/184:124,test,testcases,124,https://su2code.github.io,https://github.com/su2code/SU2/pull/184,2,['test'],"['testcases', 'tests']"
Testability,"Hey Pedro, . we already chatted about this during the meeting. Thanks a lot for fixing the issue I mentioned above. . I gave it a shot to the test cases that I have locally and I also saw the same as you, this (very minor) discrepancies with the previous version, but as we spoke it totally looks like they are just numerics. . I have tested a case with FSI, where any major issue would show up and errors in the physics would rapidly accumulate, and instead the difference remains stable at the same order of magnitude (around the 6th significant figure) so in practice negligible. I'm approving the PR and, if there is no further comments, I will be merging it in next week. Thanks again!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/571#issuecomment-423573353:142,test,test,142,https://su2code.github.io,https://github.com/su2code/SU2/pull/571#issuecomment-423573353,2,['test'],"['test', 'tested']"
Testability,"Hey Rocco,. > And both versions are/were on the develop branches -> what exactly do you refer to here: config-files, code, mesh. The code tags 6.0.1 and 6.2.0 refer to specific master-commits of the code. So I want to know what is exactly of the develop branch, can't be the code if you understand the tags as I do. Maybe you refer to the develop code at the time where these tags were introduced. But maybe sth different. > I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings. That is good to hear. ; Luckily @cvencro (Thanks for that 👍 ) ran some tests and found that #740 (which rewrites Euler Wall boundaries for compressible and incompressible flows ... which was me btw) introduces the changes you see. The Euler wall for compressible is changed a bit in the way the boundary condition is enforced. Upon convergence both version should recover (close to) the same value. If the results in a steady state are the same/very-similar and if an unsteady simulation at low enough Reynolds-number converges to the same steady result (or oscillate in the same bounds) -> I would say it is simply some purely numerical effect based on the unphysical initialization and different treatment of the euler wall boundary. . 1 thing one could test additionally is to force a very high convergence in each physical timestep, i.e. usually one converges ~3 orders of magnitude in each ts -> now try converging until residual stalling in each ts. If the code versions get the same/closer results in the temporal evolution my euler wall boundary explanation would be quite reasonable.; Together with the long running unsteady simulation proposed above, I would feel more comfortable to judge. @cvencro (bringing the conversation to this place 😉 ) concerning the pitching case: the `if (dynamic_grid)` statements in the 'old' version are not necessary as that is handle",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-562621057:696,test,tests,696,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-562621057,1,['test'],['tests']
Testability,"Hey Sun5k! . I am a master student on the University of Twente, based in the Netherlands. I am also starting to work on the implementation of the Langtry and Menter model into the current version of SU2 for my master thesis (although I have not set-up my own branch yet). The goal would be to validate and hopefully work on some application to test and verify the results compared to other work done in literature and the latest AIAA transition modeling workshop (https://transitionmodeling.larc.nasa.gov/workshop_i/). . I would love to know what your plans are with this model and on what timeframe you are working. As we are both working on this topic, it might be beneficial to combine our efforts? If you would like to discuss this, you can send me an email at r.roos@student.utwente.nl. Kind regards,; Richard",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1496#issuecomment-1016550498:344,test,test,344,https://su2code.github.io,https://github.com/su2code/SU2/pull/1496#issuecomment-1016550498,1,['test'],['test']
Testability,"Hey Thomas,; I merged with the develop branch. Now there are not conflicts. But in the parallel regression test the first testcase the contadj_oneram6 failed. Do you think that it´s something related with the feature_MRF?. cheers!!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/186#issuecomment-126657899:107,test,test,107,https://su2code.github.io,https://github.com/su2code/SU2/pull/186#issuecomment-126657899,2,['test'],"['test', 'testcase']"
Testability,"Hey Tobi, I have tried and succeeded in testing the HEAT_EQUATION_FVM example. One more thing to mention, to run the configSolide.cfg alone, another line needs to be edited. . ```; %EXTRA_HEAT_ZONE_OUTPUT = 2-->; EXTRA_HEAT_ZONE_OUTPUT = 1; ```. And one can directly delete all things concerning iZone=1 in the mesh file and rename iZone=2 to be iZone=1. ![2019-09-04 15-56-09 的屏幕截图](https://user-images.githubusercontent.com/33152225/64236361-d163cc80-cf2c-11e9-9971-2d4e2c01955c.png). Except for that, is anyone familiar with the error: SU2 diverge? Every time when I want to add unsteady options to make an animation, the error tells me the solution diverges. ```; ------------------------------ Begin Solver -----------------------------. Error in ""void CSysSolve::ModGramSchmidt(int, std::vector<std::vector<double> >&, std::vector<CSysVector>&)"": ; -------------------------------------------------------------------------; SU2 has diverged.; ------------------------------ Error Exit -------------------------------; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/783#issuecomment-527789690:40,test,testing,40,https://su2code.github.io,https://github.com/su2code/SU2/issues/783#issuecomment-527789690,1,['test'],['testing']
Testability,"Hey Tom (@economon) the compilation issue has been solved. Regression test went well. I am waiting for the merge to the develop, so that I can open the branch feature_turboSU2 as discussed yesterday, and add also regression test for the new testcases in the folder turbomachinery. cheers. sv",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/207#issuecomment-152250702:70,test,test,70,https://su2code.github.io,https://github.com/su2code/SU2/pull/207#issuecomment-152250702,3,['test'],"['test', 'testcases']"
Testability,"Hey Tom, thanks for making these changes! This is an important improvement. . However, I just tested it with an unsteady incompressible case. When I try to convert the solutions with SU2_SOL the size of the tecplot files increases in every time step and there are a lot of NaN in the files. I'll see if I can get more information ...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/379#issuecomment-282712262:94,test,tested,94,https://su2code.github.io,https://github.com/su2code/SU2/pull/379#issuecomment-282712262,1,['test'],['tested']
Testability,"Hey Tom,. this was fast ! Thanks for the first step in making the output structure more efficient and flexible. So far it looks good. I'll test it for the adjoint soon. @LaSerpe I think for the beginning these things will be hard-coded. But defining this in the config file is definitely a feature we should discuss.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/328#issuecomment-259400331:139,test,test,139,https://su2code.github.io,https://github.com/su2code/SU2/pull/328#issuecomment-259400331,1,['test'],['test']
Testability,"Hey everyone! Just posting the results from one of the NASA TMR verification test cases I have been running: [the DSMA661](https://turbmodels.larc.nasa.gov/airfoilwakeverif500c.html). Using Least Squares (LSQ) for the gradient reconstruction does affect the results and can be seen from this force convergence plot. Using the same gradient reconstruction (GG) gives more accurate results. The two SU2 runs were done using identical linear solver parameters. The only difference is that for the GG+LSQ case, I specified : `NUM_METHOD_GRAD_RECON= LEAST_SQUARES` and for the GG case, I had to reduce the max CFL down to ~20 for it to get stable. . ![cfl_adap_force_convergence_dsma661_SA](https://user-images.githubusercontent.com/30271435/68785755-7ec12380-05f3-11ea-89e3-4b93edeb9d64.png). But due to the much lower maximum CFL, the GG run takes 40-50x longer to reach the same level of convergence. I'm not sure what else can be done to make adaptive CFL better for the GG or WLSQ cases.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-553494652:77,test,test,77,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-553494652,1,['test'],['test']
Testability,"Hey everyone, . We (@bmunguia and I) ran the discrete adjoint on the ONERAM6 wing mesh with ~500, 000 elements and noticed the following memory usage:. MG_LEVEL | DIRECT | DISCRETE_ADJOINT; -| ------------ | -------------; 0| 1.3GB | 16GB; 2| 1.5GB | 33GB. Is this increase in memory consumption expected? . I ran the computation on the develop branch. The mesh is in TestCases/cont_adj_rans/oneram6/ . Cheers, ; Jayant",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/594:368,Test,TestCases,368,https://su2code.github.io,https://github.com/su2code/SU2/issues/594,1,['Test'],['TestCases']
Testability,"Hey guys... I just want to clarify, as there seems to be three issues being discussed:. Issue 1) SOLVED - This was related to a crash in the the `CEulerSolver::SetUpwind_Ducros_Sensor()` - This can be fixed by changing a call from GetnNeighbor() to GetnPoints() (see my comments on April 30). I don't believe this ended up being related to the overrun in the restart file (Issue 2). Issue 2) SOLVED - This was a crash when starting with very large meshes, caused by an integer overrun in `CSolver::Read_SU2_Restart_Binary()`. This issue is solved by converting the displacement variable to MPI_Aint and using `MPI_Type_create_hindexed()`, instead of `MPI_Type_indexed()`. Issue 3) This is another issue I've been seeing with large simulations: the paraview .vtu files output by SU2 are unable to be read in by Paraview. The error in Paraview is . ""ERROR: In /local/paraview/VTK/IO/XML/vtkXMLDataReader.cxx, line 400; vtkXMLUnstructuredGridReader (0x55b6b838a330): Cannot read point data array ""Density"" from PointData in piece 0. The data array in the element may be too short."". This is the error Edwin is referring to today. I am changing the type of totalByteSize to a long, and will test to see if that solves the issue. Note that the solution to Issues 1 and 2 are *not* yet in the develop branch. I will create a pull request (should be by end of the day today) when I have verified that the solutions work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/949#issuecomment-625381735:1187,test,test,1187,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-625381735,1,['test'],['test']
Testability,"Hey, . As Tom suggested in #997 I reran the pitching NACA64A010 (already shown above by @cvencro) with the branch `fix_gridvel`. Below CM over AOA which includes a version run with Toms fix which recovers the results given by the old Euler Wall (blue and green curve match) :+1: For comparison I also snipped and added the image from above. . Note that the `+Roe ` in the legend of my image refers to `conv_bound_term` which is the convective scheme used on boundaries (I tried other possiblities that's why I added that `+Roe`). In unmodified code that is always Roe (for compressible flow) as it is hardcoded. . ![CM_over_Aoa](https://user-images.githubusercontent.com/31306376/82845493-22658780-9ee5-11ea-9cdc-0ec4eee7a939.png); ![Cvencro_CMoverAOA828](https://user-images.githubusercontent.com/31306376/82845653-a750a100-9ee5-11ea-8a7b-8610748b6a48.png). I am confident that this also recovers the results that @RoccoBombardieri expects from his case. Can you rerun the case maybe with the `fix_gridvel` branch, or just adding the few changed lines in CEulerSolver.cpp? If that solves this issues I would be more than happy to take of that fix getting merged. . I will also rerun my latest test tomorrow.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-633731665:1194,test,test,1194,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-633731665,1,['test'],['test']
Testability,"Hey, ; I recall that @talbring disabled the automatic travis triggering of feature branches (if specified in .travis.yml) together with enabling the Draft PR's. Unfortunately i can't find the issue or PR where this was mentioned anymore. . Is it wanted to open Draft PR's if one wants travis testing? If yes, then there should be a lot more Draft PR's right. My problem currently is that I can click `Restart build` in travis on my feature branch but it actually does a checkout on the old commit sha1 sum [Link to travis job](https://travis-ci.org/su2code/SU2/builds/556792412). Is there a way to trigger the builds automatically with the freshest commit like before without a Draft PR?. Thanks for clarification, Tobi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/748:292,test,testing,292,https://su2code.github.io,https://github.com/su2code/SU2/issues/748,1,['test'],['testing']
Testability,"Hey,. @cvencro and I were discussing this issue quite a bit this morning and here an attempt of a summary:. We are looking at the following cases:; 1. 3D Onera m6, compressible euler, including euler_wall and sym_plane ; a. steady state; b. unsteady (no pitching, deforming); 2. 2D NACA64A010, compressible euler, including euler_wall; a. unsteady (no pitching/ deformation); b. pitching (with rigid and with deforming mesh -> used for the gradient validation of @cvencro 's post ). We are rather certain that the differences between the code-versions are due to the new euler_wall boundary which was introduced in #740 (by me :) ). @cvencro did a test where the old euler_wall was simply pasted into the newer function body (which currently directly calls the sym_plane boundary) -> that recovered the results obtained with the 'older' version. The steady state results (onera m6) show that both codes deliver the same results (of course with some minor differences). So far so good. Unsteady cases are a bit trickier: the latest 2D results of @RoccoBombardieri show pretty much no difference including the first timesteps. The onera m6 case in contrast converges to the same (steady-state) results for both code version eventually but their initial transient phase differs quite significantly. . A possible explanation for the different initial transient phase: In both implementations a ""reflected state"" is constructed where the normal component of the velocity is subtracted [once in the older code version & twice in the newer version]. I.e. subtracting the normal component of velocity twice means mirroring the velocity along the symmetry plane. The newer code version is a bit ""stronger"" in enforcing the boundary conditions which could lead to the reduced oscillation in CD and CL. If we agree that both code versions produce physically correct results for steady cases and unsteady cases that were integrated long enough in time to get rid of the influence of the initial condition ... then",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-563314747:648,test,test,648,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563314747,1,['test'],['test']
Testability,"Hey,. Yeah you're right, RegisterVariables was being called for ADJFLOW_SOL. Changing it so that it calls for ADJTURB_SOL throws a seg error (haven't investigated why yet). However, if I keep the RegisterVariables as is (for ADJFLOW_SOL) and instead I change the solver instance inside CDiscAdjFluidIteration::SetDependencies to solver_container[iZone][iInst][MESH_0][ADJFLOW_SOL], and try to get the value for cb1 from there, it does return the correct value. Also, the final sensitivity values become non-zero so AD is definitely doing something now. I assumed I had to use the solver_container with ADJTURB_SOL in SetDependencies since the disc_adj_turb flag inside driver_structure is set to true, and so the solver_container with ADJTURB_SOL is instantiated as a new CDiscAdjSolver during the numerics preprocessing. I guess it's a matter of consistency with the rest of the code though, so maybe my assumption was wrong. I'll test to see if the sensitivity values I'm getting are correct, will let you know.; Thanks so much for your help, hopefully this has been solved for good :); Cheers",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/679#issuecomment-498749435:932,test,test,932,https://su2code.github.io,https://github.com/su2code/SU2/issues/679#issuecomment-498749435,1,['test'],['test']
Testability,"Hey,. i have here a little bigger testcase (3D pipe with 1.5 Mio cells). The solution_flow.dat filesize is ~265M.; First the flow.vtk was written perfectly allright.; After i restart the case, the flow.vtk wasn't written automaticly.; Also i tried to do manual with SU2_SOL but here i get all the time _Segmenation fault (core dump)_; after or while; ""Merging solution in the Master node"". I tried it ""local"" on our visualisation cluster and also on our HPC-Cluster with same error.; I'm using branch **feature_internalflow**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/240:34,test,testcase,34,https://su2code.github.io,https://github.com/su2code/SU2/issues/240,1,['test'],['testcase']
Testability,"Hey,; I tried to compile it with the changes from fix_python_3.8 branch. Unfortunately the build failed again at the same point. I have attached the [log file](https://github.com/su2code/SU2/files/4654939/su2_build_NoOpenBlas_2.log).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631259592:150,log,log,150,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631259592,2,['log'],['log']
Testability,"Hi ; > WeightNF.dat: I don't understand what this is for. It is read in CAdjEulerSolver::SetIntBoundary_Jump to calculate derivative, so it is used for adjoint calculation? My understanding is that at least discrete adjoint does not need to calculate derivative. Is it for continuous adjoint?. As far as I see it that function should not be called with the discrete adjoint solver. `CAdjEulerSolver::SetIntBoundary_Jump ` is only called by `CAdjFluidIteration::Preprocess` which should happen during a discrete adjoint run (but as far as i understand you that is not happening currently). All `CAdj<sth>` things are related to the continuous adjoint and `CDiscAdj<sth>` to the discrete adjoint.; Boundary conditions (this one being internal) need to be explicitly derived and set in the continuous adjoint but not in the discrete adjoint so your understanding was going in the right direction. (Although I am no expert in cont.adj. things either :) ). > VENKATAKRISHNAN limiter: With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.). you can try maybe to tune the `VENKAT_LIMITER_COEFF` in the cfg, but I have no better hint for now. > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them. That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-885462629:1177,test,test,1177,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-885462629,1,['test'],['test']
Testability,"Hi @CatarinaGarbacz . Sorry to piggyback on this, I hope it is okay. I think I have the same issue... I have been trying to get a hyper-sonic flow around the cylinder to converge but unfortunately to no avail. I assumed my setup was incorrect so I tried to look for an already tested case to run. I tried the case with the files uploaded in #1625 but that seems to not converge for me either. I have attached the [residual plot](https://imgur.com/a/ghnWGF4). I am willing to run a few cases on my workstation to help debug this. Kindly let me know which files to use and with which settings toggled/changed. Please let me know if you need any more information from my side.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2026#issuecomment-1563869449:277,test,tested,277,https://su2code.github.io,https://github.com/su2code/SU2/issues/2026#issuecomment-1563869449,1,['test'],['tested']
Testability,"Hi @Eduardo-Carvalho ,. your request is now merged into the develop branch and you can test/use it if you like. It will be in one of the next releases, if no further issues occur.; Handling is intuitive: Just set your restart iteration in the config file as you would do normally and activate the restart solution option. Furthermore, place your restart file (two in the case of 2nd order time integration) in the same directory as the config file of your test case. Then you are set up and can run the scripts as normal. ; For more details, I refer to pull request #964. . Best; Steffen",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/909#issuecomment-630289600:87,test,test,87,https://su2code.github.io,https://github.com/su2code/SU2/issues/909#issuecomment-630289600,2,['test'],['test']
Testability,"Hi @EduardoMolina . I will add this in the test repo. It is a standard case used in majority of the papers (relevant).; What are the changes/additions I need to carry out , can you guide me with the procedure of adding the test case in repo. Regards; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/631#issuecomment-455009027:43,test,test,43,https://su2code.github.io,https://github.com/su2code/SU2/pull/631#issuecomment-455009027,2,['test'],['test']
Testability,Hi @EduardoMolina @aeroamit : I think it is running now. I don't think the tests could execute because the travis file was pointing to a branch in an external fork. I have reverted it to develop.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/631#issuecomment-460078452:75,test,tests,75,https://su2code.github.io,https://github.com/su2code/SU2/pull/631#issuecomment-460078452,1,['test'],['tests']
Testability,"Hi @EduardoMolina. I have 1- created a folder and added a .cfg file (TestCases/euler/bluntbody/blunt.cfg) 2- added details in serial as well as parallel_regression.py 3- Added the mesh TestCases/euler/bluntbody/blunt_91.su2 in online repository (merged with develop branch). Now Travis CI is throwing following error- ; Traceback (most recent call last):; File ""serial_regression.py"", line 1403, in <module>; main(); File ""serial_regression.py"", line 129, in main; test_list.append(bluntbody); NameError: global name 'bluntbody' is not defined; The command ""python $TEST_SCRIPT"" exited with 1. (In parallel_regression as well); (I missed out some small changes??). Regards; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/631#issuecomment-456556642:69,Test,TestCases,69,https://su2code.github.io,https://github.com/su2code/SU2/pull/631#issuecomment-456556642,2,['Test'],['TestCases']
Testability,Hi @EduardoMolina. Submitted the PR for Testcase (mesh file); Thanks; Amit,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/631#issuecomment-458291038:40,Test,Testcase,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/631#issuecomment-458291038,1,['Test'],['Testcase']
Testability,"Hi @Nicola-Fonzi,. I'm not 100% sure of the reasons behind the GetFSI_Simulation criteria. I'd imagine that the nMarker_Fluid_Load might have been included there to make sure that a problem is treated as FSI only if there is transfer of load from the fluid to the structural domain, even if both zones existed independently in the config. But since the GetFSI_Simulation check is set up as an ""or"" rather than ""and"", as long as one of them is satisfied, the logic will be true for an FSI simulation, which might be sufficient for your application?. For the velocity transfer, I agree with Rafa that it would be better if you could also transfer the velocity from the external structural solver. If an external structural solver is used for dynamic analysis, it probably can output the structural velocities as well as the structural displacements? I left the methods for the recalculation of the grid velocity using finite differences in the code to support fluid-only problems with dynamic grid motion, I wouldn't suggest this as the method for FSI problems. For primal analysis, results from both methods agree with FSI benchmark cases but if you are interested in adjoint analysis at any point, transferring the velocity information from the structural domain directly to the fluid domain gives a significant simplification and improvement to the gradients.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-778368854:458,log,logic,458,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778368854,2,"['benchmark', 'log']","['benchmark', 'logic']"
Testability,"Hi @TobiKattmann . > > > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them.; > > ; > > ; > > That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth; > ; > Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in `CPhysicalGeometry::MatchNearField`, the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance exceeding 1e-1. I tested with single core and this message appears as well. Again, I don't see a point of this message and need to know the original intent.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-894929286:673,test,tested,673,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894929286,2,['test'],['tested']
Testability,"Hi @TobiKattmann . Thank you for making lots of suggestions. I'm out of town now, so I'll address those once I get back later this week. > > Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in CPhysicalGeometry::MatchNearField,; > > the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have; > > real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance; > > exceeding 1e-1.; > ; > Concerning this: I understand this nearfield marker as an internal ""boundary"" which does not alter the usual solution process at all. It is just added to compute some interesting quantity one. So the Nearfield marker needs to be in the mesh right, at the end like all other boundary markers? As such it is defined using mesh points and therefore there should be no discrepancies between nearfield marker nodes and mesh nodes? Am i correct with that, if not please enlighten me what is actually happening :). Yes, nearfield marker is just used to extract required physical quantities and should not alter the usual solution process at all. There should be no discrepancies between nearfield marker nodes and mesh nodes. I haven't checked this part of the code for a while but if I remember correctly, the ""Bad match..."" message is shown if there is discrepancy between a nearfield marker node and the nearest mesh node that is NOT on nearfield boundary. > For example Green-Gauss gradients have an exclusion for internal boundaries but not for nearfield ones. @pcarruscag So, I need to make something similar to internal boundaries? The flowfield looked reasonable though except when I use the VENKATAKRISHNAN limiter where the nearfield boundary seemed to act like half permeable wall.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-898144522:189,test,tested,189,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-898144522,1,['test'],['tested']
Testability,"Hi @TobiKattmann, thanks for your review. I'll try to do what I can within this week as I don't have much time from next week. > Hi Yuki, Thanks for this contribution bouquet I have a few comments in the review. You didn't write the code initially but it might still be good idea to make the code a bit nicer overall. In case there are things that are not understandable please let me know. As for things that I don't understand, see below although I would like to separate them from this PR.; - WeightNF.dat; - I don't understand what this is for. It is read in `CAdjEulerSolver::SetIntBoundary_Jump` to calculate derivative, so it is used for adjoint calculation? My understanding is that at least discrete adjoint does not need to calculate derivative. Is it for continuous adjoint?; - VENKATAKRISHNAN limiter; - With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.); - `Bad match for point 47742.	Nearest donor distance: 3.6066950142e+00.`; - Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-884793528:1014,test,test,1014,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-884793528,1,['test'],['test']
Testability,"Hi @WallyMaier and @pcarruscag ,. I would like to do a test merge on my branch(es) before this gets merged. I just briefly scrolled through the PR but would like to take a closer look. (As close as it can get for +10.000, -10.000 but a lot of that is copied from A to B as already mentioned); I will report tomorrow (tuesday) evening. One thing ahead: I noticed there are quite some files under `Files changed` which have `No changes. ` ...it is also not a mode change (i.e. change in executable permission) ... so what does that mean? At least that is what github shows me in the `Files changed` tab ... in the `jump to file or symbol` list I get some +<some green number>, -<some red number>... so maybe it is just github messing up. Ok, two things ahead: @pcarruscag I guess I would have preferred to have your contributions split into a separate PR like #821 from the beginning as probably the reviews of each PR would be a bit easier",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/818#issuecomment-555043402:55,test,test,55,https://su2code.github.io,https://github.com/su2code/SU2/pull/818#issuecomment-555043402,1,['test'],['test']
Testability,"Hi @WenyinWei ,; This is the idea behind https://github.com/su2code/vandv in the future (as far as I understand it) or now pretty much everything that is in the Testcases folder of SU2. . I am not sure if there is a Testcase currently which would catch the current issue. I think that not.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735#issuecomment-515070095:161,Test,Testcases,161,https://su2code.github.io,https://github.com/su2code/SU2/issues/735#issuecomment-515070095,2,['Test'],"['Testcase', 'Testcases']"
Testability,"Hi @WenyinWei, ; using (on Linux) `grep -r HEAT_EQUATION_FVM .` in the `<SU2_root>/Testcases` folder will point you to `./coupled_cht/incompressible/configSolid.cfg:15:SOLVER= HEAT_EQUATION_FVM`. It is a CHT Testcase (i.e. coupled fluid and solid) but by changing `MARKER_CHT_INTERFACE ` in configSolid.cfg to `MARKER_ISOTHERMAL=(PINSD, 350)` for example you should be able to run the configSolid.cfg alone. ; Hope that helps, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/783#issuecomment-527331047:83,Test,Testcases,83,https://su2code.github.io,https://github.com/su2code/SU2/issues/783#issuecomment-527331047,2,['Test'],"['Testcase', 'Testcases']"
Testability,"Hi @YairMO, Hi @emaberman ,. thank you very much for your comments. I haven't found any suggestion in literature to clip to only positive values the cross-diffusion term in the w-equation. I understand that it might be more robust, but it is not the standard implementation of the SST model, which is the first thing that we need to achieve. Only then we can build on top of that to improve the robustness of SU2. Nevertheless, I tried the SWBLI test case and I compared the results across 6 different combinations:. 1- develop branch, no changes; 2- develop branch, changes to Supersonic_inlet profile as suggested in #1851 ; 3- my branch, with original CDkw implementation (should give exactly the same result as develop+modified BC); 3- my branch, with original CDkw implementation and using boundary conditions from TMR; 4- my branch, with original CDkw implementation and using your suggestions for lower limits for k and w.; 5- my branch, allowing negative values of CDkw; 6- my branch, allowing negative values of CDkw and using boundary conditions from TMR; 7- my branch, allowing negative values of CDkw and using your suggestions for lower limits for k and w.; 8- my branch, allowing negative values of CDkw, using boundary conditions from TMR and using your suggestions for lower limits for k and w. When my branch is used, then the changes to the supersonic inlet BC are already in place. I haven't achieved convergence with 1, 2 and 3. More precisely, 1 diverged right away (after 30 iterations), while 2 and 3 gave ""FGMRES - Orthogonalization Failed"" after 900ish iterations. Here you can see the residuals for the different combinations. ![OrigCDkw](https://github.com/user-attachments/assets/18836f37-5fa5-4523-bee2-8f0c420d4080). ![NegCDkw](https://github.com/user-attachments/assets/4ba446a0-f77d-4f06-bcc2-cdd499839f82). Unfortunately I will be busy with the AIAA Conference next week, thus I don't know how much I will be able to work on this. The next test case will be the 2D air",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2252804531:446,test,test,446,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2252804531,1,['test'],['test']
Testability,"Hi @aeroamit ,. It seems you added the grid to your own fork instead of https://github.com/su2code/TestCases/tree/develop. This is the reason travis CI didn't find your grid and is hanging. Please submit a PR also for the test case. Please let me know if you need further help. Happy weekend!. Thanks; Eduardo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/631#issuecomment-457849144:99,Test,TestCases,99,https://su2code.github.io,https://github.com/su2code/SU2/pull/631#issuecomment-457849144,2,"['Test', 'test']","['TestCases', 'test']"
Testability,"Hi @aeroamit ,. LGTM! Thanks. Just a mark: I think it is interesting to add the flow past a blunt body on the test repo. What do think? If not, it is ready to merge. Eduardo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/631#issuecomment-454542835:110,test,test,110,https://su2code.github.io,https://github.com/su2code/SU2/pull/631#issuecomment-454542835,1,['test'],['test']
Testability,"Hi @aeroamit . Sure. Please see this link: https://su2code.github.io/docs/Gitting-Started/. Basically, you need to modify the python regression files in order to add your new test case. Also, you need to upload the grid in https://github.com/su2code/TestCases, you can create a branch for that. Lastly, update .travis.yml but don't forget to revert it before merge. Best,; Eduardo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/631#issuecomment-455422968:175,test,test,175,https://su2code.github.io,https://github.com/su2code/SU2/pull/631#issuecomment-455422968,2,"['Test', 'test']","['TestCases', 'test']"
Testability,"Hi @aeroamit,; Thank you for the detailed testing, the results look quite good, I might give these schemes a try.; By the way, my question on whether these schemes could be merged was not just with code clean-up in mind, if different schemes could be obtained by changing some constants then in theory the discrete adjoint solver could be used to get sensitivities of numerical phenomena with respect to the choice of method.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/631#issuecomment-453447518:42,test,testing,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/631#issuecomment-453447518,1,['test'],['testing']
Testability,"Hi @alecappiello, thanks for joining the discussion. > Hi all, I've just tried to run the Aachen parallel regression test locally (code from SU2 [feature_asan](https://github.com/su2code/SU2/tree/feature_asan), restart files from SU2/TestCases) and I get a pretty different outcome than the PR here.; > ; > residuals I get locally: | 9| -15.378838| -15.209087| -15.081009| -13.857694| -12.724170| -10.052202|. If you use your local environment for building and running (as opposed to the containers), that can lead to differences, too (although it's not a good sign if they are large). So I think the question is rather, with the changes in the `feature_asan` branch, do you see reasonable results and/or the familiar residuals in your local environment?. @bigfooted reports that the Aachen turbine case in current develop is not deterministic (see [here](https://github.com/su2code/SU2/pull/2260#issuecomment-2054161066) and [here](https://github.com/su2code/SU2/actions/runs/8658658261/attempts/1)), that could be an issue, too. If it is due to memory issues, the changes in this PR might fix this. > Also, [feature_asan](https://github.com/su2code/SU2/tree/feature_asan) doesn't have any Aachen_turbine folder among the testcases. I see [this Aachen turbine folder](https://github.com/su2code/SU2/tree/feature_asan/TestCases/turbomachinery/Aachen_turbine), is it not the correct one?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2057334634:117,test,test,117,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2057334634,4,"['Test', 'test']","['TestCases', 'test', 'testcases']"
Testability,"Hi @antares190,. Glad to see that things seem to be starting to work for you. We (Brian) are trying to improve this capability in the solver and any experiences / suggestions / help will be welcome. With that said, this seems like an interesting result. Would you mind submitting it (or other pictures that you like better) so the SU2 Foundation can use it to show this capability to others in the future? The link where you can do this is here<http://su2foundation.org/su2-promotional-material/?utm_source=hs_email&utm_medium=email&utm_content=76584389&_hsenc=p2ANqtz-9fEq2awKk2vd155cCcN_N4mWBCZK-rJ-TqNsZhqSJs-VWn-w7q-H6w8sdiA3LyuOTqlK4eqZhFFstKi-LQFyyGqYPdkwYc9JsNdB1yyd7pqMwTFzA&_hsmi=76584389>. Thanks a lot,. Juan. On Apr 29, 2020, at 1:38 PM, antares190 <notifications@github.com<mailto:notifications@github.com>> wrote:. Thanks Brian,; my bad, I misinterpreted the carpets / logs structure. I successfully ran a test of a very simple case. In the results there are some small artifacts, but the shocks are resolution improved consistently after mesh adaption.; Thanks for the support. [Comparison]<https://user-images.githubusercontent.com/41752169/80644172-84a7a580-8a69-11ea-9f16-58e98c808b73.png>; [ComparisonMesh]<https://user-images.githubusercontent.com/41752169/80644174-85403c00-8a69-11ea-819f-2ac00550a089.png>. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/948#issuecomment-621450497>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AA5FFRCGLBHJCB3FS4JSSV3RPCF5RANCNFSM4MQACOXA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-621483859:883,log,logs,883,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-621483859,2,"['log', 'test']","['logs', 'test']"
Testability,"Hi @cvencro , I think it would be good to add that Testcase to the regression tests to 'guard' the code. ; I actually wanted to do that real quick but it guess that with `SINGLEZONE_DRIVER` one cannot access `TIME_ITER`, only `EXT_ITER` with the` .test_iter` variable of the python Testcase class. Not sure if that is addressed in #724 , maybe @rsanfer or @talbring can give a quick info as this is probably affecting all unsteady regression tests. . Concerning the Testcase repo: You can simply open a PR for the develop branch of the Testcase repo, and refer to the corresponding PR here (and vice versa). As far as I know the Testcase repo is not protected, i.e. you can merge without any check. And as it is just one added mesh and no other change you could do it right now from my point of view. Another point: What about the rotating_frame for incompressible flow? If it is untested I would like an error catch in place that this feature can't be used out of the box.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/767#issuecomment-527167827:51,Test,Testcase,51,https://su2code.github.io,https://github.com/su2code/SU2/pull/767#issuecomment-527167827,7,"['Test', 'test']","['Testcase', 'tests']"
Testability,"Hi @dkavolis,; It seems like you know your stuff about build systems and associated best practices, it would be great if you could open a PR with the fixes for this, I'd be happy to test the MKL stuff on the systems I have access to.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/823#issuecomment-558107370:182,test,test,182,https://su2code.github.io,https://github.com/su2code/SU2/issues/823#issuecomment-558107370,1,['test'],['test']
Testability,"Hi @economon ,. I tested a couple of cases - laminar flow over a cylinder and turbulent flat plate and the convergence is greatly enhanced. I have attached a plot of convergence history for the flat plate case. I didn't have much luck with the laminar backward facing step case though. The residuals tends to oscillate around -5.5. I was planning to run the NACA 0012 test case soon. Do you have any cases specifically that you wanted to test? I can run some of them soon.; ![Convergence](https://user-images.githubusercontent.com/28007882/65721666-b9eeae00-e0aa-11e9-97c6-727d743e923b.png). Cheers,; Akshay",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-535683971:18,test,tested,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-535683971,3,['test'],"['test', 'tested']"
Testability,"Hi @economon ,. I tried existing Test cases from Repository (NACA0012 etc.). At lower Mach numbers, there is improvement in accuracy over AUSM, HLLC or Roe scheme (especially stagnation region values and there is some more story to it). ; I will try to workout some specific test case for higher Mach number to show the differences.; Also some of these latest schemes are likely to be better in comparison to existing ones/predecessors in most of the situations (incrementally or reasonably). Regards ; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/631#issuecomment-447092111:33,Test,Test,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/631#issuecomment-447092111,2,"['Test', 'test']","['Test', 'test']"
Testability,"Hi @economon ,. Thanks for the effort in implementing this PR that is focus in robustness and convergence. . However, I agree with @pcarruscag that we need to give to the user the ability to choose the gradient method that he/she thinks is appropriate. Although, this PR sounds promising we didn't test in complex geometries, i.e. High Lift PW or Drag PW (please correct me if I am wrong). Moreover, it may well be that in some cases the use of the more robust gradient method is not necessary since the CFL number is small for accuracy reasons, i.e. hybrid RANS/LES simulations like DDES. Thanks again,; Eduardo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-532903950:298,test,test,298,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-532903950,1,['test'],['test']
Testability,Hi @economon @EduardoMolina . I have tried two test cases - NACA 0012 airfoil and flow past blunt body. Please see the attached pdf file containing the details. [AUSM_UP_UP2.pdf](https://github.com/su2code/SU2/files/2746891/AUSM_UP_UP2.pdf). Regards; Amit,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/631#issuecomment-453234901:47,test,test,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/631#issuecomment-453234901,1,['test'],['test']
Testability,"Hi @gbaty,. I started pushing this a bit further and opened up a new PR (#424). Next step is trying to get the wrapper to build against a version of Python 3 and test with that on Travis. Let me know if you have any ideas. I'm struggling a bit with the Makefile generation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/260#issuecomment-323882820:162,test,test,162,https://su2code.github.io,https://github.com/su2code/SU2/pull/260#issuecomment-323882820,1,['test'],['test']
Testability,"Hi @gmandrews: we have been working hard on issues related to the partitioning / memory, and we have a branch that is under testing and nearly complete. Can you please try your case with the branch here, when you have a moment, to see if the performance is any better?. https://github.com/su2code/SU2/tree/fix_partitioning",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/479#issuecomment-347944502:124,test,testing,124,https://su2code.github.io,https://github.com/su2code/SU2/issues/479#issuecomment-347944502,1,['test'],['testing']
Testability,"Hi @hlkline , should we open a separate issue concerning just the test for similar errors?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/313#issuecomment-252892860:66,test,test,66,https://su2code.github.io,https://github.com/su2code/SU2/issues/313#issuecomment-252892860,1,['test'],['test']
Testability,"Hi @jaspe55 - thanks for the first contribution!. Can you please switch the email and branch name in .travis.yml back to su2code-dev@lists.stanford.edu and develop, respectively? That should get the tests running so we can give this a proper review (should be quick given the small change).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-434492415:199,test,tests,199,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-434492415,1,['test'],['tests']
Testability,"Hi @jblueh , can we update medipack as well to the latest commit? . (As you know 😉) It solves a minor inconvenience where Macs with case-insensitive filesystems would mark the medipack submodule as unclean because two filenames just differ just in their case [see here](https://github.com/SciCompKL/MediPack/pull/3). Building on my machine was without problems and if the regression test would run here I see no issue. I can also add the commit but didnt want to sneak into your PR without asking ;)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1096#issuecomment-716442866:383,test,test,383,https://su2code.github.io,https://github.com/su2code/SU2/pull/1096#issuecomment-716442866,1,['test'],['test']
Testability,"Hi @koodlyakshay thanks for making the changes.; By default MPI barriers are ""never"" needed, the normal communication routines already do all synchronization required. Efficiency is probably not fundamental for that routine but this solution feels too complicated somehow, can you attend tomorrow's developers meeting? (I'm getting the ""there's gotta be a simpler way"" feeling, and if we pick the brains of a few people we are certain to find it). In the meantime, if you specify the roughness as a string+double list (exactly like MARKER_HEATFLUX), which is read with `addStringDoubleListOption` you could probably simplify the logic around heatflux and isothermal markers, which would make the setup more user friendly (having to stick with an order is bound to trip someone at some point).; Also the cht interface is ""just"" an isothermal boundary, any reason not to make this feature available for that?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-630788337:629,log,logic,629,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-630788337,1,['log'],['logic']
Testability,"Hi @patelha57 , yes I meant those functions. I could not find them because I did a fast ctrl+f search in the files and it did not work because of the renaming. I should have read more carefully. I think it would have been better to keep the old names, as renaming tends to create small issues here and there. However, I see that you fixed that almost everywhere, also in the python test cases. Thank you!; Probably only the fsi_interface and fsi_computation files are missing",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1354484568:382,test,test,382,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1354484568,1,['test'],['test']
Testability,"Hi @pcarruscag , All. I have done a test case for NACA 0012 airfoil at Mach 0.01 to check the effectiveness of hybrid jacobians (as requested by me earlier).; There are some interesting observations. Check out the attachment.; [Low_Speed_test.pdf](https://github.com/su2code/SU2/files/3303753/Low_Speed_test.pdf); [cfg_files.zip](https://github.com/su2code/SU2/files/3303763/cfg_files.zip); (cases ran on 2 cores); Regards; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-503345696:36,test,test,36,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-503345696,1,['test'],['test']
Testability,"Hi @pcarruscag , I notice that I get very slightly different residuals for the parallel regression running with 2 cores on my laptop vs in the Github regression test. @WallyMaier said this might be due to difference in partitioning, should I just use the residual values from the Github regression so the test passes, or are there other checks I should run?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1428#issuecomment-977172205:161,test,test,161,https://su2code.github.io,https://github.com/su2code/SU2/pull/1428#issuecomment-977172205,2,['test'],['test']
Testability,"Hi @pcarruscag , Thank you so much for your comments. I went to some of the test cases that are failing and I noticed that some residuals are very different because they are being compared at 5 - 10 or 20 iterations but if I compare them after 100 iterations they are very similar. I have run the NICFD_nozzle in the tutorial test cases and I got the following results:; ![residuals](https://user-images.githubusercontent.com/98025159/201385162-012ecd14-209d-4d0a-b78d-ba964673fbff.JPG); solid-line: develop; dash-line: proposed BC_INLET; Also I got the same results in both cases:; ![results_NICFD](https://user-images.githubusercontent.com/98025159/201385395-bacd5b87-9ad1-42f6-8837-1420c396e92a.png). I also run the turb_flatplate_sst.cfg test case in the vandv folder and I got the same residuals and the same solution. I read in the pull request of @bigfooted that he experienced the same issues with the test cases with the restart option. So I am not sure if the other test cases are failing for similar reasons. Do you have some insight about this? ; Thank you so much in advance :) .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1796#issuecomment-1311924496:76,test,test,76,https://su2code.github.io,https://github.com/su2code/SU2/pull/1796#issuecomment-1311924496,5,['test'],['test']
Testability,"Hi @pcarruscag ,. Sorry for the late response. . I went through all your implementation and performed some tests. . Although, I didn't see an improvement using the accurate jacobians in the subsonic test cases, as already mentioned here, and even in the transonic OneraM6 case from the repo. This implementation is very clean and in my opinion is a great improvement. . I hope that in other cases, the use of accurate jacobian will have a positive effect in the convergence. The only thing that I would like to bring is that in the future, you open a PR from su2 repo instead from your personal account. It is easier for the reviewers to compile and test. I will wait Travis pass to merge this PR. Thanks again. Eduardo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-511142563:107,test,tests,107,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-511142563,3,['test'],"['test', 'tests']"
Testability,"Hi @pcarruscag ,. Yes, I am still tweaking parameters while we are participating on the AIAA-HLPW. But I agree with you that we need to merge asap even if we do an update after the workshop. Let me fix the compilation and add a regression test case. I probably will need your help with the AD part. Thanks.; Eduardo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1120#issuecomment-781530053:239,test,test,239,https://su2code.github.io,https://github.com/su2code/SU2/pull/1120#issuecomment-781530053,1,['test'],['test']
Testability,"Hi @pcarruscag ; I am also running a couple of test cases, mainly the RANS NASA Hump. Do you think it is a good idea to add since we don't have any test case covering the low Mach Roe implementation? If so, I am happy to add.; Best,; Eduardo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-507808462:47,test,test,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-507808462,2,['test'],['test']
Testability,"Hi @pcarruscag I think we're at a place in this PR where we can ask for a code review. In particular, I'm wondering if there is a way to reduce the code complexity in the ComputeCollisionDelta() function. Moving this to its own function reduced repeated code (which was called for each GY transport model) but now I've still got some repeated code and cumbersome logic.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1887#issuecomment-1397789630:363,log,logic,363,https://su2code.github.io,https://github.com/su2code/SU2/pull/1887#issuecomment-1397789630,1,['log'],['logic']
Testability,"Hi @pcarruscag and @joshkellyjak, the parallel and serial regression tests are successful, but the tsan tests keep failing.; Josh suggested it could be related to the submodules, which I managed to update locally. Though I can't find a way to push it to the fork. ; Do you guys have any suggestion?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2158#issuecomment-1999175760:69,test,tests,69,https://su2code.github.io,https://github.com/su2code/SU2/pull/2158#issuecomment-1999175760,2,['test'],['tests']
Testability,"Hi @pcarruscag and @vdweide ,. Thanks for creating a test branch and for bringing this discussion. When Brian (@bmunguia ) and I mentioned PETSc, it was an idea to try a different Newton-Krylov (with preconditioner) library in order to improve the convergence of SU2. ; Since the slow convergence of the SU2-FV is the main feedback that I received from other users from industry and academia, I think it worth try an external library and evaluate the performance. ; I will be happy to help test Eigen and see if it is a good candidate. Best,; Eduardo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-460479862:53,test,test,53,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-460479862,2,['test'],['test']
Testability,"Hi @pcarruscag, it sounds strange this error since before opening the PR I ran the same tests on my repository and it compliled correctly. Here you can have a look at it [https://github.com/baldang/SU2/runs/3778439078?check_suite_focus=true](https://github.com/baldang/SU2/runs/3778439078?check_suite_focus=true) . I will let you know if I find a solution.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1387#issuecomment-938505427:88,test,tests,88,https://su2code.github.io,https://github.com/su2code/SU2/pull/1387#issuecomment-938505427,1,['test'],['tests']
Testability,"Hi @pcarruscag, thank you for the development. I am testing it right now, I already noticed the struggle to converge the linear system. I lowered the CFL and relaxed the tolerance to 0.1.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1467#issuecomment-1084438279:52,test,testing,52,https://su2code.github.io,https://github.com/su2code/SU2/issues/1467#issuecomment-1084438279,1,['test'],['testing']
Testability,"Hi @pcarruscag,; thanks for adding the test case. This LGTM, from my side is ready. Let's allow as common practice some 24 h to see if anyone has additional comments, then we can merge it in.; Best,; Ruben",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/681#issuecomment-498316703:39,test,test,39,https://su2code.github.io,https://github.com/su2code/SU2/pull/681#issuecomment-498316703,1,['test'],['test']
Testability,"Hi @rsanfer and @TobiKattmann , I agree with the more generalised solution for rigid and deforming meshes too and this is excellent timing of #760 to combine the new approach. ; I have FSI cases I can use, but thought it would be a good stepping stone to use fluid-only case to begin with to avoid the coupling terms for this verification. Using dynamic surface movement definitions for the single-zone pitching airfoil test which has previously been used for rigid motion, the primal solutions and gradients from finite differences for both are very similar as expected. Therefore this should be a good reference to check the discrete adjoints for deforming mesh when the adaptations for grid velocities are made using #760.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/766#issuecomment-524565760:420,test,test,420,https://su2code.github.io,https://github.com/su2code/SU2/pull/766#issuecomment-524565760,1,['test'],['test']
Testability,"Hi @rsanfer,; Regarding patterns, larger cases are more likely to have the issue than small ones, I did not test boundary conditions.; I have not tested the forward mode because it differentiates linear solvers and in the past I have found that to be very limiting so I'd rather not go there. The most detailed verification we have is that present by @cvencro at scitech (finite differences). @cvencro do you have any before/after cases where this problem showed?; On the recording of variables, I like the FEM_VARIABLES as a convergence monitor. But for larger sets of variables, e.g. grid nodes, topology, a ""post processing"" recording step makes sense, that increase in memory footprint is why I have not created a PR for FSI shape derivatives yet. I talked about this briefly with @oleburghardt during the annual meeting and the new adjoint driver should have hooks for this type of post processing.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/615#issuecomment-455994325:108,test,test,108,https://su2code.github.io,https://github.com/su2code/SU2/pull/615#issuecomment-455994325,2,['test'],"['test', 'tested']"
Testability,"Hi @sun5k ,. I am also working on the implementation of this transition model within SU2. . In order to verify the code, I am running simulations on the E387 profile (taken from DOI:10.1177/0954406217743537) and on the Flat Plate test cases (taken from DOI: 10.2514/1.42362). . While for the E387 profile the results are similar (although not really convincing yet), for the flat plate (NASA 2DZP) the transition occurs right at the leading edge. Could you please share the config files that you have used?. I also noted a couple of inaccuracies within your implementation (by inspection of the ""Files changed"" section), maybe we can have a talk to discuss about it. Thank you in advance.; Best regards,; Andrea",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1105521136:230,test,test,230,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1105521136,1,['test'],['test']
Testability,"Hi @themrdjj,; Thank you for the feedback, there was already a similar report in #796 (which incidentally went stale and was closed), I will try to do something about it, or if you would like to contribute code to the project I can point you to right place to add an error message. Meanwhile my best advice is to not start a config from scratch until you know SU2 very well (and even then...) look for a test case that uses similar features and go from there.; The minimal config is the one in Quickstart, the template is more of a catalog :) I don't think we'll ever have a unified minimal config, SU2 does many things, some mutually exclusive.; Convective options are reasonably well documented here: https://su2code.github.io/docs_v7/Convective-Schemes/; The output messages before ""Begin Solver"" can be helpful (although in this particular case you would need to know what to expect). Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/842#issuecomment-566642727:404,test,test,404,https://su2code.github.io,https://github.com/su2code/SU2/issues/842#issuecomment-566642727,1,['test'],['test']
Testability,"Hi @usbrem : thanks for making us aware of the issue. If you have some time, would you consider submitting a pull request with these changes, since you can test locally very easily? Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1046#issuecomment-657104021:156,test,test,156,https://su2code.github.io,https://github.com/su2code/SU2/issues/1046#issuecomment-657104021,1,['test'],['test']
Testability,"Hi @vdweide,. Thank you for testing this out.; I had a look at the code and I think the overhead may be partly due to the multiplication function being compiled in one library and used in another. Which leaves little chance for some boiler plate code in the Eigen::Map class to be optimized way. If you share the test case and it fits in 16GB of ram I am happy to hack a bit and try to get those 10%.; As for Eigen beating MKL, like I said I never thought that would be the case, but out of curiosity what is the typical size of the matrices in the DG solver?. Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-462083402:28,test,testing,28,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-462083402,2,['test'],"['test', 'testing']"
Testability,"Hi Akshay,. Yes this is a simple fix and it could go in quickly on it's own or as part of another PR. I have this fix already modified in the draft PR #833 which is just pending the addition of a test case. I can add that and move to a PR soon if you are happy to wait?. Best wishes,; Charanya",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/860#issuecomment-582340873:196,test,test,196,https://su2code.github.io,https://github.com/su2code/SU2/issues/860#issuecomment-582340873,1,['test'],['test']
Testability,"Hi Ale, can you add the mesh (from the workshop I presume) to the Testcases repo with a restart file and then use that to run a coupled iterations for regression testing? We may need to wait for the turbo outputs PR",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2158#issuecomment-1792490251:66,Test,Testcases,66,https://su2code.github.io,https://github.com/su2code/SU2/pull/2158#issuecomment-1792490251,2,"['Test', 'test']","['Testcases', 'testing']"
Testability,"Hi All; I’m a bit worried about the logistics related to checking this v&v data base for every new release.; Unlike the tutorials, these cases, by their nature will be large and will require long integrations(the 2D cases might not fall on this category). This means also that significant computational resources will be required for this evaluation (about twice a year for a growing list of cases). Is it practical?; The only way that I think that it might work is that each contributor will be responsible for checking the casesthat he has introduced, before each release. Being a voluntary institution, this can not be enforced (and we do not want to enforce). How about trying to be less demanding:; In each validation case there will be a statement about the last version that it was checked with and the responsible contributor. Each contributor will receive a recommendation to check his cases before a new release, and will be able to do that and update the OK label also after the release.; Less waterproof but might be more workable.; What do you think?; Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423273117:36,log,logistics,36,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423273117,1,['log'],['logistics']
Testability,"Hi Amit, to further the discussion, I am running a sharp cone axisymmetric (or at least testing it). It makes me wonder if the issue only appears where the axis of rotation is perpendicular with a wall. Also, the axisymmetric boundaries havent been formulated for NS sims yet.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1063#issuecomment-698126330:88,test,testing,88,https://su2code.github.io,https://github.com/su2code/SU2/issues/1063#issuecomment-698126330,1,['test'],['testing']
Testability,"Hi Amit,; Thank you for testing the feature on those cases, I would never have guessed the convergence rate could be higher with Roe Jacobians. I got curious and played with the case too, I tried reducing the finite difference step and changing linear solvers but it made no difference.; It is especially intriguing that for two of the schemes Roe needs CFL of 0.01 (at which point it would possibly better to use explicit RK) and for the other two schemes of the same family the sky is the limit. I guess one of the conclusions is that it is good to have options.; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-503725906:24,test,testing,24,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-503725906,1,['test'],['testing']
Testability,"Hi Amit,; That is also my intuition, I guess the only way to know if it is worth the extra cost is by doing.; Do you have a good supersonic case I can use for testing (all my work is subsonic)? Preferably something that converges well without initialization.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-499876619:159,test,testing,159,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-499876619,1,['test'],['testing']
Testability,"Hi Antonio, it looks fine to me.; I'll run some extra test I have on my local server just to be sure everything work also for the conservative sliding mesh approach. Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/382#issuecomment-283721722:54,test,test,54,https://su2code.github.io,https://github.com/su2code/SU2/pull/382#issuecomment-283721722,1,['test'],['test']
Testability,"Hi Brain. One quick question. I have noticed that you have set ADAP_NORM to 1 (Lp=1) in one example for Euler solution. I am using original PYAMG examples and changing "" remesh_options['Lp'] "" does not alter the adapted mesh. The log file always saying LP=2 . Are you using a different PYAMG version? . Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-650061484:230,log,log,230,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-650061484,1,['log'],['log']
Testability,"Hi Daniel! Thanks again to you and Ben for working on this new feature... it is going to be a nice contribution to the code. The code looks good to me, but there is an issue with the automatic differentiation build. It is an easy fix though: please change your ""double"" declarations to ""su2double"" in the commits. We use ""su2double"" everywhere in the code so that it is straightforward to specialize the variable types at compile time, which is needed by the AD tool. Once the tests pass, we'll pull this in right away.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/214#issuecomment-164091519:477,test,tests,477,https://su2code.github.io,https://github.com/su2code/SU2/pull/214#issuecomment-164091519,1,['test'],['tests']
Testability,"Hi Economon,. I encountered an issue very similar to what Auzbaig reported: the error message ""OBJECTIVE_FUNCTION: invalid option value EntropyGeneration"" during optimization with SU2. (I am using SU2 version 8.0.1 ""Harrier.""). After thoroughly examining the existing Python optimization framework, I found that one of the steps in the optimization chain is generating different config.cfg files, with a focus on DV_VALUE and OBJECTIVE_FUNCTION. DV_VALUE controls the geometry deformation;; OBJECTIVE_FUNCTION determines the type of objective/constraints.; Then the framework calls SU2_CFD and SU2_DOT to obtain performance metrics or gradient information.; As you mentioned, ""You might need to run updateHistoryMap.py to register new outputs with Python."" Initially, I thought it meant simply providing a new input for OBJECTIVE_FUNCTION in the Python optimization framework. However, it seems that this may not work at the C++ level. To verify this, I ran $ SU2_CFD your_config.cfg -d and observed all available history outputs. However, I suspect that OBJECTIVE_FUNCTION cannot use every history output, meaning that the adjoint solver might not recognize some objective functions. Does this imply that additional modifications in the C++ code are required?. Additionally, I would appreciate more information regarding CUSTOM_OBJFUNC. From TestCases/user_defined_functions/lam_flatplate.cfg, I understand that CUSTOM_OBJFUNC allows combinations of existing OBJECTIVE_FUNCTIONs and can also utilize CUSTOM_OUTPUTS. The flexibility of CUSTOM_OUTPUTS seems to enable the construction of various desired variables. However, I am unsure whether using OBJECTIVE_FUNCTION= CUSTOM_OBJFUNC along with CUSTOM_OUTPUTS can entirely replace the need for additional modifications in the C++ code. Since I’m not very proficient in C++, I would greatly appreciate your guidance. Sincerely,; Tongtong",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/889#issuecomment-2324575133:1343,Test,TestCases,1343,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-2324575133,1,['Test'],['TestCases']
Testability,"Hi Eduardo,; The channel 2D and supersonic vortex shedding cases are failing due to small changes in residuals, the operations in Roe were re-ordered a bit, and these cases run for many iterations, I am guessing it is just due to numerical precision. But I will have a look before updating the residuals.; The rotating cylinders case is the infamous one that appears to be sensitive to minute, and seemingly insignificant, changes as reported in #700, at the reference residuals the case is actually diverged.; Finally there is an AD case using JST that also fails because it is a file diff and we output 15 significant digits to that file. The change is due to the refactoring of central schemes that required changing the order in which variables are registered for pre-accumulation.; I do appreciate you taking the time to review this PR, especially since you are ""first author"" of the low Mach Roe schemes and there are no regressions for them, nevertheless I tested them before and after and it seems I did not break anything.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-506526475:964,test,tested,964,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-506526475,1,['test'],['tested']
Testability,"Hi Edwin,. This a very valuable information. We need to update SU2 . Arne, are you interested in implementing and testing these changes in your pull request?. Otherwise, we can create a new pull request. Thanks!; Francisco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/332#issuecomment-323366526:114,test,testing,114,https://su2code.github.io,https://github.com/su2code/SU2/pull/332#issuecomment-323366526,1,['test'],['testing']
Testability,"Hi Eran, please see #898, a few of us still keep the old build system up to date, but because it is not under testing it is often broken. If this is critical to you I recommend checking which PR's introduce changes to meson.build files and if so request corresponding changes to the MakeFiles.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910#issuecomment-598352171:110,test,testing,110,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598352171,1,['test'],['testing']
Testability,"Hi Florian, I was also working on the same thing (feature_axi). I was unable to find a suitable case to test, and it seems we went about it in different ways. Im happy you got something working! Could you pass along the literature you used to create these terms?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1095#issuecomment-713166220:104,test,test,104,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-713166220,1,['test'],['test']
Testability,"Hi Florian,; You can have a look in CDriver.cpp around line 1850, the logic is mutually exclusive, so if multiple sources are specified the order does not matter, the way things are coded determines which source is used. (I hope somewhere in CConfig we check for conflicting sources).; Note that the first term / second term is per solver, so there is actually a lot of room for different sources. Regarding 2 there are more knowledgeable people about those topics out there than me. Maybe you can join the developers meeting tomorrow at 3pm CET (https://meet.jit.si/SU2_DevMeeting) and you can ask those questions to e.g. @economon or @TobiKattmann",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1095#issuecomment-721138506:70,log,logic,70,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-721138506,1,['log'],['logic']
Testability,"Hi Folks,. I would like to collect the views of the community about something (and I apologize if this has been debated already). Context:; Once again I find myself working on a feature that will require a bit of dense algebra.; I think implementing (i.e. paraphrasing from Numerical Recipes...) that kind of routine is a waste of time because someone has done already, and they have done it well.; Moreover, we have a very inefficient implementation of small matrix-like objects (arrays of arrays) and associated operations, which also leads to code bloat due to the required allocation / initialization / destruction. Proposal:; Start using a linear algebra library such as [Eigen](http://eigen.tuxfamily.org/index.php?title=Main_Page).; For this particular library:; - The learning curve is minimal;; - Their license (MPL2) is less restrictive than SU2's;; - No link time dependencies (it is all header files);; - Compatible with AD (everything is templated);; - I like their logo... I look forward to hear your opinions on this. Best regards,; Pedro",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643:979,log,logo,979,https://su2code.github.io,https://github.com/su2code/SU2/issues/643,1,['log'],['logo']
Testability,"Hi Francisco,. I'll try to find a solution for this. Unfortunately, we don't have a Mac here to test this, but maybe we can reproduce this error using clang.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/319#issuecomment-254137783:96,test,test,96,https://su2code.github.io,https://github.com/su2code/SU2/issues/319#issuecomment-254137783,1,['test'],['test']
Testability,"Hi Giulio,. Yes, those values are correct. I also get similar numbers for the other laminar cylinder test case without the low Mach correction and using the Roe solver. You're right they are weird though, it's because the fluid properties are those of air at 288.15 K so to get the low Reynolds number the density must be very low (correct me if I'm wrong!). Perhaps the fluid properties of honey would be more realistic for this case. Regards,; Daniel",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/232#issuecomment-181641307:101,test,test,101,https://su2code.github.io,https://github.com/su2code/SU2/pull/232#issuecomment-181641307,1,['test'],['test']
Testability,"Hi Giulio,. thanks a lot for your contribution, it looks very nice. . I just saw your reply to my comment below, I really appreciate if you don't mind giving me a bit more time before merging in. I was working on different developments and have a couple of deadlines coming up so I am a bit behind myself in merging with develop. . I'll try to review this as soon as I can, though. A couple of comments after I skipped through quickly:; - I have seen that in some cases there are a lot of lines that are removed and added just because of changes in the indentation. See, e.g., CIsoparametric::Set_TransferCoeff(CConfig **config, in which I saw two large blocks that have not changes but the indentation goes from spaces to tabs. This has caused some issues in the past, would you mind to take a look at it?; - About the change of name from MARKER_FSI_INTERFACE to MARKER_ZONE_INTERFACE. Can we hold this discussion for the future so we can give it a second thought? I think it may be important to maintain the difference between interfaces with different physics and interfaces that connect the same physics.; - I had here written a question of to what extent is the change in the physical time step iteration affecting the driver and the iteration classes. I completely understand your logic for fluid-fluid problems of transferring information at pseudo-time steps, but as I said in FSI problems this would not be adequate. I also added steady-state FSI into a separate branch, so I will take a look at potential conflicts. Thanks again for this great contribution! I'll get into this and get back to you as soon as possible!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/322#issuecomment-256047684:1287,log,logic,1287,https://su2code.github.io,https://github.com/su2code/SU2/pull/322#issuecomment-256047684,1,['log'],['logic']
Testability,Hi Heather!; Residuals in regression tests are ok but something goes wrong during the merge of the solution for the parallel fsi2d test case (could it be related to recent changes in SU2_SOL.cpp?),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/312#issuecomment-251897883:37,test,tests,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/312#issuecomment-251897883,2,['test'],"['test', 'tests']"
Testability,"Hi Heather, I created a branch fix_parallelFSIsol to address this issue. I had a very quick look at it and it seems to be fine now. Let me know what you think about it.; https://travis-ci.org/su2code/SU2/jobs/166032087. I can have, however, a better look next week. I agree, we need something to test similar errors but also issues related to output files. . PS; @rsanfer in the develop, from last merge, in SU2_SOL there is the GetnZone method from CConfig. Can that be useful for the multizone FSI as well?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/313#issuecomment-252423952:296,test,test,296,https://su2code.github.io,https://github.com/su2code/SU2/issues/313#issuecomment-252423952,1,['test'],['test']
Testability,"Hi Heather,. This is a very interesting contribution. Just one question, Does multi objective include multi point optimization? Could you please give us an example of the particular application that you have in mind? . Thanks,; Francisco. > On Feb 9, 2016, at 11:24 AM, Heather Kline notifications@github.com wrote:; > ; > This pull request is intended to be the first of two (or more) pull requests implementing multi-objective functionality. I am separating it into multiple requests since some structural changes are made which could potentially effect things outside the regression tests, and I want to make it easier for code review.; > ; > In this pull request, the ability to run multiple objectives is added to the python tools and to the config options. Within the CFD and adjoint solvers, the only major change is in the data structure containing the objectives - it now can hold a list of objectives, but when the adjoint solver is run only one objective is included. Later pull requests are planned to include the ability to run a single adjoint solution for a sum of objectives defined on different markers.; > ; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/su2code/SU2/pull/237 https://github.com/su2code/SU2/pull/237; > Commit Summary; > ; > config options updated to be compatible with multiple objectives - mdo not yet implemented; > python tools; > python adjusted for multiple objectives: will always run 1st objective only with continuous adjoint, but will run separate continuous adjoint evaluations within optimization; > continuous adjoint evaluates the requested objectives; > fixing some errors; > File Changes; > ; > M Common/include/config_structure.hpp https://github.com/su2code/SU2/pull/237/files#diff-0 (20); > M Common/include/config_structure.inl https://github.com/su2code/SU2/pull/237/files#diff-1 (6); > M Common/src/config_structure.cpp https://github.com/su2code/SU2/pull/237/files#diff-2 (90); > M SU2_PY/SU2/eval/d",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/237#issuecomment-182175757:586,test,tests,586,https://su2code.github.io,https://github.com/su2code/SU2/pull/237#issuecomment-182175757,1,['test'],['tests']
Testability,"Hi Jayant; Thanks for being so prompt and fast in handling this very important issue.; I’m currently in vacation at Scotland so I’ll be brief and just add few; comments:; a. As you wrote, validation is very different from test cases. Mesh,; configuration and solutions should be optimized for accuracy, experiment; reproduction and performance.; b. I think it is important to start the validation project, create a link; from the main SU2 web page to it, and than let it grow with the existing; mechanism of community contributions with approvals. Your list is very fine; for beginning. However I think we should strive to enrich it with 3D and; time dependent cases. I hope to be able to be in the loop and contribute to this important venue; Best; Eran; On Wed, Sep 19, 2018 at 8:26 PM Jayant Mukhopadhaya <; notifications@github.com> wrote:. > Hey everyone,; >; > Following the discussions at the SU2 Developers meeting this week, I; > wanted to start a conversation about compiling a comprehensive set of V&V; > cases for SU2 that can showcase it's performance in comparison to other; > solvers.; >; > I think the the NASA TMR website; > <https://turbmodels.larc.nasa.gov/index.html> is a good model to base it; > on. The idea would be to present the V&V case, provide working; > configuration and mesh files, and provide results comparing performance to; > other solvers and to higher fidelity data (when available). This allows; > people to see the performance of SU2 and replicate it, if need be.; >; > The first step would be compiling a list of cases that should be covered.; > The SU2 2014 SciTech paper; > <https://su2code.github.io/documents/SU2_AIAA_SciTech2014.pdf> would be a; > good starting point as it already had a couple of validation cases. This; > list can be bolstered with some of the NASA TMR cases, and with grid; > convergence studies. I would like to propose an initial list that the; > community can talk through and make changes as we see fit. I am mostly only; > familia",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423070900:222,test,test,222,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423070900,1,['test'],['test']
Testability,"Hi Josef,. This is an important issue that we need to solve, I going to double check; the problem and I'll keep you posted. Thanks for your interest in SU2,; Best,; Francisco. On Mon, Dec 19, 2016 at 5:44 AM, jschuele <notifications@github.com> wrote:. > Fetched developed branch and ran serial_regression.py. Got case FAILED; > with GCC for ls89_sa, centrifugal_blade, centrifugal_stage.; > With INTEL compiler on same platform get passed for ls89_sa,; > centrifugal_blade, centrifugal_stage but failed for statbeam3d. Strange are; > the differences for naca0012_def and most of the brick-tests with intel.; > They converge in significant fewer steps and are marked FAILED.; > Is it worthwhile to investigate the differences between GCC and Intel for; > the brick-cases?; > I'am asking, because I'm gone look to fasten calculations up with; > optimizations in the existing code for single core and perhaps MPI. Far; > goal, but really far, may be using GPUs as well. Currently I have a 15%; > improvement single core for RANS from the Comp&Fluids_129 paper. But of; > course the calculations should not only be faster but correct as well.; > Regards, Josef; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/347>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AEpklloul4VIZDvBs74KUwxxmcGMoBWDks5rJopSgaJpZM4LQvRv>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/347#issuecomment-270770408:590,test,tests,590,https://su2code.github.io,https://github.com/su2code/SU2/issues/347#issuecomment-270770408,1,['test'],['tests']
Testability,"Hi Josip,. in the current develop/master these features are still included. However, the plan is to remove these. The reason is simply because of maintenance. We have nobody that can spare time to test the current implementation. If you are willing to do this, please let use know. Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/348#issuecomment-268010192:197,test,test,197,https://su2code.github.io,https://github.com/su2code/SU2/issues/348#issuecomment-268010192,1,['test'],['test']
Testability,"Hi Lennaert, I've un-commented the items 'added a testcase' and 'added documentation'. We can use the testcase that you've worked on, and we can use one of your presentations as documentation, but it needs to be put somewhere.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1076#issuecomment-701523230:50,test,testcase,50,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-701523230,2,['test'],['testcase']
Testability,"Hi Lorena,. Sorry for the delay getting back to you. You are right, and the TestCases repository is starting to be huge, mainly because of the stuff that GitHub generates to track the files. Easy to maintain/access alternatives are very welcome. Some releases ago, the grids were in another place (or lab server) and in Github we only had the config files, unfortunately we checked that for some users it was frustrating to download the config files and then go to another place to download the grids. From our practical point of view, the current setting is ideal to run the regression tests. But we are open to any change that benefits the SU2 users/developers community. . Now, it is very easy to download and modify the TestCases (keep in mind that the options in the config files change frequently) but, the price to pay is a large GitHub repository that it is difficult to download if you don’t have a good internet connection. Anyway, I think you are coming to Stanford in one week, it would be great to chat with you. We would love to have you and your group as a SU2 developer/user. Looking forward to meeting you and thanks for testing SU2. Best; Francisco. ## . Dr. Francisco Palacios; Engineering Research Associate at Stanford University; AIAA Senior Member, SIAM Member, and SU2 lead developer; Editorial Board Member for Scientific Report (Nature Publishing Group); Intel Parallel Computing Center. Personal webpage: http://adl.stanford.edu/people/fpalacios.html; SU2 webpage: http://su2.stanford.edu/. Department of Aeronautics and Astronautics; Durand Building. Room 357; Stanford University; Stanford CA 94305; United States. On Feb 3, 2015, at 1:32 PM, Lorena A. Barba notifications@github.com wrote:. > And why is your Test repo so large?; > Perhaps some data files would be happier living elsewhere?; > ; > I'm thinking that if your Tests load large mesh files, for example, these mesh files could be placed in a data repository (like Figshare, Data Dryad, Zenodo), and your confi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/152#issuecomment-72909446:76,Test,TestCases,76,https://su2code.github.io,https://github.com/su2code/SU2/issues/152#issuecomment-72909446,3,"['Test', 'test']","['TestCases', 'tests']"
Testability,"Hi Monika,. We are in the V&V process of a new wall model LES implementation. Also, I took the opportunity to start fixing the RANS wall function since it will share the same code structure with the WMLES part, i.e. replace the wall shear stress in the NS fluxes. . We didn’t extensively test the RANS wall functions, only very limited test cases. It will be great if you could run your own cases using the following branch: . https://github.com/su2code/SU2/tree/feature_WallModelLES <https://github.com/su2code/SU2/tree/feature_WallModelLES>. Please let me know if you need additional help and looking forward to hear from you. Best,. Eduardo. > On 27 May 2020, at 11:30, monika1387 <notifications@github.com> wrote:; > ; > ; > Sure Juan! I would like to. Because I was running on RANS but I am working; > on LES to make this wall functions work which is not working either.; > Please let us know how we can support and work to get this working for LES; > simulation (wall models in SU2).; > ; > On Wed, May 27, 2020 at 12:29 PM Juan J. Alonso <notifications@github.com>; > wrote:; > ; > > Monika,; > >; > > There is a chance we could work together on this…Eduardo Molina (copied); > > co-advised a short project last year on wall functions which made some; > > progress but did not finalize an implementation. It may be a better; > > starting point. Eduardo, can you comment where that code went?; > >; > > I am also copying Matt S. who is interested in wall function; > > implementations in SU2. Perhaps we can get everyone on the same page to get; > > these working in the baseline state…and then improve them in various ways?; > >; > > Best,; > >; > > Juan; > >; > >; > > > On May 27, 2020, at 9:20 AM, monika1387 <notifications@github.com>; > > wrote:; > > >; > > >; > > > Sure, now make sense why it is showing issues, Thank you for the; > > > confirmation!; > > >; > > > On Wed, May 27, 2020 at 5:22 AM Pedro Gomes <notifications@github.com>; > > > wrote:; > > >; > > > > I gave the wall funct",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-635018259:288,test,test,288,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-635018259,2,['test'],['test']
Testability,"Hi Pedro, ; The following two configs are for a sinus motion using an elastic mesh in combination with farfield or rotating frame. ; Previous results: Looking at the CL, there used to be a difference of about 10%.; Current Results: Good agreement with only a small difference. Side note: Although the Naca0009 is a symmetric airfoil, my mesh appears to be not perfectly symmetric, resulting in non-zero lift at alpha=0.0 deg. I didn't look into this any further as the mesh is only a quick test case and symmetry probably not important for our problem. . [NACA0009_elastic.zip](https://github.com/su2code/SU2/files/11123420/NACA0009_elastic.zip); [NACA0009.zip](https://github.com/su2code/SU2/files/11123471/NACA0009.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1492161895:490,test,test,490,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1492161895,1,['test'],['test']
Testability,"Hi Pedro, I added the regresion tests, and mesh and restart to the `Testcases` repo (for which I opened a pull request)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2158#issuecomment-1795006762:32,test,tests,32,https://su2code.github.io,https://github.com/su2code/SU2/pull/2158#issuecomment-1795006762,2,"['Test', 'test']","['Testcases', 'tests']"
Testability,"Hi Pedro, sorry I'd forgotten to get to that one. I've just had a look through the logic again. Inside SetAiken_Relaxation, the predicted velocity is set which I think should keep the velocity update to be within the same time iteration, but if you think this still isn't actually the case let me know. Also, I've just spotted that inside Update in CFEAIteration, the logic for dynamic and/or fsi isn't complementary, so the separate ""else if"" handling for ImplicitNewmark_Relaxation isn't actually called at all. The SetDualTime_Solver which is called earlier in the same function in turn calls ImplicitNewmark_Relaxation so this hadn't been spotted earlier. I've removed the redundant else if statement... I've had to reintroduce this back since the regression tests for discadj_fsi and discadj_fsi_airfoil failed, which was a bit surprising since they are static fsi problems and the statements removed only considered problems with Newmark time integration.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-822094705:83,log,logic,83,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-822094705,3,"['log', 'test']","['logic', 'tests']"
Testability,"Hi Pedro, thanks for looking into this more. I had run into inconsistencies for FSI problems with relaxation which was the reason for the domain specific calls coming into the multizone driver Update function. With the changes I introduced, the velocity at the interface was being transferred correctly with and without relaxation, so I left it there but it is a bit messy. I'll test with the modified calls for the Relaxation as you suggest. I completely agree that if we can simplify the velocity transfer by just using the velocity directly, then we should. Especially since the predicted velocity is only zero order anyway.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-774993325:379,test,test,379,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-774993325,1,['test'],['test']
Testability,"Hi Pedro, thanks for the idea to update the windowing directly! I've updated addValue such that the values are added for new time only (replaces existing values if it is still the same time iteration). This is a lot simpler and very happy to remove the convoluted logic. The SetUpdate_Averages was still necessary though to pass the regression test for unsteady_cylinder_windowed_average.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1259#issuecomment-819111992:264,log,logic,264,https://su2code.github.io,https://github.com/su2code/SU2/pull/1259#issuecomment-819111992,2,"['log', 'test']","['logic', 'test']"
Testability,"Hi Pedro, thanks for updating the regression test and all the tidy up as well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1259#issuecomment-821894824:45,test,test,45,https://su2code.github.io,https://github.com/su2code/SU2/pull/1259#issuecomment-821894824,1,['test'],['test']
Testability,"Hi Pedro,. Do you know why this PR is failing during Travis? I looked at the test cases and both are unsteady using Roe? ; BTW, I will be happy to review this PR.; Eduardo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-506519519:77,test,test,77,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-506519519,1,['test'],['test']
Testability,"Hi Pedro,. I can confirm that everything is now working correctly. I have tested the sensitivities against gradients from finite difference runs and the results match very closely.; I owe you a big thank you for your help with this, not only has my problem been solved but you also helped me learn a great deal about how the code works. Really appreciate it.; If we ever meet one day then drinks are on me :); Cheers,; Amir",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/679#issuecomment-500911599:74,test,tested,74,https://su2code.github.io,https://github.com/su2code/SU2/issues/679#issuecomment-500911599,1,['test'],['tested']
Testability,"Hi Pedro,. SU2 Testcase repo has 3 supersonic TestCases under euler folder (wedge, biparabolic and bluntbody), they all go well without initialization (you may be already aware of these euler cases). But I do not have any specific supersonic case for RANS or Laminar flow problems (some of them ideally be like nozzle flow or SHOCK-BL interaction).; May be need to have a look at NASA CFD site for validation and verification cases. Best; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-500152158:15,Test,Testcase,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-500152158,2,['Test'],"['TestCases', 'Testcase']"
Testability,"Hi Pedro,; thanks for cleaning up Joel's code and creating the pull request. The disc_adj_fsi testcase is failing, I believe because of the relaxation. Probably you need to update the value of the test_case config and set the relaxation to 1.0 to recover the previous test. ; About the symmetric matrix class: Joel's implementation was indeed intended to populate the matrix needed for the RBF; the CSysMatrix would not be able to accommodate some terms due to the sparsity. It's well explained in the comments. Also, his implementation was only single-core. I agree that it would be very interesting to have some methods such as the cholesky decomposition available, but I think they would require some reworking (at least for parallelization).; I think this is a very valuable contribution, so it would be good to get more people on board to push it forward.; Cheers,; Ruben",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555#issuecomment-406847760:94,test,testcase,94,https://su2code.github.io,https://github.com/su2code/SU2/pull/555#issuecomment-406847760,2,['test'],"['test', 'testcase']"
Testability,"Hi Rocco, . My approach to test with both boundary conditions was rather crude. I just pasted back the Euler wall BC that was removed in #740 . You can see what I did if you look at the change to solver_direct_mean.cpp as part of the draft PR #833 . While debugging, it is easy to rebuild the code with true/false if statement as needed to swap between the two boundary conditions. Thanks for the 2D case with no grid motion comparison you’ve run. The two boundary conditions do seem to give the same result in this case and helps narrow down the search. However, I don’t think the differences are restricted only to 3D cases because with either non-zero rigid motion grid movement or deforming mesh, there are still differences in the 2D solution. Best wishes,; Charanya",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-563292392:27,test,test,27,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563292392,1,['test'],['test']
Testability,"Hi Rocco,; I used this mesh `<Testcases>/control_surface/mesh_ONERAM6_inv.su2` and the boundary marker names are a bit different in the mesh, compared to your provided config (WING vs LOWER_SIDE, UPPER_SIDE, TIP + SYMMETRY vs SYMMETRY_FACE). Can you shed some light on this?. Will the airfoil emit some vortex-shedding (or other unsteadiness) or will this converge in time to a steady-state solution? I am asking because I would like to see some longer running results until e.g. steady state, cylic shedding or maybe we'll see some chaotic behaviour in lift and drag. The initial transient through the domain based on the initial values is unphysical to some extend and if e.g. 'steady state' results are the same for both code versions .... the problem is not that big. Although it differs quite a bit in the temporal evolution tbh . In the results (also in the mail) it looks a bit like it approaches a steady state for Cl and CD. So maybe 1000 timesteps will tell us a bit more 🤔 . Another thing: There is no tag 6.0.2 😕 ... 6.0.1 and then 6.1.0..; And `both versions are/were on the develop branches` -> what exactly do you refer to here: config-files, code, mesh. Cheers 🐌 ; Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-559756575:30,Test,Testcases,30,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-559756575,1,['Test'],['Testcases']
Testability,"Hi Ruben,; Thanks for the tip it is passing the test now.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555#issuecomment-406877331:48,test,test,48,https://su2code.github.io,https://github.com/su2code/SU2/pull/555#issuecomment-406877331,1,['test'],['test']
Testability,"Hi Steve,. I think that all your contributions are very interesting, so please feel free to create a pull request. Only one comment, please be sure that you pull to the develop branch (not the master). We only use the master branch for releasing the code. Thanks again!. Best; Francisco. On Jan 11, 2015, at 7:34 AM, Steven Endres notifications@github.com wrote:. > By the way, I have another set up updates for you guys to consider that are ; > beyond the scope of this pull request. Let me know if you are waiting on me ; > to close the pull request or if you can do that. ; > ; > I put the recommended changes for the structure of config.py file in a gist ; > https://gist.github.com/spendres/7bbe6eb60fac1f2f148a that separates the ; > low level config errors validation. I also created a few unit test cases to ; > allow a controlled build up of regex checks without risk of breaking ; > previous bug fixes. ; > ; > Let me know ; > ; > Steve ; > ; > On Sat, Jan 10, 2015 at 11:34 PM, Steven Endres spendres@gmail.com wrote: ; > ; > > thanks for the commands ; > > ; > > On Sat, Jan 10, 2015 at 11:54 AM, Trent Lukaczyk <notifications@github.com ; > > ; > > > wrote: ; > > > ; > > > so now the file is being committed as deleted... please roll back to this ; > > > commit ; > > > spendres@6cbddbe ; > > > https://github.com/spendres/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520 ; > > > ; > > > here are the commands you can use -- ; > > > Reset the index to the desired tree ; > > > ; > > > git reset 6cbddbe ; > > > https://github.com/su2code/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520 ; > > > Move the branch pointer back to the previous HEAD ; > > > ; > > > git reset --soft HEAD@{1} ; > > > ; > > > git commit -m ""Revert to 6cbddbe ; > > > https://github.com/su2code/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520 ; > > > "" ; > > > Update working copy to reflect the new commit ; > > > ; > > > git reset --hard ; > > > ; > > > — ; > > > Reply to this email directly or vie",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/144#issuecomment-69612161:802,test,test,802,https://su2code.github.io,https://github.com/su2code/SU2/pull/144#issuecomment-69612161,1,['test'],['test']
Testability,"Hi Suman,; Regarding your config file: first you have to specify the turbulence model you would like to use (your config reads NONE right now), secondly you have to add the parameters for the computation of turbulent fluxes.; In this latter case I suggest you to have a look at one of the test cases in the ""rans"" folder.; This made your case working on my laptop, if you encounter any other issue don't hesitate to ask me. Cheers,; Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/401#issuecomment-308375305:289,test,test,289,https://su2code.github.io,https://github.com/su2code/SU2/issues/401#issuecomment-308375305,1,['test'],['test']
Testability,"Hi Sun5k,; Thanks for tackling the Transition models. As far as I see, you are adopting the CScalarSolver-Base style just as is done for the Turbulence or SpeciesTransport solver (cf #1330 #1388 ) :+1: I think you can stay close to how things are handled in these solvers. The Turbulence solver has another class in the middle though: `CScalarSolver -> CTurbSolver -> CTurbSST/SASolver` I am not sure whether sth like this makes sense for transition models? (because I have no clue of Transition models). Otherwise the CSpeciesSolver is directly based on the CScalarSolver. Please limit this PR to 1 model only! So in this case just the LM model maybe. It is much easier for you to wrap this PR up with a limited scope instead of trying to do everything at once :) (and it is easier to review for everyone else) In case you then still want to tackle another one once LM is done :D then just open another PR :+1:; ; As unfinished Transition models (or models with a questionable state) are a bit of a companion of SU2 I would also ask you to provide a meaningful testcase with this PR that proves the usability of this feature. I personally like to think of a suitable case at the beginning of development, to adopt a bit a Test-Driven-Development approach but that is of course fully up to you. In case you did not know about the Developers meeting each Wednesday 4pm Berlin time, now you do. You are kindly invited to ask any questions, just show-and-tell to get some feedback etc. it is a very open round :). Happy coding, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1496#issuecomment-1016451577:1062,test,testcase,1062,https://su2code.github.io,https://github.com/su2code/SU2/pull/1496#issuecomment-1016451577,2,"['Test', 'test']","['Test-Driven-Development', 'testcase']"
Testability,"Hi Tim and Ole,. First of all thanks for you great support! I noticed that the convergence of the compressible case was more difficult to obtain, compared to the incompressible case. After fixing this convergence I changed the scale factor for the incompressible and compressible case. I tested the scales 1e-6 up to 10 and 5e-6 up to 5, with a step size of 10. In this reply I posted the results of scale = 0.01, which is behaving properly for the compressible case (Scale 1 of compressible and the test cases of incompressible are not working as expected). During these tests I kept an eye on the surface_adjoint files and in contrary as what Ole expected; the compressible gives a more wavy result. However the deviation of the sens_adjoint of incompressible is huge compare to the compressible case. ![image](https://user-images.githubusercontent.com/21182966/28306613-4425789c-6ba0-11e7-8337-41a99e15ebd2.png). So if I am understanding correctly, in order to determine the sensitivity an initial deviation of the control points has to be set to determine the (dx/dC)-term. In which 'x' indicates discrete points and 'C' control points. . ![image](https://latex.codecogs.com/gif.latex?%5Cfrac%7B%5Cpartial%20J%7D%7B%5Cpartial%20%5Cvec%7BC%7D%7D%20%3D%20%5Cfrac%7B%5Cpartial%20%5Cvec%7Bx%7D%7D%7B%5Cpartial%20%5Cvec%7BC%7D%7D%5Ccdot%20%5Cfrac%7B%5Cpartial%20J%7D%7B%5Cpartial%20%5Cvec%7Bx%7D%7D). Tim do you mean with the current step size the step of dC ? Because the step of the discrete point is set on 0.001 (of_grad_cd.vtk). If you mean the control point step, then there should be a parameterization step in between as well in order to know the influence of dC to dx. This should give a difference in sensitivity results, however the sensitivities of the case of scale = 0.01 and of the case scale =1 are exactly the same (for the compressible and incompressible case). The values below are gradients of the file of_grad_cd.vtk from the compressible case. ![image](https://user-images.githubu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/409#issuecomment-316018103:288,test,tested,288,https://su2code.github.io,https://github.com/su2code/SU2/issues/409#issuecomment-316018103,3,['test'],"['test', 'tested', 'tests']"
Testability,"Hi Tim, I just created a branch feature_agglomeration_bugfix.; I'll make some more tests and submit a pull request later.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/276#issuecomment-252834092:83,test,tests,83,https://su2code.github.io,https://github.com/su2code/SU2/issues/276#issuecomment-252834092,1,['test'],['tests']
Testability,"Hi Tim, this sounds great, I agree we should get this merged as soon as possible.; I made some extra test and everything looks good to me. So far I didn't see any conflict with what I'm working on right now. ; Lets wait for some other review but on my side I'd say we can go ahead with this PR. ciao!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/327#issuecomment-262198303:101,test,test,101,https://su2code.github.io,https://github.com/su2code/SU2/pull/327#issuecomment-262198303,1,['test'],['test']
Testability,"Hi Tim,. Thanks!. I totally agree on the fact that Python-related functionalities could be in a separate file for code clarity. Anyway, considering only the C++ structure, those functionalities are still members of the CDriver (and all child classes). So if you are OK with the fact that having members of the same C++ class in different cpp files, I am OK too. . However, if you mean creating a new class for the Python wrapper (like CPyWrapper or whatever), and leave the CDriver ""clean"", this might be more tricky. Indeed, since the wrapper has to be a top-level class, it is better to have access to all the other main classes (config, geometry, solver, ...) and the CDriver was the perfect candidate (it instanciates all of them). So now if we create a new top-level class next to the CDriver, the direct link with all those classes is lost. Basically we will have to create accessors like CDriver::GetConfig(), CDriver::GetGeometry(), ... that will return the different containers to be used by the wrapper. Obviously this is possible but not in a short time, besides this might be a significant change in the top-level code structure. We could also think about exposing thoses CConfig, CGeometry, ... classes to Python in addition to just the driver, I already made some local tests and it worked great but this approach is less user-friendly. David",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/488#issuecomment-352045091:1284,test,tests,1284,https://su2code.github.io,https://github.com/su2code/SU2/pull/488#issuecomment-352045091,1,['test'],['tests']
Testability,"Hi Tim,; thanks, this is really useful. Let's wait until the test cases finish, but I agree, we should get this in sooner than later. The regression test issue is slowing us all down, definitely something to get fixed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/480#issuecomment-347835808:61,test,test,61,https://su2code.github.io,https://github.com/su2code/SU2/pull/480#issuecomment-347835808,2,['test'],['test']
Testability,"Hi Tim; Thanks for taking action on this - some folks on the forum had noticed related issues with one of the tutorials, and I agree, that either all the geometric functions should be on that list, or none of them.; From what I can tell, SU2_GEO appears not to use the objective_function option at all. One potential solution would be to get the python scripts to set some default value to objective_function for all the geometric functions. Unfortunately I don't have the time to test that out fully right now, do you have the time to look into that?. The tutorial that was having issues was ""Constrained Optimal Shape Design of a Fixed Wing"".",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/352#issuecomment-271168490:481,test,test,481,https://su2code.github.io,https://github.com/su2code/SU2/pull/352#issuecomment-271168490,1,['test'],['test']
Testability,"Hi Tobi, Well the thing is that currently we do not have sst1994 nor sst2003. We can implement both version and make one of them the default but in any case it means that the regression tests have to be recalibrated. And if you want to update 'everything' then we also need to redo the V&V cases and make the plots again - preferably with something in place that will auto-create these plots when something changes in the future.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1557#issuecomment-1060747618:186,test,tests,186,https://su2code.github.io,https://github.com/su2code/SU2/pull/1557#issuecomment-1060747618,1,['test'],['tests']
Testability,"Hi Tobi,. Great to see the same dynamic behaviour from both boundary conditions for the ONERA M6 case after the changes you've tested for the convective flux residuals. The differences seen in the dynamic results are important and since the change in boundary condition wasn't intended to cause these changes in the dynamic solution, I think we should be able to reproduce what we had originally. I think the same is also true for the problems with grid motion, as a minimum we should be able to reproduce the same result with the new boundary condition as we had with the old Euler wall. If it then comes down to choices of different convective schemes that we can employ with the new boundary condition then perhaps as further work the different available choices could be investigated to explore which option gives the most accurate result compared against references in literature?. I ran some tests for 2D cases with grid motion using both boundary conditions for us to use here. I started with the NACA64A010 airfoil @RoccoBombardieri tested, now with the pitching motion re-included, and looked at the periodic behaviour. [pitching_NACA64A010.zip](https://github.com/su2code/SU2/files/3963760/pitching_NACA64A010.zip). ![NACA64A010](https://user-images.githubusercontent.com/33747655/70848141-f7223b00-1e64-11ea-876c-0751b187fea4.png). Using the Euler wall boundary condition, the results still match exactly to @economon 's thesis (no real surprise as I suspect the code hasn't changed much for this comparison) and this agrees pretty closely with other inviscid reference results like Jamesons's unsteady flow past airfoils. With the symmetry plane, the results differ from the other inviscid solutions but the agreement to the experiment is better. I couldn't get hold of reference drag or moment results to compare against, therefore the comparison is only against lift. I also tested the pitching NACA 0012 airfoil using Batina's ""Unsteady Euler Airfoil Solutions Using Unstructured Dynami",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-565716260:127,test,tested,127,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-565716260,2,['test'],"['tested', 'tests']"
Testability,"Hi Tobi,. I ran some tests using the latest code in develop, as of Friday 6th December, but swapping between the symmetry plane boundary condition and the previous Euler wall boundary condition. Results are below, where firstly the steady results were very similar as Rocco mentioned. In time-domain, they look to converge to similar values but the difference in transient behaviour can be seen. The solutions were converged by about 8 orders of magnitude at each time step for both cases. I reran the current develop code with symmetry boundary condition forcing all the way to residual stalling as suggested for a few hundred time steps but I think the case was pretty well converged already and there is no difference with increased convergence. ![image](https://user-images.githubusercontent.com/33747655/70387595-e5412380-199e-11ea-96d2-f7ee447a8131.png); ![image](https://user-images.githubusercontent.com/33747655/70387599-effbb880-199e-11ea-81f4-5fd37ae9ebd8.png). Although it is good that the converged behaviour is similar for both boundary conditions, the difference in transient behaviour will have a large effect for coupled unsteady problems. . About the dynamic grid, the reason I spotted this was because the gradient verification against rigid motion with symmetry plane boundary condition was good but not as good as the gradient verification with Euler wall boundary condition (as well as having slightly different inherent sensitivity magnitudes between the two boundary conditions caused by the difference in transient behaviour). Therefore, this is perhaps missing something as I would have expected to see the same level of agreement in the sensitivities for the symmetry plane boundary condition as is seen for the Euler wall. I’ve added the results using both boundary conditions for a pitching airfoil case using efficiency as the objective function and FFD control points as the design variables. The differences are seen at the trailing edge (points 10, 11, 21, 22). ![imag",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-562931249:21,test,tests,21,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-562931249,1,['test'],['tests']
Testability,"Hi Tom, ; I just updated residual values, everything looks good to me and the code is working as I expect also in a few more tests I made.; Let me know if you think something needs to be changed in the code (more comments or whatever). cheers,; G",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/243#issuecomment-190123624:125,test,tests,125,https://su2code.github.io,https://github.com/su2code/SU2/pull/243#issuecomment-190123624,1,['test'],['tests']
Testability,"Hi Tom,. I just have the mesh for the LS89 test case in the NICFD folder.; (Apparently, I had to change the extension to attach the file here but just revert it to .su2).; Let me know. Giulio. [mesh_vki_turbine_prepbc.txt](https://github.com/su2code/SU2/files/2871791/mesh_vki_turbine_prepbc.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/652#issuecomment-464328382:43,test,test,43,https://su2code.github.io,https://github.com/su2code/SU2/pull/652#issuecomment-464328382,1,['test'],['test']
Testability,"Hi Tom,; I've consulted with our main TecIO developer, Dave Taflin, and the two of us are having a hard time finding the problem. There are a bunch of compile warnings in TecIO, but none of them look like they would cause the linker error. The actual error seems to be in the link of SU2, not the TecIO library. Could it be something I changed in the config stuff (configure.ac, m4/tecio.m4, or Makefile.am)?; Is it possible to get a more verbose error report for the linker?; Thanks!Scott Imlay; On Sunday, August 19, 2018, 2:44:12 PM PDT, Thomas D. Economon <notifications@github.com> wrote: ; ; ; It looks like our regression tests are failing during the compilation of TecIO on the Travis system (they use pretty standard Ubuntu builds). @ScottImlay: could you please take a look at the build errors when you have some time?. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub, or mute the thread.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/558#issuecomment-414463979:629,test,tests,629,https://su2code.github.io,https://github.com/su2code/SU2/pull/558#issuecomment-414463979,1,['test'],['tests']
Testability,"Hi again,. I am using the the Inviscid Bump in a Channel tutorial as a test case by changing the outlet boundary condition to Marker_Engine_Inflow. However, the boundary condition is still seems unstable even with very low damping values. It seems that the evaluation frequency of the marker's properties is tied to the screen write frequency through the following line:. bool Evaluate_BC = ((((config->GetInnerIter() % (config->GetScreen_Wrt_Freq(2)*40)) == 0)) || (config->GetInnerIter() == 1) || (config->GetDiscrete_Adjoint()));. which makes the minimum evaluation frequency 40. I believe 40 iteration seems to be too high, at least for this case. I have since added a new option to the code to control the evaluation frequency. I been experimenting with the evaluation frequency and the damping factor to get the marker to converge on the Mach Number on some of the cases. I will test this on larger case next week and i can get back to you on how those go as well. Finally, I am a bit of a novice and it is my first time ever using something like git. I have already created a fork of the master branch. Do i just make pull request to submit my changes or is there something else I should do?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2274#issuecomment-2102637760:71,test,test,71,https://su2code.github.io,https://github.com/su2code/SU2/issues/2274#issuecomment-2102637760,2,['test'],['test']
Testability,"Hi again,. Ok great, thank you for your answer! Based on a quick test, branch feature_polytropicGas seems to work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/398#issuecomment-306475609:65,test,test,65,https://su2code.github.io,https://github.com/su2code/SU2/issues/398#issuecomment-306475609,1,['test'],['test']
Testability,"Hi all!. I'm using SU2 v.7.0.3 to compute the flow field over a wing of particular shape and I'd need LM transition model to match experimental results. I already tried Spalart Allmaras with Bas-Cakmakcioglu without success. In the SU2 source code I found that classes for LM model are already defined, but when I try to activate it with the option:; KIND_TRANS_MODEL= LM; a bad termination error occurs during the Numerics Preprocessing phase. I posted this thread on the online CFD forum (https://www.cfd-online.com/Forums/su2/232347-info-current-status-lm-transition-model-su2.html) and it seems that the ""creation logic"" is broken and the code has to be fixed. I have been redirected here, since someone could possibly have already solved the problem. Thanks in advance for any kind of help!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1130:618,log,logic,618,https://su2code.github.io,https://github.com/su2code/SU2/issues/1130,1,['log'],['logic']
Testability,"Hi all, . I will be opening a number of issues that were raised during the Developers Meeting for discussion, to get things started. One interesting open question is **how many of the branches available in the repo are still active.**. My suggestion is that we all work together in having a list of branches with a short description in order to have an idea of where we stand. I would propose that all of you go through your feature branches and collect the following information about them:. - Branch name; - A two line description on the goal of the branch; - Status of the branch:; - Under active development (we are adding a new feature here); - Complete feature, (not necessarily up-to-date with develop); - In such case, latest compatible release; - Mature feature (not necessarily complete); - Test feature, still under consideration; - Test feature, discontinued; - Old feature / unknown status; - Can the branch be deleted?. This information would be very valuable, as maybe some people would be interested in continuing old developments, some repetitive work would also be avoided, and collaboration between complementary branches would be enhanced. I'm happy to help in collecting this information and later cleaning up the repository. Please let me know of your thoughts, but I think we should get this started asap.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/582:801,Test,Test,801,https://su2code.github.io,https://github.com/su2code/SU2/issues/582,2,['Test'],['Test']
Testability,"Hi all, hi @rsanfer,. I get a segfault when running SU2_SOL on problems with multiple Zones for the develop branch. Specifically from the Testcases I tried:; ; - `turbomachinery/APU_turbocharger/Jones_rst.cfg`; - `sliding_interface/rotating_cylinders/rot_cylinders_WA.cfg` (I saw a regression test failing for @economon which I was able to reproduce). I did some debugging and I think the code is wrong in `CBaseLineSolver::LoadRestart(...)` in solver_structure.cpp starting in line 3925. Inside that routine the `geometry` container is called as `geometry[iZone]` to address the final `C(Physical)Geometry` object. I think that the addressable level is the instance level i.e. it should be `geometry[iInst]`. ; As the Jones_rst case has two zones but only one instance the object `geometry[iZone=1]` in LoadRestart refers to what is `geometry_container[iZone=1][iInst=1]` in SU2_SOL.cpp - which does not exists and should be `geometry_container[iZone=1][iInst=0]`. Unfortunately it does not fail there directly for as it reaches (I guess) valid memory and simply interprets what it finds which leads to wrong evaluation of e.g. `GetnDim()=2376` or so. . I extracted a patch (apply with `patch -p1 < _patchfile_ ` in the root of the code directory) for the current develop branch which fixes the segfault problem for the above mentioned cases but I don't know whether it works correctly if multiple Instances are computed. ; [SU2_SOL_segfault_patch.txt](https://github.com/su2code/SU2/files/2328459/SU2_SOL_segfault_patch.txt) (github does not accept *.patch files...). Is there a testcase which covers multiple zones and multiple instances. At best with nZones!=nInstances? Can somebody confirm that this is actually a bug and if the patch fixes it? I probably don't know if it occurs somewhere else, so if somebody thinks their problems are related let me know. It is no problem to do a PR if I get some feedback. The (possible) bug was introduced here https://github.com/su2code/SU2/commit/1a75ebd0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/568:138,Test,Testcases,138,https://su2code.github.io,https://github.com/su2code/SU2/issues/568,2,"['Test', 'test']","['Testcases', 'test']"
Testability,"Hi all,. ## Proposed Changes; BC_Sym_Plane was written with only straight lines or planes as symmetry boundaries in mind. Therefore a constant unit normal was used. If symmetry as a slip wall in viscous flows is used the boundary in MARKER_SYM can have some curvature which results in a non-constant unit normal. This is fixed in this PR. Additionally viscous terms are removed from Euler wall and MARKER_EULER can not be used in viscous flows. Affected Regression tests:; a lot ... see a list in the Conversation below. ## Related Work; This PR is meant to resolve issue #735 opened by @EduardoMolina which was introduced by PR #657 . More details are in the issue. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740:465,test,tests,465,https://su2code.github.io,https://github.com/su2code/SU2/pull/740,2,['test'],"['test', 'tests']"
Testability,"Hi all,. As I am stepping through DA cases with my debugger I am cleaning some things left and right. No major changes. - making local vars const when possible; - moving the `config->GetBool` directly to the conditional instead of making it a var and using it 1 time; - removing dead code; - adding some comments; - some typos fixed. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1257:686,test,test,686,https://su2code.github.io,https://github.com/su2code/SU2/pull/1257,1,['test'],['test']
Testability,"Hi all,. I experimented a little bit with a different build system to replace automake/autotools. Although it works most of the time fine, it is cumbersome to work with. Especially when modifying the .am files and the configure.ac due to the complicated syntax. Furthermore it is relatively slow. One alternative would be cmake, however, the syntax is also not very comfortable and it has too many features which we actually don't need. . So I came across meson and ninja. It is lightweight and very easy to use (setting it up for SU2 took half a day, without any prior knowledge). Compilation time is faster because it builds all object files in parallel. Another advantage is that it is platform independent. Creating packages and binaries and also crafting releases is much simpler with this system (which we can exploit to automate the release process). It is also possible to embed our regression test framework into that process. . In case you want to try it out, checkout the branch **meson_build**. Everything needed is added as submodule (meson and ninja), so make sure to do a `git submodule update` to clone them. To configure and build use the following commands:. `externals/meson/meson.py build`; `./ninja -C build`. Please test it and give feedback. I have not tried it on windows or mac, so if you are using any of these OS, give it a try!. Note: automake and meson can co-exist together without any interference. So the old way of building SU2 still works in that branch.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685:902,test,test,902,https://su2code.github.io,https://github.com/su2code/SU2/issues/685,2,['test'],['test']
Testability,"Hi all,. I have downloaded SU2 and am testing this using Xcode. Because I am a newbie in Xcode, I can't run SU2 successfully.; When I build and run, I got the following message.; =============================================; configfile: File does not exist: inv_wedge_HLLC.cfg; Run with --help for more information.; Program ended with exit code: 105; =============================================. In my guess, I didn't designate correct path to cfg and mesh file.; But I don't know how to designate it. Sorry for wrong question, but it will be helpful for me to have the answer for this question. Thanks in advance.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/994:38,test,testing,38,https://su2code.github.io,https://github.com/su2code/SU2/issues/994,1,['test'],['testing']
Testability,"Hi all,. I made the ENUM_TURB_MODEL an enum class. I will add a few other small things in here. In case you have some minor cleanup commit feel free to push in here. Also made some turbSA+SST functions final where it was override previously. ## Related Work; #1220 #1242 and probably some others on the road to enum class. @suargi i hope this will not interfere to heavily with your work on the SA model things . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1404:1005,test,test,1005,https://su2code.github.io,https://github.com/su2code/SU2/pull/1404,1,['test'],['test']
Testability,"Hi all,. I noticed problems when using multiple inlet files: At the template values were mixed between the inlets because there is a (in my eyes) superfluous `sort` done. So the problem is just with the template-writing and would not happen if alphabetical and nMarker_all order between the inlet marker_tags were identical. This PR fixes this, at least for the tests I did over at #1388 where I will also add a inc+turb+2species-with-2-inlets reg test (and hopefully also non-dimensional). Inlet file non-dimensionalization: The inlet file writes dimensional values for the mean flow, and the values that are read are non-dimensionalized in the BC_Inlet routine itself -> I personally find this approach quite good, but I dont believe the SA+SST are adhering to that. See also [this cfd-online issue](https://www.cfd-online.com/Forums/su2/239313-inlet-profile-sst-nondimensional-treatment.html). I will try to fix this here as well.; - nu tilde is non-dimensionalized by multiplying with densityRef/viscosityRef (which I guess from the code); - TKE by multiplying with 1/VelocityRef^2 (which I guess from the code, and would fit with Feng Liu Non-Dim paper i have); - Omega ~~by multiplying with length_Ref/VelocityRef (which would fit with Feng Liu) or~~ by multiplying with ViscRef/(rhoRef*VelocityRef^2); Any info on this is appreciated.; My approach would be non-dimensionalize in the BC_Inlet routine for Turb as well to stay consistent with the mean flow, For the mean flow it has to be done like that because the meaning of the values is determined in the inlet routine. Otherwise one could do all that consistently a bit earlier. I have to remember to add a little hint to the laminar step tutorial to state that the inlet file should be dimensional. ## Related Work; https://github.com/su2code/SU2/pull/516 initial implementation. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -We",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1427:362,test,tests,362,https://su2code.github.io,https://github.com/su2code/SU2/pull/1427,2,['test'],"['test', 'tests']"
Testability,"Hi all,. When running `TestCases/incomp_navierstokes/streamwise_periodic/chtPinArray_2d/configMaster.cfg` with 4 cores, SU2 freezes after printing `Simulation Run using the Multizone Driver` to screen. No more screen or file output (e.g. history), but `top` shows that the processes are not idling and the respective cores are at ~100% workload. . Call `mpirun -n 4 SU2_CFD configMaster.cfg` and tell me if it is the same for you. I tested on on our cluster and my private machine with the same result and it also happens every time. They seem to run forever ... I let both setups run for an hour (on 3 cores it takes a couple of min to complete) without any change in what i see = no output + cores at 100%. With any other number !=4 for cores the code runs. When was it introduced? Not very very recent ... already there when #773 was merged . **Now to the debugging efforts:**; Happens in debug and release mode. I changed quite a few options to see if sth interesting happens (no turb model, velocity inlet and pressure outlet, changed linear solvers and permutated values all over the place) but no change there. . As it is just 4 cores I went attached to all processes with ; ```; mpirun -n 4 xterm -e gdb --args SU2_CFD configMaster.cfg; ```; And the backtraces show that 2 processes are waiting at:; <details>; <summary>this place</summary>. ```; #0 0x00002aaac3d5ec40 in hmca_bcol_basesmuma_bcast_k_nomial_knownroot_progress; () from /opt/mellanox/hcoll/lib/hcoll/hmca_bcol_basesmuma.so; #1 0x00002aaabf5ee590 in hmca_coll_ml_allgather (); from /opt/mellanox/hcoll/lib/libhcoll.so.1; #2 0x00002aaabf32f7e0 in mca_coll_hcoll_allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2b34e in PMPI_Allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000062fc74 in CBaseMPIWrapper::Allgather (sendbuf=0x214f670, ; sendcnt=1, sendtype=0x2aaaaafb4de0 <ompi_mpi_double>, recvbuf=0x213a400, ; recvcnt=1, recvtype=0x",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:23,Test,TestCases,23,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,2,"['Test', 'test']","['TestCases', 'tested']"
Testability,"Hi all,. lately I was fixing restarts. Making sure the adjoint also has a correct primal restart is somewhat annoying due to the way the residuals are printed to screen. I want to change that to look like a normal screen output of all residuals. Here the old variant on top and the new below (field names need to be adapted to usual screen output); ![image](https://user-images.githubusercontent.com/31306376/133253618-e20b6be0-fd29-4c03-96b5-a70f84f06523.png). The code as of today only changes this for single zone and does not use the usual output routines (and is a bit hacky). I want to add multizone and use the output routines instead of this handwritten PrintDirectResidual routine. I'll look into both. Let me know if there are reasons against this or any other comments. ## Related Work; The printing tool box of Tim. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1371:1180,test,test,1180,https://su2code.github.io,https://github.com/su2code/SU2/pull/1371,1,['test'],['test']
Testability,"Hi all,; i was having troubles with the navierstoke/flatplate regression test.; Using develop branch, on my local server sometimes I get different residuals due to a undefined behaviour during multi-grid construction. ; In particular the problem arises during the agglomeration process.; I pin-pointed this issue and it seems to be related to the fact that the variable ""Parent_CV"" is not set to an initial value. ; I solve this issue by setting it to 0 in the CPoint constructor (in dual_grid_structure.cpp). Could please anyone have a look into this to double-check it?; To reproduce this issue I just run the test case multiple times and once every while I got different values of CFL at the lowest MG level.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/314:73,test,test,73,https://su2code.github.io,https://github.com/su2code/SU2/issues/314,2,['test'],['test']
Testability,"Hi all. May I just add to Edwin comment: some of you have seen the tests that I; made with SUmb (structured mesh code) using the adaptive WF: Results using; the JST scheme were definitely off, while upwind +WF converged reasonably; to wall-resolved results. Naturally this conclusion is strongly coupled; with the specific discretization and implementation so it might not apply; to a SU2 implementation. I suggest to keep working on the Carlson; formulation (due to FUN3D-SU2 similarities mentioned above) and hopefully; extend it to adaptive WF as a second step.; I'll be happy to be on board of his effort.; Best regards,; Eran. On Fri, Jun 9, 2017 at 7:49 AM, Edwin van der Weide <; notifications@github.com> wrote:. > Juan, all,; >; > The adaptive wall function formulation as described in the paper of Medic; > et al. has two serious issues. First, the convergence stalls after three; > orders of magnitude or so and second it only works with an upwind; > discretization of the inviscid fluxes. For some reason JST type of schemes; > gave rather poor results. In order to have a reliable implementation, both; > issues need to be addressed. Unfortunately, we never did.; >; > Edwin; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/399#issuecomment-307294686>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/APKNmwNgNVmXDYW_tqtQzvpDvxGe4OeLks5sCM7ugaJpZM4NvG6w>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-307303905:67,test,tests,67,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-307303905,1,['test'],['tests']
Testability,"Hi everyone, . I am interested in this problem. Are there any news from your side @sun5k ? . I may try to help in running some test cases or changing the code if needed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-2244988261:127,test,test,127,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-2244988261,1,['test'],['test']
Testability,"Hi everyone, glad this subject is of interest. I will try to make that test case. I edit my earlier comment to avoid a mess. So I changed the terms. Still not sure but the derivation is simple. source term viscous = (0, tau_xy, tau_yy - tau_thetatheta, u* tau_yx + v* tau_yy - q)/y, right?. then from Bird:. ![IMG_20201027_115003](https://user-images.githubusercontent.com/55834287/97291927-d9767e00-184a-11eb-9418-a3ace3e3a077.jpg). bulk viscosity = 0, any derivative wrt theta = 0. For the generalised inviscid part I am pretty sure it is all correct including the jacobian. You can compare with very similar terms in any generalised flux jacobian like in Glaister's paper https://www.sciencedirect.com/science/article/pii/002199918890174X",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1095#issuecomment-713564781:71,test,test,71,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-713564781,1,['test'],['test']
Testability,"Hi everyone. I am working in SU2. I want to find the hotspot of Euler solver code () in SU2. knew to run a Test case Inviscid Bump in a Channel (A simulation of internal, inviscid flow through a 2D geometry). Have anyone worked for profiling of SU2 already ? kindly share your experience on the same.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1406:107,Test,Test,107,https://su2code.github.io,https://github.com/su2code/SU2/issues/1406,1,['Test'],['Test']
Testability,"Hi everyone. I have used both the early version of SU2 with pyAMG (python2) and the latest SU2-feature_adap branch with python3. We have even ported its mesh adaptation implementation to the GAMMA mesh format due to geometry topology issues. ; ; However, there are two adapt options in the python implementation (ADAP_BACK, ADAP_SOURCE) and l could not still figure out how to use it because l don't know what kind of data file l should provide. For ADAP_BACK I have tried to use mesh files similar to the original volume mesh file with edges/corners in binary format (meshb) and it generally fails on complex geometries (with no ADAP_BACK option, it works nicely). Therefore, l am not sure whether l am providing the correct data file. This data file has to be only surface file with high order elements or just a volume mesh? . ADAP_SOURCE is completely mistery to me. Not much explanation inside the python code. I should also say that l don't understand the following command either. config_amg['options'] = config_amg['options'] + ' -inv-back'. Can someone please explain these plainly. I have also looked and feature_adapt Test files folder but unfortunately these options are closed and its data files are missing.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2119:1129,Test,Test,1129,https://su2code.github.io,https://github.com/su2code/SU2/issues/2119,1,['Test'],['Test']
Testability,"Hi guys, ; sorry for re-opening this request, I have a brief question for you Daniel.; In the test case you added I see that there are some numbers that look weird to me (the free-stream pressure is 17 Pa and density is 0.00021). Since I modified the HLLC solver, which is used in this particular test case, I'm having troubles in passing this regression tests. Are those values correct? . Cheers,; Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/232#issuecomment-181467187:94,test,test,94,https://su2code.github.io,https://github.com/su2code/SU2/pull/232#issuecomment-181467187,3,['test'],"['test', 'tests']"
Testability,"Hi guys, sorry to open up this thread again, but looks like something is going wrong in parallel_regression.py.; Residuals are ok, and that's why travis doesn't throw any error, but I see some errors in logs for parallel execution. Was this expected?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/325#issuecomment-261960965:203,log,logs,203,https://su2code.github.io,https://github.com/su2code/SU2/pull/325#issuecomment-261960965,1,['log'],['logs']
Testability,"Hi!. Currently I am optimizing 2D airfoil models for my master thesis. I did a small test with a naca0012 at AOA of 0 degree (Re = 0.7e6) just to check whether the optimization process works for this incompressible case.; I changed the objective function to drag, without any constraints. I aspected the optimizer to deform the airfoil shape untill a flat plate is reached, but this is not the case. It creates approximately 14 designs and after the 14th design, it starts over and it calculates the first design again. Furthermore the 14th design was just a small adjustment on the 1st design.; I am wondering whether there is an inbuild constraint in the code, which prevents the code to flatten out the airfoil totally. Kind regards,. Floris van der Schuur",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/337:85,test,test,85,https://su2code.github.io,https://github.com/su2code/SU2/issues/337,1,['test'],['test']
Testability,"Hi!. I hope you can answer this question, because it's basically what I need for checking if I can use SU2 for my simulations or not, and I'd rather look for other CFD codes if this is not currently implemented in SU2:. I need to run a case (over time, unsteady, or steady for each timestep) for an incompressible natural convection lid-driven cavity in 3D, where the values of the BCs change for each timestep. . This test has no inlets, but it has a speed BC for the lid at the top, and BCs for the walls as well. The (time-dependent) unit vector and magnitude of the speed for the lid is tabulated, for each timestep, on a external file. The (time-dependent) temperature at each point in each wall is also tabulated, for each point in the walls and for each timestep, on a external file. So the question is: Can SU2 currently import data like this? I only saw this feature for inlets, but not for other types of BCs... is it implemented, or not?. Thanks a lot! As I said at the beginning, it will help me a lot to know if this is possible, so that I look elsewhere if it's not!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/973:419,test,test,419,https://su2code.github.io,https://github.com/su2code/SU2/issues/973,1,['test'],['test']
Testability,"Hi!; I am currently testing the case inside [TestCases/disc_adj_turbomachinery/transonic_stator_2D](https://github.com/su2code/SU2/tree/master/TestCases/disc_adj_turbomachinery/transonic_stator_2D); When I use the command ; ```shell; SU2_CFD -d transonic_stator.cfg; ``` ; The output contains Description information that seems inconsistent with the previous names. Could there be an error here? ; ![image](https://github.com/su2code/SU2/assets/70613699/714d56eb-cdd3-463d-a48e-538792c753c1). Examining the source code, I found that the issue arises at line 4054 in the [CFlowOutput.cpp](https://github.com/su2code/SU2/blob/master/SU2_CFD/src/output/CFlowOutput.cpp) file. This is my first time asking a question here, and I really appreciate receiving your response.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2236:20,test,testing,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/2236,3,"['Test', 'test']","['TestCases', 'testing']"
Testability,"Hi, . I have been running a simulation with CGNS mesh format from the provided test cases using the last version, SU2 - 3.2.0. The test case was Euler flow simulation over a wedge using the HLLC scheme. The point is that everything going well with the native mesh format, su2, in both parallel and serial, but with the cgns mesh format only in serial the simulation starts. In parallel, the bad termination error comes up exactly after Solution Postprocessing. I checked out with 2.0.10 and had no problem. The details are provided in the following. ``` Python; ===================================================================================; = BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES; = EXIT CODE: 1; = CLEANING UP REMAINING PROCESSES; = YOU CAN IGNORE THE BELOW CLEANUP MESSAGES; ===================================================================================; Traceback (most recent call last):; File ""parallel_computation.py"", line 117, in <module>; main(); File ""parallel_computation.py"", line 62, in main; options.divide_grid ); File ""parallel_computation.py"", line 103, in parallel_computation; info = SU2.run.merge(config); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 70, in merge; merge_solution(konfig); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 96, in merge_solution; SU2_SOL( config ); File ""~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 240, in SOL; run_command( the_Command ); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 277, in run_command; raise Exception , message; Exception: Path = /~/SU2/code/320/release/SU2_PY/,; Command = mpirun -n 4 /usr/local/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '1'; ```. Checked out the traceback error in the merge and interface python files, but couldn't figure it out. Is there any problem with the SU2_SOL.cpp? ; I appreciate your help for finding the source. Bests,; PDP",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/40:79,test,test,79,https://su2code.github.io,https://github.com/su2code/SU2/issues/40,2,['test'],['test']
Testability,"Hi, . this PR adds streamwise periodic flow (incl energy eq) for the incompressible solver. For a more detailed information please see the [website additions](https://github.com/su2code/su2code.github.io/pull/53) including a tutorial and theory section. ~half of the lines is .cfg's as those CHT setups require a bit more real estate. So the actual code is not too long. Here a squash merge could be done as it merged develop quite a few times and has a bunch of 'small fix' commits. But to my knowledge that is not really necessary as. I am ready to pass on the red lantern to someone else 🐌 . ## Related Work; This work builds directly on #652 of @economon. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/773:970,test,test,970,https://su2code.github.io,https://github.com/su2code/SU2/pull/773,1,['test'],['test']
Testability,"Hi, ; So I am assuming you are not so familiar with using git, so here is what you need to do.; If you follow the link [#2296](https://github.com/su2code/SU2/pull/2296/files) and go to the section 'files changed' you can see that it's quite a lot of changes. The changes are currently added (merged) to the 'develop' branch (when you follow the link you can see this message). So what you need to do is update your github repository. ; I assume that you already have a local copy of SU2 and that you obtained this from github using ; `git clone https://github.com/su2code/SU2.git`; You switch to the develop branch:; `git checkout develop`; you update your develop branch:; `git pull`; now you have all changes, and you need to recompile.; There is an example in TestCases/py_wrapper/custom_inlet that you could use.; For completeness, here is a link to the docs: https://su2code.github.io/docs_v7/home/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1079#issuecomment-2179501396:763,Test,TestCases,763,https://su2code.github.io,https://github.com/su2code/SU2/issues/1079#issuecomment-2179501396,1,['Test'],['TestCases']
Testability,"Hi, @cjz667. When I tried lid driven cavity case with default setting and switching ROE to AUSMPLUSUP, I got the following error - Error in “void CSyssolve::ModGramSchmidt(int.........; SU2 has diverged (It ran for 2 iterations). Reduced the CFL to 0.5 (originally 2.0), it runs fine.; But it is going to take more number of iterations.; This issue was noted earlier as well and reason behind that is inconsistent Jacobian (Roe here) with AUSM family of schemes. This restricts the allowable CFL number to a lower values for these scehemes. For low speed flows u may have to use smaller value of CFL with these two schemes. . Dr. Padro (pcarruscage) has done some work in this direction and implemented hybrid Jacobian for some of these schemes (available in develop branch) , which improves this situation and u can try higher CFL. I have also worked out analytical Jacobian and will be pushing in future release. I hope you can go with reasonable CFL for majority of the other cases, where Mach number is not too small.; I have added one Testcase for high speed flow past blunt body in testcase folder /euler/bluntbody, which uses AUSMPLUSUP. Give a try with other cases, I have tried many in RANS, NS, EULER.; Hope this help. . Regards ; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/628#issuecomment-522656848:1040,Test,Testcase,1040,https://su2code.github.io,https://github.com/su2code/SU2/pull/628#issuecomment-522656848,2,"['Test', 'test']","['Testcase', 'testcase']"
Testability,"Hi, I think it is because our vectorization wrapper does not support ARM yet.; This makes the default SIMD array type have only 1 element, so t[1] in that unit test does not exist basically, using t[0] should pass the test.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1609#issuecomment-1103591559:160,test,test,160,https://su2code.github.io,https://github.com/su2code/SU2/issues/1609#issuecomment-1103591559,2,['test'],['test']
Testability,"Hi, I was about to open a pull request with the same exact implementation. I can help with the review and validation cases.; I am running test for an inviscid supersonic flow past a diamond airfoil and I am about to run some test on the RANS ONERA M6 wing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2006#issuecomment-1500021072:138,test,test,138,https://su2code.github.io,https://github.com/su2code/SU2/pull/2006#issuecomment-1500021072,2,['test'],['test']
Testability,"Hi, I'm opening a new thread since it seems that this issue isn't directly related to the AMG mesh refinement itself, but feel free to close or move this to a more appropriate place @pcarruscag . I'm having an issue when running `SU2_CFD` in the `feature_adap` branch (so this means that it also fails when trying to run the mesh refinement script). It seems to run fine for the `TestCase/euler/naca0012` but when I try it on my mesh I get a `UCX ERROR`. On running: `mpirun -n 40 --use-hwthread-cpus /opt/su2/SU2v7_adap/bin/SU2_CFD test.cfg`, I seem to get variations on this message in my screen output:; ```; | 49| -2.095057| 0.015781| 0.001431| 0.000000| 9.1667e+04|; | 50| -2.140503| 0.015781| 0.001431| 0.000000| 9.1667e+04|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; |Paraview binary |flow.vtk |; |Paraview binary surface |surface_flow.vtk |; [1609922278.175246] [super:1134625:0] sock.c:344 UCX ERROR recv(fd=56) failed: Bad address; [1609922278.175301] [super:1134625:0] sock.c:344 UCX ERROR recv(fd=54) failed: Connection reset by peer; [1609922278.175551] [super:1134625:0] sock.c:344 UCX ERROR sendv(fd=-1) failed: Bad file descriptor. SU2_CFD: ../externals/parmetis/libparmetis/match.c:243: libparmetis__Match_Global: Assertion `k >= firstvtx && k < lastvtx' failed.; [super:1134138] *** Process received signal ***; [super:1134138] Signal: Aborted (6); [super:1134138] Signal code: (-6); [super:1134138] [ 0] /lib64/libpthread.so.0(+0x12b20)[0x7fb93d021b20]; [super:1134138] [ 1] /lib64/libc.so.6(gsignal+0x10f)[0x7fb93c1507ff]; [super:1134138] [ 2] /lib64/libc.so.6(abort+0x127)[0x7fb93c13ac35]; [super:1134138] [ 3] /lib64/libc.so.6(+0x21b09)[0x7fb93c13ab09]; [super:1134138] [ 4] /lib64/libc.so.6(+0x2fde6)[0x7fb93c148de6]; [super:1134138] [ 5] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9be03]; [super:1134138] ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156:380,Test,TestCase,380,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156,2,"['Test', 'test']","['TestCase', 'test']"
Testability,"Hi, Komahan, ; I also noticed this error in fsi_computation.py. And this error was fixed by adding a periodic boundary condition. For example: ; Adding one line in parser part:; `parser.add_option(""--periodic"", dest=""periodic"", default=""False"", help=""Define whether the problem has periodic boundary conditions"", metavar=""PERIODIC""); `; And the Line 109 changes to; ` FluidSolver = pysu2.CFluidDriver(CFD_ConFile, 1, FSI_config['NDIM'], options.periodic, comm)`. However, when I want to run the basic fsi coupling of two-dimensional pitching-plunging NACA 0012 airfoil by using the 'TESTER' CSD Solver 'PitchPlungeAirfoilStructuralTester', another error occurs. If I run by typing:; `fsi_computation.py -f FSICoupler_config.cfg`; This gives the following error:; `***************************** Initializing fluid solver *****************************; ('A TypeError occured in pysu2.CSingleZoneDriver : ', TypeError(""in method 'new_CFluidDriver', argument 5 of type 'SU2_Comm'"",)); ERROR : You are trying to launch a computation without initializing MPI but the wrapper has been built in parallel. Please add the --parallel option in order to initialize MPI for the wrapper.; `. If I run in parallel by typing:; 'fsi_computation.py -f FSICoupler_config.cfg --parallel'; This works without error but the program stops at Mapping fluid-solid interfaces; `***************************** Mapping fluid-solid interfaces *****************************; Building interpolation matrices...; `. Here I upload the config files and the mesh, hope someone can notice those bugs and help to solve. Best!. [2d_coupled_fsi.zip](https://github.com/su2code/SU2/files/3790605/2d_coupled_fsi.zip); includes:; FSICoupler_config.cfg, NACA0012RANS_FullHexa.su2, StructuralTester_config.cfg, SU2_config.cfg",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/642#issuecomment-548054290:583,TEST,TESTER,583,https://su2code.github.io,https://github.com/su2code/SU2/issues/642#issuecomment-548054290,1,['TEST'],['TESTER']
Testability,"Hi, SU2 developers,. I recently working on the flapping wing using SU2. Since the Mach number is much smaller than 0.3, I use the incompressible solver with pitching mesh deformation to simulate the flapping. . In the testcases folder, you guys provide the plunging of NACA0012 in compressible NS flow. I modified it into pitching of NACA0012 in incompressible NS flow by adding and changing keywords:. ``` matlab; REGIME_TYPE = INCOMPRESSIBLE; % ----------------------- DYNAMIC MESH DEFINITION -----------------------------%; %; % Mesh motion for unsteady simulations (NO, YES); GRID_MOVEMENT= YES; %; % Type of mesh motion (NONE, FLUTTER, RIGID_ROTATION, RIGID_PITCHING); GRID_MOVEMENT_KIND= DEFORMING; %; MARKER_MOVING = ( airfoil); %; % Coordinates of the motion origin; MOTION_ORIGIN_X= 0.25; MOTION_ORIGIN_Y= 0.0; MOTION_ORIGIN_Z= 0.0; %; % Pitching angular freq. (rad/s) about the motion origin; PITCHING_OMEGA_X= 0.0 ; PITCHING_OMEGA_Y= 0.0; PITCHING_OMEGA_Z= 106.69842; %; % Pitching amplitude (degrees) about the motion origin; PITCHING_AMPL_X= 0.0; PITCHING_AMPL_Y= 0.0; PITCHING_AMPL_Z= 30; %; % Pitching phase offset (degrees) about the motion origin; PITCHING_PHASE_X= 0.0; PITCHING_PHASE_Y= 0.0; PITCHING_PHASE_Z= 0.0; ```. When running this cfg file, the terminal prints. ```; ------------------------------ Begin Solver -----------------------------. Updating surface positions.; Storing translating displacement for marker: airfoil.; Translational velocity: (0, 0, 0) m/s.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; Storing plunging displacement for marker: airfoil.; Plunging frequency: (0, 0, 0) rad/s.; Plunging amplitude: (0, 0, 0) degrees.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/193:218,test,testcases,218,https://su2code.github.io,https://github.com/su2code/SU2/issues/193,1,['test'],['testcases']
Testability,"Hi, all. This PR is for implementing various transition models, which are composed of 1~2 additional transport equations. List of wishes to implement transition model : . - [Langtry and Menter model](https://doi.org/10.2514/1.42362) ; - [k-w-gamma](https://doi.org/10.1016/j.paerosci.2012.08.004); - [SA-AFT](https://doi.org/10.2514/6.2019-0039). Now working on : ; - Langtry and Menter model. ## Related Work. LM feature -> development. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1496:1030,test,test,1030,https://su2code.github.io,https://github.com/su2code/SU2/pull/1496,1,['test'],['test']
Testability,"Hi, can you share the testcase? At least the config so we can try to replicate the problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-623634949:22,test,testcase,22,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-623634949,1,['test'],['testcase']
Testability,"Hi, thanks a lot for contributing, this is a very interesting and useful implementation. . Unfortunately something strange has happened with the git diff tool and the merging is not possible... it seems that is trying to update the driver subroutine with an old version of SU2. I'm very sorry about this but, would you be so kind to reimplement the changes in a clean copy of the developer's branch? so... only the relevant changes of your implementation will be added to SU2?. Just to check that nobody if going to break your implementation. In this case, I think it is also important to add a regression test. Could you please add one example that travis can control?. Thanks a lot for your hard work!. Best,; Francisco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/443#issuecomment-331645981:606,test,test,606,https://su2code.github.io,https://github.com/su2code/SU2/pull/443#issuecomment-331645981,1,['test'],['test']
Testability,"Hi,. Comp/Inc/Nemo output all had the same RMS_TKE etc output -> now this is done once in CFlowOutput and Comp/Inc/NemoOutput only call sth like `SetHistoryOutput_Turb` in their respective `SetHistoryOutput`. this is just a cleanup and shouldnt change too much. I do this in anticipation of addition of Species related output which I dont want to repeat. So #1388 will use the same concept. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1449:1000,test,test,1000,https://su2code.github.io,https://github.com/su2code/SU2/pull/1449,1,['test'],['test']
Testability,"Hi,. I observed similar restart issues for multigrid restarts when working with the discrete adjoint solver for Euler test cases.; Here, I created a reproducible setting with the NACA 0012 Euler case (mesh from the tutorials). **Describe the bug**; The primal solver works fine and for the restart there are no issues. ; However, after an adjoint restart, the residuals are completely different.; As a demonstration I run the discrete adjoint solver:; (1) 110 step and (2) 105 steps and restart for 5 steps. Residual output for the last 10 steps of (1):; | 100| -5.321370| -10.661410|; | 101| -5.351074| -10.692532|; | 102| -5.381256| -10.724276|; | 103| -5.411925| -10.756667|; | 104| -5.443087| -10.789731|; | 105| -5.474745| -10.823494|; | 106| -5.506899| -10.857980|; | 107| -5.539545| -10.893213|; | 108| -5.572670| -10.929211|; | 109| -5.606253| -10.965987|. Residual output for (2):; last 5 steps before restart; | 100| -5.321370| -10.661410|; | 101| -5.351074| -10.692532|; | 102| -5.381256| -10.724276|; | 103| -5.411925| -10.756667|; | 104| -5.443087| -10.789731|; 5 steps after restart; | 0| -2.958579| -8.264492|; | 1| -3.071182| -8.366287|; | 2| -3.165074| -8.453816|; | 3| -3.237963| -8.506268|; | 4| -3.293038| -8.552713|. When multigrid is turned of I could not observe a jump in residuals after the restart for this test case. **To Reproduce**; Use the NACA012 Euler mesh from the tutorial and the config file: [config.cfg.txt](https://github.com/su2code/SU2/files/8089442/config.cfg.txt); Converge the flow solver and then run the discrete adjoint for 105 steps and restart. **Desktop (please complete the following information):**; - OS: Linux, Fedora 34; - C++ compiler and version: gcc version 11.2.1; - MPI implementation and version: mpirun (Open MPI) 4.1.0; - SU2 Version: current develop",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1549#issuecomment-1043026024:118,test,test,118,https://su2code.github.io,https://github.com/su2code/SU2/issues/1549#issuecomment-1043026024,2,['test'],['test']
Testability,"Hi,. I would like to test your improvements on a couple of different clusters. Could you please rebase once more on the latest commit in the develop branch? That way, we can run the regressions again to make sure everything is ok before merging. Any other volunteers in the community willing to run this request on clusters of their own to help verify that the Python framework functions well on a variety of platforms?. Thanks!; Tom",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/260#issuecomment-223806568:21,test,test,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/260#issuecomment-223806568,1,['test'],['test']
Testability,"Hi,. Possibility to give the Heatflux over a boundary in [W] instead of [W/m^2]. This was already possible in the HeatSolver but now also in Inc and Comp flow solvers.; Prescribing a fixed Watt is especially useful in optimization scenarios with Temperature OF where otherwise the optimizer can exploit that a smaller boundary almost certainly yields smaller Temperatures. The necessary SurfaceAreas are computed and stored in CGeometry instances which is computed once at program start by a call from the Driver. I also added NEMO for this feature. There is currently no Testcase which uses `INTEGRATED_HEATFLUX= YES` so one might want to change that :grimacing: :shushing_face: . For the HeatSolver this was originally introduced at some point by @oleburghardt . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1530:572,Test,Testcase,572,https://su2code.github.io,https://github.com/su2code/SU2/pull/1530,2,"['Test', 'test']","['Testcase', 'test']"
Testability,"Hi,. Some necessary changes for the species transport solver to work nicely with the Discrete adjoint solver. So it is the same structure that was Introduced for CFlowOutput but now it is CAdjFlowOutput.; - generalize turb+species output for Comp/Inc/NEMO away into a parent class to avoid duplication (Done); - Make More OF available such that one can actually use the DA solver; - Add a Gradient validation + Optimization FADO template plus add DA regression tests (or tutorials 🤔 I think I will make a tutorial thing for this); - Some smaller fixes to the previous PR. ## Related Work; directly following #1388 where the majority of adjoint work for the species solver was already done. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1461:461,test,tests,461,https://su2code.github.io,https://github.com/su2code/SU2/pull/1461,2,['test'],"['test', 'tests']"
Testability,"Hi,. Thank you for your quick answer, It indeed seems that I had some parameters that were passed that did not match su2 version 7.0.3. I am experiencing an issue while running the mesh adaptation process in SU2. The process starts but fails during the mesh generation phase, leading to a FileNotFoundError. I am looking for assistance in resolving this error.; `; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (100, 200, 300); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 200; PYADAP_HMIN : 1e-8; PYADAP_HGRAD : 1.3; PYADAP_RESIDUAL_REDUCTION : (3, 3, 3); PYADAP_FLOW_ITER : (500, 500, 500). ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided. Starting mesh adaptation process. Iteration 0 - Mesh size coefficient 100.0; (1/2) Generating adapted mesh using AMG; AMG done: ; Running CFD; Traceback (most recent call last):; File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/path/to/SU2/install/bin/SU2/run/amg.py"", line 466, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.dat' -> 'flo_ini.dat'`. and it0 folder is created, with some log.err and log.out, but they are empty, . I would appreciate any guidance or suggestions on how to resolve this issue. Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-1855842105:1505,log,log,1505,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1855842105,2,['log'],['log']
Testability,"Hi,. The structure of fsi_computation.py is completely different from the one of parallel_computation(_fsi).py, this one is just a script that, if I am right, will set for you the commands in order to launch SU2_CFD in parallel and SU2_SOL right after. It is based on system calls ( it is like calling mpirun -np xx SU2_CFD SU2conf.cfg and mpirun -np xx SU2_SOL SU2conf.cfg). The fsi_computation.py has to be considered as an executable, and thus has to be launched with the mpirun command for parallel run:. $ mpirun -np XX fsi_computation.py -f FSIConfig.cfg --parallel. You have to specify the FSI configuration file (see examples in TestCase) with -f, and the --parallel option is mandatory (only if SU2 has been built in parallel). XX is the number of procs. Hope this helps,. David",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/457#issuecomment-339026305:637,Test,TestCase,637,https://su2code.github.io,https://github.com/su2code/SU2/issues/457#issuecomment-339026305,1,['Test'],['TestCase']
Testability,"Hi,. Unfortunately the logic is quite confuse but I think that part of the code is correct, SU2 just want to use an updated version of the limiter for the turbulence variables. ` if (config->GetSpatialOrder() == SECOND_ORDER_LIMITER) SetSolution_Limiter(geometry, config);; `; and for the flow variables. ` if (limiter_flow) solver_container[FLOW_SOL]->SetPrimitive_Limiter(geometry, config);; `. Another story is if that is really worth it and we should use the values from the previous iteration. Remember that we compute the turbulence variables after updating the flow variables... so... from the theoretical point of view it makes sense to have an updated value for the limiter. However this is not 100% accurate because we are using old gradients to compute the new limiter. Anyway, the spirit is to have a limiter computed using the latest flow variables value and we should probably check that the gradients have been also updated before computing limiters again for the turbulence equation. What I don't really like is Upwind_Residual. ` bool limiter = (config->GetSpatialOrder() == SECOND_ORDER_LIMITER);; `. in this case we are using only the info about limiters or not in the turbulence model... so if, for example, we are using JST for the mean flow equations then the limiter for the flow equations have never been computed and. ```; if (limiter) {; FlowPrimVar_i[iVar] = V_i[iVar] + Limiter_i[iVar]*Project_Grad_i;; FlowPrimVar_j[iVar] = V_j[iVar] + Limiter_j[iVar]*Project_Grad_j;; }. ``` . Is incorrect because Limiter_i has never been computed (if we are lucky maybe we are using a zero value by default... but we need to check). In other words, I think this require a deeper look. @jschuele, could you please think on this and submit a new pull request (I'll close this one). If you don't have time, please let me know and we really appreciate if you could add this situation as an Issue. We'll try to fix this problem as soon as possible. By the way the initial confusion was that ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/403#issuecomment-320490588:23,log,logic,23,https://su2code.github.io,https://github.com/su2code/SU2/pull/403#issuecomment-320490588,1,['log'],['logic']
Testability,"Hi,. We have just updated (30min ago) the master branch of the SU2 and TestCases repositories. Could you please try again?. If you are using the develop branch, please remember that you should use the develop branch for the SU2 and TestCases repositories. Otherwise the options don’t match. Pleas let us know if it is working for you now. Best,; Francisco. On Feb 3, 2015, at 12:27 PM, Gil Forsyth notifications@github.com wrote:. > Just compiled today and it seems like the options CFL_ADAPT and CFL_ADAPT_PARAM have been deprecated?; > ; > Running the 2D inviscid cylinder and the euler channel flow example both throw an error; > ; > CFL_ADAPT: invalid option name. Check current SU2 options in config_template.cfg.; > CFL_ADAPT_PARAM: invalid option name. Check current SU2 options in config_template.cfg.; > Commenting these lines out lets the test cases run but I'm not sure what the default behavior is (are these running with adaptive CFL if we don't pass that parameter at all?); > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/152#issuecomment-72729435:71,Test,TestCases,71,https://su2code.github.io,https://github.com/su2code/SU2/issues/152#issuecomment-72729435,3,"['Test', 'test']","['TestCases', 'test']"
Testability,"Hi,. When restarted at e.g. Time-Iter 2 the first value would be divided by 3 (number of timesteps counting from zero).; So if your first value in that restarted sim is a 3, the running average would be 1. This is fixed with this commit by setting WINDOW_START_ITER = RESTART_ITER in the Config Postprocessing,; if the option is not set. If the option is set, but incorrectly, an error is raised. ## Related Work; Original implementation #836 ; Change in previous behavior introduced in #1548 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1601:1087,test,test,1087,https://su2code.github.io,https://github.com/su2code/SU2/pull/1601,1,['test'],['test']
Testability,"Hi,. for my late answer.; i can't solve the problem yet. here is the meson-log.txt output:; Build started at 2021-04-17T15:34:44.243386; Main binary: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe; Build Options: -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Denable-cgns=true '-Dprefix=D:\Programme\SU2-7.1.1\bin'; Python system: Windows; The Meson build system; Version: 0.54.999; Source dir: D:\Programme\SU2-7.1.1; Build dir: D:\Programme\SU2-7.1.1\build; Build type: native build; None of 'PKG_CONFIG_PATH' are defined in the environment, not changing global flags.; None of 'PKG_CONFIG_PATH' are defined in the environment, not changing global flags.; Project name: SU2; Project version: 7.1.1 ""Blackbird""; None of 'CC' are defined in the environment, not changing global flags.; None of 'CFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity testing C compiler: gcc; Is cross compiler: False.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe; C compiler for the build machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the build machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing g",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:75,log,log,75,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['log'],['log']
Testability,"Hi,. here is the contents of config.log:. ```; This file contains any messages produced by compilers while; running configure, to aid debugging if configure makes a mistake. It was created by SU2 configure 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ ./configure --prefix=/gshare/work/hpascalj/CodeSU2-master --with-CGNS-lib=/gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/lib --with-CGNS-include=/gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = master; uname -m = x86_64; uname -r = 2.6.32-279.el6.x86_64; uname -s = Linux; uname -v = #1 SMP Wed Jun 13 18:24:36 EDT 2012. /usr/bin/uname -p = unknown; /bin/uname -X = unknown. /bin/arch = x86_64; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = unknown; /bin/machine = unknown; /usr/bin/oslevel = unknown; /bin/universe = unknown. PATH: /opt/xcat/bin; PATH: /opt/xcat/sbin; PATH: /opt/pbs/default/bin; PATH: /opt/pbs/tools/bin; PATH: /usr/lpp/mmfs/bin/; PATH: /gshare/soft/star-ccm+/STAR-View+9.02.007; PATH: /gshare/soft/star-ccm+/STAR-CCM+9.02.007/star/bin; PATH: /opt/xcat/bin; PATH: /opt/xcat/sbin; PATH: /usr/lib64/qt-3.3/bin; PATH: /opt/pbs/default/bin; PATH: /opt/pbs/tools/bin; PATH: /usr/lpp/mmfs/bin/; PATH: /usr/local/bin; PATH: /bin; PATH: /usr/bin; PATH: /usr/local/sbin; PATH: /usr/sbin; PATH: /sbin; PATH: /gshare/soft/init; PATH: /gshare/soft/scripts; PATH: .; PATH: /gshare/soft/init; PATH: /gshare/soft/scripts; PATH: . ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2465: checking build system type; configure:2479: result: x86_64-unknown-linux-gnu; configure:2499: checking host system type; configure:2512: result: x86_64-unknown-linux-gnu; configure:2532: checking target system type; configure:2545: result: x86_64-unknown-linux-gnu; configure:2587: checking for a BSD-compatible install; configure:2655: result: /usr/bin/install -c; configure:2666: checking whe",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:36,log,log,36,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,1,['log'],['log']
Testability,"Hi,. this is just a small chore which cleans LoadRestart routines and strengthens the similarities between the function. Declare vars where needed (instead of the top of the func), make things const and some anticipation of clang-format stuff (without explicitly running it over that file); This was originally done in #1388 but i dont want to pollute that PR with unrelated stuff. I also added a `nVarTurb` Variable which can be accessed via the Config. Might be handy in some places, instead of always going through the full enum class TURB_MODEL. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1450:1142,test,test,1142,https://su2code.github.io,https://github.com/su2code/SU2/pull/1450,1,['test'],['test']
Testability,"Hi,; I like this idea of self registering classes for our factories, although the instantiation logic is seldom as linear as converting a name to a type... Maybe you could refactor just one of our factories to give us a better idea of what it could look like?. This issue of ""modularizing"" pieces of the code is central to the refactoring of the optimization framework, which will require significant chunks of the code to be exposed to python, so by all means get involved in that (join #refactor_optimization on SU2 Slack and the developer meetings, Wednesdays at 4pm CET). Personally I think this flavour of extensibility is small fish compared to other structural problems we are currently addressing (duplication, code bloat, performance, robustness, etc.) and in my opinion addressing those issues will make it easier to extend the code in this manner, not harder.; Also from the pure C++ side I see no problem with having to modify the code... In so doing the new code is automatically under the same open source license, which to me is as good thing. A couple of practical considerations:; - About your examples, we want fewer drivers, not more. The methods of CVariable, CPoint, and co. need to be inline if the code is to have any semblance of performance.; - I think the majority of the code should still be statically linked, even if some parts of it can be extended by means of custom dynamic libraries, because that will just be less problematic for folks who build from source but are not developers. > The design I described above doesn't take into account C++ templates as I don't see them used that frequently (Is that a thing?). It is becoming a thing yes absolutely, although not at the very highest levels of abstraction. > Please, Please, we have to stop using raw pointers like that. It's being done... It takes time and not many people are comfortable doing this kind of refactoring (consider it an invitation :) ).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-668153867:96,log,logic,96,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-668153867,1,['log'],['logic']
Testability,"Hi,; I made the Cygwin build installation instruction example. I just checked my SU2_CFD.exe and it is 625MB as well. Nevertheless, I have no clue why this is the case and how to solve that. For reference I attach my config.log file. [config.log](https://github.com/su2code/SU2/files/3483335/config.log)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/754#issuecomment-519654913:224,log,log,224,https://su2code.github.io,https://github.com/su2code/SU2/issues/754#issuecomment-519654913,3,['log'],['log']
Testability,"Hi,; I tried with SA instead of SA_NEG, I get the same behavior. I understand that I don't need to test the develop branch then. I am ok with some c++ dev but I am not an expert. How would you improve the current implementation?. Thanks,; Jean-François",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1467#issuecomment-990776364:99,test,test,99,https://su2code.github.io,https://github.com/su2code/SU2/issues/1467#issuecomment-990776364,1,['test'],['test']
Testability,"Hi,; I went through this work but it is a bit hard to me to completely follow and continue you guys' idea. If you could help finish this issue, I am really willing to do some tests and give feedbacks ASAP. Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2275#issuecomment-2098689280:175,test,tests,175,https://su2code.github.io,https://github.com/su2code/SU2/issues/2275#issuecomment-2098689280,1,['test'],['tests']
Testability,"Hi,; after discussing with Ruben all my cases with SU2_CFD passed. The fea_fsi/StatBeam_3d case needs an increase in the thresholds. It is a stiff problem and therefore not that numerical accurate (By the way: Should for stiff problems a QUAD-Precision version of the Gauss-Elimination be added?); I introduced some small changes which sum up to 15% savings for the turb_ONERAM6 case (others not tested) sequentially. Interested in merging them? How to proceed?; Josef",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/347#issuecomment-279374614:396,test,tested,396,https://su2code.github.io,https://github.com/su2code/SU2/issues/347#issuecomment-279374614,1,['test'],['tested']
Testability,"Hi. I have successfully run the sliding mesh test case for rotating cylinders. However, when I change the simulation type to Navier-Stokes in the cfg file the solution diverges before starting the CFD iterations. Can you please suggest what is going wrong and how to avoid this error. Regards; Suman Vajjala",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/401:45,test,test,45,https://su2code.github.io,https://github.com/su2code/SU2/issues/401,1,['test'],['test']
Testability,"Hi. I think the best is just to remove reference to the issue. I think comment is explicit enough. I will commit all minor changes in next commit. I am not sure to understand well the problem about regression but I think it was just due to tests regression failing on the specific develop commit I used as base of my branch. . Nevertheless, there is this change that can be important for futur python changes:; https://www.python.org/dev/peps/pep-0237. I have applied this one time in my commit (see comment on pull-request diff displayed above). . My test branch rebased on last develop commit pass all tests so normally travis should confirm that all tests are ok now for this pull request. See you soon if not ;)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/260#issuecomment-224623509:240,test,tests,240,https://su2code.github.io,https://github.com/su2code/SU2/pull/260#issuecomment-224623509,4,['test'],"['test', 'tests']"
Testability,"Hi. I'm not sure if this is the best place to post this but there appears to be a problem with the way arguments are handled in the preconfigure.py file within Raven. I am trying to install SU2 with AD support and following the install documentation online, I have the following bash command (I'm running Ubuntu 16.04):. `export CXXFLAGS=""-O3"" && python2.7 ./preconfigure.py --enable-autodiff --prefix=/opt/SU2/SU2v5.0.0 --enable-mpi --with-cc=/opt/openmpi/openmpi-3.0.0/bin/mpicc --with-cxx=/opt/openmpi/openmpi-3.0.0/bin/mpicxx --enable-PY_WRAPPER --with-HDF5-lib=/opt/hdf5/hdf5-1.10.1/lib --with-HDF5-include=/opt/hdf5/hdf5-1.10.1/include --with-ZLIB-lib=/opt/zlib/zlib-1.2.11/lib --with-ZLIB-include=/opt/zlib/zlib-1.2.11/include --with-SZIP-lib=/opt/szip/szip-2.1.1/lib -with-SZIP-include=/opt/szip/szip-2.1.1/include --with-LAPACK-lib=/usr/lib --with-LAPACK-include=/usr/include`. I tested the ordinary 'configure' version of the command first (without AD) and the install seems to work fine, but on trying the above preconfigure.py command, I get the error `configure: error: unrecognized option: '-w=--with-LAPACK-lib'`. Is there some mistake in the string handling of arguments? I've attached a text output an image of error. Please let me know what other information you may need. Regards, Tim. [preconfigure_erro.txt](https://github.com/su2code/SU2/files/1339638/preconfigure_erro.txt). ![preconfigure_error](https://user-images.githubusercontent.com/16842258/30951291-11d2af9a-a45d-11e7-9437-330d33ca2ef1.jpg)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/446:889,test,tested,889,https://su2code.github.io,https://github.com/su2code/SU2/issues/446,1,['test'],['tested']
Testability,"Hi; I just tested with the parallel script and 20 cpus. It is working fine, writing all the flow_*.dat that I asked. ; Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/344#issuecomment-267094648:11,test,tested,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/344#issuecomment-267094648,1,['test'],['tested']
Testability,"Hi; Kind of strange that Travis tests failed. Modifications were performed only in the script; compute_polar.py and the pull request was set following git pull from develop branch.; Could it be that there is a problem with the online develop branch?; How can I check what caused Travis to fail?; Thanks,; Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/520#issuecomment-376225263:32,test,tests,32,https://su2code.github.io,https://github.com/su2code/SU2/pull/520#issuecomment-376225263,1,['test'],['tests']
Testability,Hm why are the regression tests failing ? It looks like is has something to do with the changes in the limiter in a recent commit.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/490#issuecomment-355911820:26,test,tests,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/490#issuecomment-355911820,1,['test'],['tests']
Testability,"Hm, good question why the builds are not running. It should not depend on the LGTM things or CodeFactor at all, they are independent.; My suggestion would be to quickly resolve the conflicts with origin/develop and push again. I could imagine that this hinders the regression tests to run. I briefly went over the conflicts and they seemed to easy to fix (on the first glance). You also have a merge request into develop and didn't touch the regression.yml so I see no problems on that side. The Regression tests also worked in the past so lets hope the merge origin/develop helps 👍",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1223#issuecomment-889854856:276,test,tests,276,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-889854856,2,['test'],['tests']
Testability,"Hmm ok I'm re-running the tests, maybe something went wrong because I merged without merging develop first.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1387#issuecomment-938511465:26,test,tests,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/1387#issuecomment-938511465,1,['test'],['tests']
Testability,"Hmmm looks like we have an issue with the setup of tutorials.py then, because the merge button should not show up as green with failing regressions.; The code quality tests are not hard requirements but everything else should be.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1295#issuecomment-859559899:167,test,tests,167,https://su2code.github.io,https://github.com/su2code/SU2/pull/1295#issuecomment-859559899,1,['test'],['tests']
Testability,"Hmmm this didn't work because Travis doesn't have a Python 3.7 binary to download, even though it wouldn't be used. Going to require some more thought if this is worth testing for.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/622#issuecomment-443521982:168,test,testing,168,https://su2code.github.io,https://github.com/su2code/SU2/pull/622#issuecomment-443521982,1,['test'],['testing']
Testability,"How about making the test cases repo a submodule of SU2, such that when the submodule is updated Travis will be triggered?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/459#issuecomment-339751327:21,test,test,21,https://su2code.github.io,https://github.com/su2code/SU2/issues/459#issuecomment-339751327,1,['test'],['test']
Testability,"Hybrid AD tests are a bit flaky ATM :shrug: you can merge things without those tests passing, but if more than 1 fails let me know.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1346#issuecomment-898887334:10,test,tests,10,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-898887334,2,['test'],['tests']
Testability,Hybrid parallel AD regression tests fail sometimes,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1384:30,test,tests,30,https://su2code.github.io,https://github.com/su2code/SU2/issues/1384,1,['test'],['tests']
Testability,"Hypothesis (this is a rolling release post :); - [x] It is only broken for quad and not for tri meshes in 2D :x: nope Testcases/incomp_navierstokes/cylinder is a 2D Tri mesh and fails as well; ![image](https://user-images.githubusercontent.com/31306376/99550414-00901d80-29bb-11eb-9cec-6370399e7270.png); Compare that to the Testcases/naviersstokes/cylinder which utilizes the same mesh but is uses the compressible solver. This works; ![image](https://user-images.githubusercontent.com/31306376/99550985-9b88f780-29bb-11eb-8a3d-fe596fa1d3b2.png); which directly brings us to the next hypothesis...; - [x] it is only broken for incompressible flow (so far /euler/wedge worked /navierstokes/cylinder/ /Quickstart worked and /incomp_navierstokes/cylinder /incomp_navierstokes/bend /incomp_euler/naca0012 didnt ) :heavy_check_mark: yep thats it, the implemetation was wrong for incompressible flow `LoadSurfaceData` was falsely used instead of `LoadVolumeData`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1109#issuecomment-729759618:118,Test,Testcases,118,https://su2code.github.io,https://github.com/su2code/SU2/issues/1109#issuecomment-729759618,2,['Test'],['Testcases']
Testability,"I added the necessary files (the exp. data and the .su2 files) to the TestCases repository, so you can remove them from here. And please rename the folder to ""transition"". Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-257647285:70,Test,TestCases,70,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-257647285,1,['Test'],['TestCases']
Testability,"I added the tutorial cases to the regression tests. They only do **one** iteration, just to check that the config options are correct. Everything else should be covered by the other regression tests already.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485#issuecomment-355153943:45,test,tests,45,https://su2code.github.io,https://github.com/su2code/SU2/pull/485#issuecomment-355153943,2,['test'],['tests']
Testability,"I added the viscous terms to the axisymmetric source but I am not sure it is all correct. I get very reasonable, well converged results with my cases but dissipation seems a little excessive, however I cannot say for sure because there are many other factors in my own cases. There is no test case I believe. Should I try to create one with air like this one https://turbmodels.larc.nasa.gov/axibump_val.html ?. How come in the incompressible version the turbulent heat transfer is ignored? I added it here with the Reynolds analogy as eddyvisc * cp/PrTurb * dT/dy and it seems significant in my cases (with PrTurb = 0.9). Also, I created a generalised version of the axisymmetric source in a separate class which goes with the generalised Roe and AvgGradFlow solvers with any eos. I use it for my cases with a table based fluid model (not included here) but I am not sure it is needed for the existing fluid models because they all use a constant gamma anyway. Perhaps it is because ""Pressure_i = (Gamma-1.0)*U_i[0]*(U_i[nDim+1]/U_i[0]-0.5*sq_vel)"" may not be true for the ""polytropic Van der Waals"" and ""polytropic Peng Robinson"" models. If that is the case the Driver should instantiate the general one for anything other than incompressible, ideal gas and standard air.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1095:288,test,test,288,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095,1,['test'],['test']
Testability,"I added unit testing to github actions. In order not to recompile the code, but still have the unit testing in a separate step, I had to add to install the test driver. To not have it installed by default, there is the flag `-Denable-tests` that has to be set to true for meson in order to enable the tests. The unit testing step directly calls the test driver executable.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850#issuecomment-581889375:13,test,testing,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-581889375,7,['test'],"['test', 'testing', 'tests']"
Testability,"I agree that it is very odd.; Having just run the test, I can confirm that a clean folder with the restart file hangs (30+ min).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1342#issuecomment-892025673:50,test,test,50,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342#issuecomment-892025673,1,['test'],['test']
Testability,"I agree that this should be fixed, and as you have identified it is a problem separate from the FSI problem so you're doing the right thing (as far as my opinion goes) in terms of making this pull request. ; And you've definitely identified an important problem. . Considering that the deconstructers are used within SetVolume_Deformation() in the current develop branch, it seems like (part of) the problem is that that deconstructor is not doing what we thought it would. Aka, although C++ compilers will allow you to use LinsysSol.~CSysVector(), it may not be actually doing what it looks like - and based on your observations it seems like ~CSysVector() is not being called at all. A destructor like ~CSysVector() is more conventionally called by using a 'delete'. This may change the way that the initialize function is used for that object as well, by replacing it with 'new'. Replacing the current method of initializing/destructing that class with a new/delete pair should not change performance, and if anything improve it due to calling the destructor, since it looks like the constructor and the 'Initialize' methods are currently identical. Did you test via a cout or another way to see if the code within ~CSysVector() was called?. Having the delete within the SetVolume_Deformation() will free up memory during the rest of the calculation, as otherwise that memory will not be freed until the CVolumetricMovement class is deleted at the end of execution (or when something like delete [] grid_movement_container happens). But there may also be advantages to keeping it within the CVolumetricMovement constructor/destructor definition. Anyone else have a thought on this?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/200#issuecomment-147892835:1161,test,test,1161,https://su2code.github.io,https://github.com/su2code/SU2/pull/200#issuecomment-147892835,1,['test'],['test']
Testability,"I agree that we should get this in soon and allow others to give it a try. I have just one more request, Samet: in order to protect your nice contribution to the code, it is best to have at least one of the test cases connected to our regression test system. That way, we will be alerted right away if a future commit affects the correctness of your model. . Can you please add at least one of the cases to the regression suite? This is done by adding the case(s) to the serial_regression.py and parallel_regression.py files. I think that it is fairly straightforward to add one by pattern-matching the existing cases, but please let me know if you have trouble.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-264954289:207,test,test,207,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-264954289,2,['test'],['test']
Testability,"I agree with @talbring. This one is a burden on both sides (to prepare and review), and it is easy for us to keep putting it off. I would recommend that everyone takes a look at this in the next day or two - at least take a look at the changes that will affect your own work. Once the tests pass, we can be confident that we are preserving what is in the regressions, but we will need a short period of conflict fixing and testing for those with active branches. The majority of the PR is for output features, which should not affect correctness of the solvers, but there are some important changes to the drivers and options that folks should be aware of. Please give these things a pass when you have a minute.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-534605572:285,test,tests,285,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-534605572,2,['test'],"['testing', 'tests']"
Testability,"I agree with both of you, that OBJECTIVE_FUNCTION should be a bit more descriptive. ; Following the format of other adjoint options (CONV_NUM_METHOD_ADJFLOW, LIMIT_ADJFLOW), how about OBJFUNC_ADJFLOW or FUNCTIONAL_ADJFLOW? . Regarding the format of OPT_OBJECTIVE, what I have working in another branch (which I have been sitting on pending figuring out these types of issues and more testing) is a format like:; OPT_OBJECTIVE = DRAG*0.1; LIFT*2.0; COMBINE_OBJECTIVE = YES; Where the associated adjoint settings are:; OBJECTIVE_FUNCTION = DRAG, LIFT; OBJECTIVE_WEIGHT = 0.1, -2.0. The effect of COMBINE_OBJECTIVE is a flag to switch between treating the objectives separately (each objective and its gradient is evaluated separately and the python scripts loop sequentially over the objectives, or if this option is 'YES' then a 'COMBO' value is output to the history file and the gradient is computed all-at-once (I can explain that more offline if necessary)). At the moment this only works for linear combinations of existing objectives, so the sample objective Francisco listed would be beyond that. . What do you think of this as an option structure for minimizing 0.1*DRAG-2.0*LIFT:; OPT_OBJECTIVE = COMBINATION; ...; OBJFUNC_ADJFLOW = COMBINATION; ..; COMBO_OBJDEF = DRAG, LIFT; COMBO_OBJWEIGHT = 0.1, -2.0; Where this would still be compatible with looping over sequential objectives in the shape optimization (that is really just a fairly small update to the python, and has some benefits depending on how many constraints you have), and both the adjoint and optimization would refer to OBJDEF if 'COMBINATION' is set as the objective.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/241#issuecomment-187280368:384,test,testing,384,https://su2code.github.io,https://github.com/su2code/SU2/pull/241#issuecomment-187280368,1,['test'],['testing']
Testability,"I agree, but some do [pick up](https://github.com/su2code/SU2/commits/develop/TestCases/disc_adj_fsi/Airfoil_2d/config.cfg) those changes, just not all of them. Anyway, you'll notice I put an assert for the condition that was causing the problem instead of an ""mpi error"". That is inline with the philosophy that errors/exceptions are to deal with user errors and asserts to help debugging (they are ignored with -DNDEBUG). I can off-course change it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/751#issuecomment-518536145:78,Test,TestCases,78,https://su2code.github.io,https://github.com/su2code/SU2/pull/751#issuecomment-518536145,3,"['Test', 'assert']","['TestCases', 'assert', 'asserts']"
Testability,I already changed it in the branch fix_large_mesh. If the tests of @GomerOfDoom are successful it can be merged into develop.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/949#issuecomment-626225756:58,test,tests,58,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-626225756,1,['test'],['tests']
Testability,I also thought about that merging but unfortunately we are already at the time-limit of 90mins with only the normal compilation/regression tests. I will explore more the caching feature. I already did some tests in the meson_build branch on that.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/709#issuecomment-501659521:139,test,tests,139,https://su2code.github.io,https://github.com/su2code/SU2/pull/709#issuecomment-501659521,2,['test'],['tests']
Testability,"I always thought of CSolver, CIteration, etc. as ""strategies"" and CNumerics as ""visitors"", but just because the numerics ""visit"" the edges. I like the separation between solver and numerics, but I think the implementation could be better to avoid the problems @clarkpede mentioned.; We will need the contiguous storage for vectorization, once we have that we should benchmark again to evaluate the overhead of the current numerics structure and the potential gains from vectorization and weight that against whatever loss of readibility we would need to incur.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-514334254:366,benchmark,benchmark,366,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-514334254,1,['benchmark'],['benchmark']
Testability,"I am adding regressions for all the convective numerical schemes in NEMO using the implicit solver. All cases run on an inviscid wedge at the moment, but I am happy to make a new folder in the regression. . ## Related Work; This will allow us to better track our changes and is the start of a more comprehensive set of regression tests for the Nemo solver coming in the future (boundary conditions, etc.) ; This directly relates to #1773 to eventually refactor the AUSM schemes. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1885:330,test,tests,330,https://su2code.github.io,https://github.com/su2code/SU2/pull/1885,2,['test'],"['test', 'tests']"
Testability,"I am also experiencing this issue since today merge with develop. I have created a branch to fix this according to the suggestion of @LaSerpe and made few tests. If Travis will pass, I am going to open a PR. Is that OK?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/341#issuecomment-266783530:155,test,tests,155,https://su2code.github.io,https://github.com/su2code/SU2/issues/341#issuecomment-266783530,1,['test'],['tests']
Testability,"I am an SU2 user simulating config_incomp_turb_sa.cfg. I would like to define a UDF to simulate an airfoil vibration dynamics.; the original configuration feature is:; ```; GRID_MOVEMENT= RIGID_MOTION; MOTION_ORIGIN= (0.25 0.0 0.0); PITCHING_OMEGA= (0.0 0.0 14.91675); PITCHING_AMPL= (0.0 0.0 8.0); ```; The pitching amplitude is a fixed number. however, in my simulation task, i would like to build a UDF to show an increasing pitching amplitude, which depends on the value of the current timestep. I would like to know if there is a related testcase that shows how a UDF is written. Thank you very much.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1673:543,test,testcase,543,https://su2code.github.io,https://github.com/su2code/SU2/issues/1673,1,['test'],['testcase']
Testability,"I am currently testing an expression parser to define custom fields in the config file. For this I modified the handling of the curly brackets {}. They now declare a ""literal"" interpretation, which means everything inside is considered as one string and will not be split while strings are tokenized when reading the config file. . When you declare the output fields you can then use expressions involving all available fields, e.g. `SCREEN_OUTPUT= INNER_ITER, RMS_DENSITY, {sqrt(LIFT)/DRAG**2}`. At the moment only inline expression are possible. But I am considering also to use a file to define more complex functions. The goal is to make that framework more flexibel to that we can use it also to define custom integrals over markers, functions defined on the whole flow field, custom boundary conditions, inlet conditions and so on. . Important to note is that I already differentiated the parser, which means everything that is defined can be used also for the adjoint solver.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/913#issuecomment-602276632:15,test,testing,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/913#issuecomment-602276632,1,['test'],['testing']
Testability,"I am having an issue wherein a seg fault is encountered while writing a restart file. I am running on CentOS 8 with GCC 8.3.1 and ompi 4.0.2. When it is run on CentOS 7 with GCC 7.3.1 and ompi 4.0.2, it runs correctly. I am running 7.0.4 of SU2 on both the functional and non-functional systems. The same issue was present with 7.0.3. Sections of the log:. Initialize Jacobian structure (Navier-Stokes). MG level: 0.; Initialize Jacobian structure (SA model).; [...]; ------------------- Iteration Preprocessing ( Zone 0 ) ------------------; Euler/Navier-Stokes/RANS fluid iteration. ------------------------------ Begin Solver -----------------------------. Simulation Run using the Single-zone Driver; +----------------------------------------------------------------+; | Inner_Iter| rms[Rho]| rms[nu]| CL| CD|; +----------------------------------------------------------------+; | 0| -5.507608| -6.134199| 0.484414| 0.030848|; | 1| -4.574136| -6.098123| 0.484453| 0.030598|; [...]; | 10| -5.466734| -4.908028| 0.484509| 0.029445|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; Traceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /mnt/cfddata/WLiao/CRJ700_su2/CRJ700_inch_roe_TEST/,; Command = mpirun -np 2 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '139'; [gen2node1:232298:0:232298] Caught signal 11 (Segmentation fault: address not map",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971:351,log,log,351,https://su2code.github.io,https://github.com/su2code/SU2/issues/971,1,['log'],['log']
Testability,"I am having trouble with local regression testing. When running regression tests locally on my computer following instructions in the documentation many tests fail, including ones that seem to pass when attempting to upload. I seem to be missing something.. ; What am I doing wrong?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295#issuecomment-2180271323:42,test,testing,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295#issuecomment-2180271323,3,['test'],"['testing', 'tests']"
Testability,"I am more than happy to get any reviews! However, I don't expect that anyone will go through all files and in order to properly test it, we have to slightly push it. . We will give it a couple of days though.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-534580926:128,test,test,128,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-534580926,1,['test'],['test']
Testability,"I am not entirely sure, but as far as I know SU2 has not been tested on cygwin. So if the setting of the SU2_RUN environment variable does not solve the problem, could you test it without python? You do this using the following command. mpirun -np <# of ranks> <path to SU2 bin directory>/SU2_CFD.exe inv_ONERAM6.cfg. It could be that instead of mpirun you must use mpiexec. That depends on your MPI implementation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/521#issuecomment-378164049:62,test,tested,62,https://su2code.github.io,https://github.com/su2code/SU2/issues/521#issuecomment-378164049,2,['test'],"['test', 'tested']"
Testability,"I am not sure if a 2D case is a good example / test case for the ROTATING_FRAME option, because the cross product makes only sense in the 3D case. For example, there is no pitch axis, the y-axis actually goes in z-direction and so on... (By the way, I am on vacation the next days. I will be back in office next Monday.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1621#issuecomment-1115026525:47,test,test,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/1621#issuecomment-1115026525,1,['test'],['test']
Testability,"I am not sure whether all is on in this request like it should.; - I did an update of my request with respect to current develop.; - I selected some of my changes and collected once again Timings for turb_oneram with 8k elements, 20 iterations in serial runs.; 1. Use NUMACTL if more than 1 CPU - may save a lot (without 654sec); 2. Original develop branch: 557 sec; 3. Gauss-elimination down to 546, prodblockvector 533, matrixvectorproduct 525, diag_upper in preconditioner 513, transportmodel 509, Changes to CUpwRoe_Flow::ComputeResidual and called funtions 485. Thus in total 72sec, appr. 15% savings.; 4. My - not commited, still in test - version runs in 390 sec.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/386#issuecomment-323047204:639,test,test,639,https://su2code.github.io,https://github.com/su2code/SU2/pull/386#issuecomment-323047204,1,['test'],['test']
Testability,"I am not too familiar with that routine, but I do know that there are some checks related to periodic BCs inside. Are you using periodic BCs for your case? You might go through the routine to see that the counting of the spans is correct. Perhaps @salvovitale can comment if there's time. Also, can you verify that the test cases in SU2/TestCases/turbomachinery/ are working for you on your system? Might check for additional options that appear in those examples.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/990#issuecomment-630388452:319,test,test,319,https://su2code.github.io,https://github.com/su2code/SU2/issues/990#issuecomment-630388452,2,"['Test', 'test']","['TestCases', 'test']"
Testability,"I am open to this (we have discussed it for a couple of years), and it would be good to put it into a script like externals/fix_line_endings.sh. Could even be automated later somehow with that on PRs, or can at least run manually to appease CodeFactor. I think you guys were going to run some tests on branches.. please let folks know what you see and what the steps should be",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/808#issuecomment-550471978:293,test,tests,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/808#issuecomment-550471978,1,['test'],['tests']
Testability,"I am running an unsteady simulation where I have a marker with an imposed velocity and an object in the domain that moves according to some law. Think of a translating (or plunging) sphere in a cavity flow. The related options in my config file are:. SURFACE_MOVEMENT= (MOVING_WALL, DEFORMING); MARKER_MOVING= (TOP_WALL, SPHERE); SURFACE_TRANSLATION_RATE= (100 0 0, 0 1 0). With those options the MOVING_WALL conditions at the top wall is completely disregarded. Instead, it gets imposed correctly if I omit the deforming marker.; The reason can be traced back to the way the velocity is imposed in the heatflux (or isothermal) boundary condition, where the grid velocity is used to strongly impose that BC. Nothing wrong with that if either only one between MOVING_WALL or DEFORMING markers is used. In the first case the grid velocity is set in CGeometry::SetWallVelocity(), in the second case is computed via finite differencing in CGeometry::SetGridVelocity(). If both markers are present, the call to CGeometry::SetGridVelocity() overwrites the values set by CGeometry::SetWallVelocity() at the walls, and if a wall is not actually moving (like the top wall in a cavity problem) the value is set to zero. Now, fixing this should be relatively easy (I hardcoded some tests that look like they are working), but I want to ask what is the preferred way to fix this problem. We either call CGeometry::SetWallVelocity() after CGeometry::SetGridVelocity() at each time step, or explicitly treat the MOVING_WALL markers differently inside the no-slip boundary conditions. My preliminary implementation was along the lines of the latter option, but I wanted to ask before proceeding further. I will open a WIP pull request as soon as I finish up some tests.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2166:1271,test,tests,1271,https://su2code.github.io,https://github.com/su2code/SU2/issues/2166,2,['test'],['tests']
Testability,"I am trying to compile SU2 for parallel runs using intel compilers. SU2 compiles perfectly when compiled without the --enable-autodiff flag, but throws an error when compiling with it. The error is: . ```; ../../../Common/lib/../src/adt_structure.cpp(1402): internal error: assertion failed at: “shared/cfe/edgcpfe/exprutil.c”, line 7266. const su2double V0x = xc[0] - 0.5*xRel[4][0] - 0.125*(xRel[1][0]+xRel[2][0]+xRel[3][0]);; ^. compilation aborted for ../../../Common/lib/../src/adt_structure.cpp (code 4); make[2]: *** [../src/libSU2_AD_a-adt_structure.o] Error 4; make[2]: *** Waiting for unfinished jobs....; make[2]: Leaving directory `/path/SU2_AD/Common/lib’; make[1]: *** [install-recursive] Error 1; make[1]: Leaving directory `/path/SU2_AD’; make: *** [install-SU2_AD] Error 2; ```. Looking for the error online, it seems to be something related to the compiler itself. I was wondering if anyone else had encountered this error message, and how they got around it. . I am using icc and icpc version 18.0.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/719:274,assert,assertion,274,https://su2code.github.io,https://github.com/su2code/SU2/issues/719,1,['assert'],['assertion']
Testability,"I am trying to run an axi-symmetric case with a time stepping scheme (basically SOD's problem), which fails in CSourceAxisymmetric_Flow::ComputeResidual. The reason is that the boolean implicit is determined as follows. bool implicit = (config->GetKind_TimeIntScheme_Turb() == EULER_IMPLICIT). However, this must be config->GetKind_TimeIntScheme_Flow, right?. Furthermore, the small y-coordinate case will also fail, because there is no test whether an implicit computation takes place. I can correct this, if somebody can confirm this is indeed a bug. Edwin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/454:437,test,test,437,https://su2code.github.io,https://github.com/su2code/SU2/issues/454,1,['test'],['test']
Testability,"I am using SU2 version 3.2.8. I have tried all the steady-state Euler and Navier-Stokes test cases and they worked fine. However, none of the demos for Rotating (NACA and CAradonna) are working. Both are diverging. I have decreased the Courant number from 4 to 2 and increased the number of implicit iterations. There is still divergence. In the cfg file, I removed all the variables related to the dynamic mesh motion nad put a freestream of 0.8. SU2 did not diverge. Is there a specific setting to put in the cfg file in order to get convergence for the Rotating test cases",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/167:88,test,test,88,https://su2code.github.io,https://github.com/su2code/SU2/issues/167,2,['test'],['test']
Testability,I believe this request is fixed with requested changes and white space removed. I have added a grid file and .cfg file to the respective test case repositories. I am not sure where to add a solution file if this is to become a regression test. Jason,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/445#issuecomment-335467032:137,test,test,137,https://su2code.github.io,https://github.com/su2code/SU2/pull/445#issuecomment-335467032,2,['test'],['test']
Testability,"I can easily share with partner. But I failed to compile the code with following errors:. (base) root@a5502ebdff64:/home/SU2# ./configure --prefix=/home/SU2/SU2_Install CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/bin/mpicc --with-cxx=/usr/bin/mpicxx. checking build system type... x86_64-pc-linux-gnu. checking host system type... x86_64-pc-linux-gnu. checking target system type... x86_64-pc-linux-gnu. checking for a BSD-compatible install... /usr/bin/install -c. checking whether build environment is sane... yes. checking for a thread-safe mkdir -p... /bin/mkdir -p. checking for gawk... no. checking for mawk... mawk. checking whether make sets $(MAKE)... yes. checking whether make supports nested variables... yes. checking whether make supports nested variables... (cached) yes. checking for style of include used by make... GNU. checking whether the C++ compiler works... no. configure: error: in `/home/SU2':. configure: error: C++ compiler cannot create executables. See `config.log' for more details. I am sure that I have installed gcc/g++ successfully. You can see. (base) root@a5502ebdff64:/home# gcc --version. gcc (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0. Copyright (C) 2017 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. (base) root@a5502ebdff64:/home# g++ -o hello hello.cc. (base) root@a5502ebdff64:/home# ./hello. Hello, World!. I have uploaded the config.log file. Could you give me some suggestions, please?; config.log<https://github.com/su2code/SU2/files/3418183/config.log>. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/738?email_source=notifications&email_token=AADV2HBFP42OXAJCIZGTH2DQAXH4ZA5CNFSM4IFZ52EKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4HAVNCNA>, or mute the thread<https://github.com/notifications/unsubscribe-au",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738#issuecomment-513847308:1435,log,log,1435,https://su2code.github.io,https://github.com/su2code/SU2/issues/738#issuecomment-513847308,1,['log'],['log']
Testability,"I can provide some ideas as to where the change might have occurred. If you look at the git log for the regression tests, you can see every time that someone changed the expected results for a test. Specifically, we can see all the times that the SA regression tests have been changed, which is a necessary (but not sufficient) condition for a significant change in SA results. (It's possible a sneaky change slipped in with a small enough change in residuals so as to not be picked up by the regression tests.). I looked at the following test cases:; + `turb_SA_flatplate`; + `turb_SA_RAE2822`; + `turb_ONERAM6`; + `turb_NACA0012_sa`. I only found one commit where the SA regression test values changed since Feb 18, 2019 (when v6.2.0 was released): fa7ef0a6f0f6a32cd0512f738a1329bdc41ebe00 . That commit was part of PR #657, where a bug in the symmetry boundary condition was fixed. You do have symmetry boundary conditions in your cfg file. Why don't you try re-running the test case with the versions before and after PR #657 was merged?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735#issuecomment-513324305:92,log,log,92,https://su2code.github.io,https://github.com/su2code/SU2/issues/735#issuecomment-513324305,8,"['log', 'test']","['log', 'test', 'tests']"
Testability,"I can test it on both Centos 7.5 and Ubuntu 18.04, if needed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586#issuecomment-426518081:6,test,test,6,https://su2code.github.io,https://github.com/su2code/SU2/pull/586#issuecomment-426518081,1,['test'],['test']
Testability,"I can test out some aspects as well. This directly impacts my research, so it's a medium-level priority for me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797#issuecomment-548893764:6,test,test,6,https://su2code.github.io,https://github.com/su2code/SU2/issues/797#issuecomment-548893764,1,['test'],['test']
Testability,"I can think of 3 reasons why you get this error. 1) You have hanging nodes in the grid. Theoretically, the DG discretization is perfectly capable of handling this situation. However, the logical to do so has not been implemented yet. 2) These faces are boundary faces, but you forgot to specify boundary conditions for them. 3) In case you are using periodic boundaries, it might be possible that the periodic equivalent is not found. The algorithm to find the periodic donors is tolerance driven and something may go wrong if the periodic faces are not perfectly matching. . If you use periodic boundaries, my guess would be the third reason.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1140#issuecomment-748799921:187,log,logical,187,https://su2code.github.io,https://github.com/su2code/SU2/issues/1140#issuecomment-748799921,1,['log'],['logical']
Testability,I cannot reproduce the problem with the develop branch and these tests run very very often.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1331#issuecomment-894827611:65,test,tests,65,https://su2code.github.io,https://github.com/su2code/SU2/issues/1331#issuecomment-894827611,1,['test'],['tests']
Testability,"I checked some of the failed testcases by letting the solution converge:. - The testcase `inc_poly_cylinder` in serial and parallel mode, and `slinc_steady` in serial mode, converge to the same solution.; - For the serial AD testcase `discadj_incomp_cylinder`, the relative difference of the sensitivities is around 1e-3. I don't know if this is a bit high?. Regarding the other testcases:. - With the turbomachinery testcases and the hybrid regression tests I'm not too familiar.; - Note that `slinc_steady` in `parallel_regression.py` is started by a pure call to `SU2_CFD`, without `mpirun` or `parallel_computation.py`. This applies to few other testcases in this script as well. So this just repeats the serial regression.; - In parallel, the failed AD testcase `discadj_incomp_cylinder` does not converge (in both versions). I think I can update the residuals these days.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1189#issuecomment-775779432:29,test,testcases,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/1189#issuecomment-775779432,8,['test'],"['testcase', 'testcases', 'tests']"
Testability,"I copied the config files necessary for running the tutorial cases into their own folder. This should make it easier to modify or add tutorials, without having to worry about the regression tests. Furthermore, it is easier for the user to differentiate between tutorials and regression tests (which do not necessarily have to converge or to give physical solutions). I suggest to create a new repository for the mesh files of the tutorial cases next.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485:190,test,tests,190,https://su2code.github.io,https://github.com/su2code/SU2/pull/485,2,['test'],['tests']
Testability,"I did few tests (CGNS mesh format), following are the details -; **While trying to use all 8 cores per node (Total 70 nodes, each having 24 GB RAM)-**. Loading section Connect_PRISM of element type Prism.; malloc failed for element data; malloc failed for element data; ............ malloc failed for element data; Error allocating I4->I8 data array...; malloc failed for element data; Error allocating I4->I8 data array...; malloc failed for element data; ................; malloc failed for element data; malloc failed for element data; Loading section Connect_TETRA of element type Tetrahedron. **While trying 6 cores in each node**. Loading section Connect_PRISM of element type Prism.; malloc failed for element data; malloc failed for element data; malloc failed for element data; malloc failed for element data; malloc failed for element data. **Finally settled with 4 cores at each node and memory usage at every node is--** . PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND ; 4652 aero 30 10 872m 746m 10m R 100 3.1 43:03.38 SU2_CFD ; 4653 aero 30 10 1076m 951m 10m R 100 3.9 43:12.10 SU2_CFD ; 4654 aero 30 10 1162m 1.0g 10m R 100 4.3 43:15.15 SU2_CFD ; 4655 aero 30 10 1458m 1.3g 10m R 100 5.5 43:08.96 SU2_CFD . **With above, memory usage seems to be around 16.8 % of 24 GB RAM**. Hope I am not missing something else (some other usage etc...) and what should be the approximate memory requirement for such mesh sizes (around 60 million or is there a general guideline of memory requirement with mesh size for RANS computation with Implicit solver) ?. Regards; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/291#issuecomment-232018195:10,test,tests,10,https://su2code.github.io,https://github.com/su2code/SU2/issues/291#issuecomment-232018195,1,['test'],['tests']
Testability,"I did some more testing and can confirm, that also when relaxing the convergence criterion the solution does not change. Therefore I'm positive that I can get good results also with convective BCs. Nevertheless I tried restarting a simulation with convective BC and h=0 from an isothermal simulation and it diverged immediately after the first timestep. The same thing happened when restarting from an adiabatic simulation:. ```; ------------------------------ Begin Solver -----------------------------. Simulation Run using the Single-zone Driver; The simulation will run for 2000 time steps.; +---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+; | Time_Iter| Inner_Iter| Cur_Time| Time(sec)|Linear_Solve| Max CFL| rms[Rho]| rms[RhoU]| rms[RhoV]| rms[RhoE]| rms[k]| rms[w]| Avg_Press|Avg_Press(NS|Avg_Press(NS|Avg_Press(NS|Avg_Press(NS|HF(NS_Resona|HF(NS_Resona| tavg[HF]|tavg[Avg_Pre|tavg[Avg_Tem|; +---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+; | 2000| 0| 5.0000e-08| 4.2625e-02| 3| 1.0000e+02| -2.736211| -0.228378| -0.533349| 2.754171| 0.915535| 7.481489| 3.6909e+05| 0.0000e+00| 1.0000e+05| 1.0000e+05| 1.6909e+05| 4.5645e-11| 9.7518e-12| 0.0000e+00| 0.0000e+00| 0.0000e+00|; | 2000| 5| 5.0000e-08| 1.8793e-02| 9| 1.0000e+02| -6.912682| -4.751492| -4.808573| -1.347847| -4.059524| 4.964360| 3.6910e+05| 0.0000e+00| 1.0000e+05| 1.0000e+05| 1.6910e+05| 1.3436e-12| 1.5626e-12| 0.0000e+00| 0.0000e+00| 0.0000e+00|; | 2000| 10| 5.0000e-08| 1.6455e-02| 9| 1.0000e+02| -8.116638| -6.253576| -6.088205| -2.591315| -6.098708",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1872#issuecomment-1379475347:16,test,testing,16,https://su2code.github.io,https://github.com/su2code/SU2/issues/1872#issuecomment-1379475347,1,['test'],['testing']
Testability,"I do have some issues with the continuous adjoint Testcases. Taking for example the euler_wedge. In the primal, results/convergence are really close. The continuous adjoint case (contadj_wedge) however produces pretty different results especially along the Euler walls (will upload an image later). The cont.adj. case converges though. So I guess I am doing missing something which is specific to the continuous adjoint? ; Maybe someone with experience in that field can help me and take a look. @hlkline maybe?. Update: Fixed the problem -> I had to change the call signature of the base implementation of `BC_Euler_Wall `and I changed it for all the primal solvers but not the continuous adjoint solver. Therefore in during integration the empty method of the CSolver was called. I'll additionally add the `override `keyword to the method declaration to avoid that in the future. Thanks to @talbring for pointing me to that",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-532675551:50,Test,Testcases,50,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-532675551,1,['Test'],['Testcases']
Testability,"I do not believe that we should go back to a synchronous communication approach…in my experience asynchronous communication always gives better or equal performance and scalability to a carefully-done synchronous approach. It would be a step back to return to the v6.2 communication schedule. Perhaps the same tests can be repeated on a different machine with a different / better network and see what the outcome is?. Best,. Juan. On Mar 1, 2020, at 4:49 PM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. We could play around with the Wait() calls to wait for a specific message instead of the first to arrive, but it would take some effort to go back to the previous behavior, where the comms happened one at a time for each pair of ranks that needed to communicate. In v7, the behavior is that each rank posts all of their receives, then posts all of their sends, before the buffers holding the received data are checked and unloaded (once the communication of that particular message has completed). —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/894?email_source=notifications&email_token=AA5FFRHHV2YZWCMXS624GILRFL7ATA5CNFSM4K56OFUKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOENNR34Y#issuecomment-593174003>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AA5FFRGLYCGNEQSYRE4ZQRDRFL7ATANCNFSM4K56OFUA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593186725:310,test,tests,310,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593186725,1,['test'],['tests']
Testability,"I do not have a specific test case in mind unfortunately, most cases I have looked at have been Euler/multispecies. If you dont mind running turbulence, you can try looking into some flat plate simulations. Sorry, Im not more help here",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1063#issuecomment-671899897:25,test,test,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/1063#issuecomment-671899897,1,['test'],['test']
Testability,I do not know why a regression test from hybrid_regression_AD.py has failed. But it has nothing to do with this pull request. Therefore I think we can merge it.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1559#issuecomment-1070768533:31,test,test,31,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1070768533,1,['test'],['test']
Testability,"I don't have a specific preference for either #pragma warning disable 2196 or -DCODI_DisableIntelNoInlineWarning. However, if we do get this type of warning also for SU2, then it is logical to use the same solution for both. @MaxSagebaum, if you do not like the pragma solution, maybe we could have a general flag like -DDisableIntelNoInlineWarning?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1087#issuecomment-706554435:182,log,logical,182,https://su2code.github.io,https://github.com/su2code/SU2/issues/1087#issuecomment-706554435,1,['log'],['logical']
Testability,"I don't have access to a cluster to test this on. However, I usually will install Anaconda Python (3) in my home directory when I do run on clusters just to have complete control over the entire Python environment. I think for scientific/engineering computing this is generally a better strategy than relying on the system Python. . On another note, any hints on why these tests are failing?. ```; /home/travis/build/su2code/SU2/TestCases/optimization_euler/steady_naca0012; naca0012_geo: FAILED; ```. ```; execution command: SU2_GEO inv_NACA0012_adv.cfg > inv_NACA0012_adv.log; ERROR: The code was not able to get to the ""OBJFUN"" section.; ERROR: The SU2_GEO values could not be found.; ```. ```; /home/travis/build/su2code/SU2/TestCases/rans/naca0012; Error in test_vals!; turb_naca0012_sst_restart_mg: FAILED; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-321769609:36,test,test,36,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-321769609,5,"['Test', 'log', 'test']","['TestCases', 'log', 'test', 'tests']"
Testability,"I don't know if this is related, but the output of the stored test vals looks a little bit strange now:. ```; ==================== Start Test: contadj_fixedcl_naca0012 ====================; /home/travis/build/su2code/SU2/TestCases/fixed_cl/naca0012; contadj_fixedcl_naca0012: PASSED; execution command: parallel_computation.py -f inv_NACA0012_ContAdj.cfg.autotest > inv_NACA0012_ContAdj.cfg.log; test_iter=500 ; test_vals (stored): -2.093175,; -6.967350,; 0.249870,; -0.000019,; sim_vals (computed): -2.093175, -6.967350, 0.249870, -0.000019, ; delta_vals: 0.000000, 0.000000, 0.000000, 0.000000, ; test duration: 0.62 min; ==================== End Test: contadj_fixedcl_naca0012 ====================; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-321771383:62,test,test,62,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-321771383,6,"['Test', 'log', 'test']","['Test', 'TestCases', 'log', 'test']"
Testability,"I don't know what option that warning is included with, or if the behaviour is different across compiler versions.; I compile with with -Wall -Wextra, nevertheless please check the line I pointed to in your previous PR, I would gladly silence the warning but I don't know how that logic is supposed to work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/854#issuecomment-590808122:281,log,logic,281,https://su2code.github.io,https://github.com/su2code/SU2/pull/854#issuecomment-590808122,1,['log'],['logic']
Testability,"I don't think there are particular feature of Python 3 that are necessary except to be able to use SU2 in python 3 environment (What I would like). ; I'd like to work on porting SU2 to python 3 but as I currently use only basic features of SU2 (getting start tutorial on desktop computer), it is hard to me to check that changes on python code works for all python2.7 version test cases. ; Sure #228 could be very useful for that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-195716362:376,test,test,376,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-195716362,1,['test'],['test']
Testability,I edited your title not to scare someone reading the change log too much.; I would check (i.e. run to convergence) a few of the failed testcases especially those where CD and CL are not the same.; Small changes to only the residuals should be safe to update.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1189#issuecomment-774668565:60,log,log,60,https://su2code.github.io,https://github.com/su2code/SU2/pull/1189#issuecomment-774668565,2,"['log', 'test']","['log', 'testcases']"
Testability,"I encountered a similiar ""double free"" message as above when i am evaluating fixed CL RANS simulation.; I have tested three cases to see when does this error occur.; The first case is a RANS simulation for CRM wing. My configure file is opt_crm.txt in the attachment.; In this case, when I set FIXED_CL_MODE= YES, then in the end of the SU2_CFD execution, it will return messages below:. `Writing comma-separated values (CSV) surface files.; Merging coordinates in the Master node.; Merging solution in the Master node.; Writing SU2 native restart file.; Writing the forces breakdown file.; *** Error in `SU2_CFD': double free or corruption (!prev): 0x0000000007dc2aa0 ***; ======= Backtrace: =========; /lib/x86_64-linux-gnu/libc.so.6(+0x777e5)[0x7fbaa7b177e5]; /lib/x86_64-linux-gnu/libc.so.6(+0x7fe0a)[0x7fbaa7b1fe0a]; /lib/x86_64-linux-gnu/libc.so.6(cfree+0x4c)[0x7fbaa7b2398c]; SU2_CFD[0x8553d5]; SU2_CFD[0x855c59]; SU2_CFD[0x7583c2]; SU2_CFD[0x75ceb5]; SU2_CFD[0x40759c]; /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf0)[0x7fbaa7ac0830]; SU2_CFD[0x735109]; ======= Memory map: ========; 00400000-00d07000 r-xp 00000000 08:28 1068882 /home/wanghao/software/SU2-5.0.0_me/bin/SU2_CFD; 00f06000-00f2d000 r--p 00906000 08:28 1068882 /home/wanghao/software/SU2-5.0.0_me/bin/SU2_CFD; ......`. But, if i turn off the FIXED_CL_MODE, this error won't occur.; Then i tried an invisid test case, this case is orriginally from the TestCases folder of SU2 (TestCases/euler/naca0012). In this case, SU2 works well for both FIXED_CL_MODE and FIXED_AOA_MODE.; Finally, i tried another tutorial case for NACA0012 (from /TestCases/rans/naca0012), then SU2 has the same problem in FIXED_CL_MODE as in the first case. Furthermore, I have noticed that this bug is related to the compilers. ; 1. Intel C++ 2013 + Mpich2-3.0.4, fixed Cl model works; System: RHEL 5.3; 2. Intel C++ 2017 + Mpich2-3.0.4, fixed Cl model fails; System: Ubuntu 16.04; 3. GCC6.1.0 + Mpich2-3.0.4, fixed Cl model fails; System: RHEL 5.3",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/383#issuecomment-306425408:111,test,tested,111,https://su2code.github.io,https://github.com/su2code/SU2/issues/383#issuecomment-306425408,1,['test'],['tested']
Testability,"I face the same issue with the new Docker images (based on Ubuntu 20.04).; https://github.com/su2code/SU2/pull/1619; https://github.com/su2code/SU2/runs/6384596072?check_suite_focus=true. Neither the proposed change by @aa-g :. ```diff; diff --git externals/cgns/hdf5/meson.build externals/cgns/hdf5/meson.build; index f85d5ba86d..c7655a6d1e 100644; --- externals/cgns/hdf5/meson.build; +++ externals/cgns/hdf5/meson.build; @@ -25,8 +25,8 @@ hdf5_conf_data.set('version', '1.12.1'); ext_deps = []; ; ; -opt_zlib = dependency('zlib', required: false, static: true); -opt_szip = dependency('szip', required: false, static: true); +opt_zlib = dependency('zlib', required: false, static: false); +opt_szip = dependency('szip', required: false, static: false); ; if opt_zlib.found() and cc.has_header('zlib.h'); if cc.has_function('inflate', dependencies: opt_zlib, prefix: '#include <zlib.h>'); ```. nor the extra compiler/linker flags seems to help me:. ```; LDFLAGS=""-fPIC"" CFLAGS=""-fPIC"" CXXFLAGS=""-fPIC"" ./docker/build/compileSU2.sh -b refs/pull/1619/merge -f ""-Denable-pywrapper=true -Dwith-mpi=disabled -Denable-tests=true --warnlevel=0 --werror""; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568#issuecomment-1123549692:1114,test,tests,1114,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568#issuecomment-1123549692,1,['test'],['tests']
Testability,I forgot to mention that MPI-3 functionality is required for these changes. Can we assume that all practical MPI implementations support the MPI-3 standard or should we add a test in configure to check?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/574#issuecomment-418477655:175,test,test,175,https://su2code.github.io,https://github.com/su2code/SU2/pull/574#issuecomment-418477655,1,['test'],['test']
Testability,"I found only one testcase for rough walls, in `TestCases/incomp_rans/rough_flatplate/rough_flatplate_incomp.cfg`. It's not contained in the regression tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1286#issuecomment-841130361:17,test,testcase,17,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-841130361,3,"['Test', 'test']","['TestCases', 'testcase', 'tests']"
Testability,"I found parallel execution commands for SU2 test case using mpirun. For example, to run the CFD solver on 8 cores, you might enter: $ mpirun -n 8 SU2_CFD default.cfg. Also noted OpenMP header files and c++ files at **~SU2/Common/include/parallelization/ path.** . OpenMP (shared memory) – Parallel programming on a single node. ; MPI (distributed memory) – Parallel computing running on multiple nodes. SU2 supports both OpenMP and MPI. So, we hope that CUDA C++ can be supported by SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1407#issuecomment-947511482:44,test,test,44,https://su2code.github.io,https://github.com/su2code/SU2/issues/1407#issuecomment-947511482,1,['test'],['test']
Testability,"I found the SWBLI config file. I noticed that it is the NK solver. I would test this case without the NK solver.; Moreover, I've noticed that the entropy fix is very low; how about raising it to 0.2 or using a different flux (JST, AUSMPLUSUP2)? It may sound irrelevant, but it is worth the try.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2334419307:75,test,test,75,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2334419307,1,['test'],['test']
Testability,"I get the following error from su2Deform when using python 3.7 and SU2 6.1.0:. ```; su2Deform( ""testing.cfg"", args.numberProc) # Run SU2 mesh deformation; File ""$SU2_RUN/mesh_deformation.py"", line 83, in mesh_deformation; info = SU2.run.DEF(config); File ""$SU2_RUN/SU2/run/interface.py"", line 158, in DEF; konfig.dump(tempname) ; File ""$SU2_RUN/SU2/io/config.py"", line 125, in dump; dump_config(filename,self); File ""$SU2_RUN/SU2/io/config.py"", line 961, in dump_config; write_config(filename,config) ; File ""$SU2_RUN/SU2/io/config.py"", line 775, in write_config; n_lists = len(new_value); TypeError: object of type 'map' has no len(); ```. Any help fixing this would be greatly appreciated.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/620:96,test,testing,96,https://su2code.github.io,https://github.com/su2code/SU2/issues/620,1,['test'],['testing']
Testability,"I had raised the issue #1000 and followed the development when #1102 was proposed. I tried to install SU2 on my new PC with the proposed changes but the ninja built failed with [this long error](https://www.dropbox.com/s/mh3x98kcv8pifv7/ninjarun.log?dl=0). **To Reproduce:**; Run the meson script similar to the following command: `./meson.py build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Dcustom-mpi=true -Denable-pywrapper=true -Dextra-deps=lapack,mpich -Denable-pastix=false --prefix=/home/slimshady/UserPackages/su2-test/SU2_INSTALL`. **Desktop:**; - OS: Arch Linux: Kernel 5.10.4; - C++ compiler and version: gcc (GCC) 10.2.0; - MPI implementation and version: mpich 3.3.2; - SU2 Version: 7.0.8. I was able to install it by changing the meson.build file like so:; ```; # mpi_dep = [dependency('mpi', language: 'c', required : get_option('with-mpi')),; # dependency('mpi', language: 'cpp', required : get_option('with-mpi'))]; mpi_dep = [dependency('mpich', required : get_option('with-mpi')), #new-change; dependency('mpich', required : get_option('with-mpi'))] #new-change; ```; and then configuring without the custom-mpi flag. What could be the issue? Am I using the flags wrong?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1151:246,log,log,246,https://su2code.github.io,https://github.com/su2code/SU2/issues/1151,2,"['log', 'test']","['log', 'test']"
Testability,"I had the same issue, its depended on the way the mesh is partitioned. There is an error in the calculation of NSpan (they should be the same for the inlet and outlet) when the boundary is on two different cores (points are counted twice). I resolved it by making an extra entry in the config that specifies the number of spanwise sections. The testcases are meshed in such a way that the partitioning rarely lead to the outlet being partitioned across two cores, so the errors doesnt pop up there.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/990#issuecomment-630646560:345,test,testcases,345,https://su2code.github.io,https://github.com/su2code/SU2/issues/990#issuecomment-630646560,1,['test'],['testcases']
Testability,"I have a couple of question and suggestions about things I noticed during moving the initialization.; 1. `SU2_DOT` did not call `omp_initialize()`, it does now after moving `omp_initialize()` to the driver constructor. Does it actually run any hybrid AD stuff?; 2. The number of OpenMP threads can be specified for `SU2_CFD` via the `-t` parameter, but for `SU2_DOT` and the python wrapper I saw no way to configure it. Making the number of threads a parameter of the driver constructors and calling `omp_set_num_threads` in the constructor of `CDriverBase` seems like a natural way to enable this for all flavours of SU2. Would that be a nice addition?; 3. I couldn't find any python wrapper tests among the parallel AD and hybrid AD tests. Could any of the serial AD python wrapper tests serve as a basis for a parallel AD or hybrid AD one?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1966#issuecomment-1470026920:693,test,tests,693,https://su2code.github.io,https://github.com/su2code/SU2/pull/1966#issuecomment-1470026920,3,['test'],['tests']
Testability,"I have a few updates. I found out that most of my FGMRES problems in this branch where related to the fact that I was using single precision for the linear system. You can see it in this graphs for the residuals of Rho. ![RMSRho_Mesh_3](https://github.com/user-attachments/assets/185b8195-e415-4dff-9332-cff573c069cc). The first two curves are in mixed-precision and they stop long before reaching the minimum residual required due to divergence of the linear solver. Moreover, it seems that the 2003 model here implemented (which, simply put, considers the full reynolds stress tensor for the computation of the production of k and always considers k in the stress tensor and in the thermodynamic variables) has faster convergence and increases the recirculating zone (maybe due to the reduction of turbulence kinetic energy) which is a feature that has also been seen in [DOI:10.1017/aer.2020.93]. . ![SFC_Mesh_3](https://github.com/user-attachments/assets/81a50021-6b58-4a84-9057-a18b5bab023c). There are some differences between the use of the TMR boundary conditions and the ones used before. The results improve with respect to the develop in the prediction of the SFC distribution, which has results completely off from the V&V page of SU2. ![SFC_Mesh_3_Old](https://github.com/user-attachments/assets/0f4d634b-df31-4f86-a324-d9f67947f1ff). ![RMSRho_Mesh_3_Old](https://github.com/user-attachments/assets/24d5c2f5-93fe-432f-82d9-c050a90f7339). I may keep on checking if the implementation of the v2003 model is correct or not by searching for other test cases (probably coming from DOI:10.1017/aer.2020.93).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2393433487:1556,test,test,1556,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2393433487,1,['test'],['test']
Testability,"I have a question regarding the failed test case:; `opt_multiobj1surf_py` using the config file `inv_wedge_ROE_multiobj_1surf`. ; In this config, is the option `RESTART_SOL=YES` neccessary? There is no `RESTART_ITER` specified. ; (Setting `RESTART_SOL=NO` fixes the failed test, however, I don't want to roam in other test cases without asking first ;) ). Edit: Fixed this issue without touching the test case. I got the point of this test case wrong :)...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/964#issuecomment-626120951:39,test,test,39,https://su2code.github.io,https://github.com/su2code/SU2/pull/964#issuecomment-626120951,5,['test'],['test']
Testability,I have a v&v test baking for this which I'll add in another PR,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1554:13,test,test,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/1554,1,['test'],['test']
Testability,I have added pull requests for ramp Test Case and documentation update (limiter portion) at respective places for review. When I should update the parallel_regression.py? Probably after addition of ramp case into develop? I have added one case few years back but not not able to recall the procedure...,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2006#issuecomment-1500865610:36,Test,Test,36,https://su2code.github.io,https://github.com/su2code/SU2/pull/2006#issuecomment-1500865610,1,['Test'],['Test']
Testability,"I have added the new option NUM_METHOD_GRAD_RECON to specify a separate method for computing the reconstruction gradient. If that option is not present, then no additional memory is allocated and no extra gradient computation occurs. I have also put in simple feedback from the linear solver residual and the nonlinear residual to the nonlinear controller. If the linear system converges less than a half an order of magnitude, then the CFL is lowered. A Cauchy-like criteria checks for stall in the nonlinear residuals and drops the CFL to the minimum floor to kick the solver out of a rut. Both of these use factors that are empirical from my tests. Will probably be improved with time and more testing, but they do seem to improve behavior. @koodlyakshay : I had success with the inc. laminar backward facing step after adding extra iterations to the linear solve. For some cases, this is necessary to get a large speedup. I am seeing good speedup for most of the cases within our TestCases repo. If you have some tough cases not covered by the repo, please give those a try.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-536145232:645,test,tests,645,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-536145232,3,"['Test', 'test']","['TestCases', 'testing', 'tests']"
Testability,"I have covered all operations used in non adjoint use, the non ideal part of the implementation I mentioned above is that the parallelization is ""local"", i.e. we get to the operation we want to make parallel and launch the threads there, for simple vector-vector operations the overhead may be significant.; Ideally we would have a parallel construct at a higher level, say CSysSolve::Solve, so that the threads are already in flight when we get to those small operations.; In principle it is not too hard to do that, but it needs to be done carefully especially when the execution gets to an MPI part of the code (which thread(s) communicate, etc.).; I will try to benchmark this to put numbers on the performance / simplicity trade-off.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-560572616:666,benchmark,benchmark,666,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-560572616,1,['benchmark'],['benchmark']
Testability,I have created CMake configuration files to build and install SU2.; I have tested the build and installation process on both the Linux and OS X platform.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/30:75,test,tested,75,https://su2code.github.io,https://github.com/su2code/SU2/pull/30,1,['test'],['tested']
Testability,"I have created a branch ""fix_large_mesh"" in which I am changing those MPI_Type_indexed calls. I am testing the changes now on our large case. Will let you all know how it goes, and then submit a pull request. As for the node[...]->GetnNeighbor issue, the case I have been working on does not have periodicity, but other cases may. Can you clarify the difference between nNeighbor and nPoint? Also, note that this issue *could* have been caused by an incorrect setting of nNeighbor due to the MPI_Type_indexed bug.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/949#issuecomment-622562807:99,test,testing,99,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-622562807,1,['test'],['testing']
Testability,I have downloaded most up to date version of SU2 and compiled for parallel. Analysis produced history etc. files successfully but no vtk plot files. I tested it on Quick folder with given example and there also it does not produce any plot files. I wonder if there is something I need to do to fix the issue.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/173:151,test,tested,151,https://su2code.github.io,https://github.com/su2code/SU2/issues/173,1,['test'],['tested']
Testability,"I have just made a quick test. Because --enable-PY_WRAPPER is not in the form of --key=value (like --prefix=PREFIX or --with-cc=mpicc), it is not automatically included in the argument_dict dictionary and thus not passed to the configure script. That is why a treated this option in the same way as the --enable-mpi option, just to be sure. Any advice on how should I treat this --enable-PY_WRAPPER option without changing the ./preconfigure.py ? Or do we just keep everything like it is ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/298#issuecomment-240523627:25,test,test,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/298#issuecomment-240523627,1,['test'],['test']
Testability,"I have just uploaded an empty file as a placeholder for your mesh, @jaspe55. Can you please try to update your local copy of the develop branch from the TestCases repository and then overwrite the empty file with your mesh? You can find the file in TestCases/disc_adj_euler/arina2k/, or view in the browser here:. https://github.com/su2code/TestCases/tree/develop/disc_adj_euler/arina2k",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-448506828:153,Test,TestCases,153,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-448506828,3,['Test'],['TestCases']
Testability,"I have now added defaults to all getkind_solver switches: the first objective here is to pass the regression tests. It still has to be checked if we need to add solver switches, or throw an error if for some reason we end up in the default switch.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1451#issuecomment-979788570:109,test,tests,109,https://su2code.github.io,https://github.com/su2code/SU2/pull/1451#issuecomment-979788570,1,['test'],['tests']
Testability,I have opened Su2_CFD module in debug mode (linux - command line ). I can step through line by line by giving step command of a test case. I could removed the header files dependencies. But i am facing errors with Class . Is it possible to make standalone program of SU2 test case without any dependency ? Is it possible to segregate the test case code alone from SU2 ?. kindly share your knowledge on this .,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1407:128,test,test,128,https://su2code.github.io,https://github.com/su2code/SU2/issues/1407,3,['test'],['test']
Testability,"I have recently been trying to run a series of 3D inverse design cases but have been struggling to get it to work properly. . To use the inverse design feature i have set; INV_DESIGN_CP= YES ; in the config file, this adds an output variable CP_diff to the history file. To test this variables i have been running a test with two wings:; NACA0012 wing (unit chord, span 4, no sweep or taper); NACA4410 wing (unit chord, span 4, no sweep or taper). Here there NACA0012 will act as the starting wing and the NACA4410 will be the target. My current process is:; Mesh NACA0012;; Deform mesh to NACA4410;; Run SU2;; Read in data from solution file and output wing surface to TargetCP.dat in format; ""Global_Index"", ""x_coord"", ""y_coord"", ""z_coord"", ""Pressure"", ""Pressure_Coefficient"", ""Mach_Number"";; Set mesh back to original NACA0012;; Run SU2; (This produces a solution with Cp_diff=3.4868); Deform mesh to NACA4410;; Run SU2; (This produces a solution with Cp_diff=0.4733). This final run should surely give Cp_diff=0?? I have checked the final pressure distributions and they are within 5e-8 of each other at all points. What equation is used to calculate Cp_diff?. What format should the TargetCp.dat file be in? I have based the format used here on the test case example, this is only a 2D case though. Any help would be much appreciated. I have included my config file and a TargetCp.dat file below. [inv_opt3D.cfg.txt](https://github.com/su2code/SU2/files/533463/inv_opt3D.cfg.txt); [TargetCp.dat.txt](https://github.com/su2code/SU2/files/533465/TargetCp.dat.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/321:274,test,test,274,https://su2code.github.io,https://github.com/su2code/SU2/issues/321,3,['test'],['test']
Testability,"I have run some test to verify that the changes here also work ok for unsteady flows with dual time-stepping (even the CFL adaption seems to work pretty well for pseudo time). I also added some checks to make sure CFL adaption is disabled for TIME_STEPPING mode. @EduardoMolina @clarkpede @cvencro: if you have some time, can you please test this branch out with some of your unsteady cases to verify that everything is ok for you as well? Let me know if you see any issues",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-539278925:16,test,test,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-539278925,2,['test'],['test']
Testability,"I have run the CHT regression test to convergence in both cases, and it looks ok to me. I think it is fine to move forward with this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/605#issuecomment-435986302:30,test,test,30,https://su2code.github.io,https://github.com/su2code/SU2/pull/605#issuecomment-435986302,1,['test'],['test']
Testability,"I have started updating the regression tests. ; One thing I would like to do is this: when a test uses RESTART=YES, then the restart file comes from the previous test, which is exactly the same except for RESTART=NO. In this way, restart files will always be up to date. Question is if it is ever important for a regression test to have restart files that are more fully converged.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1784#issuecomment-1304259180:39,test,tests,39,https://su2code.github.io,https://github.com/su2code/SU2/pull/1784#issuecomment-1304259180,4,['test'],"['test', 'tests']"
Testability,I have tested it only on a 2D case. So maybe we should wait until we have a working 3D periodic case.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/211#issuecomment-158881066:7,test,tested,7,https://su2code.github.io,https://github.com/su2code/SU2/pull/211#issuecomment-158881066,1,['test'],['tested']
Testability,"I have tested the adjoint FSI solver, results from matching, conservative, and consistent interpolation all agree. I am attaching only the bare minimum [files](https://github.com/su2code/SU2/files/2475798/testing.zip): meshes, configs, histories and logs. As to avoid uploading large files, I can obviously share the solutions.; To me the original issue is fixed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/597#issuecomment-429571819:7,test,tested,7,https://su2code.github.io,https://github.com/su2code/SU2/pull/597#issuecomment-429571819,3,"['log', 'test']","['logs', 'tested', 'testing']"
Testability,I have tested the tripping of the cross-diffusion term also in the residuals on a more complicated test case and indeed it improved convergence. Should I remove this change and use the value of cross-diffusion coming from the computation of F! blending function as was before?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2284282127:7,test,tested,7,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2284282127,2,['test'],"['test', 'tested']"
Testability,"I haven't been able to try this myself but from what I have read in a few resources online, it should return `arm64` on macOS and `aarch64` otherwise for ARM. . Possibly the code could test for both outputs.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2159#issuecomment-1793765550:185,test,test,185,https://su2code.github.io,https://github.com/su2code/SU2/issues/2159#issuecomment-1793765550,1,['test'],['test']
Testability,"I haven't fully figured out how the two repositories interact, but if I copy the data from https://github.com/su2code/TestCases/pull/124 into ./TestCases/gust and launch the hybrid_regression.py, the new testcase succeeds.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1551411646:118,Test,TestCases,118,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1551411646,3,"['Test', 'test']","['TestCases', 'testcase']"
Testability,"I haven't looked at this in awhile but I believe I had it working at the time. The volume of each element is already calculated, except that I believe the absolute value of it is used to avoid negative volume cells. The patch just lets the volume get calculated and reorients the element if the volume is negative. This makes a lot more sense to me than using what seems to be an arbitrary algorithm to determine if the elements should be reoriented. . I came across this when I was writing a 3d mesh generator. It doesn't create elements of the best quality but I made sure that they had a positive volume. SU2 would then reorient some elements on me, which caused even more issues for the meshes I created . . I can probably find the time to look into fixing the conflicts and creating a test case if that's desired.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/182#issuecomment-256731488:790,test,test,790,https://su2code.github.io,https://github.com/su2code/SU2/pull/182#issuecomment-256731488,1,['test'],['test']
Testability,I hope to have fixed all regression testcases over at feature_flamelet so please merge and see whether we can get some ✔️'s here as well,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1332#issuecomment-898048781:36,test,testcases,36,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-898048781,1,['test'],['testcases']
Testability,"I just (08/23/2013 @ ~12:30p.m. PDT) pulled over the latest changes via git. After re-compiling, and launching a parallel job (OM6 Turbulent Wing Test Case) with the parallel_computation.py script, SU2 seems to launch 4 serial, duplicate jobs rather than 1 parallel job on 4 cores.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2:146,Test,Test,146,https://su2code.github.io,https://github.com/su2code/SU2/issues/2,1,['Test'],['Test']
Testability,"I just checked and develop has that problem too, I see it from log files in build n 600.2. That's probably something we missed form an older pull request.; Maybe we should start thinking about adding a test to check also those python script (?) just to avoid such issues in the future. Cause right now we are only looking at residuals and we can't check them.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/312#issuecomment-252172548:63,log,log,63,https://su2code.github.io,https://github.com/su2code/SU2/pull/312#issuecomment-252172548,2,"['log', 'test']","['log', 'test']"
Testability,"I just committed a second round of changes that I would appreciate some feedback on. Compilation is successful with these changes, however, upon testing, I receive the following message: . Error in ""void CConfig::SetConfig_Parsing(std::istream&)"": ; -------------------------------------------------------------------------; Line 271 SPECIFIED_SUPERSONIC_INLET_PROFILE: invalid option name. Check current SU2 options in config_template.cfg.; Did you mean SPECIFIED_INLET_PROFILE?; Line 274 SUPERSONIC_INLET_FILENAME: invalid option name. Check current SU2 options in config_template.cfg.; Did you mean INLET_FILENAME?. I had already adjusted CConfig.cpp to include supersonic inlet profile inputs, but apparently I am not implementing everything I need to. I'm unsure where else I would need to make changes. Any suggestions?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1652#issuecomment-1151296832:145,test,testing,145,https://su2code.github.io,https://github.com/su2code/SU2/pull/1652#issuecomment-1151296832,1,['test'],['testing']
Testability,"I just found [a blog post](https://codingnest.com/the-future-of-catch2/) on the future directions of Catch2. There's a couple of important points for our discussion. The developer plans to adopt a hybrid approach, with:. 1. A stripped-down, header-only version.; 2. A full-feature, typical library (i.e. it must be compiled and linked). This approach is very similar to Boost's setup. Google Test does not offer a header-only version. Additionally, the developer plans to drop C++11 support, and move to C++14. A simpler branch will still support C++03. It's not clear which features are supported in the C++03 variant, and which ones aren't. Google Test is also moving to support only C++11 in their next release, but their current release fully supports pre-C++11. All of this discussion raises the question: Do we want to require C++11 for unit tests?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-500411194:392,Test,Test,392,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-500411194,3,"['Test', 'test']","['Test', 'tests']"
Testability,I just noticed that this also means that e.g. SURFACE_STATIC PRESSURE in screen outputs cannot be used for regression tests as the python script needs a delimiter in between values which is not the case with that doubled output.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1336#issuecomment-889916141:118,test,tests,118,https://su2code.github.io,https://github.com/su2code/SU2/issues/1336#issuecomment-889916141,1,['test'],['tests']
Testability,"I just tested some boundary conditions on O cylinder case.; And I found this issue occurs at near axis when AXISYMMETRIC = YES regardless of which BC is applied at axis (y=0). For example, this also arises on BC_HeatFlux_Wall with zero heat flux.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1373#issuecomment-938657587:7,test,tested,7,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373#issuecomment-938657587,1,['test'],['tested']
Testability,"I just tested the 3D adaptation on an ONERA M6 and it seems to be working fine for me. <img width=""790"" alt=""Screen Shot 2020-05-06 at 2 05 56 PM"" src=""https://user-images.githubusercontent.com/19416354/81228401-e0f75180-8fa2-11ea-98e2-c0e378566212.png"">. I just updated AMGIO to include surface/volume element orientation checks, not sure if that'll help with your issue. If the updated code doesn't fix things, can you upload your initial mesh, flow restart, and the flo.meshb and flo.solb files from adap/ini?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-624894422:7,test,tested,7,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-624894422,1,['test'],['tested']
Testability,"I just tried it and it failed. The error message is extremely long, I am attaching a [text file](https://github.com/su2code/SU2/files/4685129/su2_custom-mpi.log) for that. This was my meson command earlier: `./meson.py build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL`. Then I did this: ; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py configure build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dcustom-mpi=true -Dwith-mpi=enabled -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py setup --wipe build; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:157,log,log,157,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776,1,['log'],['log']
Testability,"I just updated the serial and parallel regression tests. There is one SA test that has a restart file, I will also update that one.; @rois1995 can you have a look at the failed cases for the tutorial.py and vandv.py regression tests? I will have a look at the *_AD.py regressions this Friday.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2014#issuecomment-1561979306:50,test,tests,50,https://su2code.github.io,https://github.com/su2code/SU2/pull/2014#issuecomment-1561979306,3,['test'],"['test', 'tests']"
Testability,"I lied and tried to fix it better, I tried it with one of the examples and it does not crash anymore...; Wait for the tests to pass, do git pull to get the changes and try it again please, maybe it will work, maybe it will blow up somewhere else.; You can use more cores without using ""more MPI"" if you enable OpenMP:; https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/; There is a talk explaining how to use it here https://su2foundation.org/su2conference2020/ (hybrid parallel)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1219#issuecomment-790984246:118,test,tests,118,https://su2code.github.io,https://github.com/su2code/SU2/issues/1219#issuecomment-790984246,1,['test'],['tests']
Testability,"I like this a lot. I often have a hard time reading the free-stream conditions, and this makes it a lot easier to read. Don't think it is as necessary for the solver iterations, but I don't see any detriment to outputting it like that. Would this require changing the regression testing script that reads the output log to diff the numerical values?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591#issuecomment-426812077:279,test,testing,279,https://su2code.github.io,https://github.com/su2code/SU2/issues/591#issuecomment-426812077,2,"['log', 'test']","['log', 'testing']"
Testability,"I looked at the transport equations and implemented the SST2003m model (as far as I can tell); I'm not entirely sure about what happens in CTurbSSTSolver::Postprocessing; what's the difference between:; flownodes->; nodes->; geometry->nodes. I also have to check the implementation of the boundary conditions. When the implementation has been checked, I'll tackle the regression tests",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1557#issuecomment-1059936471:379,test,tests,379,https://su2code.github.io,https://github.com/su2code/SU2/pull/1557#issuecomment-1059936471,1,['test'],['tests']
Testability,"I made a fully unstructured version of the mesh and it seems I can now pass the `Geometry Preprocessing` stage. I'm now having a different issue that I do not know if it is related. After 250 iterations, the simulation hangs, with the following output in the `/adap/ini/log.out`:. ```; | 249| -7.427827| 0.000000| 0.024016| 0.000401| 8.4160e+09|; | 250| -7.390279| 0.000000| 0.024016| 0.000401| 8.4160e+09|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; |Paraview binary |flow.vtk |; |Paraview binary surface |surface_flow.vtk |; [1609863350.417715] [super:1071838:0] sock.c:344 UCX ERROR recv(fd=50) failed: Bad address; [1609863350.417771] [super:1071838:0] sock.c:344 UCX ERROR recv(fd=25) failed: Connection reset by peer; [1609863350.418024] [super:1071838:0] sock.c:344 UCX ERROR sendv(fd=-1) failed: Bad file descriptor; ```. UPDATE: Bizarrely, if I attempt to run the adaptation script again, it now fails earlier with the same UCX Connection reset error:; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 774736 grid points before partitioning.; 4416440 volume elements before partitioning.; 3 surface markers.; 18040 boundary elements in index 0 (Marker = BODY).; 44930 boundary elements in index 1 (Marker = FARFIELD).; 177930 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; [1609864445.066242] [super:1075233:0] sock.c:344 UCX ERROR recv(fd=98) failed: Connection reset by peer; [1609864445.066058] [super:1075147:0] sock.c:344 UCX ERROR recv(fd=54) failed: Connection reset by peer; ```; Is this a bug?. UPDATE: This seems to have gone away pulling a different version OpenMPI and recompiling.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-754746706:270,log,log,270,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754746706,1,['log'],['log']
Testability,I made a light test case to reproduce the issue. It's a cylinder in a flowfield. It's only 112k cells. ![mesh](https://user-images.githubusercontent.com/91184648/145433376-ec7d4309-acc6-43d2-a172-39502e823147.png); ![swpeptCylinder](https://user-images.githubusercontent.com/91184648/145433398-97123613-824f-4f81-a143-aaae790ce252.png); ![residual_energy](https://user-images.githubusercontent.com/91184648/145433426-e6fc38f8-8482-47be-bd52-dca747b3e3e4.png). The residuals never converge:; ![residual_convergence](https://user-images.githubusercontent.com/91184648/145432900-0c2d7432-807b-4fe4-b24d-abf01cdc7bc4.png); Here is the archive containing the case:; [cyl.zip](https://github.com/su2code/SU2/files/7686715/cyl.zip),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1467#issuecomment-990001446:15,test,test,15,https://su2code.github.io,https://github.com/su2code/SU2/issues/1467#issuecomment-990001446,1,['test'],['test']
Testability,"I made the blending function for the FFD implementation more general and added the possibility to use BSplines instead of Bezier curves. . BSplines have a local support which might be advantageous in some cases. The implementation is ready, I'll add a test case asap (possibly simply based on an existing FFD case).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/354:252,test,test,252,https://su2code.github.io,https://github.com/su2code/SU2/pull/354,1,['test'],['test']
Testability,"I managed to implement the computation of grad(n*U)*n, but at the moment it is located into CTransLMSolver::PreProcessing. It seems to work with a structured mesh on a flat plate. Currently, I am testing with a 2D profile too. However, being into the PreProcessing of the transition solver, the normals are computed at each iteration, thus it is not computationally efficient if non-deforming meshes are used. I am looking into where to put it such that it is computed just if the mesh is updated (and at the first iteration of course). . Plus, I have added a whole lot of variables to the output, but they will be removed in the final version. They are just used as debug.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1901#issuecomment-1443670288:196,test,testing,196,https://su2code.github.io,https://github.com/su2code/SU2/pull/1901#issuecomment-1443670288,1,['test'],['testing']
Testability,"I need to modify the test cases. So please, do not merge in this PR yet.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/565#issuecomment-419739985:21,test,test,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/565#issuecomment-419739985,1,['test'],['test']
Testability,"I noticed that the `release_v6.0.0` branch isn't set up with Travis CI. Are there plans to have Travis CI track this branch (v6.0.0), or are the regression tests only happening on other branches?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/507#issuecomment-365301931:156,test,tests,156,https://su2code.github.io,https://github.com/su2code/SU2/pull/507#issuecomment-365301931,1,['test'],['tests']
Testability,"I noticed that the output phase values for WRT_PERFORMANCE= YES are currently off due to the number of output phases not being correctly tracked (we call the SetResultsFiles in the Iteration class most of the time, and the one in the driver with the timing only at the end of the run). @talbring, did you already have something in mind for this? Otherwise, I can think of a cleaner way to handle those performance benchmarks. I think it would be good to start printing that information by default too potentially. A good place might be within the MPI structure, since it is accessible everywhere and we can also hide the timer ifdefs for MPI.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/798#issuecomment-543913612:414,benchmark,benchmarks,414,https://su2code.github.io,https://github.com/su2code/SU2/pull/798#issuecomment-543913612,1,['benchmark'],['benchmarks']
Testability,"I noticed there was a lot of duplicate code in the turbulent numerics files (`numerics_structure.hpp` and `numerics_direct_turbulent.cpp`). Since I'm working with new model equations for hybrid RANS/LES, I didn't want to add to the technical debt. So I decided to refactor the turbulence numerics using the [template design pattern](https://sourcemaking.com/design_patterns/template_method). Basically, I moved common behavior for the viscous and the upwinding residuals to respective base classes and then left the specifics of each model to derived classes. I did my best to not change any of the underlying behavior. The source residual calculations for SST and SA have little in common. I did not apply the template design pattern to them. I named the template classes `CUpwSca_Abstract` and `CAvgGrad_Abstract` because the `_Template` suffix was already taken. I also noticed that there were almost no difference between the old `CAvgGrad_` classes and the `CAvgGradCorrected_` classes. The gradient correction is such a small change that it's better to have a single class with a switch than two classes that are about 95% similar. So I added a boolean property and logical switching if correction is to be applied to the gradients. This boolean parameter is now a parameter for the constructor. Overall, these changes trim down a lot of duplicate code (40% of the lines in `numerics_direct_turbulent.cpp`). These changes could be extended to other areas (such as the transition model), but I left that to future pull requests.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/422:1172,log,logical,1172,https://su2code.github.io,https://github.com/su2code/SU2/pull/422,1,['log'],['logical']
Testability,"I opened this pull request to let the AD regression tests run. Once this is finished, it can directly be merged.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/350:52,test,tests,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/350,1,['test'],['tests']
Testability,"I pointed the PB solver to the existing vorticity and strain mag. functions and removed the heat.cpp file. If you can make your testcase available, then we can already setup our own regression tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2210#issuecomment-1945911569:128,test,testcase,128,https://su2code.github.io,https://github.com/su2code/SU2/pull/2210#issuecomment-1945911569,2,['test'],"['testcase', 'tests']"
Testability,"I propose adding a unit-testing framework and unit-tests to SU2. After chatting with @economon, I've decided to move the discussion here to get additional input. ## What is unit testing?. For those not familiar with unit testing, unit testing allows the testing of small bits of behavior, ideally using isolated bits of code. It is not intended to replace validation testing or formal verification tests. Instead, it serves a unique purpose. Consider the three following use cases:. + You're developing a new feature, and you want to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; + You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; + You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this [relevant Stack Exchange question.](https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes). ## What do I propose?. Our research group at UT Austin has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see [their document",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:24,test,testing,24,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,11,['test'],"['test', 'testing', 'tests']"
Testability,I ran your test case 4 times and could not reproduce the problem. The code rewrites the `restart_flow.dat` fine and there were no warnings. I even tried to run modify the `config.cfg` so we run with different number iterations; therer are still no errors. . I have SU2 v7.0.2 running on Manjaro x64 and mpiexec 4.0.2,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/906#issuecomment-602097912:11,test,test,11,https://su2code.github.io,https://github.com/su2code/SU2/issues/906#issuecomment-602097912,1,['test'],['test']
Testability,I re-ran the test case with develop and actually didnt receive any error during the pre-processing step. I believe this is indeed an artifact due to Eduardo's WMLES implementation that was adversely affecting the communication pattern in the pre-processing stage. I will close this issue then.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1099#issuecomment-719839655:13,test,test,13,https://su2code.github.io,https://github.com/su2code/SU2/issues/1099#issuecomment-719839655,1,['test'],['test']
Testability,"I reduced the number of iterations for some of the regression tests. They need ~ 45 min now. This should at least temporarily help. Along with that I found one or two bugs ... Nevertheless, all of this shouldn't affect a lot of people, so I hope we can merge this in asap, to avoid any more travis runs to fail :)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/480:62,test,tests,62,https://su2code.github.io,https://github.com/su2code/SU2/pull/480,1,['test'],['tests']
Testability,I remember having the same problem when computing impinging jets flows on a hot surface in symmetric configurations. The maximum heat flux should be at the stagnation point of the jet (which is in the symmetry plane) but the simulation predicted the maximum at some distance from the symmetry. Mirroring the mesh and computing the full geometry led to the correct solution. ; I was using JST but didn't test with upwind schemes for comparison. I may do so if I have some time.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1125#issuecomment-782058918:403,test,test,403,https://su2code.github.io,https://github.com/su2code/SU2/issues/1125#issuecomment-782058918,1,['test'],['test']
Testability,"I restarted the CI pipeline for 6d9e103. In the first run, there was an additional error that mesh files were missing (??). Now in the second run, the regression tests pass...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1346#issuecomment-895063802:162,test,tests,162,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-895063802,1,['test'],['tests']
Testability,"I see thanks for sharing that.; The way I understand (or not) blocking v non-blocking communication, with the former there will be more communications in flight at a given moment since the code does not wait to receive before issuing the next message. Maybe this puts a lot of pressure on your network...; Maybe there are tuning parameters to improve network performance under these conditions (it could be worth having a look around CFD Online), or maybe your new hardware will not have any problem. As for software solutions.; If your usual application is compressible RANS/URANS you can try the new and experimental hybrid parallel mode we just introduced in 7.0.2. This will allow you to have one MPI process per node which will unfold in 16 threads each.; I cannot guarantee this will work flawlessly since I have not tested it for pure unstructured meshes (which seems to be your case) but for block-structured-ish meshes the results so far are very promising (#861).; To use this add option `-Dwith-omp=true` to meson, and then launch the code with `mpirun -n 4 --bind-to none SU2_CFD -t 16 config.cfg` (or something equivalent, the ""--bind-to none"" part is important).; Let me know if you get a cryptic error along the lines of ""coloring failed"". For pure MPI, @economon would it be viable to force per-message waits? and would that be roughly equivalent to the old communication mode? (this would be more work on our side @drewkett so if you could give option 1 a go it would be great).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593162200:823,test,tested,823,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593162200,1,['test'],['tested']
Testability,"I see that the Onera M6 mesh is a half-wing with a symmetry plane and I'm not sure how the mesh deformation behaves in this case (for example, there should be zero out-of-plane movement). . Personally, I like really simple examples where I know what should happen (symmetric airfoil, subsonic flow, no sweep) and I did all my testing during the last weeks with the NACA0012 3m wing. At the same time, it is closer to how I would model a ""real"" aircraft (aircraft in the center of a spherical farfield) than the Onera M6, which is more wind-tunnel-like. The mesh and everything is there, so it's no additional work for me and I would be happy to contribute this as a new example. What's the main argument in favor of the Onear M6 wing / objection against a new example?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1547295112:326,test,testing,326,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1547295112,1,['test'],['testing']
Testability,"I see that the test pywrapper_translating_naca0012 fails, maybe because the reference results calculated on my computer deviate slightly?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1621#issuecomment-1123375922:15,test,test,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/1621#issuecomment-1123375922,1,['test'],['test']
Testability,"I simple wrote a program to test the grid, which searches for the boundary elements in the single faces, i.e. faces that are only part of one volume element, of the volume grid. What the error message means is that for 4 triangular surface elements of boundary marker BODY there is no corresponding face of the volume elements that is only part of one volume element. . When I include the faces that are shared by two volume elements, only two boundary elements are not found. So in short, you have two boundary elements in boundary marker BODY that are no part of any volume element and two boundary elements that are shared by two volume elements.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/683#issuecomment-494675549:28,test,test,28,https://su2code.github.io,https://github.com/su2code/SU2/issues/683#issuecomment-494675549,1,['test'],['test']
Testability,"I solved the issue with the multizone cgns testcase. Even if Family of BC are not read (it is a feature that can be implemented later), the testcase works perfectly fine. It means that multizone CGNS reading works great but the issue is with the output of multizone case in WriteParaView_... . Indeed when writing multizone, the ParaView writing function did not behave well with the fact that the second zone of the case use MIXED elements and the last zone only use one type of elements and did not reset all the pointer to the previous zone when writing the last zone. SU2 ended up trying to free element that did not belong to the last zone but to the previous one thus a crash.; Since the output structure is under rewriting, this testcase may be a nice add-on to this branch to ensure that the new output structure work correctly.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-526814716:43,test,testcase,43,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-526814716,3,['test'],['testcase']
Testability,"I still want to; - [x] make a `ScalarOutput` instead of `Turboutput` section for history and volume and add it to comp/nemo as well (Edit: See 8d87b35 and the two following commits); - [x] add surface species variance as an output quantity (Edit: 048cb3a The impl right now is a bit ugly, but it works as intended); - [x] Ensure that the restarts are working perfectly 8f8952... ; - [x] ... and move the pre-post logic to the species solver exclusively 156d0c5; - [x] Clean the regression test and add suitable README files that explain a bit the purpose of each; - [x] Clean all of my `TK::` comments and make sure none of my notes gets forgotten. all small aspects but hopefully I am finished by the end of the week",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1388#issuecomment-976586367:413,log,logic,413,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-976586367,2,"['log', 'test']","['logic', 'test']"
Testability,"I suggest that we add a test to the regressions that will check the file output format - we already have a routine to diff two files in the python scripts, so this should be fairly straightforward. ; My thought here is that this would include very small cases, with just one iteration and/or just running SU2_SOL, to check that the header format hasn't changed in all the output formats. This is something we don't usually check for, especially in paraview output since most of us don't use that. It'll add some overhead for developers when the output content or format is changed (we'll need to update the reference file in the test cases repo), but since this is something likely to cause inconvenience to users (all of a sudden everyone needs to update their tecplot layout, etc), that's not such a bad thing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/283#issuecomment-225968460:24,test,test,24,https://su2code.github.io,https://github.com/su2code/SU2/issues/283#issuecomment-225968460,2,['test'],['test']
Testability,"I suspect you are correct and they have some problem, I tried building the code without MPI (so using our dummy mpi wrapper) and the unit test passes and valgrind doesn't find anything in the testcase...; This displs problem with a single rank was also a bug we had in our MPI wrapper and you fixed right?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1893#issuecomment-1397456058:138,test,test,138,https://su2code.github.io,https://github.com/su2code/SU2/issues/1893#issuecomment-1397456058,2,['test'],"['test', 'testcase']"
Testability,"I tested the MKL integration with the discrete adjoint, and everything looks ok, turns out to be only about 5% faster on a per iteration basis (i.e. excluding recording times). I had to grab some work from my other ongoing PR's to run a case with reasonable CFL settings so I am not going to upload files for this test. @economon , @talbring , if you do not mind me moving the files with significant changes on a separate PR, I think this is ready to go.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/700#issuecomment-505018141:2,test,tested,2,https://su2code.github.io,https://github.com/su2code/SU2/pull/700#issuecomment-505018141,2,['test'],"['test', 'tested']"
Testability,I tested the branch and second-order dual time stepping restart works without any problems. I will post if the restarts after a few thousand time steps also work.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1287#issuecomment-848037127:2,test,tested,2,https://su2code.github.io,https://github.com/su2code/SU2/issues/1287#issuecomment-848037127,1,['test'],['tested']
Testability,"I tested this implementation on the inviscid wedge regression case. Setting the supresonic inlet to have the same conditions as farfield appears to give the correct solution. As noted in a commit above, there are some non-physical points when using this with AUSM with MUSCL turned on, but turning MUSCL off removes these. <img width=""1029"" alt=""image"" src=""https://user-images.githubusercontent.com/44848904/211228811-b7593a8f-ebd2-4740-8664-bb47f1560164.png"">",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1862#issuecomment-1374999159:2,test,tested,2,https://su2code.github.io,https://github.com/su2code/SU2/pull/1862#issuecomment-1374999159,1,['test'],['tested']
Testability,"I tested this on Ubuntu 18.04 and Centos 7.5. On Ubuntu both options work fine. However, on Centos only the most recent commit (i.e. running ./bootstrap) works. The commit ce9cd2b fails, because the system runs automake 1.13 and therefore it cannot find aclocal-1.15 when running configure. This can be solved by either changing am__api_version in configure to 1.13 (dirty) or running bootstrap. However, I don't know if either option is desired. BTW, this problem will also show up for the master branch, whatever option will be chosen, as for the master branch the configure and Makefile.in's will be in the distribution. In short, the option with bootstrap works fine on the operating systems I tested (and I assume on all Linux and Unix distributions). When configure is present in the distribution, you could run into problems if the system does not have the required version of autotools.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586#issuecomment-427011685:2,test,tested,2,https://su2code.github.io,https://github.com/su2code/SU2/pull/586#issuecomment-427011685,2,['test'],['tested']
Testability,"I think I got the flatplate covered, it should be easy (if the equations have been implemented correctly). The backward facing step and the diffuser I think are the most natural continuation as test cases, what do you think about it?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150#issuecomment-2449997427:194,test,test,194,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150#issuecomment-2449997427,1,['test'],['test']
Testability,"I think I have addressed all the comments. Let me know if there is anything that still needs to be fixed.; I have created a PR#69 in the TestCases repository to update FFD box in the mesh file. Please merge it. It is not required for regression but it is required if someone wants to check derivatives are correctly calculated. As I mentioned in the previous [post](https://github.com/su2code/SU2/pull/1329#issuecomment-884793528), there are still some remaining issues shown below. They were there before this PR. I would like to defer them to future PRs once I understand more about how SU2 works. - WeightNF.dat; - VENKATAKRISHNAN limiter; - `Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-894934546:137,Test,TestCases,137,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894934546,1,['Test'],['TestCases']
Testability,"I think I implemented all the modifications you suggested. I am sorry you see all the commits in between, unfortunately due to Covid I work outside of office and I actually use Github to push the modified code to the office PC. I was actually working on a separate branch but, for reason that I do not understand, all the commits have been moved in the merging process... sorry about that. I am still learning git. In particular the modifications are:. - The functions related to static mesh deformation have been removed. I only included some new lines in the python wrapper ; that overwrite the initial velocities to zero and push back the solution.; - I now use the BC_Sym_Plane of the FEA solver for the deformation at the symmetry plane. I had to add a flag that avoids ; accessing LinSysReact in case of mesh deformation, as this is not initialised in that context.; - GetnMarker_Match_Deform_Mesh is not present anymore; - The marker has been renamed from MATCH_DEFORM_MESH to DEFORM_MESH_SYM_PLANE. All the functions have also ; been renamed accordingly; - I included the SU2 header in all the new files, changing the version number to 7.0.8. I did not modify the version number of ; the files that were already present in SU2 prior to this PR. I think the merging process should take care of that, am I wrong?; - The python functions that were separated in x,y,z component now give back an array and are merged into one function only; - The descriptions for the methods have been added; - The test case has been removed. I actually prepared a tutorial and all the appropriate files will be placed in the tutorial and ; website repos. I will now perform a PR for those repos so that you can see the material. Again thank you very much and sorry for the mess with the ""internal"" commits. . Please let me know if you think I missed something",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124#issuecomment-742471972:1502,test,test,1502,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-742471972,1,['test'],['test']
Testability,I think I see how the regressions work now. I was thinking the cases were restarted from a converged solution. It looks as though the regression works by comparing the results after a set number of iterations from a non-restart case? That means the values I need to enter into the python script are the residuals and lift/drag coefficients after that number of iterations I set in the regression test?. Jason,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/445#issuecomment-335937240:396,test,test,396,https://su2code.github.io,https://github.com/su2code/SU2/pull/445#issuecomment-335937240,1,['test'],['test']
Testability,"I think along with this, the testcases/tutorials cfgs will have outdated configs. If we have a new template, I can help with the update.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/772#issuecomment-524913164:29,test,testcases,29,https://su2code.github.io,https://github.com/su2code/SU2/issues/772#issuecomment-524913164,1,['test'],['testcases']
Testability,"I think ideally we would have only the speedy stuff, but that is a very; long term goal (and ideally a community decision).; Medium term they will have to coexist due to:; 1) Features I have not re-implemented like, reconstruction checks,; uncertainty stuff.; 2) ""Boundary numerics"", I need to think of a clever way to use; CNumericsSIMD on boundaries (this should not matter for what you are; working on). With that said, I implemented JST with matrix dissipation and did not; bother making 2 versions of it... So, you choose, nothing would make me happier than seeing people starting; to use that framework. On Fri, 25 Sep 2020, 19:19 Brian Munguía, <notifications@github.com> wrote:. > I've also wondered about whether the Jacobians (even dF/dU) should be; > evaluate at the reconstructed state (as currently done) or at the; > un-reconstructed... This can be easily tested in #1022; > <https://github.com/su2code/SU2/pull/1022> (the reconstruction is inside; > the numerics).; >; > @pcarruscag <https://github.com/pcarruscag> coming back to this, is the; > plan with #1022 <https://github.com/su2code/SU2/pull/1022> to exclusively; > use CNumericsSIMD, or keep the USE_VECTORIZATION option and have both Roe; > implementations available? I was thinking of merging feature_simd_numerics; > into this branch, and was wondering if I'd need to implement the; > reconstruction Jacobian for both Roe implementations or if I should just; > stick to CNumericsSIMD.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/1050#issuecomment-699080843>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN2UIR3VMHBZO2D5X33SHTNMNANCNFSM4O6XOQQQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1050#issuecomment-699192561:870,test,tested,870,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050#issuecomment-699192561,1,['test'],['tested']
Testability,"I think it is possible, but there may need to be some renaming to deal with the fact that there's already a `TestCases` directory. One benefit of using a submodule is that an exact commit of the test cases repo can be tied to each SU2 commit. Also, I think Travis by default recurses submodules when cloning.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/459#issuecomment-339800670:109,Test,TestCases,109,https://su2code.github.io,https://github.com/su2code/SU2/issues/459#issuecomment-339800670,2,"['Test', 'test']","['TestCases', 'test']"
Testability,I think it would be super useful to change some (or all) of the TestCases to include the suggested settings that you have outlined in this PR. Most users wouldn't know how to get the best performance out of the code otherwise.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-540057251:64,Test,TestCases,64,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-540057251,1,['Test'],['TestCases']
Testability,"I think most of the parallel reg tests are actually launched with the parallel_computation.py script, so it should be OK since they are all green. But maybe I have misunderstood your request...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/344#issuecomment-267086037:33,test,tests,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/344#issuecomment-267086037,1,['test'],['tests']
Testability,"I think no more changes are needed. All of the test cases remain the same since probably the Rotation correction wasn't used. The only major corrections are the following:; - CRot now is set to 2.0 as in TMR; - The computation of $\hat{S}$ is performed before the the Rotation correction is applied, not after.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2352#issuecomment-2343820369:47,test,test,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/2352#issuecomment-2343820369,1,['test'],['test']
Testability,"I think that is what is happening, the logic to use either MACH_MOTION or the farfield velocity as the reference is in CEulerSolver::SetReferenceValues, I think if you have fluid load markers we will assume FSI and not use MACH_MOTION. Give this a try and if it fixes the issue we need more robust logic.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1462640745:39,log,logic,39,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1462640745,2,['log'],['logic']
Testability,"I think that was the first gcc with official full c++11 support, and so it might not be full support...; Try pushing the merge anyway so that github can run the tests, I'll see if something can be done about 4.8.5.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124#issuecomment-743131278:161,test,tests,161,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-743131278,1,['test'],['tests']
Testability,"I think this is stable enough to be merged, while testing #834 and #843 I think I went through most combinations of solvers/preconditioners and things seem to work fine, the only source of problems was the dot product (it was locking in some conditions) but all seems fine now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-573715803:50,test,testing,50,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-573715803,1,['test'],['testing']
Testability,"I think this is working now, I'm seeing some non-physical reconstructed points initially for the axi_viscone test case, but these seem to go away after a few hundred iters using Van Albada. The solution looks physical. I'd like to change the regression tests to support these new values, but it would be great if everyone could double-check this before I make that change.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1428#issuecomment-972424036:109,test,test,109,https://su2code.github.io,https://github.com/su2code/SU2/pull/1428#issuecomment-972424036,2,['test'],"['test', 'tests']"
Testability,I think we can reduce the iterations of some of the test cases. That should already save a lot time ... . I'll create a branch for that which we should merge in asap.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-347515641:52,test,test,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-347515641,1,['test'],['test']
Testability,"I think what Christian thinks, just make the solver go for another spin, making sure that:; - This was not the last iteration already.; - The solver will stop afterwards even if the criteria stops being fulfilled. The logic will be a little bit gnarly... The developer in me would just SU2_MPI::Error if the output frequency is not one :); But that would not be very nice for the users.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1211#issuecomment-797573104:218,log,logic,218,https://su2code.github.io,https://github.com/su2code/SU2/issues/1211#issuecomment-797573104,1,['log'],['logic']
Testability,I tried again and the problem still persist. I test the NACA64A010 euler optimization with V4.3.0. ; I attached the Log for adjoint calculation. same thing happened on all of the unsteady cases. there would be some problems with gradient projection code; [log_Adjoint(DRAG).pdf](https://github.com/su2code/SU2/files/517609/log_Adjoint.DRAG.pdf),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/296#issuecomment-252417783:47,test,test,47,https://su2code.github.io,https://github.com/su2code/SU2/issues/296#issuecomment-252417783,2,"['Log', 'test']","['Log', 'test']"
Testability,"I tried to solve the problem where sometimes the regression tests stall ... it seems to be a problem of openmpi. Changed it to mpich, but then mpi4py has problems. I reverted it for now. We have to live with that problem for a while unfortunately.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/798#issuecomment-544877793:60,test,tests,60,https://su2code.github.io,https://github.com/su2code/SU2/pull/798#issuecomment-544877793,1,['test'],['tests']
Testability,I updated the code based on your comments. I have to rerun the validation test case that I have to see if it still matches with the experimental data. I also have to check the compressible vs incompressible implementation.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1204#issuecomment-789202354:74,test,test,74,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204#issuecomment-789202354,1,['test'],['test']
Testability,I updated the restart file in the TestCases directory so I suppose regressions apart from this branch will break until this PR is merged. Sorry,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1366#issuecomment-910441955:34,Test,TestCases,34,https://su2code.github.io,https://github.com/su2code/SU2/pull/1366#issuecomment-910441955,1,['Test'],['TestCases']
Testability,"I uploaded a first version of the ADT nearest node search to the branch feature_WallDistance. Seems to give the correct results, but I have not done any efficiency tests with a large mesh. If somebody could do that, that would be helpful.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/282#issuecomment-226407264:164,test,tests,164,https://su2code.github.io,https://github.com/su2code/SU2/issues/282#issuecomment-226407264,1,['test'],['tests']
Testability,"I was aware of that test case. But I did not use it for the verification of sensitivities since I could not manage to set up a working derivative computation (different combination of markers/objective functions were leading to a memory error). However, I could use it to set up a regression test for the comparison of residuals.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1571#issuecomment-1075662048:20,test,test,20,https://su2code.github.io,https://github.com/su2code/SU2/pull/1571#issuecomment-1075662048,2,['test'],['test']
Testability,"I was looking a bit more into this because of the issue with having to treat the structural solver differently in the Update function.; (I gotta say I feel lucky I never had to look into time domain stuff, because 3 nested iterations... not easy). Anyway, I think there is a problem here, the ""predicted displacement"" that is transferred to the fluid during outer iterations (the coupling iterations within each time iteration) is the one set in CFEASolver::SetAitken_Relaxation, which is part of the Corrector step at the end of the structural inner iterations (the ones within each outer iteration). The ""predicted velocity"" is not set in SetAitken_Relaxation thus the grid velocities are lagged by one time step, since they are only set to the current velocity of the structure at the end of the time step (in the Update methods). I have little trust in the predictor step, looking at it I thing only zero order has a chance of working and anything else will cause the fluid and structural sides to separate / overlap, I'll test the theory.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-774712415:1027,test,test,1027,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-774712415,1,['test'],['test']
Testability,"I was not able to reproduce this behavior. Below is the result I get when using the master branch for both the code and the test cases. . ![image](https://cloud.githubusercontent.com/assets/5167760/7709282/d36254b2-fe10-11e4-8827-f01ec46fbf0f.png). Note that since the config file provided uses a restart it depends on also having the provided restart files, which may have been produced with slightly different settings (ie, lower CFL number), and if you are not using the restart files you should check that the solution has converged. If you have further questions about the settings of SU2, checking convergence, etc please post them to the forum at:; cfd-online.com/Forums/su2/. You will find that in addition to a wider audience who can answer your questions, the answers may also already be posted from users who had similar problems.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/179#issuecomment-103602179:124,test,test,124,https://su2code.github.io,https://github.com/su2code/SU2/issues/179#issuecomment-103602179,1,['test'],['test']
Testability,"I was running some tests using a simple geometry but for the refinement seems to be chewing up the geometry. Has anyone who has worked on 3D geometries experienced this or figured out a way to avoid this?. I was using the following settings:; ```; % ------------- MESH ADAPTATION PARAMETER ------------%; %; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= MACH; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 2.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (1000000, 1300000, 1500000); % Number of adaptations performed at each level; PYADAP_SUBITE= (2, 2, 2); ```. ![refine](https://user-images.githubusercontent.com/16842258/104834786-0b94fa80-58e5-11eb-9018-687ffc5aaa9d.png). I noticed a few comments up, there is the `PYADAP_BACK` setting, which sounds like it might solve this, but how should one use this? Should the geometry alone be re-meshed to a high resolution and the whole volume exported as a SU2 block? Or should it be just a surface mesh? (It seems that Pointwise is not able to output only the surface mesh in SU2 format.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-761751741:19,test,tests,19,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-761751741,1,['test'],['tests']
Testability,I will add a cylinder test case to the regression suite in the next day/or two. TestCases/PR#116,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1887#issuecomment-1401946171:22,test,test,22,https://su2code.github.io,https://github.com/su2code/SU2/pull/1887#issuecomment-1401946171,2,"['Test', 'test']","['TestCases', 'test']"
Testability,I will add a testcase in a separate PR.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2197#issuecomment-2272872224:13,test,testcase,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/2197#issuecomment-2272872224,1,['test'],['testcase']
Testability,"I will caution that the regression test that I added related to this pull has yet to actually run. I don't know why it is running out of time, but it would be good to see it actually pass before merging. I don't know how to force a retry. Jason",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/445#issuecomment-339155498:35,test,test,35,https://su2code.github.io,https://github.com/su2code/SU2/pull/445#issuecomment-339155498,1,['test'],['test']
Testability,I will get back after some more experiments. Waiting to get some resources to run the tests.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/291#issuecomment-231749188:86,test,tests,86,https://su2code.github.io,https://github.com/su2code/SU2/issues/291#issuecomment-231749188,1,['test'],['tests']
Testability,"I will try and add a new test case as soon as possible, although it might be in October.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2352#issuecomment-2367846177:25,test,test,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/2352#issuecomment-2367846177,1,['test'],['test']
Testability,"I will try to get that updated in the next few days. I think I am pulling from develop branch, but the build keeps failing. I originally was modifying an older version of SU2 on my computer then pasting changes into development branch so I will make sure the changes work with the current develop branch and retry. I am new to github. I will work on regression test after that. I had been testing the NACA 64a010 test case currently used for harmonic balance. The method improves max CFL from about 1.0 to at least 4.0. I have not checked higher numbers. Is it better to add a different case for regression, pitching NACA 0012 for example? . Jason",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/443#issuecomment-331681951:361,test,test,361,https://su2code.github.io,https://github.com/su2code/SU2/pull/443#issuecomment-331681951,3,['test'],"['test', 'testing']"
Testability,I would be fine with either swapping (if it is commented) or reflecting. I would prefer not to have extra checks for boundary logic in a class that operates 99% of the time on internal edges.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1185#issuecomment-774643103:126,log,logic,126,https://su2code.github.io,https://github.com/su2code/SU2/issues/1185#issuecomment-774643103,1,['log'],['logic']
Testability,I would imagine the error I got will occur with Python 3.6. So just adding SU2deform to the test suite should reproduce the error.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/622#issuecomment-445503034:92,test,test,92,https://su2code.github.io,https://github.com/su2code/SU2/pull/622#issuecomment-445503034,1,['test'],['test']
Testability,"I would like to reopen the issue regarding the dry run. When having turbomachine settings on, the dry run fails when calculating (preprocessing the turbomachine geometry) with the following error:. - Case Testcases APU_Turbomachinery; - Version 7.5.1 ; - Command: SU2_CFD -d Jones_restart.cfg. ```; ---------------------- Turbomachinery Preprocessing ---------------------; Initialize Turbo Vertex Structure.; Number of span-wise sections in Zone 0: 0.; Number of span-wise sections in Zone 1: 0.; Max number of span-wise sections among all zones: 0.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; Set span-wise sections between zones on Mixing-Plane interface.; Transfer average geometric quantities to zone 0.; [---] *** Process received signal ***; [---] Signal: Segmentation fault (11); [---] Signal code: Address not mapped (1); [---] Failing at address: 0x8; [---] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x43090)[0x7ffa2d583090]; [---] [ 1] SU2_CFD(+0x5e6dc4)[0x55c98b9dedc4]; [---] [ 2] SU2_CFD(+0x1ab51e)[0x55c98b5a351e]; [---] [ 3] SU2_CFD(+0x1bc2d3)[0x55c98b5b42d3]; [---] [ 4] SU2_CFD(+0x201b26)[0x55c98b5f9b26]; [---] [ 5] SU2_CFD(+0x151f79)[0x55c98b549f79]; [---] [ 6] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf3)[0x7ffa2d564083]; [---] [ 7] SU2_CFD(+0x171b3e)[0x55c98b569b3e]; [---] *** End of error message ***; Segmentation fault; ```. i guess in the dry run mode, some algorithm are ignored and therefore the segmentation fails. ; I was wondering: . 1) Are there any additional output variables that come with the turbomachinery settings (besides those, available in the folder) . 2) If not, available output for the solver can be achieved by just dry running a case that has the same solver but no turbomachine settings on. Maybe a flag in the dry run option could be implemented on, that deactives the turbomachine settings in the case, to avoid the error message.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/857#issuecomment-1623092119:205,Test,Testcases,205,https://su2code.github.io,https://github.com/su2code/SU2/issues/857#issuecomment-1623092119,1,['Test'],['Testcases']
Testability,"I would love to change the branch, if I really knew how to. Should I create a new Pull Request?; I am in the process of rerunning my isothermal validation cases with the updated code. As soon as I can get a stable config+mesh, I will send them over to you for a regression test!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/71#issuecomment-56638023:273,test,test,273,https://su2code.github.io,https://github.com/su2code/SU2/pull/71#issuecomment-56638023,1,['test'],['test']
Testability,"I would say it is fundamental to have some cases that start from converged solutions.; IMO all the cases we have that run for 10 iterations are trash from the point of view of testing correctness, they only test that we don't have severe integration bugs.; Even the cases that start from a good restart are NOT covering whether the solver is able to reproduce the correct behavior when starting from scratch...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1784#issuecomment-1304271814:176,test,testing,176,https://su2code.github.io,https://github.com/su2code/SU2/pull/1784#issuecomment-1304271814,2,['test'],"['test', 'testing']"
Testability,"I""m not sure what I""m missing here, All the tests have past but no such button seems to exist anywhere.. ; Could this be due to the fact that I'm an Author and not a contributor?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295#issuecomment-2222187450:44,test,tests,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295#issuecomment-2222187450,1,['test'],['tests']
Testability,I'll adapt one of the existing Testcases to use this feature,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1382#issuecomment-927306822:31,Test,Testcases,31,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382#issuecomment-927306822,1,['Test'],['Testcases']
Testability,I'll change the scope of this for now to just allowing tests to run with mutation++; The NEMO group can add tests and decide whether to update the version later.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1935#issuecomment-1685160303:55,test,tests,55,https://su2code.github.io,https://github.com/su2code/SU2/pull/1935#issuecomment-1685160303,2,['test'],['tests']
Testability,"I'll do some more tests today, but so far it's looking very good !",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/379#issuecomment-282973965:18,test,tests,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/379#issuecomment-282973965,1,['test'],['tests']
Testability,I'll give this a test and put in my review Friday morning :+1: :),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1705#issuecomment-1197791402:17,test,test,17,https://su2code.github.io,https://github.com/su2code/SU2/pull/1705#issuecomment-1197791402,1,['test'],['test']
Testability,"I'll have the summary at the bottom, you guys read papers you know to look for the conclusions.; ## Global speedup (Conclusions); I took the expected speedups for each prototyped area of the code and applied them to the profile I measured for the benchmark case from #716 / #753 (which is not very linear solver intensive).; It is hard to estimate the effect of fusing the convective and viscous edge loops, I assumed the cheaper of the two becomes ""free"" and the other gets a speedup of 1.5 (speedup should be 1.85 accounting for the matrix update optimizations).; I assumed that gradients and limiters are not fused and that minor areas of the code get no speedup, which is not necessarily true as this work would require contiguous storage of geometric properties (geometry->node and geometry->edge) and so some speedup is expected due to that, but in the absence of evidence I prefer to be conservative.; Here are the numbers:; ![image](https://user-images.githubusercontent.com/38071223/66394872-15376f00-e9ce-11e9-80ed-193aea2aae6f.png); The take home number is **1.7**. Cumulative with the 1.4 from contiguous storage, so 2.4 total. Despite most of my posts being focused on SIMD my main motivation is the hybrid parallelization which will allow important algorithmic improvements when running on hundreds of cores, namely the multigrid and additive linear preconditioners will retain their effectiveness at much larger core counts.; I will not hazard an estimate for this. ## Proposed changes (Summary); **Hybrid parallel**; - Gradients (GG) and limiters converted to point loops (embarrassing parallel, no edge colouring needed).; - Residual loops parallelized with edge colouring, if anyone has suggestions regarding algorithms send them my way, so far I only tested greedy colouring on edge groups to preserve spatial locality (this aspect is absolutely fundamental).; - Matrix multiplication, BCSR format is also embarrassing parallel.; - Linear preconditioners, additive decomposition wit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-539523312:247,benchmark,benchmark,247,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-539523312,1,['benchmark'],['benchmark']
Testability,"I'll try and find some time to have a look at this today. I think the issue is in the `jSpan == nSpanDonor - 1`. The final value in both the donor and target arrays are 1D values, the values at nSpanDonor - 2 are the values at the shroud. I think the original proposed fix is still needed here as further down you have an array accessing a postion of `kSpan + 1` which iirc resulted in the memory access violation. I think what has happened here is the Aachen case triggers this condition, and results in an error in the calculation of the coefficient for the linear interpolation. When we fixed it, we changed the simulation enough that it throws the residuals off as the computational problem is inherently different. A good test for this would be to extract the values at the interface from the turbomachinery special output with and without this change to see if this is the case. When we were first designing this case @alecappiello had an issue getting the results in one of the zones to agree with experimental results, this could be why?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2276#issuecomment-2134790783:727,test,test,727,https://su2code.github.io,https://github.com/su2code/SU2/issues/2276#issuecomment-2134790783,1,['test'],['test']
Testability,"I'll wait for the regression tests to fail and then update `serial_regression.py` (and hybrid, parallel) for the `rans_uq` tests.; EDIT: Also `stat_fsi` in the hybrid and `poiseuille_profile` in the serial regression tests were affected.; EDIT: And `poiseuille_profile` in parallel",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1127#issuecomment-743037066:29,test,tests,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-743037066,3,['test'],['tests']
Testability,"I'll weigh in with a more in depth answer on a second email, but yes I've; found great value in being able to have a good set of unit tests. Particularly when you don't have good acceptance tests (hard in a fast; moving research code), it gives a developer confidence that new changes; aren't being fundamental assumptions in the code. It lets sub module; developers build ""armor"" around those assumptions. It is a bit of a cultural thing. People who want robust bits write more.; Some people wire less. At the bank I once worked at, unit tests were required for every module.; Some people wrote code that tested almost nothing. And it would get; through code review that way. Eventually, I added coverage analysis to the check in that exposed this; practice that gave a false assurance that things were ok. More when I can think a bit more on this and get to a real keyboard!. Pat. On Wed, Jun 5, 2019 at 1:50 PM Juan Jose Alonso <jjalonso@stanford.edu>; wrote:. > Clark,; >; > Thanks for putting this idea out there. In my experience, unit testing; > has been an intrinsic part of the the modus operandi in many multi-physics; > codes at DoE and has been well worth the additional effort. In cases where; > it makes sense (as described by Clark and in the Stack Exchange discussion); > I would advocate for using it moving forward. There may also be some; > issues that arise multiple times in existing code where a retroactive; > application of unit testing may also make sense. I am copying Pat Miller,; > formerly with DoE, who may have more experience on whether such unit; > testing approaches were useful/worth the investment in some major codes he; > worked on.; >; > Best,; >; > Juan; >; >; > On Jun 4, 2019, at 2:14 PM, Clark Pederson <notifications@github.com>; > wrote:; >; > I propose adding a unit-testing framework and unit-tests to SU2. After; > chatting with @economon <https://github.com/economon>, I've decided to; > move the discussion here to get additional input.; > What is uni",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:134,test,tests,134,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,4,['test'],"['tested', 'tests']"
Testability,"I'm a junior student and a new CFDer.; I'v been testing upwind scheme in QuickStart and found that CUSP scheme diverged. Below is some important configuration information; Firstly I just changed convective scheme of ""inv_NACA0012.cfg"" in QuickStart to CUSP and SU2 diverged directly. Configuration information lies below.(CFL = 4.0); >% Mach number (non-dimensional, based on the free-stream values); MACH_NUMBER= 0.8; %; % Angle of attack (degrees); AOA= 1.25; %; % -------------------------- MULTIGRID PARAMETERS -----------------------------%; %; % Multi-Grid Levels (0 = no multi-grid); MGLEVEL= 3; %; % Multi-grid cycle (V_CYCLE, W_CYCLE, FULLMG_CYCLE); MGCYCLE= W_CYCLE; %; % Multi-Grid PreSmoothing Level; MG_PRE_SMOOTH= ( 1, 2, 3, 3 ); %; % Multi-Grid PostSmoothing Level; MG_POST_SMOOTH= ( 0, 0, 0, 0 ); %; % Jacobi implicit smoothing of the correction; MG_CORRECTION_SMOOTH= ( 0, 0, 0, 0 ); %; % Damping factor for the residual restriction; MG_DAMP_RESTRICTION= 1.0; %; % Damping factor for the correction prolongation; MG_DAMP_PROLONGATION= 1.0; % -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%; %; % Convective numerical method (JST, LAX-FRIEDRICH, CUSP, ROE, AUSM, HLLC,; % TURKEL_PREC, MSW); CONV_NUM_METHOD_FLOW= CUSP; %; % Spatial numerical order integration (1ST_ORDER, 2ND_ORDER, 2ND_ORDER_LIMITER); %; SPATIAL_ORDER_FLOW= 2ND_ORDER_LIMITER; %; % Slope limiter (VENKATAKRISHNAN, MINMOD); SLOPE_LIMITER_FLOW= VENKATAKRISHNAN; %; % 1st, 2nd and 4th order artificial dissipation coefficients; AD_COEFF_FLOW= ( 0.15, 0.5, 0.02 ); %; % Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT); TIME_DISCRE_FLOW= EULER_IMPLICIT. ![cusp3levcfl4limiterven](https://user-images.githubusercontent.com/32992485/32143715-c2a2c30c-bce8-11e7-93c6-52a1b2a9a07f.png); When I modify CFL number to 1.0, SU2 doesn't diverged but oscillating at 10^-5 order; ![cusp3levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32143795-16abef90-",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/465:48,test,testing,48,https://su2code.github.io,https://github.com/su2code/SU2/issues/465,1,['test'],['testing']
Testability,"I'm currently unable to reproduce the bug(s)... . I tried by apply [diff.txt](https://github.com/su2code/SU2/files/10437018/diff.txt) according to https://github.com/su2code/SU2/issues/1000#issuecomment-633079695 to enable MPICH builds, and then run the following commands in a `ubuntu:22.04` container,; ```bash; apt-get update; apt-get install gcc g++ mpich python3 python3-distutils git pkg-config; ./meson.py build --buildtype=debug -Dwith-mpi=enabled -Denable-tests=true --prefix=$PWD/install; ./ninja -C build install; ```. With the current master 1b08506, or commit 13dae36 before @pcarruscag's fix in #1892, ; several iterations of `install/bin/test_driver [NdFlattener]` consistently print ; ```; Filters: [NdFlattener]; ===============================================================================; All tests passed (45 assertions in 1 test case); ```. With `mpirun -np 2`, I see this output multiple times. Is this correct? In the SU2 test container (`ghcr.io/su2code/su2/test-su2:220614-1237`) with OpenMPI, I get this:; ```; Filters: [NdFlattener]; Filters: [NdFlattener]; ===============================================================================; All tests passed (74 assertions in 1 test case). ===============================================================================; All tests passed (77 assertions in 1 test case); ```. With 13dae36, running the new testcase (with `ITER=11`) like this:; ```bash; root@ed3df1d7769f:/workdir/SU2/TestCases/disc_adj_heat# ../../install/bin/SU2_CFD primal.cfg | grep "" 10|""; ```; consistently outputs ; ```; | 10| -15.998258| -14.557474| -14.812760| -8.956924| -18.202673| -1.040382| 5.7162e+00|; ```; or, with `mpirun -np 2`, the same line multiple times. So maybe I observe a problem with my way of installing mpich on Ubuntu, but no failing unit tests or non-deterministic regression tests. . Are the reported problems restricted to mpich? Could you provide build and run commands with the observed and expected output?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1893#issuecomment-1385673898:465,test,tests,465,https://su2code.github.io,https://github.com/su2code/SU2/issues/1893#issuecomment-1385673898,16,"['Test', 'assert', 'test']","['TestCases', 'assertions', 'test', 'test-', 'testcase', 'tests']"
Testability,"I'm doing my tests on a fresh clone from the git.; None of the folders that you menthoned exist after cloning. They are created during; the preconfigure run. The wrong naming does not originate from layers of history in ; the git folder.; And yes, adding no debug flag makes sense.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910#issuecomment-600837563:13,test,tests,13,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-600837563,1,['test'],['tests']
Testability,"I'm glad to see the doxygen being used again, thanks for setting this up! Was this something needing review, or is it just a test that won't be merged?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/518#issuecomment-375160507:125,test,test,125,https://su2code.github.io,https://github.com/su2code/SU2/pull/518#issuecomment-375160507,1,['test'],['test']
Testability,I'm happy that the strange segmentation fault in the discadj_heat testcase in `serial_regression_AD.py` seems to be gone ;),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1286#issuecomment-847257884:66,test,testcase,66,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-847257884,1,['test'],['testcase']
Testability,"I'm having some trouble getting the regression tests to pass - for some reason there is a result difference in the moving wall tests. I'm not sure how this can be possible, considering I am not changing any values. The convergence seems to be slowed down considerably, but I'm having trouble identifying which function may be causing this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2095#issuecomment-1657243607:47,test,tests,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/2095#issuecomment-1657243607,2,['test'],['tests']
Testability,"I'm late to the party here, but just a note to say that the original implementation for the incompressible source terms are indeed from the text that @WallyMaier / @vdweide shared. It was added as part of the work in this paper (https://economon.github.io/docs/AIAA-2018-3111.pdf), but I did not test it much beyond a simple laminar channel case or really attempt to treat turbulence at the time. Thanks for putting in more effort on these terms!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1095#issuecomment-727633198:296,test,test,296,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-727633198,1,['test'],['test']
Testability,"I'm not a user myself, just supporting our engineers. To test Windows, however, you may look into AppVeyor, an automated testing service run on Windows free of charge for open source software.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/332#issuecomment-322434455:57,test,test,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/332#issuecomment-322434455,2,['test'],"['test', 'testing']"
Testability,"I'm not active in development anymore, but I do remember some of the history. Some of these decisions came from #797 . @economon specifically said (in that issue):. > I removed the term involving the TKE from the viscous stress tensor in the mean flow equations, as this is often ignored in codes (and omitting it gives better results, including the pressure field). I also fixed a bug in the definition of the eddy viscosity, where strain magnitude was being used when it should be the vorticity magnitude. You can see the motivation, regression testing, and explanations on that issue page.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1551#issuecomment-1054496510:547,test,testing,547,https://su2code.github.io,https://github.com/su2code/SU2/issues/1551#issuecomment-1054496510,1,['test'],['testing']
Testability,"I'm not in a hurry, but I would not want to upset the stalebot. Practical consideration regarding storing the CFL, do we have to? In the discrete adjoint we always to a dry run before the real recording, maybe that could be use to recompute the CFL at 0 overhead?; I don't mind outputting the CFL, but it would be nice if we could avoid complexifying the restart logic further.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036#issuecomment-739061041:363,log,logic,363,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-739061041,1,['log'],['logic']
Testability,"I'm not sure that is running the SU2 unit tests.; Can you run the test_driver executable directly and check the output?; It will be in the ""build"" directory / UnitTests/test_driver",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1859#issuecomment-1367856574:42,test,tests,42,https://su2code.github.io,https://github.com/su2code/SU2/issues/1859#issuecomment-1367856574,1,['test'],['tests']
Testability,"I'm not very familiar with SU2, could somebody help me with this? Looks like the n0012 case is erroring with SU2_SOL; ```; SU2.EvaluationFailure: Path = /github/workspace/tests/TestCases/polar/naca0012/DIRECT/,; Command = /github/workspace/install/bin/SU2_SOL config_SOL.cfg; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1739#issuecomment-1221366288:171,test,tests,171,https://su2code.github.io,https://github.com/su2code/SU2/pull/1739#issuecomment-1221366288,2,"['Test', 'test']","['TestCases', 'tests']"
Testability,I'm thinking about reusing the SST test case ([axisymmetric_rans/air_nozzle](https://github.com/su2code/SU2/tree/master/TestCases/axisymmetric_rans/air_nozzle)) so that the same mesh can be used. Would that be fine ?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2197#issuecomment-1889557228:35,test,test,35,https://su2code.github.io,https://github.com/su2code/SU2/pull/2197#issuecomment-1889557228,2,"['Test', 'test']","['TestCases', 'test']"
Testability,"I'm wondering, if a test case for unsteady restart shape optimization would be computationally too expensive for the test system. ; Please let me know you opinion on that. ; Otherwise this request is complete. Best; Steffen",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/964#issuecomment-627498661:20,test,test,20,https://su2code.github.io,https://github.com/su2code/SU2/pull/964#issuecomment-627498661,2,['test'],['test']
Testability,"I've (finally) managed to go over this pull request. I didn't go into too much detail as I don't want to delay this any more, but in general it all looks great to me. I have run some extra regression tests locally in my computer, and they all seem to be working fine. I also left some comments around, but they are mostly asking for some clarification, no major issues. All cleared from my side. Sorry again for taking way too long, I was so behind myself that I needed to do some merging in my own branches to be able to understand the changes in FSI context... Thanks a lot @LaSerpe for a great work!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/322#issuecomment-258872671:200,test,tests,200,https://su2code.github.io,https://github.com/su2code/SU2/pull/322#issuecomment-258872671,1,['test'],['tests']
Testability,"I've added support for tests using algorithmic differentiation and direct differentiation. In order to make sure the right libraries are linked, I separated out the test drivers. Now there's three test drivers:. + A forward test driver (`test_driver`); + A test driver for direct differentiation tests (`test_driver_DD`); + A test driver for AD tests (`test_driver_AD`)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850#issuecomment-594779356:23,test,tests,23,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-594779356,8,['test'],"['test', 'tests']"
Testability,"I've been testing this a bit this afternoon, things look ok.; We can revisit the accessor functions for the entire domain once we can return the container by reference instead of copying the data first.; We can also look into code-generating accessors for markers for whatever volume accessors we define, once the names stabilize a bit, there are some inconsistencies in the naming of the old python wrapper functions. This needs regression tests now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1426926772:10,test,testing,10,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1426926772,2,['test'],"['testing', 'tests']"
Testability,I've been told that it might be a python-related thing that Tom is looking into. ; For the short term I could make a modification to that test case so that the offending value is left out entirely so that everyone's tests can pass - obviously that doesn't solve the underlying problem but it would let the other branches merge in while we figure out what's going on.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/336#issuecomment-263659732:138,test,test,138,https://su2code.github.io,https://github.com/su2code/SU2/pull/336#issuecomment-263659732,2,['test'],"['test', 'tests']"
Testability,I've downloaded the TestCases directory with this command:; git clone git://github.com/su2code/TestCases.git; and still there is no of_grad_cd.dat file in the TestCases/cont_adj_euler/naca0012 folder.; So the problem is still present.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/388#issuecomment-309242408:20,Test,TestCases,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/388#issuecomment-309242408,3,['Test'],['TestCases']
Testability,"I've put a ""WIP"" in the tittle just to make it easier to create the change log for releases (there is the manual step where we need to remove stuff that it not part of the release).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/773#issuecomment-775245782:75,log,log,75,https://su2code.github.io,https://github.com/su2code/SU2/pull/773#issuecomment-775245782,1,['log'],['log']
Testability,"I've recently run into a problem with periodic geometry when I run a RANS problem on 16 cores or more (256+ MPI tasks). While initializing the Jacobian structure for the turbulence model, I run into one of two errors, depending on the core count. The first error results in the following error message:; ```; Fatal error in MPI_Sendrecv: Message truncated, error stack:; MPI_Sendrecv(249).................: MPI_Sendrecv(sbuf=0x2ee74f0, scount=10, MPI_DOUBLE, dest=19, stag=0, rbuf=0x2ee68e0, rcount=385, MPI_MPIDI_CH3U_Receive_data_found(144): Message from rank 25 and tag 0 truncated; 3200 bytes received but buffer size is 3080; aborting job; ```. The second error just leads to the solver hanging indefinitely at the `Initialize Jacobian structure (SA model)` step. I'm guessing that an MPI send/receive is left dangling. I have not seen these problems at lower core counts (2-4 cores with 2-32 MPI tasks). **The errors seem to be tied to the way the periodic send/receives are set up.** If I change the periodic boundaries to far-field boundaries, the error vanishes. I've also done a lot of work to weed out possible causes:. + I've generated the meshes using both `SU2_MSH` and the `su2perio` Fortran tool.; + I've run this on two different supercomputers, with different MPI builds.; + I've tested multiple different meshes with different resolutions.; + I've tried changing the RANS model and steady/unsteady options.; + I've even used a different solver (our hybrid solver) that's completely independent of the RANS solver classes. Same error.; + The problem occurs whether you're restarting or starting without a restart file. I've got a minimal example that you can use to test this for yourself, in the attached files. It should be self-explanatory. [MPI_Failure_Example.tar.gz](https://github.com/su2code/SU2/files/2167185/MPI_Failure_Example.tar.gz)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/550:1298,test,tested,1298,https://su2code.github.io,https://github.com/su2code/SU2/issues/550,2,['test'],"['test', 'tested']"
Testability,I've run several tests now and the output looks ok to me as well. Thanks again for the contribution. Merging this in now...,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/281#issuecomment-225182507:17,test,tests,17,https://su2code.github.io,https://github.com/su2code/SU2/pull/281#issuecomment-225182507,1,['test'],['tests']
Testability,"I've tried reducing the residuals up to -11.5 for the logarithm of the density residual. I've started on the coarsest grid as you saw in the previous plot. I've proceeded on the L2 mesh keeping either the tangential or the first cell spacing constant, using as restart the converged solution on the L1 mesh. The results are essentially the same as with L1 mesh. When using the NK solver straight away the AC branch does not converge, while the BC one easily converged. If I remove the NK solver, both converge. The same has happened on the L3 grid (restart from converged L2 results). . Here you can see the residuals for the L2 grid (either the case, he outcome is the same). ![CommitsComparison_RMSRho_Grid2](https://github.com/user-attachments/assets/479a0145-dd53-456e-a41d-686037011052). No strange behaviors of Mach number and nu_tilde have been seen on converged solutions. On not-converged ones, instead, the problem is right at the symmetry planes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2379576753:54,log,logarithm,54,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2379576753,1,['log'],['logarithm']
Testability,"ION_ORIGIN that the pull-up. To simulate a free-flying aircraft (in a flight mechanical sense) which moves and rotates in all six degrees of freedom about the center of gravity, a combination of both translation and rotation is beneficial. In the proposed change, the ROTATING_FRAME now considers both parameters ROTATION_RATE and TRANSLATION_RATE given in the config file. Because the default translation rates are zero, there should be no effect for users who want pure rotation. The option STEADY_TRANSLATION now appears obsolete to me because the functionality is included in the ROTATING_FRAME, but I didn't want to remove the code because someone else might use that parameter? . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. This is a follow-up of a discussion here: https://www.cfd-online.com/Forums/su2/241889-rotating_frame-grid-velocity-correct-flow-physics-wrong.html. Fix #1595 (https://github.com/su2code/SU2/issues/1588)](https://github.com/su2code/SU2/pull/1595/commits/c2018c836791944383c13d32dcfec903d5657072) is required to get proper nodal forces and has already been merged into the develop branch, thank you Pedro :). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1621:2628,test,test,2628,https://su2code.github.io,https://github.com/su2code/SU2/pull/1621,1,['test'],['test']
Testability,"If `OPT_OBJECTIVE` is not defined in the `.cfg` file `compute_polar.py` creates a dummy. However, the dummy lacks a surface marker so it fails on the post processing step. Updating the dummy logic to the following seems to work (line 379 in the current version) . ```(python); if 'OPT_OBJECTIVE' not in konfig:; obj = {}; obj['DRAG'] = {'SCALE':1.e-2, 'OBJTYPE':'DEFAULT', 'MARKER': 'None'}; konfig.OPT_OBJECTIVE = obj; ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/545:191,log,logic,191,https://su2code.github.io,https://github.com/su2code/SU2/issues/545,1,['log'],['logic']
Testability,If someone could also run the regression tests (or at least the HB tests) on a mac that would be even better (maybe you did this already @sravya91?)!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/351#issuecomment-271092271:41,test,tests,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/351#issuecomment-271092271,2,['test'],['tests']
Testability,If there are no major comments I would add a testcase and merge this for the next release (and address any post mortem comments as they appear).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1183#issuecomment-783228807:45,test,testcase,45,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183#issuecomment-783228807,1,['test'],['testcase']
Testability,If this has no influence on the test values then we should change these cases I would say.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/751#issuecomment-518279551:32,test,test,32,https://su2code.github.io,https://github.com/su2code/SU2/pull/751#issuecomment-518279551,1,['test'],['test']
Testability,"If you add it to the tutorials test suite... and it runs in < 5min, or it covers a few of the commonly untested options, I'd say go for it. Out of curiosity, do you use the windowing feature to discard a few initial time steps?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/964#issuecomment-627509834:31,test,test,31,https://su2code.github.io,https://github.com/su2code/SU2/pull/964#issuecomment-627509834,1,['test'],['test']
Testability,If you could submit the fix and a small testcase to use as regression it would be great.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2274#issuecomment-2098592035:40,test,testcase,40,https://su2code.github.io,https://github.com/su2code/SU2/issues/2274#issuecomment-2098592035,1,['test'],['testcase']
Testability,"If you do some tests in your own fork of SU2 using travis, remember to change the recipients of the notifications in the .travis.yml :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-210392182:15,test,tests,15,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-210392182,1,['test'],['tests']
Testability,If you don't provide the files for us to replicate your problem the best I can tell you is to look at TestCases/sliding_interface/supersonic_vortex_shedding,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1594#issuecomment-1088556978:102,Test,TestCases,102,https://su2code.github.io,https://github.com/su2code/SU2/issues/1594#issuecomment-1088556978,1,['Test'],['TestCases']
Testability,"If you look at the testing history, commit 4f5f3ed doesn't pass the regression tests, while commit 8551cac does. Only two tests are failing on 4f5f3ed: `discadj_topol_optim` and `discadj_fsi_airfoil`. The difference between the two commits is a simple change. I changed the `SU2_MPI::Error` routine to give a return status of `EXIT_FAILURE` instead of `0`. Since `0` is conventionally defined as a successful program exit, returning `EXIT_FAILURE` makes more sense than returning `0` when `SU2_MPI::Error` is called. So why did that change cause the regression tests to fail? My suspicion is that these two tests have been exiting with an error for some time, but these regressions were not picked up by Travis since SU2 kept on returning `0` (i.e. success). Changing the exit code of `SU2_MPI::Error` doesn't cause any errors, but it will expose errors that are (sometimes silently) occurring. @pcarruscag I think you added these tests. Any idea why they're failing?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/649#issuecomment-462951152:19,test,testing,19,https://su2code.github.io,https://github.com/su2code/SU2/pull/649#issuecomment-462951152,6,['test'],"['testing', 'tests']"
Testability,If you see some testcases failing seemingly at random do not update them!; Do `git cherry-pick e71a956b49156fcf3b30b705e0e48e803ba155c1` (fixed in #1055),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1060:16,test,testcases,16,https://su2code.github.io,https://github.com/su2code/SU2/issues/1060,1,['test'],['testcases']
Testability,"If you type ""git log"", is this the first message you see?; ```; commit 3f9402f499dfba9b5a7f633fda1e452e48722e40; Merge: c0867da 4f9bc2f; Author: Jessie Lauzon <jtlau@users.noreply.github.com>; Date: Fri Mar 6 13:52:14 2020 -0800; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910#issuecomment-600843376:17,log,log,17,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-600843376,1,['log'],['log']
Testability,Ignore this PR. Just for testing ...,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/742#issuecomment-514566021:25,test,testing,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/742#issuecomment-514566021,1,['test'],['testing']
Testability,"Implementation of the original SA and Negative SA turbulence models as well as their no-ft2 versions. ## Proposed Changes; Implementation of the original version of Spalart-Allmaras turbulence model (https://www.researchgate.net/publication/236888804_A_One-Equation_Turbulence_Model_for_Aerodynamic_Flows).; Implementation of the Spalart-Allmaras turbulence model without the ft2 term.; Implementation of the original version of Negative Spalart-Allmaras turbulence model (https://www.iccfd.org/iccfd7/assets/pdf/papers/ICCFD7-1902_paper.pdf); Implementation of the Negative Spalart-Allmaras turbulence model without the ft2 term neither modified vorticity. On the config file, choose:; SA: Original SA model; SA_NOFT2: SA model without ft2 term (the *same* model found in the develop branch); SA_NEG: Original negative SA model; SA_NEG_NOFT2: Negative SA model (the *same* model found in the develop branch). *They are not the same as in the develop branch, because I corrected a minor bug.*. Updated the template config file to be in accordance with the source code: turbulent models and OUTPUT_FILES tags. ## Related Work; This PR resolves issues #992 and #1051. ## Regression testing; Tested on tutorials:; - Turbulent Flat Plate; - RAE2822; - Turbulent ONERA M6. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1066:1180,test,testing,1180,https://su2code.github.io,https://github.com/su2code/SU2/pull/1066,3,"['Test', 'test']","['Tested', 'test', 'testing']"
Testability,Impressive! Can you share some info on your implementation? What about the CFL values and the computational time?. One more thing: in another PR (if I recall correctly it was the one for the dimensionless limits to SST) you mentioned the VFE2 test-case. Do you have access to shareable CAD files and meshes?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2380723033:243,test,test-case,243,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2380723033,1,['test'],['test-case']
Testability,Improve the configuration file for the SA Neg test case,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1559:46,test,test,46,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559,1,['test'],['test']
Testability,"In my case I need to build like this:; ```; export CC=mpicc.mpich; export CXX=mpicxx.mpich; export CXXFLAGS=""-march=native -funroll-loops -ffast-math -fno-finite-math-only"". ./meson.py build --optimization=2 --warnlevel=3 -Denable-tests=true --prefix=$PWD/build -Dcustom-mpi=true -Dwith-omp=true; ./ninja -C build install; ```; Maybe building with OpenMP makes a difference.; The unit test output is; ```; ../UnitTests/Common/toolboxes/ndflattener_tests.cpp:78: FAILED:; REQUIRE( nd3[r][0][0] == 0.7 ); with expansion:; 2.0 == 0.7; ```; valgrind does not pick up anything on the unit test, only on the new test case added in #1892 ; The expected output is as shown in hybrid_regression.py (note that the testcases branch is not develop).; When the UB manifests the residuals are not the expected (by varying orders of magnitude depending on the spurious value of wall roughness).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1893#issuecomment-1385691650:231,test,tests,231,https://su2code.github.io,https://github.com/su2code/SU2/issues/1893#issuecomment-1385691650,5,['test'],"['test', 'testcases', 'tests']"
Testability,"In order to plausibilize the results in a first step I took the fluid-domain of the streamwise periodic 2D-cht testcase .; 1. h=0 <=> adiabatic wall, i.e. heatflux=0; 2. h>>0 <=~> isothermal wall with Twall = Tinfinity. which the results recover (I also checked that nondimensionalization works correct) :+1: See the archive below for mesh and cfg files. See also below for some images. Note though that the definition of the heat-transfer/convection bc above in the PR-header is not correct. the heatflux computes to:. `q=h (T_infinity - T_wall)` with. `h` the the heat transfer coefficient (to be set in config by the user). `T_infinity` the reference temperature at infinity (to be set in config by the user). `T_wall` the the current local temperature of the specific FV-cell (of course done by the code). [htc-cases.tar.gz](https://github.com/su2code/SU2/files/6893231/htc-cases.tar.gz). The first two are for the isothermal case 2. (nondimensionalized). There is still a ~2.5K gap but I cannot go higher with h then 1e5 as I got bad convergence then. . *EDIT 29.07.2021: * In a comment below @pedro pointed out that one should/could add the Jacobian contribution from that bc. Doing so resolves the previously seen (and here documented) convergence issues with high `h`. Running the case again with h=1e8 converges nicely and results in an averaged surface temperature of exactly 400K 👍 . ![image](https://user-images.githubusercontent.com/31306376/127329398-65c4fdb2-2c1c-4657-bf1f-451624de87e0.png); ![image](https://user-images.githubusercontent.com/31306376/127329428-39ec0ef5-2c7b-4df6-8fb5-8ca7778b818d.png). For heatflux=0 and h=0 the results are (as expected) completely identical, the diff between the screen outputs is only that one uses a different bc in that `config file boundary information` tab; ![image](https://user-images.githubusercontent.com/31306376/127329459-ca9c0f26-a69e-498b-ae5a-31dbedf778cf.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1226#issuecomment-888307312:111,test,testcase,111,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-888307312,1,['test'],['testcase']
Testability,"In some parts of the code it looks like the intention was to allow both modes, see; COutput::SetHistoryFile_Header `if (requestedField == field.outputGroup || (requestedField == fieldIdentifier)){`. In principle you ""just"" need to apply that logic to every use of `requestedHistoryFields`. If would be more difficult to make the screen output know about groups, because it uses the names you give to lookup values directly, whereas the history loops over all available values and checks their group against all groups you give it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1493#issuecomment-1013089978:242,log,logic,242,https://su2code.github.io,https://github.com/su2code/SU2/issues/1493#issuecomment-1013089978,1,['log'],['logic']
Testability,"In terms of the how to contribute question, we will not accept the pull request unless it is clean and tested, but you can post not-quite-finished pull requests. However, if all you want is the regression tests, you can do that on your own system using the provided *_regression.py scripts. There are also directions on how to use the travis CI tools within your own fork: https://github.com/su2code/SU2/wiki/Running-Regression-Tests",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-210087118:103,test,tested,103,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-210087118,3,"['Test', 'test']","['Tests', 'tested', 'tests']"
Testability,"In that case maybe add the ramp case as a regression test, or maybe @tbellosta can contribute the diamond test as a regression. As a separate effort, it would still be very nice to write up the M6 results for the V&V page, we can host large files in the SU2 foundations google drive. Having some reference results and settings known to work in that case would be very helpful for new folks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2006#issuecomment-1500550485:53,test,test,53,https://su2code.github.io,https://github.com/su2code/SU2/pull/2006#issuecomment-1500550485,2,['test'],['test']
Testability,"In the first instance I would just try to run the new and original Testcase with just the original config. And from what I can see you need to do the 2 steps mentioned above (Remove `MATH_PROBLEM` and use `SU2_CFD_AD` directly for the adjoint test + use the `no_restart = True` option for the reg test). If nothing else (apart from `Math_Problem` and `restart_sol`) was changed then this should work without an extra `*_adj.cfg`. . In a next step (which is then more of a cosmetic, optional nature) you could strip the comments and unnecessary options from the cfg",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1571#issuecomment-1076205105:67,Test,Testcase,67,https://su2code.github.io,https://github.com/su2code/SU2/pull/1571#issuecomment-1076205105,3,"['Test', 'test']","['Testcase', 'test']"
Testability,In the process of the final merge which involves pulling corresponding TestCase and Tutorial branches into their develops as well. (and changing the travis.yml file),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/780#issuecomment-545203243:71,Test,TestCase,71,https://su2code.github.io,https://github.com/su2code/SU2/pull/780#issuecomment-545203243,1,['Test'],['TestCase']
Testability,In this branch the HLLC algorithm has been generalized to Non-Ideal flows so that now it can be used with more complex equations of state. Computation on nicfd LS89 test case with Van der Waals eos show quite similar Cd/Cl predicted values. Furthermore I cleaned up a little bit the original CUpwHLLC_Flow::ComputeResidual: there were some redundancies (some variables were computed twice). I also made changes that in my opinion improve code readability. Regression tests (for the original HLLC) passed on my PC with a difference of 1E-6 on RhoE residual (slight differences were anyway expected). A couple of bugs fixed. Cheers ; Giulio,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/209:165,test,test,165,https://su2code.github.io,https://github.com/su2code/SU2/pull/209,2,['test'],"['test', 'tests']"
Testability,"Indeed the tutorial.py is not a required test.; Anyway, I am happy I did not break anything. Do you think we can merge this?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1295#issuecomment-859564174:41,test,test,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/1295#issuecomment-859564174,1,['test'],['test']
Testability,"Interesting that only one of the tests fails - to be honest I was expecting all the turbomachinery tests to fail, does this solve the heap overflow?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2034646602:33,test,tests,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2034646602,2,['test'],['tests']
Testability,Inverse Design test case,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1725:15,test,test,15,https://su2code.github.io,https://github.com/su2code/SU2/issues/1725,1,['test'],['test']
Testability,Invscid Supersonic Wedge test case similar .su2 mesh and cfg but different results,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/890:25,test,test,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/890,1,['test'],['test']
Testability,Is it possible to extract the execution code of a Test case in SU2,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1407:50,Test,Test,50,https://su2code.github.io,https://github.com/su2code/SU2/issues/1407,1,['Test'],['Test']
Testability,Is it possible to use the Onera M6 mesh that we already have in the repo?; Meshes and restart files are kept in this repo https://github.com/su2code/TestCases/pulls,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1545931863:149,Test,TestCases,149,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1545931863,1,['Test'],['TestCases']
Testability,Is there a way to resolve the failing test case. I can't see the proposed changes affecting that particular test case but can look into it if needed.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2163#issuecomment-1816662783:38,test,test,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/2163#issuecomment-1816662783,2,['test'],['test']
Testability,It can be checked with SU2 Quick Start Test case NACA 0012 airfoil. ; Paraview (.vtu) output for flow and surface is perfectly fine but Tecplot (.szplt) create erroneous data in 3rd dimension for this 2D case.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1182#issuecomment-770719442:39,Test,Test,39,https://su2code.github.io,https://github.com/su2code/SU2/issues/1182#issuecomment-770719442,1,['Test'],['Test']
Testability,"It is a bit of a cultural thing. People who want robust bits write more.; Some people wire less. At the bank I once worked at, unit tests were required for every module.; Some people wrote code that tested almost nothing. And it would get; through code review that way. Eventually, I added coverage analysis to the check in that exposed this; practice that gave a false assurance that things were ok. More when I can think a bit more on this and get to a real keyboard!. Pat. On Wed, Jun 5, 2019 at 1:50 PM Juan Jose Alonso <jjalonso@stanford.edu>; wrote:. > Clark,; >; > Thanks for putting this idea out there. In my experience, unit testing; > has been an intrinsic part of the the modus operandi in many multi-physics; > codes at DoE and has been well worth the additional effort. In cases where; > it makes sense (as described by Clark and in the Stack Exchange discussion); > I would advocate for using it moving forward. There may also be some; > issues that arise multiple times in existing code where a retroactive; > application of unit testing may also make sense. I am copying Pat Miller,; > formerly with DoE, who may have more experience on whether such unit; > testing approaches were useful/worth the investment in some major codes he; > worked on.; >; > Best,; >; > Juan; >; >; > On Jun 4, 2019, at 2:14 PM, Clark Pederson <notifications@github.com>; > wrote:; >; > I propose adding a unit-testing framework and unit-tests to SU2. After; > chatting with @economon <https://github.com/economon>, I've decided to; > move the discussion here to get additional input.; > What is unit testing?; >; > For those not familiar with unit testing, unit testing allows the testing; > of small bits of behavior, ideally using isolated bits of code. It is not; > intended to replace validation testing or formal verification tests.; > Instead, it serves a unique purpose. Consider the three following use cases:; >; > - You're developing a new feature, and you want to test it to see if; > it works",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:1453,test,testing,1453,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,1,['test'],['testing']
Testability,"It is not core dependent (I have tested on 2, 10, and 30 cores). Sometimes I get no error message at all, just a ""# of processes were killed"" then it remains frozen. And here is the error log for the QuickStart (same issue); [QuickStartLog.txt](https://github.com/su2code/SU2/files/4576792/QuickStartLog.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-623648419:33,test,tested,33,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-623648419,2,"['log', 'test']","['log', 'tested']"
Testability,"It is not intended to replace validation testing or formal verification tests. Instead, it serves a unique purpose. Consider the three following use cases:. * You're developing a new feature, and you want to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; * You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; * You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this relevant Stack Exchange question.<https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>. What do I propose?. My research group at UT Austing has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. '''; ./bootstrap; ./configure; make; make check; '''. We use Boost's unit testing framework<https://www.boost.org",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:2095,test,testing,2095,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,1,['test'],['testing']
Testability,"It is not intended to replace validation testing or formal verification tests. Instead, it serves a unique purpose. Consider the three following use cases:. + You're developing a new feature, and you want to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; + You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; + You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this [relevant Stack Exchange question.](https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes). ## What do I propose?. Our research group at UT Austin has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see [their documentation](https://www.gnu.org/software/automake/manual/html_node/Tests.html). Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. ```; ./bootstrap; ./configure; make; make check; ```. We use [Boost's unit testing framework](https://www.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:1272,test,testing,1272,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['test'],['testing']
Testability,"It is now merged indeed. I dit not work in that branch and I did not have the time to test it on several machines...so I suggest you to checkout the develop branch (not the master) and make a clean build. If things are not improved, I'm afraid that you will have to set the paths manually again.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/447#issuecomment-349972232:86,test,test,86,https://su2code.github.io,https://github.com/su2code/SU2/issues/447#issuecomment-349972232,1,['test'],['test']
Testability,"It looks like all the tests are finally working. However, the `directdiff_euler_py` output variables are written in the wrong order. It looks like this comes from `SU2/eval/gradients.py`:. ```python; # initialize gradients; func_keys = list(su2io.grad_names_map.keys()); func_keys = ['VARIABLE'] + func_keys; ```. My guess is that there was some assumption that dictionary keys have an inherent order. Now, should the test be doing a diff of the text output, or should it really be checking the numerical values?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-339951861:22,test,tests,22,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-339951861,2,['test'],"['test', 'tests']"
Testability,It looks like changes have gone through for driver_structure.hpp and driver_structure.cpp. I am not sure how to remove the previous commits that failed. It also appears a .hpp got placed in the src directory that needs to be removed. Preconditioning is called automatically for HB cases in this setup. The current HB regression test may therefore be sufficient. If preconditioning should be an option in the cfg file instead I will leave open to discussion.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/445#issuecomment-332057827:328,test,test,328,https://su2code.github.io,https://github.com/su2code/SU2/pull/445#issuecomment-332057827,1,['test'],['test']
Testability,It looks like our regression tests are failing during the compilation of TecIO on the Travis system (they use pretty standard Ubuntu builds). @ScottImlay: could you please take a look at the build errors when you have some time?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/558#issuecomment-414158109:29,test,tests,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/558#issuecomment-414158109,1,['test'],['tests']
Testability,It looks like replacing autotools is fairly straightforward - while I'm at it I'll go ahead and remove the .in and .m4f files from the repo. ; I'll push that up to this branch once I test it on my own system - however I will only have tested this on an ubuntu system so it would be good to double check it on a different OS.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586#issuecomment-426472369:183,test,test,183,https://su2code.github.io,https://github.com/su2code/SU2/pull/586#issuecomment-426472369,2,['test'],"['test', 'tested']"
Testability,"It looks like the edge mass fluxes are not stored when running compressible RANS simulations, preventing any species convection when using BOUNDED_SCALAR. I'm looking into why this happens. Below is the species solution after 10 iterations for the passive_transport_validation test case for the RANS solver and using BOUNDED_SCALAR. The species values specified at the inlet do not progress downstream using the current settings. ![bounded_scalar_compressible](https://github.com/su2code/SU2/assets/38651601/bd86c5cf-fb6b-4f2b-a270-ef48f80dad10)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2266#issuecomment-2107442714:277,test,test,277,https://su2code.github.io,https://github.com/su2code/SU2/pull/2266#issuecomment-2107442714,1,['test'],['test']
Testability,It looks like the regression tests fail because there is an additional `------------------------------ Begin Solver -----------------------------; ` at the end of the output of the python wrapper test cases.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/488#issuecomment-356044234:29,test,tests,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/488#issuecomment-356044234,2,['test'],"['test', 'tests']"
Testability,It looks like you did hit the right button; the tests are running now in https://github.com/su2code/SU2/pull/310,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/308#issuecomment-250350265:48,test,tests,48,https://su2code.github.io,https://github.com/su2code/SU2/pull/308#issuecomment-250350265,1,['test'],['tests']
Testability,"It looks like your example is only converging a couple orders of magnitude, have you tried running it for more iterations or tweaking the settings?; Have you tested this fix on the cases of the related issues? Does this change improve those results?; Have you tested this strategy for curved Euler (slip) walls, which share the implementation with the symmetry plane boundary.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2174#issuecomment-1826984093:158,test,tested,158,https://su2code.github.io,https://github.com/su2code/SU2/pull/2174#issuecomment-1826984093,2,['test'],['tested']
Testability,"It looks likes my attempts to align the test cases were a failure...tabs :( . I can go through and update those to make it look nice, if everything else looks good.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1271#issuecomment-827800839:40,test,test,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/1271#issuecomment-827800839,1,['test'],['test']
Testability,"It looks to me that in order to use Python 3.x on your machine, you need to use the command ""python3"", instead of just ""python."" In other words, on your system, the default ""python"" appears to point to Python 2.7, rather than Python 3.x. An easy way to test this is to just type ""python --version"" at your command prompt. If the result is Python 2.7.x, then try typing ""python3 --version""... If this is indeed the case, then try changing the first line of parallel_computation.py from:; `#!/usr/bin/env python`; to:; `#!/usr/bin/env python3`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-624211172:253,test,test,253,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-624211172,1,['test'],['test']
Testability,"It seems like unit testing would be a good way to verify BC behavior, rather than just through regression testing. For BC functions with no return type, is there a good way to write a unit test?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1880:19,test,testing,19,https://su2code.github.io,https://github.com/su2code/SU2/issues/1880,3,['test'],"['test', 'testing']"
Testability,"It turns out using convective BCs drastically changes the global flow pattern. Here you can see a comparison of pressures between a simulation with isothermal wall (top, 300 K) and convective BC (bottom, 300K, 20). Only the BCs in the conical part on the right side are different. Numerical settings and further BCs are identical.; https://github.com/su2code/SU2/assets/42602495/ba378660-ddd3-417c-a75e-f5ab54542697. Here you can see the difference in temperature.; https://github.com/su2code/SU2/assets/42602495/a6fcd09d-a065-46a5-b04a-60052fe35ed4. The difference means, that in one simulation (isothermal wall, top) I get strong, periodic oscillations, while in the other one (with convection) the oscillations are dampened out almost immediately. Is there a SU2 unit test case for the validation of the convective boundary condition I can run?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1872#issuecomment-1568222231:771,test,test,771,https://su2code.github.io,https://github.com/su2code/SU2/issues/1872#issuecomment-1568222231,1,['test'],['test']
Testability,"It would be good to have these beta terms available as outputs for debugging purposes. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2303:758,test,test,758,https://su2code.github.io,https://github.com/su2code/SU2/pull/2303,1,['test'],['test']
Testability,It would indeed be good to have better coverage in the tests. I have one or two small cases I will add. @MicK7 : do you have a small mixed-element section case (maybe just a small square and cube)? I only seem to have meshes with sections of a single element type.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-513301555:55,test,tests,55,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-513301555,1,['test'],['tests']
Testability,"It would simply take some reorganizing of the test scripts to make one function per case and maybe renaming the `TestCase` class to `RegressionTestCase` or something. For example, I rewrote one of the tests in `serial_regression.py` here: https://github.com/petebachant/SU2/commit/fe0ee432c67540067046fbebf9889660331a6592. Then I could run this with. $ cd TestCases; $ pytest serial_regression.py. the output from which was:. ```; $ pytest serial_regression.py; ======================= test session starts =======================; platform linux -- Python 3.6.3, pytest-3.2.1, py-1.4.34, pluggy-0.4.0; rootdir: /home/pete/SU2/TestCases, inifile:; collected 1 item. serial_regression.py . ====================== warnings summary =======================; serial_regression.py::TestCase; cannot collect test class 'TestCase' because it has a __init__ constructor. -- Docs: http://doc.pytest.org/en/latest/warnings.html; =============== 1 passed, 1 warnings in 92.18 seconds ==================; ```. `pytest` has a bunch of features to control the print output as well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/462#issuecomment-342677051:46,test,test,46,https://su2code.github.io,https://github.com/su2code/SU2/issues/462#issuecomment-342677051,9,"['Test', 'test']","['TestCase', 'TestCases', 'test', 'tests']"
Testability,"It's a bit more involved because we want to support ""offline"" mode. But that's what we do with dependencies that we cannot copy due to license restrictions. With that said Nijso has probably fought enough with unit tests for the rest of the year, so if you want to send a pull request our way you are most welcome :); Cheers",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1726#issuecomment-1198903380:215,test,tests,215,https://su2code.github.io,https://github.com/su2code/SU2/pull/1726#issuecomment-1198903380,1,['test'],['tests']
Testability,"It's not required fo initialization. Ok, if it's not going to work in this way let's start a discussion about a proper way to do this. I will create a new PR for just the initialization example and put it in a regression test. Thanks for the feedback.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1960#issuecomment-1464935230:221,test,test,221,https://su2code.github.io,https://github.com/su2code/SU2/pull/1960#issuecomment-1464935230,1,['test'],['test']
Testability,"It's probably a small fix, but better if @WallyMaier or @jtneedels look into this and fix it, since they are more capable of setting up the compressible test case for verification/validation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1639#issuecomment-1131558712:153,test,test,153,https://su2code.github.io,https://github.com/su2code/SU2/issues/1639#issuecomment-1131558712,1,['test'],['test']
Testability,"It's running.; A small problem is that I have to change `ubuntu:19.04` to `ubuntu:18.04` and change `libopenmpi3` to `libopenmpi-dev openmpi-bin` in the definition, or it will fail.; ```; ubuntu@main-3:~/main_shared_volume/build_singularity_image/builid_image$ sudo singularity build su2_tensorforce.sif su2_tensorforce.def ; INFO: Starting build...; Getting image source signatures; Skipping fetch of repeat blob sha256:1eecd0e4c2cd8c1f628b81c53a487aae6c8d4140248a8617313cd73079be09c4; Skipping fetch of repeat blob sha256:fac13afdf65bf403945c8d6bee654a26940c5527a9913bdf8daa54b69a49f550; Skipping fetch of repeat blob sha256:0c6dd534ddf18642a5af19c09c2d9744d0d1aa93680995d430b5257b6eed079d; Skipping fetch of repeat blob sha256:854703cff8700dce5b5ff70e54f5d612ab701405bc200a5b10a0213ca9025e50; Copying config sha256:993d5f573a24af19dd6006bc3e6e113bd0c709797dc48676f4f0b5ed456470cc; 2.42 KiB / 2.42 KiB [======================================================] 0s; Writing manifest to image destination; Storing signatures; singularity image-build: relocation error: /lib/x86_64-linux-gnu/libnss_files.so.2: symbol __libc_readline_unlocked version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; FATAL: While performing build: while running engine: exit status 127; ```. My OS is ubuntu 18.04, and OpenMPI version is 2.1.1. I will take a test to see the reason. Once if finishes, I will let you know. Thank you.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/739#issuecomment-515383478:1360,test,test,1360,https://su2code.github.io,https://github.com/su2code/SU2/issues/739#issuecomment-515383478,1,['test'],['test']
Testability,It's what I feared: all SST tests that have inlet BCs are failing. Can it be set up in such a way that we end up with the same inlet boundary condition?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1796#issuecomment-1292541506:28,test,tests,28,https://su2code.github.io,https://github.com/su2code/SU2/pull/1796#issuecomment-1292541506,1,['test'],['tests']
Testability,"Jayant,. Indeed: we want the regression tests to provide “coverage” of the code. In this case, each of your 5 sims runs a slightly modified version of the turbulence model and therefore requires a different test case. Of course, you only need to run each case for a short time and compare with a pre-recorded reference outcome. Best,. Juan. On Sep 10, 2018, at 11:43 AM, Jayant Mukhopadhaya <notifications@github.com<mailto:notifications@github.com>> wrote:. Looking at some of the other pull requests, it seems like if I add a test case to the repository, I should also add it to the regression tests. For this test case, SU2 has to run 5 different simulations. So I am assuming I should write a regression test for each of the simulations. Just wanted to confirm this before I change the regression scripts. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/pull/570#issuecomment-420018434>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxIcgYYorWkbnwu8K9bGHjWlP_sTSks5uZrLYgaJpZM4WSGPb>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/570#issuecomment-420020260:40,test,tests,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/570#issuecomment-420020260,6,['test'],"['test', 'tests']"
Testability,"Just FYI: It is also possible to edit title and label after the PR has been merged. The change-log will take these updates into account. I will do that for a couple of older PRs. Nevertheless, make sure to have a proper title and label already while your PR is open.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/813#issuecomment-551454825:95,log,log,95,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-551454825,1,['log'],['log']
Testability,Just compiled today and it seems like the options `CFL_ADAPT` and `CFL_ADAPT_PARAM` have been deprecated? . Running the 2D inviscid cylinder and the euler channel flow example both throw an error. ```; CFL_ADAPT: invalid option name. Check current SU2 options in config_template.cfg.; CFL_ADAPT_PARAM: invalid option name. Check current SU2 options in config_template.cfg.; ```. Commenting these lines out lets the test cases run but I'm not sure what the default behavior is (are these running with adaptive CFL if we don't pass that parameter at all?),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/152:415,test,test,415,https://su2code.github.io,https://github.com/su2code/SU2/issues/152,1,['test'],['test']
Testability,Just finished compiling. Test cases are fine now. I had an up-to-date Test Cases repo but my SU2 repo was behind by a commit. Sorry for the false alarm!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/152#issuecomment-72734433:25,Test,Test,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/152#issuecomment-72734433,2,['Test'],['Test']
Testability,"Just keeping the size of the repo on the small side. But go for it if it is better for the test, please use a binary restart instead of csv.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1548003169:91,test,test,91,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1548003169,1,['test'],['test']
Testability,Just merged the test. Let's get this merged next once it passes.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/670#issuecomment-511500047:16,test,test,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/670#issuecomment-511500047,1,['test'],['test']
Testability,"Just to keep track of things, this is what is currently being done in #700, #691, and #705.; If anyone wants to join efforts (there are possibly similar efforts going on in personal branches) either by coding / testing / benchmarking / providing suggestions / etc. please do.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/711:211,test,testing,211,https://su2code.github.io,https://github.com/su2code/SU2/issues/711,2,"['benchmark', 'test']","['benchmarking', 'testing']"
Testability,"LGTM, thanks for updating the booleans. I think you can still add the test case to the PR right?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/615#issuecomment-457485924:70,test,test,70,https://su2code.github.io,https://github.com/su2code/SU2/pull/615#issuecomment-457485924,1,['test'],['test']
Testability,LGTM. Just updated with develop and will merge in if the tests pass.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/338#issuecomment-264959170:57,test,tests,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/338#issuecomment-264959170,1,['test'],['tests']
Testability,"Let me explain a typical scenario I would go through (picking BCs as an example):; > ; > * I should be able to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; > ; > * BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; > ; > * Now, switching between my custom BC types and the standard ones only requires to edit the config file. For example, the inlet BC of the SA turbulence model is defined in CTurbSASolver::BC_Inlet(); We can place this definition in a separate file bcinit.cpp and dynamically link this file so you have a libbcinit.so file. SU2 knows about libbcinit.so and BC_Inlet() at compile time. ; In your testcases directory, you can put a copy of bcinit.cpp and redefine the boundary condition BC_Inlet. If you change the boundary condition, you only compile bcinit.cpp in your testcase directory and create a libbcinit.so in your testcase directory. You then make sure that when SU2 is looking for dynamically linked libraries, it searches your testcase directory before it searches the SU2 installation directory. . As you see, this can be used for redefining existing (at compile time) functions and modifying its content. I find it especially useful for creating custom initial conditions. If you want to create a completely new custom boundary condition BC_Custom(), it is probably easiest to predefine this structure and create a custom_bc option in the config file. In a CFD problem, there are only a limited number of possibilities (for types of boundary conditions, and systems of equations), so I'm not sure when a BC_Custom() is useful, or when the tipping point is where self-registering classes will become useful for its implementation. Recompiling the code completely takes maybe 2 minutes for me, so I never saw compiling times as a problem. However, this concept could reduce ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665:1022,test,testcase,1022,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665,1,['test'],['testcase']
Testability,"Let me recall the other sub-issues reported by @suargi:. **Third issue**; > After solving the previous issues, with mpirun and depending on the number of cores to be used SU2 will still produce a segmentation fault when using Full MG. This problem is not present when using mpiexec. I traced it back and found that in CFVMFlowSolverBase<V, FlowRegime>::Friction_Forces the method GetNormal_Neighbor() from CVertex returns a non existing point. I was able to partially reproduce this with @suargi's help, by modifying `SU2/TestCases/rans/rae2822/turb_SA_RAE2822.cfg`, setting MGLEVEL=6 (instead of 3) and MGCYCLE=FULLMG_CYCLE (instead of W_CYCLE). This could become the new regression test by the way. Both with `mpirun -n 3` and `mpiexec -n 3` we observed non-existing point IDs of the normal neighbor. In #1430 I describe what I think is the problem. For `mpirun -n 2` and `mpiexec -n 2` I get another kind of error, I'll further investigate this. We did not see a difference in behaviour of `mpirun` and `mpiexec` on my system however. **Edit**: My version are `mpirun (Open MPI) 4.1.0` and `mpiexec (OpenRTE) 4.1.0`. **Fourth issue**; > Further, this parameter, Convergence_FullMG, is set to false in CIntegration::CIntegration() and never updated i.e., there is no evaluation whether the FullMG has converged or not. Consequently, the function SetProlongated_Solution() in CMultiGridIntegration::MultiGrid_Iteration() is never executed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1362#issuecomment-964163647:522,Test,TestCases,522,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-964163647,2,"['Test', 'test']","['TestCases', 'test']"
Testability,Let's merge this. Thanks to @dkavolis and @pcarruscag for their contributions. Thanks to @TobiKattmann for testing!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/813#issuecomment-557528663:107,test,testing,107,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-557528663,1,['test'],['testing']
Testability,Let’s try to keep it positive here.. @talbring has an interesting point that the tests should show some sensitivity to major changes like the grid deformation not being specified. Can they be made more sensitive to this?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/751#issuecomment-518454391:81,test,tests,81,https://su2code.github.io,https://github.com/su2code/SU2/pull/751#issuecomment-518454391,1,['test'],['tests']
Testability,"Like for any other command in this file, build_command will add a quote on the left hand side of our command path. So we'll always need another quote on the right hand side. For some reason SOL_FSI, SOL and GEO were missing them, resulting in Errors when attempting to execute them. ## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/578:1075,test,test,1075,https://su2code.github.io,https://github.com/su2code/SU2/pull/578,1,['test'],['test']
Testability,Link to TestCases computational grids seems to be broken,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/35:8,Test,TestCases,8,https://su2code.github.io,https://github.com/su2code/SU2/issues/35,1,['Test'],['TestCases']
Testability,"Looking at some of the other pull requests, it seems like if I add a test case to the repository, I should also add it to the regression tests. For this test case, SU2 has to run 5 different simulations. So I am assuming I should write a regression test for each of the simulations. . Just wanted to confirm this before I change the regression scripts",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/570#issuecomment-420018434:69,test,test,69,https://su2code.github.io,https://github.com/su2code/SU2/pull/570#issuecomment-420018434,4,['test'],"['test', 'tests']"
Testability,"Looks good to me now. If the regression test go through, it can be merged in.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/576#issuecomment-425256907:40,test,test,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/576#issuecomment-425256907,1,['test'],['test']
Testability,"Looks good to me! I just tested your branch on my system and it works. I'll delete my branch. While we're here, are there additional changes that need to be made for openblas (along the lines of what are mentioned in issue #991), or is that an ArchLinux issue, only?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/998#issuecomment-632818720:25,test,tested,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/998#issuecomment-632818720,1,['test'],['tested']
Testability,"Looks good to me, Daniel. Merging this in. I'll be in touch shortly about test cases. T",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/221#issuecomment-171112852:74,test,test,74,https://su2code.github.io,https://github.com/su2code/SU2/pull/221#issuecomment-171112852,1,['test'],['test']
Testability,"Looks good to me, seems like the regression tests are OK now (including post pro). Thanks !",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/344#issuecomment-267006027:44,test,tests,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/344#issuecomment-267006027,1,['test'],['tests']
Testability,"Looks good to me. Thanks for adding the test, Daniel. Merging this in now...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/232#issuecomment-178112129:40,test,test,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/232#issuecomment-178112129,1,['test'],['test']
Testability,"Looks good, thanks for looking into this @arubino. . I think that it's fine to start a pull request with this branch if you've made the changes you wanted - it'll fix the regression test for now, and until we find a way to test for similar errors we can try to remember to skim through log files even if there's a friendly green check-mark.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/313#issuecomment-252534574:182,test,test,182,https://su2code.github.io,https://github.com/su2code/SU2/issues/313#issuecomment-252534574,3,"['log', 'test']","['log', 'test']"
Testability,"Looks like the commented code was added here (https://github.com/su2code/SU2/commit/b5db893bcc57a67abbbe43ddd5a87753ec61d23b) but never activated. The Matrix* routines are not being used anywhere at the moment. Do you see some value in testing it out? Otherwise, might be best to remove so we aren't carrying around dead code.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/653#issuecomment-485039016:236,test,testing,236,https://su2code.github.io,https://github.com/su2code/SU2/pull/653#issuecomment-485039016,1,['test'],['testing']
Testability,"Looks like the stator was just the intermittent hybrid AD problem that is being worked on.; As for the nozzle... it did not have an objective function specified, therefore it must have been defaulting to drag, which was zero because MARKER_MONITORING was empty, now you added something to monitor and puff, results changed. So before the case was not testing anything :shrug: you have my blessing to do whatever you want, check if the new adjoints make some sense and update (good samaritan option), or blindly update, or don't modify the case, or delete it, up to you :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1698#issuecomment-1177007574:351,test,testing,351,https://su2code.github.io,https://github.com/su2code/SU2/pull/1698#issuecomment-1177007574,1,['test'],['testing']
Testability,"Made some progress on this. The build system now automatically finds the Python directories and library, so the wrapper is now built against both Python 2.7 and 3.6 in the test suite. However, some tests are still failing. Any ideas what might be going wrong?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-326741839:172,test,test,172,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-326741839,2,['test'],"['test', 'tests']"
Testability,"Made the last of the changes that I wanted too in connection to the comments provided by @economon and @pcarruscag . Just as a review of the things I changed: . 1) Changed the error message; 2) Implemented the UQ methodology for a non-ideal fluid and for both gradient methods (AvgGrad and AvgCorrectedGrad). ; 3) generalized the eigen-decomposition functions for order n matrices. Also made the functions static so that they can be used without the need for an instantiation of the CNumerics class; 4) Improved performance by moving variable declarations to the class constructor for CNumerics; 5) Changed UQ config option names to be more specific. Added an output message for when people use the previous names.; 6) This instigated some changes to the TestCases config files, and to the compute_uncertainty.py script.; 7) Some general code clean up. Let me know if there are any other improvements that I should include.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/570#issuecomment-434551782:755,Test,TestCases,755,https://su2code.github.io,https://github.com/su2code/SU2/pull/570#issuecomment-434551782,1,['Test'],['TestCases']
Testability,Make sure to copy all files from the test case repository to the TestCases folder. Please reopen this issue if this has not been resolved with that.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/388#issuecomment-308374771:37,test,test,37,https://su2code.github.io,https://github.com/su2code/SU2/issues/388#issuecomment-308374771,2,"['Test', 'test']","['TestCases', 'test']"
Testability,"Making all in Common/lib; make[1]: Entering directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-config_structure.o -MD -MP -MF ../src/.deps/libSU2_a-config_structure.Tpo -c -o ../src/libSU2_a-config_structure.o`test -f '../src/config_structure.cpp' || echo './'`../src/config_structure.cpp; mv -f ../src/.deps/libSU2_a-config_structure.Tpo ../src/.deps/libSU2_a-config_structure.Po; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-dual_grid_structure.o -MD -MP -MF ../src/.deps/libSU2_a-dual_grid_structure.Tpo -c -o ../src/libSU2_a-dual_grid_structure.o`test -f '../src/dual_grid_structure.cpp' || echo './'`../src/dual_grid_structure.cpp; /public/soft/intel/impi/3.2.2.006/include64/mpicxx.h(45): catastrophic error: #error directive: ""SEEK_SET is #defined but must not be for the C++ binding of MPI. Include mpi.h before stdio.h""; **#error ""SEEK_SET is #defined but must not be for the C++ binding of MPI. Include mpi.h before stdio.h""**; ^. compilation aborted for ../src/dual_grid_structure.cpp (code 4); make[1]: **\* [../src/libSU2_a-dual_grid_structure.o] Error 4; make[1]: Leaving directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; make: **\* [all-recursive] Error 1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/31:2740,test,test,2740,https://su2code.github.io,https://github.com/su2code/SU2/issues/31,1,['test'],['test']
Testability,"Mate... I graduated from the school of ""out of the scope of"" with honors ok... You and I know that is just code for ""I'll leave it for someone else"".; Just cut and past the parts of the implementation that are exactly the same as another scheme into a function instead of copying, and given that other NEMO schemes have Jacobians that is probably something you should look into re-using.; You also clicked the box for having added a testcase but I don't see anything, why don't you add the testcase for the pictures and plots you showed? That is the only way for anything in this code to continue working... It's good work, it went into a paper, make it reproducible.; These are the contribution guidelines https://su2code.github.io/docs_v7/Style-Guide/ they may not always make things easier for authors, but they make it easier for the people coming after them.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1773#issuecomment-1276409765:433,test,testcase,433,https://su2code.github.io,https://github.com/su2code/SU2/pull/1773#issuecomment-1276409765,2,['test'],['testcase']
Testability,"Maybe instead of adding a new one, we can modify an existing one to check that feature. Or we add a new one and remove an existing one. We have to somehow reduce the number of tests ...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-515453841:176,test,tests,176,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-515453841,1,['test'],['tests']
Testability,Memory Test,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/261:7,Test,Test,7,https://su2code.github.io,https://github.com/su2code/SU2/pull/261,1,['Test'],['Test']
Testability,Mengjun add another line to test the pull request function in GitHub,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/368:28,test,test,28,https://su2code.github.io,https://github.com/su2code/SU2/pull/368,1,['test'],['test']
Testability,"Merge and push is simpler I think, and with that the reviewers have the option of only seeing the new commits.; Thanks for the changes, we'll merge once the tests pass.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1951#issuecomment-1470769800:157,test,tests,157,https://su2code.github.io,https://github.com/su2code/SU2/pull/1951#issuecomment-1470769800,1,['test'],['tests']
Testability,Merging this to allow all tests to run so we can create a release tomorrow (there is a fix in this branch for compilation with gcc 5.3.0 so this should be part of the release). Happy to make post mortem changes if needed.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1107#issuecomment-736680160:26,test,tests,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/1107#issuecomment-736680160,1,['test'],['tests']
Testability,"Merging. FYI: the time out issues with the regression tests were solved by forcing a flush of the print buffer after each test case result. Python 3 was buffering too long in some cases, leading to time outs.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/517#issuecomment-377863784:54,test,tests,54,https://su2code.github.io,https://github.com/su2code/SU2/pull/517#issuecomment-377863784,2,['test'],"['test', 'tests']"
Testability,Missing Vorticity Output in 2D RANS test cases,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/939:36,test,test,36,https://su2code.github.io,https://github.com/su2code/SU2/issues/939,1,['test'],['test']
Testability,"Modified the Tecplot binary output to use the latest TecIO library and to write Tecplot szplt (SZL) files instead of Tecplot plt files. Tecplot szplt files are smaller than plt files and are utilized more efficiently in Tecplot. For large files visualization within Tecplot can be much faster and use far less memory with szplt files. To make this change work correctly, the TecplotBinary DomainMesh and DomainSolution files were modified to write a single mixed-element zone instead of separate zones for each element type. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/558:818,test,test,818,https://su2code.github.io,https://github.com/su2code/SU2/pull/558,1,['test'],['test']
Testability,"Modify TestCase.py related to #2159. . ## Proposed Changes; Replaced `platform.processor()` with `platform.machine()` for better cross-platform support. Add `amd64` and `arm64` as additional supported cpu arch. ## Related Work; Issue #2159 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2163:7,Test,TestCase,7,https://su2code.github.io,https://github.com/su2code/SU2/pull/2163,2,"['Test', 'test']","['TestCase', 'test']"
Testability,Modify one of the testcases to exercise this please (even if we don't have a way to check it is doing the right thing).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1552#issuecomment-1080434485:18,test,testcases,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1080434485,1,['test'],['testcases']
Testability,More arm64 updates and fix a race condition in a test,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2076:49,test,test,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/2076,1,['test'],['test']
Testability,"More likely to be due to compiler differences, yes please take the values from the github tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1428#issuecomment-977255994:90,test,tests,90,https://su2code.github.io,https://github.com/su2code/SU2/pull/1428#issuecomment-977255994,1,['test'],['tests']
Testability,"More to come on your questions above, but a quick note to say that we're nearly finished with adding new regression tests for the Python scripts in a separate branch. We will merge those in soon, so that you can more effectively test your modifications.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-200952423:116,test,tests,116,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-200952423,2,['test'],"['test', 'tests']"
Testability,Move of_grad_cd.csv.ref from TestCases repo to TestCases/ folder,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1668:29,Test,TestCases,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/1668,2,['Test'],['TestCases']
Testability,Mpi4 is not compatible with the version of pastix we support.; And you have to compile scotch and pastix according to the instructions in TestCases/pastix_support/ before compiling SU2,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1349#issuecomment-894776414:138,Test,TestCases,138,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349#issuecomment-894776414,1,['Test'],['TestCases']
Testability,"My apologies for the long delay. I did notice this bug after updating to the latest version. Using the following files and the `euler/oneram6/mesh_ONERAM6_inv_ffd.su2` mesh from the test cases: . [run_polar_template.sh.txt](https://github.com/su2code/SU2/files/2160777/run_polar_template.sh.txt); [polarCtrl.in.txt](https://github.com/su2code/SU2/files/2160761/polarCtrl.in.txt); [base_cfg.cfg.txt](https://github.com/su2code/SU2/files/2160762/base_cfg.cfg.txt). With the current version of `compute_polar.py`, if lines 285 on are comment in `base_cfg.cfg` then the script will fail. Adding the fix I describe above solves the issue. Further issues: the moment outputs in lines 458 and 459 are inconsistent with the headers defined in line 332. The ordering of the `z` and `y` moment are reversed. Also, the `x` moment is currently assigned to the `z` moment in the result structure in line 443.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/545#issuecomment-402270185:182,test,test,182,https://su2code.github.io,https://github.com/su2code/SU2/issues/545#issuecomment-402270185,1,['test'],['test']
Testability,"My guess is that the direction of the unit normal and unit tangent are not relevant, because we always use them for things like `(v.n)n` and so the sign cancels. But please go ahead and test with the opposite sign.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1728#issuecomment-1205787055:186,test,test,186,https://su2code.github.io,https://github.com/su2code/SU2/issues/1728#issuecomment-1205787055,1,['test'],['test']
Testability,"My previous post used a linear solver precision of 1E-6. I ran a couple of test cases at near machine precision (a linear solver tolerance of 1E-14) and higher CFL number (CFL=150), with no CFL adaptation. As suggested, I used ILU+FGMRES. I capped the maximum number of linear solver iterations at 200, and did not raise any errors if the linear solver stopped at 200 iterations with less than 1E-14. The linear solver didn't exceed 200 iterations for the RANS equations, but it did for the Navier-Stokes equations. Once again, there doesn't appear to be a huge difference. For the flat-plate, the results were almost identical:. ![flat_plate_improved](https://user-images.githubusercontent.com/13340225/35233993-595fe2d4-ff65-11e7-9fd6-4b98f30b4d75.png). For the NACA 0012 airfoil, the current `develop` branch of the code outperformed this pull request:. ![naca0012_improved](https://user-images.githubusercontent.com/13340225/35233983-4f79b380-ff65-11e7-81f4-4b65964acecc.png). I believe overall convergence was similar because the Navier-Stokes solver, not the turbulence-solver, is the limiting factor when it comes to precision. The linear solver always converged on a turbulence solution with high precision in under 50 linear solver iterations. Meanwhile, the linear solver sometimes failed to find a Navier-Stokes solution within 1E-14 even after 200 iterations. The only way to make the Navier-Stokes solver converge to 1E-14 was to use small time steps (CFL ~= 1) at difficult points in the overall convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/491#issuecomment-359811658:75,test,test,75,https://su2code.github.io,https://github.com/su2code/SU2/pull/491#issuecomment-359811658,1,['test'],['test']
Testability,"My proposal the other day seems to have put you in quite the mood...; Do you also get a ton of ""-1 converted to unsigned short""? Or is that just me?; I'll see what I can do about the rest. > I do not have access to a Mac, so I didn't test if on OSX. I tried clang 6 and clang 10, and had to stupefy the code because of the former, should be ok on Mac",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1082#issuecomment-703062023:234,test,test,234,https://su2code.github.io,https://github.com/su2code/SU2/pull/1082#issuecomment-703062023,1,['test'],['test']
Testability,"NABLE_METIS`: `ON|OFF`; * `SU2_METIS_CPPFLAGS`: flags to pass when compiling Metis; * `SU2_ENABLE_MKL`: `ON|OFF`; * `SU2_ENABLE_MPI`: `ON|OFF`; * `SU2_ENABLE_MUTATIONPP`: `ON|OFF`; * `SU2_ENABLE_PARMETIS`: `ON|OFF`, only available when `SU2_ENABLE_MPI` is `ON`; * `SU2_PARMETIS_CPPFLAGS`: flags to pass when compiling Parmetis; * `SU2_ENABLE_TECIO`: `ON|OFF`; * `SU2_TECIO_CPPFLAGS`: flags to pass when compiling Tecio and TecioMPI; * `SU2_TECIOMPI_CPPFLAGS`: flags to pass when compiling TecioMPI, requires `SU2_ENABLE_MPI`. There is an additional variable that is recognized by CMake scripts - `DEBUG`, turning it `ON` enables additional `STATUS` messages, mainly to check that correct include directories, compile definitions and linked libraries were set up correctly. The remaining options like install location and compilers are handled by CMake. Tested this on Ubuntu with CMake 3.15.5 and everything except `pySU2ad` wrapper compiles. Haven't tested on earlier CMake versions so there might be bugs with them but they should be easy to resolve if any. I have based the CMake scripts on autotools scripts so there's no Pastix/Blas options yet. [FindBLAS](https://cmake.org/cmake/help/latest/module/FindBLAS.html), [FindPastix](https://github.com/eigenteam/eigen-git-mirror/blob/master/cmake/FindPastix.cmake), [FindScotch](https://github.com/eigenteam/eigen-git-mirror/blob/master/cmake/FindScotch.cmake). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-bo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814:3104,test,tested,3104,https://su2code.github.io,https://github.com/su2code/SU2/pull/814,1,['test'],['tested']
Testability,NACA 0012 Test Case does not converge with provided config file,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/37:10,Test,Test,10,https://su2code.github.io,https://github.com/su2code/SU2/issues/37,1,['Test'],['Test']
Testability,"NSSolver Vorticity error fixed. RANS Solver starts without crashing, results yet to be benchmarked.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2210#issuecomment-1954493813:87,benchmark,benchmarked,87,https://su2code.github.io,https://github.com/su2code/SU2/pull/2210#issuecomment-1954493813,1,['benchmark'],['benchmarked']
Testability,"New code created by Blanca Fuentes Monjas, pushed by Evert Bunschoten for permission reasons. ## Proposed Changes; - Added non-polytropic Peng-Robinson (NPPR_GAS) equation of state (CP temperature dependant model): the specific heat ratio is not constant but a polynomial model (CP = n0 + n1*T + n2*T^2 +n3*T^3 + n4*T^4) can be specified for the specific heat via the input file option (CP_POLYCOEFFS) ; - The NPPR fluid model uses the polytropic Peng-Robinson fluid model as a base class. Therefore, the polytropic Peng-Robinson class now allows for inheritance. ; - New test case (TestCases/nicfd/edge_NPPR) to compare the results of the NPPR with a constant CP model (CP = n0) and the polytropic Peng-Robinson models. The results of both simulations for this test case are equivalent.; . ## Related Work; - The polytropic Peng-Robinson remains functionally unchanged. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1684:572,test,test,572,https://su2code.github.io,https://github.com/su2code/SU2/pull/1684,4,"['Test', 'test']","['TestCases', 'test']"
Testability,Next work item: **Hybrid parallel limiter and gradient calculation** This will not involve moving any CSolver files.; I may also do some testing on the element colorings on the structural solver.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/824#issuecomment-562651461:137,test,testing,137,https://su2code.github.io,https://github.com/su2code/SU2/pull/824#issuecomment-562651461,1,['test'],['testing']
Testability,"Nice work already! If you click on 'Details' at the right of the failed Regression and Unit Testing cases you will see why they fail. I think one of the first things to do is go through these error messages ('variable may be used uninitialized', etc) and fix them so the regression tests will run.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1810#issuecomment-1307771069:92,Test,Testing,92,https://su2code.github.io,https://github.com/su2code/SU2/pull/1810#issuecomment-1307771069,2,"['Test', 'test']","['Testing', 'tests']"
Testability,"Nice work, indeed! I just tested it on our cluster (BeeGFS filesystem) and I get similar numbers (writing down from 542s to 6s on 256 cores (16 nodes), unfortunately I couldn't do scaling tests so far because more than half of the cluster is down atm). Furthermore I tested it with the Intel compiler (v2017, OpenMPI) and it seems to work fine for me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/379#issuecomment-284096884:26,test,tested,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/379#issuecomment-284096884,3,['test'],"['tested', 'tests']"
Testability,"Nijso this type of change is too fragile I'm not going to approve it... There are initialization actions inside Run itself, it was not designed or tested to do single steps, and there's no chance this is going to work with all the features. Is this required to be able to initialize the solution? Convert this PR to adding the wrapper example and I'll thing about a better way of doing single steps.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1960#issuecomment-1464710802:147,test,tested,147,https://su2code.github.io,https://github.com/su2code/SU2/pull/1960#issuecomment-1464710802,1,['test'],['tested']
Testability,No need to dig anymore. And nevermind the failing hybrid regression (it looks like those tests were waiting to be merged to become flaky 😠 ),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1346#issuecomment-895019157:89,test,tests,89,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-895019157,1,['test'],['tests']
Testability,"No need to squash, the testcases repo is actually a bit messed up ATM because of that (oooops)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/773#issuecomment-787051080:23,test,testcases,23,https://su2code.github.io,https://github.com/su2code/SU2/pull/773#issuecomment-787051080,1,['test'],['testcases']
Testability,"No not really, it is a fairly safe thing to change but it only makes sense to do it if the CFL is also increased. I did not make it default at the time because many cases would change over 2 lines of code...; Maybe it can be done now as part of #790? I can help you with the testcase updates.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/711#issuecomment-540995151:275,test,testcase,275,https://su2code.github.io,https://github.com/su2code/SU2/issues/711#issuecomment-540995151,1,['test'],['testcase']
Testability,"No problem at all Francisco. As I said in the mail before, I'll update the; subroutine without using complex variables so that we don't have the issues; with AD and still have a working version of HB. On Fri, Nov 11, 2016 at 10:13 PM, Francisco Palacios <; notifications@github.com> wrote:. > By the way, you are doing a great job with the HB. And, sorry to comment; > out your subroutine. I'm using #ifdef CHECK_AD (line 3670, driver; > structure.cpp). For the time being, I have also commented out the; > regression test.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > https://github.com/su2code/SU2/pull/325#issuecomment-260104666, or mute; > the thread; > https://github.com/notifications/unsubscribe-auth/AHenIPv43Yc0PSQdW37_iQbnxcUFWwuQks5q9Vj_gaJpZM4KjG5K; > .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/325#issuecomment-260167823:518,test,test,518,https://su2code.github.io,https://github.com/su2code/SU2/pull/325#issuecomment-260167823,1,['test'],['test']
Testability,"No problem at all about the notifications. It was a nice reminder for the community, :). As you said, it looks like the tests are passing. Are there other things you would like to add to the implementation, or is the existing pull request ready for review?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-210676722:120,test,tests,120,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-210676722,1,['test'],['tests']
Testability,"No problem at all. I think the issue was that others had merged the changes into develop here from the web interface and those changes needed to be pulled down into your local copy before you could push the changes to .travis.yml up. I have just made the change, and I see the tests are now running! We'll get back with a review soon.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-435170261:277,test,tests,277,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-435170261,1,['test'],['tests']
Testability,"No problem.; I rebased my test branch on last develop version to run a first pass of test (see [travis page](https://travis-ci.org/gbaty/SU2/builds/135385229)). If there are no syntax error, I will push this rebased version here to allow you to continue tests as you suggest.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/260#issuecomment-223806983:26,test,test,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/260#issuecomment-223806983,3,['test'],"['test', 'tests']"
Testability,"No regression tests are affected, so we have no test that uses this model? Can you add a test for this as well?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2352#issuecomment-2347308935:14,test,tests,14,https://su2code.github.io,https://github.com/su2code/SU2/pull/2352#issuecomment-2347308935,3,['test'],"['test', 'tests']"
Testability,"No worries, glad to hear it works (I admit I did not test).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1075#issuecomment-771542614:53,test,test,53,https://su2code.github.io,https://github.com/su2code/SU2/issues/1075#issuecomment-771542614,1,['test'],['test']
Testability,"No, I think we're all set. I am going to merge this in. We have two issues that we are going to be clearing up very soon: the ONERA M6 adjoint case that is failing somewhat irregularly, and a reorganization of the test cases/config files to make the regression tests more effective (in particular for pull requests). Thanks for fixing the conflicts!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/186#issuecomment-127486074:214,test,test,214,https://su2code.github.io,https://github.com/su2code/SU2/pull/186#issuecomment-127486074,2,['test'],"['test', 'tests']"
Testability,"No, your assumption of calling `swig` manually is not the cause why I've opened this issue (though, admittedly, ""compile SU2 in `$SU2_HOME` first"" – for getting the required libraries done – might sound confusing). Trying to be utterly relevant, I only replicated that part of the compilation process (yes, would-be with `--enable-PY_WRAPPER`) where one can explicitly debug the issue (please, have a look at the environment variables substituted by the `configure` script after `#` or post your `objdump -p _pysu2.so`, and/or `nm -u _pysu2.so` as also from the `config.log`/`Makefile` your `CXX`, `pySU2_CC_FLAGS`, `PY_INCLUDE`, `SO_LINK_FLAGS`, `SWIG_SO_REAL`, `SWIG_WRAP_REAL`, and `pySU2_LD_FLAGS` to compare the correct arguments). The docs had been definitely read before opening the issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/551#issuecomment-404905415:570,log,log,570,https://su2code.github.io,https://github.com/su2code/SU2/issues/551#issuecomment-404905415,1,['log'],['log']
Testability,"Not sure if it's preferable, but I changed the environment to use the latest available Python 3, rather than 3.6, and the tests still pass with Python 3.7.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/622#issuecomment-443684684:122,test,tests,122,https://su2code.github.io,https://github.com/su2code/SU2/pull/622#issuecomment-443684684,1,['test'],['tests']
Testability,"Now that you have running examples it would be extremely important to add them as regressions tests, so that you can ensure that changes coming from develop do not break the code.; Please turn on the GitHub notifications because it seems you have missed quite a few of the comments on your pull requests...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1100897513:94,test,tests,94,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1100897513,1,['test'],['tests']
Testability,Now the tests are fine. Can I merge?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1127#issuecomment-743107420:8,test,tests,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-743107420,1,['test'],['tests']
Testability,Now you need to set the environment variables to pickup mutation in this script https://github.com/su2code/Docker-Builds/blob/master/test/runTests.sh via PR to the Docker-Builds repo.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1935#issuecomment-1444822483:133,test,test,133,https://su2code.github.io,https://github.com/su2code/SU2/pull/1935#issuecomment-1444822483,1,['test'],['test']
Testability,"No… I can’t. I’m sorry. Great to hear from you. Machine learning is a very valuable research work and I will add it as a feature branch. . Removing code from the main release is a complex task and, as in the past, I have taken tough decisions. Anyway, to maintain a clean code is critical for its growing, it is like trimming a large tree. Basic criteria to maintain forever an implementation on the develop->master branch are: - Clear benefit to the CFD community (more accurate, robust, etc.) - Existing community of users or active developers - Minimal code documentation (at least the options should be in the config file). - Easy to install and use. - The implementation style should be aligned with the SU2 style - Regressions tests. Best,; Francisco. > On Oct 28, 2015, at 11:35 PM, Brendan Tracey notifications@github.com wrote:; > ; > Could you leave in the machine learning section a bit longer?; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/su2code/SU2/pull/208#issuecomment-152095697.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/208#issuecomment-152384158:733,test,tests,733,https://su2code.github.io,https://github.com/su2code/SU2/pull/208#issuecomment-152384158,1,['test'],['tests']
Testability,"OK the failing regression test were due to:; 1. One simple wrong function call in Csolver; 2. Creating new output in existing groups (AERO_COEFF, FLOW_COEFF) which invalidates some regression tests; 3. pyhton code which does not test if some config variable is present or altering the python code such that it invalidates other regression tests; 4. and finally the AVG_TEMP thing above. Now all these alone were somewhat minor things. Feature_flamelet is now up-to-date with develop with all regression test working",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1223#issuecomment-898617272:26,test,test,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-898617272,5,['test'],"['test', 'tests']"
Testability,"OK this looks to have solved the merge issues, thanks again @bigfooted @jblueh. Still to do is include the testcase I showed in the developer meetings and update the regression tests due to the bug fix in the mixing plane.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2349#issuecomment-2329452107:107,test,testcase,107,https://su2code.github.io,https://github.com/su2code/SU2/pull/2349#issuecomment-2329452107,2,['test'],"['testcase', 'tests']"
Testability,"OK, I think I did some progress regarding this issue. After you read this, please [Compare](https://github.com/FoamScience/SU2/compare/master...FoamScience:feature_self_reg_classes) the master and the feature branches. ## Design Idea. - We need to register a child class to a map stored in a factory class; obviously, well before construction time.; - The static variables to the rescue: Associate a static variable to the class and call the registration function when initializing the static variable. done!. ## Work Status. > I'm using ""Inviscid Bump in the Channel"" case for testing. 1. I had to make some changes to the building options; - Upgrading to ""C++14"" allowing me to use make_unique; a personal preference.; - ""--whole-archive"" GCC compiler option is necessary in order to pull and force-initialize all symbols from statically-linked library. This is compiler-specific and may bloat the result binary with unnecessary symbols. But it's the quickest way.; 2. I tried to make changes so the interaction with the code is minimal so I went and took advantage of **CSolverFactory::CreateSubSolver()** to create a pointer to self-registered **CEulerSolver**.; 3. By the way, I thought the solver would be created only once. Little I knew!; 4. Anyway, The registration works as expected now. If you change ""EULER"" in [this line](https://github.com/FoamScience/SU2/blob/feature_self_reg_classes/SU2_CFD/src/solvers/CSolverFactory.cpp#L226) to ""SOMETHINGELSE"", you get:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <---------- Solver SOMETHINGELSE was not found.; <---------- Available Solvers: ; EULER ; ``` ; and the program exists.; 5. However, after returning the created solver out of **CSolverFactory::CreateSubSolver()** some strange things happen:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <----------- Making CEulerSolver ...; ...... Some other output; Initialize Jacobian structure (Euler). MG level: 0.; <------",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-669146957:578,test,testing,578,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-669146957,1,['test'],['testing']
Testability,"Of the two cases with larger residual changes:; - contadj_euler_naca0012 - No idea why they changed, neither primal nor adjoint compute limiters... the primal residuals are unchanged, and the case converges to the same values (residuals and solution) so I simply updated the residuals; - transonic_stator_restart - As shown above the case is fine, so I updated the restart file, however I do not know how to change the testcases branch anymore :) but I guess once the corresponding PR is merged this will start passing. I ran some other tests with the Venkatakrishnan-Wang limiter (which requires a global min/max) and is does not seem to be covered by the tests ATM (maybe I'll use that restart case to fix that), everything looks perfect, same results with different ranks/threads and so on, the results are tens of MB so I won't upload unless someone wants to double check.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/834#issuecomment-575310823:419,test,testcases,419,https://su2code.github.io,https://github.com/su2code/SU2/pull/834#issuecomment-575310823,3,['test'],"['testcases', 'tests']"
Testability,"Oh and let's please discuss the plan for modifying the code in one of the developer meetings.; It would be good to start just with the options that are in the code and clean them up to avoid duplication, which would probably give some clues for how to handle new options without duplicating anything.; To do this safely we should have unit tests for each of the source terms (because I doubt we have full coverage in the regressions for all turbulence options).; etc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1364#issuecomment-907393264:340,test,tests,340,https://su2code.github.io,https://github.com/su2code/SU2/issues/1364#issuecomment-907393264,1,['test'],['tests']
Testability,"Oh, and please consider adding a contribution to the V&V page (to also add a regression test for the new model).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1810#issuecomment-1315752478:88,test,test,88,https://su2code.github.io,https://github.com/su2code/SU2/pull/1810#issuecomment-1315752478,1,['test'],['test']
Testability,Ok I will now try to run two main test cases I have. But there were no conflicting files after the last commit so I do not think there should be any issue.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124#issuecomment-743391777:34,test,test,34,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-743391777,1,['test'],['test']
Testability,"Ok one issue out of the way.; After reading your first post again, it is a bit suspicious that the iteration time is ""exactly"" the same, can you post the preprocessing part of the output for:; 16 cores on one node; 16 total cores on 2 nodes (8+8); 8 cores on one node.; If b)==c) you are running identical simulations on each node (i.e. not distributing over nodes).; If a)==b) can you test the scalability with fewer cores (2 on one node Vs 1+1).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593073686:386,test,test,386,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593073686,1,['test'],['test']
Testability,"Ok, I think I managed to add it to the ComputeWallDistance function. I tested it on a 2D cylinder and it works just fine. However, when I use it on a profile with a sharp trailing edge it gives me strange results on the region behind the TE. Cylinder:; ![Normal_x](https://user-images.githubusercontent.com/43813346/221260200-f2699578-8817-4121-84ac-48aa836ab78c.png); ![Normal_y](https://user-images.githubusercontent.com/43813346/221260446-9080adc6-d14f-4e7f-887f-5a25f7077598.png). Profile:; ![Normal_x](https://user-images.githubusercontent.com/43813346/221260869-95104194-2afc-431b-9c67-160ddbabc8c1.png); ![Normal_y](https://user-images.githubusercontent.com/43813346/221260885-9299aeed-5c05-4d43-8540-70913bbaf489.png). I guess it is intrinsic within the computation of the wall distances.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1901#issuecomment-1444212265:71,test,tested,71,https://su2code.github.io,https://github.com/su2code/SU2/pull/1901#issuecomment-1444212265,1,['test'],['tested']
Testability,"Ok, I think I understood and fixed what happened (and did 2 more stupid mistakes). In #1226 2 things happened: ; 1. I moved the reg-test to tutorials and therefore I had to add files to /su2code/Tutorials/12 of course. There I changed some values (Linear Solver Iter, Outer_Iter, Time_Iter, to name the most important) because the case until then did not get unsteady. Because the original case worked in #1226 before my commit and I only changed cfg-options over at Tutorials and touched no more than tutorials.py -> there was no unwanted introduced code changed that is overlooked!; 2. in #1229 three cfg option names for heat were changed ... so I changed them over at /su2code/Tutorials as well cause I thought that the test have to pass in #1229 and /su2code/Tutorials contains the cfg's as well (other than for the usual Testcases). I also thought that #1229 would be merged in quick succession so that premature change wouldn't hurt much ... well that merge didnt happen until today. Point 2. above bit me when I cherry picked in #1290 which introduced the failing test visible here. Because with that I changed from the Testcases-test to the Tutorial-test which already had the new cfg-names in it ... which are not in the code yet! Changing that back gave the correct values on my machine and I get the correct values with current develop wrt to the old test (which can be seen in the diff of #1226). Like so I am confident that no code changed the regression test values but rather incautious Tobi. The 2 mistakes I made were:; 1. I pushed the changes (different cfg-option-names) directly to develop without a PR. That is prob not too bad tbh but I would have preferred a PR; 2. I re-ran the tests for the last commit of this PR to check but I guess it is better to leave that alone and just do that somewhere else in a new PR just to test that ... not sure if that works out",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1295#issuecomment-859644788:132,test,test,132,https://su2code.github.io,https://github.com/su2code/SU2/pull/1295#issuecomment-859644788,10,"['Test', 'test']","['Testcases', 'Testcases-test', 'test', 'tests']"
Testability,"Ok, I think the mesh file issue may have been due to the file system. The mesh file issue happened when I ran the simulation across three nodes on the cluster I was using. I tested on a single high memory node instead and the issue went away. It looks like problem solved! . The drag objective also seems to be working. One thing I noticed is that GNORM and OBJFUN values are not being listed in the output for each design as they were in the single point optimization. I'm not sure what that's about, but the drag values are decreasing!. Thanks again for the responses!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/912#issuecomment-609554540:174,test,tested,174,https://su2code.github.io,https://github.com/su2code/SU2/issues/912#issuecomment-609554540,1,['test'],['tested']
Testability,"Ok, I went back to try varying the `.cfg` settings on the simple v7.0.3 repo `TestCases/euler/naca0012` case and managed to get `mesh_adaptation_amg.py` to run successfully. It seems that one bit of advice [from here](https://www.cfd-online.com/Forums/su2/214613-grid-adaptation-options.html) is no longer true, i.e. one needs to set:; ```; % Write binary restart files (YES, NO); WRT_BINARY_RESTART= YES; %; % Read binary restart files (YES, NO); READ_BINARY_RESTART= YES; ```; in order for the amg mesh adaptation to function. However, for some reason, I can't get it working for my actual mesh of interest. When using the same settings, I get a different ParMETIS error (from the `adap/ini/log.out`):; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 4929018 grid points before partitioning.; 7406196 volume elements before partitioning.; 3 surface markers.; 18040 boundary elements in index 0 (Marker = BODY).; 50968 boundary elements in index 1 (Marker = FARFIELD).; 284054 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; [ 1] ***ASSERTION failed on line 207 of file ../externals/parmetis/libparmetis/comm.c:sendind[i] >= firstvtx && sendind[i] < lastvtx; [ 1] 361316 123226 246452; [1609857970.901920] [super:1060888:0] sock.c:344 UCX ERROR recv(fd=62) failed: Connection reset by peer; ```. The only difference that I can think of is that my flow is fully supersonic and my mesh is an unstructured core with a structured collar - might this be causing the issue? Kind regards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-754686447:78,Test,TestCases,78,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754686447,3,"['ASSERT', 'Test', 'log']","['ASSERTION', 'TestCases', 'log']"
Testability,"Ok, I will prepare a test case. I will take the Mach=0.1 case from the tutorial and change it slightly. Now the coupling between fluid and structure occurs after 100 steps, I will just couple them immediately. ; The only issue with #902 I see at the moment is with the file fsi_computation.py. The others are in separate folders so they should not create conflicts...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124#issuecomment-746408443:21,test,test,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-746408443,1,['test'],['test']
Testability,"Ok, now `CPoint` stores information on the closest wall element location in vectors `ClosestWall_{Rank,Zone,Marker,Elem}`. `CPoint::SetWallRoughness` performs the lookup, inserting the location into the map (rank,zone,marker)->(roughness) that is provided to `CPoint::SetWallRoughness` as an argument of a new templated type `NdFlattener`. I wrote the new file `Common/include/ndflattener.hpp` some time ago and I think it is a nice generalization of the. > custom type with interface (rank, [zone,] marker). you're referring to. In short, it allows to. - serialize pointer-to-pointer-to... arrays into 1D arrays, as many as there are indices. The array corresponding to the last index stores the data and the others store indices.; - And to `MPI_Allgatherv` them, adding a new index for the rank. Using it detaches a bit from the original goal of this PR (which was to fix some illegal reads reported by valgrind, because the wrong array of roughnesses was accessed) but I think it's a useful structure. Probably I should also add some tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1286#issuecomment-841123844:1037,test,tests,1037,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-841123844,1,['test'],['tests']
Testability,"Ok, now you have tracked it.; I was making my tests with master branch (I used the develop with meson, but I thought to be conservatiev here). That way my most recent activity in the git log was from Tim by the end of February.; Switching to develop, then the git log message match your comment above.; Further, preconfig, make and make install work without any patches.; Cool; another note: -DNDEBUG note recognized by preconfigure (nor --DNDEBUG).; I suggest to update the master branch, since it is supposed to be a stable distribution",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910#issuecomment-601077460:46,test,tests,46,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-601077460,3,"['log', 'test']","['log', 'tests']"
Testability,"Ok, the issue is that the inlet values in SST tend to decay very quickly (as you can find in the literature https://turbmodels.larc.nasa.gov/sst.html) so far as I can tell we are adding the right amount of TKE to the flow and turbulence solver inlets.; However, in the turbulence solver this is destroyed immediately (note that destruction is proportional to TKE) and so TKE at the inlet nodes is not TKE_Inf.; Effectively this means we put too much energy into the flow, which is not matched by the turbulence solver due to the immediate decay, and therefore static temperature appears high, and Mach number low.; E.g. we put 10 + 0.1 into the flow solver inlet, and 0.1 into the turbulence solver, but this 0.1 decays to 0.01 right away. Then, when we compute the temperature for this inlet node we have 10 + 0.1 total energy (which does not decay in the flow solver since it does not have destruction terms) from which we subtract the decayed 0.01 from the turbulence solver and end up with 10.09 instead of 10. I tested this by turning on the SST sustaining terms, which prevent decay below freestream values, and I got the right Mach number. So what we could do is use the TKE from the turbulence solver in the flow solver inlets, instead of the freestream TKE which the turbulence solver is not guaranteed to sustain.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-1364158508:1017,test,tested,1017,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-1364158508,1,['test'],['tested']
Testability,"Ok, the remaining FAILED test I had after the change mentioned above was fea_fsi/StatBeam_3d. I broke down the issue to my changes to Gauss_Elimination in matrix_structure. The major change in terms of a difference is exchanging ; weight = block[..]/block[..]; against; reciproque=1.0f/block[..] ; weight = block[..] * reciproque; which is of course faster as it removes some costly divisions.; I changed algorithms several time and introduced finally quad-precision for my changes (which are now not faster any more, but for sure more accurate than the original one).; The deviations through all my tests are; Res[Displx] +- 0.000049, Res[Disply] +- 0.000133, Res[Displz] 0.000010 and CFEM +- 0.; The threshold for passing is 0.000010 and exceeded for x and y direction.; I am pretty convinced that the threshold should be raised in that test as rounding errors introduce a large difference than the threshold.; Regards, Josef",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/347#issuecomment-276305741:25,test,test,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/347#issuecomment-276305741,3,['test'],"['test', 'tests']"
Testability,"Ok, the tests are passing for this one now after the fix from the other PR. Anything else you would like to add? Otherwise, let's review and merge this next.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/519#issuecomment-378134342:8,test,tests,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/519#issuecomment-378134342,1,['test'],['tests']
Testability,"Ok. I don't think [these](https://github.com/su2code/SU2/pull/774/commits/e632133eded5edab7ff04f0979334c25c0f44ff8) changes are over-complicated. But I'm fine with changing the index saving procedure everywhere. There'd be just some work to do (we would have to adapt everything for the FEA elasticity solvers and all the variables they need as well)... so it's also a question of time, testing and so on.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542206395:387,test,testing,387,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542206395,1,['test'],['testing']
Testability,"Ok. I will do it as soon as possible. . With kind regards,. Jairo. > On Jan 30, 2019, at 14:13, Thomas D. Economon <notifications@github.com> wrote:; > ; > @economon approved this pull request.; > ; > LGMT. Thanks @jaspe55 <https://github.com/jaspe55>; > Just one request: I have adjusted the number of iterations for the regression test and updated the residual values in the python script. I also had to move around some files. Can you please run the case (to convergence) and verify that the results are what you expect? Note that the config file and target Cp are in the code repository and the mesh and solution file are in the testcases repository. If everything looks ok, then this is ready to be merged.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/600#pullrequestreview-198200089>, or mute the thread <https://github.com/notifications/unsubscribe-auth/Ac180hqzVnSUPCnSBkQrTPfIv0kIltygks5vIdKrgaJpZM4X34F2>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-459029239:333,test,test,333,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-459029239,2,['test'],"['test', 'testcases']"
Testability,"Ok. Unless there's significant differences in any of the other regression test cases, then this PR looks good to me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/905#issuecomment-598288334:74,test,test,74,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-598288334,1,['test'],['test']
Testability,Okay good news is the recompelling is good. looking forward to do some tests.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2326#issuecomment-2236107976:71,test,tests,71,https://su2code.github.io,https://github.com/su2code/SU2/pull/2326#issuecomment-2236107976,1,['test'],['tests']
Testability,Okay the regression tests are all finally passing! ; Can you advise on what to do about the CodeQL alerts? Any other comments or suggestions in general?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1378164143:20,test,tests,20,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1378164143,1,['test'],['tests']
Testability,"Okay, all tests should be passing (except some random new codefactor issues). Main issue with the GY models hanging is disambiguating which matrix of collision integral (omega) values to use, Scalabrin's notation is a bit unclear. Are there other places we need to modify for including electrons? Anything in viscous numerics?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1887#issuecomment-1384746569:10,test,tests,10,https://su2code.github.io,https://github.com/su2code/SU2/pull/1887#issuecomment-1384746569,1,['test'],['tests']
Testability,"Okok, I may also try to update gcc. The only issue is that it is on a server so I should do it locally and it may take a bit more time. I will test the merge and then, with more time, update gcc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124#issuecomment-743139863:143,test,test,143,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-743139863,1,['test'],['test']
Testability,"On both questions the answer is yes. Option 1 can be implemented right now but will require the creation of temporary objects. Option 2 can directly forward the data to the blas routines. The tool I am developing is no tool for a specific linear algebra package. The idea is, that the tool parses the header files of the library. The user has then to define which objects are active lvalues and the derivatives for each operation in the library. For small an clear interfaces this is no problem and works already quite good. For large libraries like Eigen I adopted a whitelisting approach. That is, every function needs to be manually whitelisted to trigger the expression generation of the tool. In a prototype way I have also implemented an approach where only the active lvalues need to be defined and the tool looks then for all required functions and other objects that depend on these active objects. Long story short, the tool is designed to handle ""any"" library. It is even possible to mix several libraries together. My current status on this project is, that I am now through with the parsing of the header files and the generation of the expressions. This works quite well for Eigen which is a hardcore testcase, since every possible programming tweak in C++ is used here. The next step is to add the AD part to the expression generation process. I hope that in one or two month this will be finished and I can provide a first beta release.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-463561018:1215,test,testcase,1215,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-463561018,1,['test'],['testcase']
Testability,"On it, I've disabled the Jacobian contributions in my branch. Initial tests look primising, but I'll need a longer-running test to validate it on my case. Will update once the case has finished.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1872#issuecomment-1644093214:70,test,tests,70,https://su2code.github.io,https://github.com/su2code/SU2/issues/1872#issuecomment-1644093214,2,['test'],"['test', 'tests']"
Testability,"On the LU part we have an interface with PaStiX.; In SU2 Eigen is not used to solve distributed(mpi)-sparse systems, just small dense problems. Also to my knowledge Eigen does not support MPI at least a couple years ago its interface with PaStiX was threads only.; I opted to develop the interface with PaStiX rather than PETSc because it seemed the support for the block-sparse format we use was limited, i.e. compatible with only a few linear solvers.; There are instructions on how to build SU2 with PaStiX in the TestCases folder. I had a quick look at your paper, in SU2 the linearization of F (the A matrix you need, I believe) is not exact, for an exact linearization you would need to use forward AD but then any system would need to be solved iteratively using matrix-free products.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1141#issuecomment-754109686:517,Test,TestCases,517,https://su2code.github.io,https://github.com/su2code/SU2/issues/1141#issuecomment-754109686,1,['Test'],['TestCases']
Testability,Onera M6 RANS Test case diverges when NUM_METHOD_GRAD=WEIGHTED_LEAST_SQUARES,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/143:14,Test,Test,14,https://su2code.github.io,https://github.com/su2code/SU2/issues/143,1,['Test'],['Test']
Testability,"Only one regtest fails - it's a slight difference from the reference value on one test, if no one objects I'll update the TestCases repo with updated reference values. (Holding off on that for now so that I don't break others' regtests in the mean time)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/336#issuecomment-263457730:82,test,test,82,https://su2code.github.io,https://github.com/su2code/SU2/pull/336#issuecomment-263457730,2,"['Test', 'test']","['TestCases', 'test']"
Testability,"Only the testcases `channel_2D`, `channel_3D` fail. Both use sliding mesh interfaces, but there are also other sliding mesh testcases that do not fail. The residuals are still very close and also the flow fields look similar. I thus adapted the stored residuals in 9d8f194. Let me know if you would like to investigate the changed residuals further.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1346#issuecomment-895007670:9,test,testcases,9,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-895007670,2,['test'],['testcases']
Testability,"Our proposed changes implicitly include 2 modifications to current code: ; The first is the modification of the lower limit such that it should be relative to a reference value. The rational for this is that a single given hard coded number cannot be correct for possible all flow regimes. Moreover, even running the same case in dimensional and non dimensional form, will lead to different behaviour of the lower limit. The proposed solution therefore is defining a limit relative to reference values, namely:; k_low_limit = C_k * K_infinity; w_low_limit = C_w * W_infinity. This change will inevitably cause changes to current behaviour (as can be seen in test case results), but we believe it is more correct. . The second, is giving the user control over C_k and C_w and the choice of the default value. As mentioned above, the behaviour of the proposed default value will inevitably be different than the existing one. Even if we choose default values that will lead to similar values to those existing for a certain case this would not be true for other cases. Therefore no default value can be given to reconstruct the current solver behaviour. ; The values suggested as default are not the most correct per se, but rather robust suggestions based on experience and are open to discussion. Optimal default values of different cases, say external and internal flows are expected to be different, this is why we felt it important to allow user control of the lower limit. . We emphasise that the solution used in SU2 of applying a lower limit to turbulence variables in order keep the solution positive is somewhat artificial, and future features we are working on should minimize the need for such a treatment, however, as long as this is the solution implemented, we believe that the proposed change is more correct, leading to more robust behaviour.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2323#issuecomment-2230214740:658,test,test,658,https://su2code.github.io,https://github.com/su2code/SU2/pull/2323#issuecomment-2230214740,1,['test'],['test']
Testability,"PG). 3. 3D incompressible pin setup, SST turb model. You see Pressure-contour lines but more important are the velocity vectors. In the current code they have a normal component and therefore a (non-irrelevant) flux over the symmetry boundary:; ![closeup_vectors](https://user-images.githubusercontent.com/31306376/53201975-9c91c700-3625-11e9-95b7-8337cc159a23.jpg). Additional to that I tested in rotated domains such that the symmetry plane does not coincide with one of the axis. I tested the Navier-Stokes ONERA-M6 with SA turb-model and although this PR achieves a considerable lower velocity in symmetry-normal direction than current develop, it is still quite large. I suspect it is due to general ""bad"" convergence (2-3 orders of magnitude) of that case. ; So, I encourage everyone that has a well converging compressibe 3D case with symmetry plane to test that or to send it to me. Every regression test with symmetry plane in it will fail, so I didn't change the values yet. From what I have seen, only these are failing. I will correct these (fml) and commit if everyone is alright with the implementation otherwise. . Let me know if you have any comments/suggestions etc., or if you tested with your cases and can confirm (or not) that this PR is correct (that would be awesome). Cheers, Tobi. ## Related Work; None known to me. ## PR Checklist; I will check the warnings based on travis output and report. No new testcase is necessary in my opinion. Edit 25.02.: I checked the warnings for a serial and parallel build using the log-files of travis, comparing mine with the latest merged develop. No new compiler warnings are generated. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/657:3559,test,tested,3559,https://su2code.github.io,https://github.com/su2code/SU2/pull/657,4,"['log', 'test']","['log-files', 'test', 'testcase', 'tested']"
Testability,"Parallel preaccumulations must not share any variables. In particular, they must not have any common inputs and outputs. I suspect (judging from the code) that the preaccumulations treated in 781092a3533caf36589426e99293c2b20d332726 violate this pattern, and that this is the reason why excluding them makes several hybrid parallel AD tests pass. Other preaccumulations might be affected as well. The correctness of preaccumulations inside numerics objects, for example, depends on the values of pointers like `V_i`, `V_j`. Other preaccumulations might look wrong but are ok because common variables are prevented by color loops.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1294#issuecomment-871002042:335,test,tests,335,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-871002042,1,['test'],['tests']
Testability,"Pedro, ; I cherry-picked your your commit [c2018c8](https://github.com/su2code/SU2/pull/1595/commits/c2018c836791944383c13d32dcfec903d5657072) and tested it with my configuration. Looks good so far, I haven't see any issues / problems on my side. Thank you very much!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1595#issuecomment-1094677121:147,test,tested,147,https://su2code.github.io,https://github.com/su2code/SU2/pull/1595#issuecomment-1094677121,1,['test'],['tested']
Testability,Please check and update the regression tests before merging.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295#issuecomment-2156417920:39,test,tests,39,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295#issuecomment-2156417920,1,['test'],['tests']
Testability,"Please give this a more descriptive title, they show up in the change log of each version",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1643#issuecomment-1133774189:70,log,log,70,https://su2code.github.io,https://github.com/su2code/SU2/pull/1643#issuecomment-1133774189,1,['log'],['log']
Testability,"Please re-check with latest commit (very small correction for a copy-and-paste-error from yesterday, not sure whether it has had some impact). I've run your test case again and I had a closer look at the interface which in fact looks alright (it's maybe just that thermal conductivities are so different that zones appear to be separated but aren't.. ?). ![temp_profile](https://user-images.githubusercontent.com/22639394/70803014-5889d180-1db3-11ea-8e6b-ef7f95a9466a.png). By the way: You can easily increase the CFL number to 1000 in both zones. You get a fully converged solution after a few hundred iterations.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/838#issuecomment-565438939:157,test,test,157,https://su2code.github.io,https://github.com/su2code/SU2/issues/838#issuecomment-565438939,1,['test'],['test']
Testability,"Please try again and let me know, this did not happen locally or in the test machines",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1873#issuecomment-1372524438:72,test,test,72,https://su2code.github.io,https://github.com/su2code/SU2/issues/1873#issuecomment-1372524438,1,['test'],['test']
Testability,Potential non-physical solution on Caradonna-Tung test case,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1669:50,test,test,50,https://su2code.github.io,https://github.com/su2code/SU2/issues/1669,1,['test'],['test']
Testability,"Preprocess in iteration_structure.hpp. ## Proposed Changes; * Fix a minor comment spelling error in CSinglezoneDriver.cpp. The preprocess method's comment section involving param in is missing, so I added in. ; . ## Related Work; *N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/987:786,test,test,786,https://su2code.github.io,https://github.com/su2code/SU2/pull/987,1,['test'],['test']
Testability,"Problem description:. Recently I am trying to set up a very simple test case for the 2D mixing layer in a square block with structured mesh.; On the top half, air flows to right and bottom half is opposite, initially there is only velocity difference between upper and lower flow. (i expect Ux_top = -Ux_bot = 10 m/s, Uy_top = Uy_bot = 0) ; But I could not figure out how to set up my Boundary Conditions and Unsteady option in .cfg file properly.; Could anyone help me or give some suggestion on set up for Unsteady setting.; (BTW I also have trouble to control the unsteady output, there are a lot of output file for surface flow which in fact is not necessary for my case, anyone know how to set the output option so that it is not outputted at all?). In fact I build up two rectangle blocks with one inner boundary surface, as show below; ------------------top------------------; | | ; inlet_top outlet_top; | | ; ------------------inner----------------; | | ; outlet_bot inlet_bot; | | ; ------------------bot------------------. % -------------------- BOUNDARY CONDITION DEFINITION --------------------------%; %; % Euler wall boundary marker(s) (NONE = no marker); MARKER_EULER= ( top, bot ); %; % Internal boundary marker(s) e.g. no boundary condition (NONE = no marker); MARKER_INTERNAL= ( inner ); %; % Inlet boundary type (TOTAL_CONDITIONS, MASS_FLOW); INLET_TYPE= TOTAL_CONDITIONS; %; MARKER_INLET= ( inlet_top, 273.2, 101325, 1.0, 0.0, 0.0, inlet_bot, 273.2, 101325, -1.0, 0.0, 0.0 ); %; % Outlet boundary marker(s) (NONE = no marker); % Format: ( outlet marker, back pressure (static), ... ); MARKER_OUTLET= ( outlet_top, 101325, outlet_bot, 101325 )",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/534:67,test,test,67,https://su2code.github.io,https://github.com/su2code/SU2/issues/534,1,['test'],['test']
Testability,"Proposed Changes. This pull request adds the test case that we used for the Fuel paper. Related Work. Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any. PR Checklist. Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution. I am submitting my contribution to the develop branch.; My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; I used the pre-commit hook to prevent dirty commits and used pre-commit run --all to format old commits.; I have added a test case that demonstrates my contribution, if necessary.; I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2238:45,test,test,45,https://su2code.github.io,https://github.com/su2code/SU2/pull/2238,2,['test'],['test']
Testability,"Pruned unnecessary files from Boost archive, updated .gitignore files to ignore .szplt files, and eliminated an unnecessary include file check for TecIO. ## Proposed Changes; Pruned unnecessary files from the Boost archive included with TecIO; Updated .gitgnores in example folders to ignore .szplt files; Eliminated an unnecessary check for an X11 header file that TecIO no longer relies on.; . ## Related Work; Fine-tuning to Scott Imlay's TecIO update. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/636:1006,test,test,1006,https://su2code.github.io,https://github.com/su2code/SU2/pull/636,1,['test'],['test']
Testability,"Quick scaling tests show major improvements with the new output for reading and writing of restart files. See attached. . Tim, have you been testing with Intel compilers? I ran into an issue with Intel compilers on one cluster with the restarts, and I want to see if it was an isolated incident. If all looks good, we'll merge in soon. . ![output_performance](https://cloud.githubusercontent.com/assets/4896083/23535771/5d47d730-ff75-11e6-9be0-8e9542093bc1.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/379#issuecomment-283846632:14,test,tests,14,https://su2code.github.io,https://github.com/su2code/SU2/pull/379#issuecomment-283846632,2,['test'],"['testing', 'tests']"
Testability,"Quite a lot I think, boundary conditions, numerics, fixing the tests I broke.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1844#issuecomment-1362870397:63,test,tests,63,https://su2code.github.io,https://github.com/su2code/SU2/pull/1844#issuecomment-1362870397,1,['test'],['tests']
Testability,RESTART_FILENAME and SOLUTION_FILENAME are the same and this test is run both in serial and parallel_regression.py; That means that whichever test runs first overwrites the restart file used by the other.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2276#issuecomment-2156726074:61,test,test,61,https://su2code.github.io,https://github.com/su2code/SU2/issues/2276#issuecomment-2156726074,2,['test'],['test']
Testability,Re-enable Discrete Adjoint FSI Test Cases,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803:31,Test,Test,31,https://su2code.github.io,https://github.com/su2code/SU2/pull/803,1,['Test'],['Test']
Testability,Regression Testing using Github Actions,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/806:11,Test,Testing,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/806,1,['Test'],['Testing']
Testability,Regression test needed for inlet profile writing,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2002:11,test,test,11,https://su2code.github.io,https://github.com/su2code/SU2/issues/2002,1,['test'],['test']
Testability,Relax tolerances of python wrapper hybrid AD tests,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1984:45,test,tests,45,https://su2code.github.io,https://github.com/su2code/SU2/pull/1984,1,['test'],['tests']
Testability,Removed invalid options from TestCase cfg file,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/392:29,Test,TestCase,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/392,1,['Test'],['TestCase']
Testability,Removing python 2.7 from test matrix,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/709:25,test,test,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/709,1,['test'],['test']
Testability,"Reopening after chatting with @oleburghardt . I merged develop (which I hopefully made no mistakes in as there were quite some conflicts).; Left todo is imo (beyond possible further comments, possible failing tests etc): ; - adding a testcase that at best serves as a verification/sanity check (the expected results of course have to be documented for a possible future redo). I'll see what i'll find; - take a second look at the cfg option consolidation for good measure. I would prefer if this PR would not tackle the CFVMScalarSolver thing, but a first WIP-PR into that direction will come to a github repository near you soon ;)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1226#issuecomment-882848944:209,test,tests,209,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226#issuecomment-882848944,2,['test'],"['testcase', 'tests']"
Testability,"Request you to please confirm that the ""2 failing checks"" (regression tests) are unrelated to this pull request. The failing checks were for; ""TestCases/fea_fsi/Airfoil_RBF"" and ""TestCases/py_wrapper/disc_adj_fea/flow_load_sens"". Hope we do not have to do anything here in this branch. Thanks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2142#issuecomment-1803265185:70,test,tests,70,https://su2code.github.io,https://github.com/su2code/SU2/pull/2142#issuecomment-1803265185,3,"['Test', 'test']","['TestCases', 'tests']"
Testability,"Residuals changed in testcase transonic_rotor_2D, I do not know why since it uses FGMRES and in that method I only changed the allocation.; I ran the case to convergence and [compared](https://github.com/su2code/SU2/files/2871054/transonic_stator_2D.zip) the output, everything matches so I updated the residuals.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/650#issuecomment-464221279:21,test,testcase,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/650#issuecomment-464221279,1,['test'],['testcase']
Testability,"Restructuring of the test cases to separate the config files (now in SU2 repo) from the mesh/solution data (remain in the TestCases repo). The idea is that developers will update their config files along with their code changes in the SU2 repo so that pull requests can be automatically checked with Travis CI. The meshes and solution data, which change much less frequently and are larger files, remain in the TestCases repo. The two repositories contain the same directory structure for the test cases, with complementary (not overlapping) file sets. The responsibility is on the developer to add files to both repositories (in matching directory locations) when adding new test cases. This makes it very easy for one to recombine the full set of files or for Travis CI to do this automatically. To run the test cases locally, one might do the following (assuming paths are set correctly so SU2_CFD is available):. ```; $ git clone https://github.com/su2code/SU2.git; $ git clone https://github.com/su2code/TestCases.git; $ cd SU2/; $ ./configure; $ make install; $ cp -R ../TestCases/* ./TestCases/; $ cd ./TestCases/; $ python serial_regression.py; ```. These commits also include the proper .gitignore additions to make sure that the SU2 repo isn't contaminated with test case outputs, along with the necessary changes to the Travis CI .yml file.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/190:21,test,test,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/190,11,"['Test', 'test']","['TestCases', 'test']"
Testability,Revert test cases branch,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2314:7,test,test,7,https://su2code.github.io,https://github.com/su2code/SU2/pull/2314,1,['test'],['test']
Testability,"Right now, the solution file (where SU2 writes the solution upon a successful conclusion) and the restart load file (where SU2 loads the solution) are the same file. It would be nice to at least have the option to make these two different files. Take, for example, my case or Alejandro's case where we load from a converged solution to run our turbulence models. If I run for 100 iterations as a test, for example, my restart file (the SU2 solution file) is overwritten. So instead, I have to make a copy of the restart file, and upon completion rename the output solution file to something else, and rename my copied solution file (really the restart file) back to the SU2 solution file name.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/17:396,test,test,396,https://su2code.github.io,https://github.com/su2code/SU2/issues/17,1,['test'],['test']
Testability,"Ruben,. We were just waiting for the new python regression tests before pulling this into develop. Everything looks good now, so I'll go ahead and merge. T",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/248#issuecomment-204588716:59,test,tests,59,https://su2code.github.io,https://github.com/su2code/SU2/pull/248#issuecomment-204588716,1,['test'],['tests']
Testability,"Running serial_regression.py I get the following error:; ==================== Start Test: contadj_euler_py ====================; /home/andreak/tmp/AUR/su2/src/SU2/TestCases/cont_adj_euler/naca0012; Traceback (most recent call last):; File ""/opt/su2/bin/continuous_adjoint.py"", line 36, in <module>; sys.path.append(os.environ['SU2_RUN']); File ""/usr/lib/python3.6/os.py"", line 669, in __getitem__; raise KeyError(key) from None; KeyError: 'SU2_RUN'; Traceback (most recent call last):; File ""serial_regression.py"", line 983, in <module>; main(); File ""serial_regression.py"", line 861, in main; pass_list.append(contadj_euler_py.run_filediff()); File ""/home/andreak/tmp/AUR/su2/src/SU2/TestCases/TestCase.py"", line 241, in run_filediff; todate = time.ctime(os.stat(tofile).st_mtime); OSError: [Errno 2] No such file or directory: 'of_grad_cd.dat'",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/388:84,Test,Test,84,https://su2code.github.io,https://github.com/su2code/SU2/issues/388,4,['Test'],"['Test', 'TestCase', 'TestCases']"
Testability,"SS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D, FFD_THICKNESS_2D; DV_MARKER= ( airfoil ); DV_PARAM= ( AIRFOIL, 1.0) ; ( AIRFOIL, 2.0) ; ( AIRFOIL, 3.0) ; ( AIRFOIL, 4.0) ; ( AIRFOIL, 5.0) ; ( AIRFOIL, 6.0) ; ( AIRFOIL, 7.0) ; ( AIRFOIL, 8.0) ; ( AIRFOIL, 9.0) ; ( AIRFOIL, 10.0) ; ( AIRFOIL, 11.0) ; ( AIRFOIL, 12.0) ; ( AIRFOIL, 13.0) ; ( AIRFOIL, 14.0) ; ( AIRFOIL, 15.0) ; ( AIRFOIL, 16.0) ; ( AIRFOIL, 17.0) ; ( AIRFOIL, 18.0) ; ( AIRFOIL, 1.0) ; ( AIRFOIL, 2.0) ; ( AIRFOIL, 3.0) ; ( AIRFOIL, 4.0) ; ( AIRFOIL, 5.0) ; ( AIRFOIL, 6.0) ; ( AIRFOIL, 7.0) ; ( AIRFOIL, 8.0) ; ( AIRFOIL, 9.0) ; ( AIRFOIL, 10.0) ; ( AIRFOIL, 11.0) ; ( AIRFOIL, 12.0) ; ( AIRFOIL, 13.0) ; ( AIRFOIL, 14.0) ; ( AIRFOIL, 15.0) ; ( AIRFOIL, 16.0) ; ( AIRFOIL, 17.0) ; ( AIRFOIL, 18.0) ; DV_VALUE= 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1; ```. From the Log -- . ```; FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 1 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 2 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 3 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 4 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 5 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 6 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 7 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 8 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 9 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 10 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 11 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 12 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 13 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 14 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 15 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 16 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 17 ); FFD 2D (camber) <-> airfoil <-> 0 <-> ( AIRFOIL, 18 ); FFD ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/153:1527,Log,Log,1527,https://su2code.github.io,https://github.com/su2code/SU2/issues/153,1,['Log'],['Log']
Testability,"SU2 modules when compiling with Codi; * SU2_ENABLE_METIS: ON|OFF; * SU2_METIS_CPPFLAGS: flags to pass when compiling Metis; * SU2_ENABLE_MKL: ON|OFF; * SU2_ENABLE_MPI: ON|OFF; * SU2_ENABLE_MUTATIONPP: ON|OFF; * SU2_ENABLE_PARMETIS: ON|OFF, only available when SU2_ENABLE_MPI is ON; * SU2_PARMETIS_CPPFLAGS: flags to pass when compiling Parmetis; * SU2_ENABLE_TECIO: ON|OFF; * SU2_TECIO_CPPFLAGS: flags to pass when compiling Tecio and TecioMPI; * SU2_TECIOMPI_CPPFLAGS: flags to pass when compiling TecioMPI, requires SU2_ENABLE_MPI. There is an additional variable that is recognized by CMake scripts - DEBUG, turning it ON enables additional STATUS messages, mainly to check that correct include directories, compile definitions and linked libraries were set up correctly. The remaining options like install location and compilers are handled by CMake. Tested this on Ubuntu with CMake 3.15.5 and everything except pySU2ad wrapper compiles. Haven't tested on earlier CMake versions so there might be bugs with them but they should be easy to resolve if any. Related Work. Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any. PR Checklist. Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution. * I am submitting my contribution to the develop branch.; * My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; * My contribution is commented and consistent with SU2 style.; * I have added a test case that demonstrates my contribution, if necessary. ________________________________; You can view, comment on, or merge this pull request online at:. https://github.com/su2code/SU2/pull/814. Commit Summary. * CMake support for SU2. File Changes. * A CMakeLists.tx",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:3247,test,tested,3247,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,1,['test'],['tested']
Testability,SU2/TestCases/TestCase.py uses `platform.processor()` which returns `i386` on an Intel Core i7 MacBookPro running mac OS 11.7. This just differentiates between Power PC vs Intel processors and not necessarily between 32-bit and 64-bit architectures. This causes all the tests in the test suite to be skipped even though the machine is 64-bit. . `platform.machine()` returns `x86_64` allowing the tests to run from the TestCase.py script. . Python documentation (3.12.0) also notes that many platforms do not provide the information for `platform.processor()` or simply return the same value as for `platform.machine()`. Suggestion is to replace `platform.processor()` with `platform.machine()`.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2159:4,Test,TestCases,4,https://su2code.github.io,https://github.com/su2code/SU2/issues/2159,6,"['Test', 'test']","['TestCase', 'TestCases', 'test', 'tests']"
Testability,"SU2/commit/ac8b3bf7636cc66ca7f47e15935942a6598e1a9f), the `SetRoe_Dissipation` function checked to see if the sensor values were valid regardless of the type of blending selected. Commit [ac8b3bf](https://github.com/su2code/SU2/commit/ac8b3bf7636cc66ca7f47e15935942a6598e1a9f) changed the behavior to only check the sensor values if they will be used. The unit test sets the convective blending to `NTS`, feeds invalid sensor values into `SetRoe_Dissipation` and checks the output. ```cpp; // Used to set the Roe-low-dissipation option; void WriteCfgFile(unsigned short nDim, const char* filename,; std::string blending) {; std::ofstream cfg_file;. cfg_file.open(filename, ios::out);; cfg_file << ""PHYSICAL_PROBLEM= NAVIER_STOKES"" << std::endl;; cfg_file << ""ROE_LOW_DISSIPATION= "" << blending << std::endl;. cfg_file.close();; }. BOOST_AUTO_TEST_CASE(BadSensorsAllowedForNTS) {. /*--- Setup ---*/. const unsigned short nDim = 3;. /*--- Set up the config class for the test ---*/; char cfg_filename[100] = ""convective_blending_test.cfg"";; WriteCfgFile(nDim, cfg_filename, ""NTS"");; CConfig* config = new CConfig(cfg_filename, SU2_CFD, 0, 1, 2, VERB_NONE);; std::remove(cfg_filename);. /*--- Inputs ---*/; const su2double dissipation_i = 0.4;; const su2double dissipation_j = 0.6;; const su2double sensor_i = NAN; // Intentionally unphysical:; const su2double sensor_j = NAN; // Intentionally unphysical:. /*--- Outputs ---*/; su2double dissipation;. /*--- Test ---*/. CNumerics numerics;; numerics.SetRoe_Dissipation(dissipation_i, dissipation_j,; sensor_i, sensor_j,; dissipation, config);. const su2double tolerance = std::numeric_limits<su2double>::epsilon();; BOOST_CHECK_CLOSE_FRACTION(dissipation, 0.5, tolerance);. /*--- Teardown ---*/; delete config;; }; ```. There's a couple problems I would fix if I had more time. Ideally, I would be writing the cfg file to an in-memory stream and not to a file. And realistically, I shouldn't need to use a config file at all for a simple test like this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499999225:1774,Test,Test,1774,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499999225,2,"['Test', 'test']","['Test', 'test']"
Testability,"SU2] Feature deallocation (#174). Bringing this branch up to date with current develop branch. ; Various deallocation changes; Some regression tests fail but all run. (previously was not the case); You can view, comment on, or merge this pull request online at:;   https://github.com/su2code/SU2/pull/174; Commit Summary; - Updated GetEngine_Properties; - Fix to the last commit; - Small bug; - Merge branch 'develop' into feature_MPI; - merging; - SU2_SOL and SU2_CFD are working; - Preliminary, but complete, implementation of SU2_DEF; - More updates; - Working version; - Complete implementation (validate); - Working version of SU2_DEF; - Final push before moving to the develop branch; - New MPI (removing SU2_PRT); - Merged in Ben's ParMETIS integration and fixed some conflicts.; - Merge branch 'benkirk-parmetis_integration' into feature_MPI; - ParMETIS geometry routines have been copied over but are not activated yet.; - Small change to ParMETIS include.; - ParMETIS can now be activated for testing (PARMETIS=YES in config).; - Updated MG; - Updated EA subrotuine; - Small fix; - Fixing memory leak; - Fixing memory leaks; - Dev release v.3.2.6; - Increasing MAX_NUMBER_MARKER; - Working version with ParMETIS. Fixed bug in global index. Now clean up and testing...; - Cleaned version of ParMETIS routines with better console output during partitioning.; - Small bug in initial element division.; - Made arrays in ParMETIS call dynamic.; - Fixed compiler warnings and added MPI directives so that the pure serial code works with the ParMETIS routines.; - Bootstrap on zion.; - Added some typecasts. Still tracking down a memory problem...; - Critical bug fix for vtxdist array.; - Partial fix; - More MPI improvements.; - Fixing a bug in SU2_DEF; - Updated BC_ActDisk_Boundary (MPI); - Merge remote-tracking branch 'upstream/develop' into develop; - changing solidboundary setting to be heatflux OR euler etc instead of AND, also working on doxygen documentation; - Dynamic allocation for ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:1799,test,testing,1799,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,1,['test'],['testing']
Testability,SU2_DOT seems to give wrong results. For example using the test case cont_adj_euler/naca0012.; Just use the continuous_adjoint.py script to test this.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/179:59,test,test,59,https://su2code.github.io,https://github.com/su2code/SU2/issues/179,2,['test'],['test']
Testability,Same pull request then before to run reg tests.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/224:41,test,tests,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/224,1,['test'],['tests']
Testability,"Samet,. Great to hear from you again. Thanks for submitting your work! Did you ever have a chance to try the NREL Phase VI wind turbine blade? This could be a good 3D test case, and I believe we have a grid or two lying around... Tom",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-257380761:167,test,test,167,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-257380761,1,['test'],['test']
Testability,"See #1197, it should be straightforward regarding the tractions, but the FSI boolean has implications in other areas of the fluid solver. I need help testing as I don't feel like deep diving into the python guts.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-778601816:150,test,testing,150,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778601816,1,['test'],['testing']
Testability,"Several bugs have been fixed in the grid deformation and the config file have been updated. . In particular, the inverse volume method uses now an element volume computed in ComputeDeforming_Element_Volume (not the incomplete determinant computed in FEM). fabs have been added to the determinant in the final evaluation of the FEM stiffness matrix (depending on the element orientation, the determinant was negative). The formulation Mu = E / (2.0_(1.0 + Nu)), Lambda = Nu_E/((1.0+Nu)_(1.0-2.0_Nu)) is used instead of the basic simplification Mu = E, Lambda = -E. We can recover that formulation using a large number for Nu (DEFORM_COEFF). The code has been simplified and that IO is now more clear. I have performed some tests and large deformations are now possible. . However, systematic regression tests for grid deformation is required using all the different kinds of elements. I remember that T. Economon put together some basic grids to test the mesh deformation, we should use those to check that everything is working fine before closing the release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/278:722,test,tests,722,https://su2code.github.io,https://github.com/su2code/SU2/pull/278,3,['test'],"['test', 'tests']"
Testability,"Should we use the branching methodology that we use for the SU2 repository? In the sense that we create a develop branch, create branches for any cases we want to add, submit pull requests that can be reviewed by the rest of the community etc. . I like the idea from @bigfooted, of having some regression testing that can run the simulation for a couple of iterations and check residuals (identical to what we do for the TestCases). This might be redundant to the actual regression tests that are done in SU2, but would be an easy first check on weather a particular validation case needs to be run again. Ideally, this would be run before any major version releases, as we discussed earlier. . I can also start working on creating a section on the website for the results of the validation cases. I'll eventually upload a sample validation case with corresponding results that people can model their efforts on.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-426808018:305,test,testing,305,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-426808018,3,"['Test', 'test']","['TestCases', 'testing', 'tests']"
Testability,"Signed-off-by: jtneedels <jneedels@stanford.edu>. ## Proposed Changes. - General cleanup/optimization in NEMO solver/numerics. . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1389:738,test,test,738,https://su2code.github.io,https://github.com/su2code/SU2/pull/1389,1,['test'],['test']
Testability,"Signed-off-by: jtneedels <jneedels@stanford.edu>. ## Proposed Changes. Fixes supersonic inlet BC in CNEMOEulerSolver so that it becomes operational.; Clean up NEMO supersonic outlet BC.; Clean up NEMO farfield BC.; ; ## Related Work; See associated PR to update documentation: https://github.com/su2code/su2code.github.io/pull/112. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1862:889,test,test,889,https://su2code.github.io,https://github.com/su2code/SU2/pull/1862,1,['test'],['test']
Testability,"Signed-off-by: jtneedels <jneedels@stanford.edu>. ## Proposed Changes; Correction of indexing in NEMO axisymmetric source residual, consistent with change in perfect gas source residual in develop. . ## Related Work; Related to #1192 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1207:828,test,test,828,https://su2code.github.io,https://github.com/su2code/SU2/pull/1207,1,['test'],['test']
Testability,"Similar to what @talbring mentions above, my guess is that it is having trouble opening a new file, which results in ierr != MPI_SUCCESS and trying to close the file again here:. https://github.com/su2code/SU2/blob/d0e10f8a365f61ceaaeb5dd822da83f06394e087/SU2_CFD/src/output/filewriter/CParallelFileWriter.cpp#L223. Can you try to comment out that line and run it again? That section of code is checking whether there are already files with the same name on the system and deleting them before writing a fresh copy. . Ideally, we would catch that ierr and check the error code from within MPI, since it might be a different issue entirely that is not allowing it to open new files. You can use something like the following to report the error (pseudo code - did not test):. ```; char err_string[MPI_MAX_ERROR_STRING];; int size_err_string, err_class;; MPI_Error_class(ierr, &err_class);; MPI_Error_string(err_class, err_string, &size_err_string);; cout << err_string << endl;; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-644882758:766,test,test,766,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-644882758,1,['test'],['test']
Testability,"Since we are already touching the Xcode topic here, has anyone tested the xcode backend in meson (with `--backend=xcode` in the meson call)? Maybe we can remove all this xcode stuff that we have currently in the repo.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/994#issuecomment-631682024:63,test,tested,63,https://su2code.github.io,https://github.com/su2code/SU2/issues/994#issuecomment-631682024,1,['test'],['tested']
Testability,"Since we're trying not to clog Travis, Is there a way to prevent Travis from running the regression tests on every push to a branch that is in the PR process?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/762#issuecomment-525853193:100,test,tests,100,https://su2code.github.io,https://github.com/su2code/SU2/pull/762#issuecomment-525853193,1,['test'],['tests']
Testability,"So I have setup Travis to test both Python versions, but I need to learn a little bit more about automake to setup the `pySU2` Makefile properly to build against the active Python environment. Hopefully getting closer...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-323047764:26,test,test,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-323047764,1,['test'],['test']
Testability,"So I tested the convergence on a couple of test cases, to see its behavior. I used the following three different preconditioner/linear solver combinations:. + LU SGS with FGMRES; + ILU with FGMRES; + ILU with BCGSTAB. I looked at three different test cases from the repo: the zero-pressure gradient flat-plate turbulent boundary layer, the NACA 0012 airfoil, and the RAE 2822. In each case, I ran without a restart file. For the flat plate and the NACA 0012, I used adaptive CFL and no multigrid. For the RAE 2822, I used constant CFL and multigrid. I looked at both the number of iterations of the linear solver (the inner iterations) and the overall convergence over time (the outer iterations). Here's some sample results and discussion:. For the flat-plate boundary layer, there was no noticeable difference between the develop branch and the fix:; ![flat_plate_ilu](https://user-images.githubusercontent.com/13340225/35281464-92d4da84-0018-11e8-9460-ae4672be6f44.png). For the NACA 0012, the linear solver converged in a similar number of iterations. Its hard to tell which outperformed the other due to different CFL numbers. The residual in turbulent kinetic energy did lag in the middle, but both cases converged in a similar number of outer iterations.; ![naca0012_ilu](https://user-images.githubusercontent.com/13340225/35281471-9aa05a40-0018-11e8-8abe-e31ddd058679.png). For the RAE 2822, the overall convergence was identical (same number of outer iterations). The linear solvers also converged in a similar number of iterations.; ![rae2822_ilu](https://user-images.githubusercontent.com/13340225/35281495-addf0d7c-0018-11e8-96c0-6599e3cfa5e5.png). ### Conclusion; There doesn't seem to be any large difference in the convergence with or without the fix.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/491#issuecomment-358401929:5,test,tested,5,https://su2code.github.io,https://github.com/su2code/SU2/pull/491#issuecomment-358401929,3,['test'],"['test', 'tested']"
Testability,"So I tested this on 4 mesh levels for a NACA0006 at 2.0 degrees AoA, at low (0.6) and high-ish (0.8) Mach number (Roe scheme).; These are the results for low Mach:; ![image](https://user-images.githubusercontent.com/38071223/61968547-3b08c680-afd0-11e9-8aae-9705a9441a00.png); Very small differences between recomputing a mass flux based on primitives (""Reconstructed"") or storing the flux computed during discretization of convection (""Consistent"").; However, the convergence rate for the latter approach is much worse:; ![image](https://user-images.githubusercontent.com/38071223/61968712-99ce4000-afd0-11e9-9c31-dafd7e26e3fb.png); Which makes sense because we are going from a Gauss-Seidel coupling of flow and turbulence to a half GS, half Jacobi (since the turbulence source terms were still computed with current velocity gradients).; After seeing this I only ran one mesh level (second to finest) at high Mach number and again differences were very small and convergence worse.; Some memory would indeed be saved in the discrete adjoint through the reduction of the number of pre-accumulation input variables, but only 30MB out of almost 9GB for a 2D case without MG. In summary the current approach seems to strike a good balance between accuracy, cost, and simplicity.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/721#issuecomment-515535554:5,test,tested,5,https://su2code.github.io,https://github.com/su2code/SU2/issues/721#issuecomment-515535554,1,['test'],['tested']
Testability,"So I tried adding the molecular and turbulent diffusion of turbulent kinetic energy in the total energy equation. It did not appear to fix this issue. At this point though, it's unclear exactly what the problem really is. I don't have ""correct"" pressure, turbulent kinetic energy, or total energy fields for the NACA 0012 or RAE 2822 test cases. By ""correct,"" I mean DNS or experimental data. The lack of ""correct"" data makes it hard to tell where the problems may actually be occurring. Is it coming from total energy? Resolved kinetic energy? Turbulent kinetic energy? All we're doing right now is comparing SST to SA, and one code's SST to another code's SST. That makes it hard to figure out what the correct answer really should be. Unless we have a problem that both 1) exhibits this problem, and 2) has high-quality pressure, temperature, total energy, or turbulent kinetic energy fields, then I agree that manufactured solutions is might be the best way to check ""correctness.""",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797#issuecomment-571730661:334,test,test,334,https://su2code.github.io,https://github.com/su2code/SU2/issues/797#issuecomment-571730661,1,['test'],['test']
Testability,"So I want to update the `transonic_stator_2D` test case with a new restart file that matches the new numerics. Since it's a transonic case, the difference in production is significant. But what was the stopping criteria used while generating the restart file in [TestCases/turbomachinery/transonic_stator_2D](https://github.com/su2code/TestCases/tree/develop/turbomachinery/transonic_stator_2D)? Was it the same stopping criteria used in the [non-restart cfg file](https://github.com/su2code/SU2/blob/master/TestCases/turbomachinery/transonic_stator_2D/transonic_stator.cfg)? For that case, the solver stops at 2001 external iterations.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/670#issuecomment-501739120:46,test,test,46,https://su2code.github.io,https://github.com/su2code/SU2/pull/670#issuecomment-501739120,4,"['Test', 'test']","['TestCases', 'test']"
Testability,"So I've changed the CHT test case to have a higher tolerance for errors, and I've merged in the changes from PR #570. Everything looks ready to go. On a side note, I've noticed that SU2 has some internal inconsistencies with the viscous/turbulent stresses. Some new options, such as QCR, SST UQ, and wall functions, have been added to the stress tensor definition over the past two years. But there's still some parts of the code, such as `CNSSolver::BC_Isothermal_Wall` and `CSourceIncAxisymmetric_Flow::ComputeResidual` where those changes aren't reflected. The stress tensor is still defined the old way. Is this intentional? Or was it an oversight?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/626#issuecomment-456790919:24,test,test,24,https://su2code.github.io,https://github.com/su2code/SU2/pull/626#issuecomment-456790919,1,['test'],['test']
Testability,So does this solve the random behavior of the flat plate test case ?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/316#issuecomment-253168845:57,test,test,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/316#issuecomment-253168845,1,['test'],['test']
Testability,So far I run the turb_oneram case with different number of points. There the chances made up to around 15% reduction of CPU time used. Currently I'm changing the MatrixVectorProduct for that case and find another 15% reduction. I will update this branch if there is a chance that that work is not wasted. Line 230: In the nicf/LS89 testcase the MPI and sequential code gives different results. The only reason is that line. I discussed that with Tom in #347,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/386#issuecomment-320643155:332,test,testcase,332,https://su2code.github.io,https://github.com/su2code/SU2/pull/386#issuecomment-320643155,1,['test'],['testcase']
Testability,"So you mean I should run the tests to convergence, and compare the results between branches? I wonder why compilation problems could be the culprit, as the tests fail both locally and in the github test. Shouldn't the github test always be compiled the same way?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2095#issuecomment-1659010514:29,test,tests,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/2095#issuecomment-1659010514,4,['test'],"['test', 'tests']"
Testability,"So, the two boundary conditions currently implemented in this branch are:. Standard SU2 BCs ; $k_{\infty} = (3.0/2.0) * (U_{\infty} * TI_{\infty})^2$; $w_{\infty} = \rho_{\infty} * k_{\infty} / (\mu_{lam,\infty} * ViscRatio)$; $ViscRatio_{default} = 10.0$; $TI_{\infty, default} = 5.0$. NASA TMR BCs for SST1994 and SST 2003 model; $U_{\infty}/L \leq w_{\infty} \leq 10 U_{\infty}/L$; $10^{-5}U_{\infty}^2/Re_{L} \leq k_{\infty} \leq 10^{-1}U_{\infty}^2/Re_{L}$. where ""L is the approximate length of the computational domain,"" and the combination of the two farfield values should yield a freestream turbulent viscosity between $10^{-5}$ and $10^{-2}$ times freestream laminar viscosity, as cited on the NASA TMR page. They give very different values of k and w at the farfield. For example, for a the standard test case of the SWBLI with $ViscRatio = 0.01$ and $TI_{\infty} = 5.0$:. Standard SU2 BCs ; $k_{\infty} = 2574.55$ $m^2/s^2$ and $w_{\infty} = 3e10$ $s^{-1}$. NASA TMR BCs; $k_{\infty} = 0.0013$ $m^2/s^2$ and $w_{\infty} = 1563$ $s^{-1}$. I assume that in the end it doesn't matter since the farfield values drop significantly in the standard version of SST.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2324337003:812,test,test,812,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2324337003,1,['test'],['test']
Testability,"Some additional comments:; - There are a lot of duplicated routines now, because they look the same for compressible/incompressible. These will be eventually moved to the CSolver. We have also plans for modifing the MPI routines in the solvers to make them more generic.; - I cannot make sure that some features that are currently not tested in Travis still work. For example things like Harmonic Balance for incompressible flows (in case it was working before). We should find out whats working and whats not so that we can maybe throw appropriate error messages.; - It might have happened that I accidentally did something wrong during the merge. Maybe I reverted some cosmetic changes that do not affect the solution ... If you see something, let me know. So I request **ALL** of you to have a look at the solver structure. But keep in mind that just looking at the diff might be confusing as it is not showing all changes correctly.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/327#issuecomment-257236302:335,test,tested,335,https://su2code.github.io,https://github.com/su2code/SU2/pull/327#issuecomment-257236302,1,['test'],['tested']
Testability,"Some additional ideas on this topic:. #### Using Github projects; - For compilation of branches, I have created a github project: https://github.com/su2code/SU2/projects/7; - In there, you can list your active/old branches by adding a note to the relevant column. Please be so kind to mark the name of the branch in bold using Markdown's format (`** my branch name **`).; - I have added some examples from my own branches. #### Where do I find my branches?; - We have all worked on branches that we no longer remember, but Github has a really nice feature for this.; - Log-in to your Github user account and go to: https://github.com/su2code/SU2/branches/yours; - All the branches in which you have added at least one commit will be listed there. #### Old branches; - We have found a lot of branches that are older than the latest release and have no commits ahead of master (you can see this in your branch list).; - This would mean that normally all of their commits have already gone into a released version of SU2 and they are no longer required.; - I am planning to do some cleaning of very old branches to have a more compact structure, however it would be helpful if all the developers could indicate explicitly which branches can be safely removed to avoid any future issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/582#issuecomment-423178409:569,Log,Log-in,569,https://su2code.github.io,https://github.com/su2code/SU2/issues/582#issuecomment-423178409,1,['Log'],['Log-in']
Testability,"Some new questions:. **iteritems** ; iteritems is sometime used to iter on dict. ; In py2, it uses less memory than items due to use of iterators instead of returning list of couple (key, value). In py3, items corresponds more or less to iteritems.; There are 3 solutions to fix it:; 1. use only items (right way in py3, more memory consuming); 2. use viewitems (compatible py2.7, not compatible 2.6, not well known attribute); 3. write a check if py2 ... iteritems, if py3 items; In #260 I used the 1st. **lower case class name conflicting with module name**; In code there is is some **init** codes like. ``` python; from ..util.ordered_bunch import OrderedBunch as ordered_bunch; ```. It seems that such imports are not compatible with new py3 import approach. Even I am not absolutly sure that bug come from that point. In all cases, I would suggest to use OrderedBunch instead of alias ordered_bunch every where. Is there a reason explaining this choice ?; I tried in my branch to remove this alias ... hopping nothing is broken. let's wait travis answer. **travis for py3**; Do you plan to add it ?. **how to contribute**; I decided to create a pull request with flag ""DO NOT MERGE"", I did it for these reasons:; - benefit from travis ci; - make it visible; - ease code review and comment directly on code; But with flag ""do not merge"" because it still remains some questions and bugs to be discussed. Is it the right way or do you prefer just a branch on my fork and ask for pull-request only when branch is very clean and tested ?. thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-209932850:1530,test,tested,1530,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-209932850,1,['test'],['tested']
Testability,"Some of the testcases that show as failed need to be updated, if the update is significant for cases with restart files we need a new restart file to match the previous convergence level.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2014#issuecomment-1561784033:12,test,testcases,12,https://su2code.github.io,https://github.com/su2code/SU2/pull/2014#issuecomment-1561784033,1,['test'],['testcases']
Testability,"Some test cases in `parallel_regression.py` use the command `""SU2_CFD""`, as far as I can see there is nothing parallel for these cases. The only difference to putting them in `serial_regression.py` seems to be that they are run by an MPI build. Is that what is supposed to be tested?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1764#issuecomment-1252309408:5,test,test,5,https://su2code.github.io,https://github.com/su2code/SU2/pull/1764#issuecomment-1252309408,2,['test'],"['test', 'tested']"
Testability,Sorry I missed your previous message @talbring.; I imagine this is because of c++11 (which GCC9 might consider by default?); I will test this and come back to you.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/734#issuecomment-516404815:132,test,test,132,https://su2code.github.io,https://github.com/su2code/SU2/pull/734#issuecomment-516404815,1,['test'],['test']
Testability,Sorry for the confusion. I must have mixed something up yesterday - the test case was crashing directly for SU2_CFD_AD when I set MARKER_MONITORING. But now it is working. So I think we can stick to the regression case and the way I set it up. Thanks again for the reviews!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1571#issuecomment-1076156224:72,test,test,72,https://su2code.github.io,https://github.com/su2code/SU2/pull/1571#issuecomment-1076156224,1,['test'],['test']
Testability,"Sorry for the delay. I am fine with the changes! I dont know if @economon has some comments on the results. But I agree with Samet, that we can also let the community apply this to other test cases!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-264186065:187,test,test,187,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-264186065,1,['test'],['test']
Testability,"Sorry for the late reply, here are some personal opinions. (1) I have also test the turb flatplate and Onera M6 case (Fig1.Original; Fig2.Submit) in the tutorials. The convengence and results also shows just slightly difference. . (2) This PR is not suitable for the euler wall, for the wall is not always a straight plane and singular points do not statisfy the condition for the normal direction is hard to define. (3) Well, I have noticed the BC_Sym_Plane before, but it is very puzzling to me that only the closed point to the vertex on the sym wall is considered to add additional negative normal flux contribution. Maybe the mesh is unstructured and more than one point out of wall is linked to the vortex. Maybe the closed point is not normal to the wall while it always occurs on the 3D sym plane such as the ONERA M6 wing case. (4) This PR is to add a limitation of the velocity on the sym wall, just like what we do to the turb walls in the CTurbSSTSolver::CTurbSSTSolver(CGeometry *geometry, CConfig *config, unsigned short iMesh). The fix is only available for the SYMMETRY wall and in the implicit iteration, just to avoid uncertainty and potential instability.; `; CTurbSSTSolver::CTurbSSTSolver(CGeometry *geometry, CConfig *config, unsigned short iMesh); : CTurbSolver(geometry, config, true) {; ...... /*--- Initialize lower and upper limits---*/; lowerlimit[0] = 1.0e-10;; upperlimit[0] = 1.0e10;. lowerlimit[1] = 1.0e-4;; upperlimit[1] = 1.0e15;; `; ![untitled](https://github.com/su2code/SU2/assets/58663453/f5b5f543-3476-45d6-9477-94c7deeca9aa); ![untitled](https://github.com/su2code/SU2/assets/58663453/c6ecbdc5-0636-4880-a315-05c8636c27bb)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2174#issuecomment-1829816458:75,test,test,75,https://su2code.github.io,https://github.com/su2code/SU2/pull/2174#issuecomment-1829816458,1,['test'],['test']
Testability,Sorry to be a pain but can you keep the PR's separate? If you need a combined branch for testing create a third branch for the time being.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1327733326:89,test,testing,89,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1327733326,1,['test'],['testing']
Testability,"Sounds good, if the cases are run using the regression I will keep as 7.1.1. I guess this begs the questions of should we be carrying test cases that dont run with the most recent version of the code?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1271#issuecomment-827821262:134,test,test,134,https://su2code.github.io,https://github.com/su2code/SU2/pull/1271#issuecomment-827821262,1,['test'],['test']
Testability,"Sounds good. I implemented the endian test a little differently than the website you linked, so no worries there, and now with your consent to use the ByteSwap() function, this PR is ready to go. . I will wait for another review.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/562#issuecomment-414157987:38,test,test,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/562#issuecomment-414157987,1,['test'],['test']
Testability,"Sounds good. Initially it would be enough to have some unit tests that would already show how to setup the network, together with documentation / example of the file format. Applications can come after. Some initial comments:; Please move the files to toolboxes/ and ideally use a namespace for the new classes.; Start the class names with C as we do, e.g. CIOMap. Then, how large are the models you've used so far? and how important is performance to this feature? (Just so I know how much to comment on that)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757#issuecomment-1247824519:60,test,tests,60,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757#issuecomment-1247824519,1,['test'],['tests']
Testability,"Status update: Wally ran a Mach 20 cylinder test case with AIR-7 model using SU2_NONEQ and results looked good. I need to check everything works with MPP air-7, and regressions need to be updated. Once confirmed/updated I think we can merge.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1887#issuecomment-1416402263:44,test,test,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/1887#issuecomment-1416402263,1,['test'],['test']
Testability,"Still testing this at scale and expect a couple small changes still, just fyi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-514256159:6,test,testing,6,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-514256159,1,['test'],['testing']
Testability,"Supersonic outflow non reflecting boundary condition has been implemented and tested in this branch. The implementation follow the approach proposed by Giles. This was a mandatory preparatory step for the implementation of the mixing plane interface, that is needed for the simulation of multi-stages turbine. cheers",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/188:78,test,tested,78,https://su2code.github.io,https://github.com/su2code/SU2/pull/188,1,['test'],['tested']
Testability,"Sure @bigfooted , This is a recent work by Dr. Nishikawa. Actually there are very few unstructured grid limiters in practice, Barth-Jespersen, Venkatakrishnan and its modifications, Michalek-Gooch (most of them are already implemented in SU2). I just saw the details and thought of implementing it. Also to note, it is tailored for vertex centered schemes not cell centered scheme, hence is apt for SU2. In original paper he showed tests with few inviscid cases. Recently He has revealed that it has been implemented in NASA CFD codes. ; Few things - 1- It is certainly less dissipative in comparison to VK 2- Convergence are similar. Rp limiters may take moderate number of more iterations (being less dissipative). 3- Convergence attributes also depends on many other settings - starting CFL, CFL ramping, convective schemes used etc. Sometimes all will stall.; Overall it's encouraging to try and make use of it in more and more cases. I tried it on multiple cases and got converged results (and yes Rp is comparitively less dissipative to Venkat limiter).; I will update the theory part and add the ramp case....",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2006#issuecomment-1499979649:432,test,tests,432,https://su2code.github.io,https://github.com/su2code/SU2/pull/2006#issuecomment-1499979649,1,['test'],['tests']
Testability,"Symmetry has been improved, if you could re test it would be great. Re-open if you still see the same issues.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1625#issuecomment-2282813386:44,test,test,44,https://su2code.github.io,https://github.com/su2code/SU2/issues/1625#issuecomment-2282813386,1,['test'],['test']
Testability,THIS IS A PR TO feature_NEMO. No impact on develop. This pull requests adds preprocessing to the NEMO NS solver and commonpreprocessing functionality seen in develop. Some functions have been extended to deal with eddy viscosity. Regression tests are passing. If the community finds having internal pull request distracting/cluttering I can take down.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1078:241,test,tests,241,https://su2code.github.io,https://github.com/su2code/SU2/pull/1078,1,['test'],['tests']
Testability,"TO DO: add testcase with 2 symmetry planes (laminar flow around sphere, slice)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2194#issuecomment-2244583354:11,test,testcase,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/2194#issuecomment-2244583354,1,['test'],['testcase']
Testability,Temporarily reduce regression test runtime,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/480:30,test,test,30,https://su2code.github.io,https://github.com/su2code/SU2/pull/480,1,['test'],['test']
Testability,Test CUSP scheme in QuickStart's mesh,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/465:0,Test,Test,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/465,1,['Test'],['Test']
Testability,Test Case was not running due to AssertionError: Config file has multiple specifications of CFL_ADAPT_PARAM; Duplicated entry of CFL_ADAPT_PARAM removed,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/387:0,Test,Test,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/387,2,"['Assert', 'Test']","['AssertionError', 'Test']"
Testability,Test case about AUSMPLUSUP or AUSMPLUSUP2,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/761:0,Test,Test,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/761,1,['Test'],['Test']
Testability,"Test case discadj_fea is failing due to a change of residuals (the derivatives are the same up to the displayed precision), the change in residuals is smaller than that caused by running on 2 cores rather than serial. Further investigation needed nevertheless.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/592#issuecomment-426818152:0,Test,Test,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/592#issuecomment-426818152,1,['Test'],['Test']
Testability,Test case failuring during postprocessing step not caught,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/341:0,Test,Test,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/341,1,['Test'],['Test']
Testability,"Test cases added,",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2210#issuecomment-1946439715:0,Test,Test,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2210#issuecomment-1946439715,1,['Test'],['Test']
Testability,Test cases for turbulence model variants,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1418:0,Test,Test,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1418,1,['Test'],['Test']
Testability,Test cases throwing invalid option name error,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/152:0,Test,Test,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/152,1,['Test'],['Test']
Testability,"TestCase: APU_Turbocharger, not working for specific number of cores",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/749:0,Test,TestCase,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/749,1,['Test'],['TestCase']
Testability,TestCases Repo Regressions in Travis CI,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/459:0,Test,TestCases,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/459,1,['Test'],['TestCases']
Testability,"TestCases repo is used for large files that are used in regression tests.; Then we have the tutorials repo for tutorial files (mesh + configs) and we also exercise those in regressions.; If this is too large for either of the above it should go into V&V, I guess that is how it was used for the paper?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2239#issuecomment-2018876371:0,Test,TestCases,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2239#issuecomment-2018876371,2,"['Test', 'test']","['TestCases', 'tests']"
Testability,Testing,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/812:0,Test,Testing,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/812,1,['Test'],['Testing']
Testability,Testing Release Crafter (can be ignored),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/811:0,Test,Testing,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/811,1,['Test'],['Testing']
Testability,"Tests are passing, so if there are no further comments I'll merge this one in. I'll further tackle driver generalisation in PRs to come.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/638#issuecomment-460218066:0,Test,Tests,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/638#issuecomment-460218066,1,['Test'],['Tests']
Testability,"Tests are passing, so this wasn't covered. I will make sure it's covered via the tutorials.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/897#issuecomment-594013467:0,Test,Tests,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/897#issuecomment-594013467,1,['Test'],['Tests']
Testability,"Text always moves between the images for some reason ... euler oneram6 14cores; ![sloweuler_oneram6](https://user-images.githubusercontent.com/31306376/65078336-18c27200-d99d-11e9-9d5c-5e38df4f9803.gif). euler channel 14cores; ![sloweuler_channel](https://user-images.githubusercontent.com/31306376/65078374-2a0b7e80-d99d-11e9-8860-23e48399873b.gif); Hi @pcarruscag (and everyone else of course :) ), Here some selected convergence rate comparisons with of this PR with develop. I also compared results all of those case side by side and the differences (I used contour line positions for most of it) are pretty subtle. Most of the times I double checked that I didn't load the same flow.vtk. At shocks it was a bit more visible especially close the wall but one has to really zoom in for it. Concerning lift / drag coefficient which are written on screen the difference was below 1% throughout the cases I looked at. Some cases were tested with different amount of cores with no mentionable deviance in Residuals. inc ns bend 2cores; ![incns_bend](https://user-images.githubusercontent.com/31306376/65078454-50c9b500-d99d-11e9-8be2-4ea1cb397c14.gif). inc euler nozzle 4cores; ![inceuler_nozzle](https://user-images.githubusercontent.com/31306376/65078420-3ee81200-d99d-11e9-83b3-cd8d301a5771.gif). euler wedge 14cores; ![euler_wedge](https://user-images.githubusercontent.com/31306376/65078443-49a2a700-d99d-11e9-9110-03dd278d742f.gif)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-532401028:934,test,tested,934,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-532401028,1,['test'],['tested']
Testability,"Thank can be just due to compilation differences.; Take those two cases and run them until convergence, e.g. 6 orders drop in residuals, then compare the results and if they converge in a similar number of iterations.; If all looks the same we can update the reference values in the test.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2095#issuecomment-1658594626:283,test,test,283,https://su2code.github.io,https://github.com/su2code/SU2/pull/2095#issuecomment-1658594626,1,['test'],['test']
Testability,"Thank you ; Yes we plan on contributing more, this commit was more of a test run just to understand the process. ; I added Dr Yair Mor Yossef and myself as Authors, per your request.; However I do not see a button anywhere that says merge pull request (even before changing Authors.md)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295#issuecomment-2221017129:72,test,test,72,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295#issuecomment-2221017129,1,['test'],['test']
Testability,"Thank you @TobiKattmann for your feedback. The idea behind this new regression test config file is as follows:; We should have a test case that triggers the negative part of the SA model. Depending on the flow conditions, geometry and CFD parameters it might be triggered or not. With the previous config file, it was not. ; I think there is already a regression test in SU2 that triggers the negative SA, the `turb_oneram6_nk`. However, I decided to stick to rae2822 airfoil as it is a simpler (faster) case. In order to force the negative part of the SA for the rae2822 in a reasonable amount of iterations for a regression test, I increased the angle of attack. I have removed the multigrid as it might not be stable, but I have not tested though. Anyway, with the current configuration, e.g., convective scheme, CFL number, etc, the solution is not stable and diverges after some iterations, around 15. In that sense, I reduced the number of iterations from 20 to 10. In my opinion, a diverging regression test is not a problem at all as it might not be used as a tutorial, only to verify the integrity of the commit. ""The solution should always diverge to the same results"". If the regression test should converge, let me know and I will update the config file :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363:79,test,test,79,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363,7,['test'],"['test', 'tested']"
Testability,"Thank you @pcarruscag and @kursatyurt for your comments and suggestions! I hope that I understood and applied them as intended, if not, please let me know. This is all new to me and because I'm still learning C++, it took me a few extra commits but now all tests seem to pass :) Have a good weekend!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2024#issuecomment-1545770617:257,test,tests,257,https://su2code.github.io,https://github.com/su2code/SU2/pull/2024#issuecomment-1545770617,1,['test'],['tests']
Testability,"Thank you @pcarruscag. I have placed a link to a testcase. I have updated the title, because it looks like it is not a general problem.; By the way, can I visualize the partitions in paraview?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1767#issuecomment-1256137341:49,test,testcase,49,https://su2code.github.io,https://github.com/su2code/SU2/issues/1767#issuecomment-1256137341,1,['test'],['testcase']
Testability,"Thank you @tollennaert, I added a few notes but if you don't have time we can take care of it after this is merged (I understand that your project is finished).; Regarding the testcase, ideally add it to TestCases/deformation (making it a regression, preferably in parallel_regression.py) and if possible use one of the existing grids (this should be easier than having to add a mesh file to the TestCases repo).; Finally it would be great if you could add a little more info on the options and how to use them, either in config_template or in the new testcase you add.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1076#issuecomment-741898701:176,test,testcase,176,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-741898701,4,"['Test', 'test']","['TestCases', 'testcase']"
Testability,"Thank you Pedro for the lightning reply! ; Yes, I see, unfortunately, I can't cross-check the log right now to see whether the ""STRAIGHT EDGE"" string was triggered, but I'll pay attention to that in the future for sure. . Anyway, I wonder whether the axis treatment is looking for a ""numerical 0"", or does perform some sort of filtering or tolerance on the mesh ( in some ways similar to what some CADs do). In my case, the body was in the order of meters, and the domain was in the order of 100 m.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1373#issuecomment-1464373891:94,log,log,94,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373#issuecomment-1464373891,1,['log'],['log']
Testability,"Thank you all for the review and comments. I've added a test case with this pull request for a pitching airfoil. The config is in the main repository and the mesh is added in the TestCases repository with the same branch name. Can both pleased be merged in together? Also about the tutorial request, I'll have a go at writing one in a feature branch of the website repository.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/767#issuecomment-526666570:56,test,test,56,https://su2code.github.io,https://github.com/su2code/SU2/pull/767#issuecomment-526666570,2,"['Test', 'test']","['TestCases', 'test']"
Testability,Thank you all.; I will test the installation with the test suite now.; Feel free to close the thread. Cheers,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1209#issuecomment-785797319:23,test,test,23,https://su2code.github.io,https://github.com/su2code/SU2/issues/1209#issuecomment-785797319,2,['test'],['test']
Testability,Thank you for adding a regression.; Why do you need both a restart_flow.dat and a solution_flow.dat file in Testcases? We should try to keep that repo small.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1195#issuecomment-779912487:108,Test,Testcases,108,https://su2code.github.io,https://github.com/su2code/SU2/pull/1195#issuecomment-779912487,1,['Test'],['Testcases']
Testability,"Thank you for bringing this back. The testcase was passing on #753 alone, so that should not be the problem, I'll have a look.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542148416:38,test,testcase,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542148416,1,['test'],['testcase']
Testability,"Thank you for digging into the code.; This is one of the obscure features in SU2 that the currently active developers have little knowledge about.; I looked around the repo and I think we don't even have an example, do you think you can help setup one?; The function you modified seems to be the right place, it would be great if you could open a PR with the fix and a small testcase (~20k elements) that we can then use to get some test coverage of this feature.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1607#issuecomment-1100008161:375,test,testcase,375,https://su2code.github.io,https://github.com/su2code/SU2/issues/1607#issuecomment-1100008161,2,['test'],"['test', 'testcase']"
Testability,Thank you for having a look @MicK7.; Allowing multizone cgns based on the MULTIZONE_MESH option sounds reasonable but I did not want to remove the error without testing. Do you (or @ChristianBauerEng) have a multizone cgns we can use to test this?; I don't think we should add more config options.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1566#issuecomment-1073214095:161,test,testing,161,https://su2code.github.io,https://github.com/su2code/SU2/pull/1566#issuecomment-1073214095,2,['test'],"['test', 'testing']"
Testability,"Thank you for investigating the issue, please open a pull request with the fix.; You have not provided a case to reproduce the issue. So it's difficult for someone else to test.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2005#issuecomment-1498896405:172,test,test,172,https://su2code.github.io,https://github.com/su2code/SU2/issues/2005#issuecomment-1498896405,1,['test'],['test']
Testability,"Thank you for re-testing Jayant.; The idea with the hard-coded ceiling (floor?) on linear solver tolerance was to handle examples where it is set to very low values which would not allow this mechanism to work properly... Hummm but I can see the case for using the linear solver tolerance to achieve a fixed number of iterations, and then using an ""acceptable reduction"" to drive the CFL. Alright good idea I'll make it a fifth, optional CFL-adapt parameter with default 0.001 and still take the max between it and the tolerance. Out of curiosity did you manage to check what kind of tolerance seems ""optimum"" for adapted meshes?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036#issuecomment-760782020:17,test,testing,17,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-760782020,1,['test'],['testing']
Testability,"Thank you for rebasing.. indeed, we're in the middle of cleaning up a few things in the regressions at the moment, but I hope we can pull in your Python 3 contributions very soon. We may kick off the tests again here once we get things sorted. Thanks for your patience,; Tom",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/260#issuecomment-223123510:200,test,tests,200,https://su2code.github.io,https://github.com/su2code/SU2/pull/260#issuecomment-223123510,1,['test'],['tests']
Testability,"Thank you for submitting this pull request. ; Please modify this to be based off and merged into the develop branch, rather than the master branch. The travis system will then automatically run the regression tests, and we can proceed from there. . Just a question: what effect does this have in windows 64 bit versions? It looks like this would only effect windows 32 bit, is that correct?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/331#issuecomment-261654684:209,test,tests,209,https://su2code.github.io,https://github.com/su2code/SU2/pull/331#issuecomment-261654684,1,['test'],['tests']
Testability,"Thank you for the careful scrutiny. The input in su2 is turbulence intensity, which is defined as u'/U. Instead of changing the 40 turbulence testcases that use turbulence intensity, I suggest we change the one testcase that uses the turbulence intensity percentage 100*u'/U (the T3A flat plate). For what it's worth: openfoam uses turbulence intensity u'/U and ANSYS Fluent uses 100*u'/U, so both notations are used.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1267#issuecomment-971682682:142,test,testcases,142,https://su2code.github.io,https://github.com/su2code/SU2/pull/1267#issuecomment-971682682,2,['test'],"['testcase', 'testcases']"
Testability,"Thank you for the changes.; I would say a test case is always welcome. You can simply modify an existing one, this feature is orthogonal to everything else, and then please add the new options to the config_template (with maybe the nice explanation you have in CConfig).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1236#issuecomment-800292781:42,test,test,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236#issuecomment-800292781,1,['test'],['test']
Testability,"Thank you for the detective work @yiren6 :+1: ; We may need to consider changing the extension for OSX or create a symbolic link during the installation process.; @patelha57 can you try the solution that yieren6 found?. As for the crash, I realize now that you are using the branch from PR #1300, it looks like that memory leak was fixed by @aa-g here https://github.com/su2code/SU2/commit/b2ddd9666b76b80ce5ce485b58dc5f97a27420b8 (at least that line 558 changed).; When using code from a pull request you can have a look at the regression tests https://github.com/su2code/SU2/pull/1300 (bottom of the page) to get an idea if some issues might still be work in progress.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1606#issuecomment-1106869636:540,test,tests,540,https://su2code.github.io,https://github.com/su2code/SU2/issues/1606#issuecomment-1106869636,1,['test'],['tests']
Testability,"Thank you for the feedbacks, I am working on the modifications you suggested. I will perform a couple of tests to be sure I did not break anything. Hope to commit the new code soon!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124#issuecomment-740209039:105,test,tests,105,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-740209039,1,['test'],['tests']
Testability,"Thank you for the review @economon.; I just gave the multiple constraints a try on the hybrid onera m6 mesh we have in testcases, it works, both points and edges can be balanced, but the edge cuts go up by almost 50% I guess that makes sense, more constraints less minimization.; There's another reason why I like the combined function, balancing the ""num neighbors"" metric is not exactly the same as balancing the number of edges per partition, using a small negative point weight (-1, -2) yields better results (but the ideal value will be case dependent). I think the next big improvement we can make in this area is to use a partitioner that is aware of the network topology, ParMETIS assumes that the communication cost between any two ranks is the same, this simplification can be very costly on large parallel machines that have a tree-like network topology, and in older clusters with slow interconnects (relative to intra node communication).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1059#issuecomment-671054807:119,test,testcases,119,https://su2code.github.io,https://github.com/su2code/SU2/pull/1059#issuecomment-671054807,1,['test'],['testcases']
Testability,"Thank you for the review @rsanfer.; I put the extra comments and ""centralized constants"" in the code.; Everything relating to the incompressible neo-Hookean material has been deleted, let me know if it was too much.; I'll put a testcase together with a healthy mix of elements, probably next week.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/681#issuecomment-495321715:228,test,testcase,228,https://su2code.github.io,https://github.com/su2code/SU2/pull/681#issuecomment-495321715,1,['test'],['testcase']
Testability,"Thank you for the thorough review @rsanfer! I'll reply to your main questions and some of the smaller ones here to centralize things. > Just a request, if it's possible that you add one or two test cases so the implementation is safe onwards (and, of course, so I can play around with the new features a little bit ). The testcases are the same, no changes there other than the one optional option introduced above. When the hybrid stuff covers most of the code I would add an entire build configuration e.g. BaseMPIOMP and corresponding testcase suite. > * Should this just run ""out of the box"" with a working installation of OpenMP in any machine, or is there anything else _fancy_ needed?. I would leave it to the community to decide what the defaults should be, probably for a lot of new users that don't run on clusters just calling SU2_CFD and not having to worry about mpi would be nice (a lot of the issues on CFD online are mpi related). > * Is the previous behaviour exactly kept, or are there any modifications in the basic, non OpenMP version of code? (Not that I mind, just curious). Other than the algorithmic changes (but mathematically equivalent) introduced to limiters and gradients in #834, yes. > What's the advantage of having one numerics term per thread?. It is a requirement, we need to write data into numerics before using them, multiple threads cannot write to the same location (i.e. the internal structures of CNumerics) therefore one per thread is required. > ...Also, I think I missed the point where the numerics container is extended beyond MAX_TERMS. The allocation of space for one numerics per thread is done above in line 1995 of my 21 Dec 2019 comment: `...MAX_TERMS*omp_get_max_threads()...`.; The instantiation of one numerics per thread is then done by executing the rest of the preprocessing in parallel and instead of using `XYZ_TERM` using `XYZ_TERM+offset` where `offset = thread_id * MAX_TERMS`.; I think someone mentioned this (maybe Tim) that we could r",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/843#issuecomment-577684728:193,test,test,193,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728,3,['test'],"['test', 'testcase', 'testcases']"
Testability,"Thank you for your question.; The geometry files are stored in a separate repository, su2code/Testcases; due to repository memory limitations. The file structure is the same, so; when you check out the test cases repository into the same folder you will; get the necessary files in the right places.; To test whether the installation worked immediately, you can run the; quickstart tutorial which includes the geometry file already. Details on this, and other information you will likely find useful are also; available on the wiki of the github repository:; https://github.com/su2code/SU2/wiki/Download. Cheers,; Heather. On Fri, Jan 8, 2016 at 3:51 PM, alexp1729 notifications@github.com wrote:. > All the TestCases seem broken when I try to run SU2 41 compiled from; > source When I run the serial_regressionpy and parallel_regressionpy; > scripts, I get error messages like; > ; > There is no geometry file (GetnZone))!; > ; > and mesh files like mesh_ONERAM6_turb_hexa_43008su2 appear to be missing; > When I copy one of these from a 40 sample directory (where everything; > worked) and rerun the test case manually by typing something like; > ; > mpirun -n 2 /mit/su2_v41/bin/SU2_CFD config_CFDcfg; > ; > it works Something seems to be missing that generates the mesh files but; > I'm no SU2 expert, I just install it for the real users Thanks for any help; > ; > ```; > Alex; > ```; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/su2code/SU2/issues/222. ## . Heather Kline; NASA Space Technology Research Fellow; PhD Candidate, Aeronautics & Astronautics, Stanford University; BS Aerospace Engineering, Rensselaer Polytechnic Institute; kline.hl@gmail.com, hlkline@stanford.edu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/222#issuecomment-170169063:94,Test,Testcases,94,https://su2code.github.io,https://github.com/su2code/SU2/issues/222#issuecomment-170169063,5,"['Test', 'test']","['TestCases', 'Testcases', 'test']"
Testability,"Thank you very much @petebachant . Again I rebased this result (your pull request merged) on last develop version to be up to date and have a cleaner git history tree. The result is here : [gbaty/SU2/py2_and_py3_support_rebased_on_develop_20170821](https://github.com/gbaty/SU2/tree/py2_and_py3_support_rebased_on_develop_20170821). We now need to double check all changes. I am afraid to have lost a small part of your work that is why I have created a new branch. All you work is in py2_and_py3_support. Doing a pr on develop allow to see easily all py2 to py3 changes. **This branch is not tested** and done quickly. Do **not** trust it directly, I need to continue to work on it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/260#issuecomment-323837479:593,test,tested,593,https://su2code.github.io,https://github.com/su2code/SU2/pull/260#issuecomment-323837479,1,['test'],['tested']
Testability,"Thank you, that looks like the build system is doing something weird, unfortunately I don't have a machine with windows to test.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1471#issuecomment-999475401:123,test,test,123,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-999475401,1,['test'],['test']
Testability,Thanks @TobiKattmann and @WallyMaier for testing!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1342#issuecomment-894820999:41,test,testing,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342#issuecomment-894820999,1,['test'],['testing']
Testability,Thanks @TobiKattmann for that fix and going through the hassle of changing all the reg. test values.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-537108499:88,test,test,88,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-537108499,1,['test'],['test']
Testability,"Thanks @TobiKattmann, nice catch! Can you please put a pull request with the required changes? That way I can also do some tests myself and we can move the discussion there. @economon As far as I know, there is no multizone-multiinstance case running as of now. I think @arubino worked on multizone harmonic-balance, but I don't think it has yet been adapted to the new instance index. Am I right?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/568#issuecomment-416935622:123,test,tests,123,https://su2code.github.io,https://github.com/su2code/SU2/issues/568#issuecomment-416935622,1,['test'],['tests']
Testability,"Thanks @TobiKattmann. Binaries using MPI are now also build and attached to the release. I need some help in testing them, so please if you have 2 mins, download the one appropriate for your machine from the current draft release and try to run them on your machine. If you have done so, let me know the OS and the MPI version (even in case it works!).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/813#issuecomment-557025420:109,test,testing,109,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-557025420,1,['test'],['testing']
Testability,"Thanks @clarkpede . I will merge it. We can talk more about regressions tests in another topic. Best,. Eduardo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/532#issuecomment-390437324:72,test,tests,72,https://su2code.github.io,https://github.com/su2code/SU2/pull/532#issuecomment-390437324,1,['test'],['tests']
Testability,Thanks @clarkpede for setting this up! I will add some tests by myself and see how its gonna work out.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850#issuecomment-579140739:55,test,tests,55,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-579140739,1,['test'],['tests']
Testability,"Thanks @clarkpede to take the initiative for this topic. I think unit-tests are a useful thing and we should think about having it in addition to the regression tests. Regarding the framework I am actually a little bit hesitant to use boost. Although we are already using it for tecio, in that case it is used in a part of the code which does not change frequently so it is fine if we are just shipping it. However, if we start introducing it into the actual development process people may want to use more and more features of boost and we will have a hard time maintaining versions, compatbilities and so on. And in my opinion we should keep it as simple and lightweight as possible (one of our biggest strengths is the simple compilation/installation, which actually attracts a lot of users). So in that regard Catch2 looks like a better candidat to me. But I am happy to hear more opinions on that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-500226914:70,test,tests,70,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-500226914,2,['test'],['tests']
Testability,Thanks @economon .... @aeroamit : Can you please check the values of the blunt body test case? I think the test case you added failed. Best.; Eduardo,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/631#issuecomment-460093192:84,test,test,84,https://su2code.github.io,https://github.com/su2code/SU2/pull/631#issuecomment-460093192,2,['test'],['test']
Testability,"Thanks @economon for the fix, this is a small one, if there are no further comments I'll get it merged when the tests pass.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/637#issuecomment-460937949:112,test,tests,112,https://su2code.github.io,https://github.com/su2code/SU2/pull/637#issuecomment-460937949,1,['test'],['tests']
Testability,"Thanks @fpalacios , that would be great. I've merged with develop and fixed some conflicts, the tests are running right now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/528#issuecomment-398427777:96,test,tests,96,https://su2code.github.io,https://github.com/su2code/SU2/pull/528#issuecomment-398427777,1,['test'],['tests']
Testability,Thanks @jtneedels for doing some testing. I think we saw some issues with the aerodynamic coefficient computations...but the pressure distributions looked good. This looks good to me. Ill leave it to @FlorianDm or @pcarruscag to make any final changes or suggestions. Good work y'all!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1106#issuecomment-740338383:33,test,testing,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/1106#issuecomment-740338383,1,['test'],['testing']
Testability,Thanks @kursatyurt submodules are fixed here https://github.com/su2code/SU2/commit/8b89e857ff72782b0caccc3f63385c03bc67f6f7; If you can do the other fixes and hook up the regression test it would be great,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2095#issuecomment-1843828431:182,test,test,182,https://su2code.github.io,https://github.com/su2code/SU2/pull/2095#issuecomment-1843828431,1,['test'],['test']
Testability,Thanks @maxaehle 💐. Not sure how this will interact with scalar solvers (species transport) to come ... but in case someone there wants to work with sliding interfaces then I guess one has to test that a priori,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1344#issuecomment-896775901:192,test,test,192,https://su2code.github.io,https://github.com/su2code/SU2/pull/1344#issuecomment-896775901,1,['test'],['test']
Testability,"Thanks @pcarruscag , it looks like standard regression tests are passed without any problem, and ARM tests are problematic, as always.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2095#issuecomment-1844115496:55,test,tests,55,https://su2code.github.io,https://github.com/su2code/SU2/pull/2095#issuecomment-1844115496,2,['test'],['tests']
Testability,Thanks @pcarruscag and @TobiKattmann ! I will add the testcase and some small things in a new PR!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1204#issuecomment-865654846:54,test,testcase,54,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204#issuecomment-865654846,1,['test'],['testcase']
Testability,"Thanks @pcarruscag for making this PR a lot better. @bigfooted @danielmayer @mheimgartner ; To layout future steps as discussed after this merge: ; 1. Merge these changes into feature_flamelet (and then feature_multicomp). Therefore the `CScalar*` things that are currently present in these branches will be renamed to CLegacyScalar* to not overwrite files. This has the advantage that those branches are kept up-to-date with develop.; 2. Implement a rudimentary (passive) CSpeciesSolver (specifically does not contain multicomponent mixing from #1332 ) and merge that. Finding a good (validation) Testcase would be great here.; 3. Extend the CSpeciesSolver by #1332 mixing models. Either by cutting away all the flamelet specific parts or by porting the additions to a new PR.; 4. Make feature_flamelet switch to the new structure. This is an in-place change as both implementations are then present but just one will be kept. This will shrink the PR size of #1223 by quite a bit . Additionally the heat and radiation solver should be ported into this new structure, but that is independent work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1330#issuecomment-925066101:598,Test,Testcase,598,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330#issuecomment-925066101,1,['Test'],['Testcase']
Testability,"Thanks @pcarruscag for responding! I really appreciate you taking time to answer this. Well, I was just looking at the density residuals for convergence. That should be valid for both primal and adjoint. I have attached my config file for future reference. The same works for v6 though. Yes, downgrading hurts. But I had good reasons to do so because of the shape optimization scripts for turbomachinery are way more developed for v6 than v7. I wish I could have done that earlier. Plus the MPI issue as well #990. Now I am able to use 30 instead of 3 cores and that makes one hell of a difference. The good part about git is that I can go back to v6.1.0 tag and get not only the code and Testcases but the website at that version as well. That certainly helps.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1024#issuecomment-645495083:689,Test,Testcases,689,https://su2code.github.io,https://github.com/su2code/SU2/issues/1024#issuecomment-645495083,1,['Test'],['Testcases']
Testability,"Thanks @salvovitale and @talbring. As you know, the main consequence of a better linear solver is that it is possible to increase the CFL number (independently of the spatial discretization). In other words... the benefits are for JST and Roe. By the way, I have found that a fill-in level of 1 is too expensive for 3D problems (great for 2D)... I have reduced the default value from 1 to 0... but feel free to increase the number if you are looking for very large CFL numbers. I think that regression tests are taking too much time and they don't finish on the assigned time... hopefully the change from 1 to 0 fill-in level will resolve the problem, otherwise I'll reduce the time on some of the tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/448#issuecomment-334358362:502,test,tests,502,https://su2code.github.io,https://github.com/su2code/SU2/pull/448#issuecomment-334358362,2,['test'],['tests']
Testability,"Thanks @sun5k, the merge conflicts were probably a bit challenging because some files were moved with the other work we were doing on turbulence.; I had a look at the code and it looks like you did a nice job of modernizing the transition implementation :+1: and the verification against Fluent also looks good.; Given that this is an improvement in all directions (better code, feature that works, same amount of code) I encourage you to make the final push so that we can integrate it into develop.; As you see the GitHub tests are failing because of compiler warnings (unused variables and so on, you should be able to see the logs) let me know if you need some help.; Then we need at least one regression test, for example one of the coarser grids in your V&V, and with that we should be able to finish this PR!. After that please consider adding your results to our V&V page https://su2code.github.io/vandv/home/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751#issuecomment-1239202757:524,test,tests,524,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751#issuecomment-1239202757,3,"['log', 'test']","['logs', 'test', 'tests']"
Testability,"Thanks Brian,; my bad, I misinterpreted the carpets / logs structure. I successfully ran a test of a very simple case. In the results there are some small artifacts, but the shocks are resolution improved consistently after mesh adaption.; Thanks for the support. ![Comparison](https://user-images.githubusercontent.com/41752169/80644172-84a7a580-8a69-11ea-9f16-58e98c808b73.png); ![ComparisonMesh](https://user-images.githubusercontent.com/41752169/80644174-85403c00-8a69-11ea-819f-2ac00550a089.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-621450497:54,log,logs,54,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-621450497,2,"['log', 'test']","['logs', 'test']"
Testability,"Thanks Francisco for this contribution! Although the FFD Framework is already working quite well, there is still (like always) room for improvement. In fact, I am currently working on using BSplines instead of Bezier curves. I'm going to open a pull request end of this week. But this shouldn't affect this one I hope. Do you have by any chance a simple test case I could use to check this ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/330#issuecomment-260475206:354,test,test,354,https://su2code.github.io,https://github.com/su2code/SU2/pull/330#issuecomment-260475206,1,['test'],['test']
Testability,"Thanks Guys,. I have tracked down the problem to the subroutine. void CHBDriver::ComputeHB_Operator() in driver_structure.cpp. if you comment out that subroutine the compilation process works just fine. For the time being, I'm going to comment out that subroutine in the develop branch (and the associated test case) until we have time to find out the issue (I'll create a pull request). HB is an important contribution but, it is also critical to have a code that compiles (AD mode) in a mac platform (which is quite popular in our community). Thanks,; Francisco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/319#issuecomment-259849448:306,test,test,306,https://su2code.github.io,https://github.com/su2code/SU2/issues/319#issuecomment-259849448,1,['test'],['test']
Testability,"Thanks Heather,. Could you please take a look at the log_Adjoint.out file generated in the folder DESIGNS/DSN_001/ADJOINT_DRAG/ when you run the single objective-with-multiple-surfaces regression test (in the part whereSU2 specifies the Surface(s) where the force coefficients are evaluated). It seems that the shape optimization python script only copied the first surface to config_CFD.cfg. I found the ""if (n_obj>1):” solution… but, you know better the multi objective implementation. Just let me know if there is another more elegant fix that we can implement. Thanks!; Francisco. > On Mar 25, 2018, at 1:55 PM, Heather Kline <notifications@github.com> wrote:; > ; > @hlkline commented on this pull request.; > ; > In SU2_PY/SU2/eval/design.py <https://github.com/su2code/SU2/pull/519#discussion_r176953697>:; > ; > > @@ -364,7 +364,7 @@ def obj_df(dvs,config,state=None):; > # For multiple objectives are evaluated one-by-one rather than combined; > # MARKER_MONITORING should be updated to only include the marker for i_obj; > # For single objectives, multiple markers can be used ; > - config['MARKER_MONITORING'] = marker_monitored[i_obj]; > + if (n_obj>1): config['MARKER_MONITORING'] = marker_monitored[i_obj]; > I think that the array of monitored markers is extended to accommodate this situation in config.py (~line 514), and there is a single objective-with-multiple-surfaces regression test; do you have a case you can send me where this wasn't working? Or if you see an issue with that test that I previously missed I wouldn't mind looking into it.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/519#pullrequestreview-106743204>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AccuRva3VNHDjv7H11VnmorjY5pCNlpkks5tiARDgaJpZM4S4O1W>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/519#issuecomment-376016690:196,test,test,196,https://su2code.github.io,https://github.com/su2code/SU2/pull/519#issuecomment-376016690,3,['test'],['test']
Testability,"Thanks Heather,. You are right, there is an uncertainty in the fit that comes from experimental data. I'm going to triple check the number, in particular I'll check the original Sutherland's article, and I'll implement the modification. In particular, I'm very concern about the current difference between SI and US constants... we need to fix that as soon as possible. . Unfortunately, this change is going to affect most of the regression test, I would appreciate some help... I'm not sure anymore about how to update the tests. Thanks,; Francisco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/301#issuecomment-241449304:441,test,test,441,https://su2code.github.io,https://github.com/su2code/SU2/issues/301#issuecomment-241449304,2,['test'],"['test', 'tests']"
Testability,"Thanks Pedro,. If you want I can run this test case also with the Intel performance tools. These usually give some more info what can be improved to obtain better performance. Cheers,. Edwin.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-523063269:42,test,test,42,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-523063269,1,['test'],['test']
Testability,Thanks Ruben and all the reviewer for their suggestion/corrections . I did a very last push to fix a minor bug that was causing troubles during the reconstruction of the solution for parallel computation. Waiting for regression tests before merging in...,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/322#issuecomment-258884470:228,test,tests,228,https://su2code.github.io,https://github.com/su2code/SU2/pull/322#issuecomment-258884470,1,['test'],['tests']
Testability,"Thanks Ruben, everything looks good to me.; It is a nice clean up and the implementation of the added capabilities is aligned to what we already have, so I don't see any issue with merging this in.; I just had a minor comment but it is just about a coding style preferences.; We can merge this in as soon as the regression tests pass. Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/638#issuecomment-459389510:323,test,tests,323,https://su2code.github.io,https://github.com/su2code/SU2/pull/638#issuecomment-459389510,1,['test'],['tests']
Testability,"Thanks Suman,. My suggestion is the following… we have really never performed a detailed test of the CUSP scheme. As far I remember it was a really quick implementation. And it looks to see that you know SU2 and you are ready to contribute … Would it be possible for you to create a pull request with the changes, including a test case? if it is a bug, your change will pay off immediately. Best,; Francisco. > On Jul 12, 2017, at 10:03 PM, SumanVajjala <notifications@github.com> wrote:; > ; > @hlkline <https://github.com/hlkline> Thank you for your reply. We have been using SU2 for over 2 years and only recently we started looking at the code to understand some of the issues we were facing. To clarify I did not report it as a bug. I do understand that the flow variables obtained by Riemann invariants (line 10433) are set as the primitive variables for the boundary point. But when it came to the flux calculation I saw Jacobian_j and that triggered my question. I know that each scheme has a ComputeResidual routine but for this specific case what routine is being used? Is it the one in numerics_template.cpp? And I still do not understand why Jacobian_j should play a role in the flux calculation! I will be glad if you can kindly comment on it.; > ; > Finally, can I now treat that this is a non-issue?; > ; > @fpalacios <https://github.com/fpalacios> @oleburghardt <https://github.com/oleburghardt> @hlkline <https://github.com/hlkline> By the way don't you think Nu_c in line no 729 in numerics_direct_mean.cpp should be Nu_c = (1.0-Beta)*LamdaNeg? This was the other probable bug I was referring to within SU2 found in CUSP implementation.; > ; > Regards; > Suman; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/issues/405#issuecomment-314971522>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AccuRkqESRvP7dcREH5t_PKPioRlkERhks5sNaUSgaJpZM4OKV38>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/405#issuecomment-315096146:89,test,test,89,https://su2code.github.io,https://github.com/su2code/SU2/issues/405#issuecomment-315096146,2,['test'],['test']
Testability,"Thanks Tom, actually most of the work was already done in September, lately I've been busy with other stuff and that's why it took so long before this pull request. Regarding the upcoming release of the sliding meshes, before the AIAA, we can surely think about including this one too. ; It still has some limitations, for instance it doesn't work with periodic boundaries, though Antonio and I are working on it in separate branches, but I've tested it for a bunch of different flow configurations and it seems to be quite robust.; Basically, after this pull request the code will be able to carry out computations using an arbitrary number of zones, both Euler/RANS, serial/parallel, using the nearest neighbour approach and the one from Rinaldi. By the way, it doesn't really matter to me if this feature is included in the upcoming release or in the one later, I just would like to have this on the develop so that I don't have to merge and fix conflicts any time the branch gets updated.; So some of the modification I made will be stable and I can move to the next step (the adaptive sliding meshes).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/389#issuecomment-301007972:444,test,tested,444,https://su2code.github.io,https://github.com/su2code/SU2/pull/389#issuecomment-301007972,1,['test'],['tested']
Testability,"Thanks Tom, what was the problem with the regression test? I'm going to add some other small fixes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/519#issuecomment-379600546:53,test,test,53,https://su2code.github.io,https://github.com/su2code/SU2/pull/519#issuecomment-379600546,1,['test'],['test']
Testability,"Thanks a lot Arne,. We will accept the implementation as soon as it pass the regression tests. . And, thanks for the AppVeyor suggestion, we´ll take a look at the software.; If you see any other problem under windows, please do not hesitate to contact us. Best,; Francisco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/332#issuecomment-323228322:88,test,tests,88,https://su2code.github.io,https://github.com/su2code/SU2/pull/332#issuecomment-323228322,1,['test'],['tests']
Testability,"Thanks a lot for your support, @pcarruscag. . I run the other test cases this morning and I noticed there is a very small difference in the sensitivities around the 10th significant figure (in the order of the updates you made on the discrete adjoint airfoil case). Given that the order of magnitude of this difference remains consistent even when extending the simulation, I updated the test values. I leave here the [reference to the previous state](https://github.com/su2code/SU2/commit/654ba3dfc207e25c31da9c09860224ad4044a610) for our records. . If there are no comments against it in the next day or so, I will be merging in this PR next, as it just puts back some functionality that was removed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-543067888:62,test,test,62,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-543067888,2,['test'],['test']
Testability,"Thanks a lot, @TobiKattmann, for this fix,. I was able to reproduce the error locally as well and the fix makes perfect sense to me. I've only added one small statement:; `config_container[iZone]->SetiInst(INST_0);`; to SU2_SOL in cases with single instance, to enforce that iInst = config->GetiInst() in CBaselineSolver::LoadRestart() receives the correct value. @economon as of now, I think there are no multizone-multiinstance cases available in develop. When that comes through, it would only require an extra loop on iInst and the correct setting of; `config_container[iZone]->SetiInst(iInst);`; in the very same fashion as it is done for harmonic balance (lines 357-380 in SU2_SOL.cpp). Then, inside the LoadRestart routine, the correct container position is read in line 3939 of solver_structure.cpp,; `unsigned short iInst = config->GetiInst();`; and used onwards. . I'll wait until the tests pass for this latest commit and then merge it in by Monday morning if there are no further comments.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/572#issuecomment-417633741:895,test,tests,895,https://su2code.github.io,https://github.com/su2code/SU2/pull/572#issuecomment-417633741,1,['test'],['tests']
Testability,"Thanks a lot, Tobi! I did find the file which is the only one has SOLVER=HEAT_EQUATION_FVM before and got an error output in the boundary condition. Your answer told me how to settle the BC error. I will have a try and test it later.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/783#issuecomment-527392713:219,test,test,219,https://su2code.github.io,https://github.com/su2code/SU2/issues/783#issuecomment-527392713,1,['test'],['test']
Testability,Thanks already @pcarruscag for the quick suggestions :+1: Let me know if there are more :). 2 linked PR's go with this:; 1. The testases PR needs to be merged before this to make sure the reg tests works (Edit: Done and reg tests work (except hybrid_par_AD...)); 2. The website update (...has more time ;). Otherwise I am happy so far with this PR,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1530#issuecomment-1025887685:128,test,testases,128,https://su2code.github.io,https://github.com/su2code/SU2/pull/1530#issuecomment-1025887685,3,['test'],"['testases', 'tests']"
Testability,"Thanks for adding the description, Heather. I think this is a very nice contribution.. we’re working on the regressions and will pull this in once we have everything straightened out (and this branch passes). In the meantime, you got me thinking: the scale, rotate, translate options might be confusing now if a user doesn’t know whether to include the markers or not. Perhaps this is a chance for separating some of the “design” options from “mesh” options. One way I could see us do this is by moving the implementation I had just committed for the “volume” scale, rotate, and translate options over into the SU2_MSH executable, which might be a more logical home for it. However, this would require adding an extra set of config options for reading in a scale/rotate/translate options for SU2_MSH. The nice thing here is that we keep the intent separate, i.e., only design variables are listed with the other design variables while the mesh transformations are elsewhere. A different, possibly simpler way would be to just create separate names for these two types in the list of available options so that there is no ambiguity. Any thoughts?. On Aug 16, 2015, at 9:21 AM, Heather Kline <notifications@github.com<mailto:notifications@github.com>> wrote:. Some illustrative images/output in case my description was hard to understand:; [image]https://cloud.githubusercontent.com/assets/5167760/9294050/52a764b2-440f-11e5-8681-b68318da0ce7.png. SU2_DEF output when only ""airfoil"" marker included:. ------------------------- Surface grid deformation ----------------------; Performing the deformation of the surface grid. ----------------------- Volumetric grid deformation ---------------------; Performing the deformation of the volumetric grid. # FGMRES residual history. # Residual tolerance target = 4.14044e-11. # Initial residual norm = 15.8102. ```; 0 1; 50 2.17385e-06; 100 1.08998e-10; ```. # FGMRES final (true) residual:. # Iteration = 105: |res|/|res0| = 3.50764e-11. Non-linear iter.: 1/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/187#issuecomment-132065067:653,log,logical,653,https://su2code.github.io,https://github.com/su2code/SU2/pull/187#issuecomment-132065067,1,['log'],['logical']
Testability,Thanks for adding the tests. Looks good to me! Merging now... Keep up the excellent work.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/234#issuecomment-179380884:22,test,tests,22,https://su2code.github.io,https://github.com/su2code/SU2/pull/234#issuecomment-179380884,1,['test'],['tests']
Testability,"Thanks for bringing this to our attention. Would you like to submit a pull request with this change? ; It is a little more work on your part [see the developer section of the SU2 github wiki for further instructions], but this way your contribution can be merged in after passing some regression tests, and since this is only a couple of lines to change it is a good way to get used to the pull request system if you haven't used that before.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/307#issuecomment-247908956:296,test,tests,296,https://su2code.github.io,https://github.com/su2code/SU2/issues/307#issuecomment-247908956,1,['test'],['tests']
Testability,"Thanks for bringing up this issue. It is interesting... . As Heather mentioned, is there any concern that when writing large files the lack of an endl will cause the buffer to become too large at some point (before the file gets closed and clears the stream automatically)?. Unfortunately, we do not have any regression tests that cover the output files at the moment, so it is difficult to gauge the impact of the changes, although it would be straightforward to add some tests for SU2_CFD and SU2_SOL that diff output files. Have you been able to verify that all CSV, Tecplot/ParaView files, and force breakdown files work appropriately?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/281#issuecomment-223806287:320,test,tests,320,https://su2code.github.io,https://github.com/su2code/SU2/pull/281#issuecomment-223806287,2,['test'],['tests']
Testability,"Thanks for checking that, do you think you can open a PR? Then we can check if it works in our ARM regression tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2159#issuecomment-1799194731:110,test,tests,110,https://su2code.github.io,https://github.com/su2code/SU2/issues/2159#issuecomment-1799194731,1,['test'],['tests']
Testability,"Thanks for cleaning things up, Salvo. I just fixed up some issues on this pull request due to other activity in develop that was in conflict. I would recommend that you give this new version a try with your own tests when you have a chance. Once the checks pass, we'll merge this into develop.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/207#issuecomment-153229382:211,test,tests,211,https://su2code.github.io,https://github.com/su2code/SU2/pull/207#issuecomment-153229382,1,['test'],['tests']
Testability,"Thanks for digging around on this @clarkpede. I don't expect the original author will be able to chime in, but I would say we can investigate the differences w.r.t. how the tke is included. . I have tested removing it from the total energy definition for some low speed cases while I was debugging, and it had almost no impact. As stated above, we know that including in the mean flow stress tensor does noticeably impact the solution. I have not tried including it in the energy equation. I will reopen this issue, and we can continue the discussion here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797#issuecomment-548890892:199,test,tested,199,https://su2code.github.io,https://github.com/su2code/SU2/issues/797#issuecomment-548890892,1,['test'],['tested']
Testability,"Thanks for finding a way to speed things up.; With regards to the tolerance, it would be preferable to update the test values rather than the tolerance, since especially for changes in the integrated values rather than the residual values, small changes over the small number of iterations could indicate a problem that will grow over time. A very small number of iterations is used in the tests in order to save time for the tests. . Are the changes you quote for the original precision, or for the quad-precision? If the latter, and maybe either way, I would recommend running the case for a larger number of iterations to make sure that there aren't larger differences growing over time that would effect the output, maybe due to some other change in the code that hasn't been identified yet. If you are interested in having your changes included in the code, maybe this discussion should move to a pull request, where folks on the su2 dev team could easily view changes in the code.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/347#issuecomment-276431901:114,test,test,114,https://su2code.github.io,https://github.com/su2code/SU2/issues/347#issuecomment-276431901,3,['test'],"['test', 'tests']"
Testability,"Thanks for finishing up the implementation, @VivaanKhatri! I am looking forward to reviewing this very soon. Do you have a test case to verify things are working? Even just a simple flat plate like in the paper so that we can put it under regression control?. @rsanfer: your comment reminded me about our earlier attempts to fix up the indentation issues on the fix_indentation branch. Do you think this is something we can revive to provide scripts for automatically fixing this issue once and for all? Or do we need to find a different approach?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/530#issuecomment-387921905:123,test,test,123,https://su2code.github.io,https://github.com/su2code/SU2/pull/530#issuecomment-387921905,1,['test'],['test']
Testability,"Thanks for fixing this Tim! I compiled on my Mac too and it looks good to; me. I think we can merge it in and remove the flag for HB and include its; regression test. On Fri, Jan 6, 2017 at 5:05 PM, Tim Albring <notifications@github.com>; wrote:. > Forgot to mention it, we checked it already on OSX (we found someone with; > a macbook :)) here and it works. But I would of course appreciate it if; > other people can give it a try!; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/351#issuecomment-270887173>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AHenIEqrTNWZq2BWLgo_rx7bqiFDkOZCks5rPicRgaJpZM4Lck3G>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/351#issuecomment-270930783:161,test,test,161,https://su2code.github.io,https://github.com/su2code/SU2/pull/351#issuecomment-270930783,1,['test'],['test']
Testability,"Thanks for fixing up those conflicts, Daniel. I'm merging this in now, and I'll be in touch directly about getting a test case set up for the new low-Mach correction.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/214#issuecomment-166225640:117,test,test,117,https://su2code.github.io,https://github.com/su2code/SU2/pull/214#issuecomment-166225640,1,['test'],['test']
Testability,"Thanks for giving it a try but on both machines I get a segfault at roughly the same spot (following the screen output). Unfortunately the stack traces I get are somewhat useless (I literally get `??` on my private machine) and differ between machines so I cannot really say exactly where. At least the the point of failure on both machines is consistent ... that's really weird that the debugger ""bugs out"" here . Tested with your this branch on coupled_cht/incomp_2d",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1126#issuecomment-740089364:415,Test,Tested,415,https://su2code.github.io,https://github.com/su2code/SU2/pull/1126#issuecomment-740089364,1,['Test'],['Tested']
Testability,Thanks for mentioning this. I will deal with this definitely before the release. Maybe I am gonna add a small test case which just reads the config_template.cfg to check whether it is up-to-date.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/772#issuecomment-524737860:110,test,test,110,https://su2code.github.io,https://github.com/su2code/SU2/issues/772#issuecomment-524737860,1,['test'],['test']
Testability,"Thanks for merging Tim, but you did not solve correctly the conflict on parallel_regression.py. We do not test the external FSI coupling for now, so it has to be removed ;). Everything is up to date now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/357#issuecomment-272124052:106,test,test,106,https://su2code.github.io,https://github.com/su2code/SU2/pull/357#issuecomment-272124052,1,['test'],['test']
Testability,"Thanks for opening the PR! Is this a work-in-progress? If yes, either use WIP in the title or change it to a draft. . Two other things:. 1. Please add the test case meshes to the develop branch of the TestCase repository, otherwise the regression tests won't find them. I just removed them from the master branch.; 2. Something seems a little bit off here. I don't know why git thinks that a lot the commits are new (although they are already in develop). I guess the reason is that develop has not been merged for a very long time ...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1006#issuecomment-635921323:155,test,test,155,https://su2code.github.io,https://github.com/su2code/SU2/pull/1006#issuecomment-635921323,3,"['Test', 'test']","['TestCase', 'test', 'tests']"
Testability,"Thanks for putting the tests together, David. We'll get this merged asap to ensure that future commits do not break the wrapper. @talbring, when you have a moment, can you please verify that the small changes to preconfigure.py won't hurt anything?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/298#issuecomment-239576578:23,test,tests,23,https://su2code.github.io,https://github.com/su2code/SU2/pull/298#issuecomment-239576578,1,['test'],['tests']
Testability,"Thanks for rebases; A couple of notes: ; - the reference to the github issue in the comments may be confusing to others as to which part of that thread is being referenced. To make sure that future developers are aware of import issues, maybe just one line like 'recommended import format compatible with both Python 2.7 and 3', if you feel a comment really is necessary there.; - on the regressions: I know it may seem like small differences, but the fact that they are different with just changes to the python code is very concerning, and in some of the tests the differences are quite large (specifically discadj_euler_py and directidff_euler_py). If they are calling the exact same C++ executables and performing the exact same computations the result should be the same. If this is something going on behind the scenes within the python packages that cannot be avoided, we need to understand what that difference is, and where it is coming from. ; The only explanation I can think of off the top of my head for why the output could be different with only changing python code, is if some function previously imported from a different package is using single-precision instead of double-precision for some arithmetic operation or file io. If what you changed is actually providing GREATER precision that's fantastic, but we need to know for sure either way.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/260#issuecomment-224031436:557,test,tests,557,https://su2code.github.io,https://github.com/su2code/SU2/pull/260#issuecomment-224031436,1,['test'],['tests']
Testability,"Thanks for reminding me - I am going to switch that now; if my next push passes the tests (in a few minutes, after I test it on my system) I'm fine with merging after that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/342#issuecomment-267195699:84,test,tests,84,https://su2code.github.io,https://github.com/su2code/SU2/pull/342#issuecomment-267195699,2,['test'],"['test', 'tests']"
Testability,"Thanks for spending the time on this, @petebachant. I just fixed a couple of bugs in the python scripts in another PR, but I don't think they will affect this too much. Btw, do you have access to a sizable distributed machine with Python 3+ installed for testing? It would be great to know if this is working in a production environment, while keeping backward compatibility with Python 2+, since it can sometimes be hard to get new Python installations on clusters.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-321731944:255,test,testing,255,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-321731944,1,['test'],['testing']
Testability,"Thanks for taking a shot at this. Just let us know if you need some help, and I am sure several of us can help with the testing. I can try on multiple systems here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586#issuecomment-426508949:120,test,testing,120,https://su2code.github.io,https://github.com/su2code/SU2/pull/586#issuecomment-426508949,1,['test'],['testing']
Testability,Thanks for testing :D Now it should work.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745#issuecomment-520387997:11,test,testing,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/745#issuecomment-520387997,1,['test'],['testing']
Testability,"Thanks for testing 👍 it's only a bit more work, just needs a quick test.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1566#issuecomment-1073907081:11,test,testing,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/1566#issuecomment-1073907081,4,['test'],"['test', 'testing']"
Testability,"Thanks for testing, part of the NK options is a period where instead of NK we use the normal quasi-Newton approach.; I can't give too much detail on this, but we lack a good startup strategy, ideas from papers on NK approached could be useful even for the normal solver.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2379637599:11,test,testing,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2379637599,1,['test'],['testing']
Testability,"Thanks for testing, we'll put the fix in the new version",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2058#issuecomment-1604941297:11,test,testing,11,https://su2code.github.io,https://github.com/su2code/SU2/issues/2058#issuecomment-1604941297,1,['test'],['testing']
Testability,Thanks for testing. Both gradient methods use all the neighboring points. Green Gauss has special treatment for boundary surfaces and it must be particularly less accurate than least squares at these points.; With that said the way we handle intersecting boundaries is very important. For this case https://su2code.github.io/vandv/swbli/ I had to add an Euler wall after the inlet to prevent the kind of issues you are seeing.; My concern is that making things locally first order is just masking the problem with numerical dissipation.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2285#issuecomment-2127331419:11,test,testing,11,https://su2code.github.io,https://github.com/su2code/SU2/issues/2285#issuecomment-2127331419,1,['test'],['testing']
Testability,"Thanks for testing. Yep I'm not an expert either, but hopefully we'll have this tested on 4/5 systems.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1342#issuecomment-890918675:11,test,testing,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342#issuecomment-890918675,2,['test'],"['tested', 'testing']"
Testability,Thanks for that - I didn't realise that my copy of emacs was doing the replace on saving. I made the edit then reran the above steps. It seems that SU2_BASE now installs fine and SU2_AD only presents the initial error. I assume this means SU2 is up and running? I'll try some test cases to confirm. Thanks for the support!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/447#issuecomment-333753697:276,test,test,276,https://su2code.github.io,https://github.com/su2code/SU2/issues/447#issuecomment-333753697,1,['test'],['test']
Testability,"Thanks for that @dkavolis, I will put all that in a memory allocation toolbox as it may be useful somewhere else. Where in boost did you get it from so I can reference it?; We will need a volunteer to test it on Mac and Win32, I do not have access to any of those platforms. Is the aligned_alloc from stdlib OK for Win64?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/813#issuecomment-554393825:201,test,test,201,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-554393825,1,['test'],['test']
Testability,"Thanks for the changes, @pcarruscag. I like PRs like this with 797 additions and 3220 deletions maintaining functionality :+1: The incompressible part of the FEA problem was, like some other features in the code, 90% ready but never totally finished, so to avoid confusion in users and developers and ease maintenance I think it's better for it to be removed until someone can take over and finalize the implementation.; Let me know when you've had some time to put that testcase, and we can get this merged in.; Cheers,; Ruben",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/681#issuecomment-496400629:471,test,testcase,471,https://su2code.github.io,https://github.com/su2code/SU2/pull/681#issuecomment-496400629,1,['test'],['testcase']
Testability,"Thanks for the clarification!. Best,; Francisco. > On Apr 22, 2017, at 5:01 PM, Heather Kline <notifications@github.com> wrote:; > ; > Thanks; > The discrete adjoint can also be used with combined objectives, and uses the same config specifications. It may not be clear from this pull request since this functionality was added in a previously - when multiple objectives (limited to objectives defined inside the CFD solver) are specified, they are added together (with specified weights) in the CFD solver into the 'COMBO' output to history. This variable is registered for the discrete adjoint solver.; > An example of this can be seen in the serial_regression_AD.py, test name 'discadj_multi_py'.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/385#issuecomment-296409557>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AEpklrJ5WQ8CoWJNAy_FVZ0bbYN000s2ks5rypTpgaJpZM4MgM_e>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/385#issuecomment-296409876:670,test,test,670,https://su2code.github.io,https://github.com/su2code/SU2/pull/385#issuecomment-296409876,1,['test'],['test']
Testability,"Thanks for the comment. ; SInce the regression tests all pass, I wonder if this is something that turns up in the current develop branch? This pull request didn't modify the SU2_SOL.cpp file. Can you confirm that the problem does not exist in the develop branch?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/312#issuecomment-252034184:47,test,tests,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/312#issuecomment-252034184,1,['test'],['tests']
Testability,"Thanks for the comments guys.; I think for preconditioners CSysMatrix already gives default hooks to attach external solvers to, there is a build method and a compute method, and that was the logic I followed for this.; All the operations I do inside the wrapper are solver specific, the only thing that could eventually be abstracted from there is the conversion between our matrix format and the one PaStiX requires (which is a mere re-ordering so the column indices are ordered according to global index in linear partitioning, unfortunately this is enough to warrant a full copy).; My reason not to have gone with PETSc is [this table](https://www.mcs.anl.gov/petsc/documentation/linearsolvertable.html) that shows very little compatibility with the SU2 block sparse matrix format.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771#issuecomment-524942947:192,log,logic,192,https://su2code.github.io,https://github.com/su2code/SU2/pull/771#issuecomment-524942947,1,['log'],['logic']
Testability,"Thanks for the commit tackling the hardcoded allocation. And of course thanks for all the other suggestions and comments, made the code a lot better :bouquet: very much appreciated. Once the reg tests pass I'll merge this in :+1:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536#issuecomment-1051838195:195,test,tests,195,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1051838195,1,['test'],['tests']
Testability,"Thanks for the contribution, that sounds like it might be a useful change if it improves performance.; Do you have any benchmarks for large cases (where frequent flushes may cause a larger performance penalty), or for cases on a non-NFS cluster? Aka, how long it took to write the large file you mention with or without this change?. I've seen some forum posts recommending using mostly ""\n"" for performance, with occasional ""endl"" to keep that buffer from being to large. It is recommended not to use endl too much with file i/o: ; http://demin.ws/blog/english/2012/04/25/endl-vs-new-line/. However, it looks like that file didn't have an endl at the end - so perhaps if you have the time you could test the performance change if you change just the last ""\n"" to ""endl""?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/281#issuecomment-223457468:119,benchmark,benchmarks,119,https://su2code.github.io,https://github.com/su2code/SU2/pull/281#issuecomment-223457468,2,"['benchmark', 'test']","['benchmarks', 'test']"
Testability,"Thanks for the explanation @suargi . I would personally advocate for that the testcases should converge to some reasonable solution people might use it as a starting point (copy the cfg and doing mild adaptions) for their own stuff. And the Testcases show off the capabilities to some degree, to do so, convergence is beneficial. But as we have a bunch of working 2D airfoils in regression already I recon that adding a clear explanation and warning to the cfg as suggested by Pedro is fine. Otherwise you might try to bisect the AoA ... maybe there is a value that triggers negative SA and does not diverge :thinking: . Knowingly adding a diverging test without a clear warning is not good imo :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1559#issuecomment-1067977083:78,test,testcases,78,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067977083,3,"['Test', 'test']","['Testcases', 'test', 'testcases']"
Testability,"Thanks for the fast reply! I changed the hardcoded 2 (just as a remark: the hardcoded values also appear in the calculations), added myself as an author and inserted some lines for throwing an error if the issue in #1565 occurs. I did not know exactly where to put it best. . Concerning a regression test: I strongly support the idea of introducing an axisymmetric regression test. However, I was using a testcase from @bigfooted , and I never set up such a test case on my own. There do not seem to be any axisymmetric pipe setups in the Testcases folder so far. @bigfooted , could we maybe use your mesh for the jet flow test case and, if necessary, switch to a standard flow setup?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1571#issuecomment-1075092276:300,test,test,300,https://su2code.github.io,https://github.com/su2code/SU2/pull/1571#issuecomment-1075092276,6,"['Test', 'test']","['Testcases', 'test', 'testcase']"
Testability,"Thanks for the feedback. . I was not able to find any examples myself either. It looks like this is a feature that has been around for a while, but maybe has gotten lost in some updates. I will work on setting up a small test case for this and the FAN_FACE_MDOT and submit a PR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1607#issuecomment-1100150640:221,test,test,221,https://su2code.github.io,https://github.com/su2code/SU2/issues/1607#issuecomment-1100150640,1,['test'],['test']
Testability,"Thanks for the fix! One more small request... can you please push this to our new 'develop' branch instead? We are switching up our branching strategy to make for a better experience, and will be using the develop branch for staging and testing before pushing code releases to the master. Also, Sean had mentioned that you have done some nice isothermal validations. If you are interested, we would be happy to make a regression test based on one of your test cases (to ensure that these features remain well-tested in SU2). If you provide a config/mesh, we can make the regression test for you very quickly.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/71#issuecomment-56557046:237,test,testing,237,https://su2code.github.io,https://github.com/su2code/SU2/pull/71#issuecomment-56557046,5,['test'],"['test', 'tested', 'testing']"
Testability,"Thanks for the fix, Tim. One area that I had to modify a bit was the SetSensitivity() routine that you just modified.. does it all look ok to you in your discrete tests? Most of the ones in the repo were working fine for me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/379#issuecomment-282792870:163,test,tests,163,https://su2code.github.io,https://github.com/su2code/SU2/pull/379#issuecomment-282792870,1,['test'],['tests']
Testability,"Thanks for the fixes, Francisco. I'll be working to fix up the failing tests. I still have the old meshes you mention, so I can add those to the tests that we already have for mesh deformation with the RAE 2822 and ONERA M6.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/278#issuecomment-222780380:71,test,tests,71,https://su2code.github.io,https://github.com/su2code/SU2/pull/278#issuecomment-222780380,2,['test'],['tests']
Testability,"Thanks for the fixes, Francisco. The continuous adjoint tests are now failing, but I am guessing that it is something simple with the changes to the config option. Can you please take a look when you have a moment?. Couldn't agree more about keeping an eye on the Python scripts. We'll chat about it this week at the developer meeting (we need regressions for the Python scripts). More on that to come.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/244#issuecomment-191571633:56,test,tests,56,https://su2code.github.io,https://github.com/su2code/SU2/pull/244#issuecomment-191571633,1,['test'],['tests']
Testability,"Thanks for the note! Indeed, we are aware of this issue, and we are already testing a patch that fixes it. We should be pushing the fix any day to the master, and I’ll note it here/close the thread when that happens. > On Apr 23, 2015, at 5:40 AM, arrow206 notifications@github.com wrote:; > ; > I am using SU2 version 3.2.8. I have tried all the steady-state Euler and Navier-Stokes test cases and they worked fine. However, none of the demos for Rotating (NACA and CAradonna) are working. Both are diverging. I have decreased the Courant number from 4 to 2 and increased the number of implicit iterations. There is still divergence. In the cfg file, I removed all the variables related to the dynamic mesh motion nad put a freestream of 0.8. SU2 did not diverge. Is there a specific setting to put in the cfg file in order to get convergence for the Rotating test cases; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/su2code/SU2/issues/167.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/167#issuecomment-95671956:76,test,testing,76,https://su2code.github.io,https://github.com/su2code/SU2/issues/167#issuecomment-95671956,3,['test'],"['test', 'testing']"
Testability,"Thanks for the quick fix, Tim. . Kudos to Ruben and Heather for all of the exciting contributions packed in this pull request: this is the culmination of months of hard work on their sides, and the collaboration has been very fruitful (just count the commits!). The tests are passing now, but I have one small request before we merge everything. If you check out the details of the build in Travis CI, there are many warnings. Can you please clean these up? They are mostly unused variables and the like. Otherwise, things are looking pretty good to me...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/234#issuecomment-178807682:266,test,tests,266,https://su2code.github.io,https://github.com/su2code/SU2/pull/234#issuecomment-178807682,1,['test'],['tests']
Testability,"Thanks for the reply, I'll use feature_adap. Also very appreciated the required and optional command list.; As far as the run is concerned, it exits during the first mesh adaption (no error on the console though). The amg.out is quite long and there are a lot of info. Let me briefly summarize the case I'm testing:; - Supersonic inviscid 2D axialsymmetric cylinder.; - mesh adaption Mach based.; - no shape optimization.; - mesh adaption (PYADAP_FLOW_ITER= (2999, 4999, 6999)); - coarse mesh (PYADAP_COMPLEXITY= (20000, 60000, 120000)); - ITER = 10000. I would expect then the solver to start, reach iteration number 2999, adapt the flow mesh, then run until 4999, adapt, 6999 adapt, reach 10000 iterations.; In the :; `adapt/ini/log.out` ; as far as I can tell it reaches 10000 iterations, which is quite unexpected, maybe my problem arise due to mismatching options in the *.cfg file, is there any applicable *.cfg file to start from?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619502763:307,test,testing,307,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619502763,2,"['log', 'test']","['log', 'testing']"
Testability,Thanks for the review :) Once the tests pass with this tiny commited regression value change for the hybrid case - I'll merge this in,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1601#issuecomment-1095017256:34,test,tests,34,https://su2code.github.io,https://github.com/su2code/SU2/pull/1601#issuecomment-1095017256,1,['test'],['tests']
Testability,"Thanks for the review Pedro. Most of the regression tests pass now as well. The dynamic FSI reg tests were updated for the serial and parallel tests since the new velocity bc brings about a change for them inherently. The hybrid regression tests haven't been changed yet, but they are diverging in the tests to begin with. It is very likely that some specific calls for the hybrid implementation might be missing. I tried to follow the existing implementation style but I'm not sure what might be missing/wrong. Can you suggest anything for me to try or look for?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-822054258:52,test,tests,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-822054258,5,['test'],['tests']
Testability,"Thanks for the reviews guys. At the moment the optimization framework does not support the topology variables, there is a script in SU2_PY for this feature that runs a testcase with hardcoded parameters...; It is not an easy thing to run a tutorial for :/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/752#issuecomment-524374294:168,test,testcase,168,https://su2code.github.io,https://github.com/su2code/SU2/pull/752#issuecomment-524374294,1,['test'],['testcase']
Testability,"Thanks for the suggestion and I am preparing for a test.; As far as I understand it, I just find that to get the absolute value of r_ij ( showed in the highest equation) in this part of code is unnecessary. The cross-product operation is to find the grid vector mostly parallel to the vorticity vector and the absolute value may cause a nonphysical recognition.; @EduardoMolina, I don't know if I got it wrong and wish more guidance,.; ```; for (auto iDim = 0u; iDim < nDim; iDim++){; delta[iDim] = fabs(coord_j[iDim] - coord_i[iDim]);; }; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1462#issuecomment-988581348:51,test,test,51,https://su2code.github.io,https://github.com/su2code/SU2/issues/1462#issuecomment-988581348,1,['test'],['test']
Testability,"Thanks for the technical exchange, @aeroamit @EduardoMolina, this is nice to see. @aeroamit : do you have any specific cases that use the different schemes you are submitting? Could be good to see the differences and also use them for regression testing (our matrix could prob be better at covering more convective schemes).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/631#issuecomment-447080026:246,test,testing,246,https://su2code.github.io,https://github.com/su2code/SU2/pull/631#issuecomment-447080026,1,['test'],['testing']
Testability,"Thanks for the update - I'll give it a go and get back to you. Are there any tests I can run to check functionality once complete? . Kind regards,; Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/447#issuecomment-332764044:77,test,tests,77,https://su2code.github.io,https://github.com/su2code/SU2/issues/447#issuecomment-332764044,1,['test'],['tests']
Testability,"Thanks for the update! . If you have a minute, can you please merge this into our new 'develop' branch instead? We are switching up our branching strategy to make for a better experience, and will be using the develop branch for staging and testing before pushing code releases to the master.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/33#issuecomment-56557934:241,test,testing,241,https://su2code.github.io,https://github.com/su2code/SU2/pull/33#issuecomment-56557934,1,['test'],['testing']
Testability,"Thanks for the update. I gave the new version a try. Unfortunately one of my machines is acting up and i can't go to the office to fix it so I ran the tests on 3 machines using the 10G ethernet. I saw the warning about a backup strategy for edge coloring, but it ran just fine. The performance for 3 nodes was about 30% faster than 2 nodes (compared to ideal of 50% faster). Whenever my office opens back up, I'll get the 4th machine back online and i can try the 4 node version, which is the one that required 8192 for edge coloring.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-615329675:151,test,tests,151,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-615329675,1,['test'],['tests']
Testability,"Thanks for this pull request! LGTM. I have just updated the branch with develop and the tests are passing, however I will wait for @economon to give his opinion as it was originally his implementation. Only a minor comment: there are some files in which white spaces are introduced in blank lines, probably done automatically by the editor (e.g., numerics_direct_mean.cpp and solver_direct_mean.cpp). This is not a problem in itself, but I have experienced this can generate problems with future merges.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/530#issuecomment-387719885:88,test,tests,88,https://su2code.github.io,https://github.com/su2code/SU2/pull/530#issuecomment-387719885,1,['test'],['tests']
Testability,"Thanks for your answers. ; Sure I agree not to accept until perfectly clean ;); Unfortunately, I cannot use _regression on all test cases (not enough memory for some test cases) and travis test do not run on my fork because only branch develop is enabled in travis file. ; How do you work on your side to benefit from travis ci without pushing changes to develop branch ?; I can modify travis file locally in a test branch, do you suggest other approaches ?; Thanks a lot",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-210380381:127,test,test,127,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-210380381,4,['test'],['test']
Testability,"Thanks for your comments @economon ! I have done some updates with develop, removed warnings, and I think this is good to go once the tests pass.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/585#issuecomment-442003606:134,test,tests,134,https://su2code.github.io,https://github.com/su2code/SU2/pull/585#issuecomment-442003606,1,['test'],['tests']
Testability,Thanks for your comments. I checked for a 3D test case (OneraM6) and it works fine.; It seems to be giving error only for one of my particular case where v7.0.6 work but not later version for SURFACE_TECPLOT.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1182#issuecomment-771503256:45,test,test,45,https://su2code.github.io,https://github.com/su2code/SU2/issues/1182#issuecomment-771503256,1,['test'],['test']
Testability,"Thanks for your fast answers. We are definitely going to use SU2 here and I wanted to be sure that it is working correctly. We will look to use its inverse design capability too (provide Cp target) . I have tried the test case on the NACA 0012 but it did not work.; From your CFD forum, it seems it could be related to the scipy library used. I will look more to be sure if I am doing things correctly before making any note. Francois. From: Thomas D. Economon [mailto:notifications@github.com]; Sent: Thursday, April 23, 2015 2:01 PM; To: su2code/SU2; Cc: Fortin, Francois; Subject: Re: [SU2] arrrow206 (#167). Thanks for the note! Indeed, we are aware of this issue, and we are already testing a patch that fixes it. We should be pushing the fix any day to the master, and I’ll note it here/close the thread when that happens. > On Apr 23, 2015, at 5:40 AM, arrow206 <notifications@github.com<mailto:notifications@github.com>> wrote:; > ; > I am using SU2 version 3.2.8. I have tried all the steady-state Euler and Navier-Stokes test cases and they worked fine. However, none of the demos for Rotating (NACA and CAradonna) are working. Both are diverging. I have decreased the Courant number from 4 to 2 and increased the number of implicit iterations. There is still divergence. In the cfg file, I removed all the variables related to the dynamic mesh motion nad put a freestream of 0.8. SU2 did not diverge. Is there a specific setting to put in the cfg file in order to get convergence for the Rotating test cases; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/su2code/SU2/issues/167. —; Reply to this email directly or view it on GitHubhttps://github.com/su2code/SU2/issues/167#issuecomment-95671956.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/167#issuecomment-95679198:217,test,test,217,https://su2code.github.io,https://github.com/su2code/SU2/issues/167#issuecomment-95679198,4,['test'],"['test', 'testing']"
Testability,"Thanks for your feedback! I agree, `OMP_NUM_THREADS` is better than having the number of threads in the constructor. I adapted `disc_adj_flow` and `disc_adj_fea` for MPI and added both to parallel AD and hybrid AD tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1966#issuecomment-1472198978:214,test,tests,214,https://su2code.github.io,https://github.com/su2code/SU2/pull/1966#issuecomment-1472198978,1,['test'],['tests']
Testability,"Thanks for your post, it is good to know about this as our regression tests use relatively small sized problems. ; I have looked through some of the past regression test history, the regression tests took a bit more time after adding additional tests, but other than that have been fairly consistent - up or down by a minute or two, which seems to be well within the usual variance. Although the most recent release wasn't that long ago, there have been several changes to the develop branch, so if you continue to see these problems please feel free to open an issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/265#issuecomment-210971310:70,test,tests,70,https://su2code.github.io,https://github.com/su2code/SU2/pull/265#issuecomment-210971310,4,['test'],"['test', 'tests']"
Testability,"Thanks for your work, We are really looking forward to accept these changes, could you please take a look at the regression test? Thanks again, ; Best,; Francisco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/386#issuecomment-326777655:124,test,test,124,https://su2code.github.io,https://github.com/su2code/SU2/pull/386#issuecomment-326777655,1,['test'],['test']
Testability,"Thanks very much Tim, Tom and Heather for the help!. There are a couple of warnings more in CFEASolver::SetFEA_Load_Int, I will take care of them. Also, Tom, if you want to go ahead and push the meshes into TestCases/develop, I can include the regression tests before we merge, and we do all at once.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/234#issuecomment-179178926:207,Test,TestCases,207,https://su2code.github.io,https://github.com/su2code/SU2/pull/234#issuecomment-179178926,2,"['Test', 'test']","['TestCases', 'tests']"
Testability,"Thanks! I was confused because the source distribution had a TestCases directory with a partial set of files. It might be less confusing if the source distribution didn't have this at all, and all the test files were in the TestCase repository. ```; Alex ; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/222#issuecomment-170710194:61,Test,TestCases,61,https://su2code.github.io,https://github.com/su2code/SU2/issues/222#issuecomment-170710194,3,"['Test', 'test']","['TestCase', 'TestCases', 'test']"
Testability,"Thanks! I would suggest to fix these issues first, in this branch, ASAP. We can also make sure that is is done before the feature_output PR. ; Summarizing we still have the following problems:. 1. SU2_SOL not working correctly in parallel for unsteady. Just one mesh partition is plotted in time.; 2. SU2_CFD crashes when restarting, due to additional lines in the restart file ; 3. The current reg tests are not able to detect this kind of problems ( we should do something for this). Any suggestion/help to fix the listed issues :) ? Of course, if you prefer, we can merge this in as it is, but still we will have those bugs in the develop.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/344#issuecomment-267317372:399,test,tests,399,https://su2code.github.io,https://github.com/su2code/SU2/pull/344#issuecomment-267317372,1,['test'],['tests']
Testability,Thanks! Works like it should. Gonna merge that as soon as tests pass.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/827#issuecomment-559492360:58,test,tests,58,https://su2code.github.io,https://github.com/su2code/SU2/pull/827#issuecomment-559492360,1,['test'],['tests']
Testability,"Thanks, @clarkpede, for this PR and for the clear explanation of the features proposed. LGTM in terms of implementation and code style. I'll just wait for @EduardoMolina to comment on the contents. I only have a couple of minor questions:. > I moved the calculation of the maximum cell width to the CPhysicalGeometry class. This makes inclusion in the central/upwind blending easier. For DES and DDES, the cell lengthscale is not dependent on the flow. So there's no need to compute it every iteration in the flow solver. I can see this approach reduces the computational cost of computing the MaxLength every time at the cost of having one more double in memory per point. However, would a call to SetMaxLength() be necessary in case of deformable meshes? . Also, from PR #532:; > As for code verification, I would propose using one of the cases examined by Travin, Stretlets, Mockett, or Xiao for comparison. (...) The cases I can see where they explicitly show the results of the blending function are: Circular cylinder at Re = 50,000 (Travin et al. 2002) (...). I guess this is the case for which you are showing the rough tests results in the Code Verification section. I am currently looking into some test cases at similar Re regimes. Are you using the unsteady compressible solver for this verification? I noticed that in Ref.[1] they use artificial compressibility, and I was wondering if we could also use this test case to look into the unsteady, incompressible (preconditioned) version of the solver (PR #514).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/552#issuecomment-403842613:878,Mock,Mockett,878,https://su2code.github.io,https://github.com/su2code/SU2/pull/552#issuecomment-403842613,4,"['Mock', 'test']","['Mockett', 'test', 'tests']"
Testability,"Thanks, @jaspe55 ! LGTM. I don't think we have any tests for the inverse design capability. Do you have a very simple test case that we can put into the regressions for this capability? I think you are working on a nozzle design.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-439496260:51,test,tests,51,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-439496260,2,['test'],"['test', 'tests']"
Testability,"Thanks, Eran. Just rerunning the tests... otherwise this looks good.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/306#issuecomment-249989661:33,test,tests,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/306#issuecomment-249989661,1,['test'],['tests']
Testability,"Thanks, Giulio and Tim. I'll look into the time out issues with Travis, as I am seeing this in other branches now too. Please let me know when you have a chance to test this. I would like to merge this and the incompressible PRs in as soon as we can.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/328#issuecomment-259759047:164,test,test,164,https://su2code.github.io,https://github.com/su2code/SU2/pull/328#issuecomment-259759047,1,['test'],['test']
Testability,"Thanks, I hope I can run some tests in the next couple of weeks and compare the performance with other implementations, especially MKL, because this gives the fastest results at the moment.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-460092205:30,test,tests,30,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-460092205,1,['test'],['tests']
Testability,"Thanks, I’ll take a look at that before the weekend,. Best,; Francisco. > On Mar 2, 2016, at 8:03 PM, Thomas D. Economon notifications@github.com wrote:; > ; > Thanks for the fixes, Francisco. The continuous adjoint tests are now failing, but I am guessing that it is something simple with the changes to the config option. Can you please take a look when you have a moment?; > ; > Couldn't agree more about keeping an eye on the Python scripts. We'll chat about it this week at the developer meeting (we need regressions for the Python scripts). More on that to come.; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/su2code/SU2/pull/244#issuecomment-191571633.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/244#issuecomment-191590831:216,test,tests,216,https://su2code.github.io,https://github.com/su2code/SU2/pull/244#issuecomment-191590831,1,['test'],['tests']
Testability,"Thanks, Jason! Can you please add the test-case in the python scripts for the regression test? You can find them in the TestCases folder.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/445#issuecomment-335889541:38,test,test-case,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/445#issuecomment-335889541,3,"['Test', 'test']","['TestCases', 'test', 'test-case']"
Testability,"Thanks, Pedro, I think that's a great idea. As you mention, we would have to work out the logistics as this would require quite a bit of implication from the community, but the extra burden on the release would be compensated by avoiding big ""updating"" operations every now and then. Also as most users only work with the released versions, so it's a way to ensure they always know what updates have happened / which new features are available.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423122949:90,log,logistics,90,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423122949,1,['log'],['logistics']
Testability,"Thanks, Tim. The code changes look ok to my eye, but I don't have a test case handy to run this through. Perhaps you or Salvo have one available to test?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/211#issuecomment-158851382:68,test,test,68,https://su2code.github.io,https://github.com/su2code/SU2/pull/211#issuecomment-158851382,2,['test'],['test']
Testability,"Thanks, this is a big deal. I have found several situations in which the volume orientation is not working correctly and I had to reorient the volumes using other software like icemcfd. I think it would be very useful to have at least one small test that was not working before and now is working thanks to this new implementation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/182#issuecomment-256554580:245,test,test,245,https://su2code.github.io,https://github.com/su2code/SU2/pull/182#issuecomment-256554580,1,['test'],['test']
Testability,"Thanks, this is a very useful contribution. . Yes, please, an example (maybe a NACA0012 in test cases optimization) is required. Best,; Francisco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/406#issuecomment-312933080:91,test,test,91,https://su2code.github.io,https://github.com/su2code/SU2/pull/406#issuecomment-312933080,1,['test'],['test']
Testability,"Thanks, with these build commands, I can reproduce the ""`2.0 == 0.7`"" unit test error in an MPICH environment, when running the test with a single MPI process (`mpirun.mpich -np 1`). For multiple MPI processes, the test passes in my current setup. The error persists when I disable OpenMP. When I use OpenMPI instead of MPICH, the test driver crashes for `-np 1` (""An error occurred in MPI_Win_create ... MPI_ERR_WIN: invalid window"") but probably that is a different issue. After some std::cout debugging, I suspect that the MPICH implementation of [`MPI_Allgatherv`](https://www.mpich.org/static/docs/v3.2/www3/MPI_Allgatherv.html) is not working as expected in the case of a single MPI process. . I would expect that if there is only a single MPI process, `MPI_Allgatherv` copies `sendcount*sizeof(scalartype)`=`recvcounts[0]*sizeof(scalartype)` bytes from `(scalartype*)sendbuf` to `(scalartype*)recvbuf+displs[0]`, where `scalartype` is the C type represented by the MPI types `sendtype`=`recvtype`. This is the behaviour I had in mind when writing the NdFlattener code. With [minimal.cpp.txt](https://github.com/su2code/SU2/files/10459977/minimal.cpp.txt) (remove the .txt), OpenMPI gives the following results:; ```bash; $ mpic++ minimal.cpp -o minimal ; $ mpirun -np 1 ./minimal; Rank 0 recvbuf = -42 100 ; $ mpirun -np 2 ./minimal; Rank 0 recvbuf = -42 100 101 ; Rank 1 recvbuf = -42 100 101 ; ```; This is in line with the expected behaviour of `MPI_Allgatherv` described above. For MPICH however, I get:; ```bash; $ mpicxx.mpich minimal.cpp -o minimal; $ mpirun.mpich -np 1 ./minimal; Rank 0 recvbuf = 100 0 ; $ mpirun.mpich -np 2 ./minimal; Rank 0 recvbuf = -42 100 101 ; Rank 1 recvbuf = -42 100 101 ; ```; as if `displs` were ignored for `-np 1`. @pcarruscag Can you confirm this observation? Do you think that my understanding of the expected behaviour of `MPI_Allgatherv` is correct?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1893#issuecomment-1397436501:75,test,test,75,https://su2code.github.io,https://github.com/su2code/SU2/issues/1893#issuecomment-1397436501,4,['test'],['test']
Testability,"Thanks. Running grep on the testcases directory it seems we do not. For fluid applications this was not an issue because the number of iterations is usually small, I am working on some structural stuff right now, I will make sure to use this linear solver once I add some testcases.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/557#issuecomment-414259961:28,test,testcases,28,https://su2code.github.io,https://github.com/su2code/SU2/pull/557#issuecomment-414259961,2,['test'],['testcases']
Testability,"Thanks; The discrete adjoint can also be used with combined objectives, and uses the same config specifications. It may not be clear from this pull request since this functionality was added in a previously - when multiple objectives (limited to objectives defined inside the CFD solver) are specified, they are added together (with specified weights) in the CFD solver into the 'COMBO' output to history. This variable is registered for the discrete adjoint solver. ; An example of this can be seen in the serial_regression_AD.py, test name 'discadj_multi_py'.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/385#issuecomment-296409557:532,test,test,532,https://su2code.github.io,https://github.com/su2code/SU2/pull/385#issuecomment-296409557,1,['test'],['test']
Testability,"Thanks; since the automatic tests are linux, could someone using windows please check this out and independently check its operation, just to make sure nothing unexpected happens?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/332#issuecomment-261839996:28,test,tests,28,https://su2code.github.io,https://github.com/su2code/SU2/pull/332#issuecomment-261839996,1,['test'],['tests']
Testability,"That is my fault.; The case was broken, I fixed it in #753 and updated the testcase repo thinking #753 would be merged shortly but merging with #774 is proving more difficult than I thought... If I can't find a solution soon I'll fix it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/801#issuecomment-541311289:75,test,testcase,75,https://su2code.github.io,https://github.com/su2code/SU2/issues/801#issuecomment-541311289,1,['test'],['testcase']
Testability,"That is the process I followed so far. Jayant Mukhopadhaya <notifications@github.com> escreveu no dia quarta,; 2/10/2019 à(s) 16:20:. > The .travis.yml file is currently cloning the feature_input_output branch; > of the TestCases and the Tutorials folders. Should those branches be merged; > with develop in their respective repos? And consequently, should the; > .travis.yml file be changed to point to the develop branches?; >; > I ask because I am going to have to do something similar for #780; > <https://github.com/su2code/SU2/pull/780> and I am not sure what the; > process for doing that would be.; >; > —; > You are receiving this because you modified the open/close state.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/724?email_source=notifications&email_token=AJCOXN42AZJMAB5I3M7S5GDQMS33HA5CNFSM4H4D5RW2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEAFEF6I#issuecomment-537543417>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AJCOXN2S57FMOMAZNXV2ERTQMS33HANCNFSM4H4D5RWQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-537548522:220,Test,TestCases,220,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-537548522,1,['Test'],['TestCases']
Testability,"That issue appeared in other branches recently too, maybe something was updated in the test environment.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2142#issuecomment-1804176446:87,test,test,87,https://su2code.github.io,https://github.com/su2code/SU2/pull/2142#issuecomment-1804176446,1,['test'],['test']
Testability,"That looks like what might be missing, open a PR and attach the example you used to test please :+1:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2123#issuecomment-1703321774:84,test,test,84,https://su2code.github.io,https://github.com/su2code/SU2/issues/2123#issuecomment-1703321774,1,['test'],['test']
Testability,"That should do.; @economon by the way, what is the right way to add a regression test/example? Do I just add the cfg and appropriate instructions to the scripts, and the mesh and initialization to the Testcases repo? If so does the order matter? Thanks. EDIT: The question above was addressed during the 3rd annual SU2 meeting hackaton session (recording available and recommended!)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555#issuecomment-417612980:81,test,test,81,https://su2code.github.io,https://github.com/su2code/SU2/pull/555#issuecomment-417612980,2,"['Test', 'test']","['Testcases', 'test']"
Testability,That should not affect anyone (apart from making the regression tests faster). So I am merging this in.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/810#issuecomment-549881724:64,test,tests,64,https://su2code.github.io,https://github.com/su2code/SU2/pull/810#issuecomment-549881724,1,['test'],['tests']
Testability,That sounds great. After introducing those fixes I can definitely create a regression test to cover the fullmultigrid feature. Nevertheless there is still the segmentation fault problem when using mpirun. I have to delve into that.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1362#issuecomment-908279055:86,test,test,86,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-908279055,1,['test'],['test']
Testability,That sounds very nice! Thanks for this update. . Btw: I fixed the failing regression test in the TestCases repo. There was a whitespace missing in the reference file. That's why the file diff returned an error.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/448#issuecomment-334163260:85,test,test,85,https://su2code.github.io,https://github.com/su2code/SU2/pull/448#issuecomment-334163260,2,"['Test', 'test']","['TestCases', 'test']"
Testability,"That would be a nice addition! Can you also add a testcase (this flat plate testcase) for each of the cases, and add the cfg + regression tests to this repository? Maybe do the regression test on one of the coarsest meshes. Best would be to have set it up with a restart file that is completely converged.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2271#issuecomment-2073000650:50,test,testcase,50,https://su2code.github.io,https://github.com/su2code/SU2/pull/2271#issuecomment-2073000650,4,['test'],"['test', 'testcase', 'tests']"
Testability,"That's great! At least it gives us some margin to solve this issue. I agree that we should try to reduce the time of the tests. I think that @talbring approach a few months ago of reducing the number of iterations was the correct one; the tests don't need to be physically meaningful, but rather technically representative of the features. The compile time is also something that we should look into - we might need to have a telecom on this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/524#issuecomment-382299662:121,test,tests,121,https://su2code.github.io,https://github.com/su2code/SU2/issues/524#issuecomment-382299662,2,['test'],['tests']
Testability,"That's great, thanks. I've removed the multiple ffd finite differences test which isn't being used at the moment and will push up the changes shortly.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/569#issuecomment-417799776:71,test,test,71,https://su2code.github.io,https://github.com/su2code/SU2/pull/569#issuecomment-417799776,1,['test'],['test']
Testability,"That's really strange: The hybrid AD testcase `discadj_incomp_turb_NACA0012_sst` was ok after commit c68cf13, then I changed the stored residuals of unrelated testcases in 9d8f194 and the testcase fails... I'll run clang-format now, let's see what happens ;)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1346#issuecomment-895022534:37,test,testcase,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-895022534,3,['test'],"['testcase', 'testcases']"
Testability,"That's the idea! We should be aiming for many small classes with as few inputs as possible, so that we can easily unit test them. They should have a single responsibility. Many of our legacy classes are doing too many things and can be broken down into smaller classes, especially geometry, for instance. It will take us time to get there, but we're going in the right direction.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-520972324:119,test,test,119,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-520972324,1,['test'],['test']
Testability,"The .travis.yml file is currently cloning the feature_input_output branch of the TestCases and the Tutorials folders. Should those branches be merged with develop in their respective repos? And consequently, should the .travis.yml file be changed to point to the develop branches?. I ask because I am going to have to do something similar for #780 and I am not sure what the process for doing that would be.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-537543417:81,Test,TestCases,81,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-537543417,1,['Test'],['TestCases']
Testability,"The Aachen turbine test case added in #2158 needs another look, for two reasons. 1. The test case is subject to a yet unfixed memory access violation, as detected in the address sanitizer tests in #2246. We explored a fix in c97610b02bc1281eb766847e7ef5ed7ac451dfb9, that remedies the address sanitzer detections but also changes the test results notably. It is unclear yet whether this is the correct way to fix it.; 2. @bigfooted observed non-deterministic behaviour in #2260. This might or might not be related to the memory access violation. As soon as the memory access violation is fixed, address sanitizer testing can be re-enabled for the Aachen turbine test case (it was disabled in 0f3fc3ec900f1518c0c3ed26c3e971ae27fb974c). @alecappiello We can continue the discussion from #2246 here.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2276:19,test,test,19,https://su2code.github.io,https://github.com/su2code/SU2/issues/2276,6,['test'],"['test', 'testing', 'tests']"
Testability,"The Coupled RHT-CFD Adjoint did not compare the computed gradient file to the reference file. Instead, the test case passed without file comparison. ## Proposed Changes; Added a call to run_filediff to ensure the test is run.; Moved the Coupled RHT-CFD Adjoint test in serial_regression_AD.py down to the file difference test. ## Related Work; This fixes the related issue #1431 ; The reference gradient file in the test case repo needs a small modification. See su2code/TestCases/pull/84. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1437:107,test,test,107,https://su2code.github.io,https://github.com/su2code/SU2/pull/1437,7,"['Test', 'test']","['TestCases', 'test']"
Testability,The Github Actions checks passed after making two changes:. 1) https://github.com/su2code/SU2/pull/1619/commits/efe98fe6070a0cb51f1082a9599363786e4d65ea; I needed to lower the warnlevel due to problems in `externals/cgns/hdf5`.; Maybe the HDF5 files should be updated to a newer version ?! But it is not clear to me which version has been used in https://github.com/su2code/SU2/pull/1500. ; @MicK7 Do you have an idea how to fix this ?. 2) https://github.com/su2code/SU2/pull/1619/commits/26140223e5838a6856c0b3c02163a826256306b1; A workaround recommended at https://github.com/su2code/SU2/issues/1568#issuecomment-1083104460. 3) The regression tests [fail](https://github.com/su2code/SU2/runs/6387003184?check_suite_focus=true) because the new `test-su2` Docker image is `private`. I will need someone with higher privileges than me to make it public.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1619#issuecomment-1123614000:645,test,tests,645,https://su2code.github.io,https://github.com/su2code/SU2/pull/1619#issuecomment-1123614000,2,['test'],"['test-', 'tests']"
Testability,"The NACA 0012 test case (TestCases/rans/naca0012) does not converge with the provided config file if RESTART_SOL=NO, and the number of iterations is increased beyond 25. The test case should be updated to have a config file which converges ""out of the box""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/37:14,test,test,14,https://su2code.github.io,https://github.com/su2code/SU2/issues/37,3,"['Test', 'test']","['TestCases', 'test']"
Testability,"The Near-Field BC (useful for Equivalent Area based optimizations) was using the old MPI with buffering, and conservative variables instead of primitive variables. The new version has been tested using the LM1021 configuration.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/69:189,test,tested,189,https://su2code.github.io,https://github.com/su2code/SU2/pull/69,1,['test'],['tested']
Testability,"The PR branch for the testcase is from your personal repo, so indeed we need to merge that first. For branches in our repo you can change line 131 in the file .github/workflows/regression.yml to point to a different branch then develop",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2006#issuecomment-1500903524:22,test,testcase,22,https://su2code.github.io,https://github.com/su2code/SU2/pull/2006#issuecomment-1500903524,1,['test'],['testcase']
Testability,"The PR is approved. Do you see a button saying ""Merge pull request""?; You can use docker containers to run tests locally in a reproducible way, but I always used github to run all the tests for me, so yes open draft PRs as you work on more changes.; You forgot to add yourself to AUTHORS.md.; If you plan to contribute more I'll add you to the SU2 organization and then you can push branches to su2code instead of using your fork.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295#issuecomment-2220702583:107,test,tests,107,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295#issuecomment-2220702583,2,['test'],['tests']
Testability,"The Travis config should probably be updated to use Miniconda, running tests with both a Python 2 and Python 3 environment. Could take some influence from https://github.com/mwaskom/seaborn/blob/master/.travis.yml",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-321431468:71,test,tests,71,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-321431468,1,['test'],['tests']
Testability,"The added lines are a combination of the explicit Euler in CHeatSolver and the implicit Euler in CScalarSolver. Do you consider this approach to be correct?. For the testcase `SU2/TestCases/rans/naca0012/turb_NACA0012_sst.cfg`, explicit Euler for both flow and turbulence equations and CFL=0.1 converges from the restart solution. Some more details:; - `CHeatSolver` does something with `CVariable::Res_TruncError`, which is related to multigrid. Maybe additional adaptations are necessary here.; - `PrepareExplicitIteration` was copied from `PrepareImplicitIteration`, except for the computation of the matrix of the linear system. We can remove duplicate code here.; - `CompleteImplicitIteration` could be renamed as ""add `LinSysSol` to solution""; .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1435#issuecomment-966491089:166,test,testcase,166,https://su2code.github.io,https://github.com/su2code/SU2/pull/1435#issuecomment-966491089,2,"['Test', 'test']","['TestCases', 'testcase']"
Testability,"The answer to that is very simple. Look in the data set that is present in the szplt file. The z-coordinate is not in there anymore and consequently Tecplot takes the next variable, the density in this case, as the z-coordinate. Consequently you git a picture like you showed. The same is true for the field solution. Also there the z-coordinate is not present in the szplt file and hence you get a rather funny picture when you attempt to visualize this in 3D. But 2D visualization works just fine. In contrast the z-coordinate is stored in the vtu files, because the standard requires that. Hence you can still visualize this in 3D. Could you try a truly 3D test case to see if that visualizes fine? If so, please let us know such that we can close this issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1182#issuecomment-771407798:660,test,test,660,https://su2code.github.io,https://github.com/su2code/SU2/issues/1182#issuecomment-771407798,1,['test'],['test']
Testability,The branch can be tested by converting an existing testcase cgns file to hdf5.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1500#issuecomment-1015770968:18,test,tested,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/1500#issuecomment-1015770968,2,['test'],"['testcase', 'tested']"
Testability,The case is now also failing in #745. Tested it locally and found that the result is compiler dependent. GCC5.4 and GCC9 give different results.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/734#issuecomment-516389102:38,Test,Tested,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/734#issuecomment-516389102,1,['Test'],['Tested']
Testability,"The change in the numerics of the Jacobian calculation changed the results of the regression tests. That was expected, since improvements to the linear solve will change the residuals at each time step. If you look at the values from the tests, you'll see something like:. ```; ERROR: Difference between computed input and test_vals exceeded tolerance. TOL=0.000001; test_iter=50; test_vals (stored): -6.459421, -4.595755, 1.201830, -0.007146, 0.080516; sim_vals (computed): -6.459444, -4.595710, 1.201844, -0.007146, 0.080517; ```. The values using the new numerics are very close, but not within tolerance.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/491#issuecomment-355613118:93,test,tests,93,https://su2code.github.io,https://github.com/su2code/SU2/pull/491#issuecomment-355613118,2,['test'],['tests']
Testability,"The changes do fix #2241, thread sanitizer builds and tests execute without crashing. The workaround is only needed until a corresponding fix in the github runner is deployed, which will take around a week (https://github.com/actions/runner-images/issues/9491#issuecomment-1999433974). We could merge this now and roll it back later. @pcarruscag",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2242#issuecomment-1999760885:54,test,tests,54,https://su2code.github.io,https://github.com/su2code/SU2/pull/2242#issuecomment-1999760885,1,['test'],['tests']
Testability,"The commits so far address parts of OpDiLib's incorporation into the AD workflow and sort out some additional issues along the lines of the `disc_adj_fsi/Airfoild2d` testcase. They provide a testing environment that is stable with respect to OpDiLib and can already be used for figuring out some of the more SU2 specific issues. However, they require that SU2 is built with a compiler with OMPT support, for example an up-to-date version of `clang++`, hence the failing CI builds.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1214#issuecomment-788161170:166,test,testcase,166,https://su2code.github.io,https://github.com/su2code/SU2/pull/1214#issuecomment-788161170,2,['test'],"['testcase', 'testing']"
Testability,"The computed values of `discadj_arina2k` in `hybrid_regression_AD` are suspiciously close to the expected values in `parallel_regression_AD`. Could the reference values be wrong? If I test with `-Denable-mixedprec=false` locally, the same holds true for `discadj_fea`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1294#issuecomment-874400653:184,test,test,184,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-874400653,1,['test'],['test']
Testability,"The config file is a start, but for a thorough investigation a full test case, i.e. including a grid, is preferable.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/533#issuecomment-388726367:68,test,test,68,https://su2code.github.io,https://github.com/su2code/SU2/issues/533#issuecomment-388726367,1,['test'],['test']
Testability,"The configure looks good to me now. Did you do the test for the viscous ONERA M6? It would be good to know what the speed up is here. Anyway, if you can merge with the latest develop version, it can be merged in as far as I am concerned.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/543#issuecomment-416828129:51,test,test,51,https://su2code.github.io,https://github.com/su2code/SU2/pull/543#issuecomment-416828129,1,['test'],['test']
Testability,"The corners warning is fine. I added the ability to specify corner points for sharp features that the user wants to maintain. For example, in an airfoil test case I want to make sure the sharp trailing edge at node 512 is maintained, so I can manually add; ```; NCORNERS= 1; 1 512; ```; to the end of my mesh. It's not necessary, though, and AMG performs ridge detection to identify any features anyway. I assume since it built and (kinda) ran that you managed to fix your python setup through your aliases?. What was the specific error that you got? I probably should have also mentioned that I've changed a lot of options since updating from Vic's old code. Here are the list of required options (values from my test case):; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```; Some optional options:; ```; % Numerical method for Hessian reconstruction in goal-oriented adaptation; % Currently only Green-Gauss; NUM_METHOD_HESS= GREEN_GAUSS; % Value for ITER for the flow solver at each level; PYADAP_FLOW_ITER= (2999, 4999, 6999); % Value for ITER for the adjoint solver at each level; PYADAP_ADJ_ITER= (2999, 4999, 6999); % Value for CFL_NUMBER for the adjoint solver at each level; PYADAP_CFL= (10.0, 15.0, 20.0); % Background mesh containing fine surface representation; % Can be either a .su2 or .meshb (GMF) file; % If not specified, the baseline mesh is used; PYADAP_BACK= rae2822_euler_4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619412341:153,test,test,153,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619412341,2,['test'],['test']
Testability,"The current version of the HLLC solver (the one in the develop branch) computes the jacobians terms using Roe approach. The implementation I'm testing uses instead the direct formulation. This of course changes a lot the behaviour of the implicit scheme which now seems to be less robust, at least for this test case.; Today I made some tests and what I propose is to modify the config file in order to run a non-dimensional simulation with a CFL = 1.0. Would that be possible?; Tomorrow I will look again for bugs in my branch. Just another small question: I saw that in the for cycle at line 3674 of solver direct mean (of develop branch), in the part regarding the low mach number correction, vel_i_corr and vel_j_corr are declared as 3 element arrays. The code cycle over [iDim+1] for those arrays. Could this bring to a vector overflow in the 3D case?. Cheers,; Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/232#issuecomment-182496475:143,test,testing,143,https://su2code.github.io,https://github.com/su2code/SU2/pull/232#issuecomment-182496475,3,['test'],"['test', 'testing', 'tests']"
Testability,"The degrees are specified by ""logic"" axis (i j k), i.e. the result depends in the order you specify the corners in FFD_DEFINITION, e.g. your geometry has the span aligned with X, whereas in the first image the span is aligned with Y. Personally I find it confusing too, I just end up swapping things around until I get what I want.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/977#issuecomment-626871785:30,log,logic,30,https://su2code.github.io,https://github.com/su2code/SU2/issues/977#issuecomment-626871785,1,['log'],['logic']
Testability,"The developer who worked on it was @frx-wintermute in #1951 ; A lot of those packages are header-only, not compiled libraries, if you use different versions than the ones we use in our regression tests you have no guarantees that the code will work properly, and it seems you are mostly interested in stability.; If you want to make changes to the meson.build script to look for local versions of libraries like cgns, parmetis, etc. see e.g. https://github.com/su2code/SU2/discussions/2064; We also have examples like this:; ```; pastix_dep = dependency('pastix', required: false). if not pastix_dep.found(); pastix_root = get_option('pastix_root')+'/install'; scotch_root = get_option('scotch_root')+'/lib'; pastix_dep = declare_dependency(include_directories: pastix_root,; link_args: [ '-L../'+pastix_root, '-L../'+scotch_root,; '-lpastix', '-lscotch', '-lptscotch', '-lptscotcherr',; '-lm', '-lrt', '-lpthread']); endif; su2_deps += pastix_dep; ```; where we try to use pkg-config and fall back to specifying paths. I recommend using pkg-config whenever possible.; If either you or @frx-wintermute are interested in complementing the feature by adding an option to prefer system libraries (via pkg-config, no paths because 99.9% of users will not know what to do) instead of the versions shipped with SU2, please go ahead and open a PR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086#issuecomment-1646018871:196,test,tests,196,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086#issuecomment-1646018871,1,['test'],['tests']
Testability,"The file diffs are also not correct on other PRs, they do display properly; if you look at particular commits it seems. On Tue, 19 Nov 2019, 10:35 Tim Albring, <notifications@github.com> wrote:. > I wonder why the 'chore' label was removed by @talbring; > <https://github.com/talbring> as I would categorize this PR as such?; >; > First of all: the topic should be a little bit more descriptive if it; > should be listed in the change log. Second: there was already a; > no_changelog. Having both makes no sense and actually I don't know what; > the release drafter is doing then :D; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/818?email_source=notifications&email_token=AJCOXN4ZTAKXP56DWBNEBDLQUO6PJA5CNFSM4JN55UV2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEENWNMQ#issuecomment-555443890>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXNY5DY2TBI7OSLJI4ADQUO6PJANCNFSM4JN55UVQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/818#issuecomment-555477603:435,log,log,435,https://su2code.github.io,https://github.com/su2code/SU2/pull/818#issuecomment-555477603,1,['log'],['log']
Testability,"The folks at Travis CI have kindly doubled both our ""hard"" timeout and ""silence"" timeout limits up to 140 min. and 20 min., respectively. We should be safely within limits for some time to come. . That being said, rather than relying on the increases, I would really encourage that we find some better approaches for reducing total test time, as we will continue to add more cases. It is not good for our pace of development that we have to wait over an hour to get the results of the tests. I think that a test time of approx. 10-20 min. would be more ideal so that we can iterate much more quickly. I suspect that attacking our compile time would be most helpful. Any ideas and discussion most welcome.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/524#issuecomment-382152114:332,test,test,332,https://su2code.github.io,https://github.com/su2code/SU2/issues/524#issuecomment-382152114,3,['test'],"['test', 'tests']"
Testability,"The following tasks have been finished:; - First issue: Missing initialization in `CTurbSSTSolver()`, fixed in c06e65e; - Second issue: Missing update of `FinestMesh`, fixed in a458251 ; - Third issue: Probably related to #1430, (partially?) fixed in f6f986e . The following optional tasks remain:; - Fourth issue: Missing update of `Convergence_FullMG`, not fixed yet.; - Regression test: E.g. as proposed in https://github.com/su2code/SU2/pull/1362#issuecomment-964163647, not added yet",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1362#issuecomment-1114979082:384,test,test,384,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-1114979082,1,['test'],['test']
Testability,"The ft2 term was a ""not a very successful"" attempt to allow computation of transitional flow or relaminarization, where a region exists without turbulent diffusion. During the time that passed since the nineties, it was commonly considered ineffective. I think Philipe also agrees with that. That way, though historically it is not correct, I think the basic SA model should be with ft2=0; I appreciate your effort. I put some order and logic in a combination that creates a lot of misunderstanding by many; Best,; Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1364#issuecomment-917575455:437,log,logic,437,https://su2code.github.io,https://github.com/su2code/SU2/issues/1364#issuecomment-917575455,1,['log'],['logic']
Testability,"The jones_turbocharger_restart case was set to use adaptive CFL coupled with CFL turbulence Reduction thus changes in the results are expected , I ran the case a few thousand steps and the case seems to converge. Therefore I am allowing myself to change test results leaving the configuration setting as is.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295#issuecomment-2185970973:254,test,test,254,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295#issuecomment-2185970973,1,['test'],['test']
Testability,"The limiters were re-implemented in #834, if anything pops up do let me know.; The current (and previous) implementation just consists of taking the minimum value of the limiter function over all edges connected to a vertex...; For your specific case the limiters are active in the regions with oscillations.; Curiously if you run first order the oscillations do not disappear completely (but they are smaller) so I think you are mostly seeing artifacts of AUSM (or the mesh since the oscillations align with the grid lines).; There are not-so-subtle differences between how AUSM and AUSM+UP combine the left and right states (especially on coarse grids), it could be worth trying to convert AUSM to the general formulation of AUSM+UP(1/2) and SLAU(1/2) we currently have. I can help, but I do not have time to run the tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/917#issuecomment-604495790:819,test,tests,819,https://su2code.github.io,https://github.com/su2code/SU2/issues/917#issuecomment-604495790,1,['test'],['tests']
Testability,"The logic when computing the Laplacians (used for 4th order dissipation) is that for points on a physical boundary, only other physical boundaries are considered when adding solution differences.; I think this is to avoid adding very large differences for wall points. However when we have a point at a wall-symmetry intersection, the wall point will receive contributions from the symmetry points since that is also a ""physical boundary"".; That is my hypothesis anyway, anyone care to run some tests? :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1125#issuecomment-742006798:4,log,logic,4,https://su2code.github.io,https://github.com/su2code/SU2/issues/1125#issuecomment-742006798,2,"['log', 'test']","['logic', 'tests']"
Testability,"The low Mach number correction scheme was developed with the HLLC solver in mind; which is the only reason HLLC is used in the test case. The correction should work with any full, non-preconditioned Riemann solver, so the test case could use the Roe solver. However, I think there needs to be a well-defined reason for changing the test case. The HLLC solver worked for that test case when it was set up, do you know why the recent changes have caused it to fail?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/232#issuecomment-182094639:127,test,test,127,https://su2code.github.io,https://github.com/su2code/SU2/pull/232#issuecomment-182094639,4,['test'],['test']
Testability,"The merged branch is deleted and then the test action is not able to checkout; ""error: pathspec 'refs/pull/1249/merge' did not match any file(s) known to git.""; Because the regressions work by cloning su2 master and then doing ""git checkout""; There was zero chance of breaking any testcases with those changes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1249#issuecomment-811449617:42,test,test,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/1249#issuecomment-811449617,2,['test'],"['test', 'testcases']"
Testability,"The most critical part is the unsteady FSI, but that actually takes its time... You think it would be fine to compare the results after just few iterations for a testcase? We could use one of the simulations in the tutorial. Thanks for the interest in the youtube video!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124#issuecomment-746398712:162,test,testcase,162,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-746398712,1,['test'],['testcase']
Testability,"The new wall distance using ADT is a great contribution to SU2, incredible useful to run large grids. Unfortunately, AD mode doesn't work properly and it is not possible to run any medium or large grid (>~1.5MCells). This is an important limitation. I think (not really sure) it is a memory issue... the AD of this subroutine requires too much memory and kills the code. In fact, the original Wall Distance subroutine uses passivedouble to fix that issue. Anyway, for the time being, the develop branch should work properly (direct and adjoint mode). And, until we fix AD implementation of this subrotuine, the traditional Wall distance subroutine is is going to be used. I have added #ifdef ADT_WALLDISTANCE to test the ADT distance (AD mode). Thanks and sorry for the extra work. PS.- If the code passes the tests, I think it is important to accept the change as soon as possible. As I said before, the develop branch (AD mode) is not working for moderate size grids.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/340:712,test,test,712,https://su2code.github.io,https://github.com/su2code/SU2/pull/340,2,['test'],"['test', 'tests']"
Testability,"The objective functions SURFACE_STATIC_PRESSURE and SURFACE_TOTAL_PRESSURE do not work with the shape_optimization.py script. . This has been verified by running the python optimization using the test case ""multiobjective_wedge"" in the optimization_euler test case folder, using the provided script (""inv_wedge_ROE_multiobj.cfg""). I get the following error: . >Traceback (most recent call last):; File ""/usr/local/bin/shape_optimization.py"", line 183, in <module>; main(); File ""/usr/local/bin/shape_optimization.py"", line 98, in main; options.nzones ); File ""/usr/local/bin/shape_optimization.py"", line 155, in shape_optimization; project = SU2.opt.Project(config,state); File ""/usr/local/bin/SU2/opt/project.py"", line 129, in __init__; group = historyOutFields[this_obj]['GROUP']; KeyError: 'SURFACE_TOTAL_PRESSURE'. The same happens if setting these keywords for the constraints. My environment:. OpenSuse Leap 15.1; Python 3.6.10; gcc 7.5.0; OpenMPI 1.10.7; SU2 v7.0.6",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1075:196,test,test,196,https://su2code.github.io,https://github.com/su2code/SU2/issues/1075,2,['test'],['test']
Testability,"The option ""OPT_COMBINE_OBJECTIVE = YES"" does not work for SOLVER=INC_RANS and SOLVER=INC_EULER (and possibly others). ; The issue seems to be that COMBO is not supported in the list of history output:. > Info: Ignoring the following history output groups:; COMBO. When using SOLVER=RANS and SOLVER=EULER, COMBO is written to the history file correctly. Tested with SU2 v 7.1.0 on the testcase multiobjective_wedge (cfg file inv_wedge_ROE_multiobj_combo.cfg).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1202:354,Test,Tested,354,https://su2code.github.io,https://github.com/su2code/SU2/issues/1202,2,"['Test', 'test']","['Tested', 'testcase']"
Testability,"The output isn't leak-free otherwise. Those were just a couple of the bigger ones that were easy to track down. I think the rest are mainly CoDi/MeDi-related leaks, though. Keep in mind I ran this on feature_adap_sst (the line numbers below are for this branch though) so some of these might be resolved:; - A leak in C2DContainers that Pedro already fixed in #895 so I was gonna leave it alone; - Probably the largest remaining leak is from the calls to `AD::StartExtFunc()`, `AD::SetExtFuncIn()`, and `AD::SetExtFuncOut()` in CSysSolve.cpp during `DirectRun()`. These are all related to CoDi's ExternalFunctionHelper; - Line 537 in adt_structure.cpp (`CADTElemClass::CADTElemClass()`). This seems to be related to various functions in MeDi including `createLinearIndexCounts()`, `AMPI_Allgatherv()` (might be a false positive), and `ADToolImplCommon()`; ```; SU2_MPI::Allgatherv(val_coor.data(), sizeLocal, MPI_DOUBLE, coorPoints.data(),; recvCounts.data(), displs.data(), MPI_DOUBLE, MPI_COMM_WORLD);; ```; - Line 715 in CGeometry.cpp (`CGeometry::PostP2PSends()`). This is only called when val_reverse is false, which is during`SetDependencies()` and `DirectRun()`. These all seem to be related to `ADToolImplCommon()`; ```; SU2_MPI::Isend(&(bufD_P2PSend[offset]), count, MPI_DOUBLE,; dest, tag, MPI_COMM_WORLD, &(req_P2PSend[iMessage]));; ```; I've attached the valgrind log from one of the cores below, in case anyone really wants to parse it; [vg.txt](https://github.com/su2code/SU2/files/4459485/vg.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/929#issuecomment-611838976:1376,log,log,1376,https://su2code.github.io,https://github.com/su2code/SU2/pull/929#issuecomment-611838976,1,['log'],['log']
